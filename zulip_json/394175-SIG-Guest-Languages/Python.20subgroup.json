[
    {
        "content": "<p>The Python subgroup will be meeting at <time datetime=\"2023-08-31T19:00:00Z\">2023-08-31T13:00:00-06:00</time> today at <a href=\"https://meet.jit.si/PythonComponentTooling\">https://meet.jit.si/PythonComponentTooling</a>.  Agenda is here: <a href=\"https://hackmd.io/hazcX6vkT0e-90nqKOvEeg\">https://hackmd.io/hazcX6vkT0e-90nqKOvEeg</a>.  It's pretty open-ended; my main goal is to decide what projects to tackle next now that <code>componentize-py</code> is starting to mature.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://meet.jit.si/PythonComponentTooling\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/050c7e43c0fc5dfcc5ba4105d6e634252586c236\\/68747470733a2f2f6d6565742e6a69742e73692f696d616765732f6a697473696c6f676f2e706e673f763d31)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://meet.jit.si/PythonComponentTooling\" title=\"Jitsi Meet\">Jitsi Meet</a></div><div class=\"message_embed_description\">Join a WebRTC video conference powered by the Jitsi Videobridge</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/hazcX6vkT0e-90nqKOvEeg\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/hazcX6vkT0e-90nqKOvEeg\" title=\"Python Subgroup (Guest Languages SIG) Meeting 2023-08-31 - HackMD\">Python Subgroup (Guest Languages SIG) Meeting 2023-08-31 - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 388350907,
        "sender_full_name": "Joel Dice",
        "timestamp": 1693495943
    },
    {
        "content": "<p>The Python subgroup will be meeting at <time datetime=\"2023-09-14T19:00:00Z\">2023-09-14T13:00:00-06:00</time> at <a href=\"https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09\">https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09</a>.  Agenda (sparse as it is) is here: <a href=\"https://hackmd.io/mLLo1CduQLeGk9h05WGFAw\">https://hackmd.io/mLLo1CduQLeGk9h05WGFAw</a>.  Feel free to add items.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/mLLo1CduQLeGk9h05WGFAw\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/mLLo1CduQLeGk9h05WGFAw\" title=\"Python Subgroup (Guest Languages SIG) Meeting 2023-09-14 - HackMD\">Python Subgroup (Guest Languages SIG) Meeting 2023-09-14 - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 390995022,
        "sender_full_name": "Joel Dice",
        "timestamp": 1694715324
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"627382\">@Hood Chatham</span> apparently all SciPy tests are passing on LFortran: <a href=\"#narrow/stream/206238-general/topic/Can.20WASM.20be.20compiled.20to.20a.20standalone.20binary.3F/near/393576378\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/Can.20WASM.20be.20compiled.20to.20a.20standalone.20binary.3F/near/393576378</a></p>",
        "id": 393579961,
        "sender_full_name": "Joel Dice",
        "timestamp": 1695854065
    },
    {
        "content": "<p>I think if I read that comment correctly, he means that he can \"fully compile several of the Fortran modules\" of scipy \"and all tests pass\" for the modules that can be compiled. But it does sound like it's coming along very well =)</p>",
        "id": 393590052,
        "sender_full_name": "Hood Chatham",
        "timestamp": 1695861162
    },
    {
        "content": "<p>As far as I know, LFORTRAN still can't quite generate position independent code but I'm pretty sure it's due to some trivial mistake</p>",
        "id": 393590181,
        "sender_full_name": "Hood Chatham",
        "timestamp": 1695861249
    },
    {
        "content": "<p>I was able to produce PIC binaries by first asking it to emit llvm IR and then compiling that</p>",
        "id": 393590202,
        "sender_full_name": "Hood Chatham",
        "timestamp": 1695861272
    },
    {
        "content": "<p>In other news, it looks like pmatos maybe fixed the problems with wasm table access builtins and PIC:<br>\n<a href=\"https://github.com/llvm/llvm-project/issues/65191#issuecomment-1737244995\">https://github.com/llvm/llvm-project/issues/65191#issuecomment-1737244995</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/llvm/llvm-project/issues/65191#issuecomment-1737244995\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0313fa49b92b4a119552763fd18098f209842846\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643732383961313130306539613363633831613232393431666636623965396262666631613938666137343434323532396465363138633739383864316338662f6c6c766d2f6c6c766d2d70726f6a6563742f6973737565732f3635313931)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/llvm/llvm-project/issues/65191#issuecomment-1737244995\" title=\"clang &quot;cannot select&quot; when using wasm table builtins and -fPIC · Issue #65191 · llvm/llvm-project\">clang \"cannot select\" when using wasm table builtins and -fPIC · Issue #65191 · llvm/llvm-project</a></div><div class=\"message_embed_description\">Example: Source file: static __externref_t table[0]; __externref_t test_builtin_wasm_table_get() { return __builtin_wasm_table_get(table, 0); } Compiling as follows works: clang -c -target wasm32 -...</div></div></div>",
        "id": 393590268,
        "sender_full_name": "Hood Chatham",
        "timestamp": 1695861326
    },
    {
        "content": "<p>We'll be meeting at <time datetime=\"2023-09-28T19:00:00Z\">2023-09-28T13:00:00-06:00</time> today.  Agenda and notes here: <a href=\"https://hackmd.io/uhmQG41TS0mRtOTP9ikbUA\">https://hackmd.io/uhmQG41TS0mRtOTP9ikbUA</a>.  <a href=\"https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09\">https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/uhmQG41TS0mRtOTP9ikbUA\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/uhmQG41TS0mRtOTP9ikbUA\" title=\"Python Subgroup (Guest Languages SIG) Meeting 2023-09-28 - HackMD\">Python Subgroup (Guest Languages SIG) Meeting 2023-09-28 - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 393768285,
        "sender_full_name": "Joel Dice",
        "timestamp": 1695920545
    },
    {
        "content": "<p>I'll probably miss today's meeting. My update is I'm working on a script to make building CPython easier.</p>",
        "id": 393773363,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1695922502
    },
    {
        "content": "<p>CPython 3.12.0 WASI build <a href=\"https://github.com/brettcannon/cpython-wasi-build/releases/tag/v3.12.0\">https://github.com/brettcannon/cpython-wasi-build/releases/tag/v3.12.0</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/brettcannon/cpython-wasi-build/releases/tag/v3.12.0\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/29e91fd77213fb5a5fb9b5fab044bb42ae50c0a5\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336238643861613138313264653765323965356334356265306565623865353565303134616434376531626435373431623066313235376230353536666530322f627265747463616e6e6f6e2f63707974686f6e2d776173692d6275696c642f72656c65617365732f7461672f76332e31322e30)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/brettcannon/cpython-wasi-build/releases/tag/v3.12.0\" title=\"Release CPython 3.12.0 w/ WASI SDK 20 · brettcannon/cpython-wasi-build\">Release CPython 3.12.0 w/ WASI SDK 20 · brettcannon/cpython-wasi-build</a></div><div class=\"message_embed_description\">Unofficial WASI builds of CPython. Contribute to brettcannon/cpython-wasi-build development by creating an account on GitHub.</div></div></div>",
        "id": 394919932,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1696455475
    },
    {
        "content": "<p>How is Python generating binding for WIT ?</p>",
        "id": 395061701,
        "sender_full_name": "Scott Waye",
        "timestamp": 1696517764
    },
    {
        "content": "<p>CPython currently targets WASI Preview 1 (via <code>wasi-sdk</code>), which is not based on WIT.  If you want to target WASI Preview 2 (which <em>is</em> based on WIT), you can use <a href=\"https://github.com/bytecodealliance/componentize-py\">https://github.com/bytecodealliance/componentize-py</a> (which uses CPython but also supports targeting arbitrary WIT worlds)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2be5a2a19f0df34eb6dc29574b90664aa1ef9565\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353039656563386534643865396463306362613835626134393436376564626538383066343338313963313730313232386635626331653439663334303137352f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py\" title=\"GitHub - bytecodealliance/componentize-py\">GitHub - bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div>",
        "id": 395063895,
        "sender_full_name": "Joel Dice",
        "timestamp": 1696518443
    },
    {
        "content": "<p>I see, so you have a code generator in Rust but you decided not to create a backend to wit-bindgen, is that right?</p>",
        "id": 395087125,
        "sender_full_name": "Scott Waye",
        "timestamp": 1696526053
    },
    {
        "content": "<p>Correct.  The main reason for that is most of the code <code>componentize-py</code> generates is Wasm, not Python.  The intention is that part could be reused for other high-level languages.</p>",
        "id": 395088283,
        "sender_full_name": "Joel Dice",
        "timestamp": 1696526498
    },
    {
        "content": "<p>(i.e. all the lifting and lowering code is Wasm, with calls out to CPython to construct and deconstruct Python objects)</p>",
        "id": 395088502,
        "sender_full_name": "Joel Dice",
        "timestamp": 1696526572
    },
    {
        "content": "<p>Interesting, thanks.  Do you know if javascript it the same by any chance?</p>",
        "id": 395092685,
        "sender_full_name": "Scott Waye",
        "timestamp": 1696528285
    },
    {
        "content": "<p>No, I think <code>componentize-js</code> currently generates JS code for lifting and lowering.  If <span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span> agrees, we could split the Wasm lift/lower generator out of <code>componentize-py</code> and reuse it in <code>componentize-js</code>.  It would be a pretty big refactor, though.</p>",
        "id": 395093252,
        "sender_full_name": "Joel Dice",
        "timestamp": 1696528546
    },
    {
        "content": "<p><code>componentize-js</code> <em>is</em> similar to <code>componentize-py</code> in that it has its own binding generator which is not part of <code>wit-bindgen</code>, if that's what you meant to ask.</p>",
        "id": 395093666,
        "sender_full_name": "Joel Dice",
        "timestamp": 1696528703
    },
    {
        "content": "<p>I think the trend is that each guest language tool for producing components will generate bindings its own way rather than have wit-bindgen do it.  They'll all presumably use wit-parser and maybe share other code, but I don't think wit-bindgen will necessarily be a central repository for all bindings generators.</p>",
        "id": 395093948,
        "sender_full_name": "Joel Dice",
        "timestamp": 1696528809
    },
    {
        "content": "<p>Ok, there is a preference from the dotnet runtime team to follow a protobuf/protoc approach, like wit-bindgen.  The c# approach is currently at this crossroads so I'm trying to gather opinions so thanks for the input.  If anyone wants to chip in directly: <a href=\"https://github.com/dotnet/runtimelab/issues/2409\">https://github.com/dotnet/runtimelab/issues/2409</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dotnet/runtimelab/issues/2409\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/821b0a031137917f29a0047e8dbf81272bf7e54e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326532623531666334393737643939326134386239306130386235613632356430653536336466383064323232323065396161363363653836626530616134362f646f746e65742f72756e74696d656c61622f6973737565732f32343039)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dotnet/runtimelab/issues/2409\" title=\"NativeAOT-LLVM: Question: Does dotnet/runtimelab want to host WIT code gen issues · Issue #2409 · dotnet/runtimelab\">NativeAOT-LLVM: Question: Does dotnet/runtimelab want to host WIT code gen issues · Issue #2409 · dotnet/runtimelab</a></div><div class=\"message_embed_description\">Hi, I started a discussion on https://bytecodealliance.zulipchat.com/#narrow/stream/394175-SIG-Guest-Languages about where to host a place where the interested parties can discuss the way forward f...</div></div></div>",
        "id": 395096908,
        "sender_full_name": "Scott Waye",
        "timestamp": 1696530003
    },
    {
        "content": "<p>Does anyone have any agenda items for today's Python subgroup meeting?  If not, I was thinking of canceling it.</p>",
        "id": 396290972,
        "sender_full_name": "Joel Dice",
        "timestamp": 1697118234
    },
    {
        "content": "<p>I went ahead and cancelled it.  My only update is that <code>componentize-py</code> now supports resources.  Haven't been doing anything Python related since then.</p>",
        "id": 396338839,
        "sender_full_name": "Joel Dice",
        "timestamp": 1697133483
    },
    {
        "content": "<p>We'll be meeting at <time datetime=\"2023-10-26T19:00:00Z\">2023-10-26T13:00:00-06:00</time> today.  Agenda here: <a href=\"https://hackmd.io/Wu5-BHBfTdq_gri90BdRiw\">https://hackmd.io/Wu5-BHBfTdq_gri90BdRiw</a>.  Zoom link: <a href=\"https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09\">https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/Wu5-BHBfTdq_gri90BdRiw\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/Wu5-BHBfTdq_gri90BdRiw\" title=\"Python Subgroup (Guest Languages SIG) Meeting 2023-10-26 - HackMD\">Python Subgroup (Guest Languages SIG) Meeting 2023-10-26 - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 398725034,
        "sender_full_name": "Joel Dice",
        "timestamp": 1698337561
    },
    {
        "content": "<p>...er, maybe.  Having technical issues logging into Zoom under the BA account.  The credentials are no longer showing up in my BA 1password account.</p>",
        "id": 398749883,
        "sender_full_name": "Joel Dice",
        "timestamp": 1698346862
    },
    {
        "content": "<p>Sorry, it might not happen after all.  I'm not able to log in to the host account, and having trouble finding anyone who can help on short notice.</p>",
        "id": 398751075,
        "sender_full_name": "Joel Dice",
        "timestamp": 1698347242
    },
    {
        "content": "<p>My update was going to be <code>wasi.py</code> requires a quick validation by me on macOS and then adding support to specify the command for the WASI runtime used at Python build time (wasmtime 14 moved that from a nice-to-have to a requirement).</p>",
        "id": 398752228,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1698347753
    },
    {
        "content": "<p>We're in now!</p>",
        "id": 398752233,
        "sender_full_name": "Joel Dice",
        "timestamp": 1698347755
    },
    {
        "content": "<p>If I'm reading this right (I'll admit I've only skimmed it), SciPy can now be built by the LLVM 17 release of Flang for Windows and pass 100% of the test suite: <a href=\"https://labs.quansight.org/blog/building-scipy-with-flang\">https://labs.quansight.org/blog/building-scipy-with-flang</a>.  Might be worth using Flang to target Wasm and see what happens.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://labs.quansight.org/blog/building-scipy-with-flang\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4763fd8f9fe33ae2b6582a4c9a0607e28c0db18d\\/68747470733a2f2f6c6162732d6734396d63737939632d7175616e73696768742e76657263656c2e6170702f706f7374732f6275696c64696e672d73636970792d776974682d666c616e672f73636970795f696e64792e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://labs.quansight.org/blog/building-scipy-with-flang\" title=\"The 'eu' in eucatastrophe – Why SciPy builds for Python 3.12 on Windows are a minor miracle\n\">The 'eu' in eucatastrophe – Why SciPy builds for Python 3.12 on Windows are a minor miracle\n</a></div><div class=\"message_embed_description\">Moving SciPy to Meson meant finding a different Fortran compiler on Windows, which was particularly tricky to pull off for conda-forge. This blog tells the story about how things looked pretty grim for the Python 3.12 release, and how things ended up working out just in the nick of time.</div></div></div>",
        "id": 401044779,
        "sender_full_name": "Joel Dice",
        "timestamp": 1699489072
    },
    {
        "content": "<p>We'll meet at <time datetime=\"2023-11-09T20:00:00Z\">2023-11-09T13:00:00-07:00</time>  today.  Could be a short one if there's not a lot to discuss.  Feel free to add to the agenda: <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">https://hackmd.io/3ZktfALiSZWn41ad7y3gnA</a><br>\nZoom link: <a href=\"https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09\">https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"Python Subgroup (Guest Languages SIG) Meetings - HackMD\">Python Subgroup (Guest Languages SIG) Meetings - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 401194313,
        "sender_full_name": "Joel Dice",
        "timestamp": 1699547578
    },
    {
        "content": "<p>I'm assuming there's no meeting tomorrow due to US Thanksgiving?</p>",
        "id": 403637872,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1700674586
    },
    {
        "content": "<p>Correct; I'll cancel it.</p>",
        "id": 403637975,
        "sender_full_name": "Joel Dice",
        "timestamp": 1700674642
    },
    {
        "content": "<p>We'll be meeting at <time datetime=\"2023-12-07T20:00:00Z\">2023-12-07T13:00:00-07:00</time> today.  Zoom link: <a href=\"https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09\">https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09</a>  Agenda: <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">https://hackmd.io/3ZktfALiSZWn41ad7y3gnA</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"Python Subgroup (Guest Languages SIG) Meetings - HackMD\">Python Subgroup (Guest Languages SIG) Meetings - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 406577048,
        "sender_full_name": "Joel Dice",
        "timestamp": 1701965879
    },
    {
        "content": "<p>Does anyone have agenda items for today's Python meeting?  If not, I'll cancel it.</p>",
        "id": 411217378,
        "sender_full_name": "Joel Dice",
        "timestamp": 1704384290
    },
    {
        "content": "<p>Anyone have agenda items for today's Python meeting?</p>",
        "id": 416604242,
        "sender_full_name": "Joel Dice",
        "timestamp": 1705594409
    },
    {
        "content": "<p>how great you all are?</p>",
        "id": 416619871,
        "sender_full_name": "Ralph",
        "timestamp": 1705599656
    },
    {
        "content": "<p>prolly too late now, but.....</p>",
        "id": 416619893,
        "sender_full_name": "Ralph",
        "timestamp": 1705599662
    },
    {
        "content": "<p>I'm going to go ahead and cancel the meeting since there are no agenda items and I enjoy cancelling meetings.</p>\n<p>Relatedly: In the past few meetings we _didn't_ cancel, we mostly discussed the various things we _should_ do but which nobody currently has bandwidth to work on:</p>\n<ul>\n<li>Build and publish WASI wheels for popular packages to a public index so devs can <code>pip install</code> them easily<br>\n    - Porting those packages can range from pretty trivial (e.g. a package with a simple, already very portable C native extention) to extraordinarily difficult (e.g. SciPy and anything else involving Fortran).<br>\n    - This is highly parallelizable work, but also an enormous amount of effort if we want to support e.g. all the packages Pyodide supports</li>\n<li>Improve the <code>componentize-py</code> dev experience (e.g. automatically create a virtual environment, install all required packages to it, and build the component)</li>\n</ul>\n<p>In short, we're stalled right now -- lots of work to do, but no bandwidth to do it.  Until we move out of that state, I don't expect we'll have much to discuss.</p>",
        "id": 416633707,
        "sender_full_name": "Joel Dice",
        "timestamp": 1705605140
    },
    {
        "content": "<p>I have a sneaking suspicion that there will be a lull having finished the project work... while people breathe and test things out.</p>",
        "id": 416636618,
        "sender_full_name": "Ralph",
        "timestamp": 1705606456
    },
    {
        "content": "<p>I built some samples and passed them around and had some real success on jco and wasmtime and spin for example, and the more that happens the more there will be some volunteers for the next tasks, porting wheels and so forth....</p>",
        "id": 416636698,
        "sender_full_name": "Ralph",
        "timestamp": 1705606503
    },
    {
        "content": "<p>I think the ms python peeps are going to be motivated, so I hope to help enable them to realize that they can really help push things forward by helping.</p>",
        "id": 416636881,
        "sender_full_name": "Ralph",
        "timestamp": 1705606569
    },
    {
        "content": "<p>&lt;crossed fingers here /&gt;</p>",
        "id": 416636904,
        "sender_full_name": "Ralph",
        "timestamp": 1705606578
    },
    {
        "content": "<p>you have issues for steps marked out?</p>",
        "id": 416636948,
        "sender_full_name": "Ralph",
        "timestamp": 1705606601
    },
    {
        "content": "<p>I'll try to find people!</p>",
        "id": 416636987,
        "sender_full_name": "Ralph",
        "timestamp": 1705606615
    },
    {
        "content": "<p><code>componentize-py</code> has an up-to-date issue list, and I'm always happy to mentor new devs: <a href=\"https://github.com/bytecodealliance/componentize-py/issues\">https://github.com/bytecodealliance/componentize-py/issues</a></p>\n<p>Otherwise, the big effort is porting packages to WASI, and I'm not sure how to mark that out; i.e. which packages to prioritize.  I'm still quite new to the whole Python ecosystem, so I don't even know what the most popular packages are.  I guess we could make a checklist out of the list of packages Pyodide supports (<a href=\"https://github.com/pyodide/pyodide/tree/main/packages\">https://github.com/pyodide/pyodide/tree/main/packages</a>), but again I'm not sure how to order it by priority.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py/issues\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/72043a6453cd05453a273d7d29cfd6fa005c676d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366363313732626430393438613865646561663331613335323431383233373133613139646433613237356164346463633538396536356636313235333635362f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py/issues\" title=\"Issues · bytecodealliance/componentize-py\">Issues · bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div>",
        "id": 416640408,
        "sender_full_name": "Joel Dice",
        "timestamp": 1705608039
    },
    {
        "content": "<p>good chance Brett will know, and the pythonistas here. I'll ask around</p>",
        "id": 416743308,
        "sender_full_name": "Ralph",
        "timestamp": 1705658232
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"268586\">Ralph</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/416743308\">said</a>:</p>\n<blockquote>\n<p>good chance Brett will know, and the pythonistas here. I'll ask around</p>\n</blockquote>\n<p>I do know and there's no need to ask around unless you're after conda because otherwise all roads lead to me. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> There aren't issues because I'm still focusing towards tier 2 support. After that is seeing if WASI-SDK 21 has what's necessary for <code>dlopen()</code> and figuring out how to tell the community to get the packages to work. Then we have to decide how the wheel platform tags will function (both what they specify and how to tell if a platform supports the tag), especially with wasi-libc having no forwards/backwards-compatibility. Once that's all done we can the ask to allow for uploads to PyPI and hopefully get various build backends to support WASI.</p>",
        "id": 417305817,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1705953776
    },
    {
        "content": "<p><code>wasi-sdk</code> 21 <em>does</em> have shared library and <code>dlopen</code> support, so we can check that off the list.  Even once we have all the decisions made and infrastructure in place, though, each porting each individual package will require effort.  Some of them will just work with no code changes or WASI-specific hacks.  As Pyodide has shown, though, many will require a lot more effort, and I expect that upstream maintainers won't want to take that on themselves.</p>",
        "id": 417312085,
        "sender_full_name": "Joel Dice",
        "timestamp": 1705956246
    },
    {
        "content": "<p>wasi-libc support resources will appear; it's becomign clear to a lot of people that this is a path that is needed.</p>",
        "id": 417412782,
        "sender_full_name": "Ralph",
        "timestamp": 1706004986
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"509936\">Joel Dice</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/417312085\">said</a>:</p>\n<blockquote>\n<p>As Pyodide has shown, though, many will require a lot more effort, and I expect that upstream maintainers won't want to take that on themselves.</p>\n</blockquote>\n<p>Two things on that. One, part of that will be due to things like no socket support, so we may not be entirely in the same spot as them depending on what WASI-libc covers. And two, I have some <span aria-label=\"carrot\" class=\"emoji emoji-1f955\" role=\"img\" title=\"carrot\">:carrot:</span> ideas to entice projects into caring by solving some long-standing Python ecosystem issues that WebAssembly and WASI are uniquely positioned to help w/. <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 417543360,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1706050496
    },
    {
        "content": "<p>Just a quick note that wasmtime 17 (and earlier) don't pass Python's test suite under preview 2. I have filed the requisite bugs, but I wanted to save others time in case people rushed out to try preview 2 w/ CPython and noticed the test failures.</p>",
        "id": 418350608,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1706302894
    },
    {
        "content": "<p>I'm cancelling today's meeting (again) since many of us are attending the BA contributors' summit today.</p>",
        "id": 419278499,
        "sender_full_name": "Joel Dice",
        "timestamp": 1706803423
    },
    {
        "content": "<p><a href=\"https://github.com/python/devguide/pull/1273\">https://github.com/python/devguide/pull/1273</a> is my PR documenting how to build CPython for WASI. Once this gets merged we will be down to just clean-up PRs to move WASI to tier 2 support!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/python/devguide/pull/1273\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3df9911454337562f7506547fcb9dbf3f195868f\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303533316233666666323030663434613834353065373330656664366337396631393233663162323536383137623737376639356339376636376235336433342f707974686f6e2f64657667756964652f70756c6c2f31323733)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/python/devguide/pull/1273\" title=\"Document how to do a WASI build by brettcannon · Pull Request #1273 · python/devguide\">Document how to do a WASI build by brettcannon · Pull Request #1273 · python/devguide</a></div><div class=\"message_embed_description\">📚 Documentation preview 📚: https://cpython-devguide--1273.org.readthedocs.build/</div></div></div>",
        "id": 420160941,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1707266512
    },
    {
        "content": "<p>very exciting :)</p>",
        "id": 420161570,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1707266968
    },
    {
        "content": "<p><a href=\"https://peps.python.org/pep-0011/#tier-2\">https://peps.python.org/pep-0011/#tier-2</a></p>",
        "id": 420546580,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1707428418
    },
    {
        "content": "<p>For the first time in 2 months, today's meeting is <em>not</em> cancelled.</p>\n<ul>\n<li>Time: <time datetime=\"2024-02-15T20:00:00Z\">2024-02-15T13:00:00-07:00</time> </li>\n<li>Agenda: <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">https://hackmd.io/3ZktfALiSZWn41ad7y3gnA</a></li>\n<li>Zoom link: <a href=\"https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09\">https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09</a></li>\n</ul>\n<p>See you then!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"Python Subgroup (Guest Languages SIG) Meetings - HackMD\">Python Subgroup (Guest Languages SIG) Meetings - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 421674634,
        "sender_full_name": "Joel Dice",
        "timestamp": 1708009585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span> I don't know if this is useful for you at all, but here are the terrible hacks I've applied to CPython 3.12.1 to enable .so and socket support: <a href=\"https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2\">https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/9e56ec0ff0374eda0cc43b3da41c265e2d6b1441\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643964653465653561386437346332376436663661653065613038323066356436343933633965353333303734386165633139396332333639343663376364342f646963656a2f63707974686f6e2f636f6d6d69742f31313865396438656561626236333435643537323935663663656331363136363934656163626332)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2\" title=\"hacks to get `wasi-sockets` and WASI dynamic linking working · dicej/cpython@118e9d8\">hacks to get `wasi-sockets` and WASI dynamic linking working · dicej/cpython@118e9d8</a></div><div class=\"message_embed_description\">Signed-off-by: Joel Dice &lt;joel.dice@fermyon.com&gt;\n\nenable testing sockets on WASI\n\nSigned-off-by: Joel Dice &lt;joel.dice@fermyon.com&gt;</div></div></div>",
        "id": 421919884,
        "sender_full_name": "Joel Dice",
        "timestamp": 1708109633
    },
    {
        "content": "<p>love me some bad, bad hacks that work</p>",
        "id": 422107843,
        "sender_full_name": "Ralph",
        "timestamp": 1708271990
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">terrible_dotnet_hack</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">detect_dotnet</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">wasm_bytes</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>This \"temporary\" fix (in some internal code) is over a year old now!</p>",
        "id": 422117827,
        "sender_full_name": "Lann Martin",
        "timestamp": 1708280507
    },
    {
        "content": "<p>Anybody have agenda items for tomorrow's meeting?  If not I'll cancel it.</p>\n<p>BTW, a quick update on my action item from the last meeting: I spoke with Dan Gohman about improving throughput on <code>wasi-libc</code> PRs, and our plan is essentially this: when a PR goes idle for a while (i.e. a week with no comments) without being merged after all the feedback has been addressed, I'll make a \"final request for comments\", and if there are none after several days, we'll merge it.  This seems to be working well so far.</p>\n<p>Regarding the other big question about maintaining binary compatibility across <code>wasi-libc</code> releases: no news there, i.e. nobody has stepped up to take (or fund) that responsibility yet.</p>",
        "id": 423868436,
        "sender_full_name": "Joel Dice",
        "timestamp": 1709141574
    },
    {
        "content": "<p>My agenda item would be <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/All.20known.20issues.20for.20CPython.20under.20wasmtime.2018.20.26.20WASI.20SDK.2021\">https://bytecodealliance.zulipchat.com/#narrow/stream/394175-SIG-Guest-Languages/topic/All.20known.20issues.20for.20CPython.20under.20wasmtime.2018.20.26.20WASI.20SDK.2021</a> , but we also don't need to have a meeting <em>just</em> for that.</p>",
        "id": 423885857,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1709147698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span> If we were to meet and discuss that (which I'd be happy to do), what would the goal(s) be?  Increase visibility for those issues and invite feedback?  Resolve open questions related to those issues?</p>",
        "id": 423903285,
        "sender_full_name": "Joel Dice",
        "timestamp": 1709154449
    },
    {
        "content": "<p>I might swing by to understand the area. I need to find some help here.</p>",
        "id": 423904973,
        "sender_full_name": "Ralph",
        "timestamp": 1709155206
    },
    {
        "content": "<p>Sounds good; I won't cancel it, then.</p>",
        "id": 423906350,
        "sender_full_name": "Joel Dice",
        "timestamp": 1709155808
    },
    {
        "content": "<p>Meeting info for today:</p>\n<ul>\n<li>Time: <time datetime=\"2024-02-29T20:00:00Z\">2024-02-29T13:00:00-07:00</time> </li>\n<li>Agenda: <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">https://hackmd.io/3ZktfALiSZWn41ad7y3gnA</a></li>\n<li>Zoom: <a href=\"https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09\">https://zoom.us/j/95590111447?pwd=ekpERFNUZXNRcm9QVktLQlRHbXZYdz09</a></li>\n</ul>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b37ce5483ca5f88093e39486a76c6a2b768cd6a5\\/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"Python Subgroup (Guest Languages SIG) Meetings - HackMD\">Python Subgroup (Guest Languages SIG) Meetings - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 424045361,
        "sender_full_name": "Joel Dice",
        "timestamp": 1709220624
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"509936\">Joel Dice</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/423903285\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"595471\">Brett Cannon</span> If we were to meet and discuss that (which I'd be happy to do), what would the goal(s) be?  Increase visibility for those issues and invite feedback?  Resolve open questions related to those issues?</p>\n</blockquote>\n<p>Visibility, status update as to where CPython stands for WASI 0.2, and just in case someone knows I'm overlooking something.</p>",
        "id": 424064091,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1709225639
    },
    {
        "content": "<p>Any objections to me cancelling today's meeting?  Looks like a few of our regular attendees can't make it, and we don't have anything on the agenda anyway.</p>",
        "id": 426548334,
        "sender_full_name": "Joel Dice",
        "timestamp": 1710424976
    },
    {
        "content": "<p>Anyone have agenda items for tomorrow's meeting?  If not, we can just do an asynchronous status update here.</p>",
        "id": 429956137,
        "sender_full_name": "Joel Dice",
        "timestamp": 1711576631
    },
    {
        "content": "<p>I'm going to cancel the meeting since there are no agenda items (and since I _love_ cancelling meetings).<br>\nMy update:</p>\n<ul>\n<li>Released <code>componentize-py</code> 0.13, which includes <a href=\"https://github.com/dicej/isyswasfa\">isyswasfa</a> support (which I plan to replace with proper CM async support once matching support is available in <code>wasm-tools</code>, <code>wasmtime</code>, etc.), as well as a <code>--stub-wasi</code> option for eliminating any WASI imports (see <a href=\"https://github.com/bytecodealliance/componentize-py/tree/main/examples/sandbox\">example</a>).</li>\n<li>Tried to help <span class=\"user-mention\" data-user-id=\"691446\">@Kyle Gray</span> get Pandas working inside a component; failed due to trouble with Cython-generated C++ code, which we had to hand-edit to make compatible with <code>-fno-exceptions</code> but still had issues which might be cross-compiling related: <a href=\"#narrow/stream/219900-wasi/topic/Attempting.20to.20use.20pandas.20with.20componentize-py\">https://bytecodealliance.zulipchat.com/#narrow/stream/219900-wasi/topic/Attempting.20to.20use.20pandas.20with.20componentize-py</a>.  Perhaps someone with more Cython experience can help?  Might also be worth looking at what Pyodide does to support Pandas.</li>\n</ul>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/isyswasfa\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/27f178b68565283bb520960854360bf55246f688\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f646363633430353937303733306232396265303065653835646133366138346463663062346235366432386231383934393132313531376133326539636532372f646963656a2f697379737761736661)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/isyswasfa\" title=\"GitHub - dicej/isyswasfa: I sync, you sync, we all sync for async!\">GitHub - dicej/isyswasfa: I sync, you sync, we all sync for async!</a></div><div class=\"message_embed_description\">I sync, you sync, we all sync for async! Contribute to dicej/isyswasfa development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py/tree/main/examples/sandbox\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/27ac83357a3a19116f2358c2536deece958de7ce\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663337663634326332613236626135373735393231393839326563316433616261616234643165643532306631653662393632383038326238613663396138642f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py/tree/main/examples/sandbox\" title=\"componentize-py/examples/sandbox at main · bytecodealliance/componentize-py\">componentize-py/examples/sandbox at main · bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div>",
        "id": 430093469,
        "sender_full_name": "Joel Dice",
        "timestamp": 1711639579
    },
    {
        "content": "<p>No agenda again this week, so I'll cancel today's meeting if there are no objections.</p>",
        "id": 432739263,
        "sender_full_name": "Joel Dice",
        "timestamp": 1712851201
    },
    {
        "content": "<p>Anyone have agenda items for today's meeting?</p>",
        "id": 435387964,
        "sender_full_name": "Joel Dice",
        "timestamp": 1714051218
    },
    {
        "content": "<p>Crickets; I'll cancel it.</p>",
        "id": 435445185,
        "sender_full_name": "Joel Dice",
        "timestamp": 1714069722
    },
    {
        "content": "<p>For the first time in a while, we're having a meeting today at <time datetime=\"2024-07-11T19:00:00Z\">2024-07-11T13:00:00-06:00</time> (i.e. about 45 minutes from now).</p>\n<ul>\n<li>Link: <a href=\"https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09\">https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09</a></li>\n<li>Agenda and notes: <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">https://hackmd.io/3ZktfALiSZWn41ad7y3gnA</a></li>\n</ul>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b37ce5483ca5f88093e39486a76c6a2b768cd6a5/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"Python Subgroup (Guest Languages SIG) Meetings - HackMD\">Python Subgroup (Guest Languages SIG) Meetings - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 450776294,
        "sender_full_name": "Joel Dice",
        "timestamp": 1720721828
    },
    {
        "content": "<p>I think my most immediate question is if I use the new <code>wasm32-wasi-preview2</code> target triple (although <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> made it sound like the triple was actually <code>wasm23-wasip2</code>), I get sockets, which is great! But compiling for a component instead of a module; I'm not sure how that affects me. I still want a <code>python.wasm</code> that I can pass to e.g. wasmtime to run the compiled interpreter. Does this change? And I assume it doesn't affect wanting to statically compile <code>.o</code> files for things like zlib so that I can statically link it?</p>",
        "id": 450806866,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1720730143
    },
    {
        "content": "<p>When you target <code>wasm32-wasip2</code> (which is now the official name; <code>wasm32-wasi-preview2</code> is no longer used anywhere, AFAIK), <code>python.wasm</code> will be a component, which should run fine using Wasmtime, node+jco, browser+jco, or any other WASIp2-capable runtime.  It <em>won't</em> run on any runtime which only supports WASIp1, though.</p>\n<p>And, yes, statically linking <code>.o</code> and <code>.a</code> files should continue to work like it always has.</p>",
        "id": 450807393,
        "sender_full_name": "Joel Dice",
        "timestamp": 1720730384
    },
    {
        "content": "<p>FYI the <code>wasm32-wasi-preview2</code> target is specifically mentioned at <a href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-22\">https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-22</a> because of you <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-22\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9c6343fee05b6b2c1d4488a44b680ff7da4dd0fe/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353265666663383130666264363033646539646435303965366134333836393263313935666434313335313133313565646530313261643565343538303436392f576562417373656d626c792f776173692d73646b2f72656c65617365732f7461672f776173692d73646b2d3232&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-22\" title=\"Release wasi-sdk-22 · WebAssembly/wasi-sdk\">Release wasi-sdk-22 · WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">What's Changed\n\nbuild and test wasm32-wasi-preview2 target by @dicej in #370\ndoc: remember to tag wasi-libc during a release by @abrown in #374\nupdate wasi-libc and Makefile to fix &lt;fstream&gt; by @di...</div></div></div>",
        "id": 450808863,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1720730994
    },
    {
        "content": "<p>Yeah, that PR landed before the name change, which happened later in the WASI-SDK 22 development process.</p>",
        "id": 450809097,
        "sender_full_name": "Joel Dice",
        "timestamp": 1720731095
    },
    {
        "content": "<p><a href=\"https://github.com/python/cpython/issues/121634\">https://github.com/python/cpython/issues/121634</a> is tracking trying out the new target triple (after I make sure WASI SDK 22 builds fine under <code>wasm32-wasi</code>).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/python/cpython/issues/121634\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d9c5c58b148cf32bfc00414b396a9a300f4848b5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663635626162333438623661613232343632653065303439636433306561336530303666303266356232633363316339396231613537326166386136376236372f707974686f6e2f63707974686f6e2f6973737565732f313231363334&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/python/cpython/issues/121634\" title=\"Test the `wasm32-wasip2` target triple · Issue #121634 · python/cpython\">Test the `wasm32-wasip2` target triple · Issue #121634 · python/cpython</a></div><div class=\"message_embed_description\">https://bytecodealliance.zulipchat.com/#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/450807393 Requires #120371 since WASI SDK 22 is required. But this supposedly has some ...</div></div></div>",
        "id": 450810064,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1720731505
    },
    {
        "content": "<p>Note that you can always support <em>both</em> <code>wasm32-wasip1</code> and <code>wasm32-wasip2</code> in CPython if desired (i.e. as separate build targets).  We decided not to do that for .NET because it compounded the maintenance burden, but maybe it wouldn't be so bad for CPython?</p>",
        "id": 450810357,
        "sender_full_name": "Joel Dice",
        "timestamp": 1720731634
    },
    {
        "content": "<p>I assume I will support both (for now) by making the target triple an option for my build script</p>",
        "id": 451047910,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1720809589
    },
    {
        "content": "<p>Hey all (and maybe <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span>, though I assume <span aria-label=\"palm tree\" class=\"emoji emoji-1f334\" role=\"img\" title=\"palm tree\">:palm_tree:</span> means vacation! ) -- I have some friends over SONY Midokura over here in <span aria-label=\"flag japan\" class=\"emoji emoji-1f1ef-1f1f5\" role=\"img\" title=\"flag japan\">:flag_japan:</span> that are trying to do python WebAssembly things, and they're doing it the hard way -- compiling MicroPython w/ <code>wasi-sdk</code> and trying to work out all the hard parts themselves.</p>\n<p>I know there was a TON of hard work in this area, but before I give them the links I have to sort of show the walk through/progression of shared everything linking and the road to <code>componentize-py</code>/work that's been done on it since (that I didn't do!), I wanted to ask if there's a good existing resource that describes everything concisely?</p>\n<p>I'd like to do just a <em>little</em> bit better than pointing them to <a href=\"https://www.fermyon.com/blog/introducing-componentize-py\">https://www.fermyon.com/blog/introducing-componentize-py</a> and <a href=\"https://github.com/bytecodealliance/componentize-py\">https://github.com/bytecodealliance/componentize-py</a> and recent PRs to upstream python,  etc.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://www.fermyon.com/blog/introducing-componentize-py\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f1231eca2b14e4e73406e7a71fb9145b42c4449c/68747470733a2f2f7777772e6665726d796f6e2e636f6d2f7374617469632f696d6167652f7477632d636f6d706f6e656e74697a652d70792d626c6f672e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://www.fermyon.com/blog/introducing-componentize-py\" title=\"Introducing Componentize-Py\">Introducing Componentize-Py</a></div><div class=\"message_embed_description\">Componentize-Py is a new tool for packaging Python apps and their dependencies as WebAssembly components.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/31200695a7a6d8795cab71783518972fc7d1a5ac/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366562343137663430386439353035663436616366303864353138386233333462666461343734666365316136323434636538623763626532356564393835312f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py\" title=\"GitHub - bytecodealliance/componentize-py\">GitHub - bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div>",
        "id": 453213149,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721663234
    },
    {
        "content": "<p>This is another resource: <a href=\"https://component-model.bytecodealliance.org/language-support/python.html\">https://component-model.bytecodealliance.org/language-support/python.html</a></p>",
        "id": 453216642,
        "sender_full_name": "Lann Martin",
        "timestamp": 1721664170
    },
    {
        "content": "<p>Thanks for that link, will definitely include it. They're quite technical as they've started and had some success with the MicroPython build so was hoping for just a few resources that also... throw them off the deep end, in a matter of speaking</p>",
        "id": 453217626,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721664388
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span> how are they dealing with the long jump issue as my understanding is that the WASI SDK needs the exceptions proposal to land for that to work (i.e. I tried this last year <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>)?</p>\n<p>And yes, Joel is the best person to answer all of this. But if they are using MicroPython then how would linking come into play since I didn't think MicroPython had extension module support?</p>",
        "id": 453234044,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1721668939
    },
    {
        "content": "<p>Yes, I'm on vacation and typing this on my phone.  Briefly: I spoke at length with a couple of people from Midokura at Wasmcon last year, and <span class=\"user-mention\" data-user-id=\"567999\">@YAMAMOTO Takashi</span> is familiar with the work I've done to support shared libraries in wasi-sdk, so I think they already know a lot of the technical details.  My understanding is that they're using Wamr, which does not yet support WASIp2 or the component model, which may help explain the approach they're currently taking.</p>",
        "id": 453240219,
        "sender_full_name": "Joel Dice",
        "timestamp": 1721670964
    },
    {
        "content": "<p>BTW, <span class=\"user-mention\" data-user-id=\"253998\">@Luke Wagner</span> wrote this up about linking in the CM, for reference: <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\">https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/888a08b7977f7ff549640f80c8d141f23af9a004/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f653431386534613933343133393634623534616430313338316333373230663636353638653564346165623739346332366636373033613132663362636537382f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/Linking.md\" title=\"component-model/design/mvp/Linking.md at main · WebAssembly/component-model\">component-model/design/mvp/Linking.md at main · WebAssembly/component-model</a></div><div class=\"message_embed_description\">Repository for design and specification of the Component Model - WebAssembly/component-model</div></div></div>",
        "id": 453240342,
        "sender_full_name": "Joel Dice",
        "timestamp": 1721671017
    },
    {
        "content": "<p>Hey thanks for the thoughtful responses! </p>\n<p><span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span> I'm not sure exactly what <em>which</em> long jump issue this is referring to, but maybe it's the implementation done by Yamato-san here: <a href=\"https://github.com/WebAssembly/wasi-libc/pull/483\">https://github.com/WebAssembly/wasi-libc/pull/483</a> (this was mentioned &amp; demo'd in a talk I saw last night!)</p>\n<p>I was trying to discuss less linking specifically and more getting things working in python land in general. I know less about python and even less about micropython but was hoping for resources that sound like \"X didn't work so then I Y'd but there was a problem with Z\" kind of write-up that could be illuminating for people working with a python-flavored toolchain.</p>\n<p>at Joel <span aria-label=\"palm tree\" class=\"emoji emoji-1f334\" role=\"img\" title=\"palm tree\">:palm_tree:</span>  (but so this doesn't ping)</p>\n<p>Apologies! I actually saw a presentation on the work that Yamato-san did just last night :) And you're absolutely right about their approach, I need to ask more about what they're running into, maybe I'll check out the embedded WG.</p>\n<p>I want to be clear that it wasn't <em>quite</em> about linking specifically so much as I wanted any more documentation on how it all sort of fits together (high level and low level), and possibly the messy kind -- I should have asked more specifically about the challenges they were running into so I could be more specific!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-libc/pull/483\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/af39f51b93b0d9b9a695c72006261db500cde784/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613965323335393035643833666266353061343062626162666231366164363233353437373832386565646166323532636464646363343162656433333737352f576562417373656d626c792f776173692d6c6962632f70756c6c2f343833&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-libc/pull/483\" title=\"Add libsetjmp.a/so by yamt · Pull Request #483 · WebAssembly/wasi-libc\">Add libsetjmp.a/so by yamt · Pull Request #483 · WebAssembly/wasi-libc</a></div><div class=\"message_embed_description\">Add setjmp/longjump support based on Wasm EH proposal.\nIt's provided as a separate library (libsetjmp) from libc so that runtimes w/o EH support can still load libc.so.\nTo use this setjmp/longjmp i...</div></div></div>",
        "id": 453326868,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721710692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"598440\">@Victor Adossi</span> Thanks for the link! That's exactly the \"long jump\" issue I was referring to. Do you know if there are plans to upstream the changes to MicroPython (they have Emscripten support in the repo, so I suspect they would take WASI as well).</p>\n<p>And <a href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md\">https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md</a>  might be the low level dynamic linking docs you were looking for.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/e5603323ff9d09b3b870a034525d3f5c2407af87/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383631663566393533303339333836616165653838623939313565643439623238336533653538646634323438306139363064323738393566653235643430352f576562417373656d626c792f746f6f6c2d636f6e76656e74696f6e73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/tool-conventions/blob/main/DynamicLinking.md\" title=\"tool-conventions/DynamicLinking.md at main · WebAssembly/tool-conventions\">tool-conventions/DynamicLinking.md at main · WebAssembly/tool-conventions</a></div><div class=\"message_embed_description\">Conventions supporting interoperatibility between tools working with WebAssembly. - WebAssembly/tool-conventions</div></div></div>",
        "id": 453482390,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1721757780
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span> no problem! I don't know if they plan on upstreaming, but I know they're working with MicroPython right now... I'll shoot over a question and certainly <span class=\"user-mention\" data-user-id=\"567999\">@YAMAMOTO Takashi</span> will know way more than I do.</p>\n<p>Thanks for that dynamic linking doc -- most of that (and how it integrates with non-emscripten LLVM WASM builds) is over my head but certainly useful for others. Reviewing the <code>componentize-py</code> code would probably help me understand more as well.</p>",
        "id": 453586150,
        "sender_full_name": "Victor Adossi",
        "timestamp": 1721793431
    },
    {
        "content": "<p>Yeah, <code>componentize-py</code> needs more docs, including an <code>ARCHITECTURE.md</code> (hence <a href=\"https://github.com/bytecodealliance/componentize-py/issues/9\">this issue</a>).  Meanwhile, <a href=\"https://docs.google.com/presentation/d/1kJ58_G1bApcRq0Ea1qipIVtC97GtMivoFFMzvTeeeqI/edit?pli=1#slide=id.g27ac897f0bc_0_57\">this presentation</a> might be helpful.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py/issues/9\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/badb395e11640e3a0c1746e15d8ee2566b7bd7e2/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643135653532366130653634393264306235323261333832616265633830356134623138633434373735623939333538636137316635363032633962613761642f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d70792f6973737565732f39&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py/issues/9\" title=\"Add contributor documentation · Issue #9 · bytecodealliance/componentize-py\">Add contributor documentation · Issue #9 · bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">This should include a CONTRIBUTING.md file, plus an ARCHITECTURE.md describing the high-level architecture of the project. In addition, each source file needs doc and implementation comments.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://docs.google.com/presentation/d/1kJ58_G1bApcRq0Ea1qipIVtC97GtMivoFFMzvTeeeqI/edit?pli=1#slide=id.g27ac897f0bc_0_57\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6df77bee374ba54892d80848397c26efa19212a5/68747470733a2f2f6c68372d75732e676f6f676c6575736572636f6e74656e742e636f6d2f646f63732f41486b627779497933466b6a544e723055584d72566b614e56684233636e4439396d2d72684d77353071416a375654434b484771574b6f6f7978302d76626a77363363634d3176486a376776526251597539644438356a6b346a5663587370456c566d30686c327254587464464461642d3979693363453d77313230302d683633302d70&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://docs.google.com/presentation/d/1kJ58_G1bApcRq0Ea1qipIVtC97GtMivoFFMzvTeeeqI/edit?pli=1#slide=id.g27ac897f0bc_0_57\" title=\"Introducing Componentize-Py\">Introducing Componentize-Py</a></div><div class=\"message_embed_description\">Introducing Componentize-Py joel.dice@fermyon.com Help Python developers participate in the Wasm component ecosystem Luke spoke about yesterday. Target arbitrary WIT worlds using Python</div></div></div>",
        "id": 454855176,
        "sender_full_name": "Joel Dice",
        "timestamp": 1722264031
    },
    {
        "content": "<p>I'm assuming there's no meeting today since nothing has been mentioned about it?</p>",
        "id": 457439524,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1723141287
    },
    {
        "content": "<p>Argh, sorry I forgot about this.  I'm in Germany for an offsite this week and won't be able to host.  I just cancelled it (yes, 9 minutes after it was supposed to start).</p>",
        "id": 457455623,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723144154
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"509936\">Joel Dice</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/450810357\">said</a>:</p>\n<blockquote>\n<p>Note that you can always support <em>both</em> <code>wasm32-wasip1</code> and <code>wasm32-wasip2</code> in CPython if desired (i.e. as separate build targets).  We decided not to do that for .NET because it compounded the maintenance burden, but maybe it wouldn't be so bad for CPython?</p>\n</blockquote>\n<p>So I got <code>wasm32-wasip2</code> building, but I didn't try turning any new features like sockets on either (i.e. I got the <code>wasi.py</code> script that drives builds for CPython to allow specifying the host's target triple). But upon reflection, supporting both <code>wasm32-wasi</code> and <code>wasm32-wasip2</code> as separate targets is a pain as Python's tier support is like Rust (which is my doing <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span>), so it would be a new platform requiring a buildbot test machine, sponsorship, etc.</p>\n<p>I assume a <code>wasm32-wasi</code> and a <code>wasm32-wasip1</code> build are not interchangeable if you stick to only the parts that are in both (I know the APIs are different, so I'm talking from a feature perspective)?</p>",
        "id": 462613730,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1723746705
    },
    {
        "content": "<p>I'm sure I know less about the new targets than you but when they were announced, wasip1 was called a rename of wasi, has that changed?</p>\n<p>ref: <a href=\"https://blog.rust-lang.org/2024/04/09/updates-to-rusts-wasi-targets.html\">https://blog.rust-lang.org/2024/04/09/updates-to-rusts-wasi-targets.html</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://blog.rust-lang.org/2024/04/09/updates-to-rusts-wasi-targets.html\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/147ecc3caab69e5abda8478c67ed1c5c29a30233/68747470733a2f2f7777772e727573742d6c616e672e6f72672f7374617469632f696d616765732f727573742d736f6369616c2d776964652e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://blog.rust-lang.org/2024/04/09/updates-to-rusts-wasi-targets.html\" title=\"Changes to Rust's WASI targets | Rust Blog\">Changes to Rust's WASI targets | Rust Blog</a></div><div class=\"message_embed_description\">Empowering everyone to build reliable and efficient software.</div></div></div>",
        "id": 462614477,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723747018
    },
    {
        "content": "<p>AFAIK <code>wasm32-wasi</code> and <code>wasm32-wasip1</code> <em>are</em> interchangeable in the sense they should both generate the exact same output.</p>",
        "id": 462614813,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723747190
    },
    {
        "content": "<p>I.e. the latter is just a new name for the former.</p>",
        "id": 462614888,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723747211
    },
    {
        "content": "<p>while we're here, <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> would it be helpful if I try to update wasi-sdk and use Brett's build instead of maybe_make_cpython in componentize-py or do you want to do that yourself? I'd like to help</p>",
        "id": 462615714,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723747550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"550770\">@Ramon Klass</span> <a href=\"https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2\">This</a> is my CPython patch -- it enables WASI sockets and shared library support.  If there's a route to upstream either of those features in the near future, great; otherwise, I think we'll need to stick with my fork.  The shared library support in particular is essential given how <code>componentize-py</code> works internally.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9e56ec0ff0374eda0cc43b3da41c265e2d6b1441/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f643964653465653561386437346332376436663661653065613038323066356436343933633965353333303734386165633139396332333639343663376364342f646963656a2f63707974686f6e2f636f6d6d69742f31313865396438656561626236333435643537323935663663656331363136363934656163626332&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2\" title=\"hacks to get `wasi-sockets` and WASI dynamic linking working · dicej/cpython@118e9d8\">hacks to get `wasi-sockets` and WASI dynamic linking working · dicej/cpython@118e9d8</a></div><div class=\"message_embed_description\">Signed-off-by: Joel Dice &lt;joel.dice@fermyon.com&gt;\n\nenable testing sockets on WASI\n\nSigned-off-by: Joel Dice &lt;joel.dice@fermyon.com&gt;</div></div></div>",
        "id": 462616232,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723747793
    },
    {
        "content": "<p>does the same apply to the wasi-wheels repo?</p>",
        "id": 462616352,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723747834
    },
    {
        "content": "<p>Hmm, now I'm trying to remember what the <code>cpython</code> submodule in the <code>wasi-wheels</code> repo was for...</p>",
        "id": 462616618,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723747926
    },
    {
        "content": "<p>looks like we use it to specify <code>CROSS_PREFIX</code> when building the various wheels.  Maybe those builds require a <code>libpython312.so</code> to be present?  Or maybe not?  Feel free to switch it to a pre-built CPython for WASI -- maybe it will work?</p>",
        "id": 462617033,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723748130
    },
    {
        "content": "<p>ok then I'll start with wasi-wheels; are .a files from wasi-sdk23 compatible to wasi-sdk24 or should I always use the same wasi-sdk as build.py?</p>",
        "id": 462617560,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723748335
    },
    {
        "content": "<p>Yes, AFAIK they should be compatible.</p>",
        "id": 462618267,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723748540
    },
    {
        "content": "<p>also <span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span> I saw you want to include zlib into the build but what about other libraries? Specifically openssl, some libraries (in my case httpx) just assume that import _ssl will never fail, which is sad since you can't even import httpx because of that</p>",
        "id": 462620395,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723749247
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"509936\">Joel Dice</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/462616232\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"550770\">Ramon Klass</span> <a href=\"https://github.com/dicej/cpython/commit/118e9d8eeabb6345d57295f6cec1616694eacbc2\">This</a> is my CPython patch -- it enables WASI sockets and shared library support.  If there's a route to upstream either of those features in the near future, great; otherwise, I think we'll need to stick with my fork.  The shared library support in particular is essential given how <code>componentize-py</code> works internally.</p>\n</blockquote>\n<p>So that patch is half outdated, half doesn't work. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> The stuff to turn off the tests I already have upstream at Joel's request so that \"dynamic\" loading via imports work w/o patching, but the stuff that rips out the stack-related flags fails when Python is compiled under <code>--with-pydebug</code> which is necessary for CI testing.</p>\n<p>I don't know about the <code>sys/ioctl.h</code> portion as every test  in <code>test_socket</code> either errors out, gets skipped, or fails (lack of threading seems to be the main culprit for the failures, but I admittedly didn't dig into it).</p>\n<p>If people want to help upstream stuff I'm happy to work w/ them.</p>",
        "id": 462621038,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1723749473
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"550770\">Ramon Klass</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/462620395\">said</a>:</p>\n<blockquote>\n<p>also <span class=\"user-mention silent\" data-user-id=\"595471\">Brett Cannon</span> I saw you want to include zlib into the build but what about other libraries? Specifically openssl, some libraries (in my case httpx) just assume that import _ssl will never fail, which is sad since you can't even import httpx because of that</p>\n</blockquote>\n<p>I have been told OpenSSL won't really work as it requires constant time instructions for cryptography reasons and WebAssembly doesn't have that. For the rest I was hoping to get them working one by one.</p>",
        "id": 462621290,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1723749559
    },
    {
        "content": "<p><code>ssl</code> is its own can of worms given the lack of constant time operations in Wasm and the risk of side channel attacks.  I wouldn't recommend using OpenSSL on Wasm, even if it technically \"works\".</p>",
        "id": 462621341,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723749579
    },
    {
        "content": "<p>I see the point with \"it wouldn't be secure either way\", it's just a bit rough that just importing a package but never using it already kills the componentization, but I guess that's kind of the python ecosystem's fault, openssl was always optional, there should be guards around the import</p>",
        "id": 462622417,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723749926
    },
    {
        "content": "<p>just found that someone did in fact set up a build repo for openssl-wasi ;) <a href=\"https://github.com/jedisct1/openssl-wasm\">https://github.com/jedisct1/openssl-wasm</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/jedisct1/openssl-wasm\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/95bd65216d40d17272ab2fd05015b652c8f3136b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656536313163366230363738353233363131643238303963353737653233353739623263623636613335643738623335626464303339633830366638363666382f6a656469736374312f6f70656e73736c2d7761736d&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/jedisct1/openssl-wasm\" title=\"GitHub - jedisct1/openssl-wasm: OpenSSL 3 compiled for WebAssembly/WASI (up-to-date, maintained)\">GitHub - jedisct1/openssl-wasm: OpenSSL 3 compiled for WebAssembly/WASI (up-to-date, maintained)</a></div><div class=\"message_embed_description\">OpenSSL 3 compiled for WebAssembly/WASI (up-to-date, maintained) - jedisct1/openssl-wasm</div></div></div>",
        "id": 462623217,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723750157
    },
    {
        "content": "<p>(why yes, I totally trust that you patch rand_lib.c without explanation)</p>",
        "id": 462624108,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723750442
    },
    {
        "content": "<p>but thank you both, a definite answer on the ssl thing is good to have even if it's wontfix with good reason :)</p>",
        "id": 462624284,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723750521
    },
    {
        "content": "<p>FWIW, this is one of the reasons for the <code>wasi:sockets/tls</code> interface I <a href=\"https://docs.google.com/presentation/d/1C55ph_fSTRhb4A4Nlpwvp9JGy8HBL6A1MvgY2jrapyQ/edit?usp=sharing\">proposed</a> a while ago.  That will probably be more useful for languages with higher-level abstractions for TLS (e.g. .NET/System.Net.Security.SslStream, Rust/native-tls, JS/node:tls), but might eventually benefit Python as well.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://docs.google.com/presentation/d/1C55ph_fSTRhb4A4Nlpwvp9JGy8HBL6A1MvgY2jrapyQ/edit?usp=sharing\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bee3728168e0dffd0a7393fa2409a37b527c6f2b/68747470733a2f2f6c68372d75732e676f6f676c6575736572636f6e74656e742e636f6d2f646f63732f41486b6277794a544972615a63464563383934653652545f6b49717a514c61454d425f4c437a4d7a55466d59334569314670534a5270374d69345f4243423132436e3545365a4949467262746f37416f4468435672425855754e374849515a7548364a5551616d6d35774530543959785a37547273526b693d77313230302d683633302d70&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://docs.google.com/presentation/d/1C55ph_fSTRhb4A4Nlpwvp9JGy8HBL6A1MvgY2jrapyQ/edit?usp=sharing\" title=\"wasi:sockets/tls\">wasi:sockets/tls</a></div><div class=\"message_embed_description\">(Pre-)Proposal: wasi:sockets/tls joel.dice@fermyon.com</div></div></div>",
        "id": 462633224,
        "sender_full_name": "Joel Dice",
        "timestamp": 1723753232
    },
    {
        "content": "<p>that's a promising path forward :) python could use this to implement a different version of the _ssl module once it's accepted</p>",
        "id": 462633571,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723753324
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"550770\">Ramon Klass</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/462623217\">said</a>:</p>\n<blockquote>\n<p>just found that someone did in fact set up a build repo for openssl-wasi ;) <a href=\"https://github.com/jedisct1/openssl-wasm\">https://github.com/jedisct1/openssl-wasm</a></p>\n</blockquote>\n<p>this particular spike didn't get too far, and I'm not sure it's the one to think about.</p>",
        "id": 462775391,
        "sender_full_name": "Ralph",
        "timestamp": 1723810960
    },
    {
        "content": "<p>yes the wording in the README is rather unclear about the security implications their patches introduce, I think putting efforts toward a wit interface that allows using host tls is the best way forward</p>\n<p>one of the main issues I see is, people right now don't just want to have TLS inside components, people probably would expect that they can compile their C code to wasi and run it, and that C code will probably #include openssl, so would that mean wasi-sdk needs a openssl-to-wasitls bridge that can be linked?</p>",
        "id": 462776325,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1723811359
    },
    {
        "content": "<p>both approaches will be needed, but the question now is how to specify and provide resources for such a wasi:tls/ssl</p>",
        "id": 462776521,
        "sender_full_name": "Ralph",
        "timestamp": 1723811420
    },
    {
        "content": "<p>questions abound yet</p>",
        "id": 462776536,
        "sender_full_name": "Ralph",
        "timestamp": 1723811428
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"509936\">Joel Dice</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/462614813\">said</a>:</p>\n<blockquote>\n<p>AFAIK <code>wasm32-wasi</code> and <code>wasm32-wasip1</code> <em>are</em> interchangeable in the sense they should both generate the exact same output.</p>\n</blockquote>\n<p>A lil late, but wanted to chime in that there is a hope that we could use wasm32-wasi as wasi 1.0 in the future.</p>",
        "id": 463516810,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1724102217
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"509936\">Joel Dice</span> <a href=\"#narrow/stream/394175-SIG-Guest-Languages/topic/Python.20subgroup/near/416633707\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Build and publish WASI wheels for popular packages to a public index so devs can <code>pip install</code> them easily<br>\n    - Porting those packages can range from pretty trivial (e.g. a package with a simple, already very portable C native extention) to extraordinarily difficult (e.g. SciPy and anything else involving Fortran).</li>\n</ul>\n</blockquote>\n<p>Know where I can find the state of different packages that have wasi wheels published? Also curious if the recent LFortran wasm target improvements are  helping for a path for scipy, etc: <a href=\"https://lfortran.org/blog/2024/05/fortran-on-web-using-lfortran/\">https://lfortran.org/blog/2024/05/fortran-on-web-using-lfortran/</a></p>",
        "id": 468471460,
        "sender_full_name": "Milan",
        "timestamp": 1725741454
    },
    {
        "content": "<p>there is a sandbox for building wasi wheels here <a href=\"https://github.com/dicej/wasi-wheels\">https://github.com/dicej/wasi-wheels</a><br>\nit's a bit barebones and spits out zip files you need to extract into your site-pckages but all the needed parts are there, I'd also be interested in coordinated work on this :)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/wasi-wheels\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/8e282eee2a14e67bc5b401ffce684c302f13d84f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366637326335363836303339343363643433393636643365396139373535643530303732363564636538636134306138343034323563313864333765336137332f646963656a2f776173692d776865656c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/wasi-wheels\" title=\"GitHub - dicej/wasi-wheels: Python wheels built for WASI\">GitHub - dicej/wasi-wheels: Python wheels built for WASI</a></div><div class=\"message_embed_description\">Python wheels built for WASI. Contribute to dicej/wasi-wheels development by creating an account on GitHub.</div></div></div>",
        "id": 468471984,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1725741921
    },
    {
        "content": "<p>I have a proof of concept that turns the output into a NAME-wasi-X.Y.Z.whl that depends on NAME-X.Y.Z and only adds the additional .so files but I haven't converted all the build.shs to that yet</p>",
        "id": 468472120,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1725742026
    },
    {
        "content": "<p>We have a meeting scheduled for Thursday.  I've still been focused on .NET stuff, so don't have much to report on the Python side.  Feel free to add agenda items <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">here</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b37ce5483ca5f88093e39486a76c6a2b768cd6a5/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"Python Subgroup (Guest Languages SIG) Meetings - HackMD\">Python Subgroup (Guest Languages SIG) Meetings - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 469200358,
        "sender_full_name": "Joel Dice",
        "timestamp": 1725998718
    },
    {
        "content": "<p>My only update would be going over <a href=\"https://opensource.snarky.ca/Python/WASI\">https://opensource.snarky.ca/Python/WASI</a> which I will also be presenting at the plumber's summit, so I'm happy to talk about it, but also understand not having a meeting if it isn't enough.</p>",
        "id": 469475937,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1726077340
    },
    {
        "content": "<p>Let's go ahead and meet.  I'll put that (i.e. Brent's WASI todo list) on the agenda, and I can also talk briefly about a couple of recent and in-progress contributions to <code>componentize-py</code>.</p>",
        "id": 469482212,
        "sender_full_name": "Joel Dice",
        "timestamp": 1726079958
    },
    {
        "content": "<p>Is the meeting still happening? I'm in the lobby and Zoom is saying it's waiting for the host to start the meeting.</p>",
        "id": 469760426,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1726168237
    },
    {
        "content": "<p>oh crap, I had an alarm set, but then got caught up in a conversation</p>",
        "id": 469760496,
        "sender_full_name": "Joel Dice",
        "timestamp": 1726168277
    },
    {
        "content": "<p>will start it asap</p>",
        "id": 469760510,
        "sender_full_name": "Joel Dice",
        "timestamp": 1726168282
    },
    {
        "content": "<p>(need to dig up the password)</p>",
        "id": 469760523,
        "sender_full_name": "Joel Dice",
        "timestamp": 1726168287
    },
    {
        "content": "<p>sorry!</p>",
        "id": 469760529,
        "sender_full_name": "Joel Dice",
        "timestamp": 1726168290
    },
    {
        "content": "<p>Python meeting today at <time datetime=\"2024-10-10T19:00:00Z\">2024-10-10T13:00:00-06:00</time> .  Feel free to add items to <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">the agenda</a>.  Zoom link: <a href=\"https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09\">https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b37ce5483ca5f88093e39486a76c6a2b768cd6a5/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"2024-10-10 - HackMD\">2024-10-10 - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 476160145,
        "sender_full_name": "Joel Dice",
        "timestamp": 1728573691
    },
    {
        "content": "<p>If it's just us and you don't have anything to talk about, <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> , we can cancel as beyond the 3.13.0 release I haven't had WASI time lately.</p>",
        "id": 476182220,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1728580242
    },
    {
        "content": "<p>I was just going to point to <a href=\"https://github.com/WebAssembly/component-model/issues/401\">https://github.com/WebAssembly/component-model/issues/401</a> in case you or anyone else hasn't seen it yet.  Otherwise, I've got no news either, so I'm fine with canceling.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/issues/401\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/dc3d385b3a59979c81f08ebeeba7d2ac13666a2f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336534306238633365323036336532343765333633633834313032356237303037393735393139313666373963346539633339303465306261636238323665622f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c2f6973737565732f343031&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/issues/401\" title=\"Implementing `dlopen` in the component model · Issue #401 · WebAssembly/component-model\">Implementing `dlopen` in the component model · Issue #401 · WebAssembly/component-model</a></div><div class=\"message_embed_description\">At the BA summit this past weekend I discussed with a few folks about what it might look like to implement dlopen from C in the component model. What follows is a rough sketch about how this might ...</div></div></div>",
        "id": 476182478,
        "sender_full_name": "Joel Dice",
        "timestamp": 1728580337
    },
    {
        "content": "<p>I went ahead and cancelled it in favor of async discussion here as needed.</p>",
        "id": 476185432,
        "sender_full_name": "Joel Dice",
        "timestamp": 1728581489
    },
    {
        "content": "<p>We have <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">agenda items</a> for the meeting tomorrow (<time datetime=\"2024-11-14T20:00:00Z\">2024-11-14T13:00:00-07:00</time>).  If you're not otherwise occupied with e.g. KubeCon, please join us.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b37ce5483ca5f88093e39486a76c6a2b768cd6a5/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6f672e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"2024-10-10 - HackMD\">2024-10-10 - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 482247072,
        "sender_full_name": "Joel Dice",
        "timestamp": 1731526903
    },
    {
        "content": "<p>FYI I plan to be at the meeting but there's a slight chance I will be a little late</p>",
        "id": 482441642,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1731604012
    },
    {
        "content": "<p>Meeting starts in about 8 minutes: <a href=\"https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09\">https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09</a></p>",
        "id": 482470708,
        "sender_full_name": "Joel Dice",
        "timestamp": 1731613931
    },
    {
        "content": "<p>Any agenda items for the meeting tomorrow?  I don't have anything, myself.  <span class=\"user-mention\" data-user-id=\"735261\">@Ben Brandt</span> mentioned he's been working on improved dependency management, but he won't be able to make it to tomorrow's meeting; he expects to have something to present in January, though.</p>",
        "id": 488114694,
        "sender_full_name": "Joel Dice",
        "timestamp": 1733928123
    },
    {
        "content": "<p>Yes, I can plan to present in January for sure. Progress has been a bit slow, but more because of lack of time. Brett's pointers last times were super helpful and I feel optimistic with some time over the holidays I can have something meaningful to present next month <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 488119954,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1733929437
    },
    {
        "content": "<p>No pressure at all; enjoy the holiday season!</p>",
        "id": 488122741,
        "sender_full_name": "Joel Dice",
        "timestamp": 1733930161
    },
    {
        "content": "<p>I don't have anything.</p>",
        "id": 488150340,
        "sender_full_name": "Brett Cannon",
        "timestamp": 1733938098
    },
    {
        "content": "<p>Okay, I'll go ahead and cancel it.</p>",
        "id": 488150619,
        "sender_full_name": "Joel Dice",
        "timestamp": 1733938189
    },
    {
        "content": "<p>Meeting today at <time datetime=\"2025-01-09T20:00:00Z\">2025-01-09T13:00:00-07:00</time> (i.e. in about an hour).<br>\nAgenda and notes: <a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\">https://hackmd.io/3ZktfALiSZWn41ad7y3gnA</a><br>\nZoom link: <a href=\"https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09\">https://zoom.us/j/3385977601?pwd=UjJhYWh1MW5RTHg5eE9JTGV4UksrUT09</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f8833a4340ab1f5f4b067117308223870fca5545/68747470733a2f2f6861636b6d642e696f2f696d616765732f6d656469612f4861636b4d442d6e656f2d6f672e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://hackmd.io/3ZktfALiSZWn41ad7y3gnA\" title=\"2024-10-10 - HackMD\">2024-10-10 - HackMD</a></div><div class=\"message_embed_description\">or</div></div></div>",
        "id": 492797953,
        "sender_full_name": "Joel Dice",
        "timestamp": 1736449759
    },
    {
        "content": "<p>I managed to get cpython 3.13 building with the wasi script! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> <br>\n<a href=\"https://github.com/benbrandt/wasi-wheels/pull/28\">https://github.com/benbrandt/wasi-wheels/pull/28</a></p>\n<p>With host triple wasm32-wasip2.</p>\n<p>It doesn't work for 3.12 because it doesn't have the script, but I can just call 2 different functions.</p>\n<p>Still using a fork to enable the <code>--enable-wasm-dynamic-linking</code> flag though.</p>\n<p>Anyway with that I will go to bed, and pick up moving the pydantic builds happening in CI tomorrow hopefully. Thanks for all of the help/work <span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/benbrandt/wasi-wheels/pull/28\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/9a201764ad709aa5cb7c471c50e8d29d771aed86/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353665656538663637656434643763393061343437303431326564306438323633656133626437303438396637353935303965313765306662303231303462392f62656e6272616e64742f776173692d776865656c732f70756c6c2f3238&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/benbrandt/wasi-wheels/pull/28\" title=\"refactor: use wasi.py for 3.13 builds by benbrandt · Pull Request #28 · benbrandt/wasi-wheels\">refactor: use wasi.py for 3.13 builds by benbrandt · Pull Request #28 · benbrandt/wasi-wheels</a></div><div class=\"message_embed_description\">We read every piece of feedback, and take your input very seriously.</div></div></div>",
        "id": 494243348,
        "sender_full_name": "Ben Brandt",
        "timestamp": 1737066045
    },
    {
        "content": "<p>indeed, thanks <span class=\"user-mention\" data-user-id=\"595471\">@Brett Cannon</span> !!!!</p>",
        "id": 494359957,
        "sender_full_name": "Ralph",
        "timestamp": 1737120200
    }
]