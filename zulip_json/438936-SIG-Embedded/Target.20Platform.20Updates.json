[
    {
        "content": "<p>Following our meeting today, I've updated the Target Platform document and created a PR (not merged yet) with the changes. I hope we can use this to drive the conversation along via the PR.</p>\n<p>From the PR comment:</p>\n<p>Based on our E-SIG meetings the document has been updated to:</p>\n<ol>\n<li>Define the ISA platforms to be supported (excludes MIPS)</li>\n<li>Define the Operating Systems to be supported (prioritizing the RTOS platforms no other group will focus on)</li>\n<li>Defined both a development environment and a deployed (target) environment for both OS and ISA</li>\n<li>Define the memory (RAM) and non-volatile memory (storage) footprints to address</li>\n<li>Provided more detailed descriptions of what it means for the E-SIG to address a platform</li>\n<li>Provided explanation of how Moore's law impacts the embedded space and how we can compromise for MCU and MMUs</li>\n<li>Provided stated support for Game Console Development Kits</li>\n</ol>\n<hr>\n<p>Please check the link below - visit, comment, object and correct:</p>\n<p><a href=\"https://github.com/bytecodealliance/sig-embedded/pull/6\">https://github.com/bytecodealliance/sig-embedded/pull/6</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/sig-embedded/pull/6\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/15815e6207306dd0b97d396dce5186afc6c57f2b/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f626334313337373435666437303465353536386535316661303635333665643733653163373763623831613234663563333036623363323035393038653434662f62797465636f6465616c6c69616e63652f7369672d656d6265646465642f70756c6c2f36&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/sig-embedded/pull/6\" title=\"Opinionated Update - ISA, OS, Development Environments and Game Consoles by woodsmc 路 Pull Request #6 路 bytecodealliance/sig-embedded\">Opinionated Update - ISA, OS, Development Environments and Game Consoles by woodsmc 路 Pull Request #6 路 bytecodealliance/sig-embedded</a></div><div class=\"message_embed_description\">Based on our E-SIG meetings the document has been updated to:\n\nDefine the ISA platforms to be supported (excludes MIPS)\nDefine the Operating Systems to be supported (prioritizing the RTOS platforms...</div></div></div>",
        "id": 467331688,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725387523
    },
    {
        "content": "<p>And the latest youtube video is available here: <a href=\"https://youtu.be/2ClAUfeeCSA\">YouTube -  - YouTube</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"2ClAUfeeCSA\" href=\"https://youtu.be/2ClAUfeeCSA\"><img src=\"https://uploads.zulipusercontent.net/6dbccc81451b603a69fd72085f597828e6837ee4/68747470733a2f2f692e7974696d672e636f6d2f76692f32436c41556665654353412f64656661756c742e6a7067\"></a></div>",
        "id": 467359592,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725397730
    },
    {
        "content": "<p>I just realized that if you combine game consoles with embedded, you might talk about a fictitious game console mimicking the resource constraint environments of the 80s: <a href=\"https://en.m.wikipedia.org/wiki/Fantasy_video_game_console\">https://en.m.wikipedia.org/wiki/Fantasy_video_game_console</a><br>\nThese clearly are a good candidate for web assembly experiments.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://en.m.wikipedia.org/wiki/Fantasy_video_game_console\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/f6953379ffc4b79ca91dc712c33c2f506827ad5d/68747470733a2f2f75706c6f61642e77696b696d656469612e6f72672f77696b6970656469612f636f6d6d6f6e732f7468756d622f612f61382f57697a6172645f7069636f5f382e7765626d2f36333670782d2d57697a6172645f7069636f5f382e7765626d2e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://en.m.wikipedia.org/wiki/Fantasy_video_game_console\" title=\"Fantasy video game console - Wikipedia\">Fantasy video game console - Wikipedia</a></div><div class=\"message_embed_description\">A fantasy video game console (or simply fantasy console) is an emulator for a fictitious video game console.[1][2] In short, it aims to create the experience of retrogaming without the need to emulate a real console, allowing the developer to freely decide what specifications their fictional hardware will have.\n</div></div></div>",
        "id": 467363329,
        "sender_full_name": "Christof Petig",
        "timestamp": 1725399477
    },
    {
        "content": "<p>Like WASM-4? <a href=\"https://wasm4.org/docs/#hardware-specs\">https://wasm4.org/docs/#hardware-specs</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://wasm4.org/docs/#hardware-specs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/544ba666f86cc7fa9a2a3e79979a0d8263cf60d4/68747470733a2f2f7761736d342e6f72672f696d672f6c6f676f2e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://wasm4.org/docs/#hardware-specs\" title=\"Introduction | WASM-4\">Introduction | WASM-4</a></div><div class=\"message_embed_description\">WASM-4 is a low-level fantasy game console for building small games with</div></div></div>",
        "id": 467368284,
        "sender_full_name": "Milan",
        "timestamp": 1725401896
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"590366\">Christof Petig</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467363329\">said</a>:</p>\n<blockquote>\n<p>I just realized that if you combine game consoles with embedded, you might talk about a fictitious game console mimicking the resource constraint environments of the 80s: <a href=\"https://en.m.wikipedia.org/wiki/Fantasy_video_game_console\">https://en.m.wikipedia.org/wiki/Fantasy_video_game_console</a><br>\nThese clearly are a good candidate for web assembly experiments.</p>\n</blockquote>\n<p>Ahh I know the Pico8, kinda cool. Also seen the more recent \"retro\" gaming from the Spectrum Next and the Commander X16.</p>",
        "id": 467402472,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725420377
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417958\">Milan</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467368284\">said</a>:</p>\n<blockquote>\n<p>Like WASM-4? <a href=\"https://wasm4.org/docs/#hardware-specs\">https://wasm4.org/docs/#hardware-specs</a></p>\n</blockquote>\n<p>Oh, that's pretty cool.  I need to check that out too.</p>",
        "id": 467402744,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725420454
    },
    {
        "content": "<p>I know <a class=\"stream\" data-stream-id=\"290350\" href=\"/#narrow/stream/290350-wamr\">#wamr</a>  has (or had) a UI element to it. I recall a demo from <span class=\"user-mention\" data-user-id=\"295808\">@Jonathan Beri</span> some time ago on it.</p>",
        "id": 467402880,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725420509
    },
    {
        "content": "<p>I wonder if we could take the WASM-4 engine and run on it on embedded device... I like the memory mapping idea, talk about totally simplifying hardware mapping...  that's kinda super sweet, and simple. </p>\n<p>Ahh I just need more hours in the day to play with this stuff!</p>",
        "id": 467404172,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725421366
    },
    {
        "content": "<p><a href=\"https://wasm4.org/docs/reference/memory\">https://wasm4.org/docs/reference/memory</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://wasm4.org/docs/reference/memory\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/544ba666f86cc7fa9a2a3e79979a0d8263cf60d4/68747470733a2f2f7761736d342e6f72672f696d672f6c6f676f2e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://wasm4.org/docs/reference/memory\" title=\"Memory Layout | WASM-4\">Memory Layout | WASM-4</a></div><div class=\"message_embed_description\">Endianness</div></div></div>",
        "id": 467404189,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725421375
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"435699\">Chris Woods</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467402880\">said</a>:</p>\n<blockquote>\n<p>I know <a class=\"stream\" data-stream-id=\"290350\" href=\"/#narrow/stream/290350-wamr\">#wamr</a>  has (or had) a UI element to it. I recall a demo from <span class=\"user-mention silent\" data-user-id=\"295808\">Jonathan Beri</span> some time ago on it.</p>\n</blockquote>\n<p>Yup! It was <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/tree/main/samples/gui\">using</a> their \"app framework\" and a popular OSS GUI for embedded systems, lvgl. They've since <a href=\"https://github.com/bytecodealliance/wamr-app-framework/tree/main/app-framework/wgl\">more capabilities</a> around graphics into their framework (which is separate from the runtime AFAIK.)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/tree/main/samples/gui\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/0d44e1e2b96c92895cdc65077604f2abffece1ab/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f356531373839353031313936333736626233373564306565383163323461383461363966336130366437303330306632343539323365323131386232333266622f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/tree/main/samples/gui\" title=\"wasm-micro-runtime/samples/gui at main 路 bytecodealliance/wasm-micro-runtime\">wasm-micro-runtime/samples/gui at main 路 bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime (WAMR). Contribute to bytecodealliance/wasm-micro-runtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wamr-app-framework/tree/main/app-framework/wgl\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/22427667a566169412596a29d30bcb98264373f2/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313031303661336632653162656562643933653566643361643639356336636230616465623834396261333638343963363434646365363539353037653232342f62797465636f6465616c6c69616e63652f77616d722d6170702d6672616d65776f726b&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wamr-app-framework/tree/main/app-framework/wgl\" title=\"wamr-app-framework/app-framework/wgl at main 路 bytecodealliance/wamr-app-framework\">wamr-app-framework/app-framework/wgl at main 路 bytecodealliance/wamr-app-framework</a></div><div class=\"message_embed_description\">WebAssembly Micro Runtime Application Framework. Contribute to bytecodealliance/wamr-app-framework development by creating an account on GitHub.</div></div></div>",
        "id": 467408365,
        "sender_full_name": "Jonathan Beri",
        "timestamp": 1725423446
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"435699\">Chris Woods</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467404172\">said</a>:</p>\n<blockquote>\n<p>I wonder if we could take the WASM-4 engine and run on it on embedded device... I like the memory mapping idea, talk about totally simplifying hardware mapping...  that's kinda super sweet, and simple. </p>\n<p>Ahh I just need more hours in the day to play with this stuff!</p>\n</blockquote>\n<p>I've used wasm4-aot to build GBA ROMs from wasm4 carts although I've only run the ROMs in emulators so far: <a href=\"https://github.com/asiekierka/wasm4-aot\">https://github.com/asiekierka/wasm4-aot</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/asiekierka/wasm4-aot\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/52923611e180bc42ac51cc227ccd7f606cb048d1/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323138663165653938613035613563383233346434346135643631373931646239313938336536363066656337663836613761623936306635623336336432322f617369656b6965726b612f7761736d342d616f74&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/asiekierka/wasm4-aot\" title=\"GitHub - asiekierka/wasm4-aot: Ahead-of-time compiled WASM-4 runtime\">GitHub - asiekierka/wasm4-aot: Ahead-of-time compiled WASM-4 runtime</a></div><div class=\"message_embed_description\">Ahead-of-time compiled WASM-4 runtime. Contribute to asiekierka/wasm4-aot development by creating an account on GitHub.</div></div></div>",
        "id": 467425231,
        "sender_full_name": "Milan",
        "timestamp": 1725430304
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417958\">Milan</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467425231\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"435699\">Chris Woods</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467404172\">said</a>:</p>\n<blockquote>\n<p>I wonder if we could take the WASM-4 engine and run on it on embedded device... I like the memory mapping idea, talk about totally simplifying hardware mapping...  that's kinda super sweet, and simple. </p>\n<p>Ahh I just need more hours in the day to play with this stuff!</p>\n</blockquote>\n<p>I've used wasm4-aot to build GBA ROMs from wasm4 carts although I've only run the ROMs in emulators so far: <a href=\"https://github.com/asiekierka/wasm4-aot\">https://github.com/asiekierka/wasm4-aot</a></p>\n</blockquote>\n<p>You have acheived hero status! - One of my fave consoles. I only got as far as downloading the open source SDK for the GBA, and got a hello world working. What I loved about the GBA was the way in which the hardware and software SDK worked so well together, it was really cool. But that's the extent of my Game Console experience.</p>",
        "id": 467503144,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725449417
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"295808\">Jonathan Beri</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467408365\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"435699\">Chris Woods</span> <a href=\"#narrow/stream/438936-SIG-Embedded/topic/Target.20Platform.20Updates/near/467402880\">said</a>:</p>\n<blockquote>\n<p>I know <a class=\"stream\" data-stream-id=\"290350\" href=\"/#narrow/stream/290350-wamr\">#wamr</a>  has (or had) a UI element to it. I recall a demo from <span class=\"user-mention silent\" data-user-id=\"295808\">Jonathan Beri</span> some time ago on it.</p>\n</blockquote>\n<p>Yup! It was <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/tree/main/samples/gui\">using</a> their \"app framework\" and a popular OSS GUI for embedded systems, lvgl. They've since <a href=\"https://github.com/bytecodealliance/wamr-app-framework/tree/main/app-framework/wgl\">more capabilities</a> around graphics into their framework (which is separate from the runtime AFAIK.)</p>\n</blockquote>\n<p>Ohh, so it should be... :)</p>",
        "id": 467506235,
        "sender_full_name": "Chris Woods",
        "timestamp": 1725450105
    }
]