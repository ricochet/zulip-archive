[
    {
        "content": "<p>sharing here because I think this is very relevant to SIG-embedded!</p>\n<p><a href=\"https://bytecodealliance.org/articles/wasmtime-portability\">https://bytecodealliance.org/articles/wasmtime-portability</a></p>\n<blockquote>\n<p>Portability is among the first properties promoted on <a href=\"https://webassembly.org/\">WebAssembly’s official homepage</a>:</p>\n<blockquote>\n<p>WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable compilation target for programming languages, enabling deployment on the web for client and server applications.</p>\n</blockquote>\n<p>This portability has led <a href=\"https://wasmbyexample.dev/home.en-us.html\">many</a> <a href=\"https://www.cs.cmu.edu/wrc/\">people</a> to <a href=\"https://www.infoq.com/news/2015/06/webassembly-wasm/\">claim</a> that it is a “universal bytecode” — an instruction set that can run on any computer, abstracting away the underlying native architecture and operating system. In practice, however, there remain places you cannot take standard WebAssembly, for example certain memory-constrained embedded devices. Runtimes have been forced to choose between deviating from the standard with ad-hoc language modifications or else avoiding these platforms. This article details in-progress standards proposals to lift these extant language limitations; enumerates recent engineering efforts to greatly expand Wasmtime’s platform support; and, finally, shares some ways that you can get involved and help us further improve Wasm’s portability.</p>\n</blockquote>\n<p>thanks for reading and sharing!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://bytecodealliance.org/articles/wasmtime-portability\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b666ca74a20745aca2566cd241108afdcfa09d04/68747470733a2f2f62797465636f6465616c6c69616e63652e6f72672f696d616765732f6176617461722e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://bytecodealliance.org/articles/wasmtime-portability\" title=\"Making WebAssembly and Wasmtime More Portable\">Making WebAssembly and Wasmtime More Portable</a></div><div class=\"message_embed_description\">Portability is among the first properties promoted on WebAssembly’s officialhomepage:</div></div></div>",
        "id": 489481093,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1734440712
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> Aweome blog post. It's really great to see the investement in the runtime, I know that's a lot of work and it isn't easy. Great to see the lowering of the requirements of WasmTime. Thank you for sharing it!</p>",
        "id": 490206093,
        "sender_full_name": "Chris Woods",
        "timestamp": 1734717012
    },
    {
        "content": "<p>fantastic post, <span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span></p>",
        "id": 490314258,
        "sender_full_name": "Ralph",
        "timestamp": 1734801024
    },
    {
        "content": "<p>thanks y'all!</p>",
        "id": 490407855,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1734890827
    }
]