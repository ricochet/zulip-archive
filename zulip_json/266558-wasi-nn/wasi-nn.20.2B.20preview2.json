[
    {
        "content": "<p>I have been working on adapting the Wasmtime implementation of wasi-nn to use WIT: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6821\">https://github.com/bytecodealliance/wasmtime/pull/6821</a>. That PR retains the original WITX glue code in<code>preview1.rs</code> and adds new WIT glue code in <code>preview2.rs</code>. (Now, I understand that wasi-nn is not included in \"preview1,\" etc., I'm just referring to the ABI that each part supports).</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/6821\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/8744535111b16e0779987e157f7e66570e7a81b5\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336562656233316164383033383632613838343438666266613238376364653030633166666330313264393931323263353135666131313361626463363538322f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f36383231)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6821\" title=\"wasi-nn: refactor to allow `preview2` access by abrown · Pull Request #6821 · bytecodealliance/wasmtime\">wasi-nn: refactor to allow `preview2` access by abrown · Pull Request #6821 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This change refactors the wasmtime-wasi-nn crate to allow access from both preview1 and preview2 ABIs. Though the wasi-nn specification has included a WIT description for some time, here we use som...</div></div></div>",
        "id": 383364311,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691601356
    },
    {
        "content": "<p>I would like the old \"preview1-build\" Wasm modules to still work for some intermediate time period but I am also wondering if I can get rid of <code>preview1.rs</code> and rely on some kind of adapter to use <code>preview2.rs</code> to service both \"preview1-built\" and \"preview2-built\" code (e.g., <code>wasi-preview1-component-adapter</code>?).</p>",
        "id": 383364910,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691601484
    },
    {
        "content": "<p>Is it better to just maintain implementations for both ABIs for now? cc: <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>, <span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span></p>",
        "id": 383365155,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691601541
    },
    {
        "content": "<p>i prefer to call those abis witx and wit</p>",
        "id": 383368292,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1691602193
    },
    {
        "content": "<p>its up to you if you want to keep support for the witx abi built on top of the wit-bindgen traits, like we do in <code>wasmtime_wasi::preview2::preview1</code></p>",
        "id": 383368526,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1691602222
    },
    {
        "content": "<p>the <code>wasi-preview1-component-adapter</code> is just for adapting stuff that is required by the toolchain. wasi-nn should not be part of that adapter.</p>",
        "id": 383368948,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1691602301
    },
    {
        "content": "<p>if someone is trying to use wasi-nn from a component they should be recompiling their project to use <code>wit-bindgen</code>  with the wasi-nn wits</p>",
        "id": 383369225,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1691602346
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253992\">Pat Hickey</span> <a href=\"#narrow/stream/266558-wasi-nn/topic/wasi-nn.20.2B.20preview2/near/383368292\">said</a>:</p>\n<blockquote>\n<p>i prefer to call those abis witx and wit</p>\n</blockquote>\n<p>Ok, I changed <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6821\">https://github.com/bytecodealliance/wasmtime/pull/6821</a> to use those terms instead</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/6821\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/036162767cd8e9be4ae328d65504070e3aecfb54\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336536373563343465646266656637306530386238366633343339346266396132373866646166366435396433343065393137643531646232646266353162652f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f36383231)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6821\" title=\"wasi-nn: refactor to allow `preview2` access by abrown · Pull Request #6821 · bytecodealliance/wasmtime\">wasi-nn: refactor to allow `preview2` access by abrown · Pull Request #6821 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This change refactors the wasmtime-wasi-nn crate to allow access from both preview1 and preview2 ABIs. Though the wasi-nn specification has included a WIT description for some time, here we use som...</div></div></div>",
        "id": 383433263,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691623195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> Will this impact availability of wasi-nn once preview2 stuff merges into Viceroy? If it does then Andrew and I need to plan on our work colliding, in particular if I'm making changes to preview1 backend impl in wasmtime for Sept</p>",
        "id": 383855851,
        "sender_full_name": "Matthew Tamayo-Rios",
        "timestamp": 1691740223
    }
]