[
    {
        "content": "<p>I intend to merge a change to wasi-nn to add \"named models,\" which adds a way to refer to ML models by name instead of having to pass in all of the bytes (see <span class=\"user-mention\" data-user-id=\"550229\">@Matthew Tamayo-Rios</span>'s PR here: <a href=\"https://github.com/WebAssembly/wasi-nn/pull/38\">https://github.com/WebAssembly/wasi-nn/pull/38</a>). I'm looking for input on whether this functionality should be bubbled up to the Wasmtime CLI flags.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-nn/pull/38\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/a7e9685d0131d7835ea909ab83cbfc15b1c71a5c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f616332376465623461636162633766333838373330373432623433663130353762656332373430376462613962316261316534343737393361376135353161662f576562417373656d626c792f776173692d6e6e2f70756c6c2f3338)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-nn/pull/38\" title=\"Support loading models by name by geekbeast · Pull Request #38 · WebAssembly/wasi-nn\">Support loading models by name by geekbeast · Pull Request #38 · WebAssembly/wasi-nn</a></div><div class=\"message_embed_description\">This change has been scoped down to only adding support for getting a handle to a named model for inference and updating the WIT bindings to the latest spec.</div></div></div>",
        "id": 383358654,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691600302
    },
    {
        "content": "<p>The way I'm thinking about it, it would look and feel approximately like preopened directories. Maybe the user passes in <code>--preloaded-models=&lt;format&gt;:&lt;directory&gt;</code> and the wasmtimewasi-nn crate figures out the necessary bits to load those models and make them available with the directory name. Maybe we add a <code>:&lt;name&gt;</code> suffix on there so users have more control of the name.</p>",
        "id": 383360080,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691600533
    },
    {
        "content": "<p>My rationale for doing this in the CLI is to allow experimentation with this new API. This would also be available as a programmatic API on the  the wasi-nn host object (e.g., during construction) for embedders to use.</p>",
        "id": 383360988,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691600690
    },
    {
        "content": "<p>Let me know any feedback before I go off and implement a bunch of stuff! cc: <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>, <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>, <span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span></p>",
        "id": 383361347,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1691600745
    },
    {
        "content": "<p>I dunno much about wasi-nn so I can't really comment on whether this seems right or not, but as for having a CLI option for wasi-nn that seems reasonable since we have a bunch for wasi-common</p>",
        "id": 383365516,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1691601620
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> !</p>\n<p>This would be amazing. I started <a href=\"https://github.com/vmware-labs/wasm-workers-server/pull/201\">integrating WASI-NN</a> to <a href=\"https://workers.wasmlabs.dev/\">Wasm Workers Server</a> and I see named models as a great addition to the project. Could we help on this?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/vmware-labs/wasm-workers-server/pull/201\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/81510f2213ec94188386492a70176dcd0328496c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633632663734333534626632313331376661303862333865373166316336313731376439323165333461653933663637343638343338626633623330326664652f766d776172652d6c6162732f7761736d2d776f726b6572732d7365727665722f70756c6c2f323031)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/vmware-labs/wasm-workers-server/pull/201\" title=\"feat: add WASI-NN bindings to Wasm Workers Server by Angelmmiguel · Pull Request #201 · vmware-labs/wasm-workers-server\">feat: add WASI-NN bindings to Wasm Workers Server by Angelmmiguel · Pull Request #201 · vmware-labs/wasm-workers-server</a></div><div class=\"message_embed_description\">Introduce the new WASI-NN bindings to run Machine Learning (ML) inference in workers. It includes a new configuration parameter (features.wasi_nn) that allows you to set the allowed ML backends for...</div></div></div>",
        "id": 386546745,
        "sender_full_name": "Angel M",
        "timestamp": 1692689300
    },
    {
        "content": "<p>cool, I don't think I'd ever looked to closely at that project; sort of neat. I think the next step to get named models working is to get a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">https://github.com/bytecodealliance/wasmtime/pull/6854</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b5f469d0c925c6907a5132862ac0ca8054a10489\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353433613137323635376266386562326131336438383364316632643931376664306136366430666230313936353761383833393163653063323234386532332f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f36383534)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\" title=\"wasi-nn: add named models by abrown · Pull Request #6854 · bytecodealliance/wasmtime\">wasi-nn: add named models by abrown · Pull Request #6854 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This implements named models in Wasmtime; see the commit messages for more details.</div></div></div>",
        "id": 386649644,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692721958
    },
    {
        "content": "<p>I had been tagging <span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> with that sequence of PRs but he's probably busy with other stuff; <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span>, <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>... do either of you want to take a look?</p>",
        "id": 386649792,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692722013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"512058\">@Angel M</span>, beyond that, I think the feature should be relatively \"done\"; I have some additional PRs to make with some cleanups and a testing overhaul for wasi-nn and <span class=\"user-mention\" data-user-id=\"550229\">@Matthew Tamayo-Rios</span> has an additional backend to add in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6867\">https://github.com/bytecodealliance/wasmtime/pull/6867</a>. If you're interested in helping out, though, there are many little things that could be \"made nicer\" that you will see as you use wasi-nn--PRs for any of those would be appreciated. Also, if you're interested in adding new backends that would be helpful!</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/6867\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f20bcc6c8f2fa60ed36e006659a9596c435a1eef\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f343134653232333636626637346132653831653666363537333231356666653332613039323562336134663033363830623066303734653263323936333532352f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f36383637)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6867\" title=\"Add kserve backend implementation for wasi-nn by geekbeast · Pull Request #6867 · bytecodealliance/wasmtime\">Add kserve backend implementation for wasi-nn by geekbeast · Pull Request #6867 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This implements a kserve backend allowing forwarding of wasi-nn calls over http to servers implementing the kserve protocol (documented here https://github.com/kserve/kserve/blob/master/docs/predic...</div></div></div>",
        "id": 386651173,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692722335
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254110\">Andrew Brown</span> <a href=\"#narrow/stream/266558-wasi-nn/topic/Named.20models.20in.20the.20Wasmtime.20CLI/near/386649644\">said</a>:</p>\n<blockquote>\n<p>cool, I don't think I'd ever looked to closely at that project; sort of neat. I think the next step to get named models working is to get a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6854\">https://github.com/bytecodealliance/wasmtime/pull/6854</a>.</p>\n</blockquote>\n<p>I see the PR is already merged! <span aria-label=\"clap\" class=\"emoji emoji-1f44f\" role=\"img\" title=\"clap\">:clap:</span></p>",
        "id": 386771408,
        "sender_full_name": "Angel M",
        "timestamp": 1692772669
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254110\">Andrew Brown</span> <a href=\"#narrow/stream/266558-wasi-nn/topic/Named.20models.20in.20the.20Wasmtime.20CLI/near/386651173\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"512058\">Angel M</span>, beyond that, I think the feature should be relatively \"done\"; I have some additional PRs to make with some cleanups and a testing overhaul for wasi-nn and <span class=\"user-mention silent\" data-user-id=\"550229\">Matthew Tamayo-Rios</span> has an additional backend to add in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6867\">https://github.com/bytecodealliance/wasmtime/pull/6867</a>. If you're interested in helping out, though, there are many little things that could be \"made nicer\" that you will see as you use wasi-nn--PRs for any of those would be appreciated. Also, if you're interested in adding new backends that would be helpful!</p>\n</blockquote>\n<p>Amazing! First thing, I will give it a try and test the named-models feature. This will allow <code>wws</code> to configure a set of predefined models per worker / function. Regarding the <code>wasi-nn-PRs</code>, is there any specific tag for those issues? Those little improvements seem to be a great way to get involved in the project :)</p>\n<p>Definitely adding new backends is something we have in mind. Tensorflowlite or Pytorch could be great additions. I know there are some security concerns related to Tensorflow. Not sure about your take on that one.</p>",
        "id": 386771989,
        "sender_full_name": "Angel M",
        "timestamp": 1692773013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> another topic that I have in mind are LLMs and dynamic input / outputs. I'm still very new to AI / ML, so maybe you already figure out how to work with LLMs and WASI-NN. However, I couldn't find any example about those. Let me open a separate conversation about this so we can close this topic.</p>",
        "id": 386772357,
        "sender_full_name": "Angel M",
        "timestamp": 1692773192
    },
    {
        "content": "<p>And thank you for all the context and responses!</p>",
        "id": 386772404,
        "sender_full_name": "Angel M",
        "timestamp": 1692773204
    },
    {
        "content": "<p>Well, I haven't yet created issues for TODO work; I'm still in the middle of things so it's hard to see what should be fixed immediately and what I should postpone for later. I'll let you know once I have a bit more clarity on that. (e.g., see refactorings like <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6893\">https://github.com/bytecodealliance/wasmtime/pull/6893</a>)</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/6893\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/59b9dd261536e22d93f020596146c6727a737633\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633766386232343437613362613737336430616633633364313434653337636339663665366434633034653139663930346566383464396533396534303236352f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f36383933)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6893\" title=\"wasi-nn: remove `BackendKind`, add wrapper `struct`s by abrown · Pull Request #6893 · bytecodealliance/wasmtime\">wasi-nn: remove `BackendKind`, add wrapper `struct`s by abrown · Pull Request #6893 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">One improvement that came from discussions with @geekbeast is that BackendKind, the enum used for differentiating between ML implementation, is no longer necessary. Instead, we can use the generate...</div></div></div>",
        "id": 386920197,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692811179
    },
    {
        "content": "<p>Since TF accepts operators that can read/write files, do network I/O, etc., it seems like it would just open Wasmtime up to attacks. Some way of mitigating that would need to get figured out before moving <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3977\">https://github.com/bytecodealliance/wasmtime/pull/3977</a> forward. I haven't looked too closely at PyTorch yet.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/3977\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/634d77853f8f5f98225d1fc79f73c687a0868a62\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323261653737323166386264666430633331386566343531336233653464396364326134656563373238316137643336663239313233616132656130333862622f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f33393737)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/3977\" title=\"Adding the TensorFlow backend to wasi-nn by brianjjones · Pull Request #3977 · bytecodealliance/wasmtime\">Adding the TensorFlow backend to wasi-nn by brianjjones · Pull Request #3977 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Users will now be able to use either OpenVino or\nTensorflow for their backend.</div></div></div>",
        "id": 386920533,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692811321
    },
    {
        "content": "<p>re: LLMs, maybe <span class=\"user-mention\" data-user-id=\"550229\">@Matthew Tamayo-Rios</span> can comment further. He is planning to demo something at WasmCon and may have more comments about that.</p>",
        "id": 386920681,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692811382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"512058\">@Angel M</span>, I would say that any issues you find by using wasi-nn are extremely valuable. It is quite difficult to exhaustively test a thing like \"ML\" so and eventually we need to have a better testing strategy.</p>",
        "id": 386924688,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692813113
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> for the background on the different tasks and refactors. I will take a look at the different open issues to start getting familiar with the codebase.</p>",
        "id": 386930896,
        "sender_full_name": "Angel M",
        "timestamp": 1692815715
    },
    {
        "content": "<p>Regarding WasmCon, that's amazing! Do you plan to attend <span class=\"user-mention\" data-user-id=\"254110\">@Andrew Brown</span> ? I will give two talks, so I'll be there for sure hehe. Would be great to chat with you both <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 386931238,
        "sender_full_name": "Angel M",
        "timestamp": 1692815885
    },
    {
        "content": "<p>Yeah, I'll be there. It will be good to meet in person!</p>",
        "id": 386960711,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1692831010
    },
    {
        "content": "<p>Amazing! We plan to work more and more on Wasm + AI, so it would be great to chat with you and learn more :)</p>",
        "id": 387288596,
        "sender_full_name": "Angel M",
        "timestamp": 1692973763
    },
    {
        "content": "<p>I will also be there and will be showing off a prompt based stable diffusion demo running through WASI-NN on top of fastly's compute@edge infrastructure.</p>",
        "id": 387611099,
        "sender_full_name": "Matthew Tamayo-Rios",
        "timestamp": 1693206103
    },
    {
        "content": "<p>One thing to keep in mind as we consider additional backends is that we need to figure out a better testing story for said backends since most backends require loading  the relevant library (openvino, libtorch, etc) in order to run.</p>",
        "id": 387611111,
        "sender_full_name": "Matthew Tamayo-Rios",
        "timestamp": 1693206109
    },
    {
        "content": "<p>The other big issue for TensorFlow is that the SavedModel format expects to be able to read from a directory on disk. There's an older h5 format that is more limited in functionality that can be read from bytes, but it one more challenge to using tensorflow models in a dynamic environment. There's some work arounds, but I'm not sure they work outside of python (i.e you can implement a virtual drive)</p>",
        "id": 387611429,
        "sender_full_name": "Matthew Tamayo-Rios",
        "timestamp": 1693206246
    },
    {
        "content": "<p>PyTorch also has a lot of outstanding security issues at the moment for untrusted models, because they use the pickle storage format.</p>",
        "id": 387611529,
        "sender_full_name": "Matthew Tamayo-Rios",
        "timestamp": 1693206303
    },
    {
        "content": "<p>They are looking at switching to SafeTensors but have not done so yet.</p>",
        "id": 387611559,
        "sender_full_name": "Matthew Tamayo-Rios",
        "timestamp": 1693206313
    }
]