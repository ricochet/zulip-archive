[
    {
        "content": "<p>I recently tried to use the Wizer tool to pre-initialize the <a href=\"https://github.com/bytecodealliance/sightglass/blob/main/benchmarks/image-classification/rust-benchmark/src/main.rs\">image-classification</a> benchmark in the sightglass repository. While I was able to read in the mobilenet files, I was not able to call the wasmtime_wasi_nn implementations of wasi_nn:load and wasi_nn::init_execution_context in the wizer.initialize function because it seems like those <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7717d8fa5583b6cdd5140952e32a632d5a8d1cbd/crates/wasi-nn/src/impl.rs#L27-L53\">two functions</a> keeps state on the host (self.graphs and self.executions) that are lost in the wizened module. Is this correct, and if so would it theoretically be possible to keep that state in the Wasm module instead to make wasi_nn more Wizer-friendly? This isn't a feature request, but more out of curiosity.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/sightglass/blob/main/benchmarks/image-classification/rust-benchmark/src/main.rs\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/6b6b906efac9781227146470e407f86326c6b127\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623262666563333863323533383262393738376261613165656533666137666132386166336235346239663363616639393933613463636263303365353632632f62797465636f6465616c6c69616e63652f7369676874676c617373)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/sightglass/blob/main/benchmarks/image-classification/rust-benchmark/src/main.rs\" title=\"sightglass/main.rs at main · bytecodealliance/sightglass\">sightglass/main.rs at main · bytecodealliance/sightglass</a></div><div class=\"message_embed_description\">A benchmark suite and tool to compare different implementations of the same primitives. - sightglass/main.rs at main · bytecodealliance/sightglass</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/blob/7717d8fa5583b6cdd5140952e32a632d5a8d1cbd/crates/wasi-nn/src/impl.rs#L27-L53\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/a221c0ed253bea68694060da6c7a942c859256b2\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386133636433386134313539376537363565333834336463633166343338633836323531316665353139373564643339633932393137383230623561333634352f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/blob/7717d8fa5583b6cdd5140952e32a632d5a8d1cbd/crates/wasi-nn/src/impl.rs#L27-L53\" title=\"wasmtime/impl.rs at 7717d8fa5583b6cdd5140952e32a632d5a8d1cbd · bytecodealliance/wasmtime\">wasmtime/impl.rs at 7717d8fa5583b6cdd5140952e32a632d5a8d1cbd · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 347076619,
        "sender_full_name": "wsta",
        "timestamp": 1680687027
    },
    {
        "content": "<p>When you say keep state in the wasm module do you mean on the guest side?</p>",
        "id": 387610794,
        "sender_full_name": "Matthew Tamayo-Rios",
        "timestamp": 1693205969
    }
]