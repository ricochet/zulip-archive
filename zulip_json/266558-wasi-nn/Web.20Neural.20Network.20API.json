[
    {
        "content": "<p>Is there overlap between wasi-nn and web-nn? Apologies if this has been asked before.</p>\n<ul>\n<li><a href=\"https://github.com/webmachinelearning/webnn\">https://github.com/webmachinelearning/webnn</a></li>\n<li><a href=\"https://www.w3.org/TR/webnn/\">https://www.w3.org/TR/webnn/</a></li>\n</ul>\n<p>It would be very interesting if wasi-nn components could be backed by web-nn using a tool like JCO.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/webmachinelearning/webnn\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b2008fde50f9f0cbadf4faefb2564c75afa05eed\\/68747470733a2f2f7265706f7369746f72792d696d616765732e67697468756275736572636f6e74656e742e636f6d2f3135353630373638362f38643265303030302d643333642d313165622d393031352d386332303732303865646131)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/webmachinelearning/webnn\" title=\"GitHub - webmachinelearning/webnn: ðŸ§  Web Neural Network API\">GitHub - webmachinelearning/webnn: ðŸ§  Web Neural Network API</a></div><div class=\"message_embed_description\">ðŸ§  Web Neural Network API. Contribute to webmachinelearning/webnn development by creating an account on GitHub.</div></div></div>",
        "id": 400045052,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1698974970
    },
    {
        "content": "<p>There is one key difference between the APIs: WebNN is a model builder API in which one \"builds up\" a graph of nodes, the ML operations to perform. wasi-nn is a model loader API in which one loads an encoded version of a model in a single step. In the model builder paradigm, the user can introspect the graph operations--low-level control. In the model loader paradigm, the model contents are essentially opaque to the user--high-level ease of use.</p>",
        "id": 400046538,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1698975956
    },
    {
        "content": "<p>When wasi-nn was first proposed, we discussed this difference with the Web ML working group: at the time they were also considering enabling the model loader paradigm for WebNN. That didn't happen (though maybe at some point it still could?).</p>",
        "id": 400046699,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1698976072
    },
    {
        "content": "<p>Ah OK that makes sense. While WebNN may adopt the loader paradigm, are there plans for creating a builder API for wasi?</p>",
        "id": 400046836,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1698976186
    },
    {
        "content": "<p>Many of the key WebNN contributors from Intel work in our larger group so we have discussed how one might implement wasi-nn in terms of WebNN. No one has vetted this idea with implementation (so take it for the idea that it is), but it could be possible to write code to read a model in, e.g., the ONNX format and rebuild that as a WebNN graph.</p>",
        "id": 400046898,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1698976209
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"421591\">Bailey Hayes</span> <a href=\"#narrow/stream/266558-wasi-nn/topic/Web.20Neural.20Network.20API/near/400046836\">said</a>:</p>\n<blockquote>\n<p>Ah OK that makes sense. While WebNN may adopt the loader paradigm, are there plans for creating a builder API for wasi?</p>\n</blockquote>\n<p>I think that idea has been floated, but my sense is that the easiest thing here is to try to build an \"encoded graph to WebNN graph\" converter.</p>",
        "id": 400047003,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1698976316
    },
    {
        "content": "<p>Convincing WebNN to adopt the loader paradigm -- lots of work and a long shot. Defining a WebNN clone in wasi-nn and implementing it in several engines -- even more work! But creating a conversion from a well-defined model encoding (e.g., ONNX, OpenVINO) to the also well-defined WebNN builder API seems... workable. Ningxin (one of the leads from our group) showed us that in some phase for a certain ML backend, WebNN already does this kind of conversion. My thought is that this converter could be compiled to a combination of WebAssembly and JS, which seems crucial for using it in JCO.</p>",
        "id": 400047450,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1698976596
    },
    {
        "content": "<p>I suspect there may be certain parts of graph encodings that cannot yet be modeled in WebNN's builder API, but that is the part that would need to be vetted.</p>",
        "id": 400047540,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1698976677
    },
    {
        "content": "<p>I don't have a use-case (yet) for needing this in a js runtime, but it's certainly something I'm curious about. Thank you for the info</p>",
        "id": 400047828,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1698976829
    },
    {
        "content": "<p>I think it is a good idea to add support of wasi-nn in JCO at some point, via an ML framework layer such as onnx.js or tensorflow.js.</p>",
        "id": 401209584,
        "sender_full_name": "Mingqiu Sun",
        "timestamp": 1699553123
    }
]