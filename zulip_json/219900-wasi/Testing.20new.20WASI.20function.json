[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>  I am on the process of testing the new WASI functions. I manage to run <code>test-programs</code> successfully, however when writing a new test my WASI functions doesn't seem to be available. After some poking around, I found that the <code>build.rs</code> that is inside <code>test-programs</code> is using cargo to compile the tests with target <code>wasm32-wasi</code>. It seems to me that the installed target <code>wasm32-wasi</code> ain't picking up my change (understandably so, why would it?). Question is, how can I make this work.</p>",
        "id": 198823173,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1590528025
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"305220\">@Emiliano Lesende</span> this is probably a problem with Cargo not picking up on the fact you've just dropped a brand new test case into <code>test-programs/wasi-tests/src/bin</code>. If you run <code>cargo clean</code> and then re-run the tests with <code>cargo test --features test-programs/test_programs --package test-programs</code>, this should hopefully include your tests as well.</p>",
        "id": 198827443,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1590530724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263195\">@Jakub Konka</span> It does include my test. The problem is the fact that my test doesn't compile because the WASI functions I added they are not found.</p>\n<div class=\"codehilite\"><pre><span></span><code>--- stderr\n   Compiling libc v0.2.69\n   Compiling wasi v0.9.0+wasi-snapshot-preview1\n   Compiling more-asserts v0.2.1\n   Compiling wasi-tests v0.16.0 (/Users/emilianolesende/Source/wasmtime/crates/test-programs/wasi-tests)\nerror[E0412]: cannot find type `Addr` in crate `wasi`\n --&gt; src/bin/addr_resolve.rs:6:54\n  |\n6 | unsafe fn exec_addr_resolve(host: &amp;str) -&gt; Vec&lt;wasi::Addr&gt; {\n  |                                                      ^^^^ not found in `wasi`\n</code></pre></div>",
        "id": 198827759,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1590530916
    },
    {
        "content": "<p>Oh, I see. It looks to me like you'd like to find <code>Addr</code> struct/enum in the <code>wasi</code> which so happens is a crate totally separate from anything we have in <code>wasmtime</code>. In fact, <code>wasi</code> crate the error is pointing at is here: <a href=\"https://github.com/bytecodealliance/wasi\">https://github.com/bytecodealliance/wasi</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasi\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasi\" title=\"bytecodealliance/wasi\">bytecodealliance/wasi</a></div><div class=\"message_embed_description\">Experimental WASI API bindings for Rust. Contribute to bytecodealliance/wasi development by creating an account on GitHub.</div></div></div>",
        "id": 198828091,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1590531126
    },
    {
        "content": "<p>What you should then do, at least for testing/debugging, fork <code>wasi</code> crate, add your bindings, and then depend on your fork as a git dependency in <code>test-programs</code></p>",
        "id": 198828128,
        "sender_full_name": "Jakub Konka",
        "timestamp": 1590531167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263195\">@Jakub Konka</span> Ohhh. That was the part I was missing. I'll try that right now. Thank you. I definitely didn't do that. :)</p>",
        "id": 198828567,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1590531483
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263195\">@Jakub Konka</span> I've tried compiling my own wasi, I've successfully regenerated <a href=\"http://lib_generated.rs\">lib_generated.rs</a> but now when I try to compile test-programs I get a:</p>\n<div class=\"codehilite\"><pre><span></span><code>error[E0609]: no field `pr_type` on type `wasi::lib_generated::Prestat`\n  --&gt; src/lib.rs:18:21\n   |\n18 |             if stat.pr_type != wasi::PREOPENTYPE_DIR {\n   |                     ^^^^^^^ unknown field\n   |\n   = note: available fields are: `tag`, `u`\n</code></pre></div>",
        "id": 199626747,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591194660
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> It seems that <code>test-programs</code> hasn't been updated to use your tagged unions change on <code>generate-raw</code>. How I can build a pre-tagged union or is there a version of <code>test-programs</code> that use wasi API that is tagged union compatible?</p>",
        "id": 199634889,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591198341
    },
    {
        "content": "<p>hi, sorry about that, i'm not familiar with <code>test-programs</code> or was aware that it broke</p>",
        "id": 199639120,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1591200215
    },
    {
        "content": "<p>the tagged unions change was carefully designed to be ABI compatible, but codegen and tools that consume struct and union fields names needed to be updated as part of the tagged unions change. can you point me to the place this is causing an issue?</p>",
        "id": 199639288,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1591200292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> I figured that much, I added a PR for the change. <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1810/files\">https://github.com/bytecodealliance/wasmtime/pull/1810/files</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1810/files\" style=\"background-image: url(https://avatars2.githubusercontent.com/u/316400?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1810/files\" title=\"fix(tagged-union): changed test programs to use new tagged union by 3miliano 路 Pull Request #1810 路 bytecodealliance/wasmtime\">fix(tagged-union): changed test programs to use new tagged union by 3miliano 路 Pull Request #1810 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This PR adapts test-programs code to use the new tagged-unions generated code of wasi. Note that wasi dependency has not been updated, we should release a wasi 0.9.1 (which includes the tagged-unio...</div></div></div>",
        "id": 199641572,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591201354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> You will need to release wasi again as 0.9.1 with the tagged unions.</p>",
        "id": 199641636,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591201382
    },
    {
        "content": "<p>ah, sorry, i didnt realize the <code>wasi</code> crate never got a release after the tagged unions merged. <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> takes care of releases for that crate</p>",
        "id": 199642585,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1591201765
    },
    {
        "content": "<p>it may be more appropriate to call it 0.10.0 given that its a breaking change, not an addition</p>",
        "id": 199642624,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1591201787
    },
    {
        "content": "<p>I don't mind, I figured 0.9.1 since it wasn't wasi what changed but the generated code, 0.10.0 wounds good to me.</p>",
        "id": 199642774,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591201841
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> Once you tell me the version for the crate I'll update the PR</p>",
        "id": 199643449,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591202115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> mind publishing the <code>wasi</code> crate? I don't think I have access on <a href=\"http://crates.io\">crates.io</a></p>",
        "id": 199643524,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591202155
    },
    {
        "content": "<p>ah ok I've been added, will publish today</p>",
        "id": 199644025,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591202388
    },
    {
        "content": "<p>thanks alex!</p>",
        "id": 199646827,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1591203735
    },
    {
        "content": "<p>Ok <span class=\"user-mention\" data-user-id=\"305220\">@Emiliano Lesende</span> I've published wasi 0.10.0</p>",
        "id": 199658612,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1591209296
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> Thanks</p>",
        "id": 199659668,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591209827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> <span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> PR updated.</p>",
        "id": 199660753,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591210375
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1810\">https://github.com/bytecodealliance/wasmtime/pull/1810</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/1810\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/54038801?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/1810\" title=\"fix(tagged-union): changed test programs to use new tagged union by 3miliano 路 Pull Request #1810 路 bytecodealliance/wasmtime\">fix(tagged-union): changed test programs to use new tagged union by 3miliano 路 Pull Request #1810 路 bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">This PR adapts test-programs code to use the new tagged-unions generated code of wasi. Note that wasi dependency has not been updated, we should release a wasi 0.9.1 (which includes the tagged-unio...</div></div></div>",
        "id": 199660773,
        "sender_full_name": "Emiliano Lesende",
        "timestamp": 1591210383
    }
]