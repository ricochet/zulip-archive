[
    {
        "content": "<p>I currently have the following. For some reason the wasi program keeps running <code>fd_readdir</code> again with bigger and bigger buffers, but with the same 0 cookie. What am I doing wrong?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nx\">buffer32</span><span class=\"p\">[</span><span class=\"nx\">bufused</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n<span class=\"kd\">let</span> <span class=\"nx\">cookie</span> <span class=\"o\">=</span> <span class=\"nb\">Number</span><span class=\"p\">(</span><span class=\"nx\">big_cookie</span><span class=\"p\">);</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">cookie</span><span class=\"p\">,</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">).</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nx\">cookie</span><span class=\"p\">));</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">buf_len</span> <span class=\"o\">&gt;</span> <span class=\"mi\">5276240</span><span class=\"p\">)</span> <span class=\"k\">throw</span> <span class=\"s2\">&quot;too big buf&quot;</span><span class=\"p\">;</span> <span class=\"c1\">// FIXME</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">cookie</span> <span class=\"o\">&gt;=</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">).</span><span class=\"nx\">length</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot;end of dir&quot;</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">let</span> <span class=\"nx\">next_cookie</span> <span class=\"o\">=</span> <span class=\"nx\">cookie</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">name</span> <span class=\"k\">of</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">).</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nx\">cookie</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">entry</span> <span class=\"o\">=</span> <span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">[</span><span class=\"nx\">name</span><span class=\"p\">];</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">entry</span><span class=\"p\">);</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">encoded_name</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">TextEncoder</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">).</span><span class=\"nx\">encode</span><span class=\"p\">(</span><span class=\"nx\">name</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;\\0&quot;</span><span class=\"p\">);</span>\n\n    <span class=\"kd\">let</span> <span class=\"nx\">offset</span> <span class=\"o\">=</span> <span class=\"mi\">16</span> <span class=\"o\">+</span> <span class=\"nx\">encoded_name</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"nx\">buf_len</span> <span class=\"o\">-</span> <span class=\"nx\">buffer32</span><span class=\"p\">[</span><span class=\"nx\">bufused</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"nx\">offset</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot;too small buf&quot;</span><span class=\"p\">);</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">next_cookie</span><span class=\"p\">,</span> <span class=\"nx\">buf</span><span class=\"p\">);</span>\n        <span class=\"nx\">write_le_u32</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">,</span> <span class=\"nx\">buf</span><span class=\"p\">,</span> <span class=\"nx\">next_cookie</span><span class=\"p\">);</span>\n        <span class=\"nx\">next_cookie</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n        <span class=\"nx\">write_le_u32</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">);</span> <span class=\"c1\">// inode</span>\n        <span class=\"nx\">write_le_u32</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"nx\">encoded_name</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">);</span> <span class=\"c1\">// name</span>\n        <span class=\"nx\">write_le_u32</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"nx\">entry</span><span class=\"p\">.</span><span class=\"nx\">file_type</span><span class=\"p\">);</span>\n        <span class=\"nx\">buffer8</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"nx\">encoded_name</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">16</span><span class=\"p\">);</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">[</span><span class=\"nx\">buf</span><span class=\"p\">],</span> <span class=\"nx\">buffer8</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nx\">buf</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"nx\">offset</span><span class=\"p\">));</span>\n        <span class=\"nx\">buf</span> <span class=\"o\">+=</span> <span class=\"nx\">offset</span><span class=\"p\">;</span>\n        <span class=\"nx\">buffer32</span><span class=\"p\">[</span><span class=\"nx\">bufused</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"nx\">offset</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 205684380,
        "sender_full_name": "bjorn3",
        "timestamp": 1596293110
    },
    {
        "content": "<p>I think I found the problem: cookie is 64bit, not 32bit</p>",
        "id": 205684871,
        "sender_full_name": "bjorn3",
        "timestamp": 1596293846
    },
    {
        "content": "<p>It doesn't get stuck in an infinite loop anymore, but it still doesn't show any files:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nx\">buffer32</span><span class=\"p\">[</span><span class=\"nx\">bufused</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">cookie</span><span class=\"p\">,</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">).</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nb\">Number</span><span class=\"p\">(</span><span class=\"nx\">cookie</span><span class=\"p\">)));</span>\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">cookie</span> <span class=\"o\">&gt;=</span> <span class=\"nx\">BigInt</span><span class=\"p\">(</span><span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">).</span><span class=\"nx\">length</span><span class=\"p\">))</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot;end of dir&quot;</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n<span class=\"kd\">let</span> <span class=\"nx\">next_cookie</span> <span class=\"o\">=</span> <span class=\"nx\">cookie</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"nx\">n</span><span class=\"p\">;</span>\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">name</span> <span class=\"k\">of</span> <span class=\"nb\">Object</span><span class=\"p\">.</span><span class=\"nx\">keys</span><span class=\"p\">(</span><span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">).</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nb\">Number</span><span class=\"p\">(</span><span class=\"nx\">cookie</span><span class=\"p\">)))</span> <span class=\"p\">{</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">entry</span> <span class=\"o\">=</span> <span class=\"nx\">fds</span><span class=\"p\">[</span><span class=\"nx\">fd</span><span class=\"p\">].</span><span class=\"nx\">directory</span><span class=\"p\">[</span><span class=\"nx\">name</span><span class=\"p\">];</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">entry</span><span class=\"p\">);</span>\n    <span class=\"kd\">let</span> <span class=\"nx\">encoded_name</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">TextEncoder</span><span class=\"p\">(</span><span class=\"s2\">&quot;utf-8&quot;</span><span class=\"p\">).</span><span class=\"nx\">encode</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">);</span>\n\n    <span class=\"kd\">let</span> <span class=\"nx\">offset</span> <span class=\"o\">=</span> <span class=\"mi\">24</span> <span class=\"o\">+</span> <span class=\"nx\">encoded_name</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span>\n\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"nx\">buf_len</span> <span class=\"o\">-</span> <span class=\"nx\">buffer32</span><span class=\"p\">[</span><span class=\"nx\">bufused</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">])</span> <span class=\"o\">&lt;</span> <span class=\"nx\">offset</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot;too small buf&quot;</span><span class=\"p\">);</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot;next_cookie =&quot;</span><span class=\"p\">,</span> <span class=\"nx\">next_cookie</span><span class=\"p\">,</span> <span class=\"nx\">buf</span><span class=\"p\">);</span>\n        <span class=\"nx\">write_le_u64</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">,</span> <span class=\"nx\">buf</span><span class=\"p\">,</span> <span class=\"nx\">next_cookie</span><span class=\"p\">);</span>\n        <span class=\"nx\">next_cookie</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"nx\">n</span><span class=\"p\">;</span>\n        <span class=\"nx\">write_le_u64</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"nx\">n</span><span class=\"p\">);</span> <span class=\"c1\">// inode</span>\n        <span class=\"nx\">write_le_u32</span><span class=\"p\">(</span><span class=\"nx\">buffer8</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"nx\">encoded_name</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">);</span> <span class=\"c1\">// name</span>\n        <span class=\"nx\">buffer8</span><span class=\"p\">[</span><span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">20</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nx\">entry</span><span class=\"p\">.</span><span class=\"nx\">file_type</span><span class=\"p\">;</span>\n        <span class=\"nx\">buffer8</span><span class=\"p\">.</span><span class=\"nx\">set</span><span class=\"p\">(</span><span class=\"nx\">encoded_name</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"mi\">24</span><span class=\"p\">);</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot;buffer =&quot;</span><span class=\"p\">,</span> <span class=\"nx\">buffer8</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"nx\">buf</span><span class=\"p\">,</span> <span class=\"nx\">buf</span> <span class=\"o\">+</span> <span class=\"nx\">offset</span><span class=\"p\">));</span>\n        <span class=\"nx\">buf</span> <span class=\"o\">+=</span> <span class=\"nx\">offset</span><span class=\"p\">;</span>\n        <span class=\"nx\">buffer32</span><span class=\"p\">[</span><span class=\"nx\">bufused</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">]</span> <span class=\"o\">+=</span> <span class=\"nx\">offset</span><span class=\"p\">;</span>\n        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">();</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s2\">&quot;used =&quot;</span><span class=\"p\">,</span> <span class=\"nx\">buffer32</span><span class=\"p\">[</span><span class=\"nx\">bufused</span> <span class=\"o\">/</span> <span class=\"mi\">4</span><span class=\"p\">]);</span>\n<span class=\"k\">return</span> <span class=\"mi\">0</span><span class=\"p\">;</span>\n</code></pre></div>",
        "id": 205685376,
        "sender_full_name": "bjorn3",
        "timestamp": 1596294616
    },
    {
        "content": "<p>This is the test program: <code>echo 'fn main() { for item in std::fs::read_dir(\"/sysroot/lib/rustlib/x86_64-unknown-linux-gnu/lib/\").unwrap() { println!(\"{:?}\", item); } }' | rustc --target wasm32-wasi -</code></p>",
        "id": 205685466,
        "sender_full_name": "bjorn3",
        "timestamp": 1596294760
    },
    {
        "content": "<p>Never mind. I was overwriting the program output when the program completed successfully.</p>",
        "id": 205685546,
        "sender_full_name": "bjorn3",
        "timestamp": 1596294960
    },
    {
        "content": "<p>I got rustc in the browser working: <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/rustc.20on.20wasm/near/205695027\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/rustc.20on.20wasm/near/205695027</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/rustc.20on.20wasm/near/205695027\" style=\"background-image: url(https://zulip-avatars.s3.amazonaws.com/4715/realm/icon.png?version=2)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/rustc.20on.20wasm/near/205695027\" title=\"rust-lang\">rust-lang</a></div><div class=\"message_embed_description\">One of the chat platforms for the Rust Programming Language.</div></div></div>",
        "id": 205695430,
        "sender_full_name": "bjorn3",
        "timestamp": 1596310992
    }
]