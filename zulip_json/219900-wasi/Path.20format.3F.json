[
    {
        "content": "<p>This might be documented somewhere, but I just cannot find anything related to this:<br>\nAre paths in WASI Unix-style paths (/ separator) per spec, or does the spec make no statement about the format?  Do WASI binaries usually just assume Unix-style paths?<br>\nI'm currently adding support for Windows to a runtime and am wondering if the WASI implementation needs path translation between module and host.</p>",
        "id": 318647654,
        "sender_full_name": "Bastian Müller",
        "timestamp": 1672430347
    },
    {
        "content": "<p>The path separator should be <code>/</code> and there should be no drive letters etc visible.  WASI programs aren't supposed to make assumptions about the existence of any files and directories other than what's passed to them as command-line arguments or env vars (though in practice many people don't care about windows and do it anyway).</p>",
        "id": 318649542,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1672431312
    },
    {
        "content": "<p>I am working to make WASI programs more portable, but it remains to be seen how much I'll be able to achieve vs all the people who don't care about anything other than \"faster docker\".</p>",
        "id": 318649960,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1672431555
    },
    {
        "content": "<p>Same here, I'm mostly interested in the portability aspect of WebAssembly/WASI. </p>\n<p>In case it might not have been yet, it would be good to document the path separator assumption, because it is needed when implementing some of the WASI functions which resolve paths given the preopen.</p>",
        "id": 318650295,
        "sender_full_name": "Bastian Müller",
        "timestamp": 1672431761
    },
    {
        "content": "<p>Yeah. I looked into it a while ago but got bogged down by thinking about case sensitivity and Unicode normalization and ill-formed Unicode and Windows prohibited paths and special whitespace rules and wow. But you're right, it'd be good to document the things we can control better.</p>",
        "id": 318650659,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1672431962
    },
    {
        "content": "<p>The wasi-testsuite repo can be a good place for developing these ideas too.</p>",
        "id": 318650824,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1672432031
    },
    {
        "content": "<p>Right, there are more details to specify, but even just something simple as <a href=\"https://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap03.html#tag_03_266\">https://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap03.html#tag_03_266</a> might be sufficient to clarify what the modules and runtime should do when joining path components.</p>\n<p>Thank you for your quick response, that unblocks me and I can spend the rest of the holidays finishing Windows support and maybe even look into support for Mac OS (&lt;10), which uses <code>:</code> as a separator, haha</p>",
        "id": 318652100,
        "sender_full_name": "Bastian Müller",
        "timestamp": 1672432802
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254083\">Dan Gohman</span> <a href=\"#narrow/stream/219900-wasi/topic/Path.20format.3F/near/318649960\">said</a>:</p>\n<blockquote>\n<p>I am working to make WASI programs more portable, but it remains to be seen how much I'll be able to achieve vs all the people who don't care about anything other than \"faster docker\".</p>\n</blockquote>\n<p>and for me, I want the most portable version of wasi we can make. I do NOT want an entire environment (unless I choose it!); future computing must be constrained to be more generally useful -- not bring along the entire pile of cruft from the past 50 years. Again, unless you ask nicely to do so. :-)</p>",
        "id": 319200091,
        "sender_full_name": "Ralph",
        "timestamp": 1672754240
    },
    {
        "content": "<p>Just like how you have the choice to not use k8s, but while you don't necessarily like it, and you might not have built it that way yourself, you've got it, you use it, and so does everybody else? <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span></p>",
        "id": 319381363,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1672836292
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254083\">Dan Gohman</span> <a href=\"#narrow/stream/219900-wasi/topic/Path.20format.3F/near/319381363\">said</a>:</p>\n<blockquote>\n<p>Just like how you have the choice to not use k8s, but while you don't necessarily like it, and you might not have built it that way yourself, you've got it, you use it, and so does everybody else? <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span></p>\n</blockquote>\n<p>sorta. Why do you ask? :-)</p>",
        "id": 319614922,
        "sender_full_name": "Ralph",
        "timestamp": 1672934206
    }
]