[
    {
        "content": "<p>I cleaned up a pure javascript wasi shim for in the browser I wrote a while back: <a href=\"https://github.com/bjorn3/browser_wasi_shim\">https://github.com/bjorn3/browser_wasi_shim</a> It is far from feature complete, but it is able to run programs that don't interface with the os too much, like a rustc compiled to wasi.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bjorn3/browser_wasi_shim\" style=\"background-image: url(https://opengraph.githubassets.com/6fc9c787c3845e9e637d84bf1e8be3224710901e2e9814df8931d913d039e511/bjorn3/browser_wasi_shim)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bjorn3/browser_wasi_shim\" title=\"GitHub - bjorn3/browser_wasi_shim: A WASI shim for in the browser\">GitHub - bjorn3/browser_wasi_shim: A WASI shim for in the browser</a></div><div class=\"message_embed_description\">A WASI shim for in the browser. Contribute to bjorn3/browser_wasi_shim development by creating an account on GitHub.</div></div></div>",
        "id": 252082863,
        "sender_full_name": "bjorn3",
        "timestamp": 1630855150
    },
    {
        "content": "<p>out of curiosity, how did you get rustc working on wasi? I was under the impression that basically the first thing rustc does is spawn a thread where the real work is done and that trying to make rustc use just the main thread would be quite difficult</p>\n<p>would be great to add <code>rustc</code> as a benchmark to sightglass</p>",
        "id": 252350504,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1631039503
    },
    {
        "content": "<p>making rustc use the main thread is a matter of removing a <code>thread::spawn</code>. making it work on the main thread soundly when running more than 1 compilation session is less easy, but this only runs a single compilation session, so it is fine.</p>",
        "id": 252351849,
        "sender_full_name": "bjorn3",
        "timestamp": 1631040057
    },
    {
        "content": "<p>as for the how to patch it exactly see <a href=\"https://github.com/rust-lang/miri/issues/722#issuecomment-819831196\">https://github.com/rust-lang/miri/issues/722#issuecomment-819831196</a>. The only difference in my case is that the rustc is older and I used cg_clif instead of miri. At one point I had a matching sysroot and was able to compile a hello world to x86_64 excluding linking, but I deleted it it seems.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/rust-lang/miri/issues/722#issuecomment-819831196\" style=\"background-image: url(https://opengraph.githubassets.com/c32b165aa25f6121940906b3b52cdbe954b29476c6153dd201d72149b25941fb/rust-lang/miri/issues/722)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/rust-lang/miri/issues/722#issuecomment-819831196\" title=\"Compilation to WASM? 路 Issue #722 路 rust-lang/miri\">Compilation to WASM? 路 Issue #722 路 rust-lang/miri</a></div><div class=\"message_embed_description\">Compiling the whole Rustc to WASM is a pretty big undertaking for many reasons. However, Miri doesn&#39;t need an actual codegen and many other parts of the whole Rustc, so I wonder how realistic i...</div></div></div>",
        "id": 252352201,
        "sender_full_name": "bjorn3",
        "timestamp": 1631040199
    },
    {
        "content": "<p>This is cool, thanks for posting this!</p>",
        "id": 252391263,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1631062015
    }
]