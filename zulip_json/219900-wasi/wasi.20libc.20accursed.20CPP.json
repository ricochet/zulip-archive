[
    {
        "content": "<p>Anyone have a moment to take a look at the CI failure for <a href=\"https://github.com/WebAssembly/wasi-libc/pull/270\">https://github.com/WebAssembly/wasi-libc/pull/270</a> ? I was getting there is with my (admitting highly nonstandard) toolchain <em>before</em> my change. So I am a confused what's up.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-libc/pull/270\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/802dc1bfe0a947094d7bacda04100b26c88fcb4e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336534323833356661336237626131303533643764613863353339353930653238323562393938353330623633313039386161663130393265636635386439302f576562417373656d626c792f776173692d6c6962632f70756c6c2f323730)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-libc/pull/270\" title=\"Try to restore some build system conventions in a low-impact way by Ericson2314 路 Pull Request #270 路 WebAssembly/wasi-libc\">Try to restore some build system conventions in a low-impact way by Ericson2314 路 Pull Request #270 路 WebAssembly/wasi-libc</a></div><div class=\"message_embed_description\">Fixes #269\nThe \"don't move the variables independently if you want to make install\" part is a gross, but as neither wasi-sdk or Nixpkgs actually\nneeds make install (we both can just build right int...</div></div></div>",
        "id": 276117155,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898502
    },
    {
        "content": "<p>I think I am using <code>-isysroot</code> wrong, but I do not understand how the <code>--sysroot</code> prior worked either the more I read the sparse GCC and Clang documentation on this. I would like to replace both with a plain old <code>-I</code>, but then I get another spooky error.</p>",
        "id": 276117278,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898563
    },
    {
        "content": "<p>In particular <code>__strong_reference</code> is only used in <code>_Exit.c</code> and <code>nanosleep.c</code>, and those files don't seem to (before or after) get the include needed for <code>__strong_reference</code>'s CPP definition, and yet it worked before.</p>",
        "id": 276117403,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898647
    },
    {
        "content": "<p>\"-isysroot \"/home/runner/work/wasi-libc/wasi-libc/sysroot/include\"</p>",
        "id": 276117536,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647898726
    },
    {
        "content": "<p>should this be \" -isysroot \"/home/runner/work/wasi-libc/wasi-libc/sysroot\", without the trailing include? the docs for -isysroot say it works like -sysroot, which suggests it inteprrets the path as the root of the sysroot</p>",
        "id": 276117585,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647898762
    },
    {
        "content": "<p>So I think <code>\"-isysroot \"/home/runner/work/wasi-libc/wasi-libc/sysroot\"</code> would work for CI.</p>",
        "id": 276117591,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898767
    },
    {
        "content": "<p>but the docs <em>also</em> talk about things like <code>$sysroot/usr/include</code>. And neither works in my local build! I think sysroot is very magic in that the paths that it looks for within the sysroot are somehow configurable.</p>",
        "id": 276117693,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898822
    },
    {
        "content": "<p>hrm, I've not encountered things looking for \"usr\" inside sysroot. That's... unfortunate.</p>",
        "id": 276117834,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647898904
    },
    {
        "content": "<p>So yeah in conclusion it would be nice to just use plain old <code>-I</code></p>",
        "id": 276117906,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898933
    },
    {
        "content": "<p>an avoid all that spooky ambient configuration that effects what exactly \"sysroot\" things do.</p>",
        "id": 276117946,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898959
    },
    {
        "content": "<p>Yeah, or <code>-isystem</code> so that it does the right thing wrt <code>&lt;....h&gt;</code> includes</p>",
        "id": 276118001,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647898992
    },
    {
        "content": "<p>But then, I get the <code>__strong_reference</code> error. In fact, <code>-I ... -isysroot</code> together <em>also</em> causes the <code>__strong_reference</code> error! madness!</p>",
        "id": 276118008,
        "sender_full_name": "John Ericson",
        "timestamp": 1647898994
    },
    {
        "content": "<p>what is the <code>__strong_reference</code> error?</p>",
        "id": 276118045,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647899019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254083\">Dan Gohman</span> <a href=\"#narrow/stream/219900-wasi/topic/wasi.20libc.20accursed.20CPP/near/276118001\">said</a>:</p>\n<blockquote>\n<p>Yeah, or <code>-isystem</code> so that it does the right thing wrt <code>&lt;....h&gt;</code> includes</p>\n</blockquote>\n<p>What exactly do you mean? &lt;...&gt; vs \"..\"?</p>",
        "id": 276118048,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899022
    },
    {
        "content": "<p>Yeah. <code>-isystem</code> is like <code>-I</code> but marks the directory as a \"system\" include directory.</p>",
        "id": 276118125,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647899051
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"426582\">John Ericson</span> <a href=\"#narrow/stream/219900-wasi/topic/wasi.20libc.20accursed.20CPP/near/276117403\">said</a>:</p>\n<blockquote>\n<p>In particular <code>__strong_reference</code> is only used in <code>_Exit.c</code> and <code>nanosleep.c</code>, and those files don't seem to (before or after) get the include needed for <code>__strong_reference</code>'s CPP definition, and yet it worked before.</p>\n</blockquote>\n<p>It doesn't get the macro def and at least one of those two files fail to build.</p>",
        "id": 276118126,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254083\">Dan Gohman</span> <a href=\"#narrow/stream/219900-wasi/topic/wasi.20libc.20accursed.20CPP/near/276118125\">said</a>:</p>\n<blockquote>\n<p>Yeah. <code>-isystem</code> is like <code>-I</code> but marks the directory as a \"system\" include directory.</p>\n</blockquote>\n<p>there is also <code>-Iquote</code> and <code>-isystem</code>.</p>",
        "id": 276118175,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899093
    },
    {
        "content": "<p>I will try some of those</p>",
        "id": 276118185,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899101
    },
    {
        "content": "<p>Include directories provided by wasi-libc should be treated as \"system\" directories.</p>",
        "id": 276118239,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647899138
    },
    {
        "content": "<p>OK <code>-isystem</code> + <code>-isysroot</code> worked!</p>",
        "id": 276118335,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899169
    },
    {
        "content": "<p>Now trying just <code>-isystem</code>.</p>",
        "id": 276118348,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899175
    },
    {
        "content": "<p><code>-I</code> does affect <code>&lt;...&gt;</code> lookup too. I think Postel's law muddled the distinctions long ago :) but I will check the docs.</p>",
        "id": 276118394,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899209
    },
    {
        "content": "<p>Yeah I forget the exact rules because srsly</p>",
        "id": 276118431,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1647899230
    },
    {
        "content": "<p>OK! <code>-isystem</code> alone works, and <code>-idirafter</code> also works.</p>",
        "id": 276118672,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899384
    },
    {
        "content": "<p>So the issue wasn't \"systemness\" but order --- that the other <code>-I</code> must override this. Yuck!!!</p>",
        "id": 276118755,
        "sender_full_name": "John Ericson",
        "timestamp": 1647899413
    },
    {
        "content": "<p>Wrote a big fat comment and pushed :).</p>",
        "id": 276119974,
        "sender_full_name": "John Ericson",
        "timestamp": 1647900212
    }
]