[
    {
        "content": "<p>I'm currently investigating using WASM to simulate virtual machines which I can run rust code on. I want to be able to connect them to eachother through some kind of in-memory byte channel, similar to UnixStream. The end goal is to be able to link a bunch of them together through these duplex 1-to-1 channels and run a simulated routing algorithm over them.</p>\n<p>I am trying to expose the channel to the guests but I am not sure how to do this in such a way that they can wait asynchronously for bytes from the other side. Would it be correct to just pass it in as a preopened socket through <code>WasiCtxBuilder::preopened_socket(...)</code>?  Should I be integrating it somehow with the <code>poll_oneoff</code> WASI call? Or is synchronous operation only possible for now? Apologies if this question doesn't make sense as I'm still quite new to WASM in general and trying to make sense of it all</p>",
        "id": 346221410,
        "sender_full_name": "Restioson",
        "timestamp": 1680365729
    },
    {
        "content": "<p>in preview 1, the underlying representation of a socket is just a file (meaning wasi-common's Box&lt;dyn WasiFile&gt;, so you can use poll_oneoff to poll it for readiness with a read subscription</p>",
        "id": 346632734,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1680542056
    }
]