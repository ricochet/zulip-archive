[
    {
        "content": "<p>Hello, I'm trying to build Skia for Wasi, but I'm encountering a build error related to setjmp. <br>\nAccording to <a href=\"https://github.com/WebAssembly/exception-handling/issues/179\">https://github.com/WebAssembly/exception-handling/issues/179</a>, it seems that most browsers like Chrome, Firefox, and Safari have completed the implementation of exception handling. <br>\nEven though it's in Phase 3, since most browsers have completed the implementation, wouldn't it be okay for wasi-libc to provide support for it?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/exception-handling/issues/179\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/001fab100d527837cc4e18fc7a6ecb8a0fd9d2fc/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f323631303233333664653432383133666430316332643132366263306466366239623738366430393765303462303266623733366637353835656139633862342f576562417373656d626c792f657863657074696f6e2d68616e646c696e672f6973737565732f313739&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/exception-handling/issues/179\" title=\"Plan for Phase 4 · Issue #179 · WebAssembly/exception-handling\">Plan for Phase 4 · Issue #179 · WebAssembly/exception-handling</a></div><div class=\"message_embed_description\">This is a tracking issue for the requirements for Phase 4. The text will be edited as we progress. Checkbox will be checked after the relevant PRs land. We also list Phase 2 &amp; 3 requirements becaus...</div></div></div>",
        "id": 440838863,
        "sender_full_name": "Namse",
        "timestamp": 1716810999
    },
    {
        "content": "<p>According to <a href=\"https://github.com/WebAssembly/wasi-libc/pull/483\">https://github.com/WebAssembly/wasi-libc/pull/483</a>, it seems that the implementation has been done, and just adding <code>-mllvm</code>, <code>-wasm-enable-sjlj</code>, <code>-lsetjmp</code> should allow the build to succeed... But why am I getting errors like <code>error: use of undeclared identifier 'setjmp'</code>?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-libc/pull/483\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/af39f51b93b0d9b9a695c72006261db500cde784/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613965323335393035643833666266353061343062626162666231366164363233353437373832386565646166323532636464646363343162656433333737352f576562417373656d626c792f776173692d6c6962632f70756c6c2f343833&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-libc/pull/483\" title=\"Add libsetjmp.a/so by yamt · Pull Request #483 · WebAssembly/wasi-libc\">Add libsetjmp.a/so by yamt · Pull Request #483 · WebAssembly/wasi-libc</a></div><div class=\"message_embed_description\">Add setjmp/longjump support based on Wasm EH proposal.\nIt's provided as a separate library (libsetjmp) from libc so that runtimes w/o EH support can still load libc.so.\nTo use this setjmp/longjmp i...</div></div></div>",
        "id": 440840950,
        "sender_full_name": "Namse",
        "timestamp": 1716811716
    },
    {
        "content": "<p>Ah! It was added in wasi-sdk version 22. I've been using version 20 like a fool. Sorry about that, haha.</p>",
        "id": 440842100,
        "sender_full_name": "Namse",
        "timestamp": 1716812171
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"724127\">Namse</span> has marked this topic as resolved.</p>",
        "id": 440842110,
        "sender_full_name": "Notification Bot",
        "timestamp": 1716812174
    },
    {
        "content": "<p>you also need latest (unreleased) llvm.</p>",
        "id": 441860870,
        "sender_full_name": "YAMAMOTO Takashi",
        "timestamp": 1717220187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"567999\">@YAMAMOTO Takashi</span> Can this feature be added in the next version of wasi-sdk?</p>",
        "id": 442009130,
        "sender_full_name": "Namse",
        "timestamp": 1717306156
    },
    {
        "content": "<p>when llvm 19 is released and wasi-sdk is updated to include it. probably around this summer i guess.</p>",
        "id": 442016125,
        "sender_full_name": "YAMAMOTO Takashi",
        "timestamp": 1717312163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"567999\">@YAMAMOTO Takashi</span>  If I need to directly implement saveSetjmp and testSetjmp in JavaScript for the current latest wasi-sdk environment to run in a browser, what code should I follow to make it work properly?</p>",
        "id": 442462522,
        "sender_full_name": "Namse",
        "timestamp": 1717486932
    },
    {
        "content": "<p>i'm not sure what you are trying to do.<br>\nif you are using wasi-sdk, you can use the implementation in wasi-libc.<br>\nemscripten has its own implementation.</p>",
        "id": 442486993,
        "sender_full_name": "YAMAMOTO Takashi",
        "timestamp": 1717494155
    },
    {
        "content": "<p>I also don't really understand it well. I'm using the latest version of wasi-sdk 22, and it seems like there is an implementation of setjmp inside wasi-sdk... Nevertheless, even though I linked the setjmp library, the wasm binary I built wants me to import saveSetjmp. I must have done something wrong?</p>",
        "id": 442506332,
        "sender_full_name": "Namse",
        "timestamp": 1717500370
    },
    {
        "content": "<p>saveSetjmp is old name used by pre llvm 19, including the one included by wasi-sdk-22.<br>\nllvm 19 and later will use names like __wasm_setjmp etc, which is what provided by wasi-libc included by wasi-sdk-22.<br>\nif you want to use setjmp today, you can install llvm 19 by yourself and use it to build your app, using wasi-sdk-22 sysroot.</p>",
        "id": 442507919,
        "sender_full_name": "YAMAMOTO Takashi",
        "timestamp": 1717500932
    },
    {
        "content": "<p>Thank you! I built Clang and other tools directly from the latest LLVM git repository, and as a result, WebAssembly no longer requires importing saveSetjmp or testSetjmp.</p>\n<p>I thought the saveSetjmp code I implemented was causing the issue, but the problem persists. Strangely, when decoding woff2 fonts using brotli, the ThreadId changes from 2 to 9288807377403942. It works fine on the main thread, but there's always an issue with new threads.</p>\n<p>I'll need to investigate further to find out what else might be causing the problem. Thank you!</p>",
        "id": 442543316,
        "sender_full_name": "Namse",
        "timestamp": 1717511390
    },
    {
        "content": "<p>what ThreadId are you talking about? wasi-threads TID?<br>\nanyway, i'm not aware of any threading-related problems with this setjmp/longjmp implementation. (well, unless the app is trying to longjmp to a jmp_buf set up by another thread, which is IIRC a undefined behavior in C/posix.)<br>\nif you find the cause, please let me know.</p>",
        "id": 442688211,
        "sender_full_name": "YAMAMOTO Takashi",
        "timestamp": 1717560050
    },
    {
        "content": "<p>I found the solution.<br>\nThe stack size of wasi target in rust is 4096 bytes, which was too small to run font decoding code..........<br>\n<span aria-label=\"cry\" class=\"emoji emoji-1f622\" role=\"img\" title=\"cry\">:cry:</span></p>",
        "id": 442761370,
        "sender_full_name": "Namse",
        "timestamp": 1717587282
    }
]