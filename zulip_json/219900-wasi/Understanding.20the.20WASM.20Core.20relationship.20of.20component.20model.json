[
    {
        "content": "<p>I'm trying to understand aspects of how to think about the component model from the perspective of what a WebAssembly runtime has to deal with.</p>\n<p>My understanding: .wasm files will be used to represent both wasm core modules and wasm components. A host runtime could be aware of WASM components (link together before running, inject lift/lower instructions, etc) but effectively after linking at runtime or ahead of time using wasm-tools to compose components together for execution there are not WASM component specific-concerns for the runtime. After linking components the runtime is just running a core wasm module.</p>\n<p>If that is an accurate understanding: What are the \"not widely supported\" core wasm features needed to run \"already-linked\" wasm components? I think my assumption is that features like shared-nothing linking necessitate the multiple memories proposal. The \"already-linked\" module mental model is that isolation happens at runtime because of multiple memories, multiple function tables, etc.</p>\n<p>I was thinking this best represents how wasm components relates to wasm core but (unless my searching is poor) I'm not finding references to the Multiple Memories proposals in the component-model repo or the \"core wasm\" track in the preview2 roadmap: <a href=\"https://bytecodealliance.org/articles/webassembly-the-updated-roadmap-for-developers\">https://bytecodealliance.org/articles/webassembly-the-updated-roadmap-for-developers</a></p>\n<p>Is my assumption that WASM Core Multiple Memories is needed for the component model (specifically for something like shared-nothing linking) incorrect?</p>\n<p>I think the alternative is the wasm components themselves are a concept that exists into runtime. Conceptually the boundaries of components are persistent and within the executing context a concept of separate components actually exist and is something runtimes have to be aware of (and handle a components specific concept of linear memory per component unrelated to wasm core multiple memories).</p>\n<p>As an aside: I think something that could be helpful for wrapping one's head around components are guides of what What WASM Components means from the perspective of runtime authors vs programming language tooling / runtime maintainers vs developers creating WASM modules / components. Know if there are any resources along those lines to reference?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://bytecodealliance.org/articles/webassembly-the-updated-roadmap-for-developers\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/b666ca74a20745aca2566cd241108afdcfa09d04\\/68747470733a2f2f62797465636f6465616c6c69616e63652e6f72672f696d616765732f6176617461722e706e67)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://bytecodealliance.org/articles/webassembly-the-updated-roadmap-for-developers\" title=\"WebAssembly: An Updated Roadmap for Developers\">WebAssembly: An Updated Roadmap for Developers</a></div><div class=\"message_embed_description\">The WebAssembly (Wasm) ecosystem is transforming. Developers can look forward to a modular, virtualizable, and robust environment for building applications, libraries, and services.We are excited to be working towards this with implement...</div></div></div>",
        "id": 384351254,
        "sender_full_name": "Milan",
        "timestamp": 1691875115
    },
    {
        "content": "<p>Components require multiple memories per wasm file (component), but not per module like the multi memory proposal does, because the different modules contained in a component need their own separated address space supported by the runtime. The second requirement is support for the more complex wasm file format described in <a href=\"https://wasm-components.fermyon.app/encoding.html\">https://wasm-components.fermyon.app/encoding.html</a></p>",
        "id": 384408268,
        "sender_full_name": "Christof Petig",
        "timestamp": 1691908476
    },
    {
        "content": "<p>E.g. WAMR describes these two in <a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/issues/2126\">https://github.com/bytecodealliance/wasm-micro-runtime/issues/2126</a> and its linked issue, although it is not easy to parse the terse issue descriptions.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-micro-runtime/issues/2126\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/547da7c7d57bffa29f2ca878c82a20f26578e260\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f633766636230313135393164333631303063353239346339396634303836646664333731623033376337346364626332373038333435396663323664613366362f62797465636f6465616c6c69616e63652f7761736d2d6d6963726f2d72756e74696d652f6973737565732f32313236)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-micro-runtime/issues/2126\" title=\"Component model support 路 Issue #2126 路 bytecodealliance/wasm-micro-runtime\">Component model support 路 Issue #2126 路 bytecodealliance/wasm-micro-runtime</a></div><div class=\"message_embed_description\">WASI has moved to preview 2, which is based on the Component Model. In a recent community presentation, it was briefly mentioned that the component model would be in WAMR's roadmap, but I wasn't ab...</div></div></div>",
        "id": 384409101,
        "sender_full_name": "Christof Petig",
        "timestamp": 1691908954
    },
    {
        "content": "<p>Thank you for the references! My understanding was way off and the referenced fermyon docs helped give the high-level context I needed to actually make sense of the components spec.</p>",
        "id": 384822623,
        "sender_full_name": "Milan",
        "timestamp": 1692027619
    },
    {
        "content": "<p>Only partially related: The cargo-components README has the most succinct and clear high-level description of the component model I have read so far: <a href=\"https://github.com/bytecodealliance/cargo-component#motivation\">https://github.com/bytecodealliance/cargo-component#motivation</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component#motivation\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/0a61d90ea1245a9b6cbb68e5b661501a7d79abcf\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f626236613664386263326334633235393432353462316434366631636162633462633934346131613433623864303462323462303961353032626465663364312f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e74)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component#motivation\" title=\"GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.\">GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.</a></div><div class=\"message_embed_description\">A Cargo subcommand for creating WebAssembly components based on the component model proposal. - GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components bas...</div></div></div>",
        "id": 384829088,
        "sender_full_name": "Milan",
        "timestamp": 1692028877
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"590366\">Christof Petig</span> <a href=\"#narrow/stream/219900-wasi/topic/Understanding.20the.20WASM.20Core.20relationship.20of.20component.20model/near/384408268\">said</a>:</p>\n<blockquote>\n<p>Components require multiple memories per wasm file (component)</p>\n</blockquote>\n<p>Minor clarification: there is nothing requiring that a component has multiple memories. It is perfectly fine for a component to contain a single memory, or even zero memories (provided it is not passing data across the component boundary that requires a memory, such as strings).</p>",
        "id": 385233979,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1692114211
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"253990\">fitzgen (he/him)</span> <a href=\"#narrow/stream/219900-wasi/topic/Understanding.20the.20WASM.20Core.20relationship.20of.20component.20model/near/385233979\">said</a>:</p>\n<blockquote>\n<p>Minor clarification: there is nothing requiring that a component has multiple memories. It is perfectly fine for a component to contain a single memory, or even zero memories (provided it is not passing data across the component boundary that requires a memory, such as strings).</p>\n</blockquote>\n<p>Is my understanding correct, that to support arbitrary components (especially the ones containing multiple modules) the runtime needs to be able to support multiple memories per component?</p>",
        "id": 385548348,
        "sender_full_name": "Christof Petig",
        "timestamp": 1692222725
    },
    {
        "content": "<p>yes a component can contain multiple core modules and each of those modules may have 1 memory (or more with the multi-memory core wasm proposal, but that is orthogonal to the component model), so the component runtime will need to support multiple memories to run arbitrary components.</p>",
        "id": 385549671,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1692223454
    },
    {
        "content": "<p>its not quite the same as the wasm multi-memory proposal because the idea behind that proposal is that, with multiple memories in scope for a module, the load and store opcodes have an additional literal indicating the index of memory they are using</p>",
        "id": 385549794,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1692223543
    }
]