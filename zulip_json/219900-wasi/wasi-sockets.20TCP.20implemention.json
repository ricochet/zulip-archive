[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span>, <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span>  I've been working on the wasmtime implementation of TCP sockets. My progress can be found here:<br>\n<a href=\"https://github.com/badeend/wasmtime/tree/tcp-error-checking\">https://github.com/badeend/wasmtime/tree/tcp-error-checking</a><br>\nI also intend to add cross-platform compatibility fixes and implement a full testsuite for TCP sockets.</p>\n<p>I noticed these tracking issues that were assigned two days ago that have overlap with what I've been doing:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/7013\">https://github.com/bytecodealliance/wasmtime/issues/7013</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/7014\">https://github.com/bytecodealliance/wasmtime/issues/7014</a></p>\n<p>Just wanted to make sure we're not doing duplicate work</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/badeend/wasmtime/tree/tcp-error-checking\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/960011927dbe9659983ef640de547727ff28cef1\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f626130343466616636643030366236356138303961633038306133646362646565623034336135353161616134303461323861383063393233613261313932322f62616465656e642f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/badeend/wasmtime/tree/tcp-error-checking\" title=\"GitHub - badeend/wasmtime at tcp-error-checking\">GitHub - badeend/wasmtime at tcp-error-checking</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to badeend/wasmtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/7013\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/eb5829f1faa5fa5a42af1da47cb5e34a215dd612\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656334356161623638316365326332636531326237616437333034383532646430383866626631303736656266383439323034313535313761643037326664362f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f37303133)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/7013\" title=\"Wasmtime wasi-sockets implementation: Finish sockopt · Issue #7013 · bytecodealliance/wasmtime\">Wasmtime wasi-sockets implementation: Finish sockopt · Issue #7013 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/issues/7014\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/ba1c646c6fb45e9a3dc2a248e1a32154ac8fcce2\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316239323831643338656132313535656539343630346465313561396664313737383065646166383138313436616161356363613865643266383833316463332f62797465636f6465616c6c69616e63652f7761736d74696d652f6973737565732f37303134)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/issues/7014\" title=\"Wasmtime wasi-sockets implementation: Tests demonstrate portability criteria met · Issue #7014 · bytecodealliance/wasmtime\">Wasmtime wasi-sockets implementation: Tests demonstrate portability criteria met · Issue #7014 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 393743474,
        "sender_full_name": "Dave Bakker (badeend)",
        "timestamp": 1695913018
    },
    {
        "content": "<p>Hi Dave, we put those issues up to track that work is still needed before we can call the implementation \"done\"</p>",
        "id": 393778435,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1695924263
    },
    {
        "content": "<p>Dan and <span class=\"user-mention\" data-user-id=\"484032\">@Roman Volosatovs</span> were going to discuss how to knock out the UDP side of things</p>",
        "id": 393778526,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1695924279
    },
    {
        "content": "<p>but as far as the sockopts and test suite goes, we are super happy you are working on those!</p>",
        "id": 393778874,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1695924353
    },
    {
        "content": "<p>Yes, it seems that I should wait for <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> to finish resource PR first, right <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> ?</p>",
        "id": 393779022,
        "sender_full_name": "Roman Volosatovs",
        "timestamp": 1695924379
    },
    {
        "content": "<p>Yeah, that's my suggestion, because it's a big PR that touches a lot of the files, and changes which traits we implement for stuff.</p>",
        "id": 393779224,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1695924426
    },
    {
        "content": "<p>i am reviewing dan's resource PR right now</p>",
        "id": 393779227,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1695924427
    },
    {
        "content": "<p>Alex posted a PR to my PR for the stdio thing, I'm reviewing that now</p>",
        "id": 393779308,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1695924446
    },
    {
        "content": "<p>Alright, great!</p>",
        "id": 393784785,
        "sender_full_name": "Dave Bakker (badeend)",
        "timestamp": 1695926343
    },
    {
        "content": "<p>That PR has landed, the CI is now green, and Alex reviewed it, so we're super close now :-)</p>",
        "id": 393790182,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1695928469
    },
    {
        "content": "<p>The changes I mentioned in my initial comment are ready at: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7120\">https://github.com/bytecodealliance/wasmtime/pull/7120</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime/pull/7120\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/bec844ebc7bcd3040ae6a488f045f5411191c49c\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313031663663366136343534316437623330376131646338316434313139633330316161353136306132356562363232366134666434383261633331316332302f62797465636f6465616c6c69616e63652f7761736d74696d652f70756c6c2f37313230)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7120\" title=\"wasi-sockets: Simplify &amp; clarify TCP errors by badeend · Pull Request #7120 · bytecodealliance/wasmtime\">wasi-sockets: Simplify &amp; clarify TCP errors by badeend · Pull Request #7120 · bytecodealliance/wasmtime</a></div><div class=\"message_embed_description\">Allow accept() to return transient errors.\nThe original provision was added to align with preview3 streams that may only fail once. However, after discussing with Dan Gohman, we came to the conclus...</div></div></div>",
        "id": 394172114,
        "sender_full_name": "Dave Bakker (badeend)",
        "timestamp": 1696148510
    }
]