[
    {
        "content": "<p>This is a quick question: the wasi-sdk-21.0.deb seems to install in /opt/wasi-sdk/ now whilst earlier it installed elsewhere -- or projects did so themselves. Is this the expected location going forward?</p>",
        "id": 424910253,
        "sender_full_name": "Ralph",
        "timestamp": 1709656455
    },
    {
        "content": "<p>dpkg -L wasi-sdk | more<br>\n/.<br>\n/opt<br>\n/opt/wasi-sdk<br>\n/opt/wasi-sdk/bin<br>\n/opt/wasi-sdk/bin/clang-17<br>\n/opt/wasi-sdk/bin/clang-apply-replacements<br>\n/opt/wasi-sdk/bin/clang-format<br>\n/opt/wasi-sdk/bin/clang-tidy<br>\n/opt/wasi-sdk/bin/git-clang-format<br>\n/opt/wasi-sdk/bin/lld<br>\n/opt/wasi-sdk/bin/llvm-ar<br>\n/opt/wasi-sdk/bin/llvm-cxxfilt<br>\n/opt/wasi-sdk/bin/llvm-dwarfdump<br>\n/opt/wasi-sdk/bin/llvm-mc<br>\n/opt/wasi-sdk/bin/llvm-nm<br>\n/opt/wasi-sdk/bin/llvm-objcopy<br>\n/opt/wasi-sdk/bin/llvm-objdump<br>\n/opt/wasi-sdk/bin/llvm-size<br>\n/opt/wasi-sdk/bin/llvm-strings<br>\n/opt/wasi-sdk/bin/run-clang-tidy</p>",
        "id": 424910260,
        "sender_full_name": "Ralph",
        "timestamp": 1709656457
    },
    {
        "content": "<p>I just want to know how/if I should rejigger this in several repos more consistently to which I'm contributing....</p>",
        "id": 424910405,
        "sender_full_name": "Ralph",
        "timestamp": 1709656498
    },
    {
        "content": "<p>It has been in this place since the beginning: <a href=\"https://github.com/WebAssembly/wasi-sdk/commit/c80964d8d7cf8ca2480d8332cd8022cb0600d421#diff-76ed074a9305c04054cdebb9e9aad2d818052b07091de1f20cad0bbac34ffb52R5\">https://github.com/WebAssembly/wasi-sdk/commit/c80964d8d7cf8ca2480d8332cd8022cb0600d421#diff-76ed074a9305c04054cdebb9e9aad2d818052b07091de1f20cad0bbac34ffb52R5</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/commit/c80964d8d7cf8ca2480d8332cd8022cb0600d421#diff-76ed074a9305c04054cdebb9e9aad2d818052b07091de1f20cad0bbac34ffb52R5\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5c099a848828a1700f338284aa32d1bb8f716463\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f656134643039333936383235386531383062636164666431663362373535363862373134313133376261333631363431646664383532356661616238616336342f576562417373656d626c792f776173692d73646b2f636f6d6d69742f63383039363464386437636638636132343830643833333263643830323263623036303064343231)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/commit/c80964d8d7cf8ca2480d8332cd8022cb0600d421#diff-76ed074a9305c04054cdebb9e9aad2d818052b07091de1f20cad0bbac34ffb52R5\" title=\"initial commit · WebAssembly/wasi-sdk@c80964d\">initial commit · WebAssembly/wasi-sdk@c80964d</a></div><div class=\"message_embed_description\">largely based on yury's wasmception</div></div></div>",
        "id": 424914582,
        "sender_full_name": "bjorn3",
        "timestamp": 1709657566
    },
    {
        "content": "<p>I know I've definitely written janky \"temporary\" makefiles that assume this path too. I do wonder whether there's any push to rename in a more conventional cross-compiler way with binary names prefixed by a triple, e.g. <code>wasm32-wasi-cc</code>, <code>wasm32-wasi-ld</code>, etc? Then one wouldn't need to hardcode or look for a path with a name <code>clang</code> that shadows a likely existing binary (cc <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> )</p>",
        "id": 424915141,
        "sender_full_name": "Chris Fallin",
        "timestamp": 1709657726
    },
    {
        "content": "<p>GREAT! I've gone through so many different repos that do a manual installation that I think when I <em>actually found out there was a deb</em> I went through the moon. But now the older repos do not have the common install using the .deb.</p>",
        "id": 424915249,
        "sender_full_name": "Ralph",
        "timestamp": 1709657763
    },
    {
        "content": "<p>Here's an example repo I'm going through and using for fun and kicks that does the manual version: <a href=\"https://github.com/dev-wasm/dev-wasm-feature/blob/2a1dcb74fcb9c0c7d7ab708a6f7317db4f4cc642/src/wasmtime-wasi/install.sh#L9-L33\">https://github.com/dev-wasm/dev-wasm-feature/blob/2a1dcb74fcb9c0c7d7ab708a6f7317db4f4cc642/src/wasmtime-wasi/install.sh#L9-L33</a>.</p>",
        "id": 424915507,
        "sender_full_name": "Ralph",
        "timestamp": 1709657849
    },
    {
        "content": "<p>I see a LOT of that kind of thing.</p>",
        "id": 424915524,
        "sender_full_name": "Ralph",
        "timestamp": 1709657855
    },
    {
        "content": "<p>so I was wondering what was the best path to migrate toward something standard.....</p>",
        "id": 424915597,
        "sender_full_name": "Ralph",
        "timestamp": 1709657881
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"254389\">Chris Fallin</span> <a href=\"#narrow/stream/219900-wasi/topic/wasi-sdk.20installation.20from.20.2Edeb/near/424915141\">said</a>:</p>\n<blockquote>\n<p>I know I've definitely written janky \"temporary\" makefiles that assume this path too. I do wonder whether there's any push to rename in a more conventional cross-compiler way with binary names prefixed by a triple, e.g. <code>wasm32-wasi-cc</code>, <code>wasm32-wasi-ld</code>, etc? Then one wouldn't need to hardcode or look for a path with a name <code>clang</code> that shadows a likely existing binary (cc <span class=\"user-mention silent\" data-user-id=\"254083\">Dan Gohman</span> )</p>\n</blockquote>\n<p>squillace@dellsquill:~$ clang --version<br>\nUbuntu clang version 14.0.0-1ubuntu1.1<br>\nTarget: x86_64-pc-linux-gnu<br>\nThread model: posix<br>\nInstalledDir: /usr/bin<br>\nsquillace@dellsquill:~$ /opt/wasi-sdk/bin/clang --version<br>\nclang version 17.0.6<br>\nTarget: wasm32-unknown-wasi<br>\nThread model: posix<br>\nInstalledDir: /opt/wasi-sdk/bin</p>",
        "id": 424916908,
        "sender_full_name": "Ralph",
        "timestamp": 1709658260
    },
    {
        "content": "<p>to be clear, not a critical issue. But as we move forward, I'd love to start hammering out repos I can contribute to.....</p>",
        "id": 424917051,
        "sender_full_name": "Ralph",
        "timestamp": 1709658310
    },
    {
        "content": "<p>See also <a href=\"https://github.com/WebAssembly/wasi-sdk/pull/388\">https://github.com/WebAssembly/wasi-sdk/pull/388</a> which is discussing target-prefixed binaries.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk/pull/388\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/2958afbb9e26129f088121e629180d2159c17264\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313562616537313334666265663830366630643435653661653066343133313033323235353239393331613065303030393532393465363565393862303064302f576562417373656d626c792f776173692d73646b2f70756c6c2f333838)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk/pull/388\" title=\"Add target-prefixed executables to the installation `bin` directory by alexcrichton · Pull Request #388 · WebAssembly/wasi-sdk\">Add target-prefixed executables to the installation `bin` directory by alexcrichton · Pull Request #388 · WebAssembly/wasi-sdk</a></div><div class=\"message_embed_description\">Currently the bin directory installed by wasi-sdk is not currently suitable for putting in $PATH in all cases because it can shadow a system-installed clang executable which is intended for native ...</div></div></div>",
        "id": 424932492,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1709663355
    },
    {
        "content": "<p>I didn't think target-prefixed binaries was a thing that clang did until now, but it appears they are, so maybe we should do that.</p>",
        "id": 424932586,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1709663396
    }
]