[
    {
        "content": "<p>mostly for <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> - in wasi-libc i need to adjust various C files in mild ways for the changes in the C headers generated to implement the tagged unions</p>",
        "id": 187587077,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022067
    },
    {
        "content": "<p>ok</p>",
        "id": 187587140,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581022088
    },
    {
        "content": "<p><a href=\"https://github.com/CraneStation/wasi-libc/blob/master/libc-bottom-half/cloudlibc/src/libc/poll/poll.c#L25\" target=\"_blank\" title=\"https://github.com/CraneStation/wasi-libc/blob/master/libc-bottom-half/cloudlibc/src/libc/poll/poll.c#L25\">https://github.com/CraneStation/wasi-libc/blob/master/libc-bottom-half/cloudlibc/src/libc/poll/poll.c#L25</a><br>\nin this one, theres some <code>//non-anonymous union</code> changes marked off with the __wasilibc_unmodified_upstream macros</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/CraneStation/wasi-libc/blob/master/libc-bottom-half/cloudlibc/src/libc/poll/poll.c#L25\" style=\"background-image: url(https://avatars0.githubusercontent.com/u/11573910?s=400&amp;v=4)\" target=\"_blank\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/CraneStation/wasi-libc/blob/master/libc-bottom-half/cloudlibc/src/libc/poll/poll.c#L25\" target=\"_blank\" title=\"CraneStation/wasi-libc\">CraneStation/wasi-libc</a></div><div class=\"message_embed_description\">WASI libc implementation for WebAssembly. Contribute to CraneStation/wasi-libc development by creating an account on GitHub.</div></div></div>",
        "id": 187587153,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022097
    },
    {
        "content": "<p>my impression was that upstream was cloudlibc, which wouldnt know about any of these wasi macros/structs, right?</p>",
        "id": 187587196,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022131
    },
    {
        "content": "<p>my question is basically, do i keep making changes in the <code>else</code> case of these macros and move other fields that need changes into the <code>if</code> case and <code>else</code> case</p>",
        "id": 187587267,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022188
    },
    {
        "content": "<p><em>cloudabi</em> is renamed to <em>wasi</em> unconditionally everywhere, and then we mark further changes with <code>#ifdef __wasilibc_unmodified_upstream</code></p>",
        "id": 187587345,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581022219
    },
    {
        "content": "<p>or do we just erase the macro leaving only the else case, because we've drifted sufficiently far from cloudlibc that tracking the changes in macros isnt needed</p>",
        "id": 187587354,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022230
    },
    {
        "content": "<p>ah, ok.</p>",
        "id": 187587358,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022232
    },
    {
        "content": "<p>so then i should name the fields named <code>...-&gt;type</code> into the if case and the part where theyre renamed as <code>...-&gt;u.tag</code> in the else case.</p>",
        "id": 187587391,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022264
    },
    {
        "content": "<p>In general, try to leave the unmodified upstream version unmodified, including the original field names.</p>",
        "id": 187587509,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581022347
    },
    {
        "content": "<p>Although, I'd be open to just removing all the wasilibc-unmodified_upstream changes entirely. They're increasingly turning out to be more of a hassle than they're worth.</p>",
        "id": 187587738,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581022517
    },
    {
        "content": "<p>s/changes/code blocks/</p>",
        "id": 187587765,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581022536
    },
    {
        "content": "<p>ok. i think they can be maintained without a ton of trouble for this transformation, but im also not against just getting rid of them</p>",
        "id": 187587831,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022572
    },
    {
        "content": "<p><a href=\"/user_uploads/15107/c_IkBtkWz1QtXQBXHwZ8oEUI/poll.diff\" target=\"_blank\" title=\"poll.diff\">poll.diff</a> heres one example diff (just the first one ive done)</p>",
        "id": 187588059,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581022740
    },
    {
        "content": "<p>That looks good to me, though what's going on in the last part?</p>",
        "id": 187588455,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581022962
    },
    {
        "content": "<p>(btw i made a minor mistake in the witx and im making changes to far more stuff outside of those ifdefs than before, so im leaning towards deleting at least the // non-anonymous union ones)</p>",
        "id": 187588771,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581023162
    },
    {
        "content": "<p>in that last part, theres a precondition that the tag is either fd_read or fd_write, so the existing code uses the same union variant for each of those</p>",
        "id": 187588826,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581023188
    },
    {
        "content": "<p>the new code needs to use a separate union variant whether the tag is read or write (not strictly necessary right now, since the two variants are equal, but if we added a field to one and not the other, it would be incorrect and no way to catch it)</p>",
        "id": 187588870,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581023223
    },
    {
        "content": "<p>so we dispatch on the tag, then use the variant accordingly</p>",
        "id": 187588884,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581023237
    },
    {
        "content": "<p>and i unfolded the other ternary into that same if/else</p>",
        "id": 187588891,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581023247
    },
    {
        "content": "<p>Ah, ok.</p>",
        "id": 187588991,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581023317
    },
    {
        "content": "<p>anyhow im now of the opinion that the code will be a lot cleaner (easier to read and maintain) if we delete the unmodified case (and dont continue maintaining the unmodified case) for these unions</p>",
        "id": 187589131,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581023406
    },
    {
        "content": "<p>I think we can go ahead and do that.</p>",
        "id": 187589299,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581023525
    },
    {
        "content": "<p>As WASI has been evolving, maintaining these extra code paths has gotten increasingly awkward.</p>",
        "id": 187589745,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1581023822
    },
    {
        "content": "<p>yep. and since theres no CI that checks that the other side of the #ifdef even works, we're relying on discipline to keep everything guarded properly</p>",
        "id": 187589906,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1581023930
    }
]