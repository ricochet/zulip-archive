[
    {
        "content": "<p>one thing that has come up a few times, including in the last wasi call, is that witx is able to describe the type signatures of modules that a wasi executable may import, but it doesnt describe 1. what the requirements for a module to export are, which is required to specify reactors like proxy-wasm, and 2. which modules in particular are available for import, which will be useful once there are multiple modules being considered</p>",
        "id": 195605164,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588097793
    },
    {
        "content": "<p>so im going to work on an addition to witx that is a <code>(profile $identifier ...)</code> which allows you to specify export functions  &amp; memory using the same syntax as modules do, and use <code>(import $modulename)</code> to specify that an import is available</p>",
        "id": 195605703,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588098068
    },
    {
        "content": "<p>it should be pretty straightforward, and i hope that it will be useful. I plan to use it in lucet immediately, but ideally it would be useful by others as well.</p>",
        "id": 195605726,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588098083
    },
    {
        "content": "<p>one idea i had that makes it nontrivial (and wouldnt be part of the initial implementation) is that one desirable profile we might specify is a module which makes multiple wasi snapshots available for import</p>",
        "id": 195605798,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588098116
    },
    {
        "content": "<p>currently, because snapshot 0 and 1 use the same typenames in the global scope, we cant do a <code>(use ...)</code> of both snapshots into the same .witx doc so they can both be included in a profile</p>",
        "id": 195605954,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588098180
    },
    {
        "content": "<p>so this may end up being a forcing function for a suggestion i made a long time ago, which is to introduce scopes to witx somehow, so that theres some hierarchy besides one big top-level scope.</p>",
        "id": 195606088,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588098240
    },
    {
        "content": "<p>i don't have any strong ideas for how to do that, its a bit of a bikeshed</p>",
        "id": 195606184,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588098267
    },
    {
        "content": "<p>i'd welcome feedback and suggestions on how to do that, and anything else related to profiles.</p>",
        "id": 195606340,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588098336
    },
    {
        "content": "<p>one thing that's initially unclear to me is what motivates <code>profile</code>, rather than using <code>export</code> to indicate things you can import from and <code>import</code> to indicate things you're supposed to export</p>",
        "id": 195613172,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588101653
    },
    {
        "content": "<p><code>profile</code> is really for a world in which you have specified a significant number of modules in witx, and want a way to express what subset of them you actually support</p>",
        "id": 195613374,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588101770
    },
    {
        "content": "<p>ah, makes sense. I think I just misread your comment :-}</p>",
        "id": 195613536,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588101859
    },
    {
        "content": "<p>it also allows us to decouple executables and reactors specifications from import module specifications. if we added <code>export \"_start\"</code> to the existing wasi snapshot 1 module today, that raises the question of how a reactor uses that</p>",
        "id": 195613563,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588101875
    },
    {
        "content": "<p>and where that export belongs in ephemeral</p>",
        "id": 195613577,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588101886
    },
    {
        "content": "<p>do you mean <code>import</code> there?</p>",
        "id": 195613601,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588101904
    },
    {
        "content": "<p>yes, thats what i meant, sorry</p>",
        "id": 195613638,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588101927
    },
    {
        "content": "<p>We already have an <code>import</code> for \"memory\", and I agree adding a witx description of <code>_start</code> and now <code>_initialize</code> makes sense</p>",
        "id": 195613643,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588101929
    },
    {
        "content": "<p>cool</p>",
        "id": 195613650,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588101932
    },
    {
        "content": "<p>yes, we should retain the import of memory in every module which requires it (i expect this is all of them until interface types lands)</p>",
        "id": 195613819,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588102026
    },
    {
        "content": "<p>but i guess you could theoretically have some witx-specified module that just sends atoms back and forth and doesnt need to share memory.</p>",
        "id": 195613856,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588102056
    },
    {
        "content": "<p>wasi_ephemeral_sched.witx totally doesn't need memory <span aria-label=\"clown\" class=\"emoji emoji-1f921\" role=\"img\" title=\"clown\">:clown:</span></p>",
        "id": 195614888,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588102565
    },
    {
        "content": "<p>hmm yeah maybe only modules that use @witx pointer and const_pointer actually <em>need</em> it</p>",
        "id": 195614958,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588102598
    },
    {
        "content": "<p>ive turned this into a PR</p>",
        "id": 195756857,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588187675
    },
    {
        "content": "<p><a href=\"https://github.com/WebAssembly/WASI/pull/267\" title=\"https://github.com/WebAssembly/WASI/pull/267\">https://github.com/WebAssembly/WASI/pull/267</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/pull/267\" style=\"background-image: url(https://avatars3.githubusercontent.com/u/11578470?s=400&amp;v=4)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/pull/267\" title=\"Introduce witx profiles by pchickey 路 Pull Request #267 路 WebAssembly/WASI\">Introduce witx profiles by pchickey 路 Pull Request #267 路 WebAssembly/WASI</a></div><div class=\"message_embed_description\">Prior to this patch, a witx file describes a collection of interfaces that a module can import. However, we don&#39;t have a way to describe completely[1] what a module must export, or which of man...</div></div></div>",
        "id": 195756860,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588187676
    },
    {
        "content": "<p>initially i allowed <code>(export (memory))</code> to be specified in a <code>profile</code>, but i realized that this requirement is already covered by  the <code>(import (memory))</code> of the modules available for import. So, I decided that profiles are just a collection of <code>(import $modulename)</code> and <code>(@interface func (export \"funcname\") &lt;func type information&gt;)</code>.</p>",
        "id": 195757047,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1588187763
    },
    {
        "content": "<p>awesome, I'll take a look later today</p>",
        "id": 195759249,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588188742
    },
    {
        "content": "<p>initial comments posted!</p>",
        "id": 195772439,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1588195628
    }
]