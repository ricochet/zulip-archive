[
    {
        "content": "<p>I'm having difficulty exporting a resource within a wit file.</p>\n<p>I have the following wit file:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package example:greeter;\n\nworld greeter {\n    resource person {\n        constructor(name: string);\n        greet();\n    }\n\n    export person;\n}\n</code></pre></div>\n<p>However this fails. The way I previously solved this when resources weren't working, is by passing in the state as <code>list&lt;u8&gt;</code> and deserializing it in the guest. But this also meant any changes I made to a struct needed to be serailized again and returned.</p>\n<p>I was hoping resources could solve this, so I could have access to a <code>&amp;self</code> or <code>&amp;mut self</code> on a struct within the guest.<br>\nThough it seems like resources are only meant to be implemented on the host?</p>",
        "id": 399874633,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1698911710
    },
    {
        "content": "<p>I seemed to have some luck by doing this:</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package example:greeter;\n\nworld greeter {\n    export person: interface {\n        resource person {\n            constructor(name: string);\n            greet();\n        }\n    };\n}\n</code></pre></div>\n<p>Though I'm not sure if there's a better way</p>",
        "id": 399878182,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1698913186
    },
    {
        "content": "<p>Also, I can only use <code>&amp;self</code> with resources? I can get around this limitation by wrapping my fields in RefCell, but it would be ideal if I could implement the trait with <code>&amp;mut self</code>. Is there a reason it's currently just <code>&amp;self</code>?</p>",
        "id": 399878714,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1698913366
    },
    {
        "content": "<p>(Where I put <code>greet()</code> should be <code>green: func()</code>)</p>",
        "id": 399884896,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1698915618
    },
    {
        "content": "<p>Currently resources must be in world interface exports, they can't be at the top level. For the &amp;self bit it's something I'd like to fix but for now that does require refcell or cell yes</p>",
        "id": 399940464,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1698933029
    },
    {
        "content": "<p>From the host side, I'm using:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"aggregate\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">ownership</span>: <span class=\"nc\">Borrowing</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">duplicate_if_necessary</span>: <span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"k\">async</span>: <span class=\"nc\">true</span><span class=\"p\">,</span>\n<span class=\"p\">});</span>\n</code></pre></div>\n<p>And it generates something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Aggregate</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">interface0</span>: <span class=\"nc\">exports</span>::<span class=\"n\">aggregate</span>::<span class=\"n\">Aggregate</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">exports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">mod</span> <span class=\"nn\">aggregate</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Aggregate</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">init</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Func</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">apply</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Func</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">handle</span>: <span class=\"nc\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Func</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The issue I'm having is that it doesn't add <code>#[derive(Clone, Copy)]</code> to the Aggregate structs.<br>\nI dug into the options for <code>wasmtime::component::bindgen!</code> and didn't see anything for adding derives to these, and sadly I can't implement them myself since the fields of aggregate are private.</p>",
        "id": 400262459,
        "sender_full_name": "Ari Seyhun",
        "timestamp": 1699080111
    }
]