[
    {
        "content": "<p>Has anyone tried/succeeded at plumbing a wasi-http incoming request into a hyper service (in a guest)?</p>",
        "id": 402039778,
        "sender_full_name": "Lann Martin",
        "timestamp": 1699984978
    },
    {
        "content": "<p>nobody on fastlys side has tried this yet, but id love to see it</p>",
        "id": 402044260,
        "sender_full_name": "Pat Hickey",
        "timestamp": 1699986683
    },
    {
        "content": "<p>This is not using the latest wit definitions but it should be good for comparison, though. <a href=\"https://github.com/smithy-lang/smithy-rs/pull/2520\">https://github.com/smithy-lang/smithy-rs/pull/2520</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/smithy-lang/smithy-rs/pull/2520\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/d9f0102a17d12745cec75cadec4c6a628f705209\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386161633331323963643834393839393335383338366535356437323862666132376163656261386536366462356264653630643531323034396233383064632f736d697468792d6c616e672f736d697468792d72732f70756c6c2f32353230)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/smithy-lang/smithy-rs/pull/2520\" title=\"feat: make outgoing request based on wasi-http proposal by eduardomourar 路 Pull Request #2520 路 smithy-lang/smithy-rs\">feat: make outgoing request based on wasi-http proposal by eduardomourar 路 Pull Request #2520 路 smithy-lang/smithy-rs</a></div><div class=\"message_embed_description\">Motivation and Context\n#2087\nThis is a continuation of PR #2254, it will replace the mocked HTTP client with one based on the WASI HTTP proposal.\nDescription\nA separate crate called aws-smithy-wasm...</div></div></div>",
        "id": 402080511,
        "sender_full_name": "Eduardo Rodrigues",
        "timestamp": 1700000371
    },
    {
        "content": "<p>Well I finally have something working for this. It is very much \"works for one example\"-quality at this point but hopefully useful enough for others to try out: <a href=\"https://github.com/lann/wasi-hyperium\">https://github.com/lann/wasi-hyperium</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/lann/wasi-hyperium\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/5e0d22db0d21854187dd21eda0f2bdf15e19910e\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393363363132306334376364666530343163616335626336303438653366613138356166643536616261633931336461313236353030323536363233636330322f6c616e6e2f776173692d687970657269756d)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/lann/wasi-hyperium\" title=\"GitHub - lann/wasi-hyperium\">GitHub - lann/wasi-hyperium</a></div><div class=\"message_embed_description\">Contribute to lann/wasi-hyperium development by creating an account on GitHub.</div></div></div>",
        "id": 405121548,
        "sender_full_name": "Lann Martin",
        "timestamp": 1701352227
    },
    {
        "content": "<p>I'm hoping <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span>'s work on integrating tokio/mio with preview2 pollables will allow the custom event loop to go away.</p>",
        "id": 405121664,
        "sender_full_name": "Lann Martin",
        "timestamp": 1701352270
    },
    {
        "content": "<p>Looking forward to trying this out, Lann</p>",
        "id": 405122023,
        "sender_full_name": "Ralph",
        "timestamp": 1701352390
    }
]