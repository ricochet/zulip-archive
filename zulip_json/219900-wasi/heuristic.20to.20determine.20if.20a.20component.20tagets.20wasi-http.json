[
    {
        "content": "<p>Hey there, </p>\n<p>I am wondering if this heuristic is suffice to determine a given Wasm binary is targeting <code>wasi-http/proxy</code> world:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">ComponentTarget</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">new</span><span class=\"o\">&lt;'</span><span class=\"na\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">I</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"o\">'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Self</span>\n<span class=\"w\">    </span><span class=\"k\">where</span>\n<span class=\"w\">        </span><span class=\"n\">I</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">IntoIterator</span><span class=\"o\">&lt;</span><span class=\"n\">Item</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">&amp;'</span><span class=\"na\">b</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ComponentItem</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">b</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// This is heuristic but seems to work</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">has_http_handler</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">exports</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">()</span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">any</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"n\">starts_with</span><span class=\"p\">(</span><span class=\"s\">\"wasi:http/incoming-handler\"</span><span class=\"p\">));</span>\n\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">has_http_handler</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"_start\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"p\">::</span><span class=\"n\">Command</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"_start\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"p\">::</span><span class=\"n\">HttpProxy</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"p\">::</span><span class=\"n\">Core</span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Also, why does the wasi:http component's entrypoint is <code>_start</code>? </p>\n<p>CC some experts on this: <span class=\"user-mention\" data-user-id=\"253994\">@Alex Crichton</span> <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span></p>",
        "id": 477032725,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1729011506
    },
    {
        "content": "<p>The <code>name.starts_with(\"wasi:http/incoming-handler\")</code> parts looks right, but I don't see how <code>_start</code> would be involved.  If you're trying to see if it's a command, you'd look for <code>name.starts_with(\"wasi:cli/run\")</code></p>",
        "id": 477033693,
        "sender_full_name": "Joel Dice",
        "timestamp": 1729011832
    },
    {
        "content": "<p>I guess you'd look for <code>_start</code> in the case of a WASIp1 command, but in that case you'd be looking at a module rather than a component.</p>",
        "id": 477033875,
        "sender_full_name": "Joel Dice",
        "timestamp": 1729011883
    },
    {
        "content": "<p>And if you're trying to determine whether a binary targets p1 vs p2, you'd first check whether it's a module or a component.</p>",
        "id": 477034062,
        "sender_full_name": "Joel Dice",
        "timestamp": 1729011952
    },
    {
        "content": "<p>right, so wasip1 is always a module, and wasip2 is always a component</p>",
        "id": 477034289,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1729012022
    },
    {
        "content": "<p>Thank you so much!</p>",
        "id": 477034404,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1729012070
    },
    {
        "content": "<p>Correct, although <code>wasit2</code> (or something like it, i.e. a module that uses the component model ABI) will eventually be a thing, also: <a href=\"https://github.com/WebAssembly/component-model/pull/378\">https://github.com/WebAssembly/component-model/pull/378</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/component-model/pull/378\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b0e2b1cf5f857a4eccc2df3efaabb5f25c841157/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313632396139366363646164666335373838333061353538353337313935666365393261323131346661383138623834363734313138393238643064663336642f576562417373656d626c792f636f6d706f6e656e742d6d6f64656c2f70756c6c2f333738&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/component-model/pull/378\" title=\"Add BuildTargets.md by lukewagner · Pull Request #378 · WebAssembly/component-model\">Add BuildTargets.md by lukewagner · Pull Request #378 · WebAssembly/component-model</a></div><div class=\"message_embed_description\">This PR adds BuildTargets.md to define this new concept of &quot;build targets&quot; as presented in both CG-06 and WASI-06-12, which itself was a revision of the earlier &quot;wasit2&quot; idea th...</div></div></div>",
        "id": 477034494,
        "sender_full_name": "Joel Dice",
        "timestamp": 1729012091
    },
    {
        "content": "<p>oh interesting. wondering what does <code>t</code> mean in <code>wasit2</code></p>",
        "id": 477034953,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1729012303
    },
    {
        "content": "<p>\"transitional\": <a href=\"https://github.com/WebAssembly/WASI/issues/595#issuecomment-2087137863\">https://github.com/WebAssembly/WASI/issues/595#issuecomment-2087137863</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/WASI/issues/595#issuecomment-2087137863\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d506280e577ea19f8c980a40f73671479160b97f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623439633431343361653831336134333736373562643436636533666139633539613061303135376562306562393239663066393733303163616463643936652f576562417373656d626c792f574153492f6973737565732f353935&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/WASI/issues/595#issuecomment-2087137863\" title=\"Long-term support for WASIp1 in the toolchain · Issue #595 · WebAssembly/WASI\">Long-term support for WASIp1 in the toolchain · Issue #595 · WebAssembly/WASI</a></div><div class=\"message_embed_description\">Do apologize in advance if this is not the right repository for this issue; happy to move it somewhere else I added an item to the agenda for the next WASI meeting to discuss this topic: WebAssembl...</div></div></div>",
        "id": 477035106,
        "sender_full_name": "Joel Dice",
        "timestamp": 1729012345
    },
    {
        "content": "<p>Thanks for the context!</p>",
        "id": 477035218,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1729012384
    },
    {
        "content": "<p>started to think this might be very useful for Go</p>",
        "id": 477035246,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1729012392
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"487764\">@Mossaka (Joe)</span> I assume you're aware of it, but just in case you're not: <code>wasm-tools component targets</code> might be of interest</p>",
        "id": 477290713,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1729108825
    }
]