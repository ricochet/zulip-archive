[
    {
        "content": "<p>Hi, I'm not sure if anyone tried this yet, but I was thinking if it is possible to use pyo3 in a component, I would like to run a Rust program that calls into a python library when needed</p>\n<p>since Google doesn't help I'm pretty sure there is no well-traveled path but has anyone looked into this yet?</p>",
        "id": 371974591,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1688384979
    },
    {
        "content": "<p>You might want to look at <a href=\"https://github.com/dicej/componentize-py\">componentize-py</a> and/or <a href=\"https://github.com/fermyon/spin-python-sdk\">spin-python-sdk</a>, both of which use Py03 to bridge Rust and Python in a WASI guest.  The key to making it work is building CPython to target WASI and setting the <code>lib_dir</code> option in your Py03 config file to point to it, e.g. <a href=\"https://github.com/dicej/componentize-py/blob/7f7489dcae8104f501902854a901394c8a17c4c3/build.rs#L222-L248\">https://github.com/dicej/componentize-py/blob/7f7489dcae8104f501902854a901394c8a17c4c3/build.rs#L222-L248</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/componentize-py\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cf2fe5ef765dbbe3177994088c4b5c109e255602\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636264323263636661363662373730643834383236633331633735323364626339326666363761356637386237313361626130396337336465616430616239652f646963656a2f636f6d706f6e656e74697a652d7079)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/componentize-py\" title=\"GitHub - dicej/componentize-py\">GitHub - dicej/componentize-py</a></div><div class=\"message_embed_description\">Contribute to dicej/componentize-py development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fermyon/spin-python-sdk\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/4da039a8f6458c6c68d19288bbdb0e2bc7091d5d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f313164336366613936653739376233383038303862333539343161346433393333656364383964363166666261623361346363633561633734373236373935362f6665726d796f6e2f7370696e2d707974686f6e2d73646b)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fermyon/spin-python-sdk\" title=\"GitHub - fermyon/spin-python-sdk: Experimental Spin Python SDK\">GitHub - fermyon/spin-python-sdk: Experimental Spin Python SDK</a></div><div class=\"message_embed_description\">Experimental Spin Python SDK. Contribute to fermyon/spin-python-sdk development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/dicej/componentize-py/blob/7f7489dcae8104f501902854a901394c8a17c4c3/build.rs#L222-L248\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cf2fe5ef765dbbe3177994088c4b5c109e255602\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636264323263636661363662373730643834383236633331633735323364626339326666363761356637386237313361626130396337336465616430616239652f646963656a2f636f6d706f6e656e74697a652d7079)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/dicej/componentize-py/blob/7f7489dcae8104f501902854a901394c8a17c4c3/build.rs#L222-L248\" title=\"componentize-py/build.rs at 7f7489dcae8104f501902854a901394c8a17c4c3 · dicej/componentize-py\">componentize-py/build.rs at 7f7489dcae8104f501902854a901394c8a17c4c3 · dicej/componentize-py</a></div><div class=\"message_embed_description\">Contribute to dicej/componentize-py development by creating an account on GitHub.</div></div></div>",
        "id": 372010638,
        "sender_full_name": "Joel Dice",
        "timestamp": 1688391625
    },
    {
        "content": "<p>oh I didn't realize componentize actually uses pyo3, thank you I will have a deeper look :)</p>\n<p>side question, is there any update on supporting the new wit format with packages?</p>",
        "id": 372033946,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1688395458
    },
    {
        "content": "<p>The <code>snapshot</code> branch in the <code>componentize-py</code> repo uses the new WIT format, but that branch also includes native extension support (i.e. the \"pseudo-dynamic linking\" stuff I mentioned above), which depends on toolchain changes which haven't been upstreamed yet.  I'm hoping to work on that later this week.  The WIT-related changes could probably be backported to the main branch, but I'm not sure that's worth the effort.</p>",
        "id": 372050229,
        "sender_full_name": "Joel Dice",
        "timestamp": 1688398300
    },
    {
        "content": "<p>I agree backporting is too much effort, thanks a lot for the progress report :) I hope upstream merges will go smoothly</p>",
        "id": 372056744,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1688399584
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"550770\">Ramon Klass</span> has marked this topic as resolved.</p>",
        "id": 372063621,
        "sender_full_name": "Notification Bot",
        "timestamp": 1688400876
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"550770\">@Ramon Klass</span> if you're interested in keeping up with the progress on Python. <span class=\"user-mention\" data-user-id=\"509936\">@Joel Dice</span> and <span class=\"user-mention\" data-user-id=\"447413\">@Kevin Smith</span> are the organizers of the Python Subgroup of the Guest Languages SIG and they meet as a group on an every other week cadence to talk about Python guest work.</p>",
        "id": 374066635,
        "sender_full_name": "Robin Brown",
        "timestamp": 1689017653
    },
    {
        "content": "<p>I'm generally interested, I wasn't sure how open those meetings are and never dared to sign up for one</p>",
        "id": 374295832,
        "sender_full_name": "Ramon Klass",
        "timestamp": 1689087301
    },
    {
        "content": "<p>no harm in dropping in to find out!</p>",
        "id": 374333514,
        "sender_full_name": "Ralph",
        "timestamp": 1689094406
    },
    {
        "content": "<p>I'd love to see more interested folks show up!</p>",
        "id": 374364542,
        "sender_full_name": "Jamey Sharp",
        "timestamp": 1689102585
    },
    {
        "content": "<p>All meetings for SIG Guest Languages and its subgroups are fully open to the public. You're welcome to join us!</p>",
        "id": 374368141,
        "sender_full_name": "Robin Brown",
        "timestamp": 1689103694
    }
]