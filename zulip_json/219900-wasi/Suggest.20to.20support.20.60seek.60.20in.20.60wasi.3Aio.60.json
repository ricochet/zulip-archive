[
    {
        "content": "<p>Hi there, </p>\n<p>this comes up Æ’rom today's Go Subgroup meeting where <span class=\"user-mention\" data-user-id=\"601716\">@Damian Gryski</span> was discussing some of the challenges in implementing wasip2 in TinyGo. The question is how to implement <code>seek</code> in wasip2. While wasi:io provides a <code>skip</code> function that allow you to advance the stream's current position by an offset, but it doesn't allow bacward movement or movement relative to the end of the stream that <code>seek</code> offers. </p>\n<p>One possible implemention would be replacing <code>skip</code> with <code>seek</code> that takes an signed inteter as the offset, allowing it to go forward or backward. This might be challenging since not all streams support seeking. e.g. network data. What do you think? </p>\n<p>FYI <span class=\"user-mention\" data-user-id=\"253992\">@Pat Hickey</span> <span class=\"user-mention\" data-user-id=\"254083\">@Dan Gohman</span> <span class=\"user-mention\" data-user-id=\"639636\">@Randy Reddig</span> <span class=\"user-mention\" data-user-id=\"421591\">@Bailey Hayes</span></p>",
        "id": 410943334,
        "sender_full_name": "Mossaka (Joe)",
        "timestamp": 1704248605
    },
    {
        "content": "<p>The way <code>seek</code> is expected to be implemented is by dropping the old stream, and creating a new stream at the new offset, by calling <code>read-via-stream</code> or <code>write-via-stream</code> on the <code>descriptor</code>.</p>",
        "id": 410956533,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1704257599
    },
    {
        "content": "<p>^ That sounds just like the approach <span class=\"user-mention\" data-user-id=\"601716\">@Damian Gryski</span> landed on</p>",
        "id": 411073484,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1704312285
    }
]