[
    {
        "content": "<p>Is there a way to import the same interface more than once in a single world? WIT doesn't seem to support external references that change the name of an imported/exported interface. Importing the same interface twice creates a name conflict.</p>\n<p>I want to have a world like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"o\">-</span><span class=\"n\">environments</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">overlay</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>As a work around, I can redefine the interface under a different name. The closest I can get today is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">merge</span><span class=\"o\">-</span><span class=\"n\">environments</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">overlay</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">interface</span><span class=\"w\">  </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">get</span><span class=\"o\">-</span><span class=\"n\">environment</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">list</span><span class=\"o\">&lt;</span><span class=\"n\">tuple</span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 454055282,
        "sender_full_name": "Scott Andrews",
        "timestamp": 1721942065
    },
    {
        "content": "<p>Currently this isn't possible, it requires the workaround you've outlined. Others have expressed interest for this feature however but I can't seem to find the issue in the upstream component-model repo right now</p>",
        "id": 454056649,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1721942727
    },
    {
        "content": "<p>Thanks for the confirmation</p>",
        "id": 454056749,
        "sender_full_name": "Scott Andrews",
        "timestamp": 1721942765
    }
]