[
    {
        "content": "<p>I am trying to build a very simple application with components that does not depend on any other packages. just some functions. When I compile my guest project to a core wasm module everything seems to be working just fine, with the output of <code>wasm-tools  component wit &lt;core.wasm&gt;</code> being</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"nc\">root</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">sus</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>However when i convert the core module to a component with<br>\n<code>wasm-tools component new --adapt wasi_snapshot_preview1=latest_wasi_snapshot_preview1.reactor.wasm &lt;core.wasm&gt; -o component.wasm</code><br>\nIt adds dependencies on a bunch of standard packages:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">..</span><span class=\"p\">.</span>\n\n<span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"p\">:</span><span class=\"nc\">component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">environment</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">exit</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">error</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">streams</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">stdin</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">stdout</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">cli</span><span class=\"o\">/</span><span class=\"n\">stderr</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">clocks</span><span class=\"o\">/</span><span class=\"n\">wall</span><span class=\"o\">-</span><span class=\"n\">clock</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">filesystem</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">:</span><span class=\"nc\">filesystem</span><span class=\"o\">/</span><span class=\"n\">preopens</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I do not want to support these packages on my host so how can i avoid importing these?</p>",
        "id": 456848037,
        "sender_full_name": "lkjhaisduhjfkxcjvbnis",
        "timestamp": 1722948334
    },
    {
        "content": "<p>If you're using Rust as a source language you can use the <code>wasm32-unknown-unknown</code> target for this</p>",
        "id": 456848298,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1722948422
    },
    {
        "content": "<p>oh great let me try that. is there documentation on this? i have only ever seen the wasm32-wasip1 target in use</p>",
        "id": 456848470,
        "sender_full_name": "lkjhaisduhjfkxcjvbnis",
        "timestamp": 1722948476
    },
    {
        "content": "<p>No documentation I know of myself, but the workflow should be the same (note that things like println in the standard library won't work)</p>",
        "id": 456848757,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1722948562
    },
    {
        "content": "<p>Ok so do i understand this correctly that the wasm32-wasip1 requires these core packages to be present to make the std lib work and wasm32-unknown-unknown does not and hence does not support the stdlib?</p>",
        "id": 456849181,
        "sender_full_name": "lkjhaisduhjfkxcjvbnis",
        "timestamp": 1722948714
    },
    {
        "content": "<p>more or less yeah</p>",
        "id": 456851758,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1722949484
    },
    {
        "content": "<p>It works! Thank you so much for your help!</p>",
        "id": 456852085,
        "sender_full_name": "lkjhaisduhjfkxcjvbnis",
        "timestamp": 1722949574
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"742662\">lkjhaisduhjfkxcjvbnis</span> has marked this topic as resolved.</p>",
        "id": 456854020,
        "sender_full_name": "Notification Bot",
        "timestamp": 1722950124
    }
]