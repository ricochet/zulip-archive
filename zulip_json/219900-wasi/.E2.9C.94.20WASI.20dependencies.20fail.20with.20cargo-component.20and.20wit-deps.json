[
    {
        "content": "<p>The code <a href=\"https://github.com/eduardomourar/wasm-web-shell/tree/wasm-component\">here</a> works with wasm-tools directly with wit-deps. When trying to use cargo-component, I am getting the following error:</p>\n<blockquote>\n<p>error: failed to merge local target <code>/wasm-web-shell/packages/wasi-cli/wit</code><br>\nCaused by:<br>\n  package not found</p>\n</blockquote>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/eduardomourar/wasm-web-shell/tree/wasm-component\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cf67a65b8499feca4ab7172934d8dce34c0d65ab\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373039306331323636376562646335336430393932623062666638306361303633653534663438346536333763393939313334343033313532646639373837342f6564756172646f6d6f757261722f7761736d2d7765622d7368656c6c)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/eduardomourar/wasm-web-shell/tree/wasm-component\" title=\"GitHub - eduardomourar/wasm-web-shell at wasm-component\">GitHub - eduardomourar/wasm-web-shell at wasm-component</a></div><div class=\"message_embed_description\">Contribute to eduardomourar/wasm-web-shell development by creating an account on GitHub.</div></div></div>",
        "id": 377395948,
        "sender_full_name": "Eduardo Rodrigues",
        "timestamp": 1689964698
    },
    {
        "content": "<p>I would appreciate any pointer on how to have a reference to any of WASI's definition locally in cargo-component. Even better if there is a public registry with those definitions compatible with wasmtime v10.</p>",
        "id": 377396746,
        "sender_full_name": "Eduardo Rodrigues",
        "timestamp": 1689964893
    },
    {
        "content": "<p>It was a typo in the Cargo.toml file: <code>[package.metadata.component.target.dependencies]</code></p>",
        "id": 377590360,
        "sender_full_name": "Eduardo Rodrigues",
        "timestamp": 1690030465
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"506572\">Eduardo Rodrigues</span> has marked this topic as resolved.</p>",
        "id": 377590383,
        "sender_full_name": "Notification Bot",
        "timestamp": 1690030477
    },
    {
        "content": "<p>Is this <code>wit/deps/...</code> naming hardwired into <code>wasmtime</code> somewhere?</p>\n<p>Because when I tried to use a relative directory for my wit package elsewhere on my system, <code>wasmtime</code> didn't react well to it:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package.metadata.component.target.dependencies]</span>\n<span class=\"s2\">\"seed-keeper:wallet\"</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s2\">\"../../crates/seed-keeper-wit/wit\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>Although I am able to <code>cargo component build</code> with the above config, when I try to use the component from a Rust host it breaks with error log:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>find<span class=\"w\"> </span>package<span class=\"w\"> </span><span class=\"sb\">`</span>seed-keeper:wallet@0.1.0<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"sb\">`</span>deps<span class=\"sb\">`</span><span class=\"w\"> </span>directory\n<span class=\"w\">            </span>--&gt;<span class=\"w\"> </span>/home/doug/code/rust/seed-keeper/examples/edwards-wit/wit/world.wit:11:12\n<span class=\"w\">             </span><span class=\"p\">|</span>\n<span class=\"w\">          </span><span class=\"m\">11</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\">     </span>import<span class=\"w\"> </span>seed-keeper:wallet/seed-getter@0.1.0<span class=\"p\">;</span>\n<span class=\"w\">             </span><span class=\"p\">|</span><span class=\"w\">            </span>^-----------------\n</code></pre></div>\n<p>I spotted the \"deps directory\"<br>\n<strong>SO</strong> I copied-and-pasted the <code>.wit</code> to <code>wit/deps/seed-keeper/wallet.wit</code>, it  worked, even with no config</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[package.metadata.component.target.dependencies]</span>\n<span class=\"c1\"># removed</span>\n</code></pre></div>\n<p>That's cool, but involves copy-pasta. I'm expecting to be able to import relative wits, based on the docs here:</p>\n<p><a href=\"https://component-model.bytecodealliance.org/language-support/rust.html#importing-an-interface-into-a-command-component\">https://component-model.bytecodealliance.org/language-support/rust.html#importing-an-interface-into-a-command-component</a></p>\n<p>Not exactly sure where to raise this issue (or maybe I'm expecting behaviour that I shouldn't be)?</p>\n<p>Insights are most welcome!</p>",
        "id": 409236036,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703095118
    },
    {
        "content": "<p>Wasmtime itself isn't really WIT-aware, but the <code>wit-parser</code> library that <code>cargo-component</code> uses <em>does</em> hard-code <code>\"deps\"</code></p>",
        "id": 409236418,
        "sender_full_name": "Lann Martin",
        "timestamp": 1703095264
    },
    {
        "content": "<p>Ohh you are using <code>wasmtime::component::bindgen</code>, which does depend on <code>wit-parser</code> as well.</p>",
        "id": 409237086,
        "sender_full_name": "Lann Martin",
        "timestamp": 1703095489
    },
    {
        "content": "<p>I was thinking of the wasmtime <em>runtime</em>, which doesn't know anything about WIT.</p>",
        "id": 409237137,
        "sender_full_name": "Lann Martin",
        "timestamp": 1703095510
    },
    {
        "content": "<p>Yes, correct using  <code>wasmtime::component::bindgen!</code></p>",
        "id": 409237217,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703095539
    },
    {
        "content": "<p>I imagine it is the host build that is breaking then, not the component.</p>",
        "id": 409237255,
        "sender_full_name": "Lann Martin",
        "timestamp": 1703095551
    },
    {
        "content": "<p>Yes that sounds right. I can <code>cargo component build</code> just fine. But running breaks</p>",
        "id": 409237360,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703095581
    },
    {
        "content": "<p>So I suppose my question becomes is there a Host mechanism to use relative <code>wit</code> directories?</p>",
        "id": 409237442,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703095635
    },
    {
        "content": "<p>I'm more surprised that cargo-component doesn't break; it should be calling roughly the same code as wasmtime bindgen.</p>",
        "id": 409237532,
        "sender_full_name": "Lann Martin",
        "timestamp": 1703095680
    },
    {
        "content": "<p>It doesn't; deps are explicitly listed in the target dependency table and it doesn't look at <code>deps</code></p>",
        "id": 409237616,
        "sender_full_name": "Peter Huene",
        "timestamp": 1703095710
    },
    {
        "content": "<p>So I wonder why I'm getting the error that states the missing  wit from the <code>deps</code> directory</p>",
        "id": 409237721,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703095775
    },
    {
        "content": "<p>if you want to \"share\" a deps directory between a standard <code>wit-parser</code> impl (i.e. <code>wit-bindgen</code> and the macro from wasmtime) and <code>cargo-component</code>, it's best to keep the dependency in <code>deps</code> and specify the path to <code>cargo-component</code> such that it points to that directory inside the deps dir</p>",
        "id": 409237732,
        "sender_full_name": "Peter Huene",
        "timestamp": 1703095780
    },
    {
        "content": "<p>Could you show me an example of what you mean? It's a bit mind bending</p>",
        "id": 409237874,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703095839
    },
    {
        "content": "<p><code>\"seed-keeper:wallet\" = { path = \"../../crates/seed-keeper-wit/wit/deps/wallet\" }</code> (or whatever it was before you moved it)</p>",
        "id": 409237938,
        "sender_full_name": "Peter Huene",
        "timestamp": 1703095869
    },
    {
        "content": "<p>Ahh I see what you mean, I can give that a try</p>",
        "id": 409237981,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703095893
    },
    {
        "content": "<p>I can't quite get that to work Peter, but I get the idea. I'll re-try when I've got a bit more time. </p>\n<p>I need to correct my previous statement though -- I <strong>do</strong> need the <code>[target.dependencies]</code> for <code>cargo component build</code> to work.</p>",
        "id": 409245688,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703099715
    },
    {
        "content": "<p>Ok, I think I figured out how to use this <code>\"wit/deps/package-name\"</code> concept. It seems to help to break up wit into separate files for interfaces and worlds, to sort of logically separate things.</p>",
        "id": 409278560,
        "sender_full_name": "DougAnderson444 | PeerPiper.io",
        "timestamp": 1703115537
    }
]