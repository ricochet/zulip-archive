[
    {
        "content": "<p>I was troubleshooting a WebAssembly program today and found the following extremely useful: an API for dumping the current WebAssembly backtrace. I tried using <code>unreachable</code> to do this (it will exit the program and in Wasmtime, e.g., will print the WebAssembly backtrace) but I was dealing with a multi-threaded program in which I needed a backtrace from various threads &mdash; if I trapped the program with <code>unreachable</code> I would not be able to retrieve all the backtraces I needed. I created a single imported function to log the current backtrace and called it in all the places I needed it, much like one would do with <code>debugger</code> in the browser.</p>\n<p>As I talked to <span class=\"user-mention\" data-user-id=\"253990\">@fitzgen (he/him)</span> about this, he suggested it could be a WASI API: until full debugging support is available in all the engines, etc. (which may take a while), this API could be used for troubleshooting. It would involve a re-compile, much like \"printf\" debugging, but it has the significant advantage that one could see the entire backtrace, which is quite important when programs get more complex.</p>\n<p>I used log messages to get the information I needed, but as a WASI API I think it would make more sense as: <code>wasi::capture_backtrace() -&gt; list&lt;(module-name, function-name)&gt;</code>, where both <code>*-name</code>s are strings. Obviously this could be made more or less complex. What I'm trying to get at here is: is anyone else interested in standardizing this kind of API?</p>",
        "id": 397398734,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1697674137
    },
    {
        "content": "<p>it would be neat if it could also include some positional information like the call instruction byte offset in the function (if known) for each frame... this would make it adequate for the purposes of generating stack traces for Java exceptions</p>",
        "id": 397511100,
        "sender_full_name": "David Lloyd",
        "timestamp": 1697723727
    },
    {
        "content": "<p>yeah, reflecting on this: we really want to return a <code>list&lt;frame&gt;</code> where <code>frame</code> contains module name/index, function name/index, potentially that bytecode offset, etc.</p>",
        "id": 397538515,
        "sender_full_name": "Andrew Brown",
        "timestamp": 1697732334
    },
    {
        "content": "<p>It would be useful to have such a capability both outside and inside browsers</p>",
        "id": 397553303,
        "sender_full_name": "Zalim Bashorov (Kotlin, JetBrains)",
        "timestamp": 1697738700
    },
    {
        "content": "<p>I, basically, thought about having two primitives </p>\n<ul>\n<li>get_stacktrace -- which returns an array of id's  </li>\n<li>get_function_name -- which returns an array of bytes with string encoded utf8</li>\n</ul>",
        "id": 397554688,
        "sender_full_name": "Zalim Bashorov (Kotlin, JetBrains)",
        "timestamp": 1697739312
    },
    {
        "content": "<p>But yeah, for completeness, we need a module name and offset.</p>",
        "id": 397554704,
        "sender_full_name": "Zalim Bashorov (Kotlin, JetBrains)",
        "timestamp": 1697739320
    },
    {
        "content": "<p>An ability to get function names by id, could be useful in some other cases, e.g. help us avoid duplicating this information in binaries for limited(!) reflection capabilities.</p>",
        "id": 397554737,
        "sender_full_name": "Zalim Bashorov (Kotlin, JetBrains)",
        "timestamp": 1697739340
    },
    {
        "content": "<p>ideally it would have all the same info that is in a core dumps stack trace: <a href=\"https://github.com/WebAssembly/tool-conventions/blob/main/Coredump.md#threads-and-stack-frames\">https://github.com/WebAssembly/tool-conventions/blob/main/Coredump.md#threads-and-stack-frames</a></p>",
        "id": 397575747,
        "sender_full_name": "fitzgen (he/him)",
        "timestamp": 1697748730
    }
]