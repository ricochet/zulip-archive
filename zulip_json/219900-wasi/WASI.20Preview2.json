[
    {
        "content": "<p>I'm starting work on a project I'm calling WASI Preview2, which I hope will become a major update to WASI.</p>",
        "id": 283903223,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1653494409
    },
    {
        "content": "<p>The biggest change is to move from witx to wit, and use wit-bindgen, and to build up wasi-libc/wasi-sdk/rust wasi support on top of that.</p>",
        "id": 283903382,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1653494456
    },
    {
        "content": "<p>The meeting info for the WASI Preview2 presentation is <a href=\"https://github.com/WebAssembly/meetings/blob/main/wasi/2022/WASI-06-30.md\">here</a>.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/meetings/blob/main/wasi/2022/WASI-06-30.md\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/aa69f8a29ea298bee77693927faa3516886d75f6\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f336237323837353365316233346662616439623630336461333031366632663039353235626562636631383031346435656531366235326335373263653638352f576562417373656d626c792f6d656574696e6773)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/meetings/blob/main/wasi/2022/WASI-06-30.md\" title=\"meetings/WASI-06-30.md at main · WebAssembly/meetings\">meetings/WASI-06-30.md at main · WebAssembly/meetings</a></div><div class=\"message_embed_description\">WebAssembly meetings (VC or in-person), agendas, and notes - meetings/WASI-06-30.md at main · WebAssembly/meetings</div></div></div>",
        "id": 287398651,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1656115237
    },
    {
        "content": "<p>Will there be a ppt or slide deck?</p>",
        "id": 287619587,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1656355104
    },
    {
        "content": "<p>The slides aren't quite finished yet, but I definitely do plan to add the slides to the meeting notes.</p>",
        "id": 287619873,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1656355235
    },
    {
        "content": "<p>PR to add the slides to the meeting notes is here: <a href=\"https://github.com/WebAssembly/meetings/pull/1066\">https://github.com/WebAssembly/meetings/pull/1066</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/meetings/pull/1066\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/12e176b6d3be400923d0ac32b0f3ca0722ac8ea3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f383861333064613665373933336533393431663162373461656161623233313262313663313030663364366230323162326464633033303438633238393235662f576562417373656d626c792f6d656574696e67732f70756c6c2f31303636)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/meetings/pull/1066\" title=\"Add the slides for the WASI Preview2 presentation. by sunfishcode · Pull Request #1066 · WebAssembly/meetings\">Add the slides for the WASI Preview2 presentation. by sunfishcode · Pull Request #1066 · WebAssembly/meetings</a></div><div class=\"message_embed_description\">WebAssembly meetings (VC or in-person), agendas, and notes - Add the slides for the WASI Preview2 presentation. by sunfishcode · Pull Request #1066 · WebAssembly/meetings</div></div></div>",
        "id": 288064137,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1656611427
    },
    {
        "content": "<p>I think a readyness based stream api makes more sense from a determinism, safety and predictability based perspective. The api you suggested allows writing at any point between a read/write and a wait. This is less deterministic as you have to know the exact instruction at whicj the write happened to replay it. It makes it easier to accidentally deallocate a buffer which is still registered as read/write target and it makes it harder for someone trying to read the code to know if some data doesn't get overwritten by a read operation.</p>",
        "id": 288073186,
        "sender_full_name": "bjorn3",
        "timestamp": 1656615850
    },
    {
        "content": "<p>You're correct, the API presented there has the data arriving in the buffer at nondeterministic times. And the user has to keep it allocated and immobile while a read or write is in flight.</p>",
        "id": 288074396,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1656616501
    },
    {
        "content": "<p>My understanding is that the main idea here is that the low-level stream details here would be hidden in a source language's async runtime.</p>",
        "id": 288074677,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1656616638
    },
    {
        "content": "<p>I should mention that this stream design is part of the component model, and my presentation here is just showing what it would look like in the core-wasm ABI implemented by engines.</p>",
        "id": 288074925,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1656616771
    },
    {
        "content": "<p>How would for example tokio be able to abstract over it without forcing a copy?</p>",
        "id": 288075354,
        "sender_full_name": "bjorn3",
        "timestamp": 1656616990
    },
    {
        "content": "<p>I myself don't know the plan for that right now. But I do know that this design is being developed in close cooperation with people who have deep Rust async experience.</p>",
        "id": 288075750,
        "sender_full_name": "Dan Gohman",
        "timestamp": 1656617173
    }
]