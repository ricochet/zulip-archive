[
    {
        "content": "<p>I'm playing with StarlingMonkey and one thing that I can't figure out at the moment is how to export javascript functions as guest component exports. Let's say I have a .wit file like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">print</span><span class=\"o\">-</span><span class=\"n\">foo</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">func</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I can embed the .wit file into the component, but I'm not quite sure how tell StarlingMonkey to export a certain function as <code>print-foo</code>. Are there any examples somewhere that would show such a thing? Is the only way to add it as C++ (or maybe Rust?) code and compile into the binary?</p>",
        "id": 476227325,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1728595395
    },
    {
        "content": "<p>Ok, sorry, I somehow missed <code>host-apis</code> paragraph in the README <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> I'll try doing that!</p>",
        "id": 476228268,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1728595792
    },
    {
        "content": "<p>Ok, so I had a bit of time to play with that and the last piece of code I'm missing is how to get an exported function using SpiderMonkey's API and call it <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> I'm componentizing a JS file with sth like <code>export function foo() { }</code>. Now in <a href=\"https://github.com/drogus/StarlingMonkey/commit/4f8f2c056af1dac6b64ab1258e154105d1bf0bb2#diff-d9c7a78a435b8d4733e52165faa55e8d9dbbef81db5e8d37e4037bba368aed92R1224\">here</a> I have to get the function and call it and I'm not that familiar with SpiderMonkey APIs yet. I've been reading a bit of the source code of StarlingMonkey, but I couldn't find any place where exports are handled.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/drogus/StarlingMonkey/commit/4f8f2c056af1dac6b64ab1258e154105d1bf0bb2#diff-d9c7a78a435b8d4733e52165faa55e8d9dbbef81db5e8d37e4037bba368aed92R1224\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/971a35efacd289517ef9b86dfe3d07217fceea8d/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623637613734353365396461343333653434313736356134303634366561373135353634366432393866363765356537303430613831356636393038623561612f64726f6775732f537461726c696e674d6f6e6b65792f636f6d6d69742f34663866326330353661663164616336623634616231323538653135343130356431626630626232&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/drogus/StarlingMonkey/commit/4f8f2c056af1dac6b64ab1258e154105d1bf0bb2#diff-d9c7a78a435b8d4733e52165faa55e8d9dbbef81db5e8d37e4037bba368aed92R1224\" title=\"wip 路 drogus/StarlingMonkey@4f8f2c0\">wip 路 drogus/StarlingMonkey@4f8f2c0</a></div><div class=\"message_embed_description\">The StarlingMonkey JS runtime. Contribute to drogus/StarlingMonkey development by creating an account on GitHub.</div></div></div>",
        "id": 476256408,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1728609478
    },
    {
        "content": "<p>Ok, I figured out the general principle when I have a module:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"n\">JS</span><span class=\"p\">::</span><span class=\"n\">RootedObject</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">JS</span><span class=\"p\">::</span><span class=\"n\">GetModuleNamespace</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">));</span>\n<span class=\"w\">  </span><span class=\"n\">JS</span><span class=\"p\">::</span><span class=\"n\">RootedValue</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">JS_GetProperty</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"foo\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">val</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">RootedValue</span><span class=\"w\"> </span><span class=\"n\">rval</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"n\">JS_CallFunctionValue</span><span class=\"p\">(</span><span class=\"n\">cx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ENGINE</span><span class=\"p\">-&gt;</span><span class=\"nc\">global</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">,</span><span class=\"w\">  </span><span class=\"n\">HandleValueArray</span><span class=\"p\">::</span><span class=\"n\">empty</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">rval</span><span class=\"p\">);</span>\n</code></pre></div>\n<p>Now only to figure out how to get the module from where I get the host API call</p>",
        "id": 476341892,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1728637198
    },
    {
        "content": "<p>I figured out how to call the script in the context of the host_api.cpp file (for anyone interested it's <a href=\"https://github.com/drogus/StarlingMonkey/commit/6fae268eff5e9a3d296a473119a9bbb93df9e0ce#diff-d9c7a78a435b8d4733e52165faa55e8d9dbbef81db5e8d37e4037bba368aed92R1254-R1261\">here</a>), but my C++ memory is quite rusty as I haven't done any C++ in more than 15 years and the only way I found to have access to ENGINE in the <code>host_api.cpp</code> file was to change <code>static api::Engine *ENGINE</code> to <code>extern \"C\" api::Engine *ENGINE</code> in <code>js.cpp</code>. I'm pretty sure there's a better way, but not sure what would make it work without changing the project code <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/drogus/StarlingMonkey/commit/6fae268eff5e9a3d296a473119a9bbb93df9e0ce#diff-d9c7a78a435b8d4733e52165faa55e8d9dbbef81db5e8d37e4037bba368aed92R1254-R1261\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/adb21c818b0e0a948ef311cc95d6b1e960db35d4/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f663661316536333165643832613334633032363839386133623737643931643739316366313933376461303736666538366666326236623438343834366639392f64726f6775732f537461726c696e674d6f6e6b65792f636f6d6d69742f36666165323638656666356539613364323936613437333131396139626262393364663965306365&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/drogus/StarlingMonkey/commit/6fae268eff5e9a3d296a473119a9bbb93df9e0ce#diff-d9c7a78a435b8d4733e52165faa55e8d9dbbef81db5e8d37e4037bba368aed92R1254-R1261\" title=\"implement fetching config through get-config 路 drogus/StarlingMonkey@6fae268\">implement fetching config through get-config 路 drogus/StarlingMonkey@6fae268</a></div><div class=\"message_embed_description\">The StarlingMonkey JS runtime. Contribute to drogus/StarlingMonkey development by creating an account on GitHub.</div></div></div>",
        "id": 476379966,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1728650451
    },
    {
        "content": "<p>There is an \"install\" hook for builtins which gives the engine as an argument. Follow the builtin pattern via a CMake setup per <a href=\"https://github.com/bytecodealliance/StarlingMonkey?tab=readme-ov-file#using-starlingmonkey-as-a-cmake-sub-project\">https://github.com/bytecodealliance/StarlingMonkey?tab=readme-ov-file#using-starlingmonkey-as-a-cmake-sub-project</a>, eg in Fastly we do this - <a href=\"https://github.com/fastly/js-compute-runtime/blob/main/runtime/fastly/CMakeLists.txt\">https://github.com/fastly/js-compute-runtime/blob/main/runtime/fastly/CMakeLists.txt</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/StarlingMonkey?tab=readme-ov-file#using-starlingmonkey-as-a-cmake-sub-project\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b78bd15d36cf16257aac99e3ea296e8b905d45d0/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613133376466333461323936363238336631386332636630326434653036393738396262346133336663613734653834663430363964363261663462313539322f62797465636f6465616c6c69616e63652f537461726c696e674d6f6e6b6579&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/StarlingMonkey?tab=readme-ov-file#using-starlingmonkey-as-a-cmake-sub-project\" title=\"GitHub - bytecodealliance/StarlingMonkey: The StarlingMonkey JS runtime\">GitHub - bytecodealliance/StarlingMonkey: The StarlingMonkey JS runtime</a></div><div class=\"message_embed_description\">The StarlingMonkey JS runtime. Contribute to bytecodealliance/StarlingMonkey development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/fastly/js-compute-runtime/blob/main/runtime/fastly/CMakeLists.txt\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/43602dfe0eb43221b8190771798ded8dc6261ec8/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f326564393965383634333363366563303362343233363034303565336634663738376131663232636238313361316338653931646633346330616436376131622f666173746c792f6a732d636f6d707574652d72756e74696d65&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/fastly/js-compute-runtime/blob/main/runtime/fastly/CMakeLists.txt\" title=\"js-compute-runtime/runtime/fastly/CMakeLists.txt at main 路 fastly/js-compute-runtime\">js-compute-runtime/runtime/fastly/CMakeLists.txt at main 路 fastly/js-compute-runtime</a></div><div class=\"message_embed_description\">JavaScript SDK and runtime for building Fastly Compute applications - fastly/js-compute-runtime</div></div></div>",
        "id": 476434675,
        "sender_full_name": "Guy Bedford",
        "timestamp": 1728669336
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"553681\">@Guy Bedford</span> thanks for the link, I'll take a look!</p>",
        "id": 476445409,
        "sender_full_name": "Piotr Sarnacki",
        "timestamp": 1728674189
    }
]