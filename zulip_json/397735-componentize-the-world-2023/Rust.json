[
    {
        "content": "<p>Hi Rust folks! Creating a topic here for anyone to ask questions, ping Alex or I for help/questions, or otherwise want to chat!</p>",
        "id": 389917504,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694192170
    },
    {
        "content": "<p>Once anyone gets to the point that they want to kick the tires on publishing and consuming components from a registry, I'm happy to walk people through it and grant keys to packages on the preview registry instance.</p>",
        "id": 389917619,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694192224
    },
    {
        "content": "<p>Link to the exercises: <a href=\"https://alexcrichton.github.io/bacon-exercises/\">https://alexcrichton.github.io/bacon-exercises/</a></p>",
        "id": 389919771,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694193127
    },
    {
        "content": "<p>Link to cargo-component: <a href=\"https://github.com/bytecodealliance/cargo-component\">https://github.com/bytecodealliance/cargo-component</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/cfd7021eaa4908d4de928ffe052e2238416a3394\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353262633161303162633361613262653764356462393763373064396336623161353537373364636134613436363434653936623236666238633162653634352f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e74)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component\" title=\"GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.\">GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.</a></div><div class=\"message_embed_description\">A Cargo subcommand for creating WebAssembly components based on the component model proposal. - GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components bas...</div></div></div>",
        "id": 389919798,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694193140
    },
    {
        "content": "<p>Link to Wasmtime: <a href=\"https://github.com/bytecodealliance/wasmtime\">https://github.com/bytecodealliance/wasmtime</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasmtime\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/f0e1a5db4fa2b87083aff17b1ae8669d18bfe82d\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f353732396163393730663564656463653766643935613736366531613434313236373130323663333364356539653366646538326533653832366562396635352f62797465636f6465616c6c69616e63652f7761736d74696d65)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasmtime\" title=\"GitHub - bytecodealliance/wasmtime: A fast and secure runtime for WebAssembly\">GitHub - bytecodealliance/wasmtime: A fast and secure runtime for WebAssembly</a></div><div class=\"message_embed_description\">A fast and secure runtime for WebAssembly. Contribute to bytecodealliance/wasmtime development by creating an account on GitHub.</div></div></div>",
        "id": 389919840,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694193161
    },
    {
        "content": "<p>Link to wasm-tools: <a href=\"https://github.com/bytecodealliance/wasm-tools/\">https://github.com/bytecodealliance/wasm-tools/</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-tools/\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3f5b3441e8dadd650d5ed8169966660b735f4ac3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f393034663965343262613930393265303330376334343931393732643162633232376632626537333236643331323966353962343630393230636536353132662f62797465636f6465616c6c69616e63652f7761736d2d746f6f6c73)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-tools/\" title=\"GitHub - bytecodealliance/wasm-tools: Low level tooling for WebAssembly in Rust\">GitHub - bytecodealliance/wasm-tools: Low level tooling for WebAssembly in Rust</a></div><div class=\"message_embed_description\">Low level tooling for WebAssembly in Rust. Contribute to bytecodealliance/wasm-tools development by creating an account on GitHub.</div></div></div>",
        "id": 389919879,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694193179
    },
    {
        "content": "<p>Link to wit-bindgen <a href=\"https://github.com/bytecodealliance/wit-bindgen\">https://github.com/bytecodealliance/wit-bindgen</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wit-bindgen\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/3fe3be5948b81c2760e1b80647ca7cff71f067cf\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f366333616566626333333337363936663561643832376635383834643166646432346665373039633565313038656239623730396266653035326236323636362f62797465636f6465616c6c69616e63652f7769742d62696e6467656e)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wit-bindgen\" title=\"GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types\">GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types</a></div><div class=\"message_embed_description\">A language binding generator for WebAssembly interface types - GitHub - bytecodealliance/wit-bindgen: A language binding generator for WebAssembly interface types</div></div></div>",
        "id": 389919906,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694193190
    },
    {
        "content": "<p>For those of you installing Wasmtime, please install with the <code>--feature component-model</code> flag so that component model support is enabled.</p>",
        "id": 389922111,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694194166
    },
    {
        "content": "<p>FYI: <code>rust-analyzer</code> seems to not be working properly right now for you VS Code users; changes to your WIT files that affect your bindings aren't being reflected in the parse tree. a workaround is to use the <code>rust-analyzer: Restart Server</code> command after changing your WIT, which will force a reparse. I'm looking into the issue.</p>",
        "id": 389927937,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694196828
    },
    {
        "content": "<p>Also: <span class=\"user-mention\" data-user-id=\"556206\">@Timmy Silesmo</span> put together a really cool tool called <a href=\"https://wa2.dev\">https://wa2.dev</a>, which you can browse to any component you've built to inspect what's inside of it.</p>",
        "id": 389932793,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694199012
    },
    {
        "content": "<p>For composition, you may also play around with a simple GUI we threw together called <a href=\"https://wasmbuilder.app\">https://wasmbuilder.app</a></p>",
        "id": 389932863,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694199057
    },
    {
        "content": "<p>I should also mention that sample Rust answers can be found at <a href=\"https://github.com/alexcrichton/bacon-exercises/tree/main/answers/rust\">https://github.com/alexcrichton/bacon-exercises/tree/main/answers/rust</a> if anyone would like to poke around there</p>",
        "id": 389948625,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1694206347
    },
    {
        "content": "<p>I feel like it might not be the best to interrupt the whole room to present (given there's a lot going on and separate), so if any is interested in seeing a demo of registry integration in <code>cargo-component</code>, come find me at the front and happy to run through things</p>",
        "id": 389952314,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694208413
    },
    {
        "content": "<p>A huge thank you to everyone that participated in kicking the tires of the component model, cargo component, the composition tooling (which will soon be updated to a registry-aware tool with a well defined composition language), and everything else!</p>\n<p>Your feedback has been invaluable and we hope today was educational, social, and fun (when the tools worked...).</p>\n<p>Another big thanks to Alex for producing the tutorial/CTF content too!</p>",
        "id": 389964648,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694217077
    },
    {
        "content": "<p>We'll hopefully see y'all at the happy hour</p>",
        "id": 389964765,
        "sender_full_name": "Peter Huene",
        "timestamp": 1694217156
    }
]