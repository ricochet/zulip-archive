[
    {
        "content": "<p>Hey cats, I'm noting that we have <code>cargo component new</code> options as follows:</p>",
        "id": 468747302,
        "sender_full_name": "Ralph",
        "timestamp": 1725877410
    },
    {
        "content": "<ul>\n<li><code>--proxy</code> which uses the internal proxy adapter, which is fairly clear</li>\n<li><code>--registry</code> which <strong>seems</strong> obvious but then there's no help on what \"magic string\" works</li>\n<li><code>--target</code> which <strong>seems</strong> obvious but then, again, there's no help on the magic string</li>\n</ul>",
        "id": 468747600,
        "sender_full_name": "Ralph",
        "timestamp": 1725877486
    },
    {
        "content": "<p>If I wanted to build a wasi:http/proxy component by targeting the \"proxy\" world in <code>ghcr.io/webassembly/wasi/http:0.2.0</code> what magic mix of strings would I use to create an instantly building version (absent the <a href=\"http://lib.rs\">lib.rs</a> code that implements it)?</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://lib.rs\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a025d1dfcfcdb4f622e82e9f608412cba3162ba3/68747470733a2f2f6c69622e72732f6372617465732d6c6f676f2e706e67&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://lib.rs\" title=\"Lib.rs — home for Rust crates // Lib.rs\">Lib.rs — home for Rust crates // Lib.rs</a></div><div class=\"message_embed_description\">List of Rust libraries and applications. An unofficial experimental opinionated alternative to crates.io</div></div></div>",
        "id": 468748118,
        "sender_full_name": "Ralph",
        "timestamp": 1725877628
    },
    {
        "content": "<p>I recall from a previous thread that this didn't work yet, and I'm hoping it does now. But if it doesn't, that's OK!!!</p>",
        "id": 468748262,
        "sender_full_name": "Ralph",
        "timestamp": 1725877655
    },
    {
        "content": "<p>By default, the new underlying client stuff will default to the bytecodealliance registry, which is just a mirror of the webassembly one (trying to fix an issue so it points at <a href=\"http://wasi.dev\">wasi.dev</a>, which redirects to <a href=\"http://ghcr.io/webassembly\">ghcr.io/webassembly</a>). So you don't need to specify a <code>registry</code>. In general, if you want to point to any custom registries, I'd recommend setting it as part of the wkg config so all tooling can use it. Documentation for that config file can be found here: <a href=\"https://github.com/bytecodealliance/wasm-pkg-tools#configuration\">https://github.com/bytecodealliance/wasm-pkg-tools#configuration</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://wasi.dev\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/a77cb0033d0be81de32b5ce14de4493c66910aa4/68747470733a2f2f776173692e6465762f696d672f646f63757361757275732d736f6369616c2d636172642e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://wasi.dev\" title=\"Introduction | WASI.dev\">Introduction | WASI.dev</a></div><div class=\"message_embed_description\">The WebAssembly System Interface (WASI) is a group of standard API specifications for software compiled to the W3C WebAssembly (Wasm) standard. WASI is designed to provide a secure standard interface for applications that can be compiled to Wasm from any language, and that may run anywhere&mdash;from browsers to clouds to embedded devices.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-pkg-tools#configuration\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6cd40d2ba3ccad102fee8e20541faee30efd14ab/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333661313238336463393034333365313538333564336264393136633539336362346235386433396139643262626638643437323964366266636436316530382f62797465636f6465616c6c69616e63652f7761736d2d706b672d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-pkg-tools#configuration\" title=\"GitHub - bytecodealliance/wasm-pkg-tools\">GitHub - bytecodealliance/wasm-pkg-tools</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/wasm-pkg-tools development by creating an account on GitHub.</div></div></div>",
        "id": 468863617,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1725901495
    },
    {
        "content": "<p>are the magic strings the same for both paths? command line and config?</p>",
        "id": 468863822,
        "sender_full_name": "Ralph",
        "timestamp": 1725901538
    },
    {
        "content": "<p>You don't need to set any strings in the case you're describing.</p>",
        "id": 468863976,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1725901562
    },
    {
        "content": "<p>let me rephrase: if I want to use command line args to point at a specific registry, are the magic strings used identical to those in the config docs?</p>",
        "id": 468867335,
        "sender_full_name": "Ralph",
        "timestamp": 1725902429
    },
    {
        "content": "<p>caveat escaping, of course....</p>",
        "id": 468867375,
        "sender_full_name": "Ralph",
        "timestamp": 1725902439
    },
    {
        "content": "<p>[registry.\"acme.registry.com\".oci]</p>",
        "id": 468867849,
        "sender_full_name": "Ralph",
        "timestamp": 1725902572
    },
    {
        "content": "<p>Yeah, generally the registry is just something like <code>myreg.registry.io</code> that maps to the name of registry config. Yep, what you put exactly</p>",
        "id": 468867878,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1725902581
    },
    {
        "content": "<p>If it doesn't need auth, you don't even need that</p>",
        "id": 468867917,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1725902594
    },
    {
        "content": "<p>ignoring the .oci or .warg part?</p>",
        "id": 468867920,
        "sender_full_name": "Ralph",
        "timestamp": 1725902594
    },
    {
        "content": "<p>I'll try it all out tomorrow morning, so no biggie, just wanna understand where it is.</p>",
        "id": 468868002,
        "sender_full_name": "Ralph",
        "timestamp": 1725902624
    },
    {
        "content": "<p>I love the config file, BTW</p>",
        "id": 468868025,
        "sender_full_name": "Ralph",
        "timestamp": 1725902632
    },
    {
        "content": "<p>So let's say you have a registry with the prefix of <code>acme</code>, then the minimum you'd need for the config is an entry under <code>namespace_registries</code>:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[namespace_registries]</span>\n<span class=\"n\">acme</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s2\">\"acme.registries.io\"</span>\n</code></pre></div>\n<p>If you need auth then you'd specify the section you mentioned above</p>",
        "id": 468868293,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1725902710
    },
    {
        "content": "<p>Note that it isn't <em>just</em> a magic string. The default registry config (which can be overridden by the config file) will be fetched from <code>https://&lt;registry&gt;/.well-known/wasm-pkg/registry.json</code></p>",
        "id": 468868370,
        "sender_full_name": "Lann Martin",
        "timestamp": 1725902733
    },
    {
        "content": "<p>got it; read the comments incorrectly, thanks!</p>",
        "id": 468868386,
        "sender_full_name": "Ralph",
        "timestamp": 1725902738
    },
    {
        "content": "<p>e.g. <a href=\"https://bytecodealliance.org/.well-known/wasm-pkg/registry.json\">https://bytecodealliance.org/.well-known/wasm-pkg/registry.json</a></p>",
        "id": 468868415,
        "sender_full_name": "Lann Martin",
        "timestamp": 1725902748
    },
    {
        "content": "<p>Specification for that is found here: <a href=\"https://github.com/bytecodealliance/wasm-pkg-tools#well-known-metadata\">https://github.com/bytecodealliance/wasm-pkg-tools#well-known-metadata</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/wasm-pkg-tools#well-known-metadata\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/6cd40d2ba3ccad102fee8e20541faee30efd14ab/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f333661313238336463393034333365313538333564336264393136633539336362346235386433396139643262626638643437323964366266636436316530382f62797465636f6465616c6c69616e63652f7761736d2d706b672d746f6f6c73&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/wasm-pkg-tools#well-known-metadata\" title=\"GitHub - bytecodealliance/wasm-pkg-tools\">GitHub - bytecodealliance/wasm-pkg-tools</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/wasm-pkg-tools development by creating an account on GitHub.</div></div></div>",
        "id": 468868552,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1725902780
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"480579\">Lann Martin</span> <a href=\"#narrow/stream/407292-cargo-component/topic/cargo.20component.20new.20using.20a.20direct.20world.20reference.20from.20OCI/near/468868370\">said</a>:</p>\n<blockquote>\n<p>Note that it isn't <em>just</em> a magic string. The default registry config (which can be overridden by the config file) will be fetched from <code>https://&lt;registry&gt;/.well-known/wasm-pkg/registry.json</code></p>\n</blockquote>\n<p>forgive me, by \"magic string\" i merely mean that \"arbitrary but decided form that will actually work but isn't explicitly mentioned anywhere but the code\"</p>",
        "id": 468868563,
        "sender_full_name": "Ralph",
        "timestamp": 1725902784
    },
    {
        "content": "<p>:-)</p>",
        "id": 468868572,
        "sender_full_name": "Ralph",
        "timestamp": 1725902785
    },
    {
        "content": "<p>that it is IN the code, I get</p>",
        "id": 468868592,
        "sender_full_name": "Ralph",
        "timestamp": 1725902794
    },
    {
        "content": "<p>I tried to document as best as I could, but I definitely have been staring at it too long and could have missed something obvious. So let me know if anything there is confusing</p>",
        "id": 468868664,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1725902814
    },
    {
        "content": "<p>Yeah just want to clarify that you shouldn't use some arbitrary string, and in particular you definitely shouldn't use <code>competitor.com</code> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 468868707,
        "sender_full_name": "Lann Martin",
        "timestamp": 1725902828
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"280224\">Taylor Thomas</span> <a href=\"#narrow/stream/407292-cargo-component/topic/cargo.20component.20new.20using.20a.20direct.20world.20reference.20from.20OCI/near/468868664\">said</a>:</p>\n<blockquote>\n<p>I tried to document as best as I could, but I definitely have been staring at it too long and could have missed something obvious. So let me know if anything there is confusing</p>\n</blockquote>\n<p>nol no, it's there -- just comments sitting on top of code values after a few graphs get hard to parse. I'll submit a pr that breaks it up a bit, but I do love the config approach.</p>",
        "id": 468868812,
        "sender_full_name": "Ralph",
        "timestamp": 1725902858
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"480579\">Lann Martin</span> <a href=\"#narrow/stream/407292-cargo-component/topic/cargo.20component.20new.20using.20a.20direct.20world.20reference.20from.20OCI/near/468868707\">said</a>:</p>\n<blockquote>\n<p>Yeah just want to clarify that you shouldn't use some arbitrary string, and in particular you definitely shouldn't use <code>competitor.com</code> <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>\n<p>note to self: <em>definitely</em> using <a href=\"http://competitor.com\">competitor.com</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"http://competitor.com\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d9d1a25b9f6bacacfb0b488d8755879b7b06ee4b/68747470733a2f2f636f6d70657469746f722e636f6d2f77702d636f6e74656e742f75706c6f6164732f323032302f31312f636f6d70657469746f722d6c6f676f2d6c672d63726f702e6a7067&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"http://competitor.com\" title=\"Articles - Competitor\">Articles - Competitor</a></div><div class=\"message_embed_description\">imcompetitor2023-09-06T14:15:00+00:00September 6th, 2023|</div></div></div>",
        "id": 468868883,
        "sender_full_name": "Ralph",
        "timestamp": 1725902877
    },
    {
        "content": "<p>new <code>wkg</code> is the bomb. Just wanna say, pushing and pulling to ACR using full auth is working great.</p>",
        "id": 469470136,
        "sender_full_name": "Ralph",
        "timestamp": 1726075480
    },
    {
        "content": "<p>thank you everyone; I hope to tout the work more!!! HT: <span class=\"user-mention\" data-user-id=\"280224\">@Taylor Thomas</span> for taking a moment yesterday</p>",
        "id": 469470177,
        "sender_full_name": "Ralph",
        "timestamp": 1726075500
    }
]