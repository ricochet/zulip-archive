[
    {
        "content": "<p>Can we use smart pointers like <code>Arc</code> to share ownership between components?</p>\n<p>If I understand correctly, WIT passes types by value by default and has <code>borrow</code> to pass a reference.</p>\n<p>How can we have a data type that’s owned by multiple components and dropped when the last one drops it?</p>",
        "id": 404260581,
        "sender_full_name": "Michael Fuller",
        "timestamp": 1701006907
    },
    {
        "content": "<p>You can give out multiple <code>own</code> handles to a resource that's implemented in terms of an <code>Arc</code> (or, in Rust terms, just an <code>Rc</code>, since we don't have multithreading yet), which has the same effect.  For example, with <code>wit-bindgen</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">ThingThatIWantToShare</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"n\">Rc</span><span class=\"o\">&lt;</span><span class=\"n\">ThingThatIWantToShare</span><span class=\"o\">&gt;</span><span class=\"p\">);</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">foo</span>::<span class=\"n\">bar</span>::<span class=\"n\">baz</span>::<span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Foo</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 404269090,
        "sender_full_name": "Joel Dice",
        "timestamp": 1701013453
    },
    {
        "content": "<p>Great that it just works. I’m curious how does this work under the hood? Is the memory containing the A/Rc value shared across components? Doesn’t every component have its own isolated memory?</p>",
        "id": 405340531,
        "sender_full_name": "Michael Fuller",
        "timestamp": 1701429534
    },
    {
        "content": "<p>the memory backing a resource is still private to one component, or the host. The way this works is that a resource handle comes with a set of functions for operating on it. These functions run inside the component that created the resource, so they can access the backing memory</p>",
        "id": 405365524,
        "sender_full_name": "Till Schneidereit",
        "timestamp": 1701437918
    }
]