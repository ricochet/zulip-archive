[
    {
        "content": "<p>Everything was fine until I recently upgraded <code>cargo-component-bindings</code> to <code>\"0.6.0</code>. Now, I get an error message saying</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>error:<span class=\"w\"> </span>bindings<span class=\"w\"> </span>file<span class=\"w\"> </span><span class=\"sb\">`</span>/target/bindings/myproject/bindings.rs<span class=\"sb\">`</span><span class=\"w\"> </span>does<span class=\"w\"> </span>not<span class=\"w\"> </span>exist\n</code></pre></div>\n<p>The file <a href=\"http://bindings.rs\">bindings.rs</a> is generated, indeed, but it is placed to <code>myproject/src</code>. </p>\n<p>The macro <code>cargo_component_bindings::generate!();</code> does it allow to name a target folder?</p>",
        "id": 471197862,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1726647416
    },
    {
        "content": "<p><strong>Update:</strong></p>\n<p>My CI toolchain does not have a problem to build the same project. <br>\nIt installs <code>cargo install cargo-component@0.5.0</code> prior to the build where I have <code>cargo-component v0.16.0</code> locally.</p>\n<p>It seems that at a certain point, the output directory which seems to be determined by <code>cargo-component</code> changed. What I still do not understand is why the system still searches <strong>bindings.rs</strong> under the original path.</p>",
        "id": 471229008,
        "sender_full_name": "Christoph Brewing",
        "timestamp": 1726656792
    }
]