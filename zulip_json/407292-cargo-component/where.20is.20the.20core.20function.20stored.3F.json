[
    {
        "content": "<p>Hi, I'm working on component model on WasmEdge. I notice in the definition section, there is a core func <code>&lt;id&gt;?</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">canon</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">typeidx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">id</span><span class=\"o\">&gt;?</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>but in binary section, there is only a type index</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"mh\">0x02</span><span class=\"w\"> </span><span class=\"n\">rt</span><span class=\"p\">:</span><span class=\"o\">&lt;</span><span class=\"n\">typeidx</span><span class=\"o\">&gt;</span><span class=\"w\">                                   </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">canon</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"w\"> </span><span class=\"n\">rt</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>where can I found the core function when loading the binary? Also for any similar cases.</p>",
        "id": 450665102,
        "sender_full_name": "林子篆",
        "timestamp": 1720691364
    },
    {
        "content": "<p>The <code>(core func &lt;id&gt;?)</code> is indicating that a core function is created with the <code>canon resource.new</code> intrinsic, and the name of that function is <code>&lt;id&gt;</code> (it's optional), those parts aren't in the binary format</p>",
        "id": 450721122,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1720707235
    },
    {
        "content": "<p>I see, so does runtime must know how to provide <code>new</code>/<code>drop</code> etc functions for any type? Since some of types are hard to imagine a common zero constructor, e.g. function.</p>",
        "id": 451419864,
        "sender_full_name": "林子篆",
        "timestamp": 1721024792
    },
    {
        "content": "<p><code>&lt;typeidx&gt;</code> in this case must be a resource, but yes runtimes must be able to create a new instance of this resource type. Note though that this intrinsic is only valid of <code>&lt;typeidx&gt;</code> was a resource defined in the current component, so it's probably not quite as free-form as you're thinking</p>",
        "id": 451514473,
        "sender_full_name": "Alex Crichton",
        "timestamp": 1721053873
    },
    {
        "content": "<p>I see, thanks you!</p>",
        "id": 451537931,
        "sender_full_name": "林子篆",
        "timestamp": 1721060359
    }
]