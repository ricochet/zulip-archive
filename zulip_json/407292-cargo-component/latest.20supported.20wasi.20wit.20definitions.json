[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span> Sorry for the lazy ask here, but how can I tell which versions of the wasi wit definitions are being used by <code>cargo component</code>? Trying to figure out an issue where one of my components (that has transitive dep on streams that is being included by <code>cargo component build</code>) seems to have a different version of streams than what is currently in <a href=\"https://github.com/WebAssembly/wasi-io/blob/main/wit/streams.wit\">https://github.com/WebAssembly/wasi-io/blob/main/wit/streams.wit</a></p>",
        "id": 393993482,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1696016237
    },
    {
        "content": "<p><code>cargo component --version</code> will output the wasi adapter commit it's using, which corresponds to a commit in the wasmtime repo where the adapters are built out of</p>",
        "id": 393993653,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696016310
    },
    {
        "content": "<p>there's also now a feature in <code>cargo-component</code> where you can point at the WASI adapter to use if you want to override the built-in</p>",
        "id": 393993699,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696016340
    },
    {
        "content": "<p>by setting <code>package.metadata.component.adapter</code> in <code>Cargo.toml</code> to point at the adapter module</p>",
        "id": 393993740,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696016363
    },
    {
        "content": "<p>The wits for the adapter are here: <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasi/wit\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/wasi/wit</a></p>",
        "id": 393994243,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696016640
    },
    {
        "content": "<p>Oh that is a handy feature. Thank you</p>",
        "id": 393996974,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1696017910
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"280224\">@Taylor Thomas</span> were you running into the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">streams</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">drop</span><span class=\"o\">-</span><span class=\"n\">input</span><span class=\"o\">-</span><span class=\"n\">stream</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">2</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">nothing</span>\n</code></pre></div>",
        "id": 395091354,
        "sender_full_name": "David Justice",
        "timestamp": 1696527742
    },
    {
        "content": "<p>I honestly can't remember</p>",
        "id": 395091422,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1696527776
    },
    {
        "content": "<p>I don't think that was it</p>",
        "id": 395091444,
        "sender_full_name": "Taylor Thomas",
        "timestamp": 1696527785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"474281\">@David Justice</span> what's the output of <code>cargo component -V</code>?</p>",
        "id": 395116118,
        "sender_full_name": "Brian",
        "timestamp": 1696538657
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">V</span>\n<span class=\"n\">cargo</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"mf\">0.1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">465</span><span class=\"n\">baa9</span><span class=\"w\"> </span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">09</span><span class=\"o\">-</span><span class=\"mi\">27</span><span class=\"w\"> </span><span class=\"n\">wasi</span>:<span class=\"nc\">aec4b25</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 395118890,
        "sender_full_name": "David Justice",
        "timestamp": 1696539942
    },
    {
        "content": "<p>I could be totally wrong here but the version of the adapter <code>aec4b25</code> (from that output) i think is the commit in wasmtime you need to checkout</p>",
        "id": 395126688,
        "sender_full_name": "Brian",
        "timestamp": 1696544231
    },
    {
        "content": "<p>Worth a shot.</p>",
        "id": 395126700,
        "sender_full_name": "Brian",
        "timestamp": 1696544238
    },
    {
        "content": "<p>Alternatively cargo component (as peter mentions above) has an adapter field in the <code>Cargo.toml</code> that should allow you to set the version of the adapter to use i believe; I havent personally done this yet so im not 100% sure how to use it.</p>",
        "id": 395126917,
        "sender_full_name": "Brian",
        "timestamp": 1696544389
    },
    {
        "content": "<p>Yeah this seems to work: </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">git</span><span class=\"w\"> </span><span class=\"n\">checkout</span><span class=\"w\"> </span><span class=\"n\">aec4b25</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">project</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">project</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>",
        "id": 395128829,
        "sender_full_name": "Brian",
        "timestamp": 1696545717
    },
    {
        "content": "<p>I wasn't entirely clear how the adapter config was to be used. So I did the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">.</span><span class=\"n\">metadata</span><span class=\"p\">.</span><span class=\"n\">component</span><span class=\"p\">]</span>\n<span class=\"n\">adapter</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"../../../wasi/wit/main.wit\"</span><span class=\"w\">   </span>#<span class=\"w\"> </span><span class=\"n\">points</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wit</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">local</span><span class=\"w\"> </span><span class=\"n\">repo</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">component</span>\n</code></pre></div>\n<p>The component will compile, but fails after creating the component via:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">decoding</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">module</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">magic</span><span class=\"w\"> </span><span class=\"n\">header</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">detected</span>: <span class=\"nc\">bad</span><span class=\"w\"> </span><span class=\"n\">magic</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x0</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 395280570,
        "sender_full_name": "David Justice",
        "timestamp": 1696605344
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"474281\">@David Justice</span> Here's the <a href=\"https://github.com/bytecodealliance/cargo-component/pull/142\">PR</a> adding the <code>adapter</code> setting. TL;DR it takes a path to the WASI module adapter to use. So i suppose if you built the adapter yourself using wasmtime head you could pass that to <code>cargo-component</code> via the adapter setting to enable running your command on wasmtime head <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> . Have never done this myself as i usually use the prebuilt adapters from the wasmtime release page or the builtin one from cargo-component.</p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/pull/142\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/7baef6a5ac08daab406f4da7c9fb9efc355e6b82\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f363564363637346533663662343731366162636532363636643064346430376463383764373133656638393130663030346164353931306630373130346531392f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f70756c6c2f313432)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/pull/142\" title=\"Add an `adapter` setting to `Cargo.toml`. by peterhuene · Pull Request #142 · bytecodealliance/cargo-component\">Add an `adapter` setting to `Cargo.toml`. by peterhuene · Pull Request #142 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">This PR adds a package.metadata.component.adapter field to Cargo.toml which is the path to the WASI module adapter to use.\nIf present, the specified file is used to adapt WASI preview1 to preview2....</div></div></div>",
        "id": 395295741,
        "sender_full_name": "Brian",
        "timestamp": 1696610281
    },
    {
        "content": "<p>I should definitely improve the error message, though. It is expecting a core module and not a wit file</p>",
        "id": 395297162,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696610917
    },
    {
        "content": "<p>It's pretty easy to build the adapter module out of the Wasmtime repo</p>",
        "id": 395297262,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696610959
    },
    {
        "content": "<p>Give me a sec to get to a computer and I'll paste the instructions</p>",
        "id": 395297313,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696610979
    },
    {
        "content": "<p>I see! That makes so much more sense. I'll give it a go and post back. Thank you, <span class=\"user-mention\" data-user-id=\"253989\">@Peter Huene</span></p>",
        "id": 395297701,
        "sender_full_name": "David Justice",
        "timestamp": 1696611146
    },
    {
        "content": "<p>Here's the instructions for building the adapter out of the Wasmtime repo:</p>\n<p><code>git checkout &lt;rev&gt;</code></p>\n<p><code>cargo build -p wasi-preview1-component-adapter --target wasm32-unknown-unknown --release</code></p>\n<p><code>cp wasm32-unknown-unknown/release/wasi_snapshot_preview1.wasm &lt;path-to-component-project&gt;</code></p>\n<p>and then edit the component project’s Cargo.toml with <code>adapter = \"wasi_snapshot_preview1.wasm\"</code> under <code>[package.metadata.component]</code></p>",
        "id": 395298064,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696611305
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 395298342,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696611416
    },
    {
        "content": "<p>I'm going to update <code>cargo-component</code>'s README to include this information</p>",
        "id": 395303567,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696613807
    },
    {
        "content": "<p>the not so great error message \"decoding item in module\" is coming from wasm-tools, but at least i can adorn it with some additional context from <code>cargo-component</code></p>",
        "id": 395304810,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696614380
    },
    {
        "content": "<p><a href=\"https://github.com/bytecodealliance/cargo-component/pull/151\">https://github.com/bytecodealliance/cargo-component/pull/151</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component/pull/151\" style=\"background-image: url(https\\:\\/\\/uploads\\.zulipusercontent\\.net\\/c587e8702e3f344b526c25eb9045132f9bb521c3\\/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636337323466633666626434353930353530633439316635313635326535393966363535386530373037343737656364636433386464363831616166383732372f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e742f70756c6c2f313531)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component/pull/151\" title=\"Improve WASI adapter support. by peterhuene · Pull Request #151 · bytecodealliance/cargo-component\">Improve WASI adapter support. by peterhuene · Pull Request #151 · bytecodealliance/cargo-component</a></div><div class=\"message_embed_description\">This fixes two things:\n\n\nThe error message when the adapter config setting point at something that is not a WebAssembly module.\n\n\nThe README section about WASI support; it now includes information ...</div></div></div>",
        "id": 395306319,
        "sender_full_name": "Peter Huene",
        "timestamp": 1696615118
    }
]