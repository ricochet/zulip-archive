[
    {
        "content": "<p>I'm curious what the goals for C/C++ documentation and tooling are expected to be like over time.</p>\n<p>To put it in user story parlance: As a passable, maybe even okay, high-level language developer (JS, C# .NET, Java, python, etc), I'm interested in leveraging the component model to bring C/C++ libraries and even runtimes (I have two interpreted runtimes I didn't make, but I want to bring), into the component model ecosystem.</p>\n<p>I'm \"okay\" with C/C++ as languages but the tooling and ecosystem around them much less so. I've been very successful using emscripten for bringing C/C++ to browsers, but I'd like to look at component model for both out of browser and maybe even browser as well. A very large part of why I have been able to be successful with emscripten is the level of documentation: <a href=\"https://emscripten.org/index.html\">https://emscripten.org/index.html</a></p>\n<p>I think having that level of documentation around the C/C++ ecosystem would help a lot. I'm curious what the plans are if any:</p>\n<ul>\n<li>Would bytecode alliance maintain that resource for C/C++ dev?</li>\n<li>Has bytecode alliance considered collaborating with the emscripten folks? They have a lot of ecosystem advantage (they ship emsdk in docker containers, vcpkg, have cmake scripts, conan, etc) emscripten creates a full SDK (where-as with wasi-sdk you still need additional tooling not included wit-bindgen, wasmtools, wasmtime). Having the toolchains shipped in emsdk would make a more comprehensive workflow.</li>\n<li>Am I completely off base and there are resources I'm not aware of?</li>\n<li>Is this (comprehensive docs and complete sdk for C/C++) outside of the goals of the bytecode alliance?</li>\n</ul>",
        "id": 463038989,
        "sender_full_name": "Milan",
        "timestamp": 1723924084
    },
    {
        "content": "<p>In our community we have several folks working towards the same use-case as you described. It would be extremely beneficial to have improved doc, tools, and additional resources to ease folks into a componentized ecosystem with C/C++. I understand from some of them that C++ folks that they'd like C++ specific bindings and docs to make things more ergonomic.</p>\n<p>We've definitely talked to the emscripten folks but their focus is largely for the web target. I think we can find ways to complement each other. For example, I wonder if jco's wasip2 shims could be shared between the two projects.</p>\n<p>This is absolutely within the goals of the BA.</p>",
        "id": 463444375,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1724083242
    },
    {
        "content": "<blockquote>\n<p>In our community we have several folks working towards the same use-case as you described.</p>\n</blockquote>\n<p>Do you know where that is being put together? So far the only component-model associated C/C++ docs I can find are the top-level README of wasi-sdk and an unmerged component-model docs PR:</p>\n<ul>\n<li><a href=\"https://github.com/WebAssembly/wasi-sdk\">https://github.com/WebAssembly/wasi-sdk</a></li>\n<li><a href=\"https://github.com/bytecodealliance/component-docs/pull/66\">https://github.com/bytecodealliance/component-docs/pull/66</a></li>\n</ul>\n<p>Neither of which seem like the correct place for docs of the scope described above?</p>\n<ul>\n<li>i.e. wasi-sdk does not seem to aim to be a complete toolkit for C/C++ dev. It's a subset of all the tooling you need to be aware of for a successful workflow (wit-bindgen, wasmtools, wasmtime)</li>\n<li><a href=\"http://component-model.bytecodealliance.org\">component-model.bytecodealliance.org</a> seems to be just getting started material and references to external docs, seems like it may not be the intended place for robust / complete docs for specific languages.</li>\n</ul>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/WebAssembly/wasi-sdk\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/104be8dec00a6b2edcd53e7908f691e624e125cb/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373134333966613536633261373132626565353830613132613166363066356534303836353163373730666466343165616332366632643761663061386234652f576562417373656d626c792f776173692d73646b&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/WebAssembly/wasi-sdk\" title=\"GitHub - WebAssembly/wasi-sdk: WASI-enabled WebAssembly C/C++ toolchain\">GitHub - WebAssembly/wasi-sdk: WASI-enabled WebAssembly C/C++ toolchain</a></div><div class=\"message_embed_description\">WASI-enabled WebAssembly C/C++ toolchain. Contribute to WebAssembly/wasi-sdk development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/component-docs/pull/66\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d81f2915cdbf4d70af2b968a24e7bb95bd68b3c6/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f386534346635656130383336613635313231303636626664643531623737356138376237323139613537393137643662306561383164643336353664343062362f62797465636f6465616c6c69616e63652f636f6d706f6e656e742d646f63732f70756c6c2f3636&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/component-docs/pull/66\" title=\"Add initial documentation for C tooling by seanisom · Pull Request #66 · bytecodealliance/component-docs\">Add initial documentation for C tooling by seanisom · Pull Request #66 · bytecodealliance/component-docs</a></div><div class=\"message_embed_description\">Fixes #38\nCreating as a draft for now as I would like to see #44 merged first as that will change the structure of /language-support - I will update the table of contents to match that once I can r...</div></div></div>",
        "id": 463447135,
        "sender_full_name": "Milan",
        "timestamp": 1724083766
    },
    {
        "content": "<p>I think a project like <code>componentize-cpp</code> would be a good place to land those types of materials.</p>\n<p>For example, we have the following projects today:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/componentize-py\">componentize-py</a> for python</li>\n<li><a href=\"https://github.com/bytecodealliance/componentize-dotnet\">componentize-dotnet</a> for C# and .NET</li>\n<li><a href=\"https://github.com/bytecodealliance/jco\">JCO</a> for JS</li>\n<li><a href=\"https://github.com/bytecodealliance/cargo-component\">cargo-component</a> for Rust</li>\n</ul>\n<p>It would help to form a subgroup of SIG Guest Languages for C++ to organize this work.</p>\n<p>The process to create a new BA project is to essentially create a GitHub issue with this template: <a href=\"https://github.com/bytecodealliance/governance/blob/main/templates/projects/proposal.md\">https://github.com/bytecodealliance/governance/blob/main/templates/projects/proposal.md</a></p>\n<p>We plan to update the template soon to incorporate hosted vs core project requirements. You may use this proposal as an example of the expanded template <a href=\"https://github.com/bytecodealliance/governance/issues/98\">https://github.com/bytecodealliance/governance/issues/98</a></p>\n<div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/governance/blob/main/templates/projects/proposal.md\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1f4f4a61a6a5615212e66b61dd52871e93453792/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f316439356132613963393463613937343336366338376639613366343633373066333937303635353039396533623032633331633763313539623436396639362f62797465636f6465616c6c69616e63652f676f7665726e616e6365&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/governance/blob/main/templates/projects/proposal.md\" title=\"governance/templates/projects/proposal.md at main · bytecodealliance/governance\">governance/templates/projects/proposal.md at main · bytecodealliance/governance</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/governance development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/governance/issues/98\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/491dd3581cb4a357d8a8231daff706c40131f78f/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f373665353137623566663138303263646363306434326231626338383764326464316436663462316634346366363063346336666232653461613466326630392f62797465636f6465616c6c69616e63652f676f7665726e616e63652f6973737565732f3938&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/governance/issues/98\" title=\"Hosted project proposal: StarlingMonkey · Issue #98 · bytecodealliance/governance\">Hosted project proposal: StarlingMonkey · Issue #98 · bytecodealliance/governance</a></div><div class=\"message_embed_description\">Proposing the adoption of StarlingMonkey as a Bytecode Alliance hosted project. Repository URL: https://github.com/bytecodealliance/StarlingMonkey StarlingMonkey StarlingMonkey is a component-nativ...</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-py\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/1ad7f4ce6e674a27fb51f00b70e77b6e52f8e456/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f303965626466383464633035323331336632613866623662373739663533303332356261653466336333366162303039346666376665613539643565356334352f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d7079&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-py\" title=\"GitHub - bytecodealliance/componentize-py\">GitHub - bytecodealliance/componentize-py</a></div><div class=\"message_embed_description\">Contribute to bytecodealliance/componentize-py development by creating an account on GitHub.</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/componentize-dotnet\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/bcf54ec03fe8e0a360cf7c9c16c1d4fb8002bac5/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f636333613964363262313439643538396265396530303036366163633530393464663130373262623337636635323735373866386436356633656335656363392f62797465636f6465616c6c69616e63652f636f6d706f6e656e74697a652d646f746e6574&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/componentize-dotnet\" title=\"GitHub - bytecodealliance/componentize-dotnet: Tooling for creating WebAssembly components from C#\">GitHub - bytecodealliance/componentize-dotnet: Tooling for creating WebAssembly components from C#</a></div><div class=\"message_embed_description\">Tooling for creating WebAssembly components from C# - bytecodealliance/componentize-dotnet</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/jco\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/b553d1af1e341e2a204e577ddf86f2d403a55f2e/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f613636323833393330373334373630633330316161353661333530313639633738353638643366356639376266343638623930306139663830303063393565302f62797465636f6465616c6c69616e63652f6a636f&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/jco\" title=\"GitHub - bytecodealliance/jco: JavaScript toolchain for working with WebAssembly Components\">GitHub - bytecodealliance/jco: JavaScript toolchain for working with WebAssembly Components</a></div><div class=\"message_embed_description\">JavaScript toolchain for working with WebAssembly Components - bytecodealliance/jco</div></div></div><div class=\"message_embed\"><a class=\"message_embed_image\" href=\"https://github.com/bytecodealliance/cargo-component\" style=\"background-image: url(&quot;https://uploads.zulipusercontent.net/d13df1d94ce9be02deeb8a6724e2b4b2f589b113/68747470733a2f2f6f70656e67726170682e6769746875626173736574732e636f6d2f623532313563393566376564633762643932633262363830616265303962343339616537376665386530323334313234353330616132326333353639313663362f62797465636f6465616c6c69616e63652f636172676f2d636f6d706f6e656e74&quot;)\"></a><div class=\"data-container\"><div class=\"message_embed_title\"><a href=\"https://github.com/bytecodealliance/cargo-component\" title=\"GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.\">GitHub - bytecodealliance/cargo-component: A Cargo subcommand for creating WebAssembly components based on the component model proposal.</a></div><div class=\"message_embed_description\">A Cargo subcommand for creating WebAssembly components based on the component model proposal. - bytecodealliance/cargo-component</div></div></div>",
        "id": 463499141,
        "sender_full_name": "Bailey Hayes",
        "timestamp": 1724097300
    }
]