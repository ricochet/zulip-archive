[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a> from <code>afonso360:riscv-reorder-regs</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a preparation commit for the introduction of compressed instructions in the RISC-V backend.</p>\n<p>Some compressed instruction formats can only represent a limited range of addressable registers (x8 to x15). Outside of those ranges we have to fallback to the non compressed version of the instruction.</p>\n<p>Thus, this commit reorders the register allocation preference to try an use those registers as much as possible. In order to maximize the opportunities to emit compressed instructions.</p>\n<p>The preference list is now roughly as follows:</p>\n<ol>\n<li>Compressible Caller Saved registers.</li>\n<li>Non-Compressible Caller Saved registers.</li>\n<li>Compressible Callee Saved registers.</li>\n<li>Non-Compressible Callee Saved registers.</li>\n</ol>\n<p>This applies for both Integer and Floating point registers. Vector registers currently are all caller saved, so it doesn't make much of a difference.</p>\n</blockquote>",
        "id": 388696701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664082
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>.</p>",
        "id": 388696702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664082
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>.</p>",
        "id": 388696703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664082
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a preparation commit for the introduction of compressed instructions in the RISC-V backend.</p>\n<p>Some compressed instruction formats can only represent a limited range of registers (x8 to x15). Outside of those ranges we have to fallback to the non compressed version of the instruction.</p>\n<p>Thus, this commit reorders the register allocation preference to try an use those registers as much as possible. In order to maximize the opportunities to emit compressed instructions.</p>\n<p>The preference list is now roughly as follows:</p>\n<ol>\n<li>Compressible Caller Saved registers.</li>\n<li>Non-Compressible Caller Saved registers.</li>\n<li>Compressible Callee Saved registers.</li>\n<li>Non-Compressible Callee Saved registers.</li>\n</ol>\n<p>This applies for both Integer and Floating point registers. Vector registers currently are all caller saved, so it doesn't make much of a difference.</p>\n</blockquote>",
        "id": 388696722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664098
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a preparation commit for the introduction of compressed instructions in the RISC-V backend.</p>\n<p>Some compressed instruction formats can only represent a limited range of registers (x8 to x15). Outside of those ranges we have to fallback to the non compressed version of the instruction.</p>\n<p>Thus, this commit reorders the register allocation preference to try an use those registers as much as possible. In order to maximize the opportunities to emit compressed instructions.</p>\n<p>The preference list is now roughly as follows:</p>\n<ol>\n<li>Compressible Caller Saved registers.</li>\n<li>Non-Compressible Caller Saved registers.</li>\n<li>Compressible Callee Saved registers.</li>\n<li>Non-Compressible Callee Saved registers.</li>\n</ol>\n<p>Only Compressible Caller Saved registers are marked as preferred registers in regalloc, the rest are listed in preferred order (not entirely sure if that helps or not).</p>\n<p>This applies for both Integer and Floating point registers. Vector registers currently are all caller saved, so it doesn't make much of a difference.</p>\n</blockquote>",
        "id": 388697767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664799
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a preparation commit for the introduction of compressed instructions in the RISC-V backend.</p>\n<p>Some compressed instruction formats can only represent a limited range of registers (x8 to x15). Outside of those ranges we have to fallback to the non compressed version of the instruction.</p>\n<p>Thus, this commit reorders the register allocation preference to try an use those registers as much as possible. In order to maximize the opportunities to emit compressed instructions.</p>\n<p>The preference list is now roughly as follows:</p>\n<ol>\n<li>Compressible Caller Saved registers.</li>\n<li>Non-Compressible Caller Saved registers.</li>\n<li>Compressible Callee Saved registers.</li>\n<li>Non-Compressible Callee Saved registers.</li>\n</ol>\n<p>Only Compressible Caller Saved registers (1) are marked as preferred registers in regalloc, the rest are listed in preferred order (not entirely sure if that helps or not).</p>\n<p>This applies for both Integer and Floating point registers. Vector registers currently are all caller saved, so it doesn't make much of a difference.</p>\n</blockquote>",
        "id": 388697781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664814
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a preparation commit for the introduction of compressed instructions in the RISC-V backend.</p>\n<p>Some compressed instruction formats can only represent a limited range of registers (x8 to x15). Outside of those ranges we have to fallback to the non compressed version of the instruction.</p>\n<p>Thus, this commit reorders the register allocation preference to try an use those registers as much as possible. In order to maximize the opportunities to emit compressed instructions.</p>\n<p>The preference list is now roughly as follows:</p>\n<ol>\n<li>Compressible Caller Saved registers.</li>\n<li>Non-Compressible Caller Saved registers.</li>\n<li>Compressible Callee Saved registers.</li>\n<li>Non-Compressible Callee Saved registers.</li>\n</ol>\n<p>Only Compressible Caller Saved registers (1) are marked as preferred registers in regalloc, the rest are listed in order but marked as non preferred  (not entirely sure if that helps or not).</p>\n<p>This applies for both Integer and Floating point registers. Vector registers currently are all caller saved, so it doesn't make much of a difference.</p>\n</blockquote>",
        "id": 388697813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664841
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a preparation commit for the introduction of compressed instructions in the RISC-V backend.</p>\n<p>Some compressed instruction formats can only represent a limited range of registers (x8 to x15). Outside of those ranges we have to fallback to the non compressed version of the instruction.</p>\n<p>Thus, this commit reorders the register allocation preference to try an use those registers as much as possible. In order to maximize the opportunities to emit compressed instructions.</p>\n<p>The preference list is now roughly as follows:</p>\n<ol>\n<li>Compressible Caller Saved registers.</li>\n<li>Non-Compressible Caller Saved registers.</li>\n<li>Compressible Callee Saved registers.</li>\n<li>Non-Compressible Callee Saved registers.</li>\n</ol>\n<p>Only Compressible Caller Saved registers (1) are marked as preferred registers in regalloc, the rest are marked as non preferred but listed in order (2, 3, 4)  (not entirely sure if that helps or not).</p>\n<p>This applies for both Integer and Floating point registers. Vector registers currently are all caller saved, so it doesn't make much of a difference.</p>\n</blockquote>",
        "id": 388697837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693664872
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956#pullrequestreview-1613668477\">PR review</a>:</p>\n<blockquote>\n<p>Looks reasonable to me, thanks!</p>\n</blockquote>",
        "id": 389458531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694014918
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>.</p>",
        "id": 389519343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694036047
    },
    {
        "content": "<p>afonso360 has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>.</p>",
        "id": 389519365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694036062
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6956\">PR #6956</a>.</p>",
        "id": 389528531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694040973
    }
]