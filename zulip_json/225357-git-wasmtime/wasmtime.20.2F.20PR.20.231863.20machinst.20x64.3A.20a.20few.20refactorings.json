[
    {
        "content": "<p>bnjbvr opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a> from <code>x64</code> to <code>master</code>:</p>\n<blockquote>\n<p>This renames and encapsulates some concepts a bit more; no functional changes have been done, as confirmed by the tests still passing :-)</p>\n</blockquote>",
        "id": 200556227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591887742
    },
    {
        "content": "<p><strong>bnjbvr</strong> requested <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a>.</p>",
        "id": 200556271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591887759
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a> from <code>x64</code> to <code>master</code>:</p>\n<blockquote>\n<p>This renames and encapsulates some concepts a bit more; no functional changes have been done, as confirmed by the tests still passing :-)</p>\n</blockquote>",
        "id": 200563225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890582
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429011310\">PR Review</a>.</p>",
        "id": 200563985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890903
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438866800\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I see from reading later that we can extract the SSE level by passing calling its <code>.available_from</code> method.  But I don't see the win here .. it places more of a burden on readers of the code, who now have to look in some other place to figure out the SSE level.</p>\n</blockquote>",
        "id": 200563986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890903
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429011310\">PR Review</a>.</p>",
        "id": 200563987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890903
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438862966\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ahh ... this renaming loses the SSE-level on the name; I specifically wanted to retain that -- per discussion with Johnny in PR1665.  Can you reinstate it somehow?  I think it will be confusing and difficult -- especially later, when we add even more opcodes (and there are zillions of them) -- if we cannot look at an SseOpcode value and know directly what level it is for.</p>\n</blockquote>",
        "id": 200563988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890903
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438870384\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm .. I'm not entirely happy about the <code>i</code> in <code>Rmi</code> here.  Those immediates are often an opcode extension, especially for the comparison instructions, and not really an operand.  By contrast, the <code>i</code> in <code>AluRmi</code> really is an operand.  Hence there's a conceptual inconsistency.  Not sure what a better name is though.</p>\n</blockquote>",
        "id": 200563990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890904
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438859994\">PR Review Comment</a>:</p>\n<blockquote>\n<p>At some point this will need to be expanded to include whole-register copies (mova<strong>/movu</strong>).</p>\n</blockquote>",
        "id": 200563991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890904
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438882187\">PR Review Comment</a>:</p>\n<blockquote>\n<p>What is this used for?  I don't see a previous version of it, and I feel nervous about having a function that gets the encoding for a register without checking the class.  (cf inconsistency with <code>int_reg_enc</code>).  At some point soon I guess we'll need an <code>xmm_reg_enc</code> as a dual to <code>int_reg_enc</code>?</p>\n</blockquote>",
        "id": 200563993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890904
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438883631\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm not sure what the sentence \"A select prefix .. \" means (what's a \"select\" prefix?)  Maybe rm this sentence?  In any case none of this machinery will work for creating VEX- or EVEX-prefixed instructions; we'll have to redo it for those.</p>\n</blockquote>",
        "id": 200563994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890904
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438889251\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, also here is inconsistent now.</p>\n<p>There are two axes of differentiation in the old naming:</p>\n<ul>\n<li>E is reg vs E is mem   (G is always a reg)</li>\n<li>whether reg values are indicated by passing a Reg (\"reg\") or just its encoding number (\"enc\")</li>\n</ul>\n<p>Can you rename so as to bring back those distinctions?</p>\n</blockquote>",
        "id": 200563995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890904
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438892223\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can this be called <code>RexFlags</code>?  Calling it simply <code>Rex</code> might lead one to believe that it itself is a Rex prefix, when it is not.</p>\n</blockquote>",
        "id": 200563996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890904
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438885380\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, this renaming hides the fact that the E operand is memory.  <code>.._enc_g_mem_e</code> ?</p>\n</blockquote>",
        "id": 200563997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591890904
    },
    {
        "content": "<p>julian-seward1 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438866800\">PR Review Comment</a>.</p>",
        "id": 200564674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891125
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429068998\">PR Review</a>.</p>",
        "id": 200566144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891750
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438904303\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sorry, i should have commented a bit in the commit message. With the <code>available_from</code> function, we can then automate the checks that the instructions are available when comparing to a given SSE level. So this could be used to dynamically (at runtime) check that we only use allowed instructions, as well as selecting instructions based on the real SSE level.</p>\n<p>So it's slightly more indirection, but with this check (to come in a subsequent pull request), there's no way it can be misused. In terms of developer experience, in most modern editors, this is a \"jump to definition\" then grep for \"available_from\", which is not too bad (and should not be done so often). Overall I found better to have something that could be probed and checked programmatically rather than a \"visual\" check that's subject to operators errors :)</p>\n<p>With this new information, do you agree with the current form, or do you strongly feel about reverting it?</p>\n</blockquote>",
        "id": 200566145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891750
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429070702\">PR Review</a>.</p>",
        "id": 200566405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891870
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438905508\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I see. What about <code>SseRmIOpcode</code> (with capital I), to indicate it is its own operand? Or in a more verbose way, <code>SseRmImmOpcode</code>?</p>\n</blockquote>",
        "id": 200566406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891870
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438906106\">PR Review Comment</a>:</p>\n<blockquote>\n<p>There were two TODOs (removed in this patch) that said that two <code>int_reg_enc</code> calls should really be replaced with a new <code>reg_enc</code>, because registers that could flow in could be either GPRs or SSE. Hence this new function.</p>\n</blockquote>",
        "id": 200566513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891921
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429071434\">PR Review</a>.</p>",
        "id": 200566514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891921
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429071770\">PR Review</a>.</p>",
        "id": 200566605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891946
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438906409\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is preexisting :-) Maybe \"a given prefix\" would make more sense here?</p>\n</blockquote>",
        "id": 200566606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891946
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429071904\">PR Review</a>.</p>",
        "id": 200566633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891956
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438906499\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sure!</p>\n</blockquote>",
        "id": 200566634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591891956
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429073648\">PR Review</a>.</p>",
        "id": 200566934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591892080
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438907765\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, my memories of x86 told me that SIB could only be used with a memory operand, so the presence of \"sib\" in the name implied a memory operand. Besides, I was trying to shorten the name a bit :-) But yeah, I could add it back and it wouldn't be too terrible.</p>\n</blockquote>",
        "id": 200566936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591892081
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429077309\">PR Review</a>.</p>",
        "id": 200567481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591892338
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438910738\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I thought I kept this distinction with the \"enc\" that's before \"ge\", and \"reg\" before \"ge\" in the other variants, but I see that I used \"rm\" for the Reg/Addr variant of <code>emit_modrm_sib_enc_ge</code>. Let's discuss it offline.</p>\n</blockquote>",
        "id": 200567482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591892338
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a> from <code>x64</code> to <code>master</code>:</p>\n<blockquote>\n<p>This renames and encapsulates some concepts a bit more; no functional changes have been done, as confirmed by the tests still passing :-)</p>\n</blockquote>",
        "id": 200572346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591894488
    },
    {
        "content": "<p><strong>bnjbvr</strong> requested <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a>.</p>",
        "id": 200572363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591894497
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-429105633\">PR Review</a>.</p>",
        "id": 200572434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591894530
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r438932457\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We settle on <code>emit_std_{enc,reg}_{mem,reg}</code> variants here.</p>\n</blockquote>",
        "id": 200572435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591894531
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a> from <code>x64</code> to <code>master</code>:</p>\n<blockquote>\n<p>This renames and encapsulates some concepts a bit more; no functional changes have been done, as confirmed by the tests still passing :-)</p>\n</blockquote>",
        "id": 200697247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591981756
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a> from <code>x64</code> to <code>master</code>:</p>\n<blockquote>\n<p>This renames and encapsulates some concepts a bit more; no functional changes have been done, as confirmed by the tests still passing :-)</p>\n</blockquote>",
        "id": 200699243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591982799
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-430463832\">PR Review</a>.</p>",
        "id": 200865580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592212638
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r440040213\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That still doesn't make clear that the imm isn't an operand.  How about <code>SseRmExtendedOpcode</code> ?</p>\n</blockquote>",
        "id": 200865581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592212638
    },
    {
        "content": "<p>julian-seward1 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r440040213\">PR Review Comment</a>.</p>",
        "id": 200865638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592212666
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-430484372\">PR Review</a>.</p>",
        "id": 200868234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592214336
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-430484372\">PR Review</a>.</p>",
        "id": 200868236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592214337
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r440056103\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Actually .. thinking about this more .. I don't think there is any point in having these be separate from the plain <code>SseOpcode</code>.  They are \"just more\" SSE* instructions and the only difference is that the encoding of the instruction has an extra byte, which IIRC is always right at the end of the instruction.  So I think you should merge these into <code>SseOpcode</code> and delete <code>SseRmiOpcode</code>.  (w/ apologies for changing my story on this)</p>\n</blockquote>",
        "id": 200868237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592214337
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a> from <code>x64</code> to <code>master</code>:</p>\n<blockquote>\n<p>This renames and encapsulates some concepts a bit more; no functional changes have been done, as confirmed by the tests still passing :-)</p>\n</blockquote>",
        "id": 200891310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592229153
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#pullrequestreview-430664345\">PR Review</a>.</p>",
        "id": 200891323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592229161
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863#discussion_r440191352\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Discussed on irc and Julian agreed with this, resolving.</p>\n</blockquote>",
        "id": 200891325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592229161
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a> from <code>x64</code> to <code>master</code>:</p>\n<blockquote>\n<p>This renames and encapsulates some concepts a bit more; no functional changes have been done, as confirmed by the tests still passing :-)</p>\n</blockquote>",
        "id": 200892338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592229643
    },
    {
        "content": "<p>bnjbvr merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1863\">PR #1863</a>.</p>",
        "id": 200897839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592231952
    }
]