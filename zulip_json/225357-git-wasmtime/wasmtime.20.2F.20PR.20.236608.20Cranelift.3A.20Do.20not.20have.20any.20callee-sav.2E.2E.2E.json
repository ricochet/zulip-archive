[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a> from <code>fitzgen:tail-no-callee-saves</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>That is, mark all allocatable registers as clobbered by <code>tail</code> calls.</p>\n<p>Additionally, use (basically) all allocatable registers for passing arguments and returns. (\"Basically\" because we have to leave at least one register available to hold the callee address for indirect calls or else we'll get regalloc constraint errors.)</p>\n<p>I could get three more argument registers on riscv if I refactored <code>compute_arg_locs</code> and/or did something similar to aarch64's <code>compute_arg_locs_tail</code> but it didn't seem worth the hassle.</p>\n</blockquote>",
        "id": 368039532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687290743
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a>.</p>",
        "id": 368039537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687290744
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a>.</p>",
        "id": 368039538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687290744
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a>.</p>",
        "id": 368039540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687290744
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a>.</p>",
        "id": 368039633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687290771
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608#pullrequestreview-1488921188\">PR review</a>.</p>",
        "id": 368041372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687291214
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608#pullrequestreview-1488921188\">PR review</a>.</p>",
        "id": 368041373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687291214
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608#discussion_r1235762367\">PR review comment</a>:</p>\n<blockquote>\n<p>Note: this is just <code>clif-util</code> enabling the <code>trace-log</code> feature by default, not changing <code>cranelift-codegen</code> or any other crate that is actually used as a dep anywhere.</p>\n</blockquote>",
        "id": 368041376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687291215
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608#pullrequestreview-1488927475\">PR review</a>:</p>\n<blockquote>\n<p>I don't much like the structure of this code; I know you've said you don't either. But this PR doesn't make it worse, so let's go with it.</p>\n<p>I spent some time trying to figure out if there was more we could share between the register allocator configuration and these ABI bits, given that all allocatable registers are supposed to be clobbered in this ABI, but that didn't look straightforward.</p>\n<p>As future work, I think there's something we can do with RA2's <code>PRegSet</code> to represent all of these different ABI-relevant sets of registers compactly; there's a popcount-like trick for finding the index of the Nth set bit that I think covers most of the uses we need here. (See the \"Select the bit position (from the most-significant bit) with the given count (rank)\" section of <a href=\"https://graphics.stanford.edu/~seander/bithacks.html\">https://graphics.stanford.edu/~seander/bithacks.html</a>.) But that's not necessary to land this.</p>\n</blockquote>",
        "id": 368305789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687366789
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608#pullrequestreview-1488927475\">PR review</a>:</p>\n<blockquote>\n<p>I don't much like the structure of this code; I know you've said you don't either. But this PR doesn't make it worse, so let's go with it.</p>\n<p>I spent some time trying to figure out if there was more we could share between the register allocator configuration and these ABI bits, given that all allocatable registers are supposed to be clobbered in this ABI, but that didn't look straightforward.</p>\n<p>As future work, I think there's something we can do with RA2's <code>PRegSet</code> to represent all of these different ABI-relevant sets of registers compactly; there's a popcount-like trick for finding the index of the Nth set bit that I think covers most of the uses we need here. (See the \"Select the bit position (from the most-significant bit) with the given count (rank)\" section of <a href=\"https://graphics.stanford.edu/~seander/bithacks.html\">https://graphics.stanford.edu/~seander/bithacks.html</a>.) But that's not necessary to land this.</p>\n</blockquote>",
        "id": 368305790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687366789
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608#discussion_r1235783327\">PR review comment</a>:</p>\n<blockquote>\n<p>Would you add a comment here saying so?</p>\n</blockquote>",
        "id": 368305791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687366789
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a>.</p>",
        "id": 368345652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687376561
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a>.</p>",
        "id": 368345687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687376571
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6608\">PR #6608</a>.</p>",
        "id": 368362198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687381606
    }
]