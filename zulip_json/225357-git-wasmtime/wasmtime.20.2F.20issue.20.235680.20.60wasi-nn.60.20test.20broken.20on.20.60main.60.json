[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/4059348118/jobs/6987292821\">this CI run</a> on <code>main</code>, the <code>wasi-nn</code> test job appears to fail with a Wasm trap in <code>wasm-nn-example.wasm</code>. The same test <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/4058962235/jobs/6986493872\">passed</a> on the PR that just merged and triggered the CI run on main.</p>\n<p>It appears that the <code>wasi-nn</code> test is influenced by model data or other bits downloaded from the Internet; as such, I suspect there is an issue due to changing inputs.</p>\n<p>@abrown / @jlb6740, would you be able to look into this? Since wasi-nn support is tier 3, we'll need to disable the test tomorrow if not fixed urgently, since it blocks any other PR from merging.</p>\n</blockquote>",
        "id": 325049611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675212813
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411284849\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>Let's go ahead and disable the test for now so that we can unblock any other in-flight work. I'll make a PR.</p>\n</blockquote>",
        "id": 325050000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675213008
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411292116\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>From a first glance, it doesn't look like this is wasi-nn related... at least the bits that would do any inference with a model. The backtrace points to wasi-libc as the issue, right? I think that might bear some looking into. Maybe this test is the only one exercising some aspect of wasi-libc?</p>\n</blockquote>",
        "id": 325050857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675213499
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411297786\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>Possibly, but passing and then failing later on the same tree indicates to me at least that it's not a simple broken-codegen sort of issue... I'll poke at this locally a little bit.</p>\n</blockquote>",
        "id": 325051207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675213718
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411299530\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>Hmm,  nevermind, I don't have a functioning OpenVINO setup.</p>\n<p>I think the most reasonable call is: given flake + tier 3, let's disable then debug off the critical path so <code>main</code> isn't blocked.</p>\n</blockquote>",
        "id": 325051388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675213817
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411310752\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>I think this is a bit more worrying than that. This <a href=\"https://github.com/abrown/install-openvino-action/blob/main/install.sh\">install.sh</a> script is how one could get an OpenVINO installation.</p>\n</blockquote>",
        "id": 325052418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675214529
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411315717\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>OK, @elliottt noticed that the failure started on <code>main</code> after #5676, and actually failed on the PR itself too. #5605 had clean CI because it didn't include #5676 while running. #5676 merged despite one failing test because it had auto-merge enabled, and the wasi-nn test was erroneously not included in our list of required tests for <code>main</code>'s branch protection.</p>\n</blockquote>",
        "id": 325052980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675214974
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411317725\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>So there must be something in wasi-libc's <code>memset</code> that doesn't play nicely with that optimization? That optimization seemed reasonable to me...</p>\n</blockquote>",
        "id": 325053259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675215160
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411318482\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>I've added <code>wasi-nn</code> to the list of required tests for <code>main</code>; if #5682 turns green then we can revert and @fitzgen can investigate tomorrow, otherwise let's dig a bit more. I agree that there's something non-wasi-nn-specific that seems to be going on since the backtrace is in libc startup before any app-specific code runs.</p>\n</blockquote>",
        "id": 325053322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675215215
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411324026\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>(thought: we should have more tests exercising wasi-libc if the wasi-nn test is the only one that found this... still puzzled at what is going on)</p>\n</blockquote>",
        "id": 325054028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675215749
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680#issuecomment-1411327769\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>I suspect if it's a really subtle codegen thing then fuzzing would have caught it <em>eventually</em> too... though I agree, and I hope a few good tests of a reduced kernel of the bug come out of this!</p>\n</blockquote>",
        "id": 325054328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675215978
    },
    {
        "content": "<p>elliottt closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5680\">issue #5680</a>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/4059348118/jobs/6987292821\">this CI run</a> on <code>main</code>, the <code>wasi-nn</code> test job appears to fail with a Wasm trap in <code>wasm-nn-example.wasm</code>. The same test <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/4058962235/jobs/6986493872\">passed</a> on the PR that just merged and triggered the CI run on main.</p>\n<p>It appears that the <code>wasi-nn</code> test is influenced by model data or other bits downloaded from the Internet; as such, I suspect there is an issue due to changing inputs.</p>\n<p>@abrown / @jlb6740, would you be able to look into this? Since wasi-nn support is tier 3, we'll need to disable the test tomorrow if not fixed urgently, since it blocks any other PR from merging.</p>\n</blockquote>",
        "id": 325059622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675220006
    }
]