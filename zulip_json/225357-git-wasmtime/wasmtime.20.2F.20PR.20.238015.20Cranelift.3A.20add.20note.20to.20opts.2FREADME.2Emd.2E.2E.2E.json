[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8015\">PR #8015</a> from <code>cfallin:isle-opt-readme-7999</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>While debugging #7999, we learned of a possible, extremely subtle, interaction between the design of our ISLE mid-end prelude and matching rules with a certain structure. Because a <code>Value</code> represents an entire eclass, separate left-hand sides (as in helper rules or if-let clauses) that match on the value may match against different enodes returned by the multi-match extractor's iterator. We then may infer some property of one enode, another property of another enode, and perform a rewrite that is only valid if both of those matches are on the same enode.</p>\n<p>The precise distinction is whether it is a property of the <em>value</em> -- e.g., nonzero, or even, or within a range -- or a property of the <em>operation</em> and matched subpieces. The former is fine, the latter runs into trouble. We found that #7719 added a helper that determined whether a value \"was a certain operator\" -- actually, had any enode of a certain operator -- and separately, matched \"the operator\" and extracted its opcode and parameters (actually, <em>any</em> binary operator). The first half can match an opcode we support simplifying, and the second half can get the arguments and <code>op</code> and blindly use them in the rewrite.</p>\n<p>This PR adds new guidance to avoid complex helpers and be aware of multi-matching behavior, preferring to write patterns directly (as the fix in #8005 does) instead. Longer-term, we also have other ideas, e.g. @jameysharp's suggestion to disallow at-patterns on multi-extractors in left hand sides to reduce the chance of hitting this footgun.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 423875658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709144113
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8015\">PR #8015</a>.</p>",
        "id": 423875662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709144114
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8015\">PR #8015</a>.</p>",
        "id": 423875664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709144114
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8015#pullrequestreview-1907004597\">PR review</a>:</p>\n<blockquote>\n<p>This is very helpful guidance, thanks for writing it!</p>\n</blockquote>",
        "id": 423880157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709145680
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8015\">PR #8015</a>.</p>",
        "id": 423887096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709148216
    }
]