[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8253\">PR #8253</a> from <code>cfallin:faster-i64x2-vector-construction</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Sometimes, when in the course of silly optimizations to make the most of one's registers, one might want to pack two <code>i64</code>s into one <code>v128</code>, and one might want to do it without any loads or stores.</p>\n<p>In clang targeting Wasm at least, building an <code>i64x2</code> (with <code>wasm_i64x2_make(a, b)</code> from <code>&lt;wasm_simd128.h&gt;</code>) will generate (i) an <code>i64x2.splat</code> to create a new v128 with lane 0's value in both lanes, then <code>i64x2.replace_lane</code> to put lane 1's value in place. Or, in the case that one of the lanes is zero, it will generate a <code>v128.const 0</code> then insert the other lane.</p>\n<p>Cranelift's lowerings for both of these patterns on x64 are slightly less optimal than they could be.</p>\n<ul>\n<li>\n<p>For the former (replace-lane of splat), the 64-bit value is moved over to the XMM register, then the rest of the <code>splat</code> semantics are implemented by a <code>pshufd</code> (shuffle), even though we're just about to overwrite the only other lane. We could omit that shuffle instead, and everything would work fine.</p>\n<p>This optimization is specific to <code>i64x2</code> (that is, only two lanes): we need to know that the only other lane that the <code>splat</code> is splatting into is overwritten. We could in theory match a chain of replace-lane operators for higher-lane-count types, but let's save that for the case that we actually need it later.</p>\n</li>\n<li>\n<p>For the latter (replace-lane of constant zero), the load of a constant zero from the constant pool is the part that bothers me most. While I like zeroed memory as much as the next person, there is a vector XOR instruction <em>right there</em> under our noses, and we'd be silly not to use it. This applies to any <code>vconst 0</code>, not just ones that occur as a source to replace-lane.</p>\n</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 429998657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711603304
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8253\">PR #8253</a>.</p>",
        "id": 429998658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711603304
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8253\">PR #8253</a>.</p>",
        "id": 429998659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711603304
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8253#pullrequestreview-1965438980\">PR review</a>:</p>\n<blockquote>\n<p>LGTM!</p>\n</blockquote>",
        "id": 430015285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711613581
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8253\">PR #8253</a>.</p>",
        "id": 430019772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711615420
    }
]