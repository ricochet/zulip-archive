[
    {
        "content": "<p>eduardomourar opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a> from <code>eduardomourar:feat/wasi-http-align-component</code> to <code>bytecodealliance:main</code>.</p>",
        "id": 348368018,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681195225
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350433857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681718288
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1168674496\">PR review comment</a>:</p>\n<blockquote>\n<p>Does this really belong in <code>wasi-http</code> crate or should it be living alongside the existing <a href=\"https://docs.wasmtime.dev/api/wasi_common/table/struct.Table.html\">https://docs.wasmtime.dev/api/wasi_common/table/struct.Table.html</a> in <code>wasi_common</code>? Should there be a <code>wasi_common::component::table::Table</code> if this is component-model specific?</p>\n</blockquote>",
        "id": 350510487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737254
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1388029915\">PR review</a>.</p>",
        "id": 350510488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737254
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1388036272\">PR review</a>.</p>",
        "id": 350511193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737405
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1168678899\">PR review comment</a>:</p>",
        "id": 350511195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737405
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1388039424\">PR review</a>.</p>",
        "id": 350511623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737494
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1168680939\">PR review comment</a>:</p>\n<blockquote>\n<p>Aren't these <code>clone</code>s redundant? If you didn't call <code>iter()</code> you could just move these instead, since the vector is moved into this function, right?</p>\n</blockquote>",
        "id": 350511625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737495
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1388051778\">PR review</a>.</p>",
        "id": 350513042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737793
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1168688656\">PR review comment</a>:</p>\n<blockquote>\n<p>This can be cleaner expressed with iterator operations and collect, but if you want to keep the for loop</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">entries</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"n\">map</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">value</span><span class=\"p\">])</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>it's just this, right?</p>\n</blockquote>",
        "id": 350513044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737793
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1388059436\">PR review</a>.</p>",
        "id": 350513802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737953
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1168693184\">PR review comment</a>:</p>\n<blockquote>\n<p>How about extracting this to a <code>let body = req.body().unwrap_or_else(/* ... */)</code> for clarity?</p>\n</blockquote>",
        "id": 350513804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681737953
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1388482061\">PR review</a>.</p>",
        "id": 350559511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681747428
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1168962972\">PR review comment</a>:</p>\n<blockquote>\n<p>yes, when wasmtime supports wasi preview2, the wasi common here will most likely contain the table (following the preview2-prototyping approach). until then, i just copied this over and made some small tweaks.</p>\n</blockquote>",
        "id": 350559514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681747428
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350560915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681747789
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350711724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681808016
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350813218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681831290
    },
    {
        "content": "<p>eduardomourar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350820996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681833080
    },
    {
        "content": "<p><strong>eduardomourar</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a> as ready for review.</p>",
        "id": 350821401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681833190
    },
    {
        "content": "<p><strong>eduardomourar</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350821404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681833191
    },
    {
        "content": "<p><strong>eduardomourar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350821406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681833191
    },
    {
        "content": "<p>eduardomourar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>:</p>\n<blockquote>\n<p>In the context of <code>wasi-http</code>, this PR will prepare the ground for the migration from the <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">preview2-prototyping repo</a> to wasmtime. A table is being defined to simulate the future <code>resource</code> type. Additionally, it will simplify using <a href=\"https://github.com/bytecodealliance/wasmtime/blob/387db16d288c31c5fba5d6d5c81475d2ede60a4e/crates/wasmtime/src/component/linker.rs#L21-L27\">Component Linker</a> with the wasi-http.</p>\n<p>&lt;details&gt;<br>\n  &lt;summary&gt;Usage example with WASI Preview2&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">host</span>::<span class=\"p\">{</span><span class=\"n\">command</span>::<span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"p\">{</span><span class=\"n\">any</span>::<span class=\"n\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pin</span>::<span class=\"n\">Pin</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi_cap_std_sync</span>::<span class=\"n\">WasiCtxBuilder</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">component</span>::<span class=\"p\">{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"p\">{</span><span class=\"n\">common</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span><span class=\"p\">};</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">http</span>: <span class=\"nc\">WasiHttpCtx</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">add_to_linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nb\">Send</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">l</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">f</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">static</span><span class=\"p\">,</span>\n<span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">wall_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">monotonic_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">timezone</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">instance_monotonic_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">instance_wall_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">filesystem</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">poll</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">random</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">exit</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">environment</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">preopens</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">OutputStream</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">as_any</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">dyn</span><span class=\"w\"> </span><span class=\"n\">Any</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buf</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">])</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">from_utf8_lossy</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">).</span><span class=\"n\">into_owned</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">().</span><span class=\"n\">try_into</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">write_zeroes</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nelem</span>: <span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">nelem</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">readable</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">writable</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">set_stdout</span><span class=\"p\">(</span><span class=\"nb\">Box</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{}));</span>\n<span class=\"w\">    </span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">set_stderr</span><span class=\"p\">(</span><span class=\"nb\">Box</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{}));</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_backtrace_details</span><span class=\"p\">(</span><span class=\"n\">wasmtime</span>::<span class=\"n\">WasmBacktraceDetails</span>::<span class=\"n\">Enable</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_multi_memory</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"component.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">ctx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"n\">add_to_component_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">ctx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">http</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_instance</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">wasi</span>::<span class=\"n\">Command</span>::<span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_main</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"n\">anyhow</span>::<span class=\"n\">Error</span>::<span class=\"n\">from</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">is_err</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">anyhow</span>::<span class=\"n\">bail</span><span class=\"o\">!</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"s\">\"command returned with failing exit status: {:?}\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">err</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>&lt;/details&gt;<br>\n</p>\n</blockquote>",
        "id": 350828068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681834700
    },
    {
        "content": "<p>eduardomourar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>:</p>\n<blockquote>\n<p>In the context of <code>wasi-http</code>, this PR will prepare the ground for the migration from the <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">preview2-prototyping repo</a> to wasmtime. A table is being defined to simulate the future <code>resource</code> type. Additionally, it will simplify using <a href=\"https://github.com/bytecodealliance/wasmtime/blob/387db16d288c31c5fba5d6d5c81475d2ede60a4e/crates/wasmtime/src/component/linker.rs#L21-L27\">Component Linker</a> with the wasi-http module.</p>\n<p>&lt;details&gt;<br>\n  &lt;summary&gt;Usage example with WASI Preview2&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">host</span>::<span class=\"p\">{</span><span class=\"n\">command</span>::<span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"p\">{</span><span class=\"n\">any</span>::<span class=\"n\">Any</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">pin</span>::<span class=\"n\">Pin</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi_cap_std_sync</span>::<span class=\"n\">WasiCtxBuilder</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">component</span>::<span class=\"p\">{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"p\">{</span><span class=\"n\">common</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span><span class=\"p\">};</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">http</span>: <span class=\"nc\">WasiHttpCtx</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">add_to_linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>: <span class=\"nb\">Send</span><span class=\"o\">&gt;</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"n\">l</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">f</span>: <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nb\">Fn</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">T</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Copy</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Send</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Sync</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">static</span><span class=\"p\">,</span>\n<span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">wall_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">monotonic_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">timezone</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">instance_monotonic_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">instance_wall_clock</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">filesystem</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">poll</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">random</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">exit</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">environment</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>::<span class=\"n\">preopens</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">OutputStream</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">as_any</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">dyn</span><span class=\"w\"> </span><span class=\"n\">Any</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">write</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buf</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">])</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">String</span>::<span class=\"n\">from_utf8_lossy</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">).</span><span class=\"n\">into_owned</span><span class=\"p\">());</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">().</span><span class=\"n\">try_into</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">write_zeroes</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nelem</span>: <span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">nelem</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">readable</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">writable</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">common</span>::<span class=\"n\">Error</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">set_stdout</span><span class=\"p\">(</span><span class=\"nb\">Box</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{}));</span>\n<span class=\"w\">    </span><span class=\"n\">http</span><span class=\"p\">.</span><span class=\"n\">set_stderr</span><span class=\"p\">(</span><span class=\"nb\">Box</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">WritePipe</span><span class=\"w\"> </span><span class=\"p\">{}));</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_backtrace_details</span><span class=\"p\">(</span><span class=\"n\">wasmtime</span>::<span class=\"n\">WasmBacktraceDetails</span>::<span class=\"n\">Enable</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_multi_memory</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"component.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">ctx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"n\">add_to_component_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">ctx</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"p\">.</span><span class=\"n\">http</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_instance</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">wasi</span>::<span class=\"n\">Command</span>::<span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_main</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"n\">anyhow</span>::<span class=\"n\">Error</span>::<span class=\"n\">from</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">is_err</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">anyhow</span>::<span class=\"n\">bail</span><span class=\"o\">!</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"s\">\"command returned with failing exit status: {:?}\"</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"n\">result</span><span class=\"p\">.</span><span class=\"n\">err</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>&lt;/details&gt;<br>\n</p>\n</blockquote>",
        "id": 350828391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681834765
    },
    {
        "content": "<p>brendandburns submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1390569500\">PR review</a>.</p>",
        "id": 350838803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681837184
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1170331642\">PR review comment</a>:</p>\n<blockquote>\n<p>remove dead code.</p>\n</blockquote>",
        "id": 350838805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681837185
    },
    {
        "content": "<p>brendandburns submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1390569999\">PR review</a>.</p>",
        "id": 350838893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681837202
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1170332035\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there a reason for the rename?</p>\n</blockquote>",
        "id": 350838908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681837203
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1390620998\">PR review</a>.</p>",
        "id": 350846197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681839244
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1170368295\">PR review comment</a>:</p>\n<blockquote>\n<p>for this piece, we need to choose which errors we want to throw in place of others</p>\n</blockquote>",
        "id": 350846208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681839245
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1390622687\">PR review</a>.</p>",
        "id": 350846413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681839314
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1170369370\">PR review comment</a>:</p>\n<blockquote>\n<p>just to follow the pattern in the other modules, and also to show that there is a breaking change to the API</p>\n</blockquote>",
        "id": 350846416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681839315
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 350857406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681842480
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 380274100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690798123
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 381625912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691103395
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 381627037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691103969
    },
    {
        "content": "<p><strong>eduardomourar</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 382169343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691248478
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 382169344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691248478
    },
    {
        "content": "<p><strong>eduardomourar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 382169345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691248478
    },
    {
        "content": "<p>eduardomourar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>:</p>\n<blockquote>\n<p>In the context of <code>wasi-http</code>, this PR will use the shared functionality from <code>wasmtime-wasi</code> <del>will prepare the ground for the migration from the <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">preview2-prototyping repo</a> to wasmtime</del>. A table is being defined to simulate the future <code>resource</code> type. Additionally, it will simplify using <a href=\"https://github.com/bytecodealliance/wasmtime/blob/387db16d288c31c5fba5d6d5c81475d2ede60a4e/crates/wasmtime/src/component/linker.rs#L21-L27\">Component Linker</a> with the wasi-http module.</p>\n<p>&lt;details&gt;<br>\n  &lt;summary&gt;Usage example with WASI Preview2&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">component</span>::<span class=\"p\">{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">command</span>::<span class=\"n\">Command</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Table</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"p\">{</span><span class=\"n\">WasiHttpCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiHttpView</span><span class=\"p\">};</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"n\">table</span>: <span class=\"nc\">Table</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">http</span>: <span class=\"nc\">WasiHttpCtx</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">table</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">Table</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">table_mut</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Table</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">WasiCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">wasi</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">ctx_mut</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">wasi</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiHttpView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">http_ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">WasiHttpCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">http</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">http_ctx_mut</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">http</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_backtrace_details</span><span class=\"p\">(</span><span class=\"n\">wasmtime</span>::<span class=\"n\">WasmBacktraceDetails</span>::<span class=\"n\">Enable</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"component.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"n\">add_to_component_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_instance</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">wasi</span>::<span class=\"n\">Command</span>::<span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_main</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">e</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">anyhow</span>::<span class=\"n\">anyhow</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"wasm failed with {e:?}\"</span><span class=\"p\">))</span><span class=\"o\">?</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">e</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">anyhow</span>::<span class=\"n\">anyhow</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"command returned with failing exit status {e:?}\"</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>&lt;/details&gt;<br>\n</p>\n</blockquote>",
        "id": 382330894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691319809
    },
    {
        "content": "<p><strong>eduardomourar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 382332468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691320227
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 382332471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691320227
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1564126008\">PR review</a>.</p>",
        "id": 382332693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691320296
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1285197576\">PR review comment</a>:</p>\n<blockquote>\n<p>we are using the shared table as provided by <code>wasmtime-wasi</code>.</p>\n</blockquote>",
        "id": 382332694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691320297
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 383694115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691685845
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1572388114\">PR review</a>.</p>",
        "id": 383706437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691688279
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1290454117\">PR review comment</a>:</p>\n<blockquote>\n<p>@pchickey , here is the part where we have a shared stream for both read and write. i solved by populating the table with both streams and just keeping their ids for later use.</p>\n</blockquote>",
        "id": 383706967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691688390
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1572872154\">PR review</a>.</p>",
        "id": 383783183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691712238
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1290786159\">PR review comment</a>:</p>\n<blockquote>\n<p>Why remove the closure argument here? (That's what's causing the CI build failures currently.)</p>\n</blockquote>",
        "id": 383783184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691712239
    },
    {
        "content": "<p>eduardomourar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>:</p>\n<blockquote>\n<p>In the context of <code>wasi-http</code>, this PR will use the shared functionality from <code>wasmtime-wasi</code> <del>will prepare the ground for the migration from the <a href=\"https://github.com/bytecodealliance/preview2-prototyping\">preview2-prototyping repo</a> to wasmtime</del>. A table is being defined to simulate the future <code>resource</code> type. Additionally, it will simplify using <a href=\"https://github.com/bytecodealliance/wasmtime/blob/387db16d288c31c5fba5d6d5c81475d2ede60a4e/crates/wasmtime/src/component/linker.rs#L21-L27\">Component Linker</a> with the wasi-http module.</p>\n<p>&lt;details&gt;<br>\n  &lt;summary&gt;Usage example with WASI Preview2&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">component</span>::<span class=\"p\">{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">command</span>::<span class=\"n\">Command</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Table</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"p\">,</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"p\">{</span><span class=\"n\">WasiHttpCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiHttpView</span><span class=\"p\">};</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"n\">table</span>: <span class=\"nc\">Table</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">http</span>: <span class=\"nc\">WasiHttpCtx</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">table</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">Table</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">table_mut</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Table</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">WasiCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">wasi</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">ctx_mut</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">wasi</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiHttpView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">http_ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">WasiHttpCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">http</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">http_ctx_mut</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">http</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">anyhow</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiHttpCtx</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_backtrace_details</span><span class=\"p\">(</span><span class=\"n\">wasmtime</span>::<span class=\"n\">WasmBacktraceDetails</span>::<span class=\"n\">Enable</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"component.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Ctx</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"w\"> </span><span class=\"p\">});</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi_http</span>::<span class=\"n\">add_to_component_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_instance</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">wasi</span>::<span class=\"n\">Command</span>::<span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_main</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">e</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">anyhow</span>::<span class=\"n\">anyhow</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"wasm failed with {e:?}\"</span><span class=\"p\">))</span><span class=\"o\">?</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">map_err</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">e</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">anyhow</span>::<span class=\"n\">anyhow</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"command returned with failing exit status {e:?}\"</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>Depends on: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6836\">https://github.com/bytecodealliance/wasmtime/pull/6836</a>.</p>\n</blockquote>",
        "id": 383799200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691718786
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1572920782\">PR review</a>.</p>",
        "id": 383799854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691719025
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1290827685\">PR review comment</a>:</p>\n<blockquote>\n<p>it will make more sense when using the <code>preview2::WasiCtx</code> as laid out in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6836\">this pr</a>. the wasmtime cli tests will be fixed then</p>\n</blockquote>",
        "id": 383799859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691719025
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 383804529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691719909
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 383817959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691726088
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 383820828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691727551
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 384516641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691938595
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 384517473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691938787
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 384536001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691943425
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1577728727\">PR review</a>.</p>",
        "id": 384919759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692051260
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1577728727\">PR review</a>.</p>",
        "id": 384919760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692051260
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1294018521\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    # Ensure wit definitions are in sync: both wasmtime-wasi and wasmtime-wasi-http need their own\n    # copy of the wit definitions so publishing works, but we need to ensure they are identical copies.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 384919761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692051260
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385322054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692151559
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385322454,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692151724
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385327522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692154484
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1581535271\">PR review</a>:</p>\n<blockquote>\n<p>This is looking great! I just had two questions before we merge.</p>\n</blockquote>",
        "id": 385558032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692228747
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1581535271\">PR review</a>:</p>\n<blockquote>\n<p>This is looking great! I just had two questions before we merge.</p>\n</blockquote>",
        "id": 385558033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692228748
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296513777\">PR review comment</a>:</p>\n<blockquote>\n<p>What do you think about renaming this module so that it's not colliding with a keyword? Maybe <code>types.rs</code> instead?</p>\n</blockquote>",
        "id": 385558034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692228748
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296510342\">PR review comment</a>:</p>\n<blockquote>\n<p>Does this need to be uncommented?</p>\n</blockquote>",
        "id": 385558035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692228748
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1581626051\">PR review</a>.</p>",
        "id": 385573035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235074
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577349\">PR review comment</a>:</p>\n<blockquote>\n<p>Eduardo mentioned this on zulip - we are removing it as a module runtime option in the CLI for now, and will re-enable it as part of the component linker once streams &amp; pollables are aligned with wasmtime-wasi, and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6836\">https://github.com/bytecodealliance/wasmtime/pull/6836</a> lands.</p>\n<p>The fix for now is to uncomment everything and <code>bail</code> on line 769 instead.</p>\n</blockquote>",
        "id": 385573037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235075
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1581626200\">PR review</a>.</p>",
        "id": 385573099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235088
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577443\">PR review comment</a>:</p>\n<blockquote>\n<p>We really should do that, but I think it can be done in a follow up PR.</p>\n</blockquote>",
        "id": 385573100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235089
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1581626422\">PR review</a>.</p>",
        "id": 385573342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1581626422\">PR review</a>.</p>",
        "id": 385573343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577593\">PR review comment</a>:</p>",
        "id": 385573344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577660\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        #[cfg(not(feature = \"wasi-http\"))]\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 385573345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577809\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        }\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 385573346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577740\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 385573347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577860\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        #[cfg(feature = \"wasi-http\")]\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 385573348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296578248\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        bail!(\"wasi-http support will be swapped over to component CLI support soon\");\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 385573349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296577925\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 385573350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296578297\">PR review comment</a>:</p>",
        "id": 385573351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235229
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#discussion_r1296578354\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        }\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 385573352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235230
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235249
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235260
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235268
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235282
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235292
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235300
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235310
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235320
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235330
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195#pullrequestreview-1581629635\">PR review</a>.</p>",
        "id": 385573658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235389
    },
    {
        "content": "<p>pchickey has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385573673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692235396
    },
    {
        "content": "<p>pchickey has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385643350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692267494
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385643351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692267494
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385715385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692291012
    },
    {
        "content": "<p>pchickey has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385716079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692291281
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385721552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692293372
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385733052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692298280
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385751293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692305900
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385757973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692308581
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385762360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692311250
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385763681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692312080
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385764195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692312410
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385764896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692312834
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385766469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692313793
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385769509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692315690
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385773103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692317787
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385778763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692319553
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385785788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692321417
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385796114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692324721
    },
    {
        "content": "<p>elliottt has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385796223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692324747
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6195\">PR #6195</a>.</p>",
        "id": 385808349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692329645
    }
]