[
    {
        "content": "<p><a href=\"https://github.com/Userzxcvbvnm\">Userzxcvbvnm</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8815\">Issue #8815</a>.</p>",
        "id": 444852439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718448260
    },
    {
        "content": "<p>Userzxcvbvnm opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8815\">issue #8815</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">print_file_size</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fstat</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">st</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file size failed.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file size: %ld bytes.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">fd_allocate_00030_gxX49</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function fd_allocate_00030_gxX49</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">posix_fallocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">406</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Space allocation in file successful.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Error allocating space in file.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"s\">\"hardfile_1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_WRONLY</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_APPEND</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Return from main if get_fd failed</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">print_file_size</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">fd_allocate_00030_gxX49</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">print_file_size</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, file hardfile_1 exists, 'hardfile_1' -&gt; 'subdir_1/subdir_1/subfile_2'and the file size is 93.)<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">hardfile_1</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">93</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_allocate_00030_gxX49</span>\n<span class=\"n\">Space</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">successful</span><span class=\"p\">.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">406</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>This is what WAMR and WasmEdge do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">hardfile_1</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">93</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_allocate_00030_gxX49</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">allocating</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">93</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>wasmtime fail to allocate space and the file size do not change.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 444852440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718448261
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8815\">issue #8815</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">print_file_size</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fstat</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">st</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file size failed.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file size: %ld bytes.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">fd_allocate_00030_gxX49</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function fd_allocate_00030_gxX49</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">posix_fallocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">406</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Space allocation in file successful.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Error allocating space in file.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"s\">\"hardfile_1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_WRONLY</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_APPEND</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Return from main if get_fd failed</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">print_file_size</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">fd_allocate_00030_gxX49</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">print_file_size</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, file hardfile_1 exists, 'hardfile_1' -&gt; 'subdir_1/subdir_1/subfile_2'and the file size is 93.)<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">hardfile_1</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">93</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_allocate_00030_gxX49</span>\n<span class=\"n\">Space</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">successful</span><span class=\"p\">.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">406</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>This is what WAMR and WasmEdge do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">hardfile_1</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">93</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_allocate_00030_gxX49</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">allocating</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">93</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>wasmtime fail to allocate space and the file size do not change.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 444889428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718473674
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8815#issuecomment-2170421866\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8815\">issue #8815</a>:</p>\n<blockquote>\n<p>This is a duplicate of #8814.</p>\n</blockquote>",
        "id": 444889429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718473674
    }
]