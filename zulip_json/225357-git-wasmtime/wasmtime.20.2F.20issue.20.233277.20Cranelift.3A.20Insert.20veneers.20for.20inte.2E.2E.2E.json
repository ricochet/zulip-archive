[
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3277\">issue #3277</a>:</p>\n<blockquote>\n<p>More details coming soon, reserving an issue number to write in the code...</p>\n</blockquote>",
        "id": 251606078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630520635
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3277\">issue #3277</a>:</p>\n<blockquote>\n<p>More details coming soon, reserving an issue number to write in the code...</p>\n</blockquote>",
        "id": 251606079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630520635
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3277\">issue #3277</a>:</p>\n<blockquote>\n<p>More details coming soon, reserving an issue number to write in the code...</p>\n</blockquote>",
        "id": 251606081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630520635
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3277\">issue #3277</a>:</p>\n<blockquote>\n<p>More details coming soon, reserving an issue number to write in the code...</p>\n</blockquote>",
        "id": 251606082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630520635
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3277\">issue #3277</a>:</p>\n<blockquote>\n<p>This issue is intended to track <a href=\"https://github.com/bytecodealliance/wasmtime/blob/1532516a363eed88b5a36726a1710411a9883049/cranelift/codegen/src/machinst/buffer.rs#L1278-L1310\">this FIXME in the code</a> which specifically relates to how inter-function relative calls, used for the first time in Wasmtime in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3275\">https://github.com/bytecodealliance/wasmtime/pull/3275</a>, have limited jump ranges (especially on AArch64 with 26-bit jumps), and may need fixups.</p>\n<p>Today if a compiled function on AArch64 is greater than 64MB in size then it runs the risk of panicking when \"linking\" if it needs to call a function defined after that function. The <code>MachBuffer</code> used when assembling the function does not keep track of relative calls and where they are, instead it just assumes all relocations will still work once the function is fully generated.</p>\n<p>The fix for this issue will be introducing the notion of a permanently unresolved label in <code>MachBuffer</code>. This label would then be used for relocations which are recognized as a <code>LabelUse</code> (probably via the <code>LabelUse::from_reloc</code> function). The <code>MachBuffer</code> would automatically insert veneers for these <code>LabelUse</code> items and, at the end of a function, would take all the remaining <code>LabelUse</code> items and generate relocations for them.</p>\n</blockquote>",
        "id": 251607246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630521075
    }
]