[
    {
        "content": "<p><a href=\"https://github.com/NotAFlyingGoose\">NotAFlyingGoose</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">Issue #8852</a>.</p>",
        "id": 445935948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718911684
    },
    {
        "content": "<p><a href=\"https://github.com/NotAFlyingGoose\">NotAFlyingGoose</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">Issue #8852</a>.</p>",
        "id": 445935949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718911684
    },
    {
        "content": "<p>NotAFlyingGoose opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">issue #8852</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">sarg</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">apple_aarch64</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">apple_aarch64</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">align</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">sarg</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"nc\">apple_aarch64</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">sig0</span>\n\n<span class=\"n\">block0</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">42</span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_addr</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>I've created a MRE <a href=\"https://github.com/NotAFlyingGoose/cranelift-jit-aggr-args\">here</a></p>\n<p>The basic issue is caused when declaring a function with <code>AbiParam::special(ptr_ty, ArgumentPurpose::StructArgument(aggr_pointee_size))</code> as a parameter.</p>\n<p>This is not an issue with <code>cranelift_object</code>. This assertion failure specifically happens in <code>cranelift_jit</code></p>\n<h3>Expected Results</h3>\n<p>I expected the above MRE to compile and print the number 42 to the screen.<br>\nThis happens when using x86, <code>cranelift_object</code>, or not using <code>ArgumentPurpose::StructArgument</code>.<br>\nWhen using A64, <code>cranelift_jit</code>, and <code>ArgumentPurpose::StructArgument</code>, cranelift panics</p>\n<h3>Actual Results</h3>\n<p>When calling <code>module.finalize_definitions()</code>, the MRE reaches an assertion failure</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">goose</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.109.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">compiled_blob</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">90</span><span class=\"p\">:</span><span class=\"mi\">21</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">   </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">rust_begin_unwind</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mi\">129</span><span class=\"n\">f3b9964af4d4a709d1383930ade12dfe7c081</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">std</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">652</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">   </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">core</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">panic_fmt</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mi\">129</span><span class=\"n\">f3b9964af4d4a709d1383930ade12dfe7c081</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">72</span><span class=\"p\">:</span><span class=\"mi\">14</span>\n<span class=\"w\">   </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">core</span><span class=\"p\">::</span><span class=\"n\">panicking</span><span class=\"p\">::</span><span class=\"n\">panic</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mi\">129</span><span class=\"n\">f3b9964af4d4a709d1383930ade12dfe7c081</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">146</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">   </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cranelift_jit</span><span class=\"p\">::</span><span class=\"n\">compiled_blob</span><span class=\"p\">::</span><span class=\"n\">CompiledBlob</span><span class=\"p\">::</span><span class=\"n\">perform_relocations</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">goose</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.109.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">compiled_blob</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">90</span><span class=\"p\">:</span><span class=\"mi\">21</span>\n<span class=\"w\">   </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cranelift_jit</span><span class=\"p\">::</span><span class=\"n\">backend</span><span class=\"p\">::</span><span class=\"n\">JITModule</span><span class=\"p\">::</span><span class=\"n\">finalize_definitions</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">goose</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.109.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">475</span><span class=\"p\">:</span><span class=\"mi\">13</span>\n<span class=\"w\">   </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cl_aggr_args_mac</span><span class=\"p\">::</span><span class=\"n\">main</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">41</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">   </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">core</span><span class=\"p\">::</span><span class=\"n\">ops</span><span class=\"p\">::</span><span class=\"n\">function</span><span class=\"p\">::</span><span class=\"nb\">FnOnce</span><span class=\"p\">::</span><span class=\"n\">call_once</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mi\">129</span><span class=\"n\">f3b9964af4d4a709d1383930ade12dfe7c081</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ops</span><span class=\"o\">/</span><span class=\"n\">function</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">250</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"w\"> </span><span class=\"nc\">details</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">omitted</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"n\">full</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">verbose</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">.</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: I just updated the MRE to 0.109 this morning and the error is still present</p>\n<p>Operating system: macOS 14.3.1</p>\n<p>Architecture: Apple M2 (Arm64)<br>\nIt's important to note that this ONLY occurs on Arm64, which makes sense as that's where the assertion failure is.<br>\nThe MRE should work as expected on x86.</p>\n<h3>Extra Info</h3>\n<p>The exact line in the MRE to look at is <a href=\"https://github.com/NotAFlyingGoose/cranelift-jit-aggr-args/blob/822842b5ddb5ccc7f70a1dd1530e78b2a07719ed/src/main.rs#L152-L153\">main.rs:152</a></p>\n</blockquote>",
        "id": 445935953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718911684
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852#issuecomment-2181400980\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">issue #8852</a>:</p>\n<blockquote>\n<p>You may be interested in the topic at <a href=\"#narrow/stream/217117-cranelift/topic/.E2.9C.94.20How.20to.20properly.20use.20ArgumentPurpose.3A.3AStructArgument.3F\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/.E2.9C.94.20How.20to.20properly.20use.20ArgumentPurpose.3A.3AStructArgument.3F</a></p>\n<p>tl;dr: <code>StructArgument</code> should not be used on arm64. Also</p>\n<blockquote>\n<p>Just like LLVM, Cranelift only handles the lower half of the calling convention. The upper half which lowers C types is required to be implemented by the frontend. You can find the rust implementations of this for various architectures at <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/abi/call\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/abi/call</a> This code is shared by the LLVM, GCC and Cranelift backends of rustc.</p>\n</blockquote>\n</blockquote>",
        "id": 445938313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718912390
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852#issuecomment-2181404029\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">issue #8852</a>:</p>\n<blockquote>\n<p>Also if you control the calling convention on both sides, I strongly suggest avoiding <code>StructArgument</code> entirely and just passing pointers if you need to pass a struct as argument. <code>StructArgument</code> primarily exists for calling with native C functions that take a struct as argument on architectures where this is done by passing the struct at a fixed stack offset rather than by passing a pointer.</p>\n</blockquote>",
        "id": 445938649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718912520
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852#issuecomment-2181404029\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">issue #8852</a>:</p>\n<blockquote>\n<p>Also if you control the calling convention on both sides, I strongly suggest avoiding <code>StructArgument</code> entirely and just passing pointers if you need to pass a struct as argument. <code>StructArgument</code> primarily exists for calling with native C functions that take a struct as argument on architectures where this is done by passing the struct at a fixed stack offset rather than by passing a pointer.</p>\n<p>Edit: Seems like you actually want compatibility with native C functions. In that case you do actually need to reimplement the target specific lowerings as found at <a href=\"https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/abi/call\">https://github.com/rust-lang/rust/blob/master/compiler/rustc_target/src/abi/call</a> yourself.</p>\n</blockquote>",
        "id": 445938870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718912595
    },
    {
        "content": "<p>NotAFlyingGoose <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852#issuecomment-2183540945\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">issue #8852</a>:</p>\n<blockquote>\n<p>Thank you! This is very helpful!</p>\n<p>In any case, if <code>StructArgument</code> isn't meant to be used on a64 then there should probably be a better error message than an assertion failure. Either that or something else should be done. The code <em>does</em> end up compiling when using cranelift_object, so the panic in cranelift_jit should probably be fixed.</p>\n</blockquote>",
        "id": 446185031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719008805
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852#issuecomment-2184076514\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8852\">issue #8852</a>:</p>\n<blockquote>\n<p>I just noticed that the assertion failure is unrelated to <code>StructArgument</code>. It is the assertion at <a href=\"https://github.com/bytecodealliance/wasmtime/blob/81efaa738419c6e2078e4ad6d14df1e1461d415f/cranelift/jit/src/compiled_blob.rs#L90\">https://github.com/bytecodealliance/wasmtime/blob/81efaa738419c6e2078e4ad6d14df1e1461d415f/cranelift/jit/src/compiled_blob.rs#L90</a> I'm not sure when this assertion fires though.</p>\n</blockquote>",
        "id": 446286558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719070691
    }
]