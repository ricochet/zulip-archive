[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5008\">issue #5008</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Support the <code>tls_value</code> instruction on riscv64</p>\n<h4>Benefit</h4>\n<p>Necessary for cg_clif to implement thread local storage.</p>\n<h4>Implementation</h4>\n<p><a href=\"https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc#global-dynamic\">https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc#global-dynamic</a> shows the instruction sequence with all relocation necessary for performing a tls access with the global dynamic tls model (the most general model). <code>__tls_get_addr</code> here is just a regular function following the riscv C abi. See <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2986f6b0fffd576a2ba88a1fc6cb2db959a1f9e8/cranelift/codegen/src/isa/x64/inst/emit.rs#L3096-L3123\">https://github.com/bytecodealliance/wasmtime/blob/2986f6b0fffd576a2ba88a1fc6cb2db959a1f9e8/cranelift/codegen/src/isa/x64/inst/emit.rs#L3096-L3123</a> as an example implementation for x86_64 (different instruction sequence, but same principle)</p>\n<h4>Alternatives</h4>\n<p>None</p>\n<p>cc @yuyang-ok</p>\n</blockquote>",
        "id": 302322873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664908386
    },
    {
        "content": "<p>elliottt labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5008\">issue #5008</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Support the <code>tls_value</code> instruction on riscv64</p>\n<h4>Benefit</h4>\n<p>Necessary for cg_clif to implement thread local storage.</p>\n<h4>Implementation</h4>\n<p><a href=\"https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc#global-dynamic\">https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc#global-dynamic</a> shows the instruction sequence with all relocation necessary for performing a tls access with the global dynamic tls model (the most general model). <code>__tls_get_addr</code> here is just a regular function following the riscv C abi. See <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2986f6b0fffd576a2ba88a1fc6cb2db959a1f9e8/cranelift/codegen/src/isa/x64/inst/emit.rs#L3096-L3123\">https://github.com/bytecodealliance/wasmtime/blob/2986f6b0fffd576a2ba88a1fc6cb2db959a1f9e8/cranelift/codegen/src/isa/x64/inst/emit.rs#L3096-L3123</a> as an example implementation for x86_64 (different instruction sequence, but same principle)</p>\n<h4>Alternatives</h4>\n<p>None</p>\n<p>cc @yuyang-ok</p>\n</blockquote>",
        "id": 319838869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673030278
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5008#issuecomment-1752034287\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5008\">issue #5008</a>:</p>\n<blockquote>\n<p>This has been implemented as part of #7003</p>\n</blockquote>",
        "id": 395544662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696773251
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5008\">issue #5008</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Support the <code>tls_value</code> instruction on riscv64</p>\n<h4>Benefit</h4>\n<p>Necessary for cg_clif to implement thread local storage.</p>\n<h4>Implementation</h4>\n<p><a href=\"https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc#global-dynamic\">https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-elf.adoc#global-dynamic</a> shows the instruction sequence with all relocation necessary for performing a tls access with the global dynamic tls model (the most general model). <code>__tls_get_addr</code> here is just a regular function following the riscv C abi. See <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2986f6b0fffd576a2ba88a1fc6cb2db959a1f9e8/cranelift/codegen/src/isa/x64/inst/emit.rs#L3096-L3123\">https://github.com/bytecodealliance/wasmtime/blob/2986f6b0fffd576a2ba88a1fc6cb2db959a1f9e8/cranelift/codegen/src/isa/x64/inst/emit.rs#L3096-L3123</a> as an example implementation for x86_64 (different instruction sequence, but same principle)</p>\n<h4>Alternatives</h4>\n<p>None</p>\n<p>cc @yuyang-ok</p>\n</blockquote>",
        "id": 395544663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696773251
    }
]