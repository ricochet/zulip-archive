[
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>:</p>\n<blockquote>\n<p>Check both the printed vcode and capstone output in <code>precise-output</code> tests. This lets us continue to rely on printing backend-specific pseudoinstructions in the VCode output (for instance <code>br_table</code> on x64), while also checking the final output of the machinst buffer.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 327894292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676417396
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>:</p>\n<blockquote>\n<p>Use <code>capstone</code> when checking precise-output test expectations. This lets us continue to rely on printing backend-specific pseudoinstructions in the VCode output for debuggign purposes (for instance <code>br_table</code> on x64), while also checking the final output of the machinst buffer in filetests.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 327894459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676417453
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 327899633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676420260
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298626482\">PR review</a>.</p>",
        "id": 327900143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676420517
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298626482\">PR review</a>.</p>",
        "id": 327900144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676420517
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106522975\">PR review comment</a>:</p>\n<blockquote>\n<p>Potential future improvement below (I don't want to necessarily block the PR on this!): the below disassembly logic is largely similar to <code>MachBuffer</code>'s now, except that it prints bytes too, and doesn't include relocs, and currently has just a slice-of-<code>u8</code> here; we could make those format differences options, wire through a <code>MachBuffer</code> somehow, and delegate to the common code here.</p>\n</blockquote>",
        "id": 327900145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676420517
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298634739\">PR review</a>.</p>",
        "id": 327901730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421272
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106529969\">PR review comment</a>:</p>\n<blockquote>\n<p>I like that, and would be happy to push that change through before merging this <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 327901731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421272
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298584503\">PR review</a>.</p>",
        "id": 327902777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421846
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298584503\">PR review</a>.</p>",
        "id": 327902778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421846
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106494496\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think it's possible to build an aarch64 <code>TargetIsa</code> with <code>Architecture::Arm</code>, is it? Same for x64 and <code>X86_32</code>. I can see that you're trying to preserve valid code that was in clif-util, but I think we should just delete these unreachable branches. When there's a 32-bit ARM or x86 backend it'll be easy enough to add these cases again in the appropriate <code>TargetIsa</code>.</p>\n<p>I'm inclined not to even match on <code>self.triple().architecture</code> except if we need to know a specific architectural detail to configure the disassembler correctly. The <code>arm.is_thumb()</code> check is a good example of where that would be useful, but I'm proposing to delete that whole branch anyway.</p>\n</blockquote>",
        "id": 327902780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106490051\">PR review comment</a>:</p>\n<blockquote>\n<p>At this point I think cranelift-codegen only needs <code>anyhow</code> for <code>disassemble</code>, and it seems like a shame to pull it in just for that. Maybe <code>disassemble</code> should return <code>capstone::Error</code> as well.</p>\n<p>Also perhaps this comment should mention <code>CompiledCode::disassemble</code> in addition to the existing mention of <code>TargetIsa::to_capstone</code>.</p>\n</blockquote>",
        "id": 327902781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106496919\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think cranelift-filetests needs to depend directly on <code>capstone</code>, now that you've moved everything important to cranelift-codegen. (Which turned out really well, I think: good call on putting <code>disassemble</code> there too!)</p>\n</blockquote>",
        "id": 327902782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106489202\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this tab is what's making the output... jittery?</p>\n<p>Can we match the existing format instead? Looks like... no, because the x64 backend padded the mnemonic out to 7 characters, while the other backends I think all use a single space. I'm leaning toward a single space here.</p>\n<p>If we print the space only when <code>i.op_str()</code> is <code>Some</code>, that'll reduce the filetests diff for instructions that don't have any operands, like <code>ret</code>.</p>\n</blockquote>",
        "id": 327902783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106528928\">PR review comment</a>:</p>\n<blockquote>\n<p>If I'm reading the documentation correctly you can just ask the instruction for its length, you don't need to get its bytes first.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            let end = i.address() + i.len() as u64;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 327902784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106509415\">PR review comment</a>:</p>\n<blockquote>\n<p>It looks like the only use of <code>params</code> in this function is to borrow it, so you could make this argument a borrow as well. Then in <code>run</code> I think you can pass <code>&amp;comp_ctx.func.params</code> instead of having to clone the params.</p>\n</blockquote>",
        "id": 327902785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106505135\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm wondering if you can minimize the filetest diffs by setting the disassembly syntax. I think it's defaulting to Intel syntax and we previously mostly followed AT&amp;T syntax, right? Looks like you can call <code>builder.syntax(arch::x86::ArchSyntax::Att)</code> to request that.</p>\n</blockquote>",
        "id": 327902786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106529786\">PR review comment</a>:</p>\n<blockquote>\n<p>The format string is optional in the <code>writeln</code> macro; if you just want a newline you can leave it out.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            writeln!(buf)?;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 327902787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421847
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298642049\">PR review</a>.</p>",
        "id": 327903008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421975
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106535605\">PR review comment</a>:</p>\n<blockquote>\n<p>I tried this and got a compilation error as <code>len</code> is private. Perhaps it's public in a newer version of <code>capstone</code>?</p>\n</blockquote>",
        "id": 327903009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676421975
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298642778\">PR review</a>.</p>",
        "id": 327903119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422048
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106536177\">PR review comment</a>:</p>\n<blockquote>\n<p>Nice!</p>\n</blockquote>",
        "id": 327903120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422048
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298643652\">PR review</a>.</p>",
        "id": 327903290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422138
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106536867\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I was looking at the docs for 0.11 and we're using 0.9, which indeed didn't have it. Nevermind!</p>\n</blockquote>",
        "id": 327903291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422138
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298644514\">PR review</a>.</p>",
        "id": 327903485,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422223
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106537507\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh, there's a borrow checker error here if I don't clone :(</p>\n</blockquote>",
        "id": 327903486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422223
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298646306\">PR review</a>.</p>",
        "id": 327903799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422395
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106538871\">PR review comment</a>:</p>\n<blockquote>\n<p>Huh, I may have misread something. Did you access the <code>func</code> through <code>comp_ctx</code>, where it's been moved?</p>\n</blockquote>",
        "id": 327903800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422396
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298646483\">PR review</a>.</p>",
        "id": 327903827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422411
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106539018\">PR review comment</a>:</p>\n<blockquote>\n<p>I like the switch back to AT&amp;T, as it mirrors the MInst pretty-printing for x64.</p>\n</blockquote>",
        "id": 327903828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422412
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298647536\">PR review</a>.</p>",
        "id": 327903999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422509
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106539844\">PR review comment</a>:</p>\n<blockquote>\n<p>Can <code>capstone::Error</code> wrap the error potentially raised by <code>write!</code>? That's currently the only thing holding back removing <code>anyhow</code> here.</p>\n</blockquote>",
        "id": 327904000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422509
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298650093\">PR review</a>.</p>",
        "id": 327904394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422747
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106541711\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm fine with a single space, though it's too bad we can't get the consistent alignment :)</p>\n</blockquote>",
        "id": 327904395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422748
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298651582\">PR review</a>.</p>",
        "id": 327904606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422878
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106542794\">PR review comment</a>:</p>\n<blockquote>\n<p><code>compile</code> takes a <code>mut self</code>, so <code>comp_ctx</code> is no longer available at that point.</p>\n</blockquote>",
        "id": 327904607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422879
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298652688\">PR review</a>.</p>",
        "id": 327904759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422978
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106543589\">PR review comment</a>:</p>\n<blockquote>\n<p>I misread my earlier error, it's not taking a <code>mut self</code>, but a <code>&amp;mut self</code>. Let me investigate a bit.</p>\n</blockquote>",
        "id": 327904761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676422978
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298655047\">PR review</a>.</p>",
        "id": 327905143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423209
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106545283\">PR review comment</a>:</p>\n<blockquote>\n<p>There's a <code>capstone::Error::CustomError(&amp;'static str)</code> variant. Since there's no data attached to a <code>fmt::Error</code> (the <code>Display</code> impl currently always returns \"an error occurred when formatting an argument\") that would work. But yeah, I forgot about the <code>write</code> invocations.</p>\n</blockquote>",
        "id": 327905144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423209
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298656259\">PR review</a>.</p>",
        "id": 327905330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423330
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106546200\">PR review comment</a>:</p>\n<blockquote>\n<p>Okay, it's not consumed by <code>compile</code>, but the mutable borrow lasts as long as <code>compiled_code</code>, which is causing the borrow error.</p>\n</blockquote>",
        "id": 327905331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423330
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298657154\">PR review</a>.</p>",
        "id": 327905497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423416
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106546874\">PR review comment</a>:</p>\n<blockquote>\n<p>Good catch!</p>\n</blockquote>",
        "id": 327905498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423417
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298659285\">PR review</a>.</p>",
        "id": 327905778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423632
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106548402\">PR review comment</a>:</p>\n<blockquote>\n<p>I like that!</p>\n</blockquote>",
        "id": 327905779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676423633
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 327906703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676424289
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 327907315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676424776
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298677414\">PR review</a>.</p>",
        "id": 327908006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676425327
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106561174\">PR review comment</a>:</p>\n<blockquote>\n<p>This cleaned up 10k lines of diff! Thanks for the suggestion :D</p>\n</blockquote>",
        "id": 327908007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676425328
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298686066\">PR review</a>.</p>",
        "id": 327910650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298686066\">PR review</a>.</p>",
        "id": 327910651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106567423\">PR review comment</a>:</p>\n<blockquote>\n<p>Here are more mysterious disappearing blocks.</p>\n</blockquote>",
        "id": 327910652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106566870\">PR review comment</a>:</p>\n<blockquote>\n<p>Huh, why did this output disappear?</p>\n</blockquote>",
        "id": 327910653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106574006\">PR review comment</a>:</p>\n<blockquote>\n<p>For <code>pextrb/w/d</code> we've been pretty-printing the destination register as the 64-bit <code>%rax</code> but it appears that it should have been the 32-bit <code>%eax</code>. Does that mean we've been leaving the high 32-bits uninitialized, and if so, is that an issue? I don't remember the x86-64 rules for when registers get silently zero-extended for you.</p>\n</blockquote>",
        "id": 327910654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106570415\">PR review comment</a>:</p>\n<blockquote>\n<p>Interesting, Capstone believes we printed the <code>andn</code> operands in reverse order. Could you double-check that and fix the pretty-printer if the disassembler is correct?</p>\n</blockquote>",
        "id": 327910655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106568783\">PR review comment</a>:</p>\n<blockquote>\n<p>I feel like maybe the disassembler got confused here due to an inline constant. There doesn't appear to be a Capstone flag for skipping unknown instructions on s390, unlike for other targets. Maybe @uweigand can weigh in on whether this disassembly result is nonsense or is actually equivalent to the previous output.</p>\n</blockquote>",
        "id": 327910656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106576269\">PR review comment</a>:</p>\n<blockquote>\n<p>Now that <code>params</code> is a borrow, it doesn't need to be borrowed again here. I guess Rust auto-dereferenced it for you?</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    let buf = compiled_code.buffer.disassemble(Some(params), &amp;cs)?;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 327910657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427397
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298702618\">PR review</a>.</p>",
        "id": 327910899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427590
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106578915\">PR review comment</a>:</p>\n<blockquote>\n<p>The general rule on x86-64 is that instructions that write the low 32 bits of a 64-bit GPR clear the high 32 bits; I suspect this difference here is just one of notational convention (i.e., there's not actually a bit selecting rax vs eax that we're flipping).</p>\n</blockquote>",
        "id": 327910900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676427590
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298712351\">PR review</a>.</p>",
        "id": 327912051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676428532
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106585628\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 327912052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676428532
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298713669\">PR review</a>.</p>",
        "id": 327912210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676428667
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106586819\">PR review comment</a>:</p>\n<blockquote>\n<p>I followed the intel manual when I added support for <code>andn</code>; I must have inadvertently implemented the intel formatting for the instruction :)</p>\n</blockquote>",
        "id": 327912213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676428668
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298717879\">PR review</a>.</p>",
        "id": 327912787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429104
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106590137\">PR review comment</a>:</p>\n<blockquote>\n<p>If I switch back to intel syntax and regenerate this test output, I see the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">push</span><span class=\"w\"> </span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">andn</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">esi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">mov</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pop</span><span class=\"w\"> </span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span>\n</code></pre></div>\n<p>I'll update the pretty-printer in a separate PR <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 327912788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429104
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298721126\">PR review</a>.</p>",
        "id": 327913390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429450
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106592747\">PR review comment</a>:</p>\n<blockquote>\n<p>I enabled <code>skipdata</code> on s390x locally, and it fixed a lot of the missing test output. I'll push that change.</p>\n</blockquote>",
        "id": 327913392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429450
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 327913447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429490
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298723026\">PR review</a>.</p>",
        "id": 327913652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429640
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106594231\">PR review comment</a>:</p>\n<blockquote>\n<p>This should be fixed after enabling <code>skipdata</code> in <code>to_capstone</code> for s390x.</p>\n</blockquote>",
        "id": 327913654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429640
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1298723948\">PR review</a>.</p>",
        "id": 327913767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429730
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1106594993\">PR review comment</a>:</p>\n<blockquote>\n<p>This is fixed after enabling <code>skipdata</code> in <code>to_capstone</code> for s390x.</p>\n</blockquote>",
        "id": 327913768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676429730
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1300023553\">PR review</a>.</p>",
        "id": 328067161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676482140
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1107460569\">PR review comment</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/5789\">https://github.com/bytecodealliance/wasmtime/pull/5789</a></p>\n</blockquote>",
        "id": 328067166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676482140
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 328068475,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676482482
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 328089459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676488706
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 328130375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676505065
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a> from <code>trevor/capstone-output-filetests</code> to <code>main</code>.</p>",
        "id": 328130521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676505159
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#pullrequestreview-1300571469\">PR review</a>.</p>",
        "id": 328133412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676506818
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780#discussion_r1107879816\">PR review comment</a>:</p>\n<blockquote>\n<p>I looked into this, and it would be a bit more work than I'd like to tackle in this PR. I'll make a follow-up pr <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 328133413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676506818
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5780\">PR #5780</a>.</p>",
        "id": 328134823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676507712
    }
]