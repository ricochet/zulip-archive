[
    {
        "content": "<p>eduardomourar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>:</p>\n<blockquote>\n<p>This will fix the error one would get while trying to run the wasmtime CLI with <code>-S http</code> because the async functions were being added to the linker. Additionally, we will allow shadowing in linker when using WASI HTTP in order to prevent the following error:</p>\n<blockquote>\n<p>import of <code>wasi:clocks/wall-clock</code> defined twice</p>\n</blockquote>\n<p>Also, to prevent it from breaking in the future, a simple handcrafted test has been added to the CLI test suite.</p>\n</blockquote>",
        "id": 395208502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696581381
    },
    {
        "content": "<p><strong>eduardomourar</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a> as ready for review.</p>",
        "id": 395208510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696581385
    },
    {
        "content": "<p><strong>eduardomourar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395208514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696581386
    },
    {
        "content": "<p><strong>eduardomourar</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395208516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696581387
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395250321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696595622
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395258390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696598338
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1661898677\">PR review</a>.</p>",
        "id": 395263595,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696599961
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1661898677\">PR review</a>.</p>",
        "id": 395263596,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696599962
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348744245\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for adding this! This is unfortunately not really possible to change though and without the source used to generate this we can't feasibly change this over time. I think the best solution is to enable the <code>cli-tests</code> suite here to use programs from the <code>test-programs</code> crate. That's a larger refactoring though and probably best done in a separate PR, so it's ok to skip a test for this PR specifically and rely on local testing.</p>\n</blockquote>",
        "id": 395263597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696599962
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348742532\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it would be best if <code>allow_shadowing</code> was disabled because that's otherwise easy to accidentally run into issues.</p>\n<p>There's unfortunately not a great solution for the error you're running into here, so in the meantime I think it would be best to expose individual <code>add_to_linker</code> functions per-interface and only invoke the wasi-http-related ones here.</p>\n</blockquote>",
        "id": 395263598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696599962
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1661912439\">PR review</a>.</p>",
        "id": 395264619,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696600304
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348751136\">PR review comment</a>:</p>\n<blockquote>\n<p>i actually built the component out of the original core module <code>wasi-http</code> (which was handcrafted before in order to make it more maintainable).</p>\n</blockquote>",
        "id": 395264620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696600304
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1661918192\">PR review</a>.</p>",
        "id": 395265174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696600476
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348754553\">PR review comment</a>:</p>\n<blockquote>\n<p>i agree it will be very hard to keep it up-to-date while we are still iterating over WASI. maybe we can keep the original core module and build a component on the fly with wasm-tools?</p>\n</blockquote>",
        "id": 395265175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696600476
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1661923314\">PR review</a>.</p>",
        "id": 395265580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696600627
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348757574\">PR review comment</a>:</p>\n<blockquote>\n<p>alright, i can do that</p>\n</blockquote>",
        "id": 395265581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696600628
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395267033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696601050
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1661945667\">PR review</a>.</p>",
        "id": 395267711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696601304
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348771597\">PR review comment</a>:</p>\n<blockquote>\n<p>done. as it is only temporary, i exposed function only in sync module and kept out of docs.</p>\n</blockquote>",
        "id": 395267712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696601304
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1661974197\">PR review</a>.</p>",
        "id": 395270334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696602105
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348789378\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes that makes sense but it's not clear to me, for example, how to regenerate this test. This means that if there's an update it would be quite difficult to update this. Even the core module will change because the wasi-http interfaces might change.</p>\n<p>The \"real fix\" here is to use source code rather than compiled wat or wasm, but that would require further refactorings to provide the <code>test-programs</code> programs to the WASI CLI tests here. I think it's best to have no tests until that's done, and I don't think it would be too large of a refactoring so I can work on it after this PR lands.</p>\n</blockquote>",
        "id": 395270336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696602105
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662012405\">PR review</a>.</p>",
        "id": 395273750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696603088
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348810295\">PR review comment</a>:</p>\n<blockquote>\n<p>there is no real source code because it was done by hand. it is not hard to make it, though. i just wanted to keep it very simple without a server-side in the cli as it takes longer to run.</p>\n</blockquote>",
        "id": 395273752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696603088
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662022472\">PR review</a>.</p>",
        "id": 395274613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696603357
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348816410\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes that's all fine, but again I would personally prefer not to check in a large <code>*.wat</code> file which we don't know how to regenerate and change. I don't doubt that you've generated this from source, but there's no instructions in-tree about what the generation process is or what the source is. I think it's best to leave this out, manually test this PR, and I'll follow up with a better testing strategy to re-land this.</p>\n</blockquote>",
        "id": 395274614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696603357
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395277132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696604220
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662078408\">PR review</a>.</p>",
        "id": 395278311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696604587
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348844415\">PR review comment</a>:</p>\n<blockquote>\n<p>just added a test to <code>test-programs</code> called <code>outbound_request_response_build</code> that does not require a server. i just don't know how to find the path to reference in the wasmtime cli tests file.</p>\n</blockquote>",
        "id": 395278312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696604587
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395280081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696605143
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662119899\">PR review</a>.</p>",
        "id": 395281571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696605675
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348867766\">PR review comment</a>:</p>\n<blockquote>\n<p>Hm ok so in my opinion this PR can't land with this <code>*.wat</code> test. This is even if it's generated from the test you've added in-tree. This is local knowledge on this PR's comment which will be lost basically as soon as the PR lands, meaning that if you or I aren't the next person to touch this file, which is quite likely, then they'll not know what to do. To solve this dilemma one of a few things need to happen:</p>\n<ul>\n<li>This <code>*.wat</code> test should be deleted, temporarily. I'll send a follow-up PR to enable referencing wasms from <code>test-programs</code> here in this test suite.</li>\n<li>You should, in this PR, delete this <code>*.wat</code> and implement the previous bullet in this PR.</li>\n<li>Block this PR on me doing the above refactor, then rebase on it and reference the <code>test-programs</code>-generated wasm file.</li>\n</ul>\n<p>Personally I prefer the first option because, as you pointed out, we'll want to backport this. In that sense I'd rather not block this PR. I'm happy to defer to you though on which route you'd prefer.</p>\n</blockquote>",
        "id": 395281572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696605675
    },
    {
        "content": "<p>eduardomourar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395283181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696606187
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662140898\">PR review</a>.</p>",
        "id": 395283418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696606257
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348880212\">PR review comment</a>:</p>\n<blockquote>\n<p>in think option 1 is the best one too. </p>\n</blockquote>",
        "id": 395283421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696606257
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662144172\">PR review</a>.</p>",
        "id": 395283837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696606372
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348882204\">PR review comment</a>:</p>\n<blockquote>\n<p>i have removed the wat file and ignored that particular test case. let me know and i can help re-enabling the test back when ready</p>\n</blockquote>",
        "id": 395283839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696606372
    },
    {
        "content": "<p>eduardomourar edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>:</p>\n<blockquote>\n<p>This will fix the error one would get while trying to run the wasmtime CLI with <code>-S http</code> because the async functions were being added to the linker. Additionally, we will expose only the necessary functions to <del>allow shadowing in</del> linker when using WASI HTTP in order to prevent the following error:</p>\n<blockquote>\n<p>import of <code>wasi:clocks/wall-clock</code> defined twice</p>\n</blockquote>\n<p><del>Also, to prevent it from breaking in the future, a simple handcrafted test has been added to the CLI test suite.</del></p>\n</blockquote>",
        "id": 395284380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696606511
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662286114\">PR review</a>.</p>",
        "id": 395296002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696610382
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662286114\">PR review</a>.</p>",
        "id": 395296003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696610383
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348963764\">PR review comment</a>:</p>\n<blockquote>\n<p>For the future this isn't necessary as <code>println!</code> should work in guests. If it doesn't that's a bug we should document and fix.</p>\n</blockquote>",
        "id": 395296004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696610383
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662303168\">PR review</a>.</p>",
        "id": 395297324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696610988
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348973437\">PR review comment</a>:</p>\n<blockquote>\n<p>If I use println, it gets translated to wasi preview1 but I wanted to exercise the preview2 functions</p>\n</blockquote>",
        "id": 395297326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696610988
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662313354\">PR review</a>.</p>",
        "id": 395298248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696611375
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348980304\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah that's sort of right but also not quite accurate. It's correct that <code>println!</code> uses the Rust standard library which uses wasi preview1, but that's adapted to preview2 with the adapter, meaning that <code>println!</code> ends up calling the same preview2 function this one calls.</p>\n</blockquote>",
        "id": 395298249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696611375
    },
    {
        "content": "<p>eduardomourar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662316351\">PR review</a>.</p>",
        "id": 395298549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696611505
    },
    {
        "content": "<p>eduardomourar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1348982178\">PR review comment</a>:</p>\n<blockquote>\n<p>But not in the core module, right?</p>\n</blockquote>",
        "id": 395298552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696611505
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662467338\">PR review</a>.</p>",
        "id": 395301992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696613050
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1349096497\">PR review comment</a>:</p>\n<blockquote>\n<p>Sorry I'm not exactly sure what you mean, but when using <code>println!</code> the core module produced by rustc will refer to <code>wasi_snapshot_preview1::fd_write</code> if that's what you mean. That core import is then hooked up to the adapter, and the adatper imports preview2 instead.</p>\n</blockquote>",
        "id": 395301993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696613050
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167\">PR #7167</a>.</p>",
        "id": 395302324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696613217
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#discussion_r1349418647\">PR review comment</a>:</p>\n<blockquote>\n<p>To follow up here, <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7182\">https://github.com/bytecodealliance/wasmtime/pull/7182</a> is the refactoring I had in mind and <a href=\"https://github.com/bytecodealliance/wasmtime/blob/14418300cd98a942d15e383834f533680816ef91/tests/all/cli_tests.rs#L1250-L1268\">this</a> is the un-ignore of the test</p>\n</blockquote>",
        "id": 395348982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696640110
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7167#pullrequestreview-1662941542\">PR review</a>.</p>",
        "id": 395348985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696640110
    }
]