[
    {
        "content": "<p>pventuzelo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1506\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1506\">Issue #1506</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I found a bug during fuzzing wasmtime with cranelift backend and almost all features enabled in the config (specifically <code>config.debug_info(true)</code>). The bug seems to be related to generation of DWARF debugging.</p>\n<p>Maybe related to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1489\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1489\">https://github.com/bytecodealliance/wasmtime/issues/1489</a><br>\n@yurydelendik </p>\n<h1>Crash</h1>\n<div class=\"codehilite\"><pre><span></span>./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nStart debugging of wasmtime_all_cranelift\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace.\n</pre></div>\n\n\n<h1>What are the steps to reproduce the issue?</h1>\n<p>Download the crashing file: <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\" title=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\">assert_wasmtime_debug_simulated_dwarf.zip</a></p>\n<p>Testing piece of code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Strategy</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// read data from provided file</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read_contents_from_path</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]).</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">&quot;cannot read file content&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_threads</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_reference_types</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_simd</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_bulk_memory</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_multi_value</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">from_binary</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">data</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<h1>Which Wasmtime version / commit hash / branch are you using?</h1>\n<p>crates version: <code>wasmtime = \"0.15\"</code></p>\n<h1>BACKTRACE</h1>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span> ./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nstack backtrace:\n   <span class=\"m\">0</span>: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">11</span>: std::panicking::begin_panic\n             at /rustc/85976442558bf2d09cec3aa49c9c9ba86fb15c1f/src/libstd/panicking.rs:390\n  <span class=\"m\">12</span>: gimli::write::str::StringTable::add\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/&lt;::std::macros::panic macros&gt;:2\n<span class=\"o\">==</span>&gt;  <span class=\"m\">13</span>: wasmtime_debug::transform::simulate::generate_simulated_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/simulate.rs:293\n<span class=\"o\">==</span>&gt;  <span class=\"m\">14</span>: wasmtime_debug::transform::transform_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/mod.rs:107\n<span class=\"o\">==</span>&gt;  <span class=\"m\">15</span>: wasmtime_debug::emit_debugsections_image\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/lib.rs:82\n  <span class=\"m\">16</span>: wasmtime_jit::compiler::Compiler::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/compiler.rs:215\n  <span class=\"m\">17</span>: wasmtime_jit::instantiate::RawCompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:83\n  <span class=\"m\">18</span>: wasmtime_jit::instantiate::CompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:154\n  <span class=\"m\">19</span>: wasmtime::module::Module::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:366\n  <span class=\"m\">20</span>: wasmtime::module::Module::from_binary_unchecked\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:335\n  <span class=\"m\">21</span>: wasmtime::module::Module::from_binary\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:304\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">32</span>: main\n  <span class=\"m\">33</span>: __libc_start_main\n  <span class=\"m\">34</span>: _start\nnote: Some details are omitted, run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span>full<span class=\"sb\">`</span> <span class=\"k\">for</span> a verbose backtrace.\n</pre></div>\n\n\n</blockquote>",
        "id": 193874043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586858237
    },
    {
        "content": "<p>pventuzelo labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1506\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1506\">Issue #1506</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I found a bug during fuzzing wasmtime with cranelift backend and almost all features enabled in the config (specifically <code>config.debug_info(true)</code>). The bug seems to be related to generation of DWARF debugging.</p>\n<p>Maybe related to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1489\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1489\">https://github.com/bytecodealliance/wasmtime/issues/1489</a><br>\n@yurydelendik </p>\n<h1>Crash</h1>\n<div class=\"codehilite\"><pre><span></span>./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nStart debugging of wasmtime_all_cranelift\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace.\n</pre></div>\n\n\n<h1>What are the steps to reproduce the issue?</h1>\n<p>Download the crashing file: <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\" title=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\">assert_wasmtime_debug_simulated_dwarf.zip</a></p>\n<p>Testing piece of code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Strategy</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// read data from provided file</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read_contents_from_path</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]).</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">&quot;cannot read file content&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_threads</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_reference_types</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_simd</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_bulk_memory</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_multi_value</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">from_binary</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">data</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<h1>Which Wasmtime version / commit hash / branch are you using?</h1>\n<p>crates version: <code>wasmtime = \"0.15\"</code></p>\n<h1>BACKTRACE</h1>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span> ./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nstack backtrace:\n   <span class=\"m\">0</span>: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">11</span>: std::panicking::begin_panic\n             at /rustc/85976442558bf2d09cec3aa49c9c9ba86fb15c1f/src/libstd/panicking.rs:390\n  <span class=\"m\">12</span>: gimli::write::str::StringTable::add\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/&lt;::std::macros::panic macros&gt;:2\n<span class=\"o\">==</span>&gt;  <span class=\"m\">13</span>: wasmtime_debug::transform::simulate::generate_simulated_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/simulate.rs:293\n<span class=\"o\">==</span>&gt;  <span class=\"m\">14</span>: wasmtime_debug::transform::transform_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/mod.rs:107\n<span class=\"o\">==</span>&gt;  <span class=\"m\">15</span>: wasmtime_debug::emit_debugsections_image\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/lib.rs:82\n  <span class=\"m\">16</span>: wasmtime_jit::compiler::Compiler::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/compiler.rs:215\n  <span class=\"m\">17</span>: wasmtime_jit::instantiate::RawCompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:83\n  <span class=\"m\">18</span>: wasmtime_jit::instantiate::CompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:154\n  <span class=\"m\">19</span>: wasmtime::module::Module::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:366\n  <span class=\"m\">20</span>: wasmtime::module::Module::from_binary_unchecked\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:335\n  <span class=\"m\">21</span>: wasmtime::module::Module::from_binary\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:304\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">32</span>: main\n  <span class=\"m\">33</span>: __libc_start_main\n  <span class=\"m\">34</span>: _start\nnote: Some details are omitted, run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span>full<span class=\"sb\">`</span> <span class=\"k\">for</span> a verbose backtrace.\n</pre></div>\n\n\n</blockquote>",
        "id": 193874045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586858237
    },
    {
        "content": "<p>pventuzelo edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1506\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1506\">Issue #1506</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I found a reachable assertion (<a href=\"https://cwe.mitre.org/data/definitions/617.html\" title=\"https://cwe.mitre.org/data/definitions/617.html\">CWE-617</a>) during fuzzing wasmtime with cranelift backend and almost all features enabled in the config (specifically <code>config.debug_info(true)</code>). The bug seems to be related to generation of DWARF debugging.</p>\n<p>Maybe related to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1489\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1489\">https://github.com/bytecodealliance/wasmtime/issues/1489</a><br>\n@yurydelendik </p>\n<h1>Crash</h1>\n<div class=\"codehilite\"><pre><span></span>./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nStart debugging of wasmtime_all_cranelift\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace.\n</pre></div>\n\n\n<h1>What are the steps to reproduce the issue?</h1>\n<p>Download the crashing file: <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\" title=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\">assert_wasmtime_debug_simulated_dwarf.zip</a></p>\n<p>Testing piece of code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Strategy</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// read data from provided file</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read_contents_from_path</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]).</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">&quot;cannot read file content&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_threads</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_reference_types</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_simd</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_bulk_memory</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_multi_value</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">from_binary</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">data</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<h1>Which Wasmtime version / commit hash / branch are you using?</h1>\n<p>crates version: <code>wasmtime = \"0.15\"</code></p>\n<h1>BACKTRACE</h1>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span> ./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nstack backtrace:\n   <span class=\"m\">0</span>: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">11</span>: std::panicking::begin_panic\n             at /rustc/85976442558bf2d09cec3aa49c9c9ba86fb15c1f/src/libstd/panicking.rs:390\n  <span class=\"m\">12</span>: gimli::write::str::StringTable::add\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/&lt;::std::macros::panic macros&gt;:2\n<span class=\"o\">==</span>&gt;  <span class=\"m\">13</span>: wasmtime_debug::transform::simulate::generate_simulated_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/simulate.rs:293\n<span class=\"o\">==</span>&gt;  <span class=\"m\">14</span>: wasmtime_debug::transform::transform_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/mod.rs:107\n<span class=\"o\">==</span>&gt;  <span class=\"m\">15</span>: wasmtime_debug::emit_debugsections_image\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/lib.rs:82\n  <span class=\"m\">16</span>: wasmtime_jit::compiler::Compiler::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/compiler.rs:215\n  <span class=\"m\">17</span>: wasmtime_jit::instantiate::RawCompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:83\n  <span class=\"m\">18</span>: wasmtime_jit::instantiate::CompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:154\n  <span class=\"m\">19</span>: wasmtime::module::Module::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:366\n  <span class=\"m\">20</span>: wasmtime::module::Module::from_binary_unchecked\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:335\n  <span class=\"m\">21</span>: wasmtime::module::Module::from_binary\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:304\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">32</span>: main\n  <span class=\"m\">33</span>: __libc_start_main\n  <span class=\"m\">34</span>: _start\nnote: Some details are omitted, run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span>full<span class=\"sb\">`</span> <span class=\"k\">for</span> a verbose backtrace.\n</pre></div>\n\n\n</blockquote>",
        "id": 193874614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586858531
    },
    {
        "content": "<p>yurydelendik closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1506\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1506\">Issue #1506</a>:</p>\n<blockquote>\n<h1>Description</h1>\n<p>I found a reachable assertion (<a href=\"https://cwe.mitre.org/data/definitions/617.html\" title=\"https://cwe.mitre.org/data/definitions/617.html\">CWE-617</a>) during fuzzing wasmtime with cranelift backend and almost all features enabled in the config (specifically <code>config.debug_info(true)</code>). The bug seems to be related to generation of DWARF debugging.</p>\n<p>Maybe related to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1489\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1489\">https://github.com/bytecodealliance/wasmtime/issues/1489</a><br>\n@yurydelendik </p>\n<h1>Crash</h1>\n<div class=\"codehilite\"><pre><span></span>./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nStart debugging of wasmtime_all_cranelift\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nnote: run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"sb\">`</span> environment variable to display a backtrace.\n</pre></div>\n\n\n<h1>What are the steps to reproduce the issue?</h1>\n<p>Download the crashing file: <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\" title=\"https://github.com/bytecodealliance/wasmtime/files/4474549/assert_wasmtime_debug_simulated_dwarf.zip\">assert_wasmtime_debug_simulated_dwarf.zip</a></p>\n<p>Testing piece of code:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Strategy</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// read data from provided file</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">read_contents_from_path</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">args</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]).</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">&quot;cannot read file content&quot;</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">o</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">debug_info</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_threads</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_reference_types</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_simd</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_bulk_memory</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">wasm_multi_value</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">from_binary</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">data</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<h1>Which Wasmtime version / commit hash / branch are you using?</h1>\n<p>crates version: <code>wasmtime = \"0.15\"</code></p>\n<h1>BACKTRACE</h1>\n<div class=\"codehilite\"><pre><span></span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"m\">1</span> ./target/debug/debug_wasmtime_all_cranelift assert_wasmtime_debug_simulated_dwarf.wasm\nfile_to_process: <span class=\"s2\">&quot;assert_wasmtime_debug_simulated_dwarf.wasm&quot;</span>\nthread <span class=\"s1\">&#39;main&#39;</span> panicked at <span class=\"s1\">&#39;assertion failed: !bytes.contains(&amp;0)&#39;</span>, &lt;::std::macros::panic macros&gt;:2:4\nstack backtrace:\n   <span class=\"m\">0</span>: backtrace::backtrace::libunwind::trace\n             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.40/src/backtrace/libunwind.rs:88\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">11</span>: std::panicking::begin_panic\n             at /rustc/85976442558bf2d09cec3aa49c9c9ba86fb15c1f/src/libstd/panicking.rs:390\n  <span class=\"m\">12</span>: gimli::write::str::StringTable::add\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/&lt;::std::macros::panic macros&gt;:2\n<span class=\"o\">==</span>&gt;  <span class=\"m\">13</span>: wasmtime_debug::transform::simulate::generate_simulated_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/simulate.rs:293\n<span class=\"o\">==</span>&gt;  <span class=\"m\">14</span>: wasmtime_debug::transform::transform_dwarf\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/transform/mod.rs:107\n<span class=\"o\">==</span>&gt;  <span class=\"m\">15</span>: wasmtime_debug::emit_debugsections_image\n<span class=\"o\">==</span>&gt;             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-debug-0.15.0/src/lib.rs:82\n  <span class=\"m\">16</span>: wasmtime_jit::compiler::Compiler::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/compiler.rs:215\n  <span class=\"m\">17</span>: wasmtime_jit::instantiate::RawCompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:83\n  <span class=\"m\">18</span>: wasmtime_jit::instantiate::CompiledModule::new\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-jit-0.15.0/src/instantiate.rs:154\n  <span class=\"m\">19</span>: wasmtime::module::Module::compile\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:366\n  <span class=\"m\">20</span>: wasmtime::module::Module::from_binary_unchecked\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:335\n  <span class=\"m\">21</span>: wasmtime::module::Module::from_binary\n             at /home/scop/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-0.15.0/src/module.rs:304\n<span class=\"o\">[</span>...<span class=\"o\">]</span>\n  <span class=\"m\">32</span>: main\n  <span class=\"m\">33</span>: __libc_start_main\n  <span class=\"m\">34</span>: _start\nnote: Some details are omitted, run with <span class=\"sb\">`</span><span class=\"nv\">RUST_BACKTRACE</span><span class=\"o\">=</span>full<span class=\"sb\">`</span> <span class=\"k\">for</span> a verbose backtrace.\n</pre></div>\n\n\n</blockquote>",
        "id": 193952115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586895704
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1506#issuecomment-613662379\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1506#issuecomment-613662379\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1506\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1506\">Issue #1506</a>:</p>\n<blockquote>\n<p>Thank you for the report!</p>\n</blockquote>",
        "id": 193952387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586895848
    }
]