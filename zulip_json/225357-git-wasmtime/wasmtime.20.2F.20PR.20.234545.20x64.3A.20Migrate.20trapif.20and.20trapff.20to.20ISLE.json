[
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> from <code>trevor/x64-lower-trapif</code> to <code>main</code>:</p>\n<blockquote>\n<p>Migrate the <code>trapif</code> instruction to ISLE, and extract the lowering of <code>icmp</code> for scalars to a utility function. The <code>icmp</code> extraction will be helpful for future instruction migrations, as its uses mirror the existing <code>emit_cmp</code> instruction in the rust implementation.</p>\n<p>I'd recommend reviewing by commit, and turning off whitespace in the diff.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 291270348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659054488
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> from <code>trevor/x64-lower-trapif</code> to <code>main</code>.</p>",
        "id": 291277167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659061817
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932822684\">PR review comment</a>:</p>\n<blockquote>\n<p>here and elsewhere, we shouldn't do the side-effecting thing and invoke <code>trap_if_bool</code> just to throw the result away; we should return it. This can work similarly to other ops that don't return values most likely -- see e.g. stores, with the <code>(side_effect ...)</code> ctor.</p>\n</blockquote>",
        "id": 291278125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659062955
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1054952565\">PR review</a>.</p>",
        "id": 291278126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659062955
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1054952565\">PR review</a>.</p>",
        "id": 291278127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659062955
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932821979\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this could work a little better if we did the following:</p>\n<ul>\n<li>The <code>AlreadyExistingFlags</code> enum arm has no args -- we don't actually hold onto the flags <code>Value</code>, it's just a sentinel representing \"whatever's in the machine flags register\";</li>\n<li>We write a helper in ISLE that does something like:<br>\n<code>lisp\n  (decl flags_to_producesflags (Value) ProducesFlags)\n  (rule (flags_to_producesflags flags)\n    (mark_value_used flags)\n    (ProducesFlags.AlreadyExistingFlags))\n  </code></li>\n</ul>\n<p>then we don't need the distinct case when emitting.</p>\n</blockquote>",
        "id": 291278128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659062955
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1054955101\">PR review</a>.</p>",
        "id": 291278286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659063127
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932823894\">PR review comment</a>:</p>\n<blockquote>\n<p>And just to write down a thought I had and then dismissed: I had considered whether it made sense to make the above an auto-conversion, but I think that's too dangerous; if makes more sense to require an explicit action here since we're essentially asserting that <code>flags</code> is a flags value.</p>\n<p>... or, perhaps we do:</p>\n<div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">flags_to_producesflags</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">has_type</span><span class=\"w\"> </span><span class=\"nv\">$FLAGS</span><span class=\"w\"> </span><span class=\"nv\">flags</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">...</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>then we are actually asserting it's a flags value, and the verifier will ensure this corresponds to the current flags (there is only one live flags at a time), and so then this is safe and we can make it an auto-conversion. That removes all footguns from the lowerings I think.</p>\n</blockquote>",
        "id": 291278287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659063127
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1053340322\">PR review</a>.</p>",
        "id": 291279922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065168
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1053340322\">PR review</a>.</p>",
        "id": 291279923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065168
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932740209\">PR review comment</a>:</p>\n<blockquote>\n<p>I agree that <code>emit_consumer</code> feels like a bit of a hack, and I'd be happy to use an alternative. The solution to bump the refcount manually when consuming the <code>iadd_ifcout</code> seems good to me <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 291279924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065169
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r931667805\">PR review comment</a>:</p>\n<blockquote>\n<p>This is a change from the previous lowering of <code>icmp</code> for comparisons with <code>I128</code> arguments: instead of ending with a single <code>x64_and</code>, we now produce a test instruction. The lowering for <code>icmp</code> will now include an additional <code>setcc</code> as a result, for <code>I128</code> comparisons.</p>\n</blockquote>",
        "id": 291279925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065169
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932831543\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure what value we would return here -- <code>TrapIf</code> and friends have no outputs. Are you suggesting that <code>trap_if_bool</code> should return an <code>InstOutput</code> and always return <code>(output_none)</code>?</p>\n</blockquote>",
        "id": 291279926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065169
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932835471\">PR review comment</a>:</p>\n<blockquote>\n<p>Would we need to select the second output of <code>flags</code> for that assertion to work, or am I missing something about how the outputs are accessed?</p>\n</blockquote>",
        "id": 291279927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065169
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932832155\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah of course: we can return a <code>SideEffectNoResult.Inst2</code> instead. I'll make that change, it's much cleaner than relying on the effects currently.</p>\n</blockquote>",
        "id": 291279928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065169
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> from <code>trevor/x64-lower-trapif</code> to <code>main</code>.</p>",
        "id": 291279955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065244
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932836409\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sold on this pretty-printing format. Do you have ideas on how better to convey what's going on? Maybe something like <code>j({} || {})</code>?</p>\n</blockquote>",
        "id": 291280021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065326
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1054971274\">PR review</a>.</p>",
        "id": 291280022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659065326
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932842078\">PR review comment</a>:</p>\n<blockquote>\n<p>(I'll look at the rest in the detail tomorrow but one thought here: )</p>\n<p>This is actually kind of a fun historical oddity: when initially implementing the new backends we kept the pretty-printing format to something that could actually feed into GNU <code>as</code>. The first \"hello world\" (fib function actually) on the aarch64 backend was a thing I captured from the trace logs and then assembled and linked manually. Since then we've sort of drifted from that and the pretty-printing just has to be \"comprehensible to a deeply tired debugging human\"; so something that clarifies here is welcome :-)</p>\n<p>I might even go so far as <code>trap_if_or CC, CC</code> or somesuch...</p>\n</blockquote>",
        "id": 291280670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659066310
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1054978392\">PR review</a>.</p>",
        "id": 291280671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659066310
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> from <code>trevor/x64-lower-trapif</code> to <code>main</code>.</p>",
        "id": 291282704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659069171
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> from <code>trevor/x64-lower-trapif</code> to <code>main</code>.</p>",
        "id": 291282898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659069461
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> from <code>trevor/x64-lower-trapif</code> to <code>main</code>.</p>",
        "id": 291283080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659069685
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1055006551\">PR review</a>.</p>",
        "id": 291283234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659069937
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r932863696\">PR review comment</a>:</p>\n<blockquote>\n<p>This part of the comment seems like it would be more helpful by the <code>lower_fcmp_bool</code> function above.</p>\n</blockquote>",
        "id": 291283235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659069937
    },
    {
        "content": "<p><strong>elliottt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> as ready for review.</p>",
        "id": 291353237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659114532
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a> from <code>trevor/x64-lower-trapif</code> to <code>main</code>.</p>",
        "id": 291354403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659115120
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#discussion_r934185200\">PR review comment</a>:</p>\n<blockquote>\n<p>I realized that I was forgetting that the dependency in <code>trapif</code> will explicitly be for the flags output of <code>iadd_ifcout</code>, so I was indeed missing something :)</p>\n</blockquote>",
        "id": 291537263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659336081
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1056807288\">PR review</a>.</p>",
        "id": 291537264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659336081
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545#pullrequestreview-1057672220\">PR review</a>.</p>",
        "id": 291612206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659377190
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4545\">PR #4545</a>.</p>",
        "id": 291614157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659378253
    }
]