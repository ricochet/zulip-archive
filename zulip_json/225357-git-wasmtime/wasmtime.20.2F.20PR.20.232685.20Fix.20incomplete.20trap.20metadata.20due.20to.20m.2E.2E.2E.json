[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> and <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2685\">PR #2685</a>.</p>",
        "id": 227691735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614208623
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2685\">PR #2685</a> from <code>fix-multi-trap-metadata</code> to <code>main</code>:</p>\n<blockquote>\n<p>If an instruction has more than one trap record associated with it (for<br>\nexample: a divide instruction that has participated in load-op fusion,<br>\nso we have both a heap-out-of-bounds trap record due to its load and a<br>\ndivide-by-zero trap record due to its divide op), the current MachBuffer<br>\ncode would emit only one of the trap records to the sink.</p>\n<p>Separately, divide instructions probably shouldn't merge loads, because<br>\nthe two separate possible traps at one location might be confusing for<br>\nsome embedders (certainly in Lucet). Divide seems to be the only case in<br>\nour current codegen where such merging might occur. This PR changes the<br>\nlowering to always force the divisor into a register.</p>\n<p>Finally, while working out why trap records were not appearing, I had<br>\nnoticed that <code>isa::x64::emit_std_enc_mem()</code> was only emitting heap-OOB<br>\ntrap metadata for loads/stores when it had a srcloc. This PR ensures<br>\nthat the metadata is emitted even when the srcloc is empty.</p>\n<p>Note that none of the above presents a security or correctness problem;<br>\ntrap metadata only affects the status that we return to the embedder<br>\nwhen a Wasm program terminates with a trap.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 227691736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614208623
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> and <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2685\">PR #2685</a>.</p>",
        "id": 227691737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614208623
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2685#pullrequestreview-598029245\">PR Review</a>.</p>",
        "id": 227693300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614209427
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2685\">PR #2685</a>.</p>",
        "id": 227700321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614213491
    }
]