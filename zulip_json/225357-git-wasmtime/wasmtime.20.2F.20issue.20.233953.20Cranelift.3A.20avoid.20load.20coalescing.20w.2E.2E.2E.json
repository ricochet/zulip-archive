[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3953\">issue #3953</a>:</p>\n<blockquote>\n<p>In examining #3951 and #3934, the main problem in both cases seems to be that the load coalescing logic cannot detect when a loaded operand may be reused. Because of this, we must manually ensure that certain lowerings use <code>put_in_*</code> to avoid the problem. This is too manual and this error-prone (e.g., we unwittingly merged a regalloc error in #3951).</p>\n<p>As @cfallin notes in #3934:</p>\n<blockquote>\n<p>Merging a load into an op that executes more than once is invalid in general (the two loads may observe different values, which violates the original program semantics because there was only one load originally).</p>\n</blockquote>\n<p>So load coalescing should be prevented in cases where the operand is attempted to be loaded twice. If we could check how many times a value is used in <code>is_mergeable_load</code>, we could avoid the need to remember to use <code>put_in_*</code> in these cases.</p>\n</blockquote>",
        "id": 276109724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647894929
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3953\">issue #3953</a>:</p>\n<blockquote>\n<p>In examining #3951 and #3934, the main problem in both cases seems to be that the load coalescing logic cannot detect when a loaded operand may be reused. Because of this, we must manually ensure that certain lowerings use <code>put_in_*</code> to avoid the problem. This is too manual and this error-prone (e.g., we unwittingly merged a regalloc error in #3951).</p>\n<p>As @cfallin notes in #3934:</p>\n<blockquote>\n<p>Merging a load into an op that executes more than once is invalid in general (the two loads may observe different values, which violates the original program semantics because there was only one load originally).</p>\n</blockquote>\n<p>So load coalescing should be prevented in cases where the operand is attempted to be loaded twice. If we could check how many times a value is used in <code>is_mergeable_load</code>, we could avoid the need to remember to use <code>put_in_*</code> in these cases.</p>\n</blockquote>",
        "id": 276392829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1648066236
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3953\">issue #3953</a>:</p>\n<blockquote>\n<p>In examining #3951 and #3934, the main problem in both cases seems to be that the load coalescing logic cannot detect when a loaded operand may be reused. Because of this, we must manually ensure that certain lowerings use <code>put_in_*</code> to avoid the problem. This is too manual and this error-prone (e.g., we unwittingly merged a regalloc error in #3951).</p>\n<p>As @cfallin notes in #3934:</p>\n<blockquote>\n<p>Merging a load into an op that executes more than once is invalid in general (the two loads may observe different values, which violates the original program semantics because there was only one load originally).</p>\n</blockquote>\n<p>So load coalescing should be prevented in cases where the operand is attempted to be loaded twice. If we could check how many times a value is used in <code>is_mergeable_load</code>, we could avoid the need to remember to use <code>put_in_*</code> in these cases.</p>\n</blockquote>",
        "id": 276392849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1648066244
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3953\">issue #3953</a>:</p>\n<blockquote>\n<p>In examining #3951 and #3934, the main problem in both cases seems to be that the load coalescing logic cannot detect when a loaded operand may be reused. Because of this, we must manually ensure that certain lowerings use <code>put_in_*</code> to avoid the problem. This is too manual and this error-prone (e.g., we unwittingly merged a regalloc error in #3951).</p>\n<p>As @cfallin notes in #3934:</p>\n<blockquote>\n<p>Merging a load into an op that executes more than once is invalid in general (the two loads may observe different values, which violates the original program semantics because there was only one load originally).</p>\n</blockquote>\n<p>So load coalescing should be prevented in cases where the operand is attempted to be loaded twice. If we could check how many times a value is used in <code>is_mergeable_load</code>, we could avoid the need to remember to use <code>put_in_*</code> in these cases.</p>\n</blockquote>",
        "id": 279896242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650675650
    }
]