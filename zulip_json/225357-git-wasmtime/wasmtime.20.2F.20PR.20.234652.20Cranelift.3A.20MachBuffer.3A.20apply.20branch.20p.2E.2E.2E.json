[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4652\">PR #4652</a>.</p>",
        "id": 292527379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660021691
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4652\">PR #4652</a> from <code>opt-branches-at-end</code> to <code>main</code>:</p>\n<blockquote>\n<p>The <code>MachBuffer</code> applies a set of peephole-optimization rules to do<br>\nbranch threading, leverage fallthrough paths, eliminate empty blocks,<br>\nand flip conditional branches where needed to make branches more<br>\nefficient starting from naive always-branch-at-end-of-BB code.</p>\n<p>This works by applying the rules at every label-bind, which is<br>\nequivalent to applying them at the end of every basic block, where<br>\nbranches are usually inserted.</p>\n<p>However, this misses one case: the end of the buffer! Currently we<br>\ndon't optimize any redundant or foldable branches at the very end of<br>\nthe machine code.</p>\n<p>This usually doesn't matter when the function ends in an epilogue with<br>\n<code>ret</code> as the last instruction. However, when cold blocks exist, it can<br>\nactually matter.</p>\n<p>Thanks to @mchesser for pointing out this issue in #4636.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 292527380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660021692
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4652\">PR #4652</a>.</p>",
        "id": 292527381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660021692
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4652#pullrequestreview-1066832368\">PR review</a>.</p>",
        "id": 292589149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660055345
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4652\">PR #4652</a>.</p>",
        "id": 292624745,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660066730
    }
]