[
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1013\">PR #1013</a> from <code>wasm-interface-types-update</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is the start of the modernization of the implementation of<br>\ninterface types in wasmtime. This has a long way to go, and like the<br>\nprevious iteration, chunks of it are already destined to get thrown<br>\naway.</p>\n<p>The current state of affairs is that the implementation of interface<br>\ntypes in wasmtime feels very \"bolted on\" because, well, it was! The<br>\n<code>wasmtime-interface-types</code> crate is not well integrated with the<br>\n<code>wasmtime</code> API crate. Additionally it implements an older version of the<br>\ninterface types proposal dating back to when it was still based on<br>\nWebIDL bindings. The goals of this PR are to integrate interface types<br>\ninto the <code>wasmtime</code> API crate as well as update the implementation to<br>\nthe current proposal, which is more instruction/adapter based.</p>\n<p>Support here is built on top of the tools in the [wasm-interface-types]<br>\nrepository which contain various pieces of functionality like parsing<br>\nthe text format, parsing the binary format, stringifying the binary<br>\nformat, and validating the binary format. These tools are intended to be<br>\ndeveloped standalone from Wasmtime itself to encourage other users (like<br>\n<code>wasm-bindgen</code>, a generator for interface types).</p>\n<p>This should also fix a number of integration issues around the interface<br>\ntypes demos we have (eventually) since wasm-bindgen is targeting the<br>\nwasm-interface-types family of crates rather than the older WebIDL<br>\nbindings proposals.</p>\n<p>The current status of this commit/PR is that it is a step in the right<br>\ndirection but incomplete. I started this work a few months ago when I<br>\nhad some more time and have been occasionally rebasing it on the current<br>\n<code>wasmtime</code> master branch. Only a few simple instructions are supported<br>\n(and it's all via an interpreter, nothing compiled), and \"hard\" things<br>\nlike strings have yet to be done.</p>\n<p>What is implemented, however, falls into categories like:</p>\n<ul>\n<li>\n<p>API integration into the <code>wasmtime</code> crate is sorted out</p>\n<ul>\n<li>The <code>ValType</code> type is enhanced with interface types.</li>\n<li>The <code>Val</code> type is enhanced with interface types values.</li>\n<li>The <code>Config</code> type has a gate for the interface types proposal like<br>\n  it does all other proposals.</li>\n</ul>\n</li>\n<li>\n<p>The <code>wasmtime-interface-types</code> crate is deleted and all users are<br>\n  migrated to the <code>wasmtime</code> crate exclusively.</p>\n</li>\n<li>\n<p>The test harness has been enhanced with an invented <code>*.wast</code> syntax to<br>\n  cover interface types. I basically add things like <code>s8.const foo</code> as<br>\n  well as updated the parser to be able to parse <code>@interface</code><br>\n  directives. Again this is sort of an invented format, but the<br>\n  intention is that we can easily write <code>*.wast</code> tests the same way for<br>\n  interface types how we do for the core spec.</p>\n</li>\n</ul>\n<p>I don't think we want to land this as-is because of how little of<br>\ninterface types it implements. Additionally there's parallel work that's<br>\nbeen happening in Cranelift to jit interface types stubs which we may<br>\nwish to sync up with as well. In any case the main purpose of this<br>\ncommit is to add fuel to the interface types discussion and hopefully<br>\ngive us something concrete to work with as well.</p>\n<p>[wasm-interface-types]: <a href=\"https://github.com/bytecodealliance/wasm-interface-types\">https://github.com/bytecodealliance/wasm-interface-types</a></p>\n</blockquote>",
        "id": 202008900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593110766
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1013\">PR #1013</a>.</p>",
        "id": 206032770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596639730
    }
]