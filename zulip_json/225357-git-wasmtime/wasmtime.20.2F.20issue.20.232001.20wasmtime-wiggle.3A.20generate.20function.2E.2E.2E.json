[
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2001#issuecomment-862520112\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2001\">issue #2001</a>:</p>\n<blockquote>\n<p>This exists now</p>\n</blockquote>",
        "id": 242904887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623860472
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2001\">issue #2001</a>:</p>\n<blockquote>\n<p>This is a good beginner issue that is scoped to the wasmtime-wiggle crate, at crates/wiggle/wasmtime.</p>\n<p>See also #2000, cc @jedisct1 </p>\n<p>I propose that <code>wasmtime_wiggle::wasmtime_integration!</code> generate an additional function <code>link_all(ctx, &amp;Store, &amp;mut Linker) -&gt; Result&lt;(), _&gt;</code> that constructs and links each module struct generated by the macro. This will make it hard to accidentally forget to instantiate and link in a module when maintaining an integration of several witx modules.</p>\n<p>Frank has pointed out that this is impossible since each module presently requires an owned <code>ctx</code> value, maybe using Rc&lt;&gt; in the ctx type will help here? This could have inadvertently revealed more problems that we hadn't thought of yet.<br>\n</p>\n</blockquote>",
        "id": 242904888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623860472
    }
]