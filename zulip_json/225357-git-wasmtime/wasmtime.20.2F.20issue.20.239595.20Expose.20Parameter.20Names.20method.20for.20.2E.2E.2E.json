[
    {
        "content": "<p>Swivelgames edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595\">issue #9595</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Provide an interface for deriving a ComponentFunc params original names</p>\n<h4>Benefit</h4>\n<p>Presently, <code>wasmtime</code> provides a number tools that can be leveraged for something that resembles Reflection, but the details for Function Parameters are lossy. Especially for more complex runtime parameter mapping, it would be great if the names of function parameters were preserved, and an interface provided for retrieving them.</p>\n<h4>Implementation</h4>\n<p>In order to maintain backwards compatibility, it could likely be something like a <code>param_names()</code> method.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">ComponentFunc</span>\n\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">param_names</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">ExactSizeIterator</span><span class=\"o\">&lt;</span><span class=\"n\">Item</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">_</span><span class=\"err\">`</span>\n\n<span class=\"w\">      </span><span class=\"n\">Iterates</span><span class=\"w\"> </span><span class=\"n\">over</span><span class=\"w\"> </span><span class=\"n\">names</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">parameters</span>\n</code></pre></div>\n<h4>Alternatives</h4>\n<p>There really doesn't seem to be one that's built-in to <code>wasmtime</code>. In order to grab the parameter names, I'd likely need to do something far more complex.</p>\n<p>Based on <code>wasm-tools</code>, though, it seems like the name of the params are preserved in the <code>.wasm</code>, which is intriguing.</p>\n<p>To my knowledge, ComponentFunc params are the entities that do not have some way of deriving their original names.</p>\n</blockquote>",
        "id": 482845506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731834646
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595#issuecomment-2483678543\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595\">issue #9595</a>:</p>\n<blockquote>\n<p>Parameter names don't affect the ABI <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/9cebc6a1dff72b1511f7d2524f3b183ac89ead63/crates/wasmparser/src/validator/component_types.rs#L2637-L2639\">but they do affect type-checking</a>. Regardless though I think it'd be reasonable to expose this information!</p>\n</blockquote>",
        "id": 483080531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731950897
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595\">issue #9595</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Provide an interface for deriving a ComponentFunc params original names</p>\n<h4>Benefit</h4>\n<p>Presently, <code>wasmtime</code> provides a number tools that can be leveraged for something that resembles Reflection, but the details for Function Parameters are lossy. Especially for more complex runtime parameter mapping, it would be great if the names of function parameters were preserved, and an interface provided for retrieving them.</p>\n<h4>Implementation</h4>\n<p>In order to maintain backwards compatibility, it could likely be something like a <code>param_names()</code> method.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">ComponentFunc</span>\n\n<span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">param_names</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"nb\">ExactSizeIterator</span><span class=\"o\">&lt;</span><span class=\"n\">Item</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">_</span><span class=\"err\">`</span>\n\n<span class=\"w\">      </span><span class=\"n\">Iterates</span><span class=\"w\"> </span><span class=\"n\">over</span><span class=\"w\"> </span><span class=\"n\">names</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">parameters</span>\n</code></pre></div>\n<h4>Alternatives</h4>\n<p>There really doesn't seem to be one that's built-in to <code>wasmtime</code>. In order to grab the parameter names, I'd likely need to do something far more complex.</p>\n<p>Based on <code>wasm-tools</code>, though, it seems like the name of the params are preserved in the <code>.wasm</code>, which is intriguing.</p>\n<p>To my knowledge, ComponentFunc params are the entities that do not have some way of deriving their original names.</p>\n</blockquote>",
        "id": 483092077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731954307
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595#issuecomment-2484084247\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595\">issue #9595</a>:</p>\n<blockquote>\n<blockquote>\n<p>Parameter names don't affect the ABI <a href=\"https://github.com/bytecodealliance/wasm-tools/blob/9cebc6a1dff72b1511f7d2524f3b183ac89ead63/crates/wasmparser/src/validator/component_types.rs#L2637-L2639\">but they do affect type-checking</a>.</p>\n</blockquote>\n<p>??? If changing a parameter name causes a component to not type check, then said change is an ABI breaking change, right?</p>\n</blockquote>",
        "id": 483119009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731962415
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595#issuecomment-2484117922\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9595\">issue #9595</a>:</p>\n<blockquote>\n<p>Er, to clarify a bit, I mean that the canonical ABI doesn't depend on the parameter names. That was my own definition of \"ABI\" but you're more accurate that \"ABI\" in this sense should encompass function linking and yes there different names cause issues.</p>\n</blockquote>",
        "id": 483122214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731963553
    }
]