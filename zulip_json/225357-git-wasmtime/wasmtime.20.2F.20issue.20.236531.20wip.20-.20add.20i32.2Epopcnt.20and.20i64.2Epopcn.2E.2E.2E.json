[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531#issuecomment-1579491161\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531\">issue #6531</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 364120842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686087905
    },
    {
        "content": "<p>itsrainy <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531#issuecomment-1585058336\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531\">issue #6531</a>:</p>\n<blockquote>\n<blockquote>\n<p>are you planning on providing a fallback implementation for popcnt if the has_popcnt flag is not enabled, similar to what Cranelift provides?</p>\n</blockquote>\n<p>Yeah I can take a crack at that! I'll also add it to the fuzz targets</p>\n</blockquote>",
        "id": 364955996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686340216
    },
    {
        "content": "<p>itsrainy <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531#issuecomment-1588231230\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531\">issue #6531</a>:</p>\n<blockquote>\n<p>@saulecabrera I added two <code>popcnt</code> fallbacks that I'd like help choosing between. <code>popcount_fallback1</code> is a naive loop that is a bit more compact and easier to read (but ends up emitting more instructions). <code>popcount_fallback2</code> is my attempt at implementing the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/x64/lower.isle#L2095-L2137\">fallback that is in cranelift</a>.</p>\n</blockquote>",
        "id": 365699419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686611383
    },
    {
        "content": "<p>itsrainy <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531#issuecomment-1590129350\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6531\">issue #6531</a>:</p>\n<blockquote>\n<p>I moved the fallback logic up into the MacroAssembler. I was running into some tricky ownership issues when trying to pass the <code>CodeGenContext</code> into the <code>Fn</code> passed to <code>unop</code>, but I was able to implement the fallback only using the scratch register, so I don't think we actually need any more registers. I'd like to write some tests that actually use the fallback before this gets merged.</p>\n</blockquote>",
        "id": 366004508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686694718
    }
]