[
    {
        "content": "<p>MarinPostma opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a> from <code>MarinPostma:winc-x64-atomic-store</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR implements x64 store operations:</p>\n<ul>\n<li><code>i32.atomic.store8</code></li>\n<li><code>i32.atomic.store16</code></li>\n<li><code>i32.atomic.store</code></li>\n<li><code>i64.atomic.store8</code></li>\n<li><code>i64.atomic.store16</code></li>\n<li><code>i64.atomic.store32</code></li>\n<li><code>i64.atomic.store</code></li>\n</ul>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/9734\">https://github.com/bytecodealliance/wasmtime/issues/9734</a></p>\n</blockquote>",
        "id": 493184514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736683810
    },
    {
        "content": "<p><strong>MarinPostma</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493184516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736683810
    },
    {
        "content": "<p><strong>MarinPostma</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493184517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736683810
    },
    {
        "content": "<p><strong>MarinPostma</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493184518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736683810
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#issuecomment-2585741256\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 493190735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736689481
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493200426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736697636
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#pullrequestreview-2546703965\">PR review</a>:</p>\n<blockquote>\n<p>One thing that we might want to do as part of this change before proceeding further with the development of the rest of the instructions in the proposal,  is to ensure that addresses are aligned for atomic loads/stores. See the <a href=\"https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md#alignment\">alignment</a> of the proposal. </p>\n<p>To check for alignment, I'd recommend creating a new method in the <code>CodeGen</code> module (e.g., <code>emit_check_alignment</code>) and either calling it before calling <code>emit_compute_heap_addr</code> or enhancing <code>emit_compute_heap_addr</code> to check alignment internally if the load/store is atomic. </p>\n<p>For reference, <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/cranelift/src/translate/code_translator.rs#L3306\">this is how alignment is handled in Cranelift.</a> </p>\n</blockquote>",
        "id": 493362611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736777710
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1913240586\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                // To stay consistent with cranelift, we emit a normal store followed by a mfence,\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 493362612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736777710
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#pullrequestreview-2546703965\">PR review</a>:</p>\n<blockquote>\n<p>One thing that we might want to do as part of this change before proceeding further with the development of the rest of the instructions in the proposal,  is to ensure that addresses are aligned for atomic loads/stores. See the <a href=\"https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md#alignment\">alignment</a> section of the proposal. </p>\n<p>To check for alignment, I'd recommend creating a new method in the <code>CodeGen</code> module (e.g., <code>emit_check_alignment</code>) and either calling it before calling <code>emit_compute_heap_addr</code> or enhancing <code>emit_compute_heap_addr</code> to check alignment internally if the load/store is atomic. </p>\n<p>For reference, <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/cranelift/src/translate/code_translator.rs#L3306\">this is how alignment is handled in Cranelift.</a> </p>\n</blockquote>",
        "id": 493378121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736781720
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493416754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736791797
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493435219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736798035
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493438041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736798862
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493438327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736798954
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493440347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736799617
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#issuecomment-2588117127\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>:</p>\n<blockquote>\n<p>@saulecabrera I have added the align check</p>\n</blockquote>",
        "id": 493440551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736799700
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493441500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736800017
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493441814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736800119
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493442230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736800264
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#pullrequestreview-2549480560\">PR review</a>.</p>",
        "id": 493595090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736864177
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1914677528\">PR review comment</a>:</p>\n<blockquote>\n<p>Generally in the codegen module, we try to stick with the <code>emit_*</code> prefix, for consistency, could you update the name of this method? </p>\n</blockquote>",
        "id": 493595092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736864177
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1914875946\">PR review comment</a>:</p>\n<blockquote>\n<p>What do you think of either:</p>\n<ul>\n<li>Passing an enum here describing the type of heap address computation: (<code>HeapAddress::AlignChecked</code>, <code>HeapAddress::AlignUnchecked</code>)</li>\n<li>Creating a wrapper method <code>emit_compute_heap_address_align_checked</code>, which internally calls <code>emit_check_align</code> and <code>emit_compute_heap_address</code>? </li>\n</ul>\n<p>Heap address calculation is a very critical piece of the compiler, so I'd recommend against passing boolean params, to make it less error prone at call sites. </p>\n</blockquote>",
        "id": 493595093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736864177
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1914897030\">PR review comment</a>:</p>\n<blockquote>\n<p>I believe you could use a scratch register here? (<code>scratch!(M)</code>)</p>\n</blockquote>",
        "id": 493595094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736864177
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1914888019\">PR review comment</a>:</p>\n<blockquote>\n<p>One thing to note with using <code>self.context.pop_to_reg</code> is that this method needs to ensure that the value is pushed back to the value stack after all the checks are emitted, to ensure that <code>emit_compute_heap_address</code> is able to pop the address. </p>\n</blockquote>",
        "id": 493595095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736864177
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1914881476\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd recommend using <code>self.context.pop_to_reg</code>, which already handles all the cases for moving a value to a register; e.g., in this case if a the value is already a register, this code will emit a move, which could be avoided, and more importantly it'll reduce register pressure. </p>\n</blockquote>",
        "id": 493595096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736864177
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493603169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736866460
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493604026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736866692
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#pullrequestreview-2550065963\">PR review</a>:</p>\n<blockquote>\n<p>Looks good, thanks! </p>\n<p>After the trailing comment is deleted, we can land this one. </p>\n</blockquote>",
        "id": 493608870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736868090
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1915027948\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 493608871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736868090
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493609060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736868139
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#issuecomment-2590355186\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>:</p>\n<blockquote>\n<p>@saulecabrera it's not working yet I had to move to a x86 machine to debug, I'll ping you when i fixed it</p>\n</blockquote>",
        "id": 493618307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736870701
    },
    {
        "content": "<p>MarinPostma submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#pullrequestreview-2550481200\">PR review</a>.</p>",
        "id": 493632144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736874804
    },
    {
        "content": "<p>MarinPostma created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1915279348\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm a bit worried about the risk of clobbering the a scratch register here. The register is used across multiple masm operation, and we do use scratch registers in masm often.</p>\n</blockquote>",
        "id": 493632150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736874804
    },
    {
        "content": "<p>MarinPostma submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#pullrequestreview-2550508367\">PR review</a>.</p>",
        "id": 493633846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736875396
    },
    {
        "content": "<p>MarinPostma created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1915295538\">PR review comment</a>:</p>\n<blockquote>\n<p>I've been playing around with that, but it turns out that we need to move the address to a register anyway, because we potentially need to add the <code>offset</code> to the <code>addr</code>, and we cannot do that with the <code>addr</code> as a <code>dst</code>, as we need the address intact for computing the heap address later on. The reason why we can't add with <code>tmp</code> as a dst, is because that will return a <code>InvalidTwoArgumentForm</code>.</p>\n<p>In light of this, I think peeking and moving to <code>tmp</code> would save a <code>mov</code> in the case where we need to compute the offset. WDYT?</p>\n</blockquote>",
        "id": 493633847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736875396
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493635323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736875902
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#issuecomment-2590697769\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>:</p>\n<blockquote>\n<p>@saulecabrera, I have made the changes you requested, I also responded to your comments, let me know if you want me to make the changes I suggested in the comments instead.</p>\n</blockquote>",
        "id": 493637394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736876694
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#pullrequestreview-2550998602\">PR review</a>.</p>",
        "id": 493668636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736888118
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#discussion_r1915587716\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh that's a good point yeah. My main concern with <code>peek</code> is that nothing is preventing any other method to accidentally pop the wrong value from the stack. However, since this pattern is local to this method, I don't think there's a huge risk, so yeah, let's try the peek approach. One comment to your original implementation, could you return an error instead of doing <code>peek().unwrap()</code>? We have <code>CodeGenError::missing_values_in_stack</code> for this kind of situation. </p>\n</blockquote>",
        "id": 493668637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736888118
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493917758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736945092
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493922181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736946286
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987#issuecomment-2592809078\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>:</p>\n<blockquote>\n<p>@saulecabrera I made the final changes</p>\n</blockquote>",
        "id": 493922330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736946331
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9987\">PR #9987</a>.</p>",
        "id": 493929334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736948508
    }
]