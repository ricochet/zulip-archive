[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>See title. For example <code>v0 = vconst.i64x2 ...; bitcast.i128 little v0</code>.</p>\n<h4>Benefit</h4>\n<p>This allows bitcasting between the two without having to go through memory. Cg_clif needs this bitcasting for implementing <code>mem::transmute</code> and float to 128bit int casts on Windows. Currently it has to go through the stack, which is slower and inhibits optimizations.</p>\n</blockquote>",
        "id": 344926991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679937950
    },
    {
        "content": "<p>jameysharp labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>See title. For example <code>v0 = vconst.i64x2 ...; bitcast.i128 little v0</code>.</p>\n<h4>Benefit</h4>\n<p>This allows bitcasting between the two without having to go through memory. Cg_clif needs this bitcasting for implementing <code>mem::transmute</code> and float to 128bit int casts on Windows. Currently it has to go through the stack, which is slower and inhibits optimizations.</p>\n</blockquote>",
        "id": 344927662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679938121
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:E-compiler-easy label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">Issue #6104</a>.</p>",
        "id": 440344765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716477237
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2127411892\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<p>This seems like a good starter issue. It currently affects all of our 4 backends.</p>\n<p>Here's a test demonstrating the issue:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bitcast_vec_to_int</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">i64x2</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bitcast</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bitcast_int_to_vec</span><span class=\"p\">(</span><span class=\"kt\">i128</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bitcast</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>When running this test it fails with: <code>should be implemented in ISLE: inst = v1 = bitcast.i128 little v0, type = Some(types::I128)</code></p>\n<p>Happy to help anyone who wants to try working on this!</p>\n</blockquote>",
        "id": 440346211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716477699
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:area:aarch64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">Issue #6104</a>.</p>",
        "id": 440346258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716477711
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:area:s390x label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">Issue #6104</a>.</p>",
        "id": 440346260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716477711
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:area:riscv64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">Issue #6104</a>.</p>",
        "id": 440346261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716477712
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:area:x64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">Issue #6104</a>.</p>",
        "id": 440346262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716477712
    },
    {
        "content": "<p>aidenfoxivey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2395191827\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<p>@afonso360 It seems like the only remaining part to fix is s390x, right?</p>\n</blockquote>",
        "id": 475021129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728160797
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2395194539\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<p>Yes, I think that's correct</p>\n</blockquote>",
        "id": 475022029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728161598
    },
    {
        "content": "<p>aidenfoxivey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2395195031\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<blockquote>\n<p>Yes, I think that's correct</p>\n</blockquote>\n<p>I'll take a look at how to get a VM running on my ARM MacBook.</p>\n</blockquote>",
        "id": 475022149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728161751
    },
    {
        "content": "<p>aidenfoxivey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2395195056\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<p>Maybe I can take on that remaining part.</p>\n</blockquote>",
        "id": 475022165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728161762
    },
    {
        "content": "<p>aidenfoxivey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2435978814\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<p>Signed up for one of those LinuxONE servers from IBM, but no response from them so far lol. I dunno whether maybe QEMU is the preferred approach?</p>\n</blockquote>",
        "id": 478769861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729792123
    },
    {
        "content": "<p>aidenfoxivey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2435978814\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<p>Signed up for (access/time on) one of those LinuxONE servers from IBM, but no response from them so far lol. I dunno whether maybe QEMU is the preferred approach?</p>\n</blockquote>",
        "id": 478769879,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729792133
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2436016012\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<p>QEMU is usually easier for working on different arches. We have a great <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-cross-compiling.md\">doc on how to set it up</a> if you're running in Linux</p>\n</blockquote>",
        "id": 478771651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729792821
    },
    {
        "content": "<p>aidenfoxivey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104#issuecomment-2436045114\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6104\">issue #6104</a>:</p>\n<blockquote>\n<blockquote>\n<p>QEMU is usually easier for working on different arches. We have a great <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/contributing-cross-compiling.md\">doc on how to set it up</a> if you're running in Linux</p>\n</blockquote>\n<p>Maybe I'll try to run those in a VM. Unfortunately I'm a Mac person for the time being.</p>\n</blockquote>",
        "id": 478773460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729793525
    }
]