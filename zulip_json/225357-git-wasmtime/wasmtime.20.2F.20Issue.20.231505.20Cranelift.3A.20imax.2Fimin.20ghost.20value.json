[
    {
        "content": "<p>RobinTD opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505\">Issue #1505</a>:</p>\n<blockquote>\n<p>Using cranelift 0.62, the following results in this error message:\" v5 is a ghost value used by a real [Op1ret#c3] instruction\".</p>\n<div class=\"codehilite\"><pre><span></span>function u0:82(i64) -&gt; i64 system_v {\nblock0(v0: i64):\n    v1 = load.i64 notrap aligned v0\n    v2 = load.i64 notrap aligned v0+8\n    v3 = iconst.i64 1\n    v4 = iconst.i64 2\n    v5 = imax v3, v4\n    return v5\n}\n</pre></div>\n\n\n</blockquote>",
        "id": 193866834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586854297
    },
    {
        "content": "<p>RobinTD labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505\">Issue #1505</a>:</p>\n<blockquote>\n<p>Using cranelift 0.62, the following results in this error message:\" v5 is a ghost value used by a real [Op1ret#c3] instruction\".</p>\n<div class=\"codehilite\"><pre><span></span>function u0:82(i64) -&gt; i64 system_v {\nblock0(v0: i64):\n    v1 = load.i64 notrap aligned v0\n    v2 = load.i64 notrap aligned v0+8\n    v3 = iconst.i64 1\n    v4 = iconst.i64 2\n    v5 = imax v3, v4\n    return v5\n}\n</pre></div>\n\n\n</blockquote>",
        "id": 193866835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586854297
    },
    {
        "content": "<p>RobinTD labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505\">Issue #1505</a>:</p>\n<blockquote>\n<p>Using cranelift 0.62, the following results in this error message:\" v5 is a ghost value used by a real [Op1ret#c3] instruction\".</p>\n<div class=\"codehilite\"><pre><span></span>function u0:82(i64) -&gt; i64 system_v {\nblock0(v0: i64):\n    v1 = load.i64 notrap aligned v0\n    v2 = load.i64 notrap aligned v0+8\n    v3 = iconst.i64 1\n    v4 = iconst.i64 2\n    v5 = imax v3, v4\n    return v5\n}\n</pre></div>\n\n\n</blockquote>",
        "id": 193866836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586854297
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505#issuecomment-613312354\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505#issuecomment-613312354\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505\">Issue #1505</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 193866856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586854312
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505#issuecomment-613315679\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505#issuecomment-613315679\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505\">Issue #1505</a>:</p>\n<blockquote>\n<p><code>imax</code> is only implemented for 128bit vectors with 8, 16 or 32bit lanes:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/428449133943213f2edc58ec161efcbb23d0eebd/cranelift/codegen/meta/src/isa/x86/legalize.rs#L634-L635\" title=\"https://github.com/bytecodealliance/wasmtime/blob/428449133943213f2edc58ec161efcbb23d0eebd/cranelift/codegen/meta/src/isa/x86/legalize.rs#L634-L635\">https://github.com/bytecodealliance/wasmtime/blob/428449133943213f2edc58ec161efcbb23d0eebd/cranelift/codegen/meta/src/isa/x86/legalize.rs#L634-L635</a></p>\n<p>It makes sense to me to implement it for non-vectors too.</p>\n<blockquote>\n<p>v5 is a ghost value used by a real [Op1ret#c3] instruction</p>\n</blockquote>\n<p>A ghost value is a value which is the output of an instruction without encoding, so this says that the <code>imax</code> which has <code>v5</code> as output doesn't have an encoding.</p>\n</blockquote>",
        "id": 193867535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586854689
    },
    {
        "content": "<p>RobinTD <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505#issuecomment-613317466\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505#issuecomment-613317466\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1505\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1505\">Issue #1505</a>:</p>\n<blockquote>\n<p>Thanks. <code>fmin</code>/<code>fmax</code> works for scalars, so making it work for integer scalars too would be less surprising.</p>\n</blockquote>",
        "id": 193868000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586854908
    }
]