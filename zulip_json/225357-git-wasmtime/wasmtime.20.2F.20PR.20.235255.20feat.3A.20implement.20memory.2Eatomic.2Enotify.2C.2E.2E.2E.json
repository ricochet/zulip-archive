[
    {
        "content": "<p>haraldh opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Use parking_lot_core, as this established crate does exactly what is needed here.</p>\n<h2>WARNING</h2>\n<p><code>memory_atomic_wait32()</code> and <code>memory_atomic_wait64()</code> are called with an unsigned <code>timeout: u64</code>.</p>\n<p>The <a href=\"https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#wait\">Threading proposal for WebAssembly</a> uses a signed <code>timeout: i64</code>. Where is the source of truth?</p>\n</blockquote>",
        "id": 309198971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668175625
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 309200561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668176172
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 309202576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668176872
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1179461043\">PR review</a>.</p>",
        "id": 309901039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668443773
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.<br>\n</p>\n</blockquote>",
        "id": 310432574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668611817
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310432680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668611847
    },
    {
        "content": "<p><strong>haraldh</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a>.</p>",
        "id": 310432878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668611903
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1182900413\">PR review</a>.</p>",
        "id": 310449864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024215533\">PR review comment</a>:</p>\n<blockquote>\n<p>It's ok to remove these files since in in the wasmtime repo we only keep the licenses at the root.</p>\n</blockquote>",
        "id": 310449865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024216904\">PR review comment</a>:</p>\n<blockquote>\n<p>For including in this repo could you rename this to <code>wasmtime-parking-spot</code> and set the version to <code>4.0.0</code> as wasmtime's current version? We generally try to keep everything in sync if it's located here. </p>\n<p>Personally I'd be ok having this either here or externally, however. I have a slight preference for vendoring it given how small it is, but I'll leave that up to you.</p>\n</blockquote>",
        "id": 310449867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024217918\">PR review comment</a>:</p>\n<blockquote>\n<p>This will require a new entry for <code>cargo vet</code>, but if you'd prefer you can also continue to reuse <code>1.12.0</code> and then there'd be no need for a new vet entry.</p>\n</blockquote>",
        "id": 310449868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024221587\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of having <code>unpark_all</code> vs <code>unpark</code> could this thread through a <code>u32</code> count always? That matches what the wasm semantics of the notify instruction are more closely I think.</p>\n</blockquote>",
        "id": 310449869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024222045\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this comment may no longer be relevant.</p>\n</blockquote>",
        "id": 310449870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024225325\">PR review comment</a>:</p>\n<blockquote>\n<p>It should be ok to drop the <code>return</code> here</p>\n</blockquote>",
        "id": 310449872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1182900413\">PR review</a>.</p>",
        "id": 310449873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024225171\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you document that the <code>SeqCst</code> here matches the ordering specified by wasm itself?</p>\n</blockquote>",
        "id": 310449874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024217181\">PR review comment</a>:</p>\n<blockquote>\n<p>It's ok to leave this out since it's already depended on by other crates.</p>\n</blockquote>",
        "id": 310449876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024231328\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this perhaps return <code>&amp;ParkingSpot</code> to avoid the need for cloning? I think that should work out for the definitions in the libcalls.</p>\n</blockquote>",
        "id": 310449877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024219734\">PR review comment</a>:</p>\n<blockquote>\n<p>Could the need for <code>as _</code> be removed here? The underlying implementation could take a key of <code>u64</code>, for example, and the count could be <code>u32</code>. Otherwise I'm worried about lossy casts here and accidentally losing data that wasn't intended.</p>\n</blockquote>",
        "id": 310449878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024229567\">PR review comment</a>:</p>\n<blockquote>\n<p>I think there's a few issues with this that will need updating. Again though this is where I think that tests should be added to exercise all these cases.</p>\n<ol>\n<li>Switching to <code>defined_memory_index</code> only works if the memory is defined locally, not if the memory is imported. This will want to work with imported memories as well.</li>\n<li>The wait/notify instructions work with unshared memories in addition to shared memories, so the unwrap for a shared memory needs to be handled. To handle this I'd recommend returning an <code>Option&lt;T&gt;</code> and handling <code>None</code> in each instruction, for example by sleeping for <code>wait</code>, perhaps trapping for an infinite sleep, and doing nothing for <code>notify</code>.</li>\n</ol>\n</blockquote>",
        "id": 310449879,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024224107\">PR review comment</a>:</p>\n<blockquote>\n<p>This is one reason I would like to require tests as part of this PR. The <code>addr</code> here is a wasm-relative address, not a host address, meaning that I think this will segfault or otherwise corrupt lower memory addresses. I suspect, however, that tests would uncover this relatively quickly.</p>\n</blockquote>",
        "id": 310449880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616514
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024235698\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you add comments here as to what these fields are tracking? For example I believe <code>to_unpark</code> is required per the spec since it doesn't allow for spurious wakeups.</p>\n</blockquote>",
        "id": 310449881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616514
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024230722\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it would be better to put the <code>ParkingSpot</code> adjacent to the <code>RwLock</code> in memory to avoid allocating two <code>Arc</code>s here. Additionally as this struct grows can you use named fields rather than tuple structs?</p>\n</blockquote>",
        "id": 310449882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616514
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024238257\">PR review comment</a>:</p>\n<blockquote>\n<p>Could an optimization be added here to use <code>notify_all</code> if <code>n</code> is greater than <code>to_unpark</code>? That'll help I believe with the removal of <code>unpark_all</code>.</p>\n</blockquote>",
        "id": 310449883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616514
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024237469\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this unconditionally happen to double-check that the count can always be decremented? The conditional check for removal from the internal map could then happen afterwards.</p>\n</blockquote>",
        "id": 310449884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616514
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1182942342\">PR review</a>.</p>",
        "id": 310450160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616587
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024242982\">PR review comment</a>:</p>\n<blockquote>\n<p>oh, that actually can be removed now ... </p>\n</blockquote>",
        "id": 310450161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668616587
    },
    {
        "content": "<p>haraldh deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024242982\">PR review comment</a>.</p>",
        "id": 310491548,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668629081
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024456204\">PR review comment</a>:</p>\n<blockquote>\n<p>oops, totally correct!!</p>\n</blockquote>",
        "id": 310491668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668629109
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183254890\">PR review</a>.</p>",
        "id": 310491670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668629109
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310565659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674534
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183878008\">PR review</a>.</p>",
        "id": 310565701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674555
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024897994\">PR review comment</a>:</p>\n<blockquote>\n<p>removed</p>\n</blockquote>",
        "id": 310565704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674555
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183878463\">PR review</a>.</p>",
        "id": 310565735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674572
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024898274\">PR review comment</a>:</p>\n<blockquote>\n<p>changed</p>\n</blockquote>",
        "id": 310565737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674573
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183878655\">PR review</a>.</p>",
        "id": 310565758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674580
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024898407\">PR review comment</a>:</p>\n<blockquote>\n<p>removed</p>\n</blockquote>",
        "id": 310565760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674580
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310565944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674658
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183881184\">PR review</a>.</p>",
        "id": 310565984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674682
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024900041\">PR review comment</a>:</p>\n<blockquote>\n<p>changed to workspace version</p>\n</blockquote>",
        "id": 310565985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674682
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183881563\">PR review</a>.</p>",
        "id": 310566020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674698
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024900299\">PR review comment</a>:</p>\n<blockquote>\n<p>removed</p>\n</blockquote>",
        "id": 310566022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674698
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183881679\">PR review</a>.</p>",
        "id": 310566032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674704
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024900401\">PR review comment</a>:</p>\n<blockquote>\n<p>fixed</p>\n</blockquote>",
        "id": 310566034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674704
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183881878\">PR review</a>.</p>",
        "id": 310566051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674713
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024900526\">PR review comment</a>:</p>\n<blockquote>\n<p>fixed</p>\n</blockquote>",
        "id": 310566052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674713
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1183882154\">PR review</a>.</p>",
        "id": 310566072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674723
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1024900727\">PR review comment</a>:</p>\n<blockquote>\n<p>maybe fixed</p>\n</blockquote>",
        "id": 310566079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668674723
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310567634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668675434
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310568031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668675634
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310575869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668678686
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310591708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668684970
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310594666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668686232
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025099766\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 310595129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668686407
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184173050\">PR review</a>.</p>",
        "id": 310595131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668686407
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310599433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688103
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184214739\">PR review</a>.</p>",
        "id": 310599439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688105
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184214827\">PR review</a>.</p>",
        "id": 310599449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688108
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025127297\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 310599450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688109
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025127711\">PR review comment</a>:</p>\n<blockquote>\n<p>moved it to a named field in SharedMemoryInner</p>\n</blockquote>",
        "id": 310599530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688136
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184215460\">PR review</a>.</p>",
        "id": 310599533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688137
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025127880\">PR review comment</a>:</p>\n<blockquote>\n<p>err.. did not succeed</p>\n</blockquote>",
        "id": 310599568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688148
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184215752\">PR review</a>.</p>",
        "id": 310599569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688148
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184216133\">PR review</a>.</p>",
        "id": 310599610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688164
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025128138\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 310599611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688165
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184216235\">PR review</a>.</p>",
        "id": 310599620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688168
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025128205\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 310599621,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688169
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310601413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668688820
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025127880\">PR review comment</a>.</p>",
        "id": 310602764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668689326
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310614181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668693431
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310614500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668693536
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025228466\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 310614507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668693537
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184364583\">PR review</a>.</p>",
        "id": 310614509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668693537
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310628269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668697827
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310637660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668699925
    },
    {
        "content": "<p><strong>haraldh</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a>.</p>",
        "id": 310637799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668699963
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025371223\">PR review comment</a>:</p>\n<blockquote>\n<p>I can remove this test module, if wanted.</p>\n</blockquote>",
        "id": 310638314,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668700128
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184578213\">PR review</a>.</p>",
        "id": 310638315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668700128
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310639592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668700477
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025438048\">PR review comment</a>:</p>\n<blockquote>\n<p>or guard it behind some feature flag</p>\n</blockquote>",
        "id": 310650204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668703428
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1184677780\">PR review</a>.</p>",
        "id": 310650205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668703428
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185429998\">PR review</a>.</p>",
        "id": 310747326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745927
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185429998\">PR review</a>.</p>",
        "id": 310747327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745927
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025973097\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it should be ok to drop the <code>pub</code> here</p>\n</blockquote>",
        "id": 310747328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745927
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025973206\">PR review comment</a>:</p>\n<blockquote>\n<p>It should be ok to drop the <code>#[inline]</code> here and largely let LLVM figure it out.</p>\n</blockquote>",
        "id": 310747329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745928
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025973923\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it would be better to detect QEMU and bail out. Currently we have <code>WASMTIME_NO_HOG_MEMORY=1</code> as an env var and that can be used as a rough proxy for \"I'm in qemu\" and the tests are skipped.</p>\n</blockquote>",
        "id": 310747330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745928
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025971999\">PR review comment</a>:</p>\n<blockquote>\n<p>It appears I didn't read close enough, and <a href=\"https://github.com/WebAssembly/threads/blob/main/proposals/threads/Overview.md\">according to the overview</a> (which I would highly recommend reviewing/correlating with the implementation here) it says:</p>\n<blockquote>\n<p>Wait operators additionally trap if used on an unshared linear memory</p>\n</blockquote>\n<p>So this can't actually sleep it needs to always trap. Additionally you'll want to allocate a trap code instead of reusing a different trap code for this purpose.</p>\n</blockquote>",
        "id": 310747331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745928
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025974392\">PR review comment</a>:</p>\n<blockquote>\n<p>If this returned <code>&amp;Arc&lt;ParkingSpot&gt;</code> what other errors pop up?</p>\n</blockquote>",
        "id": 310747332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745928
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1025973552\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think there's any need to tag all functions in this file with <code>#[inline]</code></p>\n</blockquote>",
        "id": 310747333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668745928
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185667381\">PR review</a>.</p>",
        "id": 310768756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668759941
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026144580\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0515</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">referencing</span><span class=\"w\"> </span><span class=\"n\">temporary</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">492</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">492</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"mf\">0.</span><span class=\"n\">read</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">().</span><span class=\"n\">spot</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">^----------------------^^^^^</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">||</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">|</span><span class=\"n\">temporary</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">created</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">referencing</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"n\">owned</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 310768757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668759941
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026145326\">PR review comment</a>:</p>\n<blockquote>\n<p>Also a reference to an <code>Arc</code> defies the purpose of <code>Arc</code> here :)</p>\n</blockquote>",
        "id": 310768893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668759997
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185668501\">PR review</a>.</p>",
        "id": 310768894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668759997
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185671319\">PR review</a>.</p>",
        "id": 310769185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760142
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026147358\">PR review comment</a>:</p>\n<blockquote>\n<p>removed</p>\n</blockquote>",
        "id": 310769186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760142
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185671368\">PR review</a>.</p>",
        "id": 310769192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760144
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026147401\">PR review comment</a>:</p>\n<blockquote>\n<p>removed</p>\n</blockquote>",
        "id": 310769195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760145
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185671472\">PR review</a>.</p>",
        "id": 310769200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760149
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026147479\">PR review comment</a>:</p>\n<blockquote>\n<p>removed</p>\n</blockquote>",
        "id": 310769201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760149
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185671669\">PR review</a>.</p>",
        "id": 310769214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760158
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026147628\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 310769216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760158
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310769283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668760198
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310795695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668769991
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1185922918\">PR review</a>.</p>",
        "id": 310796096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668770142
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026318885\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 310796097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668770142
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Activated the spec testsuite for threads.</p>\n<p>Tests include:</p>\n<ul>\n<li>[ ] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[ ] <code>wait32</code> eventually times out if the values match</li>\n<li>[ ] <code>wait32</code> traps on unshared memories</li>\n<li>[ ] <code>notify</code> returns 0 on unshared memories</li>\n<li>[ ] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[ ] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 310798542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668770983
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Activated the spec testsuite for threads.</p>\n<p>Tests include:</p>\n<ul>\n<li>[ ] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[ ] <code>wait32</code> eventually times out if the values match</li>\n<li>[ ] <code>wait32</code> traps on unshared memories</li>\n<li>[ ] <code>notify</code> returns 0 on unshared memories</li>\n<li>[ ] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[x] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 310798551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668770988
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310817144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668776674
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1186064081\">PR review</a>.</p>",
        "id": 310817424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668776768
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026412967\">PR review comment</a>:</p>\n<blockquote>\n<p>nevertheless, by adding <code>Shared::Memory::atomic_*</code> methods, I got  rid of it.</p>\n</blockquote>",
        "id": 310817425,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668776768
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310821080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668777894
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310828802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668780138
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Activated the spec testsuite for threads.</p>\n<p>Tests include:</p>\n<ul>\n<li>[ ] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[ ] <code>wait32</code> eventually times out if the values match</li>\n<li>[x] <code>wait32</code> traps on unshared memories</li>\n<li>[ ] <code>notify</code> returns 0 on unshared memories</li>\n<li>[ ] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[x] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 310829096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668780224
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310836629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668782533
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Activated the spec testsuite for threads.</p>\n<p>Tests include:</p>\n<ul>\n<li>[ ] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[ ] <code>wait32</code> eventually times out if the values match</li>\n<li>[x] <code>wait32</code> traps on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 on unshared memories</li>\n<li>[ ] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[x] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 310836668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668782549
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Activated the spec testsuite for threads.</p>\n<p>Tests include:</p>\n<ul>\n<li>[ ] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[ ] <code>wait32</code> eventually times out if the values match</li>\n<li>[x] <code>wait32</code> traps on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[x] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 310836671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668782551
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Tests include:</p>\n<ul>\n<li>[ ] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[ ] <code>wait32</code> eventually times out if the values match</li>\n<li>[x] <code>wait32</code> traps on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[x] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 310838270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668783054
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1186316170\">PR review</a>.</p>",
        "id": 310848361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026573727\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it work to use <a href=\"https://docs.rs/anyhow/latest/anyhow/macro.ensure.html\"><code>anyhow::ensure</code></a>?</p>\n</blockquote>",
        "id": 310848363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1186316170\">PR review</a>.</p>",
        "id": 310848364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026576693\">PR review comment</a>:</p>\n<blockquote>\n<p>One thing I might recommend, could the <code>unsafe</code> functions here be removed? That way the libcalls to delegate validation to these functions and that would remove the need to have <code>unsafe</code> interfaces entirely ideally.</p>\n</blockquote>",
        "id": 310848365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026583062\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for adding these, and if you're interested the final step of exposing these would be to have them public in the <code>wasmtime::SharedMemory</code> structure as well. Embedders don't get access to <code>wasmtime_runtime::SharedMemory</code> at this time. Again though if you'd prefer it's ok to defer this to a future PR.</p>\n</blockquote>",
        "id": 310848366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026581618\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it's ok to leave this scoped to <code>SharedMemory</code> for now since that's all it's used for</p>\n</blockquote>",
        "id": 310848367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026579157\">PR review comment</a>:</p>\n<blockquote>\n<p>This doesn't have the desired semantics for the <code>atomic_wait32</code> instruction unfortunately. I would recommend not storing the <code>ParkingSpot</code> state inside the <code>RwLock</code> of a shared memory. The problem here is that memory is read-locked for the entire duration of the park, meaning that a concurrent memory growth is blocked until this wakes up.</p>\n<p>This would actually make a great test as well. It's ok to leave this sort of test to later though if you prefer. Basically though there could be tests that while a thread is parked all other operations can still happen concurrently.</p>\n</blockquote>",
        "id": 310848368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026580494\">PR review comment</a>:</p>\n<blockquote>\n<p>I'll note this was not a problem earlier due to the <code>Arc&lt;ParkingSpot&gt;</code> being cloned out of the internal storage. That's another possible solution, but if the storage for the spot is stored outside the <code>RwLock</code> it retains the ability to avoid extraneous <code>Arc</code> clones too.</p>\n</blockquote>",
        "id": 310848371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668785782
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310851079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668786464
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310856404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668787816
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1186385323\">PR review</a>.</p>",
        "id": 310856469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668787839
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026618221\">PR review comment</a>:</p>\n<blockquote>\n<p>yes... fixed</p>\n</blockquote>",
        "id": 310856470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668787840
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310858539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668788429
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1186400656\">PR review</a>.</p>",
        "id": 310858558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668788438
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026628094\">PR review comment</a>:</p>\n<blockquote>\n<p>removed totally</p>\n</blockquote>",
        "id": 310858560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668788438
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 310858883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668788530
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1186491640\">PR review</a>.</p>",
        "id": 310871215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668792002
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1186491640\">PR review</a>.</p>",
        "id": 310871219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668792002
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026689267\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this have a more descriptive name than <code>InnerInner</code> perhaps?</p>\n</blockquote>",
        "id": 310871222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668792002
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026688313\">PR review comment</a>:</p>\n<blockquote>\n<p>I do realize that this fixes the issue of \"I added a <code>*.wast</code> file and would like it to get picked up\", but personally I'd prefer to leave this out if you're ok with it. I find it much more useful to work on a <code>*.wast</code> file and have a quick cycle time with <code>cargo test --test all the_test</code> personally and having this here would force a rebuild of the test binary for any edit to the <code>*.wast</code> files.</p>\n</blockquote>",
        "id": 310871229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668792002
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1026688979\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this logic, in addition to issues related to pooling and threads, all get resolved in <code>tests/all/wast.rs</code>? The <code>wast.rs</code> file already has a lot of logic for dealing with various special cases and ideally this build script is just \"go call the <code>wast.rs</code> function with all the found tests\"</p>\n</blockquote>",
        "id": 310871231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668792002
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 311101348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924371
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1187212264\">PR review</a>.</p>",
        "id": 311101401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924445
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1027231379\">PR review comment</a>:</p>\n<blockquote>\n<p><code>SharedMemoryInnerRwLocked</code></p>\n</blockquote>",
        "id": 311101402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924445
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1187212281\">PR review</a>.</p>",
        "id": 311101406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924460
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1027231388\">PR review comment</a>:</p>\n<blockquote>\n<p>removed</p>\n</blockquote>",
        "id": 311101407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924460
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1027231394\">PR review comment</a>:</p>\n<blockquote>\n<p>done</p>\n</blockquote>",
        "id": 311101413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924467
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1187212289\">PR review</a>.</p>",
        "id": 311101414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924468
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 311101808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668924952
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 311103439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668926751
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 311231790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669017519
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1187726682\">PR review</a>.</p>",
        "id": 311232336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669017809
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1027682170\">PR review comment</a>:</p>\n<blockquote>\n<p>So, the spectests expect the alignment check before any other trap and even in the non-shared  case.<br>\nBecause I can't get to a <code>SharedMemory</code> object in the non-shared case, the <code>validate_addr</code> has to live elsewhere, so I moved it in the fast path to  <code>VMMemoryDefinition</code>.</p>\n<p>And in the shared memory case, I have already validated the Atomic address, so I thought, I create an unchecked version called with the already validated address to not do the same work twice.</p>\n</blockquote>",
        "id": 311232338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669017809
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1187727140\">PR review</a>.</p>",
        "id": 311232388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669017831
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#discussion_r1027682491\">PR review comment</a>:</p>\n<blockquote>\n<p>See the comment on <code>unchecked_atomic_notify</code>.</p>\n</blockquote>",
        "id": 311232389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669017831
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Tests include:</p>\n<ul>\n<li>[x] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[ ] <code>wait32</code> eventually times out if the values match</li>\n<li>[x] <code>wait32</code> traps on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[x] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 311282815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669037638
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>:</p>\n<blockquote>\n<p>Added the parking_spot crate, which provides the needed registry for the operations.</p>\n<p>Tests include:</p>\n<ul>\n<li>[x] <code>wait32</code> doesn't block if the values don't match</li>\n<li>[x] <code>wait32</code> eventually times out if the values match</li>\n<li>[x] <code>wait32</code> traps on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 on unshared memories</li>\n<li>[x] <code>notify</code> returns 0 with 0 waiters</li>\n<li>[ ] <code>notify</code> returns the number woken (this one you can't precisely test for but you could add a sleep for ~100ms and otherwise retry the test N times until it works)</li>\n<li>[x] <code>wait32</code> and <code>notify</code> require in-bounds and aligned addresses</li>\n</ul>\n</blockquote>",
        "id": 311282919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669037666
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 311283191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669037770
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> from <code>feature/atomic_wait_notify</code> to <code>main</code>.</p>",
        "id": 311425897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669050004
    },
    {
        "content": "<p><strong>haraldh</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a> as ready for review.</p>",
        "id": 311426127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669050065
    },
    {
        "content": "<p><strong>haraldh</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a>.</p>",
        "id": 311426149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669050075
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255#pullrequestreview-1188716401\">PR review</a>.</p>",
        "id": 311435419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669053140
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a>.</p>",
        "id": 311435432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669053145
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5255\">PR #5255</a>.</p>",
        "id": 311441054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669054989
    }
]