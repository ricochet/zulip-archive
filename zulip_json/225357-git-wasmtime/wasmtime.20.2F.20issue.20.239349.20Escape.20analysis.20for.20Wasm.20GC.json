[
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the performance label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9349\">Issue #9349</a>.</p>",
        "id": 474080768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727801417
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the cranelift<span aria-label=\"goal\" class=\"emoji emoji-1f945\" role=\"img\" title=\"goal\">:goal:</span>optimize-speed label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9349\">Issue #9349</a>.</p>",
        "id": 474080769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727801418
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the wasmtime:ref-types label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9349\">Issue #9349</a>.</p>",
        "id": 474080770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727801418
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9349\">issue #9349</a>:</p>\n<blockquote>\n<p>We could implement an escape analysis for Wasm GC types to figure out which allocations do not escape their stack frame. Then we can do unboxing/SROA, replacing a struct's fields or array elements with a set of local SSA values.</p>\n</blockquote>",
        "id": 474080772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727801419
    }
]