[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a> from <code>fitzgen:idempotent-trapz-trapnz</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit extends our existing support for merging idempotently side-effectful instructions that produce exactly one value to those that produce zero or one value, and marks the <code>trap[n]z</code> instructions as having idempotent side effects. This cleans up a lot test cases in our <code>disas</code> test suite, particularly those related to explicit bounds checks and GC.</p>\n<p>As an aside, it seems like it should be easy to extend this to idempotently side-effectful instructions that produce multiple values as well, but I don't believe we have any such instructions, so I didn't bother.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 493487939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736817814
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493487940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736817814
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493487941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736817814
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493487943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736817815
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493487944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736817815
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493489420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736818482
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004#pullrequestreview-2548836810\">PR review</a>:</p>\n<blockquote>\n<p>This is great -- thanks a bunch for working this out!</p>\n<p>My only thoughts are for a few more comments and one more test, otherwise LGTM.</p>\n</blockquote>",
        "id": 493512863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736832285
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004#discussion_r1914263128\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we add a comment here describing the rationale a bit more (for our future selves as much as others)?</p>\n<p>Something like: \"<code>side_effects_idempotent</code> indicates that when we have more than one copy of this instruction, it is safe to merge (GVN) them. Traps have this characteristic: as long as we don't remove them, if we have already passed through (computed) one trap instruction on a given condition, it is safe to consider other traps on the same condition as redundant. In other words, a trap on value X is idempotent: once we observe its side effect (which will either terminate execution or do nothing), we don't need to observe it again.\"</p>\n</blockquote>",
        "id": 493512864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736832285
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004#discussion_r1914265113\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we also add a test with a <code>trapz</code> and <code>trapnz</code> on the same condition, to verify that (if we ever change the instruction encoding) we're disambiguating on the condition as well and not merging them? (i.e., arrange such that they would merge if they were both the same opcode)</p>\n</blockquote>",
        "id": 493512865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736832285
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004#discussion_r1914263699\">PR review comment</a>:</p>\n<blockquote>\n<p>\"Hit in GVN map but for instruction with zero results: may be a side-effect-only idempotent instruction like <code>trapnz</code>/<code>trapz</code>. Nothing else to do here.\" perhaps?</p>\n</blockquote>",
        "id": 493512866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736832285
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493642147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736878501
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493642209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736878522
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493642670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736878699
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10004\">PR #10004</a>.</p>",
        "id": 493647461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736880490
    }
]