[
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801509129\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>I approve these changes in <code>cranelift-module</code>. I'm not a maintainer of <code>cranelift-codegen</code> so I will defer overall approval to someone else - @cfallin maybe?</p>\n</blockquote>",
        "id": 230786558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616024025
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801523421\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>It's somewhat surprising to me that changes in error-printing code would give such a large speedup in compile times. It's always welcome, of course, when speedups come -- but @bjorn3, do you have any sense of <em>why</em> this happens? I ask because it could be a symptom of something weirder going on behind the scenes -- for example, are we throwing a bunch of errors and doing work to capture backtraces but then silencing them somehow?</p>\n<p>All other things being equal, the auto-derived error handling is kind of nice, but I won't fight too hard for it if we win by doing something lighter-weight.</p>\n</blockquote>",
        "id": 230790373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616026561
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801553668\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>I believe, because <code>thiserror</code> is a proc macro that depends on the usual stack of <code>syn</code> and friends, that compiling those dependencies is the tentpole in embeddings which otherwise don't use proc macros.</p>\n</blockquote>",
        "id": 230802408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616031908
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801553668\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>I believe, because <code>thiserror</code> is a proc macro that depends on the usual stack of <code>syn</code> and friends, that compiling those dependencies is the tentpole in embeddings which otherwise don't use proc macros. So, we don't see this in wasmtime or other big applications, but I imagine that cg_clif is very careful about deps.</p>\n</blockquote>",
        "id": 230802478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616031964
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801553668\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>I believe, because <code>thiserror</code> is a proc macro that depends on the usual stack of <code>syn</code> and friends, that compiling those dependencies is the tentpole in embeddings which otherwise don't use proc macros. So, we don't see this in wasmtime or other big applications where we use that family or crates in several contexts, but I imagine that cg_clif is very careful about deps.</p>\n</blockquote>",
        "id": 230802512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616032000
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801558640\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>Ah -- to clarify, @bjorn3, you mean the compile time <em>of</em> cg_clif, not the time that cg_clif takes to compile code?</p>\n<p>(I was assuming the latter, and thus was quite confused about the impact of error-path code on the happy path!)</p>\n</blockquote>",
        "id": 230803392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616032823
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801553668\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>I believe, because <code>thiserror</code> is a proc macro that depends on the usual stack of <code>syn</code> and friends, that compiling those dependencies is the tentpole in embeddings which otherwise don't use proc macros. So, we don't see this in wasmtime or other big applications where we use that family of crates in several contexts, but I imagine that cg_clif is very careful about deps.</p>\n</blockquote>",
        "id": 230803489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616032914
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-801680717\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<blockquote>\n<p>Ah -- to clarify, @bjorn3, you mean the compile time of cg_clif, not the time that cg_clif takes to compile code?</p>\n</blockquote>\n<p>Correct, I mean the time it takes to compile cg_clif itself. Sorry for the confusion.</p>\n<blockquote>\n<p>but I imagine that cg_clif is very careful about deps.</p>\n</blockquote>\n<p>Indeed. I try to avoid dependencies where possible and even use dependencies from the rustc-dev rustup component instead of <a href=\"http://crates.io\">crates.io</a> where possible.</p>\n</blockquote>",
        "id": 230820575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616050645
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-802201424\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>Would you mind leaving a comment above the Display &amp; Error impls that these are written by hand to avoid pulling in the <code>thiserror</code> dep? That may help anyone who sees them and gets the clever idea that they can be replaced by a macro.</p>\n</blockquote>",
        "id": 230918118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616093196
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-802925402\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 231043462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616168552
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730#issuecomment-831909355\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2730\">Issue #2730</a>:</p>\n<blockquote>\n<p>Rebased</p>\n</blockquote>",
        "id": 237315811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620131911
    }
]