[
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>:</p>\n<blockquote>\n<p>Using the <code>directory</code> [open flag] to determine whether the entity being opened is a directory or a file is undefined behavior, since that means that the only way to acquire a usable directory is to specify the flag.</p>\n<p>Instead of relying on the [open flag] value to determine the filetype, issue <code>get_path_filestat</code> first to determine it and then perform appropriate operation depending on the value.</p>\n<p>Note that this also slightly changes the behavior, where <code>create</code> [open flag] is not dropped anymore, but rather passed through to the <code>open_dir</code> call.</p>\n<p>@pchickey seems to be the last person making any significant changes in this method, so assigning him for review</p>\n<p>[open flag]: <a href=\"https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#-oflags-record\">https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#-oflags-record</a></p>\n<p>Signed-off-by: Roman Volosatovs &lt;<a href=\"mailto:roman@profian.com\">roman@profian.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 300382053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663944275
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>:</p>\n<blockquote>\n<p>Using the <code>directory</code> [open flag] to determine whether the entity being opened is a directory or a file is undefined behavior, since that means that the only way to acquire a usable directory is to specify the flag.</p>\n<p>Instead of relying on the [open flag] value to determine the filetype, issue <code>get_path_filestat</code> first to determine it and then perform appropriate operation depending on the value.</p>\n<p>Note that this also slightly changes the behavior, where <code>create</code> [open flag] is not dropped anymore, but rather passed through to the <code>open_dir</code> call.</p>\n<p>@pchickey seems to be the last person making any significant changes in this method, so assigning him for review</p>\n<p>[open flag]: <a href=\"https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#-oflags-record\">https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#-oflags-record</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 300382096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663944284
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a>.</p>",
        "id": 300420088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663955361
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>.</p>",
        "id": 300420681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663955556
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>.</p>",
        "id": 300420795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663955594
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>.</p>",
        "id": 300421071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663955681
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>:</p>\n<blockquote>\n<p>Using the <code>directory</code> [open flag] to determine whether the entity being opened is a directory or a file is undefined behavior, since that means that the only way to acquire a usable directory is to specify the flag.</p>\n<p>Instead of relying on the [open flag] value to determine the filetype, issue <code>get_path_filestat</code> first to determine it and then perform appropriate operation depending on the value.</p>\n<p>~Note that this also slightly changes the behavior, where <code>create</code> [open flag] is not dropped anymore, but rather passed through to the <code>open_dir</code> call.~</p>\n<p>@pchickey seems to be the last person making any significant changes in this method, so assigning him for review</p>\n<p>[open flag]: <a href=\"https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#-oflags-record\">https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#-oflags-record</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 300424851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663956786
    },
    {
        "content": "<p><strong>rvolosatovs</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> as ready for review.</p>",
        "id": 300454728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663969024
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>.</p>",
        "id": 300802442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664195285
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>.</p>",
        "id": 300810329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664197649
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#pullrequestreview-1120214207\">PR review</a>.</p>",
        "id": 300812391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664198303
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#discussion_r980025673\">PR review comment</a>:</p>\n<blockquote>\n<p>Ideally, I would want to fail here if error is not <code>not found</code>, but that would require either cloning the error (to be able to propagate it if it does not match) and then converting it into a <code>types::Errno</code>. Alternatively, it should be possible to downcast the error, but would require matching on all possible error types, which seems like the wrong thing to do as well.<br>\nIs there a reasonable way to do that? I'm looking for <code>Error::not_found(&amp;self) -&gt; bool</code><br>\nDiscard the error instead and preserve the original behavior.</p>\n</blockquote>",
        "id": 300812392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664198303
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#discussion_r980025673\">PR review comment</a>.</p>",
        "id": 300812538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664198348
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a> from <code>fix/path_open</code> to <code>main</code>.</p>",
        "id": 300816596,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664199647
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#pullrequestreview-1120661695\">PR review</a>.</p>",
        "id": 300869025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664214590
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#pullrequestreview-1120661695\">PR review</a>.</p>",
        "id": 300869026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664214590
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#discussion_r980332448\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it is reasonable to downcast_ref and match for an ErrorKind::Noent, and if that fails downcast to a std::io::Error with the appropriate check there as well. This is a big janky, and I think if I had to redesign wasi-common I probably wouldn't use a fully dynamic error type and instead make <code>enum Error { Std(std::io::Error), Wasi(ErrorKind) }</code> or something like that, but its been a while since I had this system in my head so I'm not sure why I didn't do that in the first place.</p>\n</blockquote>",
        "id": 300869027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664214591
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#pullrequestreview-1120913949\">PR review</a>.</p>",
        "id": 300900404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664226561
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#discussion_r980506965\">PR review comment</a>:</p>\n<blockquote>\n<p>I am concerned about this <code>get_path_filestat</code>, because it does a second path lookup. There's a window for a race condition here, where a directory could be replaced by something which is not a directory. I don't yet have a clear view of the consequences of the open succeeding on an unexpected type, so this is something I want to investigate more.</p>\n<p>I wonder if it would be possible to instead do something like:</p>\n<ul>\n<li>Attempt to open with open_dir; if that works, create a <code>DirEntry</code> entry.</li>\n<li>If that fails with <code>Notdir</code>, open it with regular <code>open</code>.<br>\nWould that work?</li>\n</ul>\n<p>I know that this is redundant on POSIX hosts, and possibly we could optimize things even more there, but this code is currently written to support Windows also.</p>\n</blockquote>",
        "id": 300900405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664226561
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#discussion_r980647102\">PR review comment</a>:</p>\n<blockquote>\n<p>I now have an implementation of this here: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">https://github.com/bytecodealliance/wasmtime/pull/4967</a></p>\n<p>It uses the same testcase as this PR, so it fixes the same bug, but does so in a way that doesn't require doing a stat followed by a separate open. There's more room for improvement beyond that, but hopefully that's a good step.</p>\n</blockquote>",
        "id": 300925630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664242631
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947#pullrequestreview-1121102596\">PR review</a>.</p>",
        "id": 300925631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664242631
    },
    {
        "content": "<p>pchickey closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947\">PR #4947</a>.</p>",
        "id": 351692860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682098436
    }
]