[
    {
        "content": "<p><a href=\"https://github.com/Mr-Leshiy\">Mr-Leshiy</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7997\">Issue #7997</a>.</p>",
        "id": 423392822,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708953214
    },
    {
        "content": "<p>Mr-Leshiy opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7997\">issue #7997</a>:</p>\n<blockquote>\n<p>We have faced a <code>SIGABORT</code> failure during executing simple benchmark which you can find here <a href=\"https://github.com/input-output-hk/hermes/blob/f4d20fc06f0b558be4805a106db32480bcef649d/hermes/bin/src/wasm/module.rs#L118\">https://github.com/input-output-hk/hermes/blob/f4d20fc06f0b558be4805a106db32480bcef649d/hermes/bin/src/wasm/module.rs#L118</a>.<br>\nAccording to the stack trace </p>\n<h3>Steps to Reproduce</h3>\n<p>You can fully reproduce it in already prepared environment and code but cloning our repo and specifically this branch <code>libgcc-wasmtime-unwinding-bug</code>. (repo: <a href=\"https://github.com/input-output-hk/hermes\">https://github.com/input-output-hk/hermes</a>)</p>\n<p>Before start you will need to install <a href=\"https://earthly.dev\">earthly</a> tool.<br>\nTo run it you will need to execute the following in the root of the repo</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>earthly<span class=\"w\"> </span>-I<span class=\"w\"> </span>./hermes+alpine-3-19-fail\n</code></pre></div>\n<p>This will prepare an <code>alpine:3.19</code> environment with <code>rust:1.75</code> version and all our project configuration that we have an all source code and run a benchmarks.<br>\nEarthfile code <a href=\"https://github.com/input-output-hk/hermes/blob/libgcc-wasmtime-unwinding-bug/hermes/Earthfile#L18\">https://github.com/input-output-hk/hermes/blob/libgcc-wasmtime-unwinding-bug/hermes/Earthfile#L18</a></p>\n<div class=\"codehilite\" data-code-language=\"earthfile\"><pre><span></span><code>alpine-3-19-fail:\n    FROM rust:1.75-alpine3.19\n\n    # Install necessary packages\n    RUN apk add --no-cache \\\n            musl-dev \\\n            gdb\n\n    COPY --dir .cargo .config crates bin .\n    COPY Cargo.toml .\n    COPY clippy.toml deny.toml rustfmt.toml .\n\n    RUN mkdir /wasm\n    COPY --dir ../wasm+wasi-src/wasi /wasm/wasi\n    # Compiled WASM component for benchmarks\n    COPY ../wasm/c+build/component.wasm /wasm/c/bench_component.wasm\n\n    # Run benchmarks\n    RUN cargo bench --features bench\n</code></pre></div>\n<p>After the failure it will run an interacting mode <code>-i</code> flag (similar to docker interactive mode).<br>\nSo you will be able to collect a dump file inside this container.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nb\">ulimit</span><span class=\"w\"> </span>-c<span class=\"w\"> </span>unlimited<span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span>./target/release/deps/module-&lt;&gt;<span class=\"w\"> </span>--bench\n</code></pre></div>\n<p>Then inspect it and using <code>gdb</code></p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>gdb<span class=\"w\">  </span>./target/release/deps/module-&lt;&gt;<span class=\"w\"> </span>core<span class=\"w\"> </span>--<span class=\"w\"> </span>--bench\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>SIGABORT</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 17.0.0</p>\n<p>Operating system: alpine:3.19</p>\n<h3>Extra Info</h3>\n<p>This is totally works on <code>alpine:3.18</code> version with the <code>libgcc:12</code> version.<br>\nWe have found that most probable it is an issue with <code>libgcc</code> because, there is a huge difference with the libgcc unwinding implementation between these two versions.</p>\n<p>libgcc_12 - <a href=\"https://github.com/gcc-mirror/gcc/blob/8cbb2cade4c724760c868c9f493b169d6ec4168a/libgcc/unwind-dw2-fde.c#L201\">https://github.com/gcc-mirror/gcc/blob/8cbb2cade4c724760c868c9f493b169d6ec4168a/libgcc/unwind-dw2-fde.c#L201</a></p>\n<p>libgcc_13 - <a href=\"https://github.com/gcc-mirror/gcc/blob/0e7bc3eaa36b81004b799124d2fe00137401a43b/libgcc/unwind-dw2-fde.c#L225\">https://github.com/gcc-mirror/gcc/blob/0e7bc3eaa36b81004b799124d2fe00137401a43b/libgcc/unwind-dw2-fde.c#L225</a></p>\n<p>You can try it running already prepared earthly target <a href=\"https://github.com/input-output-hk/hermes/blob/libgcc-wasmtime-unwinding-bug/hermes/Earthfile#L38\">https://github.com/input-output-hk/hermes/blob/libgcc-wasmtime-unwinding-bug/hermes/Earthfile#L38</a></p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>earthly<span class=\"w\"> </span>./hermes+alpine-3-18-pass\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 423392827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708953215
    }
]