[
    {
        "content": "<p>vedantroy edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<p>Run the following file in wasmtime 0.15.0 and in whatever version of wasmer is installed with <code>curl https://get.wasmer.io -sSfL | sh</code></p>\n<p>wasmer prints the expected output:</p>\n<div class=\"codehilite\"><pre><span></span>no foo.\nbar\n</pre></div>\n\n\n<p>wasmtime prints nothing</p>\n<div class=\"codehilite\"><pre><span></span>;; Taken from: https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md and modified\n(module\n    (import &quot;wasi_snapshot_preview1&quot; &quot;fd_write&quot; (func $fd_write (param i32 i32 i32 i32) (result i32)))\n\n    (memory 1)\n\n    (data (i32.const 1024) &quot;no foo.\\nbar\\n&quot;)\n\n    (func $print_msg (param $array_ptr i32)\n        (call $fd_write\n          (i32.const 1) ;; file descriptor\n          (local.get $array_ptr) ;; pointer to first iovec in array\n          (i32.const 1) ;; len of array\n          (i32.const 2048) ;; place to write number of bytes written\n        )\n        drop\n    )\n\n    (func $main (export &quot;_start&quot;)\n        ;; Creating a new io vector within linear memory\n        (i32.store (i32.const 0) (i32.const 1024))\n        (i32.store (i32.const 4) (i32.const 8))\n\n        (i32.store (i32.const 8) (i32.const 1032))\n        (i32.store (i32.const 12) (i32.const 4))\n\n        (call $print_msg (i32.const 0))\n        (call $print_msg (i32.const 8))\n    )\n)\n</pre></div>\n\n\n<p>I assume the issue is with wasmtime.</p>\n</blockquote>",
        "id": 194494503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587154569
    },
    {
        "content": "<p>vedantroy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615445865\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615445865\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<p>Thank you for the explanation. What is the difference between <code>(memory (export \"memory\") 1)</code> and</p>\n<div class=\"codehilite\"><pre><span></span>(memory 1)\n(export &quot;memory&quot; (memory 0))\n</pre></div>\n\n\n<p>I assume the 2nd one does the same thing, because <code>(memory 1)</code> indicates \"give this program 1 page of memory\" while <code>(export \"memory\" (memory 0))</code> indicates \"export the memory starting at location 0\".</p>\n</blockquote>",
        "id": 194494818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587154768
    },
    {
        "content": "<p>vedantroy closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<p>Run the following file in wasmtime 0.15.0 and in whatever version of wasmer is installed with <code>curl https://get.wasmer.io -sSfL | sh</code></p>\n<p>wasmer prints the expected output:</p>\n<div class=\"codehilite\"><pre><span></span>no foo.\nbar\n</pre></div>\n\n\n<p>wasmtime prints nothing</p>\n<div class=\"codehilite\"><pre><span></span>;; Taken from: https://github.com/bytecodealliance/wasmtime/blob/master/docs/WASI-tutorial.md and modified\n(module\n    (import &quot;wasi_snapshot_preview1&quot; &quot;fd_write&quot; (func $fd_write (param i32 i32 i32 i32) (result i32)))\n\n    (memory 1)\n\n    (data (i32.const 1024) &quot;no foo.\\nbar\\n&quot;)\n\n    (func $print_msg (param $array_ptr i32)\n        (call $fd_write\n          (i32.const 1) ;; file descriptor\n          (local.get $array_ptr) ;; pointer to first iovec in array\n          (i32.const 1) ;; len of array\n          (i32.const 2048) ;; place to write number of bytes written\n        )\n        drop\n    )\n\n    (func $main (export &quot;_start&quot;)\n        ;; Creating a new io vector within linear memory\n        (i32.store (i32.const 0) (i32.const 1024))\n        (i32.store (i32.const 4) (i32.const 8))\n\n        (i32.store (i32.const 8) (i32.const 1032))\n        (i32.store (i32.const 12) (i32.const 4))\n\n        (call $print_msg (i32.const 0))\n        (call $print_msg (i32.const 8))\n    )\n)\n</pre></div>\n\n\n<p>I assume the issue is with wasmtime.</p>\n</blockquote>",
        "id": 194494929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587154818
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615446608\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615446608\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<p>Oh one is just shorthand for the other. The <code>(export \"memory\" (memory 0))</code> isn't necessarily exporting a memory that starts at 0, but rather exports the 0th memory (memory index zero), which in this case was defined by <code>(memory 1)</code> (which was indeed \"define a memory with at least one page in size\")</p>\n</blockquote>",
        "id": 194495025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587154880
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615452220\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615452220\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 194496425,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587155743
    },
    {
        "content": "<p>vedantroy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615487678\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615487678\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<p>@alexcrichton For future reference, what would be an easy way to print out the error coder returned by <code>$fd_write</code>(or any other wasi system call)? I could try storing the integer in an array pointed to by an <code>iovec</code>, but I suspect I need to encode the integer into a UTF-8 format first.</p>\n</blockquote>",
        "id": 194506894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587161720
    },
    {
        "content": "<p>vedantroy edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615487678\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615487678\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<p>@alexcrichton This question is off topic, but I would greatly appreciate if you could answer it. What would be an easy way to print out the error coder returned by <code>$fd_write</code>(or any other wasi system call)? I could try storing the integer in an array pointed to by an <code>iovec</code>, but I suspect I need to encode the integer into a UTF-8 format first.</p>\n</blockquote>",
        "id": 194506928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587161754
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615488581\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547#issuecomment-615488581\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1547\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1547\">Issue #1547</a>:</p>\n<blockquote>\n<p>Ah yeah currently WASI has no way to print an integer, so there's not really an easy way to do that with <code>*.wat</code>. At that point you'd probably want to use a source language like Rust/C/etc.</p>\n</blockquote>",
        "id": 194507158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587161888
    }
]