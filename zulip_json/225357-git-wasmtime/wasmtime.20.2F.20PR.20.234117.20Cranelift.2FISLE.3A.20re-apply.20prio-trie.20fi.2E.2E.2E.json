[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117\">PR #4117</a> from <code>isle-prio-trie-fix-round-two</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR re-applies the commit from #4093, which fixed a priority trie<br>\nbuild issue in the ISLE compiler. The bug affected the order in which the<br>\nrules were applied, such that specified priorities were not always<br>\nrespected. (As long as rules obeyed the \"any rule in isolation is correct\"<br>\nprinciple, no correctness issues would result, but it is a real bug that<br>\nmakes developing new rules sometimes counterintuitive.)</p>\n<p>Unfortunately, in #4102 we had to revert that commit because it<br>\ncaused the ISLE compiler to produce incorrect code. Furthermore,<br>\nI didn't catch this in the original PR (during development or in CI)<br>\nbecause both our CI, and my mental model of \"rebuilding ISLE source\",<br>\ndid not account for the <code>rebuild-isle</code> <em>still skipping</em> the rebuild if<br>\nthe manifest was up-to-date.</p>\n<p>(This is a point in favor of doing <em>something</em> about confusion in #4066,<br>\nbut that's a separate discussion!)</p>\n<p>It turns out that the bug in #4093 was quite simple in hindsight: we<br>\nonly need to recurse down the trie and sort edges in subnodes too.<br>\nI should have caught this but didn't because my test case (for the<br>\noriginal bug) involved mis-sorted edges only in a one-level-above-leaf<br>\nnode.</p>\n<p>This PR re-applies the original priority trie fix, with a fix to the fix<br>\n(the recursive application of sorting). It also factors out the \"force<br>\nrebuild\" step into a shell script for easier use by ISLE-compiler<br>\ndevelopers.</p>\n<p>The generated code changes in exactly one spot in the x64 backend,<br>\nwith a <code>let</code>-binding moving downward by 18 lines. That's it!<br>\n<code>aarch64</code> and <code>s390x</code> do not change at all. So, no performance<br>\nor other behavior changes are expected as a result of this.</p>\n</blockquote>",
        "id": 281748878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652131955
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117\">PR #4117</a>.</p>",
        "id": 281748879,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652131955
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#pullrequestreview-966887259\">PR review</a>.</p>",
        "id": 281753441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652134715
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#pullrequestreview-966887259\">PR review</a>.</p>",
        "id": 281753442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652134715
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#discussion_r868526356\">PR review comment</a>:</p>\n<blockquote>\n<p>We can future proof this a little for when we have more ISLE than just lowering.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>rm -f cranelift/codegen/**/generated_code.manifest\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 281753443,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652134715
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#discussion_r868534999\">PR review comment</a>:</p>\n<blockquote>\n<p>Hmm, the double-asterisk wildcard seems to work in bash and zsh, but not dash (Ubuntu's default /bin/sh [1]) or 2007-era bash on my macOS machine. So there is no portable shebang line that specifically gets bash on Ubuntu and zsh on macOS.</p>\n<p>[1] <a href=\"https://wiki.ubuntu.com/DashAsBinSh\">https://wiki.ubuntu.com/DashAsBinSh</a></p>\n<p>I'll add a comment to the build script instead to note that this should be updated. Thanks for raising the issue in any case!</p>\n</blockquote>",
        "id": 281754241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652135216
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#pullrequestreview-966893438\">PR review</a>.</p>",
        "id": 281754242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652135217
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117\">PR #4117</a> from <code>isle-prio-trie-fix-round-two</code> to <code>main</code>.</p>",
        "id": 281754500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652135369
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#pullrequestreview-966897750\">PR review</a>.</p>",
        "id": 281754915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652135658
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#discussion_r868541485\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we use a</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"ch\">#!/usr/bin/env bash</span>\n</code></pre></div>\n<p>shebang to reliably get bash across platforms?</p>\n</blockquote>",
        "id": 281754916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652135659
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#pullrequestreview-966913362\">PR review</a>.</p>",
        "id": 281757249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652137276
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#discussion_r868564580\">PR review comment</a>:</p>\n<blockquote>\n<p>The issue is that bash on macOS is from 2007 (because GPL 3 I guess) and doesn't have the feature, so we need a different shell on different platforms (<code>zsh</code> on modern macOS, <code>bash</code> on Linux).</p>\n<p>Other environments may not have a new enough shell either (older Linuxes, etc) and I don't really want to introduce a special dependency. Or at least, this isn't really a good enough reason to do so, IMHO.</p>\n</blockquote>",
        "id": 281757250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652137276
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#pullrequestreview-966949082\">PR review</a>.</p>",
        "id": 281759872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652139388
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117#discussion_r868594427\">PR review comment</a>:</p>\n<blockquote>\n<p>(merging now with your r+ but happy to refine this later if you feel strongly about it; probably would need a Rust script in place of the nonportable wildcard)</p>\n</blockquote>",
        "id": 281759873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652139388
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4117\">PR #4117</a>.</p>",
        "id": 281759891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652139409
    }
]