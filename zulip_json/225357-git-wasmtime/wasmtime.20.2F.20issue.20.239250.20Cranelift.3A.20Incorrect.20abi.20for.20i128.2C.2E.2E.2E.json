[
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">Issue #9250</a>.</p>",
        "id": 470381695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726430213
    },
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">Issue #9250</a>.</p>",
        "id": 470381696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726430213
    },
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<h3>Expected Results</h3>\n<p>All return values are returned using a single return pointer.</p>\n<h3>Actual Results</h3>\n<p>Return values are put into registers where possible and on the stack for the rest.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.111</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>This is one of the causes for <a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/issues/1525\">https://github.com/rust-lang/rustc_codegen_cranelift/issues/1525</a>. The same issue may exist on aarch64 and other archs too, but haven't checked yet.</p>\n</blockquote>",
        "id": 470381713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726430213
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2353731835\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<p>PR's opened while working on this:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9253\">https://github.com/bytecodealliance/wasmtime/pull/9253</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9258\">https://github.com/bytecodealliance/wasmtime/pull/9258</a></li>\n</ul>\n</blockquote>",
        "id": 470718363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726514493
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2353768103\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<p>Found another issue: The x86_64 and riscv64 backends add an implicit return pointer after all other arguments rather than as first argument. </p>\n</blockquote>",
        "id": 470723742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726515661
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2353731835\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<p>PR's opened while working on this:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9253\">https://github.com/bytecodealliance/wasmtime/pull/9253</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9258\">https://github.com/bytecodealliance/wasmtime/pull/9258</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9267\">https://github.com/bytecodealliance/wasmtime/pull/9267</a></li>\n</ul>\n</blockquote>",
        "id": 471071132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726600546
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2353768103\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<p>Found another issue: The x86_64 and riscv64 backends add an implicit return pointer after all other arguments rather than as first argument. </p>\n<p>Edit: Fixed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9267\">https://github.com/bytecodealliance/wasmtime/pull/9267</a></p>\n</blockquote>",
        "id": 471071162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726600559
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2353731835\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<p>PR's opened while working on this:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9253\">https://github.com/bytecodealliance/wasmtime/pull/9253</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9258\">https://github.com/bytecodealliance/wasmtime/pull/9258</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9267\">https://github.com/bytecodealliance/wasmtime/pull/9267</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9284\">https://github.com/bytecodealliance/wasmtime/pull/9284</a></li>\n</ul>\n</blockquote>",
        "id": 471534768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726767510
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2353731835\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<p>PR's opened while working on this:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9253\">https://github.com/bytecodealliance/wasmtime/pull/9253</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9258\">https://github.com/bytecodealliance/wasmtime/pull/9258</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9267\">https://github.com/bytecodealliance/wasmtime/pull/9267</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9284\">https://github.com/bytecodealliance/wasmtime/pull/9284</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/9287\">https://github.com/bytecodealliance/wasmtime/pull/9287</a></li>\n</ul>\n</blockquote>",
        "id": 471552888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726775059
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2391395242\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<blockquote>\n<p>Expected Results</p>\n<p>All return values are returned using a single return pointer.</p>\n</blockquote>\n<p>Actually, LLVM passes the return value on the stack if it doesn't fit in registers. It doesn't use a return area pointer.</p>\n</blockquote>",
        "id": 474588525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727961303
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2391395242\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<blockquote>\n<p>Expected Results</p>\n<p>All return values are returned using a single return pointer.</p>\n</blockquote>\n<p>Actually, LLVM passes the return value on the stack if it doesn't fit in registers. It doesn't use a return area pointer.</p>\n<p>Edit: Never mind. I was wrong about this.</p>\n</blockquote>",
        "id": 474602249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727965295
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250#issuecomment-2424096249\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9250\">issue #9250</a>:</p>\n<blockquote>\n<p>As of <a href=\"https://github.com/rust-lang/rust/pull/131211\">https://github.com/rust-lang/rust/pull/131211</a> rustc should no longer emit this return type. If this is indeed the case, I propose to deny any return type that doesn't fit in the abi designated return value registers for at least the system_v and windows_fastcall call convs. And ideally also for every other call conv to be able to get rid of the implicit sret argument introduction in the abi calculation code which complicates this code by a fair bit.</p>\n</blockquote>",
        "id": 477823855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729358083
    }
]