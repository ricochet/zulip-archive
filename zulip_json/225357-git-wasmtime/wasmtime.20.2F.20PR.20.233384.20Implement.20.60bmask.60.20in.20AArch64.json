[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384\">PR #3384</a> from <code>aarch64-bmask</code> to <code>main</code>:</p>\n<blockquote>\n<p>Hey, this PR Implements <code>bmask</code> for all types in the AArch64 backend, as well as fixes for <code>ireduce</code>, <code>breduce</code> and <code>bextend</code> for some types.</p>\n<p>We have to make some changes in the trampoline to make bool args with size larger than 1 work.</p>\n</blockquote>",
        "id": 254538774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632405329
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-762203448\">PR review</a>.</p>",
        "id": 254557742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632412049
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r714929987\">PR review comment</a>:</p>\n<blockquote>\n<p>I am afraid that this is not true for vector types; e.g. consider an operation from <code>B8X8</code> to <code>B16X8</code>.</p>\n<p>Unless both the input and the output have the same lane sizes (the number of lanes is always the same, as specified by the operation descriptions), you will have to write much more complicated logic, and will probably be unable to merge the scalar and vector code paths, as you do now.</p>\n</blockquote>",
        "id": 254557743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632412049
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-762203448\">PR review</a>.</p>",
        "id": 254557744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632412049
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-762224020\">PR review</a>.</p>",
        "id": 254560495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632413047
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r714944892\">PR review comment</a>:</p>\n<blockquote>\n<p>Right, I didn't really prepare this for those types (non 128 bit vectors). I haven't really seen them used anywhere so far.</p>\n<p>Would it be acceptable to assert on 128bit vectors for now?<br>\n</p>\n</blockquote>",
        "id": 254560496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632413047
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-762313583\">PR review</a>.</p>",
        "id": 254573513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632418330
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715011816\">PR review comment</a>:</p>\n<blockquote>\n<p>No, just keep the block (lines 1864 - 1869) that you have removed. Of course, you will need to change the condition - I suppose to <code>from_ty.is_vector() &amp;&amp; (from_bits != 128 || from_bits != to_bits)</code>.</p>\n<p>IMHO assertions should be used for verifying invariants guaranteed by the IR descriptions, e.g. checking that the number of input lanes is equal to the number of output lanes. That is the approach I have used in my recent changes.</p>\n</blockquote>",
        "id": 254573514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632418330
    },
    {
        "content": "<p>akirilov-arm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715011816\">PR review comment</a>.</p>",
        "id": 254574752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632418839
    },
    {
        "content": "<p>akirilov-arm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715011816\">PR review comment</a>.</p>",
        "id": 254575104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632418992
    },
    {
        "content": "<p>akirilov-arm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715011816\">PR review comment</a>.</p>",
        "id": 254575179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632419036
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384\">PR #3384</a> from <code>aarch64-bmask</code> to <code>main</code>.</p>",
        "id": 254741961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632504663
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-763482511\">PR review</a>.</p>",
        "id": 254776363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632519372
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715909652\">PR review comment</a>:</p>\n<blockquote>\n<p>Given that <code>to_bits &gt; from_bits</code>, we know that <code>from_bits &lt;= 64</code>, so there is no need to calculate a minimum here.</p>\n</blockquote>",
        "id": 254776364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632519372
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715915300\">PR review comment</a>:</p>\n<blockquote>\n<p>We could also be lowering <code>Ireduce</code> - see below.</p>\n</blockquote>",
        "id": 254776365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632519373
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-763482511\">PR review</a>.</p>",
        "id": 254776366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632519373
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715914705\">PR review comment</a>:</p>\n<blockquote>\n<p>Remove this assertion - <code>Breduce</code> from <code>B128</code> to <code>B128</code> and <code>Ireduce</code> from <code>I128</code> to <code>I128</code> are also valid operations.</p>\n</blockquote>",
        "id": 254776367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632519373
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715916161\">PR review comment</a>:</p>\n<blockquote>\n<p>I feel like this should be calculated in parallel with the bottom half, at the expense of a bit of code duplication, especially in the case of <code>from_bits == to_bits</code>.</p>\n</blockquote>",
        "id": 254776368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632519373
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-763497197\">PR review</a>.</p>",
        "id": 254777829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632520156
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715921357\">PR review comment</a>:</p>\n<blockquote>\n<p>Even after your latest changes, this comment should be changed to <code>Smaller scalar integers/booleans are...</code>.</p>\n</blockquote>",
        "id": 254777830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632520157
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-763498790\">PR review</a>.</p>",
        "id": 254778275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632520373
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715922783\">PR review comment</a>:</p>\n<blockquote>\n<p>Now that I think about it, <code>Ireduce</code> from <code>I128</code> to <code>I128</code> needs completely different treatment - the upper destination register is not a copy of the lower source register.</p>\n</blockquote>",
        "id": 254778276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632520373
    },
    {
        "content": "<p>akirilov-arm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r715922783\">PR review comment</a>.</p>",
        "id": 254778792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632520653
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-774098217\">PR review</a>.</p>",
        "id": 256601238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633621845
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r724313128\">PR review comment</a>:</p>\n<blockquote>\n<p>The docs state that <code>ireduce</code> requires that the output type is smaller than the input type, so at most we only ever have a <code>i64</code> output (if we get a <code>i128</code> input). I've checked and the verifier enforces this. <code>breduce</code> has the same language in the docs.<br>\n</p>\n</blockquote>",
        "id": 256601239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633621845
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#discussion_r724372448\">PR review comment</a>:</p>\n<blockquote>\n<p>Well, then there is a contradiction because the documentation right now <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ba3ce2280a636bbf24ca712928931550ecaa3f0b/cranelift/codegen/meta/src/shared/instructions.rs#L3883\">states</a>:</p>\n<blockquote>\n<p>The result type must have the same number of vector lanes as the input, and each lane must not have more bits that the input lanes.</p>\n</blockquote>\n<p>In other words, there are two options - either the same number of bits per lane, or fewer. If indeed the verifier enforces the second option, then do you mind making the description less ambiguous? Same for <code>Breduce</code>.</p>\n</blockquote>",
        "id": 256613500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633626277
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384#pullrequestreview-774178934\">PR review</a>.</p>",
        "id": 256613502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633626277
    },
    {
        "content": "<p>afonso360 closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3384\">PR #3384</a>.</p>",
        "id": 269435339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643213000
    }
]