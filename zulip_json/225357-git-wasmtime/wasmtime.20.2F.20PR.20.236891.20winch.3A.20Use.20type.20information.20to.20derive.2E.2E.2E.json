[
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6891\">PR #6891</a>.</p>",
        "id": 386887864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692801804
    },
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6891\">PR #6891</a> from <code>saulecabrera:winch-use-type-information-for-sizes</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change is a small refactor to how we've been handling the operand size<br>\nparameter passed to some of the <code>CodeGenContext</code> operations, namely,<br>\n<code>pop_to_reg</code> and <code>move_val_to_reg</code>.</p>\n<p>Given the more precise value tagging introduced in:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/6860\">https://github.com/bytecodealliance/wasmtime/pull/6860</a>,<br>\nit's now possible to derive the operand size from the type associated to a value<br>\nstack entry, which:</p>\n<ul>\n<li>Makes the usage of the functions mentioned above less error prone.</li>\n<li>Allows a simplification of the two function definitions mentioned above.</li>\n<li>Results in better instruction selection in some cases.</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 386887866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692801804
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6891\">PR #6891</a>.</p>",
        "id": 386887869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692801805
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6891#pullrequestreview-1592760691\">PR review</a>:</p>\n<blockquote>\n<p>This is a nice simplification, thanks! It's nice to see that some x86 code gets a little more compact too without the REX prefixes (because 32-bit moves can be used).</p>\n</blockquote>",
        "id": 386994302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692851550
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6891\">PR #6891</a>.</p>",
        "id": 386999345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692854269
    }
]