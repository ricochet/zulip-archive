[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a> from <code>afonso360:riscv-reg-newtypes</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR is a followup to a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6430#discussion_r1201233156\">suggestion made by @alexcrichton</a>, it adds newtype wrappers for the different register classes that we have in the RISC-V Backend.</p>\n<p>These are <code>XReg</code>, <code>FReg</code> and <code>VReg</code>, for Integer, Float and Vector. The newtypes are contained only to the ISLE layer, and do not propagate throughout the rest of the backend. However It would be a good idea to iteratively do so, I just felt that it would be too big a step for a first PR.</p>\n<p>This change was further complicated by a rule that we have in the backend where we auto convert <code>ValueRegs</code> into <code>Reg</code>. This rule has caused issues in the past (<a href=\"https://github.com/bytecodealliance/wasmtime/pull/5460#issue-1500769397\">1</a>, <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6317#issue-1691054353\">2</a>), and was also conflicting with the newtype wrappers. Instead of adding similar rules to the newtypes, I've removed the rule and all usages of it.</p>\n<p>Most of this change was in <code>ext_int_if_need</code> which returns ValueRegs, but most of its uses don't actually need more than one register. To that end I've repurposed the <code>zext</code> and <code>sext</code> rules, to act as single register zero or sign extends, and replaced the uses where only one register was necessary with those.</p>\n<p>These changes haven't changed any of the golden lowerings, but since it's such a broad change that I suspect we might be missing some coverage and I'm going to be fuzzing this overnight to doublecheck.</p>\n</blockquote>",
        "id": 361139748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685040009
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>.</p>",
        "id": 361139750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685040010
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>.</p>",
        "id": 361139751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685040010
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR is a followup to a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6430#discussion_r1201233156\">suggestion made by @alexcrichton</a>, it adds newtype wrappers for the different register classes that we have in the RISC-V Backend.</p>\n<p>These are <code>XReg</code>, <code>FReg</code> and <code>VReg</code>, for Integer, Float and Vector. The newtypes are contained only to the ISLE layer, and do not propagate throughout the rest of the backend. However It would be a good idea to iteratively do so, I just felt that it would be too big a step for a first PR.</p>\n<p>This change was further complicated by a rule that we have in the backend where we auto convert <code>ValueRegs</code> into <code>Reg</code>. This rule has caused issues in the past (<a href=\"https://github.com/bytecodealliance/wasmtime/pull/5460#issue-1500769397\">1</a>, <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6317#issue-1691054353\">2</a>), and was also conflicting with the newtype wrappers. Instead of adding similar rules to the newtypes, I've removed the rule and all usages of it.</p>\n<p>Most of this change was in <code>ext_int_if_need</code> which returns ValueRegs, but most of its uses don't actually need more than one register. To that end I've repurposed the <code>zext</code> and <code>sext</code> rules, to act as single register zero or sign extends, and replaced the uses where only one register was necessary with those. Extends that do need multiple registers can use <code>ext_int_if_need</code> or <code>extend</code>.</p>\n<p>These changes haven't changed any of the golden lowerings, but since it's such a broad change that I suspect we might be missing some coverage and I'm going to be fuzzing this overnight to doublecheck.</p>\n</blockquote>",
        "id": 361139937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685040072
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR is a followup to a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6430#discussion_r1201233156\">suggestion made by @alexcrichton</a>, it adds newtype wrappers for the different register classes that we have in the RISC-V Backend.</p>\n<p>These are <code>XReg</code>, <code>FReg</code> and <code>VReg</code>, for Integer, Float and Vector. The newtypes are contained only to the ISLE layer, and do not propagate throughout the rest of the backend. However It would be a good idea to iteratively do so, I just felt that it would be too big a step for a first PR.</p>\n<p>This change was further complicated by a rule that we have in the backend where we auto convert <code>ValueRegs</code> into <code>Reg</code>. This rule has caused issues in the past (<a href=\"https://github.com/bytecodealliance/wasmtime/pull/5460#issue-1500769397\">1</a>, <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6317#issue-1691054353\">2</a>), and was also conflicting with the newtype wrappers. Instead of adding similar rules to the newtypes, I've removed the rule and all usages of it.</p>\n<p>Most of this change was in <code>ext_int_if_need</code> which returns ValueRegs, but most of its uses don't actually need more than one register. To that end I've repurposed the <code>zext</code> and <code>sext</code> rules, to act as single register zero or sign extends, and replaced the uses where only one register was necessary with those. Extends that do need multiple registers can use <code>ext_int_if_need</code> or <code>extend</code>.</p>\n<p>These changes haven't changed any of the golden lowerings, but since it's such a broad change, I suspect we might be missing some coverage and I'm going to be fuzzing this overnight to doublecheck.</p>\n</blockquote>",
        "id": 361140281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685040184
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459#pullrequestreview-1444556508\">PR review</a>:</p>\n<blockquote>\n<p>Nice!</p>\n</blockquote>",
        "id": 361153817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685044259
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>.</p>",
        "id": 361153838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685044267
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>.</p>",
        "id": 361158365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685045902
    },
    {
        "content": "<p>afonso360 has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>.</p>",
        "id": 361158523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685045969
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6459\">PR #6459</a>.</p>",
        "id": 361360219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685114285
    }
]