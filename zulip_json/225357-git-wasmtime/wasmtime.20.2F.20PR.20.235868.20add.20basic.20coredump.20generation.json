[
    {
        "content": "<p>xtuc opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change adds a basic coredump generation after a WebAssembly trap was entered. The coredump includes rudimentary stack / process debugging information.</p>\n<p>A new CLI argument is added to enable coredump generation:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">coredump</span><span class=\"o\">-</span><span class=\"n\">on</span><span class=\"o\">-</span><span class=\"n\">trap</span><span class=\"o\">=/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">coredump</span><span class=\"o\">/</span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>See ./docs/examples-coredump.md for a working example.</p>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5732\">https://github.com/bytecodealliance/wasmtime/issues/5732</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[x] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 329797256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677178970
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1311977364\">PR review</a>.</p>",
        "id": 329798733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677179405
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116135812\">PR review comment</a>:</p>\n<blockquote>\n<p>For context, unix kernels allows to template the coredump path (<a href=\"https://sigquit.wordpress.com/2009/03/13/the-core-pattern/\">https://sigquit.wordpress.com/2009/03/13/the-core-pattern/</a>) using variables starting with %. We might want to support them in the future.</p>\n</blockquote>",
        "id": 329798735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677179405
    },
    {
        "content": "<p>xtuc edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116135812\">PR review comment</a>.</p>",
        "id": 329798762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677179414
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312025406\">PR review</a>.</p>",
        "id": 329806277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312025406\">PR review</a>.</p>",
        "id": 329806278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116169016\">PR review comment</a>:</p>\n<blockquote>\n<p>This is also visible on CI, but we're stricter-than-average about the dependencies we pull in for Wasmtime. Relying on something external here is fine but this specifically pulls in a number of things which I think we'll want to change/address:</p>\n<ul>\n<li><code>colored</code> - in theory this shouldn't be necessary for just building core dumps</li>\n<li><code>core-wasm-ast</code> - this looks like it may be duplicating the functionality of the already-in-use <code>wasmparser</code> crate perhaps? If that's the case we'd prefer to only have one definition of parsing wasm within wasmtime. </li>\n<li><code>hermit-abi</code> - I think this is due to the <code>num_cpus</code> update, but is the update required?</li>\n<li><code>threadpool</code> - I think in theory this shouldn't be necessary for a core dump builder</li>\n<li><code>wasm-printer</code> - does this perhaps duplicate the functionality already present in <code>wasmprinter</code>? If so like <code>wasmparser</code> it would be best to only have one implementation of this rather than multiple.</li>\n</ul>\n<p>I'll also note that we're also already using the <code>wasm-encoder</code> crate for creating core wasm modules, so if core dump functionality could be added to that or somehow leverage that I think that would be ideal.</p>\n</blockquote>",
        "id": 329806279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116169394\">PR review comment</a>:</p>\n<blockquote>\n<p>You can shorten this a bit with just <code>bail!(\"...\")</code> if you'd like</p>\n</blockquote>",
        "id": 329806280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116171690\">PR review comment</a>:</p>\n<blockquote>\n<p>Handling errors here is a bit interesting because while these operations are fallible I don't think that the error here wants to necessarily \"overwrite\" the trap error. I also don't know of a great way to \"fuse\" errors either. Perhaps for tnow this could log a warning message or similar?</p>\n</blockquote>",
        "id": 329806281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116169969\">PR review comment</a>:</p>\n<blockquote>\n<p>This'll want to be a fallible conversion, only emitting a backtrace in the core dump if <code>WasmBacktrace</code> is available I think. (as opposed to returning a different kind of error if the backtrace is missing)</p>\n</blockquote>",
        "id": 329806282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116172287\">PR review comment</a>:</p>\n<blockquote>\n<p>The backtrace frames here should also have offset information to get to the precise opcode if you'd like to add that.</p>\n</blockquote>",
        "id": 329806283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116170316\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this logic below may want to be conditional on a <code>err.is::&lt;wasmtime::Trap&gt;()</code> condition since there's a number of other unrelated things that could go wrong during execution.</p>\n</blockquote>",
        "id": 329806284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677181817
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312091132\">PR review</a>.</p>",
        "id": 329811997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677183943
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116213331\">PR review comment</a>:</p>\n<blockquote>\n<p><code>colored</code>, <code>threadpool</code> and <code>num_cpus</code>  are dependencies not directly used by <code>wasm-coredump-builder</code>, I'll make sure to remove them.</p>\n<p><code>core-wasm-ast</code> (in theory, just defines the stucts to represent coredump) and <code>wasm-printer</code> (maybe a bad name, it's used to serialize the coredump to binary Wasm) are required by <code>wasm-coredump-builder</code>. </p>\n<blockquote>\n<p>I'll also note that we're also already using the wasm-encoder crate for creating core wasm modules, so if core dump functionality could be added to that or somehow leverage that I think that would be ideal.</p>\n</blockquote>\n<p>That's indeed duplicated features with my crates. I believe I can rewrite <code>wasm-coredump-builder</code> to only use <code>wasm-encoder</code>. A disadvantage of that approach on my side is that it won't integrate well with my tools / crates, but could be specific to wasmtime. </p>\n</blockquote>",
        "id": 329811998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677183943
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312095332\">PR review</a>.</p>",
        "id": 329812549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677184151
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116216384\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point. Same with the errors bellow, I'll change the code to allow coredump generation to fail gracefully.</p>\n</blockquote>",
        "id": 329812550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677184151
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312097597\">PR review</a>.</p>",
        "id": 329812875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677184259
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116217982\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, we'll probably want that in the future. I haven't changed (or decided) the coredump format to allow <code>funcidx</code> in addition to <code>codeoffset</code> yet.</p>\n</blockquote>",
        "id": 329812876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677184259
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312100618\">PR review</a>.</p>",
        "id": 329813315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677184415
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116220075\">PR review comment</a>:</p>\n<blockquote>\n<p>With the libararified / modular CLI approach, dependecies wouldn't matter as much right?</p>\n</blockquote>",
        "id": 329813316,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677184415
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312144148\">PR review</a>.</p>",
        "id": 331123292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677186376
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116247420\">PR review comment</a>:</p>\n<blockquote>\n<p>To clarify I don't mean to pass judgement on which one should be used per se, but within the context of Wasmtime's dependency graph we'd prefer to keep only one implementation of things rather than bringing together various islands of ecosystems. I don't mean to say that you should rewrite crates on top of the crates in the <code>wasm-tools</code> repository (although feedback on those is always appreciated), but I believe that <code>wasm-encoder</code> is high-level enough and the core dump format is simple enough that doing it \"inline\" as opposed to using an external crate wouldn't be the end of the world (not that using an external crate is wrong, again just trying to keep the dependencies in Wasmtime under control)</p>\n</blockquote>",
        "id": 331123296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677186376
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312194005\">PR review</a>.</p>",
        "id": 335044380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677189029
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116281969\">PR review comment</a>:</p>\n<blockquote>\n<p>yeah I understand, I wasn't trying to argue against. I'm planning to rewrite <code>wasm-coredump-builder</code> to depend only on a new coredump specific encoding crate + <code>wasm-encoder</code>. That should address the concern.</p>\n</blockquote>",
        "id": 335044382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677189029
    },
    {
        "content": "<p>xtuc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>.</p>",
        "id": 336357767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677192541
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1312262796\">PR review</a>.</p>",
        "id": 336358284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677192780
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1116331240\">PR review comment</a>:</p>\n<blockquote>\n<p>I published a new version of <code>wasm-coredump-builder</code> that depends on <code>wasm-encoder</code> and two coredump specific crates:</p>\n<ul>\n<li><a href=\"https://github.com/xtuc/wasm-coredump/tree/main/lib/coredump-encoder\">https://github.com/xtuc/wasm-coredump/tree/main/lib/coredump-encoder</a></li>\n<li><a href=\"https://github.com/xtuc/wasm-coredump/tree/main/lib/coredump-types\">https://github.com/xtuc/wasm-coredump/tree/main/lib/coredump-types</a></li>\n</ul>\n<p>I'm not sure why <code>num_cpus</code> has been updated. Is it still related to my change?</p>\n</blockquote>",
        "id": 336358285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677192780
    },
    {
        "content": "<p>xtuc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>.</p>",
        "id": 336525474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677255570
    },
    {
        "content": "<p><strong>xtuc</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a>.</p>",
        "id": 336526219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677255743
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1313907463\">PR review</a>.</p>",
        "id": 336537356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1313907463\">PR review</a>.</p>",
        "id": 336537357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117311319\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this <code>err</code> is the wrong one being returned here (but I think it's just a small mistake due to name shadowing)</p>\n</blockquote>",
        "id": 336537358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117324983\">PR review comment</a>:</p>\n<blockquote>\n<p>For now we're enforcing that the edits to the <code>supply-chain/*</code> folder are only done by \"trusted reviewers\" of the project since this affects our supply-chain security (and others who import these audits). To that end thanks for adding these here, but our current process (which isn't well documented) is that if a contributor needs new vet entries we <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5878\">post a separate PR</a> which the contributor's PR is then rebased on top of.</p>\n<p>Once that PR lands, though, you should be able to rebase this PR on top of that one and back out the changes to the <code>supply-chain/*</code> directory. </p>\n</blockquote>",
        "id": 336537359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117328484\">PR review comment</a>:</p>\n<blockquote>\n<p>Since this will be a user-facing error message I think it might be better to reword this as \"no wasm backtrace found to generate core dump with\" or something along those lines.</p>\n</blockquote>",
        "id": 336537364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117327738\">PR review comment</a>:</p>\n<blockquote>\n<p>Sorry the context is lost on the prior comment with the update here, but again while this isn't a blocker not including the function offset seems like it could hinder the usefulness of backtraces since you don't get where you are in a function, just that you're in a certain function. If you're exploring a certian <code>unreachable</code> condition, for example, there'd be no way to figure out which one in a function was hit.</p>\n</blockquote>",
        "id": 336537365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117328959\">PR review comment</a>:</p>\n<blockquote>\n<p>Could the <code>.map_err</code> here become <code>.context(..)</code>?</p>\n</blockquote>",
        "id": 336537366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117330048\">PR review comment</a>:</p>\n<blockquote>\n<p>As a minor nit stylistically our error messages start with lowercase letters (including the \"Core dumped at ...\" message below)</p>\n</blockquote>",
        "id": 336537367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117329510\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this error also contain the path name?</p>\n</blockquote>",
        "id": 336537368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677258369
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314004486\">PR review</a>.</p>",
        "id": 336545041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677260593
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117383828\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, good catch!</p>\n</blockquote>",
        "id": 336545042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677260593
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314009127\">PR review</a>.</p>",
        "id": 336545487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677260726
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117386628\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok, thanks.</p>\n</blockquote>",
        "id": 336545488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677260726
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314018691\">PR review</a>.</p>",
        "id": 336546972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677261127
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117397172\">PR review comment</a>:</p>\n<blockquote>\n<p>The error is from <code>wasm-coredump-builder</code> and is type <code>Box&lt;dyn std::error::Error + Sync + Send&gt;</code> instead of the usual <code>anyhow::Error</code>. Is that a problem?</p>\n</blockquote>",
        "id": 336546973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677261127
    },
    {
        "content": "<p>xtuc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>.</p>",
        "id": 336547461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677261261
    },
    {
        "content": "<p>xtuc edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117386628\">PR review comment</a>.</p>",
        "id": 336547753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677261351
    },
    {
        "content": "<p>xtuc edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117386628\">PR review comment</a>.</p>",
        "id": 336547835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677261365
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117434434\">PR review comment</a>:</p>\n<blockquote>\n<p>I opened <a href=\"https://github.com/WebAssembly/tool-conventions/pull/202\">https://github.com/WebAssembly/tool-conventions/pull/202</a> to add <code>funcidx</code> to the coredump format.</p>\n</blockquote>",
        "id": 336551359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677262371
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314049822\">PR review</a>.</p>",
        "id": 336551360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677262371
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314069025\">PR review</a>.</p>",
        "id": 336554494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677263276
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117455731\">PR review comment</a>:</p>\n<blockquote>\n<p>unfortunately, I don't see a way to retrieve the instruction offset in <a href=\"https://docs.rs/wasmtime/6.0.0/wasmtime/struct.FrameInfo.html\">https://docs.rs/wasmtime/6.0.0/wasmtime/struct.FrameInfo.html</a>.</p>\n<p>There's a  method to retrieve the func offset in the module: <a href=\"https://docs.rs/wasmtime/6.0.0/wasmtime/struct.FrameInfo.html#method.func_offset\">https://docs.rs/wasmtime/6.0.0/wasmtime/struct.FrameInfo.html#method.func_offset</a>.</p>\n</blockquote>",
        "id": 336554495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677263276
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314075804\">PR review</a>.</p>",
        "id": 336555565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677263611
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117462848\">PR review comment</a>:</p>\n<blockquote>\n<p>It looks like <code>func_offset</code> is actually what is needed? The documentation reads \"Returns the offset from the original wasm module’s function to this frame’s program counter.\" i.e., it encodes <code>PC - function_start</code>, the offset of the instruction. (The name is somewhat confusing though -- \"offset in function\" rather than \"offset of function\"!)</p>\n</blockquote>",
        "id": 336555566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677263612
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314082658\">PR review</a>.</p>",
        "id": 336556624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677263935
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117470074\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah great, I misunderstood. Thanks</p>\n</blockquote>",
        "id": 336556626,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677263935
    },
    {
        "content": "<p>xtuc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>.</p>",
        "id": 336571822,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677269135
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1314182215\">PR review</a>.</p>",
        "id": 336571915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677269166
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1117579349\">PR review comment</a>:</p>\n<blockquote>\n<p>Added <code>codeoffset</code>.</p>\n</blockquote>",
        "id": 336571916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677269166
    },
    {
        "content": "<p>xtuc edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change adds a basic coredump generation after a WebAssembly trap was entered. The coredump includes rudimentary stack / process debugging information.</p>\n<p>A new CLI argument is added to enable coredump generation:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">coredump</span><span class=\"o\">-</span><span class=\"n\">on</span><span class=\"o\">-</span><span class=\"n\">trap</span><span class=\"o\">=/</span><span class=\"n\">path</span><span class=\"o\">/</span><span class=\"n\">to</span><span class=\"o\">/</span><span class=\"n\">coredump</span><span class=\"o\">/</span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>See ./docs/examples-coredump.md for a working example.</p>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5732\">https://github.com/bytecodealliance/wasmtime/issues/5732</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[x] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 337884738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677272378
    },
    {
        "content": "<p>xtuc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>.</p>",
        "id": 338452361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677532797
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1317871271\">PR review</a>.</p>",
        "id": 338617827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598266
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1317871271\">PR review</a>.</p>",
        "id": 338617829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598266
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1120253304\">PR review comment</a>:</p>\n<blockquote>\n<p>It's a problem insofar as the error's contexet is all lost here, only displaying one error in a possible chain of errors contained within the trait object. Whether your library exercises that I'm not sure, though.</p>\n</blockquote>",
        "id": 338617831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598266
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1120251982\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this perhaps be a conditional invocation of <code>.codeoffset</code> due to it not always being available?</p>\n</blockquote>",
        "id": 338617833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598267
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1317899534\">PR review</a>.</p>",
        "id": 338619913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598786
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1120273895\">PR review comment</a>:</p>\n<blockquote>\n<p>It's not a problem for my library, for now, as it doesn't add context to errors.</p>\n</blockquote>",
        "id": 338619914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598786
    },
    {
        "content": "<p>xtuc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#pullrequestreview-1317902384\">PR review</a>.</p>",
        "id": 338620265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598868
    },
    {
        "content": "<p>xtuc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868#discussion_r1120276241\">PR review comment</a>:</p>\n<blockquote>\n<p>The result would be the same; <code>codeoffset</code> has to be specified in coredump and can default to 0 if unknown. At least now, it's explicit.</p>\n</blockquote>",
        "id": 338620267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677598869
    },
    {
        "content": "<p>xtuc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a> from <code>sven/basic-coredump</code> to <code>main</code>.</p>",
        "id": 338680590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677614608
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5868\">PR #5868</a>.</p>",
        "id": 338691956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677618389
    }
]