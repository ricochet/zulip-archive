[
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870#issuecomment-1442540248\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870\">issue #5870</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thank you, I was just trying to decide what to do about this for #5850.</p>\n<p>Have you double-checked the precise-output tests for these backends to make sure that each of these cases is covered? I suspect they are all covered but it'd be nice to make sure while we're thinking about it.</p>\n</blockquote>\n<p>I had a quick look through the tests I was removing, and @cfallin is right about adding generic cold-block tests. I'll add one to each backend before merging this <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 336359017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677193098
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870#issuecomment-1442575700\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870\">issue #5870</a>:</p>\n<blockquote>\n<p>Huh. On all backends, this new test produces the same lowered block order, with or without the <code>cold</code> annotation.</p>\n<p>In fact as best I can tell, the only difference in generated code between the two cases is that if the <code>cold</code> annotation is used, all backends insert an unreachable \"jump\" instruction after the \"return\" and before the cold block. That seems like a bug?</p>\n<p>But I think it would also help to have a test which actually produces a different lowering order with the annotation than without.</p>\n</blockquote>",
        "id": 336364164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677195531
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870#issuecomment-1442602063\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870\">issue #5870</a>:</p>\n<blockquote>\n<blockquote>\n<p>Huh. On all backends, this new test produces the same lowered block order, with or without the <code>cold</code> annotation.</p>\n<p>In fact as best I can tell, the only difference in generated code between the two cases is that if the <code>cold</code> annotation is used, all backends insert an unreachable \"jump\" instruction after the \"return\" and before the cold block. That seems like a bug?</p>\n<p>But I think it would also help to have a test which actually produces a different lowering order with the annotation than without.</p>\n</blockquote>\n<p>Good call. I've replaced the one I ported from the x64 test with one that is simpler, and easier to show the block order changing with.</p>\n</blockquote>",
        "id": 336367739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677197372
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870#issuecomment-1442653973\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870\">issue #5870</a>:</p>\n<blockquote>\n<blockquote>\n<p>In fact as best I can tell, the only difference in generated code between the two cases is that if the <code>cold</code> annotation is used, all backends insert an unreachable \"jump\" instruction after the \"return\" and before the cold block. That seems like a bug?</p>\n</blockquote>\n<p>It's unreachable code, that you can see really well when comparing the VCode and disassembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">VCode</span>:                            <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">Disassembled</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\">                    </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x0</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x4</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">4660</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"w\">     </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"w\">            </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mh\">0x1234</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label2</span><span class=\"w\">        </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">je</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"w\">               </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x17</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block3</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block3</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x1a</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">subl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">4660</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"w\">       </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">subl</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mh\">0x1234</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"w\">        </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"w\">            </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label4</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label5</span><span class=\"w\">        </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jne</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block5</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block4</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x2f</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\">                    </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span><span class=\"w\">                             </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block8</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block5</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x34</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\"> </span><span class=\"mh\">0x1a</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block6</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label6</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block4</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mh\">0x1234</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label6</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block6</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">je</span><span class=\"w\"> </span><span class=\"mh\">0x1a</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"w\">               </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block7</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x4c</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">4660</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"w\">       </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label7</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label8</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block7</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label6</span>\n</code></pre></div>\n<p>I think we could fix this pretty easily in the machinst buffer, but we might need to track a little bit of additional state to know when blocks are unreachable.</p>\n</blockquote>",
        "id": 336374721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677201179
    },
    {
        "content": "<p>elliottt edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870#issuecomment-1442653973\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870\">issue #5870</a>:</p>\n<blockquote>\n<blockquote>\n<p>In fact as best I can tell, the only difference in generated code between the two cases is that if the <code>cold</code> annotation is used, all backends insert an unreachable \"jump\" instruction after the \"return\" and before the cold block. That seems like a bug?</p>\n</blockquote>\n<p>It's unreachable code, that you can see really well when comparing the VCode and disassembly. VCode block8 is disassembled block5, and the unconditional jump in block6 in the VCode to block8 got inlined, the original condition got inverted, and the final jump went back to <code>block6</code> again.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">VCode</span>:                            <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">Disassembled</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\">                    </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x0</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x4</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">4660</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"w\">     </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"w\">            </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mh\">0x1234</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label1</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label2</span><span class=\"w\">        </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">je</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"w\">               </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x17</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block3</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block3</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x1a</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">subl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">4660</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"w\">       </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">subl</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mh\">0x1234</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"w\">        </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"w\">            </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label4</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label5</span><span class=\"w\">        </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jne</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block5</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block4</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x2f</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"w\">              </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\">                    </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span><span class=\"w\">                             </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block8</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block5</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x34</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\"> </span><span class=\"mh\">0x1a</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>:                           <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block6</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label6</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block4</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mh\">0x1234</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label6</span><span class=\"w\">                  </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block6</span>:                           <span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">je</span><span class=\"w\"> </span><span class=\"mh\">0x1a</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"w\">               </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block7</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x4c</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">addl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">4660</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"w\">       </span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\"> </span><span class=\"mh\">0x39</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r8d</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label7</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label8</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block7</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label6</span>\n</code></pre></div>\n<p>I think we could fix this pretty easily in the machinst buffer, but we might need to track a little bit of additional state to know when blocks are unreachable.</p>\n</blockquote>",
        "id": 336374933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677201309
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870#issuecomment-1442656074\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870\">issue #5870</a>:</p>\n<blockquote>\n<p>Yes, this version of the cold-block tests looks great! I think \"if-then triangle\" CFG is perfect for this.</p>\n</blockquote>",
        "id": 336374962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677201332
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870#issuecomment-1442661253\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5870\">issue #5870</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think we could fix this pretty easily in the machinst buffer, but we might need to track a little bit of additional state to know when blocks are unreachable.</p>\n</blockquote>\n<p>To add a little more detail to that: removing the dead block at the MachBuffer level would require the MachBuffer to know about instructions other than branches (here, a return instruction that makes the following block unreachable); in the original MachBuffer design that was an explicit anti-goal, for simplicity.</p>\n<p>Now that we're at more of a \"polish the mature code\" stage of development, I think it'd be totally reasonable to give the MachBuffer a notion of explicit \"informed unreachability\": the emitter could invoke a method like <code>.mark_unreachable()</code> after a return, similar in spirit to how it informs the MachBuffer about branches.</p>\n<p>The tricky part is weaving that into the existing mechanism, and updating the correctness proof accordingly. It probably implies a new kind of record in the \"latest branch\" list. Unreachability is currently implicitly recognized as a property that follows an unconditional branch instead.</p>\n<p>All that said, I don't think this is the highest-priority change: these blocks could impact icache pressure by increasing code size a little, but are dead, i.e. not actually executed. Still, the above is the place to start if someone wants to tackle it!</p>\n</blockquote>",
        "id": 336375564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677201727
    }
]