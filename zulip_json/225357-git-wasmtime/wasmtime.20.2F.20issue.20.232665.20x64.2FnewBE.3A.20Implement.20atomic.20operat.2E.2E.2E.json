[
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2665\">issue #2665</a>:</p>\n<blockquote>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>See title</p>\n<h4>Benefit</h4>\n<p>Necessary for compiler-builtins to compile with cg_clif on macOS and other x86 targets that are specified to support 128bit atomics.</p>\n<h4>Implementation</h4>\n<p>Use cmpxchg16b</p>\n<h4>Alternatives</h4>\n<p>&lt;!-- Have you considered alternative implementations? If so, how are they<br>\nbetter or worse than your proposal? --&gt;<br>\n</p>\n</blockquote>",
        "id": 255812738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633125205
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2665\">issue #2665</a>:</p>\n<blockquote>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>See title</p>\n<h4>Benefit</h4>\n<p>Necessary for compiler-builtins to compile with cg_clif on macOS and other x86 targets that are specified to support 128bit atomics.</p>\n<h4>Implementation</h4>\n<p>Use cmpxchg16b</p>\n<h4>Alternatives</h4>\n<p>&lt;!-- Have you considered alternative implementations? If so, how are they<br>\nbetter or worse than your proposal? --&gt;<br>\n</p>\n</blockquote>",
        "id": 255812739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633125205
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2665#issuecomment-1360371365\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2665\">issue #2665</a>:</p>\n<blockquote>\n<p>Rust is close to stabilizing the cmpchg16b vendor intrinsic, which requires this. On AArch64 I also already need a patch to disable AtomicU128 in libstd.</p>\n</blockquote>",
        "id": 317046562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671573160
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2665#issuecomment-1360427305\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2665\">issue #2665</a>:</p>\n<blockquote>\n<p>We'd be happy to review a PR for this; might make a good starter issue. (Otherwise I'm not sure if someone has the bandwidth to implement it it in the short term.)</p>\n</blockquote>",
        "id": 317056359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671577537
    }
]