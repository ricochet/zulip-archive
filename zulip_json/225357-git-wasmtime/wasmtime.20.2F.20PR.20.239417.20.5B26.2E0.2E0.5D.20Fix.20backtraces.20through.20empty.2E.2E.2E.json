[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9417\">PR #9417</a>.</p>",
        "id": 475892616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728486746
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9417\">PR #9417</a>.</p>",
        "id": 475892619,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728486747
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9417\">PR #9417</a> from <code>alexcrichton:fix26pr</code> to <code>bytecodealliance:release-26.0.0</code>:</p>\n<blockquote>\n<p>This fixes a bug where we would not properly handle contiguous sequences of Wasm frames that are empty. This was mistakenly believed to be an impossible scenario, and before the tail-calls proposal it was impossible, however it can now happen after the following series of events:</p>\n<ul>\n<li>\n<p>Host calls into Wasm, pushing the entry trampoline frame.</p>\n</li>\n<li>\n<p>Entry trampoline calls the actual Wasm function, pushing a Wasm frame.</p>\n</li>\n<li>\n<p>Wasm function tail calls to an imported host function, <em>replacing</em> the Wasm frame with the exit trampoline's frame.</p>\n</li>\n</ul>\n<p>Now we have a stack like <code>[host, entry trampoline, exit trampoline]</code>, which has zero Wasm frames between the entry and exit trampolines. If the host function that the exit trampoline calls out to attempts to capture a backtrace, then -- before this commit -- we would fail an internal assertion and panic. That panic would then unwind to the first Rust frame that is called by Wasm. With Rust 1.81 and later, Rust automatically inserts a panic handler that prevents the unwind from continuing into external/foreign code, which is undefined behavior, and aborts the process. Rust versions before 1.81 would attempt to continue unwinding, hitting undefined behavior.</p>\n<p>This commit fixes the backtrace capturing machinery to handle empty sequences of Wasm frames, passes the assertion, and avoids unwinding into external/foreign code.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 475892622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728486747
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9417#pullrequestreview-2357481101\">PR review</a>.</p>",
        "id": 475895216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728487218
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9417\">PR #9417</a>.</p>",
        "id": 475896598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728487496
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9417\">PR #9417</a>.</p>",
        "id": 475905912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728489441
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9417\">PR #9417</a>.</p>",
        "id": 475909222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728490350
    }
]