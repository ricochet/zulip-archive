[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4269\">PR #4269</a> from <code>14-bit-type</code> to <code>main</code>:</p>\n<blockquote>\n<p>After extending <code>Type</code> to a <code>u16</code>, <code>ValueData</code> became 12 bytes rather<br>\nthan 8. This packs it back down to 8 bytes (64 bits) by stealing two<br>\nbits from the <code>Type</code> for the enum discriminant (leaving 14 bits for the<br>\ntype itself).</p>\n<p>Performance comparison (3-way between original (<code>ty-u8</code>), 16-bit <code>Type</code><br>\n(<code>ty-u16</code>), and this PR (<code>ty-packed</code>)):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~/</span><span class=\"n\">work</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"kt\">u8</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"kt\">u16</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"n\">packed</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">--</span><span class=\"n\">iterations</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">processes</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"err\">\\</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">benchmarks</span><span class=\"o\">-</span><span class=\"n\">next</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">benchmarks</span><span class=\"o\">-</span><span class=\"n\">next</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cycles</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">20654406874</span><span class=\"w\"> </span><span class=\"mf\">21749213920.50</span><span class=\"w\"> </span><span class=\"mi\">22958520306</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">cfallin</span><span class=\"o\">/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"n\">packed</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">22227738316</span><span class=\"w\"> </span><span class=\"mf\">22584704883.90</span><span class=\"w\"> </span><span class=\"mi\">22916433748</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">cfallin</span><span class=\"o\">/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"kt\">u16</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">20659150490</span><span class=\"w\"> </span><span class=\"mf\">21598675968.60</span><span class=\"w\"> </span><span class=\"mi\">22588108428</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">cfallin</span><span class=\"o\">/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"kt\">u8</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">nanoseconds</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">5435333269</span><span class=\"w\"> </span><span class=\"mf\">5723139427.25</span><span class=\"w\"> </span><span class=\"mi\">6041072883</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">cfallin</span><span class=\"o\">/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"n\">packed</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">5848788229</span><span class=\"w\"> </span><span class=\"mf\">5942729637.85</span><span class=\"w\"> </span><span class=\"mi\">6030030341</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">cfallin</span><span class=\"o\">/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"kt\">u16</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">[</span><span class=\"mi\">5436002390</span><span class=\"w\"> </span><span class=\"mf\">5683248226.10</span><span class=\"w\"> </span><span class=\"mi\">5943626225</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">cfallin</span><span class=\"o\">/</span><span class=\"n\">ty</span><span class=\"o\">-</span><span class=\"kt\">u8</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>So, when compiling SpiderMonkey.wasm, making <code>Type</code> 16 bits regresses<br>\nperformance by 4.5% (5.683s -&gt; 5.723s), while this PR gets 14 bits for a 1.0%<br>\ncost (5.683s -&gt; 5.723s). That's still not great, and we can likely do better,<br>\nbut it's a start.</p>\n<p>cc @sparker-arm -- you could try this as a starting point, and maybe look<br>\nfor where the remaining 1% degradation is coming from and try to address it?<br>\nI suspect that the <code>Vec&lt;Type&gt;</code> in <code>VCode</code> may be playing a role, and if so<br>\nwe can do a sparse-out-of-bounds trick (<code>Vec&lt;u8&gt;</code> with one sentinel<br>\n\"out of bounds\" indicator value and <code>FxHashMap&lt;Value, Type&gt;</code> for exceptions).</p>\n</blockquote>",
        "id": 286114188,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655231385
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4269\">PR #4269</a> from <code>14-bit-type</code> to <code>main</code>.</p>",
        "id": 288551078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657036734
    },
    {
        "content": "<p><strong>cfallin</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4269\">PR #4269</a> as ready for review.</p>",
        "id": 288551212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657036785
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/sparker-arm\">sparker-arm</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4269\">PR #4269</a>.</p>",
        "id": 288551320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657036822
    },
    {
        "content": "<p>sparker-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4269#pullrequestreview-1028950766\">PR review</a>.</p>",
        "id": 288559820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657040817
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4269\">PR #4269</a> from <code>14-bit-type</code> to <code>main</code>.</p>",
        "id": 288590018,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657053929
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4269\">PR #4269</a>.</p>",
        "id": 288596308,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657057864
    }
]