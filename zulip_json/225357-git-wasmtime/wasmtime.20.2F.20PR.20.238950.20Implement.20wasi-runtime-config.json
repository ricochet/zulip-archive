[
    {
        "content": "<p>iawia002 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a> from <code>iawia002:wasi-runtime-config</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Part of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8929\">https://github.com/bytecodealliance/wasmtime/issues/8929</a>, the integration of <code>wasmtime-cli</code> will be implemented in the next separate PR.</p>\n<p>close <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">https://github.com/bytecodealliance/wasmtime/pull/8939</a><br>\nclose <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8928\">https://github.com/bytecodealliance/wasmtime/pull/8928</a></p>\n<p>cc @alexcrichton </p>\n</blockquote>",
        "id": 451131931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720851711
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 451131932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720851712
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 451131933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720851712
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 451131934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720851712
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 451133005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720852713
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 451135385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720854211
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2178460178\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! This all looks good to me.</p>\n<p>Could this also get hooked up to the CLI as well? Under perhaps <code>-Sruntime-config</code> and/or some other <code>-S</code> flags for the actual keys themselves?</p>\n</blockquote>",
        "id": 451600530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070660
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2178460178\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! This all looks good to me.</p>\n<p>Could this also get hooked up to the CLI as well? Under perhaps <code>-Sruntime-config</code> and/or some other <code>-S</code> flags for the actual keys themselves?</p>\n</blockquote>",
        "id": 451600531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070660
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678277751\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this file also have an assert to ensure that there's a test for all runtime_config tests? Something along the lines of:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/de29ce35982eba2060709491309ccc93b397168c/crates/wasi-http/tests/all/main.rs#L117-L124\">https://github.com/bytecodealliance/wasmtime/blob/de29ce35982eba2060709491309ccc93b397168c/crates/wasi-http/tests/all/main.rs#L117-L124</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/de29ce35982eba2060709491309ccc93b397168c/crates/wasi-http/tests/all/async_.rs#L5\">https://github.com/bytecodealliance/wasmtime/blob/de29ce35982eba2060709491309ccc93b397168c/crates/wasi-http/tests/all/async_.rs#L5</a></li>\n</ul>\n</blockquote>",
        "id": 451600533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070660
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2178419814\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! A bunch of stylistic/idiomatic/ergonomic suggestions and nitpicks below, but this looks good, and we should be able to land it shortly after those things are addressed.</p>\n</blockquote>",
        "id": 451601390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2178419814\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! A bunch of stylistic/idiomatic/ergonomic suggestions and nitpicks below, but this looks good, and we should be able to land it shortly after those things are addressed.</p>\n</blockquote>",
        "id": 451601391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678266256\">PR review comment</a>:</p>\n<blockquote>\n<p>Is the idea here to separate the configured variables from the per-<code>Store</code> state, so that the variables can be reused across many <code>Store</code>s?</p>\n<p>Can you document that fact?</p>\n</blockquote>",
        "id": 451601392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678271697\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it would be more ergonomic and idiomatic to turn this function into a <a href=\"https://doc.rust-lang.org/nightly/std/iter/trait.FromIterator.html\"><code>FromIterator</code></a> trait implementation, derive the <code>Default</code> trait for this type, make <code>new</code> return the default, and also add a <code>fn define(&amp;mut self, key: impl Into&lt;String&gt;, value: impl Into&lt;String&gt;) -&gt; &amp;mut Self</code> builder-style method.</p>\n</blockquote>",
        "id": 451601393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678267867\">PR review comment</a>:</p>\n<blockquote>\n<p>Can you add a top-level doc comment that describes what this crate does, links to the associated WASI proposal, and provides an example of how to use the crate?</p>\n<p>Additionally, can you deny missing documentation for this crate?</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>//! top-level docs go here...\n\n#![deny(missing_docs)]\n\nuse anyhow::Result;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 451601394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678272780\">PR review comment</a>:</p>\n<blockquote>\n<p>And then also rename this to <code>WasiRuntimeConfig</code>.</p>\n</blockquote>",
        "id": 451601395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678272279\">PR review comment</a>:</p>\n<blockquote>\n<p>Soft preference to rename this to <code>WasiRuntimeConfigVariables</code>.</p>\n</blockquote>",
        "id": 451601396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678279456\">PR review comment</a>:</p>\n<blockquote>\n<p>Isn't this <code>... + 'static</code> bound going to mean that you can effectively only use <code>WasiRuntimeConfigView&lt;'static&gt;</code>?</p>\n<p>If so -- and if the <code>'static</code> bound is necessary, which I think it is -- then instead of using lifetimes and borrows between <code>WasiRuntimeConfigVariables</code> and <code>WasiRuntimeConfig</code>, we should make <code>WasiRuntimeConfig</code> a newtype of <code>Arc&lt;WasiRuntimeConfigVariables&gt;</code>.</p>\n</blockquote>",
        "id": 451601397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678276054\">PR review comment</a>:</p>\n<blockquote>\n<p>And it would also be nice, for convenience, to</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"nb\">From</span><span class=\"o\">&lt;&amp;'</span><span class=\"na\">a</span><span class=\"w\"> </span><span class=\"n\">WasiRuntimeConfigVariables</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WasiRuntimeConfig</span><span class=\"o\">&lt;'</span><span class=\"na\">a</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>You might also want to consider</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiRuntimeConfig</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"sd\">/// Create a new, empty runtime configuration.</span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">empty</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">WasiRuntimeConfig</span><span class=\"o\">&lt;'</span><span class=\"nb\">static</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">EMPTY_VARS</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">WasiRuntimeConfigVariables</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"cm\">/* ... */</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">        </span><span class=\"bp\">Self</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">EMPTY_VARS</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 451601399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678251902\">PR review comment</a>:</p>\n<blockquote>\n<p>Might as well make this as portable as we can while we are here:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>#!/usr/bin/env bash\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 451601404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721070812
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 451696342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721114759
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2179435189\">PR review</a>.</p>",
        "id": 451697036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721114973
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678895978\">PR review comment</a>:</p>\n<blockquote>\n<p>The <code>'static</code> bound is necessary, but this made me think further, since the <code>wasi-runtime-config</code> API is very simple, so I reduced some excessive encapsulation by removing <code>WasiRuntimeConfigVariables</code>/<code>WasiRuntimeConfigCtx</code> and keeping only <code>WasiRuntimeConfig</code>. Now, this problem should no longer exists.</p>\n</blockquote>",
        "id": 451697037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721114973
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2179446823\">PR review</a>.</p>",
        "id": 451697896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721115297
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678903313\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Is the idea here to separate the configured variables from the per-<code>Store</code> state, so that the variables can be reused across many <code>Store</code>s?</p>\n</blockquote>\n</blockquote>\n<p>The idea here is very simple: it's just passing some configuration variables from the runtime to the component. I did add some documentation, but it is not described this way. Please check if the current description is reasonable. Feel free to add more comments.</p>\n</blockquote>",
        "id": 451697897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721115297
    },
    {
        "content": "<p>iawia002 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1678903313\">PR review comment</a>.</p>",
        "id": 451697930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721115305
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#issuecomment-2230236523\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>:</p>\n<blockquote>\n<blockquote>\n<p>Could this also get hooked up to the CLI as well? Under perhaps <code>-Sruntime-config</code> and/or some other <code>-S</code> flags for the actual keys themselves?</p>\n</blockquote>\n<p>I made some changes based on all the comments except this one, because I plan to add support for the <code>wasi-runtime-config</code> API to <code>wasmtime-cli</code> in a separate PR. Otherwise, this PR would have too many changes, let's focus on the <code>wasi-runtime-config</code> implementation only in this PR.</p>\n<p>And I think all comments have been addressed, PTAL.</p>\n</blockquote>",
        "id": 451699275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721115802
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2180523830\">PR review</a>.</p>",
        "id": 451778743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721142057
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2180523830\">PR review</a>.</p>",
        "id": 451778744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721142058
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1679574306\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think that this is the signature that you want because it would imply that every time an import is called it would <code>.clone()</code> the entire <code>WasiRuntimeConfig</code> structure which could be pretty expensive.</p>\n</blockquote>",
        "id": 451778745,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721142058
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1679576405\">PR review comment</a>:</p>\n<blockquote>\n<p>The <code>+ 'static</code> doesn't require <code>&lt;'static&gt;</code> in this case since the <code>+ 'static</code> only applies to the lifetime of the captures of the closure itself. This I think was the desired signature which allows borrowing the config without cloning it on import calls.</p>\n</blockquote>",
        "id": 451778746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721142058
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 451910658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721181058
    },
    {
        "content": "<p>iawia002 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2181717663\">PR review</a>.</p>",
        "id": 451912054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721181534
    },
    {
        "content": "<p>iawia002 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#discussion_r1680304149\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, you are right, I did not understand it correctly last time. I made some changes (<a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950/commits/99b6a113c6a5e13ce3d1a016792b32948ae7d461\">https://github.com/bytecodealliance/wasmtime/pull/8950/commits/99b6a113c6a5e13ce3d1a016792b32948ae7d461</a>) and returned to the original <code>WasiRuntimeConfigVariables</code> + <code>WasiRuntimeConfig</code> style. Hope I have understood it correctly this time.</p>\n</blockquote>",
        "id": 451912055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721181535
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#pullrequestreview-2183202588\">PR review</a>.</p>",
        "id": 452101707,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721228485
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>.</p>",
        "id": 452106001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721229465
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#issuecomment-2233724524\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 452125278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721233880
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950#issuecomment-2234991118\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8950\">PR #8950</a>:</p>\n<blockquote>\n<p>Thanks for the review!</p>\n</blockquote>",
        "id": 452221477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721264891
    }
]