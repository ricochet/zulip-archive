[
    {
        "content": "<p>kubkon edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 190315231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583951160
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 190402263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584026533
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 190484553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584091560
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 190486024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584092758
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 190514980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584112736
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 190831792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584442171
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 190972312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584534387
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191001793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584547260
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191003884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584548055
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191040497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584564706
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191042507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584565730
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191042856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584565925
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191053174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584572097
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191085759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584609169
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191086651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584609652
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191095327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584614598
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191095992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584614884
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191100988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584618097
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191146193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584638436
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191153291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584641252
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-377983029\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-377983029\">PR Review</a>.</p>",
        "id": 191155213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584642163
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395231689\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395231689\">PR Review Comment</a>:</p>\n<blockquote>\n<p>can you just use the <code>Into&lt;u32&gt;</code> implementation?</p>\n</blockquote>",
        "id": 191155215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584642163
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-377991960\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-377991960\">PR Review</a>.</p>",
        "id": 191157028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584642884
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395238847\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395238847\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I agree it'd be good to have one way to do this, rather than two. Could I suggest preferring <code>.inner()</code> over <code>.into()</code>? Most of the code in wasi-common should treat these as opaque, so it'd be nice for the places where we do need to peek inside to stand out.</p>\n</blockquote>",
        "id": 191157029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584642884
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191157314,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584643016
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191168343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648399
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378020879\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378020879\">PR Review</a>.</p>",
        "id": 191168378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395262075\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395262075\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>fd_pool</code> and <code>entries</code> need to stay in sync with each other. How awkward would it be to have a single <code>RefCell</code> that holds a struct containing both?</p>\n</blockquote>",
        "id": 191168379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378020879\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378020879\">PR Review</a>.</p>",
        "id": 191168380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395272307\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395272307\">PR Review Comment</a>:</p>\n<blockquote>\n<p>And similar here? If so, we may not even need the <code>contains_key</code> method, which would be nice because it can be tricky to use without look-before-you-leap hazards.</p>\n</blockquote>",
        "id": 191168382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395274737\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395274737\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Instead of <code>from</code>, what would you think of naming this method <code>from_raw</code>, to emphasize that this call is not something one should do often.</p>\n</blockquote>",
        "id": 191168383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395277052\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395277052\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Implementing this as a trait for <code>WasiCtx</code> is an interesting idea, and it is pretty fun to do <code>ctx.fd_close</code> as the code does above, but does this make it harder to share a <code>WasiCtx</code> between snapshot versions in the same wasm module?</p>\n</blockquote>",
        "id": 191168384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395271449\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395271449\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This isn't strictly incorrect (at least while we only have one thread), but it feels awkward. Would it work to do something like this? A little verbose still, but it only does one borrow and one entries lookup.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">maybe</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Ref</span>::<span class=\"n\">map</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">borrow</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">entries</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">entries</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">});</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">maybe</span><span class=\"p\">.</span><span class=\"n\">is_none</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">Errno</span>::<span class=\"n\">BadF</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">Ref</span>::<span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">maybe</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">maybe_entry</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">maybe_entry</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>?</p>\n</blockquote>",
        "id": 191168385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395280911\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395280911\">PR Review Comment</a>:</p>\n<blockquote>\n<p>What does <code>bc</code> stand for?</p>\n</blockquote>",
        "id": 191168386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395276274\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395276274\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is there a path to where these <code>trace!</code> calls could be auto-generated by wiggle?</p>\n</blockquote>",
        "id": 191168387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395283993\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395283993\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can you say more about the <code>unsafe</code> here? I assume wiggle has done the bounds checking before we get here, is that right?</p>\n</blockquote>",
        "id": 191168388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395288367\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395288367\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is it temporary to add this hook in <code>wig</code> here?</p>\n</blockquote>",
        "id": 191168389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648420
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378055979\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378055979\">PR Review</a>.</p>",
        "id": 191168565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648500
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395290369\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395290369\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, excellent observation!</p>\n</blockquote>",
        "id": 191168566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648500
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378056420\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378056420\">PR Review</a>.</p>",
        "id": 191168639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648544
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395290704\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395290704\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Awesome, this is exactly what I wanted to do and couldn't figure out how. Thanks! :-D</p>\n</blockquote>",
        "id": 191168640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648544
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378056920\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378056920\">PR Review</a>.</p>",
        "id": 191168706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648589
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395291081\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395291081\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Right, I've actually tweaked this only so that it builds. I was going to cc you about the <code>fs</code> module and how we'd want to handle things here :-)</p>\n</blockquote>",
        "id": 191168707,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648589
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378057912\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378057912\">PR Review</a>.</p>",
        "id": 191168893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648679
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395291837\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395291837\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Excellent question! Thanks for bringing it up! @pchickey and I had some thoughts about this, and as far as I can tell, he would rather avoid adding logging to <code>wiggle</code> (which is where we'd want this to end up actually). I haven't put that much thought to it just yet, hence why I left the traces in <code>wasi-common</code>, but I'm open to suggestions here!</p>\n</blockquote>",
        "id": 191168895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648679
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395292094\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395292094\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, I missed the part of your earlier comment where you explained this ^_^.</p>\n</blockquote>",
        "id": 191168943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648714
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378058258\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378058258\">PR Review</a>.</p>",
        "id": 191168944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648714
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378058893\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378058893\">PR Review</a>.</p>",
        "id": 191169049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648774
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395292613\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395292613\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Excellent question! So I think it won't be that difficult. However, I suggest to leave that for a subsequent PR. I'm purposely migrated all impls into one module and directly into the trait impl so that we can have a better idea how to tackle the problem of multiple snapshots/polyfill. Does it make sense?</p>\n</blockquote>",
        "id": 191169050,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648774
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378059582\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378059582\">PR Review</a>.</p>",
        "id": 191169119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648822
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395293147\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395293147\">PR Review Comment</a>:</p>\n<blockquote>\n<p>You got me, I was just following @alexcrichton's example in <code>wiggle</code>'s tests :-} I'm happy to change it to something more meaningful, say <code>borrows</code>?</p>\n</blockquote>",
        "id": 191169120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584648822
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378061849\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378061849\">PR Review</a>.</p>",
        "id": 191169499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649031
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395294956\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395294956\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That's correct, <code>as_raw</code> does the bounds checking. We need <code>unsafe</code> here since we're dereferencing a raw <code>*mut _</code> pointer, and in this particular case, we're obtaining <code>&amp;str</code>. The signature of this function here is:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">fn</span> <span class=\"nf\">as_raw</span><span class=\"p\">(...)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;*</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">GuestError</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>This is unsafe since we cannot really track the references here other than by using <code>GuestBorrows</code>. More on that <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/wiggle/crates/runtime/src/lib.rs#L401\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/wiggle/crates/runtime/src/lib.rs#L401\">here</a>.</p>\n</blockquote>",
        "id": 191169500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649031
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395295411\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395295411\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yep, until we figure out where to put the glue macro for <code>wasmtime-wasi</code>/<code>wasmtime</code>, i.e., the one that's autogenerating the <code>Func</code> wrappers, and whatnot.</p>\n</blockquote>",
        "id": 191169607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649086
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378062413\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378062413\">PR Review</a>.</p>",
        "id": 191169608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649086
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378066668\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378066668\">PR Review</a>.</p>",
        "id": 191170305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649475
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395298687\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395298687\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'll try to beat everyone to the question here. I'm not sure how to handle this better with the current state of <code>wiggle</code> (which is not to say we can't modify <code>wiggle</code> to accommodate this case). So, I was forced to create two instances of <code>GuestBorrows</code> since it is possible for the two <code>path</code>s that are handed to us from guest to point at the same memory location (one use case being for instance symlink loops, etc.).</p>\n<p>I was thinking, we could potentially check for that by comparing the pointers (if they implemented <code>PartialEq</code>), but it still feels clunky. Perhaps we should revisit the concept of immutability in <code>wiggle</code>? That is, differentiate immutable vs mutable borrows? In this case, I reckon it should be fine to borrow the same location immutably multiple times. Thoughts? @alexcrichton what do you reckon?</p>\n</blockquote>",
        "id": 191170306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649475
    },
    {
        "content": "<p>kubkon edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395298687\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395298687\">PR Review Comment</a>.</p>",
        "id": 191170358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649504
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378068619\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378068619\">PR Review</a>.</p>",
        "id": 191170621,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649647
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395300196\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395300196\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@sunfishcode Note that we don't have <code>unsafe</code>'s in methods' signatures. I was somewhat worried about this since we're still dealing with file descriptors and other OS handles, but perhaps the entry points to WASI syscalls are OK being safe especially given that WASI fd is now a handle type? What do you think?</p>\n</blockquote>",
        "id": 191170623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649647
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395300511\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395300511\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is a great question. One alternative to creating two different borrowed path strings is to clone two path strings from the wasm memory into Rust owned <code>String</code>s. I expect, since paths shouldn't be too big, that is the right design choice here, except for the possibility of a DoS attack by creating two 4gb Strings here.</p>\n</blockquote>",
        "id": 191170676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649678
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378068973\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378068973\">PR Review</a>.</p>",
        "id": 191170677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649678
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395300511\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395300511\">PR Review Comment</a>.</p>",
        "id": 191170746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584649703
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378073117\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378073117\">PR Review</a>.</p>",
        "id": 191171407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584650058
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395303741\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395303741\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Differentiating between mutable and immutable borrows sounds like a good way to go.</p>\n<p>For example, POSIX doesn't say anything about <a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/functions/link.html\" target=\"_blank\" title=\"https://pubs.opengroup.org/onlinepubs/9699919799/functions/link.html\"><code>link</code></a>'s arguments aliasing or not, but most functions with output buffers, such as <a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/functions/readlink.html\" target=\"_blank\" title=\"https://pubs.opengroup.org/onlinepubs/9699919799/functions/readlink.html\">readlink</a> are defined with <code>restrict</code> qualifiers, meaning the output buffer is expected to not overlap with any of the input buffers. This also echos the Rust's borrow checker: you can have many aliasing immutable references, but a mutable reference must be unaliased.</p>\n</blockquote>",
        "id": 191171408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584650058
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378089521\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378089521\">PR Review</a>.</p>",
        "id": 191174611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584651596
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395316546\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395316546\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've thought about this and I'm fairly convinced the right thing, for now, is to leave a nice comment that outlines the design decisions you just did in this thread. </p>\n</blockquote>",
        "id": 191174612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584651597
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395316546\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395316546\">PR Review Comment</a>.</p>",
        "id": 191175490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584652036
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378101714\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378101714\">PR Review</a>.</p>",
        "id": 191176845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584652788
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395325897\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395325897\">PR Review Comment</a>:</p>\n<blockquote>\n<p>its short for \"borrow checker\".</p>\n</blockquote>",
        "id": 191176846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584652788
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395330048\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395330048\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could there be a <code>log</code> feature of <code>wiggle</code> which generates log statements? That way wasmtime could turn it on but if it's not needed in lucet it could be disabled?</p>\n</blockquote>",
        "id": 191177741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584653329
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378106940\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378106940\">PR Review</a>.</p>",
        "id": 191177742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584653329
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378107388\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378107388\">PR Review</a>.</p>",
        "id": 191177804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584653377
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395330380\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395330380\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'd actually imagine that it makes it <em>easier</em> to share a <code>WasiCtx</code> between versions because we could implement both traits for one struct!</p>\n</blockquote>",
        "id": 191177805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584653377
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378115571\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378115571\">PR Review</a>.</p>",
        "id": 191179188,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654256
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336971\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336971\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Crazy idea that I haven't thought all the way through yet: Would it work if we made <code>Fd</code> work like <code>std::fs::File</code>?</p>\n<ul>\n<li>Make <code>Fd::from_raw</code> unsafe? , similar to <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html#method.from_raw_fd\" target=\"_blank\" title=\"https://doc.rust-lang.org/std/fs/struct.File.html#method.from_raw_fd\"><code>from_raw_fd</code></a> being unsafe.</li>\n<li>Make <code>Fd</code> <em>not</em> implement <code>Copy</code>. Change <code>Fd</code> arguments to <code>&amp;Fd</code>.</li>\n<li>Make <code> Fd</code> implement <code>Drop</code> and have it automatically close. This might be hard though. Is there a way in Rust to make <code>drop</code> private, so that you have to pass it back to the context?</li>\n</ul>\n</blockquote>",
        "id": 191179189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654256
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378109877\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378109877\">PR Review</a>.</p>",
        "id": 191180035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654791
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378109877\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378109877\">PR Review</a>.</p>",
        "id": 191180037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395334184\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395334184\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW stylistically I'd group sets of statements that are all \"participating in the unsafe\" together rather than trying to minimize the <code>unsafe</code> block to just one expression.</p>\n</blockquote>",
        "id": 191180038,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395335855\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395335855\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm not sure if this is how it was implemented before, but I'm actually pretty surprised by this. I thought that one of the purposes of <code>GuestBorrows</code> and stuff was to pass wasm buffers directly to syscalls, no?</p>\n</blockquote>",
        "id": 191180039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395332447\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395332447\">PR Review Comment</a>:</p>\n<blockquote>\n<p>One of the downsides of this returning <code>RefMut</code> directly is that it runs the risk of making it easy to panic in wasi-common code by accident I think. For example if while you have a <code>RefMut</code> you call back into wasm any reentrancy back into wasi would cause a panic due to a failed borrow.</p>\n<p>It may just be worth documenting that for now, but wanted to point out that this may be a panic waiting to happen in the future.</p>\n</blockquote>",
        "id": 191180040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395334769\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395334769\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Also, I don't think this function needs to be <code>unsafe</code>?</p>\n</blockquote>",
        "id": 191180041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395333926\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395333926\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think the usage of <code>GuestBorrows</code> here technically may not be correct. There's no real need to do any borrow checking here because there's no long-lived borrows, this is effectively just a \"given this guest slice pointer write in these bytes' which is in general a safe operation (like <code>GuestPtr::write</code> is)</p>\n</blockquote>",
        "id": 191180042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336232\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336232\">PR Review Comment</a>:</p>\n<blockquote>\n<p>As a side note, this is not a safe function in general because the virtual implementation could reenter wasm. I think we'll want to make the virtual traits <code>unsafe</code> since you need to assert you don't reenter wasm or try to reborrow/read/etc from wasm memory in the underlying implementations.</p>\n</blockquote>",
        "id": 191180043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336797\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336797\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'd have the same question as before with <code>pread</code> here about passing raw wasm buffers to the underlying implementation.</p>\n</blockquote>",
        "id": 191180044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395337623\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395337623\">PR Review Comment</a>:</p>\n<blockquote>\n<p>There's two <code>slices</code> vecs here, but I think there only needs to be one?</p>\n</blockquote>",
        "id": 191180045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395339491\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395339491\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I don't actually think that <code>GuestBorrows</code> is really needed here at all because there are no long-lived pointers, I think it's fine to do what this is currently doing, but I might recommend making it a bit more concise with the comment I made above</p>\n</blockquote>",
        "id": 191180046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336563\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395336563\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This idiom is showing up in a few places (\"given this slice write this slice\"), so it might be good to encapsulate this in a safe function perhaps?</p>\n</blockquote>",
        "id": 191180047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395337358\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395337358\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This <code>read</code> is unsafe in combination with the long-lived borrows here, you'll need to add the <code>GuestPtr&lt;Iovec&gt;</code> to the <code>GuestBorrows</code> to make sure this pointer doesn't overlap with previous buffers.</p>\n</blockquote>",
        "id": 191180048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395339832\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395339832\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm does <code>as_raw</code> or <code>as_array</code> not work with zero-length arrays? I would naively expect this condition to not be necessary.</p>\n</blockquote>",
        "id": 191180049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395338783\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395338783\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the idiom of unsafely getting a <code>&amp;str</code> and then calling <code>path::get</code> be wrapped up in a safe function to <code>unsafe</code> doesn't have to be used each time a path is resolved?</p>\n</blockquote>",
        "id": 191180050,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395340235\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395340235\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Technically the FIXME items elsewhere are equally applicable here, there's not really any fundamental reason why these two guest buffers shouldn't be allowed to overlap.</p>\n</blockquote>",
        "id": 191180051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584654792
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378122531\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378122531\">PR Review</a>.</p>",
        "id": 191180572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584655075
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395342647\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395342647\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Unfortunately, this is how it was implemented before. I think we should correct it in a follow-up PR.</p>\n</blockquote>",
        "id": 191180573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584655076
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378123154\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378123154\">PR Review</a>.</p>",
        "id": 191180690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584655151
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395343199\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395343199\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Agreed, this could be a method on GuestPtr&lt;[T]&gt;</p>\n</blockquote>",
        "id": 191180691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584655151
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395343199\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395343199\">PR Review Comment</a>.</p>",
        "id": 191180708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584655162
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378123775\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378123775\">PR Review</a>.</p>",
        "id": 191180842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584655222
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395343688\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395343688\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah ok, in that case I think we can probably avoid the <code>GuestBorrows</code> and collecting slices, since all the writes/reads only happen in one go and there's no need for long-lived borrows.</p>\n</blockquote>",
        "id": 191180843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584655222
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378179940\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378179940\">PR Review</a>.</p>",
        "id": 191191878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584664324
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395391270\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395391270\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The <code>unsafe</code> is there for the raw file descriptor. This is a convention we picked up from <code>std::fs::File::from_raw_fd</code>, which isn't necessarily memory-unsafe, but extends the concept of safety to include I/O safety. Or an alternative interpretation is that file descriptors are pointers into a different address space (they can dangle, alias, be out of bounds, be bogus, etc.), and memory safety rules should apply to that address space too.</p>\n<p>That said, I think we're still working out exactly how we want to approach this. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202/files#r395300196\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202/files#r395300196\">https://github.com/bytecodealliance/wasmtime/pull/1202/files#r395300196</a> for an example.</p>\n</blockquote>",
        "id": 191191879,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584664324
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378180679\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378180679\">PR Review</a>.</p>",
        "id": 191192036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584664496
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395391965\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395391965\">PR Review Comment</a>:</p>\n<blockquote>\n<p>On further consideration, the <code>Drop</code> part makes this unworkable. I'm going to investigate other approaches.</p>\n</blockquote>",
        "id": 191192037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584664496
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378234883\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378234883\">PR Review</a>.</p>",
        "id": 191203155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584680555
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395440224\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395440224\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, I don't think I understand what you mean here by <code>GuestBorrows</code> not needed here at all. I'm probably missing something but let me outline the things I do believe:</p>\n<p>I agree that in this case, the borrow checking is vacuous. But there isn't presently another method besides <code>GuestPtr::as_raw</code> that allows us to get a <code>&amp;str</code> out of this <code>GuestPtr&lt;str&gt;</code>. We could add a method to GuestPtr that returns an owned <code>String</code>, but I fear that is a DoS vector because the guest will control the size of that String, and therefore gets to allocate in Rust's heap. We haven't yet rigorously audited this codebase for DoS vectors, of course, but I'm wary of adding something I know I'll have to forbid actually using in production.</p>\n<p>I do not think we should create a shortcut variant of <code>GuestPtr::as_raw</code> to omit borrow checking which is only safe if the user ensures borrows are always short-lived, because I could see that leading to bugs when someone less familiar with the safety properties updates the code. Maybe that is too paranoid?</p>\n</blockquote>",
        "id": 191203156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584680555
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191215192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584694766
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378317626\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378317626\">PR Review</a>.</p>",
        "id": 191215643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695121
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395508570\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395508570\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Good point. Do you think we could do it in a subsequent PR and just leave reminder \"TODO\" comment now?</p>\n</blockquote>",
        "id": 191215644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695121
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378318476\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378318476\">PR Review</a>.</p>",
        "id": 191215778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695216
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395509262\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395509262\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yep, @pchickey is right, I've just adapted the \"prior art\" to <code>wiggle-runtime</code> types. I'm happy to look at this though, but @pchickey might be right that we should perhaps increment in-tree?</p>\n</blockquote>",
        "id": 191215779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695216
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378319009\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378319009\">PR Review</a>.</p>",
        "id": 191215836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695273
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395509687\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395509687\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Cool, I'm fine with that. I have to admit when porting the syscalls to <code>wiggle-runtime</code> I was following the <code>fd_pread</code> example from <code>wiggle</code>'s WASI testcase :-)</p>\n</blockquote>",
        "id": 191215837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695273
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378323735\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378323735\">PR Review</a>.</p>",
        "id": 191216585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695733
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395513314\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395513314\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I guess you may be right, however, without the <code>GuestBorrows</code> I cannot obtain a mutable ref to <code>[u8]</code>, and there's not other simple way of copying the contents of <code>arg_bytes</code> into the <code>argv_buf</code> pointer currently. The only other way I can see is manually incrementing <code>argv_buf</code> pointer and copying byte-by-byte from <code>arg_bytes</code>. Unless I'm perhaps missing something here?</p>\n</blockquote>",
        "id": 191216586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695733
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378324953\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378324953\">PR Review</a>.</p>",
        "id": 191216780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695852
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395514331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395514331\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Cool, I'll leave a comment in for now, and we can figure out a fix later. As far as <code>unsafe</code> is concerned, as @sunfishcode pointed out, this is \"prior art\" and was there to signal the unsafety of using I/O. FWIW I'd leave that in for now and we can figure out how to deal with all the unsafety in a future PR?</p>\n</blockquote>",
        "id": 191216781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695852
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378326260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378326260\">PR Review</a>.</p>",
        "id": 191216989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695976
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395515353\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395515353\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I like the idea but yeah, <code>Drop</code> will not work like this, unless we made the context object static/global. Having said that your suggestion aligns with my mental model of <code>Fd</code> 100%, so perhaps we could come up with something close to it but not necessarily one-to-one.</p>\n</blockquote>",
        "id": 191216990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584695976
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378327181\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378327181\">PR Review</a>.</p>",
        "id": 191217154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696066
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395516049\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395516049\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Exactly as @pchickey explained, obtaining a reference to a slice-type object in Rust from <code>wiggle</code> is currently only possible through <code>as_raw</code> method which requires a <code>GuestBorrows</code> object in scope.</p>\n</blockquote>",
        "id": 191217156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696066
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378328493\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378328493\">PR Review</a>.</p>",
        "id": 191217366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696182
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395517085\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395517085\">PR Review Comment</a>:</p>\n<blockquote>\n<p>When you say \"encapsulate in a safe function\" do you mean as a helper in <code>wasi-common</code> or a method of <code>GuestPtr&lt;'_, [T]&gt;</code>? I'm partial to the latter approach, and agreed that a method like this would be most useful!</p>\n</blockquote>",
        "id": 191217367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696182
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378329130\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378329130\">PR Review</a>.</p>",
        "id": 191217445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696239
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395517553\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395517553\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Excellent observation, and as I explained above, I've only made enough to make <code>wiggle</code> work with <code>wasi-common</code>. I'm happy to investigate this further though!</p>\n</blockquote>",
        "id": 191217446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696239
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378330083\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378330083\">PR Review</a>.</p>",
        "id": 191217597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696329
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395518322\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395518322\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, out of curiosity, is the example <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/wiggle/tests/wasi.rs#L130\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/wiggle/tests/wasi.rs#L130\">here</a> wrong then?</p>\n</blockquote>",
        "id": 191217598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696329
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191218560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584696853
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378338336\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378338336\">PR Review</a>.</p>",
        "id": 191218986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584697139
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395525027\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395525027\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh, this must be a remnant of my hack to not stifle progress with <code>wasi-common</code> while some required changes to <code>wiggle</code> were in progress. This change is no longer part of this PR, so please ignore it.</p>\n</blockquote>",
        "id": 191218987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584697140
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378339681\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378339681\">PR Review</a>.</p>",
        "id": 191219192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584697268
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395526095\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395526095\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh, I believe what @alexcrichton suggests sounds like _the_ solution to this problem. @pchickey @sunfishcode what do you guys reckon? Oh, and until that lands in <code>wiggle</code>, my suggestion would be to leave the <code>trace</code>s as-is in <code>wasi-common</code>. What do you think?</p>\n</blockquote>",
        "id": 191219193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584697268
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191220086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584697807
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378349452\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378349452\">PR Review</a>.</p>",
        "id": 191220727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584698180
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395533662\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395533662\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh, and I think we should do the same for <code>wasi-common</code> as well. We've got a couple <code>log</code> calls here and there for debugging and what not, and I believe that @pchickey would like to have a version stripped off all altogether for lucet/xqd.</p>\n</blockquote>",
        "id": 191220728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584698180
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378349796\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378349796\">PR Review</a>.</p>",
        "id": 191220772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584698212
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395533914\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395533914\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Not suggesting we do it immediately in this PR, but we should have it in mind. :-)</p>\n</blockquote>",
        "id": 191220773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584698212
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191221368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584698543
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191222615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584699252
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378374323\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378374323\">PR Review</a>.</p>",
        "id": 191224501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584700549
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395552621\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395552621\">PR Review Comment</a>:</p>\n<blockquote>\n<p>You're right, I'd expect this to work as well. It turns out <code>wiggle_runtime::Region</code> didn't accommodate for zero-length <code>Region</code>s. I've now fixed that in #1366. I'll leave a comment in to remove the check once it lands in <code>wiggle-runtime</code>.</p>\n</blockquote>",
        "id": 191224503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584700549
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395554138\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395554138\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've simplified this now, so have a look and lemme know what you reckon!</p>\n</blockquote>",
        "id": 191224760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584700734
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378376311\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378376311\">PR Review</a>.</p>",
        "id": 191224761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584700734
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191224900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584700821
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378388346\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378388346\">PR Review</a>.</p>",
        "id": 191226713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584701939
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395563473\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395563473\">PR Review Comment</a>:</p>\n<blockquote>\n<p>BTW @alexcrichton, lemme know what's your plan for this, i.e., what to use instead of <code>RefMut</code>! :-)</p>\n</blockquote>",
        "id": 191226714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584701939
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191226774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584701987
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395606792\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395606792\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, thinking this through more carefully, maybe we can do this without the <code>Drop</code> part. So make <code>handle</code> types not implement <code>Copy</code>, pass <code>handle</code> arguments by reference rather than by value, and make the raw constructor <code>unsafe</code>. That's not the same as <code>std::fs::File</code>, but it still has some nice properties. We just need to be careful when calling the raw constructor, but there aren't many places where we need to do that outside of the generated wrappers. Does that sound feasible?</p>\n<p>If you'd like to defer this to a later PR, that's fine too.</p>\n</blockquote>",
        "id": 191236012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584707706
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378443934\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378443934\">PR Review</a>.</p>",
        "id": 191236013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584707706
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191236100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584707759
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395608307\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395608307\">PR Review Comment</a>:</p>\n<blockquote>\n<p>OK, I've refactored both <code>pread</code> and <code>pwrite</code> so that we no longer need temp storage buffer. Instead, we're using slices bound to guest's memory directly (as <code>IoSliceMut</code> and <code>IoSlice</code> respectively), and both ops now essentially consists of two steps <code>SeekFrom::Start(offset)</code>, followed by <code>read_vectored(...)</code> and <code>write_vectored(...)</code> respectively.</p>\n</blockquote>",
        "id": 191236414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584707888
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378445866\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378445866\">PR Review</a>.</p>",
        "id": 191236415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584707888
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378447198\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378447198\">PR Review</a>.</p>",
        "id": 191236633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584708014
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395609313\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395609313\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sounds good, and yeah, if we could defer to a subsequent PR, that would be perfect IMHO. There's already a substantial amount of tweaks I have to apply and I'm worried more and more will slip away. Is that OK?</p>\n</blockquote>",
        "id": 191236634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584708014
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191236822,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584708124
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378449413\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378449413\">PR Review</a>.</p>",
        "id": 191236996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584708225
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395611052\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395611052\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've done just that. Now <code>path::get</code> takes <code>&amp;GuestPtr&lt;'_, str&gt;</code> directly and does borrowing internally. This actually, at the surface at least, gets rid of the double-immutable-borrow problem.</p>\n</blockquote>",
        "id": 191236997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584708225
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395617245\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395617245\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, but wouldn't <code>borrow_slice</code> take care of it for us here?</p>\n</blockquote>",
        "id": 191238248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584708971
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378457504\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378457504\">PR Review</a>.</p>",
        "id": 191238249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584708971
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191239547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584709589
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378465818\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378465818\">PR Review</a>.</p>",
        "id": 191239781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584709714
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395623728\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395623728\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@pchickey What do you think of having a <code>from_raw</code> method for handles in <code>wiggle</code>?</p>\n</blockquote>",
        "id": 191239782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584709714
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191240247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584710018
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191248701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584714174
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395669977\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395669977\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, I've now added an aux struct called <code>EntryTable</code> which holds both <code>fd_pool</code> and <code>entries</code>, and inside <code>WasiCtx</code> it's behind a single <code>RefCell</code> thus both working in sync.</p>\n</blockquote>",
        "id": 191248784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584714221
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378526665\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378526665\">PR Review</a>.</p>",
        "id": 191248785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584714221
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191250992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715170
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378540983\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378540983\">PR Review</a>.</p>",
        "id": 191251096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715207
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395680984\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395680984\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, since #1366 landed, I've now removed the check and everything works as expected <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n</blockquote>",
        "id": 191251097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715207
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378541006\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378541006\">PR Review</a>.</p>",
        "id": 191251101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715208
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395681004\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395681004\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@pchickey er sorry I don't think I was being very clear! I don't think we should remove the <code>GuestBorrows</code> argument or use owned strings here, I mean that each of these is resolved independently and there's never any overlapping borrows so documenting fixmes and/or hacks isn't necessary because each path is getting sucked into an owned object anyway so borrows never last long enough for runtime borrow-checking to be that relevant.</p>\n</blockquote>",
        "id": 191251103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715209
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378542972\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378542972\">PR Review</a>.</p>",
        "id": 191251397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715348
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395682502\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395682502\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm ok so I would strongly recommend removing <code>unsafe</code> here. There's already enough <code>unsafe</code> as-is with dealing with raw wasm memory, and this feels like it's overkill.</p>\n<p>The unsafety around libstd's I/O was specifically about providing a guarantee that each entity holding a file descriptor owns that file descriptor. That allows safe abstractions around mmap and stuff (in theory). I really think we should not be adding <code>unsafe</code> here lightly, and we may just not have that guarantee for wasi-common.</p>\n<p>The unsafety here also doesn't really seem to stop anything in practice, every callsite just wraps a <code>unsafe { ... }</code> block which just makes it more verbose to call these methods rather than providing the \"oh I should think about this\" speedbump it seems.</p>\n</blockquote>",
        "id": 191251398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715349
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378543797\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378543797\">PR Review</a>.</p>",
        "id": 191251512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715405
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395683140\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395683140\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, this proves to be more difficult than I originally envisioned. If I follow your suggestion, than we end up with a lifetime mismatch since the first <code>maybe</code> will contain weirdness of the like <code>&amp;Option&lt;&amp;Entry&gt;</code>, and the compiler cannot assign approriate lifetimes to the final <code>Ref&lt;'_, Entry&gt;</code>. Perhaps when  we revisit the use of <code>RefCell</code> in <code>wasi-common</code> altogether, this will no longer be an issue?</p>\n</blockquote>",
        "id": 191251513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715405
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378544736\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378544736\">PR Review</a>.</p>",
        "id": 191251676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715473
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395683886\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395683886\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh no nevermind my interpretation is wrong, I think this should be fine.</p>\n</blockquote>",
        "id": 191251677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715473
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378546937\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378546937\">PR Review</a>.</p>",
        "id": 191251980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715626
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395685581\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395685581\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh I should also mention, I think the only real alternative to returning <code>RefMut&lt;Entry&gt;</code> is to return <code>Rc&lt;Entry&gt;</code>. That will likely be required anyway if we want to make this multithreaded at some point (probably don't want to hold locks for entireties of syscalls). I don't know of a great way to otherwise handle this. For now it seems fine to document how you need to be careful about holding a borrow for too long.</p>\n</blockquote>",
        "id": 191251981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715627
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378547782\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378547782\">PR Review</a>.</p>",
        "id": 191252105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715684
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395686230\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395686230\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh sorry my point is that persisting the same <code>GuestBorrows</code> for the entirety of this method I believe is not necessary. Each write can use an independent instance of <code>GuestBorrows</code> since there's no need to prevent overlap in this method.</p>\n</blockquote>",
        "id": 191252106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715684
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378549131\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378549131\">PR Review</a>.</p>",
        "id": 191252263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715775
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395687303\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395687303\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, right, I think I get it. <code>Rc</code> should still allow for obtaining <code>&amp;mut</code> of the wrapped type provided there is only one at play at any one time, right? And then in the multithreaded case, we'd just swap it for <code>Arc</code>?</p>\n</blockquote>",
        "id": 191252264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584715775
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378555120\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378555120\">PR Review</a>.</p>",
        "id": 191253103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716169
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395692047\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395692047\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've posted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1367\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1367\">https://github.com/bytecodealliance/wasmtime/pull/1367</a>, and my point here is that if that's used then there's no need for <code>GuestBorrows</code> in this method and no need for this method to be unsafe.</p>\n</blockquote>",
        "id": 191253105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716169
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378556872\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378556872\">PR Review</a>.</p>",
        "id": 191253391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716317
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395693806\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395693806\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW I've posted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1367\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1367\">https://github.com/bytecodealliance/wasmtime/pull/1367</a> to cover this.</p>\n</blockquote>",
        "id": 191253392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716317
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395693416\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395693416\">PR Review Comment</a>:</p>\n<blockquote>\n<p>In terms of semantics, I'm not sure if <code>pread</code> is specified to change the file cursor or not, but I believe this implementation does? Might be good to double check...</p>\n</blockquote>",
        "id": 191253393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716317
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378557579\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378557579\">PR Review</a>.</p>",
        "id": 191253412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716331
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395693988\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395693988\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That's perfect! It'll clean up the code nicely! <span aria-label=\"sunglasses\" class=\"emoji emoji-1f60e\" role=\"img\" title=\"sunglasses\">:sunglasses:</span> </p>\n</blockquote>",
        "id": 191253413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716332
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378558389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378558389\">PR Review</a>.</p>",
        "id": 191253516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716390
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395694618\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395694618\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh crap, you're right, it shouldn't! I forgot to rewind the cursor! Thanks for bringing it up!</p>\n</blockquote>",
        "id": 191253517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716390
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378560468\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378560468\">PR Review</a>.</p>",
        "id": 191253888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716529
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395696109\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395696109\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I don't believe that <code>&amp;mut</code> is needed anywhere actually? For example all methods on I/O files are implemented for <code>&amp;T</code> so you have to do something like <code>(&amp;entry.file).read(...)</code> which is a bit wonky, but there shouldn't be a fundamental need to ever mutate an <code>Entry</code>.</p>\n<p>If there is though then a <code>RefCell</code> can always be used, and the borrows would need to be scoped in duration.</p>\n</blockquote>",
        "id": 191253890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716529
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378560690\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378560690\">PR Review</a>.</p>",
        "id": 191253920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716544
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395696284\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395696284\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes that should be fine</p>\n</blockquote>",
        "id": 191253922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584716545
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191255104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717033
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378567959\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378567959\">PR Review</a>.</p>",
        "id": 191255129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717044
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395701874\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395701874\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Fixed! Thanks for spotting that one!</p>\n</blockquote>",
        "id": 191255131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717044
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395702355\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395702355\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I left the comment in <code>virtfs.rs</code> module.</p>\n</blockquote>",
        "id": 191255231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717087
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378568594\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378568594\">PR Review</a>.</p>",
        "id": 191255232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717087
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378572870\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378572870\">PR Review</a>.</p>",
        "id": 191255972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717390
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395705872\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395705872\">PR Review Comment</a>:</p>\n<blockquote>\n<p>You're absolutely right, we could easily operate on refs since we have impl on <code>&amp;T</code> for I/O in Rust. That's cool. I'll make this change here already to clean up the code as much as possible (i.e., removing the <code>mut</code>s). In terms of <code>Rc</code>, I'm guessing we'd still want to wrap the map holding the <code>Entry</code>s in an <code>Rc</code>?</p>\n</blockquote>",
        "id": 191255973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717390
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378574194\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378574194\">PR Review</a>.</p>",
        "id": 191256190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717482
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395706918\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395706918\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Right, we do since we still need to able to mutate <code>EntryTable</code> and <em>not</em> <code>Entry</code>!</p>\n</blockquote>",
        "id": 191256197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717482
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378574912\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378574912\">PR Review</a>.</p>",
        "id": 191256326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717530
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395707520\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395707520\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The map will want to be in a <code>RefCell</code> for sure (was <code>Rc</code> a typo?) because we're modifying it behind a shared reference, and then each entry would be in its own <code>Rc</code> to get handed out without holding a long-lived borrow.</p>\n</blockquote>",
        "id": 191256327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717530
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378575809\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378575809\">PR Review</a>.</p>",
        "id": 191256463,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717587
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395708206\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395708206\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sorry, yeah, meant <code>RefCell</code>.</p>\n<p>Right, makes sense!</p>\n</blockquote>",
        "id": 191256464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584717587
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378601130\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378601130\">PR Review</a>.</p>",
        "id": 191261191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584719346
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395727426\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395727426\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I was wrong actually. We do need to be able to mutate <code>Entry</code> in two places: <code>fd_fdstat_set_rights</code> and <code>fd_fdstat_set_flags</code>.</p>\n</blockquote>",
        "id": 191261192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584719346
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191265430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584721056
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378626899\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378626899\">PR Review</a>.</p>",
        "id": 191265705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584721179
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395746716\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395746716\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@sunfishcode would you agree at removing the <code>unsafe</code> here?</p>\n</blockquote>",
        "id": 191265706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584721179
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395753144\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395753144\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes. I've been exploring the \"pass Fd by reference\" idea more, and I'm sufficiently confident that that will provide a way for <code>get_entry</code> and <code>get_entry_mut</code> to be safe functions, even considering I/O safety, so I think we can leave the unsafe off for now because that's where they'll end up anyway.</p>\n</blockquote>",
        "id": 191266963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584721773
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378634978\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378634978\">PR Review</a>.</p>",
        "id": 191266964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584721773
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378648696\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378648696\">PR Review</a>.</p>",
        "id": 191269482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584722837
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395763799\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395763799\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@alexcrichton Would you be OK if we parked the <code>&amp;</code> vs <code>&amp;mut</code> cleanup in <code>wasi-common</code>? Changing to <code>&amp;</code> in most cases while absolutely correct will require some more work with <code>virtfs</code> module (at quick glance, not everything is behind a <code>RefCell</code> or alike to be able to mutate the interior behind <code> &amp;</code>.</p>\n</blockquote>",
        "id": 191269483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584722837
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378649571\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378649571\">PR Review</a>.</p>",
        "id": 191269690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584722905
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395764456\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395764456\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh sorry yeah, I think cleaning up later is fine, but it'd be nice to remove the <code>unsafe</code> before landing</p>\n</blockquote>",
        "id": 191269691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584722905
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378650246\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378650246\">PR Review</a>.</p>",
        "id": 191269808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584722962
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395765003\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395765003\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Absolutely, I'm on it <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 191269809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584722962
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191270470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584723224
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a>.</p>",
        "id": 191270706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584723321
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a>, and <a href=\"https://github.com/sunfishcode\" target=\"_blank\" title=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a>.</p>",
        "id": 191270711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584723322
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a>, <a href=\"https://github.com/pchickey\" target=\"_blank\" title=\"https://github.com/pchickey\">pchickey</a>, and <a href=\"https://github.com/sunfishcode\" target=\"_blank\" title=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a>.</p>",
        "id": 191270720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584723325
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378666542\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378666542\">PR Review</a>.</p>",
        "id": 191273321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584724400
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378666542\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378666542\">PR Review</a>.</p>",
        "id": 191273323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584724400
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395777552\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395777552\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This looks like it may be buggy? I think <code>environ_buf_offset</code> may not be needed here because we're already offseting <code>environ_buf</code> on each iteration of the loop?</p>\n</blockquote>",
        "id": 191273324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584724400
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378668765\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378668765\">PR Review</a>.</p>",
        "id": 191274979,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584725175
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378668765\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378668765\">PR Review</a>.</p>",
        "id": 191274980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584725175
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395779261\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395779261\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, if it gets awkward, then I agree it makes sense to leave the code as-is for now.</p>\n</blockquote>",
        "id": 191274981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584725175
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191281609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584728060
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378711730\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378711730\">PR Review</a>.</p>",
        "id": 191281694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584728102
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395812625\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#discussion_r395812625\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@alexcrichton Right on, thanks for spotting that one! I believe I've fixed it in 5e75830, but if you could double check, that'd be awesome!</p>\n</blockquote>",
        "id": 191281698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584728103
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a> from <code>wiggle-time</code> to <code>master</code>:</p>\n<blockquote>\n<p>It's [<code>wiggle</code>] time!</p>\n<p>This PR is the beginning of a journey which aims at replacing <code>wig</code> crate with <code>wiggle</code>. @pchickey and myself have been working on <code>wiggle</code> for over a month now, and we feel we got to the point where it could successfully be used in <code>wasi-common</code>, <code>wasmtime</code> and <code>lucet</code>. We also agreed that if any functionality is still missing, we should iterate in-tree if possible. Anyhow, this is a draft PR so things will invariably change (a lot!), but I wanted to get it out there sooner rather than later so that I can get some meaningful feedback early on and work on addressing that when things are still plastic.</p>\n<p>[<code>wiggle</code>]: <a href=\"https://github.com/kubkon/wiggle\" target=\"_blank\" title=\"https://github.com/kubkon/wiggle\">https://github.com/kubkon/wiggle</a></p>\n</blockquote>",
        "id": 191296754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584735365
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378798552\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202#pullrequestreview-378798552\">PR Review</a>.</p>",
        "id": 191299505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584736849
    },
    {
        "content": "<p>kubkon merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1202\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1202\">PR #1202</a>.</p>",
        "id": 191301105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584737685
    }
]