[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a> from <code>alexcrichton:fix-ldr19-out-of-bounds</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is a suite of fixes and support to fix a bug on the AArch64 backend, and others. Before this commit constants were unconditionally placed at the end of a function which means that if the function was too large then references from the beginning of the function may be too far away. The fix here is a bit subtle but is generally to emit all previously referenced constants when an island is emitted, resetting constants to get emitted on the next island. This means that constants may be emitted multiple times throughout function emission, which solves both a reference being too far in front of you and behind you.</p>\n<p>I've done testing of this with a new Cranelift setting that automatically inserts padding between basic blocks. This setting is additionally hooked up to the fuzzer to help uncover issues like this on OSS-Fuzz.</p>\n</blockquote>",
        "id": 358605779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684200544
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a>.</p>",
        "id": 358605780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684200545
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a>.</p>",
        "id": 358605781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684200546
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a>.</p>",
        "id": 358605782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684200546
    },
    {
        "content": "<p>cfallin assigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a> to cfallin.</p>",
        "id": 358607026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684201427
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#pullrequestreview-1427576634\">PR review</a>:</p>\n<blockquote>\n<p>This looks generally great -- thanks for tackling this! A few comments below mostly about cosmetics/docs but otherwise LGTM.</p>\n</blockquote>",
        "id": 358608328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684202504
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#pullrequestreview-1427576634\">PR review</a>:</p>\n<blockquote>\n<p>This looks generally great -- thanks for tackling this! A few comments below mostly about cosmetics/docs but otherwise LGTM.</p>\n</blockquote>",
        "id": 358608329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684202504
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#discussion_r1194512694\">PR review comment</a>:</p>\n<blockquote>\n<p>Not too important here but FWIW a pattern I've used before for this kind of setting is \"log2 - 1\", which allows the zero baseline and still gives all powers of two.</p>\n</blockquote>",
        "id": 358608330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684202505
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#discussion_r1194518869\">PR review comment</a>:</p>\n<blockquote>\n<p>A little more precise wording than \"change over time\" maybe: \"this function may return a different label for the same constant at different points in time. The label is valid to use only from the current location; the MachBuffer takes care to emit the same constant multiple times if needed so the constant is always in range.\"</p>\n</blockquote>",
        "id": 358608331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684202505
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#discussion_r1194516540\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW, I wonder if it isn't better to directly plumb the settings through to where <code>VCode</code> is created (or <code>VCodeBuilder::new</code> or similar); or else to <code>emit()</code> directly; the <code>EmitInfo</code> is part of the \"assembler layer\", and we want to keep this as loosely coupled as possible I think. (Not least for Winch's sake, but also just to avoid unnecessary entangling.)</p>\n</blockquote>",
        "id": 358608332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684202505
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#discussion_r1194519146\">PR review comment</a>:</p>\n<blockquote>\n<p>The \"undefined\" bit I think can be left out here (or pushed into the body if you want to keep it): it's not supposed to be visible to the user of MachBuffer whether a label is defined yet or not, and we don't want to make it part of the contract.</p>\n</blockquote>",
        "id": 358608333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684202505
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#discussion_r1195019487\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>target riscv64 has_v\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 358698848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684236452
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a> (assigned to cfallin).</p>",
        "id": 358745220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684246273
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a> (assigned to cfallin).</p>",
        "id": 358747572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684246728
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a> (assigned to cfallin).</p>",
        "id": 358749179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684247061
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384#discussion_r1195251146\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh I apparently missed that vcode was already taking a flag from <code>settings::Flags</code> so all I had to do was pass in the struct rather than the single flag -- much easier!</p>\n</blockquote>",
        "id": 358749350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684247097
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a> (assigned to cfallin).</p>",
        "id": 358751890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684247575
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a> (assigned to cfallin).</p>",
        "id": 358761295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684249338
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a>.</p>",
        "id": 358762909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684249661
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6384\">PR #6384</a>.</p>",
        "id": 358787442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684254880
    }
]