[
    {
        "content": "<p>JonasKruckenberg opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992\">PR #9992</a> from <code>JonasKruckenberg:jonas/static-machine-env</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR is another attempt at #8489 (superseding it) this time by making the necessary changes in <code>regalloc2</code> (see <a href=\"https://github.com/bytecodealliance/regalloc2/pull/208\">here</a>) to allow <code>MachineEnv</code> to be created in const expressions and therefore placed into statics without the need for lazy initialization (as mentioned in <a href=\"#narrow/channel/217117-cranelift/topic/Use.20in.20no_std/near/493078060\">this comment</a>)<br>\nThis PR also makes the necessary changes in register creation functions to make them <code>const</code>.</p>\n<p>While I agree with @cfallin that this is the \"correct\" move, it is slightly annoying that Rusts const limitation makes the static initializers so verbose where a <code>1..=16</code> range iterator was used previously :/</p>\n</blockquote>",
        "id": 493324099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736767131
    },
    {
        "content": "<p><strong>JonasKruckenberg</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992\">PR #9992</a>.</p>",
        "id": 493324100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736767131
    },
    {
        "content": "<p><strong>JonasKruckenberg</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992\">PR #9992</a>.</p>",
        "id": 493324101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736767131
    },
    {
        "content": "<p><strong>JonasKruckenberg</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992\">PR #9992</a>.</p>",
        "id": 493324102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736767132
    },
    {
        "content": "<p>JonasKruckenberg edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992\">PR #9992</a>:</p>\n<blockquote>\n<p>This PR is another attempt at #8489 (superseding it) this time by making the necessary changes in <code>regalloc2</code> (see <a href=\"https://github.com/bytecodealliance/regalloc2/pull/208\">here</a>) to allow <code>MachineEnv</code> to be created in const expressions and therefore placed into statics without the need for lazy initialization (as mentioned in <a href=\"#narrow/channel/217117-cranelift/topic/Use.20in.20no_std/near/493078060\">this comment</a>)<br>\nThis PR also makes the necessary changes in register creation functions to make them <code>const</code>.</p>\n<p>While I agree with @cfallin that this is the \"correct\" move, it is slightly annoying that Rusts const limitation makes the static initializers so verbose where a <code>1..=16</code> range iterator was used previously, any ideas here are welcome :/</p>\n<p>Edit: marked the PR as draft until the regalloc2 upstream PR is merged</p>\n</blockquote>",
        "id": 493324208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736767166
    },
    {
        "content": "<p>JonasKruckenberg updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992\">PR #9992</a>.</p>",
        "id": 493324429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736767226
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992\">PR #9992</a>.</p>",
        "id": 493435345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736798065
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913760913\">PR review comment</a>:</p>\n<blockquote>\n<p>This probably goes in the <code>PINNED_MACHINE_ENV</code> above, no? (It's load-bearing there that we get it right, because we <em>excluded</em> the pinned register from allocation; the default environment is used when pinning is disabled so doesn't care what the pinned reg is)</p>\n</blockquote>",
        "id": 493440750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736799767
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913762387\">PR review comment</a>:</p>\n<blockquote>\n<p>Can you say more here -- I'm not that familiar with the current state of constification of everything; is there some feature this is waiting on to stabilize or...?</p>\n</blockquote>",
        "id": 493440751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736799767
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#pullrequestreview-2547786420\">PR review</a>:</p>\n<blockquote>\n<p>Thanks a bunch for working on this! This all looks like the shape I expected; I'm glad there were no other hidden snags. A few minor comments below but otherwise happy to see this merged once we get the RA2 PR merged and released.</p>\n</blockquote>",
        "id": 493440753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736799767
    },
    {
        "content": "<p>JonasKruckenberg submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#pullrequestreview-2548070867\">PR review</a>.</p>",
        "id": 493462348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736806955
    },
    {
        "content": "<p>JonasKruckenberg created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913878608\">PR review comment</a>:</p>\n<blockquote>\n<p>well, the feature that would be waiting for is const associated functions in traits (therefore allowing <code>From::from</code> to be const) but that afaik is in \"never type land\". I can remove the note as it doesn't make much sense to hold our breath on it </p>\n</blockquote>",
        "id": 493462349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736806956
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#pullrequestreview-2548074760\">PR review</a>.</p>",
        "id": 493462655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736807084
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913880377\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I think that's best -- usually when we have a FIXME we want it to be actionable, or at least give sufficient context so that we know what we're waiting on (i.e.: if someone else walked up to this code tomorrow, would they know what they need in order to fix it?). It's fine to evaluate questions like this once new Rust features land in the future.</p>\n</blockquote>",
        "id": 493462656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736807084
    },
    {
        "content": "<p>JonasKruckenberg submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#pullrequestreview-2548153749\">PR review</a>.</p>",
        "id": 493469724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736809521
    },
    {
        "content": "<p>JonasKruckenberg created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913914662\">PR review comment</a>:</p>\n<blockquote>\n<p>the issue with constness is that theres no good way to detect constness workarounds after the fact (the whole reason for the const-hack comments) but usually you'd tie them to specific RFCs yeah</p>\n</blockquote>",
        "id": 493469725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736809522
    },
    {
        "content": "<p>JonasKruckenberg edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913914662\">PR review comment</a>.</p>",
        "id": 493469984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736809624
    },
    {
        "content": "<p>JonasKruckenberg edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913914662\">PR review comment</a>.</p>",
        "id": 493470064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736809661
    },
    {
        "content": "<p>hanna-kruppe submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#pullrequestreview-2548277902\">PR review</a>.</p>",
        "id": 493479891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736813884
    },
    {
        "content": "<p>hanna-kruppe created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9992#discussion_r1913957201\">PR review comment</a>:</p>\n<blockquote>\n<p>Relevant RFC fresh off the press: <a href=\"https://github.com/rust-lang/rfcs/pull/3762\">https://github.com/rust-lang/rfcs/pull/3762</a></p>\n</blockquote>",
        "id": 493479892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736813884
    }
]