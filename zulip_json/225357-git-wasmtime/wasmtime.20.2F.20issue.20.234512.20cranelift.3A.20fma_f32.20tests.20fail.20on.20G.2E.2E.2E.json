[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>I was <a href=\"https://github.com/alexcrichton/wasmtime/runs/7473321003?check_suite_focus=true\">testing out</a> using the <code>windows-latest</code> image with Nick's <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4431\">stack walking PR</a> because I think that should fix a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3859\">longstanding blocker</a> for updating the CI image.</p>\n<p>In doing so though I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"n\">filetests</span><span class=\"err\">\\</span><span class=\"n\">filetests</span><span class=\"err\">\\</span><span class=\"n\">runtests</span><span class=\"err\">\\</span><span class=\"n\">fma</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">interpret</span><span class=\"w\"></span>\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">fma_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">060000</span><span class=\"n\">p7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">340488</span><span class=\"n\">p7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">310e42</span><span class=\"n\">p4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">b88e6p14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">b88e8p14</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not sure what that corresponds to in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/fma.clif\">the test itself</a> but I suspect that there's just a difference between the old <code>fma</code> symbol on Windows and the new.</p>\n<p>cc @afonso360 </p>\n</blockquote>",
        "id": 290555762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658517737
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1193120102\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>This is interesting.</p>\n<p>I tried to make a <a href=\"https://github.com/afonso360/wasmtime/actions/runs/2723295231\">CI run of <code>fma.clif</code></a> alone and it did pass the tests. (This is based on the <code>main</code> branch from yesterday).</p>\n<p>I briefly read the stack walking changes, but I don't see any compile flags or other build changes that would explain this difference.</p>\n<p>I pulled your <code>fast-stack-walking2</code> branch and <a href=\"https://github.com/afonso360/wasmtime/runs/7480852376?check_suite_focus=true\">ran it again on CI</a>. It fails only on <code>windows-latest  x86_64-pc-windows-gnu</code>  but not on <code>windows-latest</code>. But I don't understand why it works on <code>main</code>, and not with <code>fast-stack-walking2</code> applied.</p>\n<hr>\n<p>Note:</p>\n<p>I also had some issues <a href=\"https://github.com/afonso360/wasmtime/runs/7480336795?check_suite_focus=true\">building the cmake examples on <code>windows-latest</code></a><br>\nWhich don't seem to trigger on the stack walking branch (possibly due to #4369 ?) I haven't investigated this too far.</p>\n<p>I can file an issue for this if you think it's relevant.</p>\n</blockquote>",
        "id": 290612164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658580441
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1193120102\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>This is interesting.</p>\n<p>I tried to make a <a href=\"https://github.com/afonso360/wasmtime/actions/runs/2723295231\">CI run of <code>fma.clif</code></a> alone and it did pass the tests. (This is based on the <code>main</code> branch from yesterday).</p>\n<p>I briefly read the stack walking changes, but I don't see any compile flags or other build changes that would explain this difference.</p>\n<p>I pulled your <code>fast-stack-walking2</code> branch and <a href=\"https://github.com/afonso360/wasmtime/runs/7480852376?check_suite_focus=true\">ran it again on CI</a>. It fails only on <code>windows-latest  x86_64-pc-windows-gnu</code>  but not on <code>windows-latest</code>. But I don't understand why it works on <code>main</code>, and not with <code>fast-stack-walking2</code> applied.</p>\n<p>Edit: This is not true, I accidentally deleted the <code>CARGO_BUILD_TARGET</code> env var in the original run. So the only difference is that this fails in <code>windows-latest</code>  x86_64-pc-windows-gnu instead of <code>windows-latest</code>. Both on <code>main</code> and <code>fast-stack-walking2</code></p>\n<hr>\n<p>Note:</p>\n<p>I also had some issues <a href=\"https://github.com/afonso360/wasmtime/runs/7480336795?check_suite_focus=true\">building the cmake examples on <code>windows-latest</code></a><br>\nWhich don't seem to trigger on the stack walking branch (possibly due to #4369 ?) I haven't investigated this too far.</p>\n<p>I can file an issue for this if you think it's relevant.</p>\n</blockquote>",
        "id": 290615208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658584847
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1193120102\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>This is interesting.</p>\n<p>I tried to make a <a href=\"https://github.com/afonso360/wasmtime/actions/runs/2723295231\">CI run of <code>fma.clif</code></a> alone and it did pass the tests. (This is based on the <code>main</code> branch from yesterday).</p>\n<p>I briefly read the stack walking changes, but I don't see any compile flags or other build changes that would explain this difference.</p>\n<p>I pulled your <code>fast-stack-walking2</code> branch and <a href=\"https://github.com/afonso360/wasmtime/runs/7480852376?check_suite_focus=true\">ran it again on CI</a>. It fails only on <code>windows-latest  x86_64-pc-windows-gnu</code>  but not on <code>windows-latest</code>. But I don't understand why it works on <code>main</code>, and not with <code>fast-stack-walking2</code> applied.</p>\n<p>Edit: This is not true, I accidentally deleted the <code>CARGO_BUILD_TARGET</code> env var in the original run. So the only difference is that this fails in <code>windows-latest  x86_64-pc-windows-gnu</code> instead of <code>windows-latest</code>. Both on <code>main</code> and <code>fast-stack-walking2</code></p>\n<hr>\n<p>Note:</p>\n<p>I also had some issues <a href=\"https://github.com/afonso360/wasmtime/runs/7480336795?check_suite_focus=true\">building the cmake examples on <code>windows-latest</code></a><br>\nWhich don't seem to trigger on the stack walking branch (possibly due to #4369 ?) I haven't investigated this too far.</p>\n<p>I can file an issue for this if you think it's relevant.</p>\n</blockquote>",
        "id": 290615696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658585568
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1193142380\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>I suspect this is related to <code>fma</code>/<code>fmaf</code> bugs on MinGW-w64.</p>\n<p>See: <a href=\"https://sourceforge.net/p/mingw-w64/bugs/848/\">https://sourceforge.net/p/mingw-w64/bugs/848/</a></p>\n<p>I compiled the test case in that bug report, with the additional inputs that we are seeing in the interpreter and it also <a href=\"https://github.com/afonso360/wasmtime/runs/7481751790?check_suite_focus=true#step:10:22\">failed</a>.</p>\n<p>It does not fail that <a href=\"https://github.com/afonso360/wasmtime/runs/7481751739?check_suite_focus=true#step:10:18\">test case on <code>windows-2019</code></a>, however it fails some others that we don't have in our test suite.</p>\n<p>It looks like <code>fma</code>/<code>fmaf</code> is buggy in MinGW. That bug report has been open for 2 years. What should we do here? I <em>really</em> don't want to polyfill fma, should we grab it from some other library?</p>\n</blockquote>",
        "id": 290619063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658589892
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1193142380\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>I suspect this is related to <code>fma</code>/<code>fmaf</code> bugs on MinGW-w64.</p>\n<p>See: <a href=\"https://sourceforge.net/p/mingw-w64/bugs/848/\">https://sourceforge.net/p/mingw-w64/bugs/848/</a></p>\n<p>I compiled the test case in that bug report, with the additional inputs that we are seeing in the interpreter and it also <a href=\"https://github.com/afonso360/wasmtime/runs/7481751790?check_suite_focus=true#step:10:22\">failed</a>. (Called <code>Testcase[6]</code> on the output)</p>\n<p>It does not fail that <a href=\"https://github.com/afonso360/wasmtime/runs/7481751739?check_suite_focus=true#step:10:18\">test case on <code>windows-2019</code></a>, however it fails some others that we don't have in our test suite.</p>\n<p>It looks like <code>fma</code>/<code>fmaf</code> is buggy in MinGW. That bug report has been open for 2 years. What should we do here? I <em>really</em> don't want to polyfill fma, should we grab it from some other library?</p>\n</blockquote>",
        "id": 290619087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658589941
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1193142380\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>I suspect this is related to <code>fma</code>/<code>fmaf</code> bugs on MinGW-w64.</p>\n<p>See: <a href=\"https://sourceforge.net/p/mingw-w64/bugs/848/\">https://sourceforge.net/p/mingw-w64/bugs/848/</a></p>\n<p>I compiled the test case in that bug report, with the additional inputs that we are seeing in the interpreter and it also <a href=\"https://github.com/afonso360/wasmtime/runs/7481751790?check_suite_focus=true#step:10:22\">failed</a>. (Called <code>Testcase[6]</code> on the output)</p>\n<p>It does not fail that <a href=\"https://github.com/afonso360/wasmtime/runs/7481751739?check_suite_focus=true#step:10:18\">test case on <code>windows-2019</code></a>, however it fails some others that we don't have in our test suite.</p>\n<p>It looks like <code>fma</code>/<code>fmaf</code> is buggy in MinGW. That bug report has been open for 2 years. What should we do here? Grab a polyfill from some other library?</p>\n</blockquote>",
        "id": 290619235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658590193
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1193142380\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>I suspect this is related to <code>fma</code>/<code>fmaf</code> bugs on MinGW-w64.</p>\n<p>See: <a href=\"https://sourceforge.net/p/mingw-w64/bugs/848/\">https://sourceforge.net/p/mingw-w64/bugs/848/</a></p>\n<p>I compiled the test case in that bug report, with the additional inputs that we are seeing in the interpreter and it also <a href=\"https://github.com/afonso360/wasmtime/runs/7481751790?check_suite_focus=true#step:10:22\">failed</a>. (Called <code>Testcase[6]</code> on the output)</p>\n<p>It does not fail that <a href=\"https://github.com/afonso360/wasmtime/runs/7481751739?check_suite_focus=true#step:10:18\">test case on <code>windows-2019</code></a>, however it fails some others that we don't have in our test suite.</p>\n<p>It looks like <code>fma</code>/<code>fmaf</code> is buggy in MinGW. That bug report has been open for 2 years. What should we do here? Grab a polyfill from some other library?</p>\n<p>Edit: We can trigger this on the current CI, see: #4517</p>\n</blockquote>",
        "id": 290624494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658597209
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1194500731\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<blockquote>\n<p>I also had some issues <a href=\"https://github.com/afonso360/wasmtime/runs/7480336795?check_suite_focus=true\">building the cmake examples on windows-latest</a><br>\nThat is because cmake <code>--target</code> for tests is not consistent between compilers. <code>--target test</code> works for gcc, mingw, macos. <code>--target RUN_TESTS</code> works for msvc, really dumb platform difference. It looks like you already know updating should fix it.</p>\n</blockquote>\n</blockquote>",
        "id": 290805098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658776144
    },
    {
        "content": "<p>TheGreatRambler edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1194500731\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<blockquote>\n<p>I also had some issues <a href=\"https://github.com/afonso360/wasmtime/runs/7480336795?check_suite_focus=true\">building the cmake examples on windows-latest</a></p>\n</blockquote>\n<p>That is because cmake <code>--target</code> for tests is not consistent between compilers. <code>--target test</code> works for gcc, mingw, macos. <code>--target RUN_TESTS</code> works for msvc, really dumb platform difference. It looks like you already know updating should fix it.</p>\n</blockquote>",
        "id": 290805118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658776153
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512#issuecomment-1207135636\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>This has since been resolved so I think this is good to close.</p>\n</blockquote>",
        "id": 292229651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659755991
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4512\">issue #4512</a>:</p>\n<blockquote>\n<p>I was <a href=\"https://github.com/alexcrichton/wasmtime/runs/7473321003?check_suite_focus=true\">testing out</a> using the <code>windows-latest</code> image with Nick's <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4431\">stack walking PR</a> because I think that should fix a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3859\">longstanding blocker</a> for updating the CI image.</p>\n<p>In doing so though I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"n\">filetests</span><span class=\"err\">\\</span><span class=\"n\">filetests</span><span class=\"err\">\\</span><span class=\"n\">runtests</span><span class=\"err\">\\</span><span class=\"n\">fma</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">interpret</span><span class=\"w\"></span>\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">fma_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">060000</span><span class=\"n\">p7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">340488</span><span class=\"n\">p7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mf\">310e42</span><span class=\"n\">p4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">b88e6p14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">3</span><span class=\"n\">b88e8p14</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not sure what that corresponds to in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/fma.clif\">the test itself</a> but I suspect that there's just a difference between the old <code>fma</code> symbol on Windows and the new.</p>\n<p>cc @afonso360 </p>\n</blockquote>",
        "id": 292229652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659755991
    }
]