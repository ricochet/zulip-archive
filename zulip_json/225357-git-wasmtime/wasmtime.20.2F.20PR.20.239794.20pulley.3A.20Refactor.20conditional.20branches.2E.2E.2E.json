[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a> from <code>alexcrichton:pulley-condition-refactor</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit first fixed an issue with table access codegen to disable<br>\nspectre mitigations on Pulley targets like how spectre is disabled for<br>\nmemory accesses as well. This unblocked many tests related to tables<br>\nwhich then led to a different error about a <code>trapnz</code> with an 8-bit value<br>\nnot being supported.</p>\n<p>In fixing <code>trapnz</code> with 8-bit values this PR went ahead and did a<br>\ngeneral-purpose refactoring for how conditional branches are managed.<br>\nPreviously conditional traps and conditional branches had some<br>\nduplicated logic and the goal was to unify everything. There is now a<br>\nsingle <code>Cond</code> which represents the condition of a conditional jump which<br>\nis used uniformly for all locations such as <code>select</code>, <code>brif</code>, and<br>\n<code>trap[n]z</code>. This new type represents all the sorts of conditional<br>\nbranches that can be done in Pulley, for example integer comparisons and<br>\nwhether or not a register is zero. This <code>Cond</code> type has various helpers<br>\nfor printing it, inverting it, collecting operands, emission, etc.</p>\n<p>The end result is that it's a bit wordy to work with <code>Cond</code> right now<br>\ndue to the size of the variants but all locations working with<br>\nconditional traps are deduplicated and now it's just repetitive logic<br>\nrather than duplicated logic.</p>\n<p>Putting all of this together gets a large batch of spec tests working.</p>\n<p>I'll note that this does remove a feature where <code>trapnz</code> was turned into<br>\nnothing or an unconditional trap if the argument was a constant, but<br>\nthat feels like an optimization perhaps best left for the middle-end<br>\nrather than doing it in the backend.</p>\n<p>cc <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">https://github.com/bytecodealliance/wasmtime/issues/9783</a></p>\n</blockquote>",
        "id": 488183475,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733949376
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>.</p>",
        "id": 488183477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733949376
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>.</p>",
        "id": 488183478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733949376
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>.</p>",
        "id": 488183484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733949377
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>.</p>",
        "id": 488183486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733949377
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>.</p>",
        "id": 488183488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733949377
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794#issuecomment-2537086409\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>:</p>\n<blockquote>\n<p>Note this is currently based on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9793\">https://github.com/bytecodealliance/wasmtime/pull/9793</a></p>\n</blockquote>",
        "id": 488183498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733949385
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794#issuecomment-2537256367\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\", \"pulley\", \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle, pulley</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 488194379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733953479
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>.</p>",
        "id": 488526292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733961779
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794#issuecomment-2537086409\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>:</p>\n<blockquote>\n<p>~~Note this is currently based on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9793~~\">https://github.com/bytecodealliance/wasmtime/pull/9793~~</a></p>\n</blockquote>",
        "id": 488526305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733961785
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794#issuecomment-2539038824\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'll note that this does remove a feature where <code>trapnz</code> was turned into<br>\nnothing or an unconditional trap if the argument was a constant, but<br>\nthat feels like an optimization perhaps best left for the middle-end<br>\nrather than doing it in the backend.</p>\n</blockquote>\n<p>Agreed that ideally that would happen in the mid-end, but FWIW the mid-end doesn't have the power to do that currently. I think it is ultimately fine to remove this now tho, and if it is ever an issue in the future we can address it again at that point.</p>\n</blockquote>",
        "id": 488639838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734012070
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794#pullrequestreview-2499749032\">PR review</a>.</p>",
        "id": 488641439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734012494
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9794\">PR #9794</a>.</p>",
        "id": 488648628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734014417
    }
]