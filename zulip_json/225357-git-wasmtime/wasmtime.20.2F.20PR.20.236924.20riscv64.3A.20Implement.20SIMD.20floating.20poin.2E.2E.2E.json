[
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>.</p>",
        "id": 387921509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693327772
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>.</p>",
        "id": 387921510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693327772
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>.</p>",
        "id": 387922696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693328166
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR implements the floating point conversion instructions (<code>fvdemote</code>, <code>fvpromote_low</code>, <code>fcvt_{to,from}_{u,s}int{,_sat}</code>) on the RISC-V backend. </p>\n<p>All of the underlying instructions were implemented in #6920, so we don't need to introduce new ones.</p>\n<hr>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> With this PR we now have SIMD fully implemented for RISC-V<span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<p>There is 1 test that is not passing yet, but I think that is due to a NaN payload bit mismatch that is allowed by the spec. But I'm going to open a separate issue to confirm that.</p>\n<p>(This PR is built on top of #6920 so we need to merge that one first)</p>\n</blockquote>",
        "id": 387922706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693328168
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a> from <code>afonso360:riscv-simd-ftoi</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR implements the floating point conversion instructions (<code>fvdemote</code>, <code>fvpromote_low</code>, <code>fcvt_{to,from}_{u,s}int{,_sat}</code>) on the RISC-V backend. </p>\n<p>All of the underlying instructions were implemented in #6920, so we don't need to introduce new ones.</p>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> With this PR we now have SIMD fully implemented for RISC-V<span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<p>There is 1 test that is not passing yet, but I think that is due to a NaN payload bit mismatch that is allowed by the spec. But I'm going to open a separate issue to confirm that.</p>\n<p>(This PR is built on top of #6920 so we need to merge that one first)</p>\n</blockquote>",
        "id": 387922934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693328217
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR implements the floating point conversion instructions (<code>fvdemote</code>, <code>fvpromote_low</code>, <code>fcvt_{to,from}_{u,s}int{,_sat}</code>) on the RISC-V backend. </p>\n<p>All of the underlying instructions were implemented in #6920, so we don't need to introduce new ones.</p>\n<p>Almost all instructions match 1-to-1 with the WASM spec, except <code>fcvt_to_{u,s}int_sat</code>, where NaN's need to be manually zeroed out. And on <code>fvdemote</code> RISC-V leaves the upper lanes undefined, so we also zero them out manually.</p>\n<hr>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> With this PR we now have SIMD fully implemented for RISC-V<span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<p>There is 1 test that is not passing yet, but I think that is due to a NaN payload bit mismatch that is allowed by the spec. But I'm going to open a separate issue to confirm that.</p>\n<p>(This PR is built on top of #6920 so we need to merge that one first)</p>\n</blockquote>",
        "id": 387923465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693328363
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>.</p>",
        "id": 388190259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693427266
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR implements the floating point conversion instructions (<code>fvdemote</code>, <code>fvpromote_low</code>, <code>fcvt_{to,from}_{u,s}int{,_sat}</code>) on the RISC-V backend. </p>\n<p>Almost all instructions match 1-to-1 with the WASM spec, except <code>fcvt_to_{u,s}int_sat</code>, where NaN's need to be manually zeroed out. And on <code>fvdemote</code> RISC-V leaves the upper lanes undefined, so we also zero them out manually.</p>\n<hr>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> With this PR we now have SIMD fully implemented for RISC-V<span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n<p>There is 1 test that is not passing yet, but I think that is due to a NaN payload bit mismatch that is allowed by the spec. But I'm going to open a separate issue to confirm that.</p>\n<p>(This PR is built on top of #6920 so we need to merge that one first)</p>\n</blockquote>",
        "id": 388190465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693427352
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924#pullrequestreview-1603456829\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"confetti\" class=\"emoji emoji-1f38a\" role=\"img\" title=\"confetti\">:confetti:</span> nice!</p>\n<p>You've done quite a lot of work on this backend and it's very much appreciated, thank you!</p>\n</blockquote>",
        "id": 388191654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693427843
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>.</p>",
        "id": 388192417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693428177
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6924\">PR #6924</a>.</p>",
        "id": 388201495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693432440
    }
]