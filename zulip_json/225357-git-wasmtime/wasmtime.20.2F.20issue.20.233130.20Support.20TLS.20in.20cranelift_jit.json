[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3130\">issue #3130</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>See issue title.</p>\n<h4>Benefit</h4>\n<p>Required by cg_clif's jit mode.</p>\n<h4>Implementation</h4>\n<p>Give every defined jit tls variable a globally unique id using a global atomic counter. Next define a single native TLS variable inside <code>cranelift_jit</code>. This TLS variable points to a vec of pointers indexed by the previously mentioned globally unique id. Require the elf_tls_gd tls model and forward <code>__tls_get_addr</code> to a function of cranelift_jit that looks up the tls variable address using the native tls variable and initializes the tls variable if necessary.</p>\n<p>This implementation method doesn't allow importing native tls variables, supporting native tls requires support from libc and rust never exports tls variables directly anyway. <code>thread_local!</code> wraps it in a function call.</p>\n<h4>Alternatives</h4>\n<p>Add a bunch of special cases in cg_clif to use a different tls declaration method when in jit mode and implement this proposal in cg_clif itself. This increases complexity and reduces reusability.</p>\n</blockquote>",
        "id": 247639184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627591750
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3130\">issue #3130</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>See issue title.</p>\n<h4>Benefit</h4>\n<p>Required by cg_clif's jit mode.</p>\n<h4>Implementation</h4>\n<p>Give every defined jit tls variable a globally unique id using a global atomic counter. Next define a single native TLS variable inside <code>cranelift_jit</code>. This TLS variable points to a vec of pointers indexed by the previously mentioned globally unique id. Require the elf_tls_gd tls model and forward <code>__tls_get_addr</code> to a function of cranelift_jit that looks up the tls variable address using the native tls variable and initializes the tls variable if necessary.</p>\n<p>This implementation method doesn't allow importing native tls variables, supporting native tls requires support from libc and rust never exports tls variables directly anyway. <code>thread_local!</code> wraps it in a function call.</p>\n<h4>Alternatives</h4>\n<p>Add a bunch of special cases in cg_clif to use a different tls declaration method when in jit mode and implement this proposal in cg_clif itself. This increases complexity and reduces reusability.</p>\n</blockquote>",
        "id": 255809313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633123314
    }
]