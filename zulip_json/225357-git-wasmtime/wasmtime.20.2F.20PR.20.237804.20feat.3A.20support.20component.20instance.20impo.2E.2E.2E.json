[
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a> from <code>rvolosatovs:feat/component-import-introspection</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This allows for embedders to introspect the component instance imports to e.g. construct <code>Val</code>s of complex types expected by the components at runtime.<br>\nCloses #7726 <br>\nI'll work on adding a simple test once I verify this covers my own use case</p>\n<p>cc @alexcrichton </p>\n</blockquote>",
        "id": 417283623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705945585
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1837160632\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this! At a high level this looks pretty good, although there's two parts of this I'd have a comment on. One is that from a component model point of view an instance does not have imports, only exports and their types. In that sense <code>Instance::import_types</code> is not necessarily a component-model-based primitive here, and that's where <code>Component::imports()</code> would show up instead. I suspect though that this is critical to your use case, though.</p>\n<p>To handle this I might recommend a slightly updated approach. From a <code>Linker</code> it should be possible to acquire a <code>types::Component</code> from a <code>component::Component</code>. This would synthesize the \"InstanceType\" data internally required to get a <code>Handle</code> which is more-or-less a glorified resource mapping. That would be a built-in way of asking \"If I instantiate this component using this linker what resource would correspond to this import?\" (happy to jump on a call to explain this more too)</p>\n<p>The second thing is mostly minor API adjustments here and there, but nothing requiring major refactoring, so I'll note those later.</p>\n</blockquote>",
        "id": 417297111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705950484
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 417303648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705952907
    },
    {
        "content": "<p>rvolosatovs <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1904697315\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks for this! At a high level this looks pretty good, although there's two parts of this I'd have a comment on. One is that from a component model point of view an instance does not have imports, only exports and their types. In that sense <code>Instance::import_types</code> is not necessarily a component-model-based primitive here, and that's where <code>Component::imports()</code> would show up instead. I suspect though that this is critical to your use case, though.</p>\n<p>To handle this I might recommend a slightly updated approach. From a <code>Linker</code> it should be possible to acquire a <code>types::Component</code> from a <code>component::Component</code>. This would synthesize the \"InstanceType\" data internally required to get a <code>Handle</code> which is more-or-less a glorified resource mapping. That would be a built-in way of asking \"If I instantiate this component using this linker what resource would correspond to this import?\" (happy to jump on a call to explain this more too)</p>\n<p>The second thing is mostly minor API adjustments here and there, but nothing requiring major refactoring, so I'll note those later.</p>\n</blockquote>\n<p>Thanks for the quick response, is this what you mean <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804/commits/56f68d578a74694eb31e2cbc67ec4a913fb0b113\">https://github.com/bytecodealliance/wasmtime/pull/7804/commits/56f68d578a74694eb31e2cbc67ec4a913fb0b113</a> ?<br>\nOtherwise, happy to jump on a call tomorrow</p>\n</blockquote>",
        "id": 417303801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705952970
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1904701479\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>Yep exactly! </p>\n<p>I'll go over this with a more fine-toothed comb tonight so you can have a review for when you wake up</p>\n</blockquote>",
        "id": 417304270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705953143
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1837364464\">PR review</a>.</p>",
        "id": 417315195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1837364464\">PR review</a>.</p>",
        "id": 417315197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462416693\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this perhaps return a <code>types::Component</code>? If so then let's call this method <code>substituted_component_type</code> where the documentation indicates that the resource types imported by the <code>component</code> specified as an argument are replaced with the imports present in <code>Linker</code> in the returned type.</p>\n</blockquote>",
        "id": 417315198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462417624\">PR review comment</a>:</p>\n<blockquote>\n<p>Could those returning a <code>CoreFunc</code> return a <code>FuncType</code> directly instead?</p>\n</blockquote>",
        "id": 417315199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462417258\">PR review comment</a>:</p>\n<blockquote>\n<p>Since <code>types</code> is a public module it's ok to avoid these reexports to avoid the same type being known under two different names.</p>\n</blockquote>",
        "id": 417315200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462417949\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this and <code>results</code> be <code>ExactSizeIterator</code>?</p>\n</blockquote>",
        "id": 417315201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462419987\">PR review comment</a>:</p>\n<blockquote>\n<p>Like above, <code>ExactSizeIterator</code> + <code>&amp;str</code></p>\n</blockquote>",
        "id": 417315202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462418478\">PR review comment</a>:</p>\n<blockquote>\n<p>Could <code>&amp;(String, String), ..</code> here become <code>&amp;str, &amp;str, ...</code></p>\n</blockquote>",
        "id": 417315203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462419361\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this get the <code>ExactSizeIterator</code> plus <code>&amp;str</code> treatment? (and <code>exports</code> below too)</p>\n</blockquote>",
        "id": 417315204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462420276\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this be removed in favor of using <code>ResourceType</code> directly?</p>\n</blockquote>",
        "id": 417315205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462418672\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this be <code>&amp;str</code> instead of <code>&amp;String</code>?</p>\n</blockquote>",
        "id": 417315206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462421740\">PR review comment</a>:</p>\n<blockquote>\n<p>Implementing this would probably require adding a <code>ComponentTypeIndex</code> somewhere inside of a component since I don't think that exists today. Furthermore that may not be altogether trivial to add. </p>\n<p>If it's not easy to add, some suggestions on this method:</p>\n<ul>\n<li><code>ExactSizeIterator</code> + <code>&amp;str</code> return value in the iterator</li>\n<li>Calling this <code>substituted_import_types</code> and documenting that the <code>Linker</code>'s resources are substituted in the component types. </li>\n<li>Adding a <code>substituted_export_types</code> here as well for symmetry</li>\n</ul>\n</blockquote>",
        "id": 417315207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1462418906\">PR review comment</a>:</p>\n<blockquote>\n<p>also <code>ExactSizeIterator</code> for this and <code>exports</code></p>\n</blockquote>",
        "id": 417315208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705957519
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1904960691\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 417329131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705963480
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 417522175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041350
    }
]