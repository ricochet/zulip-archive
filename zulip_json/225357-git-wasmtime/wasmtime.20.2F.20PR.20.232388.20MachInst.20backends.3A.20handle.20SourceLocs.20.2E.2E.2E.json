[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388\">PR #2388</a> from <code>sourceloc</code> to <code>main</code>:</p>\n<blockquote>\n<p>In existing MachInst backends, many instructions -- any that can trap or<br>\nresult in a relocation -- carry <code>SourceLoc</code> values in order to propagate<br>\nthe location-in-original-source to use to describe resulting traps or<br>\nrelocation errors.</p>\n<p>This is quite tedious, and also error-prone: it is likely that the<br>\nnecessary plumbing will be missed in some cases, and in any case, it's<br>\nunnecessarily verbose.</p>\n<p>This PR factors out the <code>SourceLoc</code> handling so that it is tracked<br>\nduring emission as part of the <code>EmitState</code>, and plumbed through<br>\nautomatically by the machine-independent framework. Instruction emission<br>\ncode that directly emits trap or relocation records can query the<br>\ncurrent location as necessary. Then we only need to ensure that memory<br>\nreferences and trap instructions, at their (one) emission point rather<br>\nthan their (many) lowering/generation points, are wired up correctly.</p>\n<p>This does have the side-effect that some loads and stores that do not<br>\ncorrespond directly to user code's heap accesses will have unnecessary<br>\nbut harmless trap metadata. For example, the load that fetches a code<br>\noffset from a jump table will have a 'heap out of bounds' trap record<br>\nattached to it; but because it is bounds-checked, and will never<br>\nactually trap if the lowering is correct, this should be harmless.  The<br>\nsimplicity improvement here seemed more worthwhile to me than plumbing<br>\nthrough a \"corresponds to user-level load/store\" bit, because the latter<br>\nis a bit complex when we allow for op merging.</p>\n<p>Closes #2290: though it does not implement a full \"metadata\" scheme as<br>\ndescribed in that issue, this seems simpler overall.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 216285066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605048242
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388\">PR #2388</a>.</p>",
        "id": 216285069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605048242
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388#pullrequestreview-527690534\">PR Review</a>.</p>",
        "id": 216289669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605051305
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388#pullrequestreview-527690534\">PR Review</a>.</p>",
        "id": 216289671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605051305
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388#discussion_r520940107\">PR Review Comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                sink.add_trap(srcloc, trap_info);\n</code></pre></div>\n<p>This avoids unnecessary <code>let code = ...</code>; possibly rename the <code>Udf</code> field to <code>trap_code</code>.</p>\n</blockquote>",
        "id": 216289672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605051305
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388\">PR #2388</a> from <code>sourceloc</code> to <code>main</code>:</p>\n<blockquote>\n<p>In existing MachInst backends, many instructions -- any that can trap or<br>\nresult in a relocation -- carry <code>SourceLoc</code> values in order to propagate<br>\nthe location-in-original-source to use to describe resulting traps or<br>\nrelocation errors.</p>\n<p>This is quite tedious, and also error-prone: it is likely that the<br>\nnecessary plumbing will be missed in some cases, and in any case, it's<br>\nunnecessarily verbose.</p>\n<p>This PR factors out the <code>SourceLoc</code> handling so that it is tracked<br>\nduring emission as part of the <code>EmitState</code>, and plumbed through<br>\nautomatically by the machine-independent framework. Instruction emission<br>\ncode that directly emits trap or relocation records can query the<br>\ncurrent location as necessary. Then we only need to ensure that memory<br>\nreferences and trap instructions, at their (one) emission point rather<br>\nthan their (many) lowering/generation points, are wired up correctly.</p>\n<p>This does have the side-effect that some loads and stores that do not<br>\ncorrespond directly to user code's heap accesses will have unnecessary<br>\nbut harmless trap metadata. For example, the load that fetches a code<br>\noffset from a jump table will have a 'heap out of bounds' trap record<br>\nattached to it; but because it is bounds-checked, and will never<br>\nactually trap if the lowering is correct, this should be harmless.  The<br>\nsimplicity improvement here seemed more worthwhile to me than plumbing<br>\nthrough a \"corresponds to user-level load/store\" bit, because the latter<br>\nis a bit complex when we allow for op merging.</p>\n<p>Closes #2290: though it does not implement a full \"metadata\" scheme as<br>\ndescribed in that issue, this seems simpler overall.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 216290661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605052023
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388#pullrequestreview-527698100\">PR Review</a>.</p>",
        "id": 216290668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605052028
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388#discussion_r520946427\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Good point, thanks!</p>\n</blockquote>",
        "id": 216290670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605052029
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2388\">PR #2388</a>.</p>",
        "id": 216296221,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605056710
    }
]