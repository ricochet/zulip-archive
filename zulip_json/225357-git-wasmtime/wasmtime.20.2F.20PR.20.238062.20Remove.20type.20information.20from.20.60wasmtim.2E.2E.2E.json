[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/dicej\">dicej</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062\">PR #8062</a>.</p>",
        "id": 425412638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709853094
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062\">PR #8062</a>.</p>",
        "id": 425412640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709853094
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062\">PR #8062</a> from <code>alexcrichton:untyped-val</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is a large refactor of the <code>Val</code> type as used with components to remove inherent type information present currently. The <code>Val</code> type is now only an AST of what a component model value looks like and cannot fully describe the type that it is without further context. For example enums only store the case that's being used, not the full set of cases.</p>\n<p>The motivation for this commit is to make it simpler to use and construct <code>Val</code>, especially in the face of resources. Some problems solved here are:</p>\n<ul>\n<li>\n<p>With resources in play managing type information is not trivial and can often be surprising. For example if you learn the type of a function from a component and the instantiate the component twice the type information is not suitable to use with either function due to exported resources acquiring unique types on all instantiations.</p>\n</li>\n<li>\n<p>Functionally it's much easier to construct values when type information is not required as it no longer requires probing various pieces for type information here and there.</p>\n</li>\n<li>\n<p>API-wise there's far less for us to maintain as there's no need for a type-per-variant of component model types. Pieces now fit much more naturally into a <code>Val</code> shape without extra types.</p>\n</li>\n<li>\n<p>Functionally when working with <code>Val</code> there's now only one typecheck instead of two. Previously a typecheck was performed first when a <code>Val</code> was created and then again later when it was passed to wasm. Now the typecheck only happens when passed to wasm.</p>\n</li>\n</ul>\n<p>It's worth pointing out that <code>Val</code> as-is is a pretty inefficient representation of component model values, for example flags are stored as a list of strings. While semantically correct this is quite inefficient for most purposes other than \"get something working\". To that extent my goal is to, in the future, add traits that enable building a custom user-defined <code>Val</code> (of sorts), but still dynamically. This should enable embedders to opt-in to a more efficient representation that relies on contextual knowledge.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 425412641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709853094
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062\">PR #8062</a>.</p>",
        "id": 425412642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709853094
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062#issuecomment-1984866212\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062\">PR #8062</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen, @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\", \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 425425208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709859809
    },
    {
        "content": "<p>lann submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062#pullrequestreview-1923864842\">PR review</a>.</p>",
        "id": 425426930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709860960
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062#pullrequestreview-1925139427\">PR review</a>:</p>\n<blockquote>\n<p>LGTM!</p>\n</blockquote>",
        "id": 425541824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709912010
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8062\">PR #8062</a>.</p>",
        "id": 425546074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709913592
    }
]