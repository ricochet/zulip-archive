[
    {
        "content": "<p>Dakror opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>Using release v0.21.0 on x64 Linux, i can't use the error-related functionality since the <code>wasmtime_error_t</code> struct does not seem to be present in the C API.</p>\n</blockquote>",
        "id": 220290510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608233495
    },
    {
        "content": "<p>Dakror labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>Using release v0.21.0 on x64 Linux, i can't use the error-related functionality since the <code>wasmtime_error_t</code> struct does not seem to be present in the C API.</p>\n</blockquote>",
        "id": 220290511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608233495
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747654797\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>Are you using <code>wasm.h</code> instead of <code>wasmtime.h</code>? <code>wasmtime_error_t</code> is defined in <code>wasmtime.h</code>: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/0b6b3d0b7a3740c96df382c746060b4eed8068fc/crates/c-api/include/wasmtime.h#L43\">https://github.com/bytecodealliance/wasmtime/blob/0b6b3d0b7a3740c96df382c746060b4eed8068fc/crates/c-api/include/wasmtime.h#L43</a></p>\n</blockquote>",
        "id": 220291119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608233755
    },
    {
        "content": "<p>Dakror <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747656801\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>No i am not. Exploring the Macro definition you can see its defined in terms of itself, which can't be right:<br>\n![image](<a href=\"https://user-images.githubusercontent.com/2452821/102535042-ecb60500-40a7-11eb-9376-f91cdbb30b44.png\">https://user-images.githubusercontent.com/2452821/102535042-ecb60500-40a7-11eb-9376-f91cdbb30b44.png</a>)</p>\n</blockquote>",
        "id": 220291589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608233969
    },
    {
        "content": "<p>Dakror edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747656801\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>No i am not. Exploring the Macro definition you can see its defined in terms of itself without any contents, which can't be right:<br>\n![image](<a href=\"https://user-images.githubusercontent.com/2452821/102535042-ecb60500-40a7-11eb-9376-f91cdbb30b44.png\">https://user-images.githubusercontent.com/2452821/102535042-ecb60500-40a7-11eb-9376-f91cdbb30b44.png</a>)</p>\n</blockquote>",
        "id": 220291714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608234015
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747663729\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p><code>typedef struct wasmtime_error_t wasmtime_error_t</code> means that the type <code>wasmtime_error_t</code> is defined as the partial type <code>struct wasmtime_error_t</code>. A partial type is a type whose actual content is not yet defined. This is often used as forward reference, but in this case it is used as opaque type to not give the C code direct access to it's contents.</p>\n</blockquote>",
        "id": 220293091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608234746
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747663729\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p><code>typedef struct wasmtime_error_t wasmtime_error_t</code> means that the type <code>wasmtime_error_t</code> is defined as the partial type <code>struct wasmtime_error_t</code>. A partial type is a type whose actual content is not yet defined. This is often used as forward reference, but in this case it is used as opaque type to not give the C code direct access to it's contents. Typedefing something to a struct with the same name is often used to avoid explicitly having to write out the <code>struct</code> prefix.</p>\n</blockquote>",
        "id": 220293189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608234810
    },
    {
        "content": "<p>Dakror <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747664744\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>I see, thanks for the explanation. But the issue still remains that the information for the type is missing at link time.</p>\n</blockquote>",
        "id": 220293297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608234851
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747666647\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>Types don't exist at link time, only functions and global variables. What is the link error?</p>\n</blockquote>",
        "id": 220293615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608235022
    },
    {
        "content": "<p>Dakror <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521#issuecomment-747669640\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>I have seem to have misunderstood that part of the api and thought the wasmtime_error_message method was usable to just retrieve the last error during compilation which its not. I got things working now using the method properly. Thanks for your support</p>\n</blockquote>",
        "id": 220294431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608235362
    },
    {
        "content": "<p>Dakror closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2521\">Issue #2521</a>:</p>\n<blockquote>\n<p>Using release v0.21.0 on x64 Linux, i can't use the error-related functionality since the <code>wasmtime_error_t</code> struct does not seem to be present in the C API.</p>\n</blockquote>",
        "id": 220294432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608235362
    }
]