[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2001\">Issue #2001</a>:</p>\n<blockquote>\n<p>This is a good beginner issue that is scoped to the wasmtime-wiggle crate, at crates/wiggle/wasmtime.</p>\n<p>See also #2000, cc @jedisct1 </p>\n<p>I propose that <code>wasmtime_wiggle::wasmtime_integration!</code> generate an additional function <code>link_all(&amp;ctx, &amp;Store, &amp;mut Linker) -&gt; Result&lt;(), _&gt;</code> that constructs and links each module struct generated by the macro. This will make it hard to accidentally forget to instantiate and link in a module when maintaining an integration of several witx modules.</p>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>&lt;!-- What is the feature or code improvement you would like to do in<br>\nCranelift/Wasmtime? --&gt;</p>\n<h4>Benefit</h4>\n<p>&lt;!-- What is the value of adding this in Cranelift/Wasmtime? --&gt;</p>\n<h4>Implementation</h4>\n<p>&lt;!-- Do you have an implementation plan, and/or ideas for data structures or<br>\nalgorithms to use? --&gt;</p>\n<h4>Alternatives</h4>\n<p>&lt;!-- Have you considered alternative implementations? If so, how are they<br>\nbetter or worse than your proposal? --&gt;</p>\n</blockquote>",
        "id": 203394427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594305892
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2001\">Issue #2001</a>:</p>\n<blockquote>\n<p>This is a good beginner issue that is scoped to the wasmtime-wiggle crate, at crates/wiggle/wasmtime.</p>\n<p>See also #2000, cc @jedisct1 </p>\n<p>I propose that <code>wasmtime_wiggle::wasmtime_integration!</code> generate an additional function <code>link_all(ctx, &amp;Store, &amp;mut Linker) -&gt; Result&lt;(), _&gt;</code> that constructs and links each module struct generated by the macro. This will make it hard to accidentally forget to instantiate and link in a module when maintaining an integration of several witx modules.</p>\n<p>Frank has pointed out that this is impossible since each module presently requires an owned <code>ctx</code> value, maybe using Rc&lt;&gt; in the ctx type will help here? This could have inadvertently revealed more problems that we hadn't thought of yet.</p>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>&lt;!-- What is the feature or code improvement you would like to do in<br>\nCranelift/Wasmtime? --&gt;</p>\n<h4>Benefit</h4>\n<p>&lt;!-- What is the value of adding this in Cranelift/Wasmtime? --&gt;</p>\n<h4>Implementation</h4>\n<p>&lt;!-- Do you have an implementation plan, and/or ideas for data structures or<br>\nalgorithms to use? --&gt;</p>\n<h4>Alternatives</h4>\n<p>&lt;!-- Have you considered alternative implementations? If so, how are they<br>\nbetter or worse than your proposal? --&gt;</p>\n</blockquote>",
        "id": 203396143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594306620
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2001\">Issue #2001</a>:</p>\n<blockquote>\n<p>This is a good beginner issue that is scoped to the wasmtime-wiggle crate, at crates/wiggle/wasmtime.</p>\n<p>See also #2000, cc @jedisct1 </p>\n<p>I propose that <code>wasmtime_wiggle::wasmtime_integration!</code> generate an additional function <code>link_all(ctx, &amp;Store, &amp;mut Linker) -&gt; Result&lt;(), _&gt;</code> that constructs and links each module struct generated by the macro. This will make it hard to accidentally forget to instantiate and link in a module when maintaining an integration of several witx modules.</p>\n<p>Frank has pointed out that this is impossible since each module presently requires an owned <code>ctx</code> value, maybe using Rc&lt;&gt; in the ctx type will help here? This could have inadvertently revealed more problems that we hadn't thought of yet.</p>\n</blockquote>",
        "id": 203396159,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594306628
    }
]