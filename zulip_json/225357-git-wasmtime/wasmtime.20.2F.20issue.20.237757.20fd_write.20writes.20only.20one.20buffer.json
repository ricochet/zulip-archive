[
    {
        "content": "<p><a href=\"https://github.com/zoren\">zoren</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757\">Issue #7757</a>.</p>",
        "id": 411624092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704653595
    },
    {
        "content": "<p>zoren opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757\">issue #7757</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/13854516/write2.zip\">write2.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Run the attached binary. Observe only one line is written.</p>\n<h3>Expected Results</h3>\n<p>I expected two lines to be written to standard out.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">❯</span><span class=\"w\"> </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">write2</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"n\">world</span>\n<span class=\"n\">HELLO</span><span class=\"w\"> </span><span class=\"n\">WORLD</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>I only get one line written to standard out.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">❯</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">write2</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"n\">world</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime-cli 16.0.0 (6613acd1e 2023-12-20)</p>\n<p>Operating system: macOS 14.2.1</p>\n<p>Architecture: M1</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>It seems the implementation of <code>fd_write</code> will only print the first non-empty buffer. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7690c500228ae005fc70ee3b6297bb4b403686d5/crates/wasi-preview1-component-adapter/src/lib.rs#L1422\">https://github.com/bytecodealliance/wasmtime/blob/7690c500228ae005fc70ee3b6297bb4b403686d5/crates/wasi-preview1-component-adapter/src/lib.rs#L1422</a></p>\n<p>This I believe is unlike <code>writev</code> in POSIX. But I have not tested this out.<br>\n</p>\n</blockquote>",
        "id": 411624094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704653596
    },
    {
        "content": "<p>zoren edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757\">issue #7757</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/13854516/write2.zip\">write2.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Run the attached binary. Observe only one line is written. The binary puts two elements in an io vector but only one is printed.</p>\n<h3>Expected Results</h3>\n<p>I expected two lines to be written to standard out.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">❯</span><span class=\"w\"> </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">write2</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"n\">world</span>\n<span class=\"n\">HELLO</span><span class=\"w\"> </span><span class=\"n\">WORLD</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>I only get one line written to standard out.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">❯</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">write2</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"n\">world</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime-cli 16.0.0 (6613acd1e 2023-12-20)</p>\n<p>Operating system: macOS 14.2.1</p>\n<p>Architecture: M1</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>It seems the implementation of <code>fd_write</code> will only print the first non-empty buffer. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7690c500228ae005fc70ee3b6297bb4b403686d5/crates/wasi-preview1-component-adapter/src/lib.rs#L1422\">https://github.com/bytecodealliance/wasmtime/blob/7690c500228ae005fc70ee3b6297bb4b403686d5/crates/wasi-preview1-component-adapter/src/lib.rs#L1422</a></p>\n<p>This I believe is unlike <code>writev</code> in POSIX. But I have not tested this out.<br>\n</p>\n</blockquote>",
        "id": 411624378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704653823
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757#issuecomment-1880143693\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757\">issue #7757</a>:</p>\n<blockquote>\n<p>Trying to process all buffers in a loop would violate the atomicity guarantee POSIX gives for writev in the presence of other programs writing to the same file.</p>\n<blockquote>\n<p>The data transfers performed by readv() and writev() are atomic: the data written by writev() is written as a single block that is not intermingled with output  from  writes  in<br>\nother  processes; analogously, readv() is guaranteed to read a contiguous block of data from the file, regardless of read operations performed in other threads or processes that<br>\nhave file descriptors referring to the same open file description (see open(2))</p>\n</blockquote>\n<p>The current behavior is allowed for writev:</p>\n<blockquote>\n<p>Note that it is not an error for a successful call to transfer fewer bytes than requested (see read(2) and write(2)).</p>\n</blockquote>\n<p>It is not the fastest though of course, but wasi-preview2 doesn't support vectorized reads and writes at all from what I can tell, so the current behavior shouldn't be much of a difference compared to doing the loop inside the fd_write impl.</p>\n<p>The old wasi-preview1 implementation which isn't layered on top of wasi-preview2 as compat layer does support vectorized reads and writes afaik.</p>\n</blockquote>",
        "id": 411624967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704654272
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757\">issue #7757</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/13854516/write2.zip\">write2.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Run the attached binary. Observe only one line is written. The binary puts two elements in an io vector but only one is printed.</p>\n<h3>Expected Results</h3>\n<p>I expected two lines to be written to standard out.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">❯</span><span class=\"w\"> </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">write2</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"n\">world</span>\n<span class=\"n\">HELLO</span><span class=\"w\"> </span><span class=\"n\">WORLD</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>I only get one line written to standard out.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">❯</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">write2</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">hello</span><span class=\"w\"> </span><span class=\"n\">world</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime-cli 16.0.0 (6613acd1e 2023-12-20)</p>\n<p>Operating system: macOS 14.2.1</p>\n<p>Architecture: M1</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>It seems the implementation of <code>fd_write</code> will only print the first non-empty buffer. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7690c500228ae005fc70ee3b6297bb4b403686d5/crates/wasi-preview1-component-adapter/src/lib.rs#L1422\">https://github.com/bytecodealliance/wasmtime/blob/7690c500228ae005fc70ee3b6297bb4b403686d5/crates/wasi-preview1-component-adapter/src/lib.rs#L1422</a></p>\n<p>This I believe is unlike <code>writev</code> in POSIX. But I have not tested this out.<br>\n</p>\n</blockquote>",
        "id": 411644793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704672733
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757#issuecomment-1880238625\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7757\">issue #7757</a>:</p>\n<blockquote>\n<p>As @bjorn3 has described, this behavior is working as intended - The caller of fd_write need to take into account that it may not consume the entire output and it may need to be called again. I'm going to close this issue, but you can re-open if that is not what you are observing.</p>\n</blockquote>",
        "id": 411644795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704672734
    }
]