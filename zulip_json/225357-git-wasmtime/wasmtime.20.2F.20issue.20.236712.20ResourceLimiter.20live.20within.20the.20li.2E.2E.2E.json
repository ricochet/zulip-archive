[
    {
        "content": "<p>abel-von opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712\">issue #6712</a>:</p>\n<blockquote>\n<p>As if we want to use WASI, we will make the \"data\" as WasiCtx, and if we want to limit the resources, we have to call <code>limiter</code> with a function of Type <code>impl FnMut(&amp;mut T) -&gt; &amp;mut (dyn crate::ResourceLimiter) + Send + Sync + 'static</code>.  To satisfy this lifecycle requirement, we have to initialize an object of type that implements ResourceLimiter, and add it into the <code>data</code> of Store, but as the <code>data</code> is almost often to be a <code>WasiCtx</code>, we have no way to store this ResourceLimiter into it. That makes it no way to define a ResourceLimiter for those run wasm with wasi supported.</p>\n</blockquote>",
        "id": 374170818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689062625
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712#issuecomment-1630739802\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712\">issue #6712</a>:</p>\n<blockquote>\n<p>When using WASI the <code>T</code> in <code>Store&lt;T&gt;</code> doesn't have to be <code>WasiCtx</code>, it only needs to contain <code>WasiCtx</code>. This means you can do something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">MyData</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">max_memory</span>: <span class=\"kt\">usize</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">ResourceLImiter</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyData</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>and then when you call <code>wasmtime_wasi::add_to_linker</code> the closure would be <code>|data| &amp;mut data.wasi</code> (or something along these lines).</p>\n<p>Does that work for your use case?</p>\n</blockquote>",
        "id": 374249363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689078696
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712#issuecomment-1630739802\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712\">issue #6712</a>:</p>\n<blockquote>\n<p>When using WASI the <code>T</code> in <code>Store&lt;T&gt;</code> doesn't have to be <code>WasiCtx</code>, it only needs to contain <code>WasiCtx</code>. This means you can do something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">MyData</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span>: <span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">max_memory</span>: <span class=\"kt\">usize</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">ResourceLimiter</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyData</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>and then when you call <code>wasmtime_wasi::add_to_linker</code> the closure would be <code>|data| &amp;mut data.wasi</code> (or something along these lines).</p>\n<p>Does that work for your use case?</p>\n</blockquote>",
        "id": 374249399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689078706
    },
    {
        "content": "<p>abel-von <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712#issuecomment-1632099470\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712\">issue #6712</a>:</p>\n<blockquote>\n<p>Thank you for reply ,  I think it works for me.</p>\n</blockquote>",
        "id": 374533335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689151477
    },
    {
        "content": "<p>abel-von closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6712\">issue #6712</a>:</p>\n<blockquote>\n<p>As if we want to use WASI, we will make the \"data\" as WasiCtx, and if we want to limit the resources, we have to call <code>limiter</code> with a function of Type <code>impl FnMut(&amp;mut T) -&gt; &amp;mut (dyn crate::ResourceLimiter) + Send + Sync + 'static</code>.  To satisfy this lifecycle requirement, we have to initialize an object of type that implements ResourceLimiter, and add it into the <code>data</code> of Store, but as the <code>data</code> is almost often to be a <code>WasiCtx</code>, we have no way to store this ResourceLimiter into it. That makes it no way to define a ResourceLimiter for those run wasm with wasi supported.</p>\n</blockquote>",
        "id": 374533357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689151482
    }
]