[
    {
        "content": "<p><a href=\"https://github.com/Userzxcvbvnm\">Userzxcvbvnm</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">Issue #8821</a>.</p>",
        "id": 445121801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718627594
    },
    {
        "content": "<p>Userzxcvbvnm opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">dirent</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">errno</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function fd_readdir_00001_sYQM0</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">DIR</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">directory</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">dirent</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">entry</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fdopendir</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"fdopendir failed.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">readdir</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get dir content:%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">-&gt;</span><span class=\"nc\">d_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Print dir content finished.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file %d by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"s\">\"subdir_2/subdir_5\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_DIRECTORY</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, directory subdir_2/subdir_5 exists, and contains sub files subfile_1, subfile_2, subfile_3 in it.<br>\nBefore run the Wasm file, change the permission of subdir_2/subdir_5 into 0400(r--------) or 0600(rw-------). )<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_2</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_3</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"o\">..</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_1</span>\n<span class=\"n\">Print</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"n\">finished</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>This is what WAMR and WasmEdge do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">fdopendir</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>wasmtime fails to read the file items in the directory although both permission 0400 and 0600 has the read permission.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 445121806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718627596
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821#issuecomment-2173993673\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<p>This is an under-specified corner of this function in WASI. Right now Wasmtime will reopen the directory each time a directory iterator is requested to ensure that state on the file descriptor is not carried over from one read to the next. I don't know if other runtimes will have the same behavior if the same file descriptor is opened as a directory and read twice. This directory cannot be directly opened in this manner I believe because the execute permission bit is missing.</p>\n<p>I think it would be best to open a bug with WASI to figure out the correct behavior here.</p>\n</blockquote>",
        "id": 445190729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718646733
    },
    {
        "content": "<p>Userzxcvbvnm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821#issuecomment-2174850192\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<p>Thanks for your reply! I reproduce this with Linux native code (<code>gcc test.c -o test</code>, <code>./test</code>) and Linux native has the same behavior with WAMR and WasmEdge. I'm not sure whether wasmtime should behave like this.</p>\n</blockquote>",
        "id": 445259973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718678642
    },
    {
        "content": "<p>Userzxcvbvnm edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">dirent</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">errno</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function fd_readdir_00001_sYQM0</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">DIR</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">directory</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">dirent</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">entry</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fdopendir</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"fdopendir failed.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">readdir</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get dir content:%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">-&gt;</span><span class=\"nc\">d_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Print dir content finished.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file %d by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"s\">\"subdir_2/subdir_5\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_DIRECTORY</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, directory subdir_2/subdir_5 exists, and contains sub files subfile_1, subfile_2, subfile_3 in it.<br>\nBefore run the Wasm file, change the permission of subdir_2/subdir_5 into 0400(r--------) or 0600(rw-------). )<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_2</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_3</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"o\">..</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_1</span>\n<span class=\"n\">Print</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"n\">finished</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>This is what WAMR, WasmEdge  and Linux native code do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">fdopendir</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>wasmtime fails to read the file items in the directory although both permission 0400 and 0600 has the read permission.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 445260008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718678663
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821#issuecomment-2176402439\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<p>Yes I understand that Linux enables this, but WASI isn't just a copy wholesale of Linux. This is specifically grappling with a concept not in WASI, namely file permissions. Given that I'm hesitant to commit any particular behavior in Wasmtime as it's not clear to me which is the way to go.</p>\n<p>In general most of the cases you're running into are \"holes\" in the WASI specification, but WASI (in my opinion) is going to take a very long time if ever to completely and fully specify every possible interaction between filesystems. Given that we can try to patch things up as they come up but it's not really feasible to get 100% determinism across all possible runtimes across all possible platforms. For example I would be surprised if other runtimes has consistent behavior on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8817\">https://github.com/bytecodealliance/wasmtime/issues/8817</a> across all platforms. Just because Linux does something doesn't mean that it's what should be codified in WASI.</p>\n<p>I don't think that this issue has a solid resolution in WASI itself, but I still think it's worthwhile to open an issue there and get the discussion going. Either that or someone else can also chime in and say \"no, Alex, behavior X is obviously the correct one to implement here\" and Wasmtime can implement that.</p>\n</blockquote>",
        "id": 445392157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718724958
    },
    {
        "content": "<p>Userzxcvbvnm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821#issuecomment-2177409225\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<p>Thanks for your reply! As you suggested, I'll open a bug with WASI to figure out the correct behavior.</p>\n</blockquote>",
        "id": 445494959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718763379
    },
    {
        "content": "<p>Userzxcvbvnm edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">dirent</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">errno</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function fd_readdir_00001_sYQM0</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">DIR</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">directory</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">dirent</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">entry</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fdopendir</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"fdopendir failed.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">readdir</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get dir content:%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">-&gt;</span><span class=\"nc\">d_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Print dir content finished.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file %d by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"s\">\"subdir_2/subdir_5\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_DIRECTORY</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, directory subdir_2/subdir_5 exists, and contains sub files subfile_1, subfile_2, subfile_3 in it.<br>\nBefore run the Wasm file, change the permission of subdir_2/subdir_5 into 0400(r--------) or 0600(rw-------). )<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_2</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_3</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"o\">..</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_1</span>\n<span class=\"n\">Print</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"n\">finished</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>This is what WAMR, WasmEdge  and Linux native code do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">fdopendir</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>wasmtime fails to read the file items in the directory although both permission 0400 and 0600 has the read permission.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2 and 13.0.1<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 446811667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719304462
    },
    {
        "content": "<p>tschneidereit closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c test case is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">dirent</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">errno</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n<span class=\"p\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">string</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function fd_readdir_00001_sYQM0</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">DIR</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">directory</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">dirent</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">entry</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fdopendir</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"fdopendir failed.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">readdir</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get dir content:%s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"p\">-&gt;</span><span class=\"nc\">d_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Print dir content finished.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Get file descriptor of file %s succeed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Close the file %d by descriptor failed!</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"s\">\"subdir_2/subdir_5\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_RDONLY</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_DIRECTORY</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">fd_readdir_00001_sYQM0</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">closebyfd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compile to wasm:<code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<p>(2)Running wasm:<br>\n(Before run the Wasm file, directory subdir_2/subdir_5 exists, and contains sub files subfile_1, subfile_2, subfile_3 in it.<br>\nBefore run the Wasm file, change the permission of subdir_2/subdir_5 into 0400(r--------) or 0600(rw-------). )<br>\n<code>wasmtime run --dir=. test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_2</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_3</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:.</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"o\">..</span>\n<span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"p\">:</span><span class=\"nc\">subfile_1</span>\n<span class=\"n\">Print</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"n\">content</span><span class=\"w\"> </span><span class=\"n\">finished</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>This is what WAMR, WasmEdge  and Linux native code do.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Get</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">subdir_2</span><span class=\"o\">/</span><span class=\"n\">subdir_5</span><span class=\"w\"> </span><span class=\"n\">succeed</span><span class=\"o\">!</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fd_readdir_00001_sYQM0</span>\n<span class=\"n\">fdopendir</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>wasmtime fails to read the file items in the directory although both permission 0400 and 0600 has the read permission.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2 and 13.0.1<br>\nOperating system: Ubuntu 20.04<br>\nArchitecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 468404354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725713191
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821#issuecomment-2335176695\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8821\">issue #8821</a>:</p>\n<blockquote>\n<p>Closing this as it's more of a WASI issue than a Wasmtime one—at least for now, as Wasmtime's behavior would have to change in case the spec is clarified in a way that makes the current behavior invalid. @Userzxcvbvnm if you ended up filing that issue, would you mind linking it here?</p>\n</blockquote>",
        "id": 468404359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725713192
    }
]