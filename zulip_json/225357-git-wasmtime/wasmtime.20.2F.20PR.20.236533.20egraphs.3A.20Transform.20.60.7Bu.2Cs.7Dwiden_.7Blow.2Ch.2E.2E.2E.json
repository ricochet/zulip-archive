[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6533\">PR #6533</a> from <code>afonso360:cranelift-widen-splat</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR adds an egraph optimization that transforms <code>swiden_low+splat</code> into <code>splat+sextend</code> (and similar variations).</p>\n<p>The primary motivation for this is that I'm working on SIMD widening arithmetic instructions in the RISC-V backend, and would like to match all of those patterns with just <code>splat+extend</code>. That being said, It is also probably beneficial to do these transforms (at least for RISC-V) since we have a bunch of scalar instructions that <code>sextend</code> the result.</p>\n</blockquote>",
        "id": 364125510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686090065
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6533\">PR #6533</a>.</p>",
        "id": 364125511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686090065
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6533\">PR #6533</a>.</p>",
        "id": 364125512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686090065
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6533#pullrequestreview-1466248763\">PR review</a>:</p>\n<blockquote>\n<p>Good idea!</p>\n<p><code>swiden_high</code> et al only support doubling the width and halving the number of lanes, right? I think these rewrite rules would still be correct if it supported e.g. i8-&gt;i64 but I'd want to see tests for that case just to be sure. But if that case can't happen due to constraints on the widening instructions then that's not an issue.</p>\n</blockquote>",
        "id": 364127814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686091086
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6533\">PR #6533</a>.</p>",
        "id": 364252602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686138637
    }
]