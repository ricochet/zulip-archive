[
    {
        "content": "<p>skhaz opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581\">issue #7581</a>:</p>\n<blockquote>\n<p>I'd like to know if it's possible to have hooks/handlers for stdout and stderr using Python (or Go, or JavaScript), so that I can execute a <code>.wasm</code> and save the stdout/err in a variable.</p>\n</blockquote>",
        "id": 404008844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700851816
    },
    {
        "content": "<p>yfaming <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581#issuecomment-1826475943\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581\">issue #7581</a>:</p>\n<blockquote>\n<p><a href=\"https://bytecodealliance.github.io/wasmtime-py/#wasmtime.WasiConfig\"><code>WasiConfig</code></a> in <a href=\"https://github.com/bytecodealliance/wasmtime-py\">wasmtime-py</a> might be helpful. We can assign a path to <code>stdin_file/stdout_file/stderr_file</code>. It seems we can only redirect stdio into separate file(s).</p>\n<p>Here is a simple example:</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"c1\"># pip install wasmtime</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">wasmtime</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">WasiConfig</span><span class=\"p\">()</span>\n    <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">stdout_file</span> <span class=\"o\">=</span> <span class=\"s2\">\"stdout.txt\"</span>\n\n    <span class=\"n\">linker</span> <span class=\"o\">=</span> <span class=\"n\">Linker</span><span class=\"p\">(</span><span class=\"n\">Engine</span><span class=\"p\">())</span>\n    <span class=\"n\">linker</span><span class=\"o\">.</span><span class=\"n\">define_wasi</span><span class=\"p\">()</span>\n    <span class=\"n\">store</span> <span class=\"o\">=</span> <span class=\"n\">Store</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n    <span class=\"n\">store</span><span class=\"o\">.</span><span class=\"n\">set_wasi</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n    <span class=\"n\">module</span> <span class=\"o\">=</span> <span class=\"n\">Module</span><span class=\"o\">.</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"n\">linker</span><span class=\"o\">.</span><span class=\"n\">engine</span><span class=\"p\">,</span> <span class=\"s2\">\"wasi_hello.wasm\"</span><span class=\"p\">)</span>\n    <span class=\"n\">instance</span> <span class=\"o\">=</span> <span class=\"n\">linker</span><span class=\"o\">.</span><span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">,</span> <span class=\"n\">module</span><span class=\"p\">)</span>\n    <span class=\"n\">instance</span><span class=\"o\">.</span><span class=\"n\">exports</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">)[</span><span class=\"s2\">\"_start\"</span><span class=\"p\">](</span><span class=\"n\">store</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</code></pre></div>\n</blockquote>",
        "id": 404192083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700968145
    },
    {
        "content": "<p>skhaz <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581#issuecomment-1826476489\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581\">issue #7581</a>:</p>\n<blockquote>\n<p>Thank you so much.</p>\n<p>I was using file to do this, I thought that was another way though.</p>\n</blockquote>",
        "id": 404192282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700968335
    },
    {
        "content": "<p>skhaz closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581\">issue #7581</a>:</p>\n<blockquote>\n<p>I'd like to know if it's possible to have hooks/handlers for stdout and stderr using Python (or Go, or JavaScript), so that I can execute a <code>.wasm</code> and save the stdout/err in a variable.</p>\n</blockquote>",
        "id": 404192291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700968349
    },
    {
        "content": "<p>yfaming <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581#issuecomment-1826481574\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7581\">issue #7581</a>:</p>\n<blockquote>\n<p>wasmtime itself (in Rust) supports setting stdin/stdout via <a href=\"https://docs.rs/wasmtime-wasi/latest/wasmtime_wasi/sync/struct.WasiCtxBuilder.html\">WasiCtxBuilder</a>. We can pass any struct implemented <a href=\"https://docs.rs/wasi-common/latest/wasi_common/file/trait.WasiFile.html\">WasiFile</a>. Unfortunately, wasmtime-py does not support it ye.</p>\n</blockquote>",
        "id": 404195041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700970697
    }
]