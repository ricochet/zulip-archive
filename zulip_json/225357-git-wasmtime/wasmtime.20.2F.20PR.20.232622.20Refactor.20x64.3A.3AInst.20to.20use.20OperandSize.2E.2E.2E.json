[
    {
        "content": "<p>kaseyc edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.<br>\n</p>\n</blockquote>",
        "id": 224680348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612147394
    },
    {
        "content": "<p>kaseyc edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.</p>\n<p>Partially addresses #2586.</p>\n</blockquote>",
        "id": 224829090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612241814
    },
    {
        "content": "<p><strong>kaseyc</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> as ready for review.</p>",
        "id": 224829095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612241817
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-581886528\">PR Review</a>.</p>",
        "id": 224958254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612312407
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#discussion_r569023173\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is a nice helper for asserts! I think it might be good to make the name a bit more explicit: maybe <code>is_one_of(sizes)</code>?</p>\n</blockquote>",
        "id": 224958255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612312407
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-581886528\">PR Review</a>.</p>",
        "id": 224958256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612312407
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#discussion_r569023747\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We can do <code>sizes.iter().any(|val| self == *val)</code> here, I think.</p>\n</blockquote>",
        "id": 224958257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612312407
    },
    {
        "content": "<p>kaseyc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-581959248\">PR Review</a>.</p>",
        "id": 224967146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320063
    },
    {
        "content": "<p>kaseyc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#discussion_r569092247\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This branch kind of jumped out at me. Both sides do similar things with OperandSize, but the if 0 case only widens I64 types (not B64 or R64).</p>\n<p>I left it as is to keep this a pure refactor, but it struck me as odd.</p>\n</blockquote>",
        "id": 224967147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320063
    },
    {
        "content": "<p>kaseyc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.</p>\n<p>Partially addresses #2586.</p>\n</blockquote>",
        "id": 224967515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320422
    },
    {
        "content": "<p>kaseyc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-581961455\">PR Review</a>.</p>",
        "id": 224967525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320434
    },
    {
        "content": "<p>kaseyc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#discussion_r569094133\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That is a much better name, thank you.</p>\n</blockquote>",
        "id": 224967526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320434
    },
    {
        "content": "<p>kaseyc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-581962382\">PR Review</a>.</p>",
        "id": 224967652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320599
    },
    {
        "content": "<p>kaseyc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#discussion_r569095053\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done, thanks.</p>\n<p>I mostly write C++ these days and my Rust is, ah, rusty.</p>\n</blockquote>",
        "id": 224967653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320600
    },
    {
        "content": "<p>kaseyc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.</p>\n<p>Partially addresses #2586.</p>\n</blockquote>",
        "id": 224967706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612320632
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-582124854\">PR Review</a>.</p>",
        "id": 224987893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612342191
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-582124854\">PR Review</a>.</p>",
        "id": 224987894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612342191
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#discussion_r569229879\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, yes, good catch -- I think that for consistency this should match the widening logic in the <code>value != 0</code> case below. (It's harmless in practice as the 32-bit <code>xor</code> will zero the top 32 bits anyway, but we might as well be consistent.)</p>\n</blockquote>",
        "id": 224987895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612342191
    },
    {
        "content": "<p>kaseyc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a> from <code>operand</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is in preparation for refactoring all x64::Inst arms to use OperandSize.</p>\n<p>Current uses of OperandSize fall into two categories:</p>\n<p>1. XMM operations which require 32/64 bit operands<br>\n  2. Immediates which only care about 64-bit or not.</p>\n<p>Adds assertions to existing Inst constructors to check that they are passed valid sizes.<br>\nThis change also removes the implicit widening of 1 and 2 byte values to 4 bytes. from_bytes() is only used by category 2, so removing this behavior will not change any visible behavior.</p>\n<p>Overall this change should be a no-op.</p>\n<p>Partially addresses #2586.</p>\n</blockquote>",
        "id": 224988501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612342579
    },
    {
        "content": "<p>kaseyc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#discussion_r569236183\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Updated.</p>\n</blockquote>",
        "id": 224988574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612342650
    },
    {
        "content": "<p>kaseyc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622#pullrequestreview-582132740\">PR Review</a>.</p>",
        "id": 224988575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612342650
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2622\">PR #2622</a>.</p>",
        "id": 225060759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612377613
    }
]