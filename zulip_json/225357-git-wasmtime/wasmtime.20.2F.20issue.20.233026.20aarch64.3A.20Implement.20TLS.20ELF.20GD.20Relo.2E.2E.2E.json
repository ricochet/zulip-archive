[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867521863\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<blockquote>\n<p>I suspect that this means that the first two relocations are silently not being done?</p>\n</blockquote>\n<p><code>clif-util compile</code> shows the relocations separate from the disassembly. I believe you need to use <code>-p</code> to show them at all though.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/03077e0de9bc5bb92623d58a1e5d78b828fd1634/cranelift/src/compile.rs#L71\">https://github.com/bytecodealliance/wasmtime/blob/03077e0de9bc5bb92623d58a1e5d78b828fd1634/cranelift/src/compile.rs#L71</a></p>\n</blockquote>",
        "id": 243765518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624530123
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867528371\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>Oh, that's really nice, I didn't see that flag, here's what that outputs:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">reloc_external</span>: <span class=\"nc\">Aarch64TlsGdAdrPrel21</span><span class=\"w\"> </span><span class=\"n\">u1</span>:<span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">36</span><span class=\"w\"></span>\n<span class=\"n\">reloc_external</span>: <span class=\"nc\">Aarch64TlsGdAddLo12Nc</span><span class=\"w\"> </span><span class=\"n\">u1</span>:<span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"n\">reloc_external</span>: <span class=\"nc\">Call</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">ElfTlsGetAddr</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"></span>\n</code></pre></div>\n<p>So, it is doing the relocations, but i don't think those are the correct labels to be emitting?</p>\n</blockquote>",
        "id": 243766473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624530801
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867528371\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>Oh, that's really nice, I didn't see that flag, here's what that outputs:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">reloc_external</span>: <span class=\"nc\">Aarch64TlsGdAdrPrel21</span><span class=\"w\"> </span><span class=\"n\">u1</span>:<span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">36</span><span class=\"w\"></span>\n<span class=\"n\">reloc_external</span>: <span class=\"nc\">Aarch64TlsGdAddLo12Nc</span><span class=\"w\"> </span><span class=\"n\">u1</span>:<span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"n\">reloc_external</span>: <span class=\"nc\">Call</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">ElfTlsGetAddr</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">44</span><span class=\"w\"></span>\n</code></pre></div>\n<p>So, it is doing the relocations, but i don't think those are the correct offsets to be emitting?</p>\n</blockquote>",
        "id": 243766518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624530838
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867530808\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>Looks like it is off by 4 bytes if these offsets are in decimal.</p>\n</blockquote>",
        "id": 243766880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624531084
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867531362\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>I think you need to move the relocs before the <code>put4</code>.</p>\n</blockquote>",
        "id": 243766949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624531150
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867540149\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>Yeah, that seems to be the right thing to do, we also put relocations before the call instruction and I didn't notice it before:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/81726207639cfb8ac2128135463291d7a55e2c9d/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2295-L2296\">https://github.com/bytecodealliance/wasmtime/blob/81726207639cfb8ac2128135463291d7a55e2c9d/cranelift/codegen/src/isa/aarch64/inst/emit.rs#L2295-L2296</a></p>\n<p>Unfortunately we get the same result, but I did another test, by compiling the following file with gcc and dumping relocations:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">__thread</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">tl</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">tl</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">tl</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// aarch64-linux-gnu-gcc -O2 -fPIC -ftls-model=global-dynamic -mtls-dialect=trad -c ./reloc.c</span>\n<span class=\"c1\">// aarch64-linux-gnu-objdump -dr reloc.o</span>\n</code></pre></div>\n<p>We get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"mi\">90000000</span><span class=\"w\">        </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">bar</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">10</span>: <span class=\"nc\">R_AARCH64_TLSGD_ADR_PAGE21</span><span class=\"w\">  </span><span class=\"n\">tl</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">91000000</span><span class=\"w\">        </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x0</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">14</span>: <span class=\"nc\">R_AARCH64_TLSGD_ADD_LO12_NC</span><span class=\"w\"> </span><span class=\"n\">tl</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">18</span>:   <span class=\"mi\">94000000</span><span class=\"w\">        </span><span class=\"n\">bl</span><span class=\"w\">      </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__tls_get_addr</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">18</span>: <span class=\"nc\">R_AARCH64_CALL26</span><span class=\"w\">    </span><span class=\"n\">__tls_get_addr</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"n\">c</span>:   <span class=\"nc\">d503201f</span><span class=\"w\">        </span><span class=\"n\">nop</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Which is <em>not</em> the relocation we are emitting. I'm going to fix that now</p>\n</blockquote>",
        "id": 243768273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624532109
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867540512\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>Before linking there is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"mi\">1730</span>:       <span class=\"mi\">90000000</span><span class=\"w\">        </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_ZN67_</span><span class=\"cp\">$LT$mini_core</span><span class=\"o\">..</span><span class=\"nb\">Option</span><span class=\"cp\">$LT$T$GT$$u20$as$u20$mini_core</span><span class=\"o\">..</span><span class=\"nb\">PartialEq</span><span class=\"cp\">$GT$</span><span class=\"mi\">2</span><span class=\"n\">ne17h6ea470a27df2424aE</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">1730</span>: <span class=\"nc\">R_AARCH64_TLSGD_ADR_PREL21</span><span class=\"w\">        </span><span class=\"n\">_ZN21mini_core_hello_world3TLS17hbf7bac7ea236bf4cE</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1734</span>:       <span class=\"mi\">91000000</span><span class=\"w\">        </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x0</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">1734</span>: <span class=\"nc\">R_AARCH64_TLSGD_ADD_LO12_NC</span><span class=\"w\">       </span><span class=\"n\">_ZN21mini_core_hello_world3TLS17hbf7bac7ea236bf4cE</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1738</span>:       <span class=\"mi\">94000000</span><span class=\"w\">        </span><span class=\"n\">bl</span><span class=\"w\">      </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__tls_get_addr</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">1738</span>: <span class=\"nc\">R_AARCH64_CALL26</span><span class=\"w\">  </span><span class=\"n\">__tls_get_addr</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">173</span><span class=\"n\">c</span>:       <span class=\"nc\">d503201f</span><span class=\"w\">        </span><span class=\"n\">nop</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which seems correct. However after linking it turns into:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f34</span>:       <span class=\"mi\">580</span><span class=\"n\">b0520</span><span class=\"w\">        </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"n\">fd8</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_GLOBAL_OFFSET_TABLE_</span><span class=\"o\">+</span><span class=\"mh\">0x28</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f38</span>:       <span class=\"nc\">d53bd041</span><span class=\"w\">        </span><span class=\"n\">mrs</span><span class=\"w\">     </span><span class=\"n\">x1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tpidr_el0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f3c</span>:       <span class=\"mi\">8</span><span class=\"n\">bfff9bd</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inst</span><span class=\"w\">   </span><span class=\"mh\">0x8bfff9bd</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">undefined</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f40</span>:       <span class=\"nc\">d503201f</span><span class=\"w\">        </span><span class=\"n\">nop</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which has an undefined instruction.</p>\n</blockquote>",
        "id": 243768322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624532144
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867540512\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>Before linking there is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"mi\">1730</span>:       <span class=\"mi\">90000000</span><span class=\"w\">        </span><span class=\"n\">adrp</span><span class=\"w\">    </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_ZN67_</span><span class=\"cp\">$LT$mini_core</span><span class=\"o\">..</span><span class=\"nb\">Option</span><span class=\"cp\">$LT$T$GT$$u20$as$u20$mini_core</span><span class=\"o\">..</span><span class=\"nb\">PartialEq</span><span class=\"cp\">$GT$</span><span class=\"mi\">2</span><span class=\"n\">ne17h6ea470a27df2424aE</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">1730</span>: <span class=\"nc\">R_AARCH64_TLSGD_ADR_PREL21</span><span class=\"w\">        </span><span class=\"n\">_ZN21mini_core_hello_world3TLS17hbf7bac7ea236bf4cE</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1734</span>:       <span class=\"mi\">91000000</span><span class=\"w\">        </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span>#<span class=\"mh\">0x0</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">1734</span>: <span class=\"nc\">R_AARCH64_TLSGD_ADD_LO12_NC</span><span class=\"w\">       </span><span class=\"n\">_ZN21mini_core_hello_world3TLS17hbf7bac7ea236bf4cE</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1738</span>:       <span class=\"mi\">94000000</span><span class=\"w\">        </span><span class=\"n\">bl</span><span class=\"w\">      </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">__tls_get_addr</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"mi\">1738</span>: <span class=\"nc\">R_AARCH64_CALL26</span><span class=\"w\">  </span><span class=\"n\">__tls_get_addr</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">173</span><span class=\"n\">c</span>:       <span class=\"nc\">d503201f</span><span class=\"w\">        </span><span class=\"n\">nop</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which seems correct. However after linking it turns into:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f34</span>:       <span class=\"mi\">580</span><span class=\"n\">b0520</span><span class=\"w\">        </span><span class=\"n\">ldr</span><span class=\"w\">     </span><span class=\"n\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"n\">fd8</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_GLOBAL_OFFSET_TABLE_</span><span class=\"o\">+</span><span class=\"mh\">0x28</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f38</span>:       <span class=\"nc\">d53bd041</span><span class=\"w\">        </span><span class=\"n\">mrs</span><span class=\"w\">     </span><span class=\"n\">x1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tpidr_el0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f3c</span>:       <span class=\"mi\">8</span><span class=\"n\">bfff9bd</span><span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inst</span><span class=\"w\">   </span><span class=\"mh\">0x8bfff9bd</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">undefined</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span><span class=\"n\">f40</span>:       <span class=\"nc\">d503201f</span><span class=\"w\">        </span><span class=\"n\">nop</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which has an undefined instruction.</p>\n<p>Edit: missed your above comment.</p>\n</blockquote>",
        "id": 243768426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624532210
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867546299\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>I've updated it now, we should be emitting exactly what gcc is doing now.</p>\n<p>By the way, can you tell me the steps to reproduce the test you are doing?</p>\n</blockquote>",
        "id": 243769129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624532718
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867551365\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>I am trying to run the test suite of cg_clif using <code>TARGET_TRIPLE=aarch64-unknown-linux-gnu ./test.sh</code> and the following patch:</p>\n<p><div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/Cargo.toml b/Cargo.toml</span>\n<span class=\"gh\">index ef68d7ee..f2bf9536 100644</span>\n<span class=\"gd\">--- a/Cargo.toml</span>\n<span class=\"gi\">+++ b/Cargo.toml</span>\n<span class=\"gu\">@@ -17,7 +17,7 @@ cranelift-jit = { git = \"https://github.com/bytecodealliance/wasmtime.git\", bran</span>\n cranelift-object = { git = \"https://github.com/bytecodealliance/wasmtime.git\", branch = \"main\" }\n target-lexicon = \"0.12.0\"\n gimli = { version = \"0.24.0\", default-features = false, features = [\"write\"]}\n<span class=\"gd\">-object = { version = \"0.25.0\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }</span>\n<span class=\"gi\">+object = { version = \"0.25.3\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }</span>\n\n ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg_clif_ranlib\" }\n indexmap = \"1.0.2\"\n<span class=\"gu\">@@ -25,13 +25,13 @@ libloading = { version = \"0.6.0\", optional = true }</span>\n smallvec = \"1.6.1\"\n\n # Uncomment to use local checkout of cranelift\n<span class=\"gd\">-#[patch.\"https://github.com/bytecodealliance/wasmtime.git\"]</span>\n<span class=\"gd\">-#cranelift-codegen = { path = \"../wasmtime/cranelift/codegen\" }</span>\n<span class=\"gd\">-#cranelift-frontend = { path = \"../wasmtime/cranelift/frontend\" }</span>\n<span class=\"gd\">-#cranelift-module = { path = \"../wasmtime/cranelift/module\" }</span>\n<span class=\"gd\">-#cranelift-native = { path = \"../wasmtime/cranelift/native\" }</span>\n<span class=\"gd\">-#cranelift-jit = { path = \"../wasmtime/cranelift/jit\" }</span>\n<span class=\"gd\">-#cranelift-object = { path = \"../wasmtime/cranelift/object\" }</span>\n<span class=\"gi\">+[patch.\"https://github.com/bytecodealliance/wasmtime.git\"]</span>\n<span class=\"gi\">+cranelift-codegen = { path = \"../wasmtime/cranelift/codegen\" }</span>\n<span class=\"gi\">+cranelift-frontend = { path = \"../wasmtime/cranelift/frontend\" }</span>\n<span class=\"gi\">+cranelift-module = { path = \"../wasmtime/cranelift/module\" }</span>\n<span class=\"gi\">+cranelift-native = { path = \"../wasmtime/cranelift/native\" }</span>\n<span class=\"gi\">+cranelift-jit = { path = \"../wasmtime/cranelift/jit\" }</span>\n<span class=\"gi\">+cranelift-object = { path = \"../wasmtime/cranelift/object\" }</span>\n\n #[patch.crates-io]\n #gimli = { path = \"../\" }\n<span class=\"gh\">diff --git a/example/mini_core_hello_world.rs b/example/mini_core_hello_world.rs</span>\n<span class=\"gh\">index 6570f2bf..3d2d0303 100644</span>\n<span class=\"gd\">--- a/example/mini_core_hello_world.rs</span>\n<span class=\"gi\">+++ b/example/mini_core_hello_world.rs</span>\n<span class=\"gu\">@@ -294,7 +294,7 @@ struct ExternTypeWrapper {</span>\n\n     #[cfg(all(not(jit), target_os = \"linux\"))]\n     unsafe {\n<span class=\"gd\">-        global_asm_test();</span>\n<span class=\"gi\">+        //global_asm_test();</span>\n     }\n\n     // Both statics have a reference that points to the same anonymous allocation.\n<span class=\"gu\">@@ -309,14 +309,14 @@ struct ExternTypeWrapper {</span>\n }\n\n #[cfg(all(not(jit), target_os = \"linux\"))]\n<span class=\"gd\">-global_asm! {</span>\n<span class=\"gi\">+/*global_asm! {</span>\n     \"\n     .global global_asm_test\n     global_asm_test:\n     // comment that would normally be removed by LLVM\n     ret\n     \"\n<span class=\"gd\">-}</span>\n<span class=\"gi\">+}*/</span>\n\n #[repr(C)]\n enum c_void {\n<span class=\"gh\">diff --git a/src/lib.rs b/src/lib.rs</span>\n<span class=\"gh\">index aed25a48..956113b2 100644</span>\n<span class=\"gd\">--- a/src/lib.rs</span>\n<span class=\"gi\">+++ b/src/lib.rs</span>\n<span class=\"gu\">@@ -289,7 +289,7 @@ fn build_isa(sess: &amp;Session, backend_config: &amp;BackendConfig) -&gt; Box&lt;dyn isa::Tar</span>\n                 cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n             // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n             // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`.\n<span class=\"gd\">-            builder.enable(\"nehalem\").unwrap();</span>\n<span class=\"gi\">+            //builder.enable(\"nehalem\").unwrap();</span>\n             builder\n         }\n     };\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 243769847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624533212
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867554843\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>mini_core_hello_world runs fine now!</p>\n</blockquote>",
        "id": 243770338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624533561
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867557714\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>libstd compiles fine too with a small patch to the build system to fix cross-compiling. (I recently rewrote it from shell scripts to rust) std_example doesn't compile yet. I think due to a <code>select.i128</code>.</p>\n</blockquote>",
        "id": 243770737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624533852
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867558836\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<blockquote>\n<p>mini_core_hello_world runs fine now!<br>\nThat's awesome!</p>\n</blockquote>\n<p>Although it would be nice if we had a more definitive test that would catch issues like this (Wrong relocations).<br>\ncc: @cfallin Any ideas on this?</p>\n<p>@bjorn3 I'm having some issues running cg_clif's test suite, is there anywhere I can ask for a bit more guidance, so we don't pollute this PR?<br>\n</p>\n</blockquote>",
        "id": 243770868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624533954
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867558836\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<blockquote>\n<p>mini_core_hello_world runs fine now!<br>\nThat's awesome!</p>\n</blockquote>\n<p>Although it would be nice if we had a more definitive test that would catch issues like this (Wrong relocations).<br>\ncc: @cfallin Any ideas on this?</p>\n<p>@bjorn3 I'm having some issues running cg_clif's test suite, is there anywhere I can ask for a bit more guidance, so we don't pollute this PR?</p>\n<blockquote>\n<p>I think due to a select.i128.</p>\n</blockquote>\n<p>I guess that's next on the i128 impl list<br>\n</p>\n</blockquote>",
        "id": 243770962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624533997
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867558836\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<blockquote>\n<p>mini_core_hello_world runs fine now!</p>\n</blockquote>\n<p>That's awesome!</p>\n<p>Although it would be nice if we had a more definitive test that would catch issues like this (Wrong relocations).<br>\ncc: @cfallin Any ideas on this?</p>\n<p>@bjorn3 I'm having some issues running cg_clif's test suite, is there anywhere I can ask for a bit more guidance, so we don't pollute this PR?</p>\n<blockquote>\n<p>I think due to a select.i128.</p>\n</blockquote>\n<p>I guess that's next on the i128 impl list<br>\n</p>\n</blockquote>",
        "id": 243771012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624534031
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867559782\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>When commenting out all i128 tests in std_example, it runs fine too.</p>\n<blockquote>\n<p>@bjorn3 I'm having some issues running cg_clif's test suite, is there anywhere I can ask for a bit more guidance, so we don't pollute this PR?</p>\n</blockquote>\n<p>Maybe zulip? You can PM me on either the rust-lang or bytecodealliance zulip.</p>\n</blockquote>",
        "id": 243771023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624534044
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867858249\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<blockquote>\n<p>Although it would be nice if we had a more definitive test that would catch issues like this (Wrong relocations).<br>\ncc: @cfallin Any ideas on this?</p>\n</blockquote>\n<p>Yeah, I agree this would be nice; we don't really have a good answer for this right now. Probably the best answer would be an end-to-end test of some sort that uses the relocation and executes on the target platform. In the absence of that, we could at least print relocations in the VCode output and check them (as a golden output) in compile filetests. I'd be happy to review something for that if you would like.</p>\n</blockquote>",
        "id": 243826217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624558962
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026#issuecomment-867873470\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3026\">issue #3026</a>:</p>\n<blockquote>\n<p>Oops, it was fixed, but i forgot to mark it as resolved. Thanks</p>\n<blockquote>\n<p>Probably the best answer would be an end-to-end test of some sort that uses the relocation and executes on the target platform. In the absence of that, we could at least print relocations in the VCode output and check them (as a golden output) in compile filetests. I'd be happy to review something for that if you would like.</p>\n</blockquote>\n<p>Hmm, its not something i want to pick up right now, but let me open an issue with this, and maybe someone does<br>\n</p>\n</blockquote>",
        "id": 243829852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624560526
    }
]