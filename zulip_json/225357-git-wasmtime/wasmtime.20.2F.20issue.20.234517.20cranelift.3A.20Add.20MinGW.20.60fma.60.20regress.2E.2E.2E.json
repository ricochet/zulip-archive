[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517#issuecomment-1194108496\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517\">issue #4517</a>:</p>\n<blockquote>\n<p>Since this is just for the interpreter one possibility would be to use <a href=\"https://docs.rs/libm/latest/libm/fn.fma.html\"><code>libm::fma</code></a> which is a port of musl's implementation to Rust which should provide stability across platforms perhaps.</p>\n</blockquote>",
        "id": 290764136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658758593
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517#issuecomment-1195138197\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517\">issue #4517</a>:</p>\n<blockquote>\n<p>libm's <code>fma</code> seems a lot better than MinGW's and it think it's implementation is correct.</p>\n<p>However, CI's still failing and I can't quite pin down why. <code>libm</code> disagrees with the native <code>fmadd</code> instruction in <code>aarch64</code> by exactly 1 bit, in the failing input. This seems like a rounding issue somewhere, <code>libm</code> has the LSB as 1 and <code>fmadd</code> has it as 0.</p>\n<p>I've checked <code>fegetround</code> and we are running with the default rounding mode.</p>\n<p>The other weird issue is that when I try to extract the failing input into a separate rust program and execute there, everything works and I get the correct result that agrees with the native instructions.</p>\n<p>I'll keep looking into this, but if anyone has any ideas, let me know.</p>\n</blockquote>",
        "id": 290859640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658822238
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517#issuecomment-1195138197\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517\">issue #4517</a>:</p>\n<blockquote>\n<p>libm's <code>fma</code> seems a lot better than MinGW's we are now only off by 1 LSB.</p>\n<p>I've filed <a href=\"https://github.com/rust-lang/libm/issues/263\">https://github.com/rust-lang/libm/issues/263</a> to follow up with libm.</p>\n</blockquote>",
        "id": 290861417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658823472
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517#issuecomment-1198894456\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517\">issue #4517</a>:</p>\n<blockquote>\n<p>@alexcrichton since there is no way to know how long this is going to take with libm. What do you think about disabling the interpreter on the <code>fma</code> tests temporarily?</p>\n<p>An alternative could be to have a reduced set of inputs that does not fail in a separate file.</p>\n<p>That way we can resolve this now and move ahead with the CI upgrades.</p>\n</blockquote>",
        "id": 291284976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659072501
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517#issuecomment-1199347272\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4517\">issue #4517</a>:</p>\n<blockquote>\n<p>Sounds reasonable to me, thanks for helping to push on this @afonso360! </p>\n</blockquote>",
        "id": 291331282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659103773
    }
]