[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a> from <code>simd-const</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change enables the <code>simd_const.wast</code> spec test and adds encodings for integer vectors and new <code>Inst::[move|load|store]</code> utility functions.</p>\n<p>Before merging:</p>\n<ul>\n<li>[ ] this should be rebased on @jlb6740's integer arithmetic changes since <code>simd_const.wast</code> contains a single use each of <code>i64x2.add</code> and <code>i32x4.add</code></li>\n<li>[ ] I would like feedback on what others think about the <code>Inst::[move|load|store]</code> utility functions: are they the right level of abstraction? Is the de-duplication of code worth the overhead? Should we remove <code>Inst::xmm_mov</code> (and/or others)?</li>\n</ul>\n</blockquote>",
        "id": 205964296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596577192
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a>.</p>",
        "id": 205964306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596577198
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a>.</p>",
        "id": 205964310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596577200
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a>, <a href=\"https://github.com/julian-seward1\">julian-seward1</a> and <a href=\"https://github.com/jlb6740\">jlb6740</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a>.</p>",
        "id": 205964357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596577207
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-461207875\">PR Review</a>.</p>",
        "id": 205967028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596578895
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r465357635\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Looking around more, I guess this should just be merged in with <code>gen_move</code>?</p>\n</blockquote>",
        "id": 205967030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596578895
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-461214419\">PR Review</a>.</p>",
        "id": 205978063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596588657
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-461214419\">PR Review</a>.</p>",
        "id": 205978064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596588657
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r465361024\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'd prefer not to have function names overlapping with reserved words -- though it's technically possible with this \"raw identifier\" syntax, it's quite obscure (IMHO at least -- I had to look it up) and potentially causes confusion for no good reason. Perhaps just <code>gen_move</code>?</p>\n</blockquote>",
        "id": 205978066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596588657
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r465408473\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I like having helpers on <code>Inst</code> here. However, I think the extension should be an optional behavior; it's easy to imagine reaching for <code>Inst::load()</code> in the future for some general use-case and getting an extension op when it wasn't really needed (e.g. most narrow arithmetic doesn't care about high bits).</p>\n<p>Could we define an enum for extension mode, something like the aarch64 backend's <code>NarrowValueMode</code>, to use here?</p>\n</blockquote>",
        "id": 205978067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596588657
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r465408718\">PR Review Comment</a>:</p>\n<blockquote>\n<p>A doc comment would be helpful here -- from the name it's not immediately clear what this does (movable to/from a scalar register? movable within a scalar register? ...).</p>\n</blockquote>",
        "id": 205978068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596588657
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-461876968\">PR Review</a>.</p>",
        "id": 206052447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596648548
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r465888575\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, yes, that would actually be the best solution, I think.</p>\n</blockquote>",
        "id": 206052449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596648548
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-461889352\">PR Review</a>.</p>",
        "id": 206054902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596649601
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r465898420\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, I will move this into <code>gen_move</code>.</p>\n</blockquote>",
        "id": 206054903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596649601
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-463476049\">PR Review</a>.</p>",
        "id": 206284190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596820646
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r467168612\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Got rid of this and used a comparison on <code>RegClass</code> instead.</p>\n</blockquote>",
        "id": 206284191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596820647
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a> from <code>simd-const</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change enables the <code>simd_const.wast</code> spec test and adds encodings for integer vectors and new <code>Inst::[move|load|store]</code> utility functions.</p>\n<p>Before merging:</p>\n<ul>\n<li>[ ] this should be rebased on @jlb6740's integer arithmetic changes since <code>simd_const.wast</code> contains a single use each of <code>i64x2.add</code> and <code>i32x4.add</code></li>\n<li>[ ] I would like feedback on what others think about the <code>Inst::[move|load|store]</code> utility functions: are they the right level of abstraction? Is the de-duplication of code worth the overhead? Should we remove <code>Inst::xmm_mov</code> (and/or others)?</li>\n</ul>\n</blockquote>",
        "id": 206287698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596822300
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-463652639\">PR Review</a>.</p>",
        "id": 206312248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596836110
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#discussion_r467284185\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I added an <code>ExtKind</code> enum; with that in place we should now be able to remove <code>xmm_mov</code> and simplify the lowering considerably in a future PR.</p>\n</blockquote>",
        "id": 206312250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596836110
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a>, <a href=\"https://github.com/julian-seward1\">julian-seward1</a> and <a href=\"https://github.com/jlb6740\">jlb6740</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a>.</p>",
        "id": 206312268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596836129
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a> from <code>simd-const</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change enables the <code>simd_const.wast</code> spec test and adds encodings for integer vectors and new <code>Inst::[move|load|store]</code> utility functions.</p>\n<p>Before merging:</p>\n<ul>\n<li>[ ] this should be rebased on @jlb6740's integer arithmetic changes since <code>simd_const.wast</code> contains a single use each of <code>i64x2.add</code> and <code>i32x4.add</code></li>\n<li>[x] I would like feedback on what others think about the <code>Inst::[move|load|store]</code> utility functions: are they the right level of abstraction? Is the de-duplication of code worth the overhead? Should we remove <code>Inst::xmm_mov</code> (and/or others)?</li>\n</ul>\n</blockquote>",
        "id": 206312270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596836131
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a> from <code>simd-const</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change enables the <code>simd_const.wast</code> spec test and adds encodings for integer vectors and new <code>Inst::[move|load|store]</code> utility functions.</p>\n<p>Before merging:</p>\n<ul>\n<li>[x] this should be rebased on @jlb6740's integer arithmetic changes since <code>simd_const.wast</code> contains a single use each of <code>i64x2.add</code> and <code>i32x4.add</code></li>\n<li>[x] I would like feedback on what others think about the <code>Inst::[move|load|store]</code> utility functions: are they the right level of abstraction? Is the de-duplication of code worth the overhead? Should we remove <code>Inst::xmm_mov</code> (and/or others)?</li>\n</ul>\n</blockquote>",
        "id": 206312273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596836134
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a> as ready for review.</p>",
        "id": 206474973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597073544
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095#pullrequestreview-471649046\">PR Review</a>.</p>",
        "id": 207525606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597932329
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a> from <code>simd-const</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change enables the <code>simd_const.wast</code> spec test and adds encodings for integer vectors and new <code>Inst::[move|load|store]</code> utility functions.</p>\n<p>Before merging:</p>\n<ul>\n<li>[x] this should be rebased on @jlb6740's integer arithmetic changes since <code>simd_const.wast</code> contains a single use each of <code>i64x2.add</code> and <code>i32x4.add</code></li>\n<li>[x] I would like feedback on what others think about the <code>Inst::[move|load|store]</code> utility functions: are they the right level of abstraction? Is the de-duplication of code worth the overhead? Should we remove <code>Inst::xmm_mov</code> (and/or others)?</li>\n</ul>\n</blockquote>",
        "id": 207561210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597950198
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2095\">PR #2095</a>.</p>",
        "id": 207565200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597952244
    }
]