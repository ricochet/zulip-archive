[
    {
        "content": "<p>sunfishcode opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3786\">PR #3786</a> from <code>sunfishcode/fix-compilation-on-nightly</code> to <code>main</code>:</p>\n<blockquote>\n<p>Other than doc updates, this just contains <a href=\"https://github.com/bytecodealliance/cap-std/issues/235\">bytecodealliance/cap-std#235</a>,<br>\na fix for compilation errors on Rust nightly that look like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0308</span><span class=\"p\">]</span>: <span class=\"nc\">mismatched</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">cap</span><span class=\"o\">-</span><span class=\"n\">primitives</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">fs</span><span class=\"o\">/</span><span class=\"n\">via_parent</span><span class=\"o\">/</span><span class=\"n\">rename</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">22</span>:<span class=\"mi\">58</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">old_dir</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">old_basename</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open_parent</span><span class=\"p\">(</span><span class=\"n\">old_start</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">old_path</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                          </span><span class=\"o\">^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"err\">`</span><span class=\"n\">Path</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">opaque</span><span class=\"w\"> </span><span class=\"k\">type</span>\n   <span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">  </span>::: <span class=\"nc\">cap</span><span class=\"o\">-</span><span class=\"n\">primitives</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">rustix</span><span class=\"o\">/</span><span class=\"n\">fs</span><span class=\"o\">/</span><span class=\"n\">dir_utils</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">67</span>:<span class=\"mi\">48</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">67</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">crate</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">strip_dir_suffix</span><span class=\"p\">(</span><span class=\"n\">path</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Path</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">impl</span><span class=\"w\"> </span><span class=\"n\">Deref</span><span class=\"o\">&lt;</span><span class=\"n\">Target</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Path</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">_</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                </span><span class=\"o\">------------------------------</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">opaque</span><span class=\"w\"> </span><span class=\"k\">type</span>\n   <span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>:   <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"err\">`</span><span class=\"n\">Path</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">opaque</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Deref</span><span class=\"o\">&lt;</span><span class=\"n\">Target</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Path</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 271365247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644450507
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3786#pullrequestreview-878184805\">PR review</a>.</p>",
        "id": 271365589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644450728
    },
    {
        "content": "<p>sunfishcode merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3786\">PR #3786</a>.</p>",
        "id": 271368994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644452526
    }
]