[
    {
        "content": "<p><strong>sunshowers</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483167103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983399
    },
    {
        "content": "<p><strong>sunshowers</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483167105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983399
    },
    {
        "content": "<p>sunshowers opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a> from <code>sunshowers:host-aligned</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>As part of the work to allow mmaps to be backed by other implementations (#9544), I realized that we didn't have any way to track whether a particular usize is host-page-aligned at compile time.</p>\n<p>Add a <code>HostAlignedByteCount</code> which tracks that a particular usize is aligned to the host page size. This also does not expose safe unchecked arithmetic operations, to ensure that overflows always error out.</p>\n<p>With <code>HostAlignedByteCount</code>, a lot of runtime checks can go away thanks to the type-level assertion.</p>\n<p>In the interest of keeping the diff relatively small, I haven't converted everything over yet. More code can be converted over as we go along.</p>\n</blockquote>",
        "id": 483167106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983399
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2444159991\">PR review</a>.</p>",
        "id": 483167258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983451
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1847553683\">PR review comment</a>:</p>\n<blockquote>\n<p>This code and the similar section below would be good to convert over, but I decided to do this in a followup.</p>\n</blockquote>",
        "id": 483167259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983451
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2444161667\">PR review</a>.</p>",
        "id": 483167518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983566
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1847554997\">PR review comment</a>:</p>\n<blockquote>\n<p>I first named this <code>AlignedByteCount</code>, but then realized that the VM page size might not be the same as the host page size, so named it <code>HostAlignedByteCount</code> instead. Happy to rename this to something else if it makes sense.</p>\n</blockquote>",
        "id": 483167520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983566
    },
    {
        "content": "<p>sunshowers updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483168234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731983922
    },
    {
        "content": "<p>sunshowers updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483168472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731984060
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2444174817\">PR review</a>.</p>",
        "id": 483169155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731984475
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1847564546\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this print the size in hex or as a decimal?</p>\n</blockquote>",
        "id": 483169156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731984475
    },
    {
        "content": "<p>sunshowers edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>:</p>\n<blockquote>\n<p>As part of the work to allow mmaps to be backed by other implementations (#9544), I realized that we didn't have any way to track whether a particular usize is host-page-aligned at compile time.</p>\n<p>Add a <code>HostAlignedByteCount</code> which tracks that a particular usize is aligned to the host page size. This also does not expose safe unchecked arithmetic operations, to ensure that overflows are always handled.</p>\n<p>With <code>HostAlignedByteCount</code>, a lot of runtime checks can go away thanks to the type-level assertion.</p>\n<p>In the interest of keeping the diff relatively small, I haven't converted everything over yet. More code can be converted over as we go along.</p>\n</blockquote>",
        "id": 483169320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731984551
    },
    {
        "content": "<p>sunshowers <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#issuecomment-2484843263\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>:</p>\n<blockquote>\n<p>I started working on a followup as well: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/03efe42fb4d8fdd760d945ce6ceb95b8ca338974\">https://github.com/bytecodealliance/wasmtime/commit/03efe42fb4d8fdd760d945ce6ceb95b8ca338974</a></p>\n<p>Unfortunately GitHub's review flow does not let you manage stacked PRs unless you have push access to the destination repo, so I'll have to put these up one at a time. Sigh :(</p>\n</blockquote>",
        "id": 483193618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731999452
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2445939968\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this!</p>\n</blockquote>",
        "id": 483299848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732032593
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1848647729\">PR review comment</a>:</p>\n<blockquote>\n<p>For here I think it's probably ok to discard the precise values that were being operated on as otherwise that makes the errors here pretty large for a low-level type such as this.</p>\n</blockquote>",
        "id": 483299851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732032593
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1848646746\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind putting this type/impls/errors/etc in a dedicated submodule of the <code>vm</code> module?</p>\n</blockquote>",
        "id": 483299852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732032593
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1848646023\">PR review comment</a>:</p>\n<blockquote>\n<p>Same seems reasonable to me <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 483299853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732032593
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1848648534\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's go with hex perhaps to clearly show that the low bits are all zero</p>\n</blockquote>",
        "id": 483299854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732032593
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2446294239\">PR review</a>.</p>",
        "id": 483329405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732041321
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1848860769\">PR review comment</a>:</p>\n<blockquote>\n<p>Reviewing some other code elsewhere, I think that the <code>from_file</code> constructor may cause problems here because file lengths aren't always page-aligned. </p>\n<p>To help catch this mind adding a <code>debug_assert!</code> to <code>new_unchecked</code>? That I think should make the test suite panic</p>\n</blockquote>",
        "id": 483329407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732041322
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#issuecomment-2486515866\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>:</p>\n<blockquote>\n<p>As a heads up I'm adding <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9614\">https://github.com/bytecodealliance/wasmtime/pull/9614</a> to the merge queue which is going to have a number of conflicts with this. It should (hopefully) be just a few <code>#[cfg(feature = \"signals-based-traps\")]</code> in a few places but if anything is overly difficult or onerous lemme know and I can help out</p>\n</blockquote>",
        "id": 483334073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732042981
    },
    {
        "content": "<p>sunshowers updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483577346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732139388
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2449770038\">PR review</a>.</p>",
        "id": 483577454,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732139427
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1851026661\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 483577455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732139428
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2449771660\">PR review</a>.</p>",
        "id": 483577589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732139493
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1851027656\">PR review comment</a>:</p>\n<blockquote>\n<p>This ended up becoming #9639.</p>\n</blockquote>",
        "id": 483577590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732139493
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1851034096\">PR review comment</a>:</p>\n<blockquote>\n<p>Hmm good point, done.</p>\n</blockquote>",
        "id": 483578419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732139890
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2449781489\">PR review</a>.</p>",
        "id": 483578420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732139890
    },
    {
        "content": "<p>sunshowers updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483584543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732142827
    },
    {
        "content": "<p>sunshowers <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#issuecomment-2489692243\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>:</p>\n<blockquote>\n<p>(Apologies for the force push -- had to do it as part of the rebase. GH makes me cry)</p>\n</blockquote>",
        "id": 483584818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732142973
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2449995532\">PR review</a>:</p>\n<blockquote>\n<p>Thanks again for this!</p>\n</blockquote>",
        "id": 483596640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732149739
    },
    {
        "content": "<p>sunshowers updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483614828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732162743
    },
    {
        "content": "<p>sunshowers <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#issuecomment-2490036652\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>:</p>\n<blockquote>\n<p>All right, think I fixed the Miri issue.</p>\n</blockquote>",
        "id": 483614858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732162769
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2451949909\">PR review</a>.</p>",
        "id": 483733680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732205135
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1852422279\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this may be the source of the bug, albeit it's a bit indirect. Previously the <code>&gt;</code> condition is now morally becoming <code>&gt;=</code> since <code>new_accessible == self.accessible()</code> didn't run this block before but it's now running this block with <code>difference == 0</code>. I think then it may be the case that mprotect for 0 bytes is succeeding on unix but failing on Windows.</p>\n<p>On Linux I see <code>mprotect(0x740d36001000, 0, PROT_READ|PROT_WRITE) = 0</code> in strace with this patch when running the failing spec test and while I haven't executed this on Windows this is what I would suspect is going on.</p>\n<p>Another option is to update the <code>Mmap</code> type to skip <code>make_accessible</code> when the byte size is zero which I think would also be reasonable.</p>\n</blockquote>",
        "id": 483733681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732205135
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2452976969\">PR review</a>.</p>",
        "id": 483805033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732230226
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1853062478\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh that's terrifying -- I'm going to fix this (probably by making <code>make_accessible</code> ignore zero-sized regions) and go through this code again to make sure I didn't miss any other sign changes. Thanks for diagnosing this!</p>\n</blockquote>",
        "id": 483805034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732230226
    },
    {
        "content": "<p>sunshowers updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483811176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732233615
    },
    {
        "content": "<p>sunshowers created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1853103224\">PR review comment</a>:</p>\n<blockquote>\n<p>Made <code>make_accessible</code> a no-op on zero-length allocations, as well as the other mprotect calls (<code>make_executable</code> and <code>make_readonly</code>). They also had this as a lurking bug because they had assertions that <code>range.start &lt;= range.end</code>, not <code>range.start &lt; range.end</code>.</p>\n<p>I've also added tests for zero-length calls, and re-reviewed everything -- didn't see any other changes.</p>\n</blockquote>",
        "id": 483811809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732233890
    },
    {
        "content": "<p>sunshowers submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#pullrequestreview-2453035773\">PR review</a>.</p>",
        "id": 483811810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732233890
    },
    {
        "content": "<p>sunshowers edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620#discussion_r1853103224\">PR review comment</a>.</p>",
        "id": 483811846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732233912
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9620\">PR #9620</a>.</p>",
        "id": 483815292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732235949
    }
]