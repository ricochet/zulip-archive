[
    {
        "content": "<p>AlexEne edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2637\">PR #2637</a> from <code>main</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[X] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[X] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[X] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n<p>I've added the possibility to allow missing imports in modules. This has been discussed <a href=\"#narrow/stream/206238-general/topic/Dealing.20with.20missing.20imports\">here</a>.</p>\n<p>To re-iterate the need for this, there are use-cases where not all host programs VMs have been updated to the latest version that exports all functions required by modules that execute on these hosts. </p>\n<p>In such instances it's more convenient to dynamically check a feature flag and call the native methods only if they exist vs emitting different binaries for each VM version.</p>\n<p>For example, this allows your WASM program to use this type of pattern:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// call specific function to check for functionality before calling a method that might not exist</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">vm_host_has_feature</span><span class=\"p\">(</span><span class=\"s\">\"feature_name\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">call_function_from_vm_because_it_should_exist_here</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">fallback_bhv</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If the you call a missing import it will cause the VM issue a trap.</p>\n<p>Once <a href=\"https://github.com/WebAssembly/WASI/blob/main/design/optional-imports.md\">optional imports</a> are standard and implemented, the escape hatch can be removed, in the meantime it's a really useful feature to have.</p>\n<p>Maybe @tschneidereit can review this since we discussed it on zulip?<br>\n</p>\n</blockquote>",
        "id": 225161110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612446564
    },
    {
        "content": "<p>AlexEne closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2637\">PR #2637</a>.</p>",
        "id": 230028453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615555932
    }
]