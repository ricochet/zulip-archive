[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985\">PR #2985</a> from <code>aarch64-i128-load-store</code> to <code>main</code>:</p>\n<blockquote>\n<p>Hey, this implements loading and storing i128 values in the aarch64 backend</p>\n</blockquote>",
        "id": 242658871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623704705
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#pullrequestreview-685441008\">PR review</a>.</p>",
        "id": 242911881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623863448
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#pullrequestreview-685441008\">PR review</a>.</p>",
        "id": 242911882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623863448
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#discussion_r652886338\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we add some test cases (compile-tests probably) that do basic <code>load.i128</code> / <code>store.i128</code> as well? At least right now, <code>stack_store</code> / <code>stack_load</code> expand to use these under the hood, but it's conceivable (especially if we try to address the codegen improvement ideas you suggest, i.e. treat sp-relative addresses differently) that this might not be true later.</p>\n</blockquote>",
        "id": 242911883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623863449
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985\">PR #2985</a> from <code>aarch64-i128-load-store</code> to <code>main</code>.</p>",
        "id": 243029263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623941426
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#pullrequestreview-686419870\">PR review</a>.</p>",
        "id": 243029961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623941676
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#discussion_r653644381\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm glad I actually revisited this, because the previous code had a bug that only showed up with <code>load.i128</code>!</p>\n<p>I've added the separate <code>load.i128</code>/<code>store.i128</code> run tests, but i'm using <code>stack_addr</code> to get a valid address. I think this may be a problem in the future, where we may just end up optimizing that pattern(<code>stack_addr</code>+<code>load</code>) into a <code>stack_load</code>.</p>\n<p>Do we have a better way of getting a R+W address?</p>\n</blockquote>",
        "id": 243029963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623941677
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#discussion_r653644381\">PR review comment</a>.</p>",
        "id": 243030047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623941704
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#pullrequestreview-686433402\">PR review</a>.</p>",
        "id": 243031799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623942326
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#pullrequestreview-686433402\">PR review</a>.</p>",
        "id": 243031800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623942326
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985#discussion_r653654274\">PR review comment</a>:</p>\n<blockquote>\n<p>Great, thanks for adding this (and I'm glad it found an issue)!</p>\n<p>I think this is fine -- there isn't, afaik, a way to allocate some other memory to read/write in a run-test (there's no runtime to call to dynamically allocate, for instance). It's possible we might try to optimize <code>stack_addr</code> + <code>load</code>/<code>store</code> in the future (to use <code>sp</code> directly) but if we do that, we'll see test failures on these compile tests and then work out another solution at that point. Compile-test-only coverage is probably fine at that point, IMHO.</p>\n</blockquote>",
        "id": 243031801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623942326
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2985\">PR #2985</a>.</p>",
        "id": 243034897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623943396
    }
]