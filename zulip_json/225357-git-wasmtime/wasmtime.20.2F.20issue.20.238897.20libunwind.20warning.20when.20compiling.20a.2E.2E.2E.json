[
    {
        "content": "<p><a href=\"https://github.com/pimeys\">pimeys</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">Issue #8897</a>.</p>",
        "id": 448855409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720014614
    },
    {
        "content": "<p>pimeys opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Load _any_ wasm component (wasip2) with wasmtime 21.0.1, if you compile the rust against musl, a warning is printed to the terminal:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">libunwind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">__unw_add_dynamic_fde</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">bad</span><span class=\"w\"> </span><span class=\"n\">fde</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">FDE</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">really</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">CIE</span>\n</code></pre></div>\n<p>The component and the whole system works correctly, but the log is confusing and there's no way to tell if something is actually broken.</p>\n<h3>Expected Results</h3>\n<p>It should work as with builds against glibc, or builds on macos with no libunwind warning printed to the terminal.</p>\n<h3>Actual Results</h3>\n<p>I can't seem to find anything being broken really...</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 21.0.1</p>\n<p>Operating system: nixos linux unstable</p>\n<p>Architecture: x86_64-unknown-linux-musl for the host and wasm32-wasip1 for the guest.</p>\n<h3>Extra Info</h3>\n<p>I found issues from the past, such as</p>\n<p><a href=\"https://github.com/wasmerio/wasmer/issues/2150\">https://github.com/wasmerio/wasmer/issues/2150</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/1904\">https://github.com/bytecodealliance/wasmtime/issues/1904</a></p>\n<p>But nothing more recent...<br>\n</p>\n</blockquote>",
        "id": 448855418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720014616
    },
    {
        "content": "<p>pimeys edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Load _any_ wasm component (wasip2) with wasmtime 21.0.1, if you compile the rust host against musl, a warning is printed to the terminal:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">libunwind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">__unw_add_dynamic_fde</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">bad</span><span class=\"w\"> </span><span class=\"n\">fde</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">FDE</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">really</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">CIE</span>\n</code></pre></div>\n<p>The component and the whole system works correctly, but the log is confusing and there's no way to tell if something is actually broken.</p>\n<h3>Expected Results</h3>\n<p>It should work as with builds against glibc, or builds on macos with no libunwind warning printed to the terminal.</p>\n<h3>Actual Results</h3>\n<p>I can't seem to find anything being broken really...</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 21.0.1</p>\n<p>Operating system: nixos linux unstable</p>\n<p>Architecture: x86_64-unknown-linux-musl for the host and wasm32-wasip1 for the guest.</p>\n<h3>Extra Info</h3>\n<p>I found issues from the past, such as</p>\n<p><a href=\"https://github.com/wasmerio/wasmer/issues/2150\">https://github.com/wasmerio/wasmer/issues/2150</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/1904\">https://github.com/bytecodealliance/wasmtime/issues/1904</a></p>\n<p>But nothing more recent...<br>\n</p>\n</blockquote>",
        "id": 448858032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720015206
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2206797458\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>Seems like a regression of #1904 and #1914.</p>\n<p>FWIW, we do not rely on the system's libunwind for correctness, we only emit <code>.eh_frame</code> and call <code>__register_frame</code> for the benefit of tools like profilers. You can also turn this off via <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.native_unwind_info\">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.native_unwind_info</a></p>\n<p>IIRC, different libc implementations have different signatures for <code>__register_frame</code>, and this might be what we are running into here. If so, that isn't really something we can fix...</p>\n</blockquote>",
        "id": 448903308,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720025849
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2206797968\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<blockquote>\n<p>IIRC, different libc implementations have different signatures for <code>__register_frame</code>, and this might be what we are running into here. If so, that isn't really something we can fix...</p>\n</blockquote>\n<p>Context:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/58b4d093fa03e112533fd3dd96bd68792f9e13a4/crates/wasmtime/src/runtime/vm/sys/unix/unwind.rs#L19-L34\">https://github.com/bytecodealliance/wasmtime/blob/58b4d093fa03e112533fd3dd96bd68792f9e13a4/crates/wasmtime/src/runtime/vm/sys/unix/unwind.rs#L19-L34</a></p>\n</blockquote>",
        "id": 448903350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720025871
    },
    {
        "content": "<p>pimeys <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2207027008\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>Is there any way to hide this message or will it break any functionality?</p>\n</blockquote>",
        "id": 448931304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720034478
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2207090195\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>I believe it is the libunwind implementation printing the message, not Wasmtime.</p>\n<p>You can turn off Wasmtime's generation of unwind info via <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.native_unwind_info\">https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.native_unwind_info</a> which should make it so that the message stops printing.</p>\n</blockquote>",
        "id": 448936114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720036101
    },
    {
        "content": "<p>pimeys <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2208409685\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>Yeah, this solved it for us. I don't really know should I close this issue or not. It's kind of still an issue if wanting to use the native unwind info, but also wanting to target musl.</p>\n</blockquote>",
        "id": 449033116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720081852
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2214124185\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>This cropping up again is a consequence of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8028\">https://github.com/bytecodealliance/wasmtime/pull/8028</a> and how <code>dlsym</code> looks like it always returns NULL in a static build. This means that if you build a static binary, which I believe you're doing here, then it'll always think it's using libgcc which is incorrect.</p>\n<p>So effectively this boils down to the mechanism used to detect libgcc-vs-libunwind. Another possible option is to use weak symbols but that's not possible in stable Rust so would require some C trickery to do that. I don't know of other options myself.</p>\n</blockquote>",
        "id": 449874010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720446415
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2214136513\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>You can use weak symbols from inline asm, right? Would require a separate implementation for each architecture though.</p>\n</blockquote>",
        "id": 449875042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720446696
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2214251874\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>Oh? I had no idea! If that works that might be a reasonable way to go here</p>\n</blockquote>",
        "id": 449886303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720449296
    },
    {
        "content": "<p>kate-goldenring <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897#issuecomment-2418108802\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<p>We are encountering this in Spin with Wasmtime v25.0.0: <a href=\"https://github.com/fermyon/spin/issues/2889\">https://github.com/fermyon/spin/issues/2889</a></p>\n</blockquote>",
        "id": 477315946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729119608
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8897\">issue #8897</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Load _any_ wasm component (wasip2) with wasmtime 21.0.1, if you compile the rust host against musl, a warning is printed to the terminal:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">libunwind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">__unw_add_dynamic_fde</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">bad</span><span class=\"w\"> </span><span class=\"n\">fde</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">FDE</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">really</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">CIE</span>\n</code></pre></div>\n<p>The component and the whole system works correctly, but the log is confusing and there's no way to tell if something is actually broken.</p>\n<h3>Expected Results</h3>\n<p>It should work as with builds against glibc, or builds on macos with no libunwind warning printed to the terminal.</p>\n<h3>Actual Results</h3>\n<p>I can't seem to find anything being broken really...</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 21.0.1</p>\n<p>Operating system: nixos linux unstable</p>\n<p>Architecture: x86_64-unknown-linux-musl for the host and wasm32-wasip1 for the guest.</p>\n<h3>Extra Info</h3>\n<p>I found issues from the past, such as</p>\n<p><a href=\"https://github.com/wasmerio/wasmer/issues/2150\">https://github.com/wasmerio/wasmer/issues/2150</a><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/1904\">https://github.com/bytecodealliance/wasmtime/issues/1904</a></p>\n<p>But nothing more recent...<br>\n</p>\n</blockquote>",
        "id": 478328206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729615774
    }
]