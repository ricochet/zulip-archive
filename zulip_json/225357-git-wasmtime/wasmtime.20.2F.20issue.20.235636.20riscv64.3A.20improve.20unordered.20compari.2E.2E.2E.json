[
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5636#issuecomment-1404450543\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5636\">issue #5636</a>:</p>\n<blockquote>\n<blockquote>\n<p>Very nice! It wasn't obvious to me, until I went and stared at the definition of <code>FloatCC</code> in <code>cranelift/codegen/src/ir/condcodes.rs</code>, that you can always eliminate the \"UnorderedOr\" conditions by inverting the condition code. I can't think of a case where this could make the generated code worse, and clearly it makes it substantially better in some cases, at least on this target.</p>\n</blockquote>\n<p>I only noticed this because of how bad the <code>fcmp</code> test on riscv64 got when I removed <code>brz</code> <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n<blockquote>\n<p>I wonder if we'll want to write any generic egraph optimization rules based on this observation...</p>\n</blockquote>\n<p>I think that's worth investigating, though looking through the lowerings for <code>fcmp</code> on our other backends, none are as expensive as riscv64 when there are unordered comparisons involved.</p>\n</blockquote>",
        "id": 323615481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674696489
    }
]