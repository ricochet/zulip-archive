[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539\">issue #3539</a>:</p>\n<blockquote>\n<p>Given this input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">u64</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I get (running <code>islec</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">islec</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.08</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">acrichto</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">islec</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>:\n  <span class=\"err\">×</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">error</span>: <span class=\"nc\">Cannot</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">classify_imm</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"o\">-</span><span class=\"n\">hand</span><span class=\"w\"> </span><span class=\"n\">side</span><span class=\"w\"> </span><span class=\"n\">pattern</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">╭─</span><span class=\"p\">[</span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span>:<span class=\"mi\">3</span>:<span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">·</span><span class=\"w\">            </span><span class=\"err\">┬</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">·</span><span class=\"w\">            </span><span class=\"err\">╰──</span><span class=\"w\"> </span><span class=\"n\">Cannot</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">classify_imm</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"o\">-</span><span class=\"n\">hand</span><span class=\"w\"> </span><span class=\"n\">side</span><span class=\"w\"> </span><span class=\"n\">pattern</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">╰────</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If, however, I change the input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">u64</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the compile succeeds</p>\n</blockquote>",
        "id": 261718015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637102421
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539\">issue #3539</a>:</p>\n<blockquote>\n<p>Given this input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">u64</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I get (running <code>islec</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">islec</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.08</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">acrichto</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">islec</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>:\n  <span class=\"err\">×</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">error</span>: <span class=\"nc\">Cannot</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">classify_imm</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"o\">-</span><span class=\"n\">hand</span><span class=\"w\"> </span><span class=\"n\">side</span><span class=\"w\"> </span><span class=\"n\">pattern</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">╭─</span><span class=\"p\">[</span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span>:<span class=\"mi\">3</span>:<span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">·</span><span class=\"w\">            </span><span class=\"err\">┬</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">·</span><span class=\"w\">            </span><span class=\"err\">╰──</span><span class=\"w\"> </span><span class=\"n\">Cannot</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">classify_imm</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"o\">-</span><span class=\"n\">hand</span><span class=\"w\"> </span><span class=\"n\">side</span><span class=\"w\"> </span><span class=\"n\">pattern</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">╰────</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If, however, I change the input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">u64</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the compile succeeds</p>\n</blockquote>",
        "id": 261718016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637102421
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539#issuecomment-970747078\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539\">issue #3539</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 261718030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637102435
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539#issuecomment-970749280\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539\">issue #3539</a>:</p>\n<blockquote>\n<p>I suspect what is happening is that we are collecting extern extractor information and checking rule patterns in the same pass over the IR, when we need to collect all extern extractor info in one pass, and then do a second pass where we check rule patterns.</p>\n</blockquote>",
        "id": 261718171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637102523
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539#issuecomment-1122946107\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539\">issue #3539</a>:</p>\n<blockquote>\n<p>I think this was fixed recently by #4079; closing.</p>\n</blockquote>",
        "id": 281893500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652220923
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3539\">issue #3539</a>:</p>\n<blockquote>\n<p>Given this input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">u64</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I get (running <code>islec</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">islec</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.08</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">acrichto</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">islec</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>:\n  <span class=\"err\">×</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">error</span>: <span class=\"nc\">Cannot</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">classify_imm</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"o\">-</span><span class=\"n\">hand</span><span class=\"w\"> </span><span class=\"n\">side</span><span class=\"w\"> </span><span class=\"n\">pattern</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">╭─</span><span class=\"p\">[</span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">isle</span>:<span class=\"mi\">3</span>:<span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">·</span><span class=\"w\">            </span><span class=\"err\">┬</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">·</span><span class=\"w\">            </span><span class=\"err\">╰──</span><span class=\"w\"> </span><span class=\"n\">Cannot</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">term</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">classify_imm</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">left</span><span class=\"o\">-</span><span class=\"n\">hand</span><span class=\"w\"> </span><span class=\"n\">side</span><span class=\"w\"> </span><span class=\"n\">pattern</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"err\">│</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"err\">╰────</span><span class=\"w\"></span>\n</code></pre></div>\n<p>If, however, I change the input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">u64</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">classify_imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">classify_imm</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the compile succeeds</p>\n</blockquote>",
        "id": 281893508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652220926
    }
]