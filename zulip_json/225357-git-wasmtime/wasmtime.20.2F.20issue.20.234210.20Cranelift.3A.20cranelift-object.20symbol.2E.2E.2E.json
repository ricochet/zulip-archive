[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210\">issue #4210</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">object</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>All tests pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">failures</span>:\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_data</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_data</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"data</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">245</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_func</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"function</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">222</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">reject_nul_byte_symbol_for_data</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code></p>\n<p>Operating system: Fedora 35, v5.17.6-200.fc35.x86_64</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 284778748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654191493
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210\">issue #4210</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">object</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>All tests pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">failures</span>:\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_data</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_data</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"data</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">245</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_func</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"function</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">222</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">reject_nul_byte_symbol_for_data</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code></p>\n<p>Operating system: Fedora 35, v5.17.6-200.fc35.x86_64</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 284778749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654191493
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210\">issue #4210</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">object</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>All tests pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">failures</span>:\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_data</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_data</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"data</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">245</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_func</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"function</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">222</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">reject_nul_byte_symbol_for_data</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code></p>\n<p>Operating system: Fedora 35, v5.17.6-200.fc35.x86_64</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 284778751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654191494
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210#issuecomment-1145132279\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210\">issue #4210</a>:</p>\n<blockquote>\n<p>cc: @cfallin </p>\n</blockquote>",
        "id": 284779296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654191746
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210#issuecomment-1145136113\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210\">issue #4210</a>:</p>\n<blockquote>\n<p>The <code>Debug</code> impl for strings changed how it escapes nul bytes between rust 1.60 and 1.61: <a href=\"https://rust.godbolt.org/z/Pa6GW1jfW\">https://rust.godbolt.org/z/Pa6GW1jfW</a></p>\n</blockquote>",
        "id": 284779902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654192010
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210#issuecomment-1145152886\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210\">issue #4210</a>:</p>\n<blockquote>\n<p>Hmm, interesting. My top-level question is why CI didn't catch this. At first I suspected that we might not be testing with the latest stable, but indeed we are: <a href=\"https://github.com/bytecodealliance/wasmtime/runs/6698225344\">this recent run on <code>main</code></a> for example completed with Rust 1.61. But looking at the <a href=\"https://github.com/bytecodealliance/wasmtime/runs/6698225344?check_suite_focus=true#step:12:582\">logs</a> more closely it seems that tests for cranelift-object from the <code>tests/</code> directory in the crate aren't being run; we just get</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"n\">unittests</span><span class=\"w\"> </span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">deps</span><span class=\"o\">/</span><span class=\"n\">cranelift_object</span><span class=\"o\">-</span><span class=\"mi\">398</span><span class=\"n\">aa25782466210</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"n\">running</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I suspect because we don't have <code>--tests</code> in our <code>cargo test --workspace</code> invocation in <code>ci/run-tests.sh</code>? (I don't fully understand the implications of different choices here though, maybe @alexcrichton has an opinion on what we should be doing?)</p>\n<p>In any case, I'll do a quick PR to fix, thanks!</p>\n</blockquote>",
        "id": 284781427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654192656
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4210\">issue #4210</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">object</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>All tests pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">failures</span>:\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_data</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_data</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"data</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">245</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">data</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">reject_nul_byte_symbol_for_func</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Backend</span><span class=\"p\">(</span><span class=\"n\">Symbol</span><span class=\"w\"> </span><span class=\"s\">\"function</span><span class=\"se\">\\u{0}</span><span class=\"s\">with</span><span class=\"se\">\\u{0}</span><span class=\"s\">nul</span><span class=\"se\">\\u{0}</span><span class=\"s\">bytes\"</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">null</span><span class=\"w\"> </span><span class=\"n\">byte</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">disallowed</span><span class=\"p\">)</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">object</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">basic</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">222</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">panic</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">contain</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">string</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"err\">`</span><span class=\"s\">\"called `Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}with</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}nul</span><span class=\"se\">\\\\</span><span class=\"s\">u{0}bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed)\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">substring</span>: <span class=\"err\">`</span><span class=\"s\">\"Result::unwrap()` on an `Err` value: Backend(Symbol </span><span class=\"se\">\\\"</span><span class=\"s\">function</span><span class=\"se\">\\\\</span><span class=\"s\">0with</span><span class=\"se\">\\\\</span><span class=\"s\">0nul</span><span class=\"se\">\\\\</span><span class=\"s\">0bytes</span><span class=\"se\">\\\"</span><span class=\"s\"> has a null byte, which is disallowed\"</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">reject_nul_byte_symbol_for_data</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">reject_nul_byte_symbol_for_func</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code></p>\n<p>Operating system: Fedora 35, v5.17.6-200.fc35.x86_64</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 284800998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654202051
    }
]