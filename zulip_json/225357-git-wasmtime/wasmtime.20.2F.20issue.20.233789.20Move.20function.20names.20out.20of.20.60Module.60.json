[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789#issuecomment-1035392508\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789\">issue #3789</a>:</p>\n<blockquote>\n<p>For reference, the 80% number comes from the benchmark in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3790\">https://github.com/bytecodealliance/wasmtime/pull/3790</a> and looks like:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">deserialize</span><span class=\"o\">/</span><span class=\"n\">deserialize</span><span class=\"o\">/</span><span class=\"n\">rustpython</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">666.37</span><span class=\"w\"> </span><span class=\"n\">us</span><span class=\"w\"> </span><span class=\"mf\">666.56</span><span class=\"w\"> </span><span class=\"n\">us</span><span class=\"w\"> </span><span class=\"mf\">666.75</span><span class=\"w\"> </span><span class=\"n\">us</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">79.458</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">79.453</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">79.448</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">7.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">mild</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">5.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span><span class=\"w\"></span>\n\n<span class=\"n\">deserialize</span><span class=\"o\">/</span><span class=\"n\">deserialize</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">1.4307</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.4310</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.4313</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">82.183</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">82.176</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">82.170</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">7.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">severe</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">mild</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 271482310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644521422
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789#issuecomment-1035402242\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789\">issue #3789</a>:</p>\n<blockquote>\n<p>Another thing we could do to take this even further is have a header on this new section (or add another new section) that contains the function index -&gt; (offset, length) pairs. This way the <code>CompiledModuleInfo</code> would be even a bit smaller than it is after this PR.</p>\n</blockquote>",
        "id": 271483200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644521839
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789#issuecomment-1035416842\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789\">issue #3789</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 271484559,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644522486
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789#issuecomment-1035417937\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789\">issue #3789</a>:</p>\n<blockquote>\n<p>I was considering doing that but ended up deciding against it because we dont have much other laziness in <code>CompiledModule</code> right now, although theoretically we should be able to have a fair amount more. I was originally tipped off to this by a unnaturally large <code>.wasmtime.info</code> section in the binary:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"n\">spidermonkey</span><span class=\"p\">.</span><span class=\"n\">cwasm</span><span class=\"w\"></span>\n\n<span class=\"n\">spidermonkey</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>:     <span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">elf64</span><span class=\"o\">-</span><span class=\"n\">littleaarch64</span><span class=\"w\"></span>\n\n<span class=\"n\">Sections</span>:\n<span class=\"nc\">Idx</span><span class=\"w\"> </span><span class=\"n\">Name</span><span class=\"w\">          </span><span class=\"n\">Size</span><span class=\"w\">      </span><span class=\"n\">VMA</span><span class=\"w\">               </span><span class=\"n\">LMA</span><span class=\"w\">               </span><span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\">  </span><span class=\"n\">Algn</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"w\">         </span><span class=\"mi\">00</span><span class=\"n\">dc0000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">00010000</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">16</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">CODE</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">eh_frame</span><span class=\"w\">     </span><span class=\"mi\">001</span><span class=\"n\">bf84c</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">00</span><span class=\"n\">dd0000</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DATA</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">addrmap</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"n\">bddf9c</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">00</span><span class=\"n\">f8f84c</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DATA</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">traps</span><span class=\"w\"> </span><span class=\"mi\">002</span><span class=\"n\">aefb7</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">01</span><span class=\"n\">b6d7e8</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DATA</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">rodata</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"mf\">00e5</span><span class=\"n\">e488</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mf\">01e1</span><span class=\"n\">c79f</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DATA</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"mi\">0042320</span><span class=\"n\">c</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">02</span><span class=\"n\">c7ac27</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DATA</span><span class=\"w\"></span>\n</code></pre></div>\n<p>where here it's on the order of the size of the text section which was massive. This PR actually doesn't help this too too much and instead yields:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">h</span><span class=\"w\"> </span><span class=\"n\">spidermonkey</span><span class=\"p\">.</span><span class=\"n\">cwasm</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">name</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">    </span><span class=\"mf\">002e344</span><span class=\"n\">f</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">02</span><span class=\"n\">ce31df</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DATA</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"mi\">0013</span><span class=\"n\">fdc4</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">0000000000000000</span><span class=\"w\">  </span><span class=\"mi\">02</span><span class=\"n\">fc662e</span><span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"o\">**</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">                  </span><span class=\"n\">CONTENTS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ALLOC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">LOAD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">READONLY</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DATA</span><span class=\"w\"></span>\n</code></pre></div>\n<p>where <code>.name.wasm + .wasmtime.info</code> is roughly the size of the old section. This still seems abnormally large for <code>.wasmtime.info</code> though as it's still sort of on the order of the entire text section. I benchmarked after this PR and it looked like all the remaining decoding time was <a href=\"https://github.com/bytecodealliance/wasmtime/blob/027dea549a6b02fdd00c87100438c65e424f0730/crates/jit/src/instantiate.rs#L83\"><code>PrimaryMap&lt;DefinedFuncIndex, FunctionInfo&gt;,</code></a>. I didn't immediately see <code>Vec&lt;FunctionName&gt;</code> in the profile so I wasn't too worried about its decoding time.</p>\n<p>I'll leave optimizing <code>Vec&lt;FunctionInfo&gt;</code> for another day, and in the meantime I do agree that we've still got in our back pocket lazily decoding the <code>Vec&lt;FunctionName&gt;</code> entirely as well since we don't need to create that immediately either.</p>\n</blockquote>",
        "id": 271484639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644522539
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789#issuecomment-1035423115\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789\">issue #3789</a>:</p>\n<blockquote>\n<blockquote>\n<p>because we dont have much other laziness in <code>CompiledModule</code> right now,</p>\n</blockquote>\n<p>Wouldn't even need to be lazy inside <code>CompiledModuleInfo</code>, just use the header section directly. If each entry is two words (offset and length) then we can lookup the <code>i</code>th function's name by just doing</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[repr(C)]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">OffsetAndLength</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">offset</span>: <span class=\"kt\">usize</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">length</span>: <span class=\"kt\">usize</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">header_section_ptr</span>: <span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">OffsetAndLengthPair</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">header_section_len</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">header_section</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">slice</span>::<span class=\"n\">from_raw_parts</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"></span>\n<span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">header_section</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 271485128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644522775
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789#issuecomment-1035425222\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789\">issue #3789</a>:</p>\n<blockquote>\n<p>But yeah no need to hold up this PR or do that now, if we don't want to.</p>\n</blockquote>",
        "id": 271485337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644522867
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789#issuecomment-1035436291\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3789\">issue #3789</a>:</p>\n<blockquote>\n<p>Oh actually that's a great point. We already do that for <a href=\"https://github.com/bytecodealliance/wasmtime/blob/41eb2257659b2bc12be6fe7bfa61f796f8605c1e/crates/environ/src/address_map.rs#L148-L191\">the address map section</a> where there's a special encoder followed by a specialized lookup routine for the data produced by that encoder. While we need to be somewhat careful about alignments and such it's not really the end of the world. </p>\n<p>Arguably almost everything in <code>wasmtime::Module</code> should move to something like this because deserializing <code>wasmtime::Module</code> is not a trivial task and is otherwise quite wasteful (lots of allocations, none of which are ever mutated so could continue to use the source-of-truth)...</p>\n<p>Anyway I think I'll probably go with this for now since it's relatively lightweight, but there's definitely still more fruit to pick on the accelerate-load-precompiled-modules tree!</p>\n</blockquote>",
        "id": 271486447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644523350
    }
]