[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5487\">PR #5487</a> from <code>fix-branch-of-uextend-of-icmp</code> to <code>main</code>:</p>\n<blockquote>\n<p>In #5031, we removed <code>bool</code> types from CLIF, using integers instead for \"truthy\" values. This greatly simplified the IR, and was generally an improvement.</p>\n<p>However, because x86's <code>SETcc</code> instruction sets only the low 8 bits of a register, we chose to use <code>i8</code> types as the result of <code>icmp</code> and <code>fcmp</code>, to avoid the need for a masking operation when materializing the result.</p>\n<p>Unfortunately this means that uses of truthy values often now have <code>uextend</code> operations, especially when coming from Wasm (where truthy values are naturally <code>i32</code>-typed). For example, where we previously had <code>(brz (icmp ...))</code>, we now have <code>(brz (uextend (icmp ...)))</code>.</p>\n<p>It's arguable whether or not we should switch to <code>i32</code> truthy values -- in most cases we can avoid materializing a value that's immediately used for a branch or select, so a mask would in most cases be unnecessary, and it would be a win at the IR level -- but irrespective of that, this change <em>did</em> regress our generated code quality: our backends had patterns for e.g. <code>(brz (icmp ...))</code> but not with the <code>uextend</code>, so we were <em>always</em> materializing truthy values. Many blocks thus ended with \"cmp; setcc; cmp; test; branch\" rather than \"cmp; branch\".</p>\n<p>In #5391 we noticed this and fixed it on x64, but it was a general problem on aarch64 and riscv64 as well. This PR introduces a <code>maybe_uextend</code> extractor that \"looks through\" uextends, and uses it where we consume truthy values, thus fixing the regression.  This PR also adds compile filetests to ensure we don't regress again.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 317297737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671691877
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5487\">PR #5487</a>.</p>",
        "id": 317297738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671691878
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5487#pullrequestreview-1227278205\">PR review</a>.</p>",
        "id": 317308631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671697402
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5487\">PR #5487</a> from <code>fix-branch-of-uextend-of-icmp</code> to <code>main</code>.</p>",
        "id": 317313970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671699421
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5487\">PR #5487</a>.</p>",
        "id": 317321400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671702226
    }
]