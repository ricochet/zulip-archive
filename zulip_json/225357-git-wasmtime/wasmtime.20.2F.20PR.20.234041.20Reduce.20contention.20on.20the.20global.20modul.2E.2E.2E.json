[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041\">PR #4041</a> from <code>less-rwlock</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit intendes to close #4025 by reducing contention on the global<br>\nrwlock Wasmtime has for module information during instantiation and<br>\ndropping a store. Currently registration of a module into this global<br>\nmap happens during instantiation, but this can be a hot path as<br>\nembeddings may want to, in parallel, instantiate modules.</p>\n<p>Instead this switches to a strategy of inserting into the global module<br>\nmap when a <code>Module</code> is created and then removing it from the map when<br>\nthe <code>Module</code> is dropped. Registration in a <code>Store</code> now preserves the<br>\nentire <code>Module</code> within the store as opposed to trying to only save it<br>\npiecemeal. In reality the only piece that wasn't saved within a store<br>\nwas the <code>TypeTables</code> which was pretty inconsequential for core wasm<br>\nmodules anyway.</p>\n<p>This means that instantiation should now clone a singluar <code>Arc</code> into a<br>\n<code>Store</code> per <code>Module</code> (previously it cloned two) with zero managemnt on<br>\nthe global rwlock as that happened at <code>Module</code> creation time.<br>\nAdditionally dropping a <code>Store</code> again involves zero rwlock management<br>\nand only a single <code>Arc</code> drop per-instantiated module (previously it was<br>\ntwo).</p>\n<p>In the process of doing this I also went ahead and removed the<br>\n<code>Module::new_with_name</code> API. This has been difficult to support<br>\nhistorically with various variations on the internals of <code>ModuleInner</code><br>\nbecause it involves mutating a <code>Module</code> after it's been created. My hope<br>\nis that this API is pretty rarely used and/or isn't super important, so<br>\nit's ok to remove.</p>\n<p>Finally this change removes some internal <code>Arc</code> layerings that are no<br>\nlonger necessary, attempting to use either <code>T</code> or <code>&amp;T</code> where possible<br>\nwithout dealing with the overhead of an <code>Arc</code>.</p>\n<p>Closes #4025</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 279125560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650057892
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#pullrequestreview-943750549\">PR review</a>.</p>",
        "id": 279125671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650057973
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#discussion_r851521700\">PR review comment</a>:</p>\n<blockquote>\n<p>I ideally wanted to remove this <code>Arc</code> as well but the <code>GlobalModuleRegistry</code> needed to hang on to something and the <code>Module</code> isn't constructed yet (and <code>Module</code> needs the dtor to unregister), so I went ahead and left this in an <code>Arc</code> but at this <code>Module</code> layer instead of the previous layer.</p>\n</blockquote>",
        "id": 279125672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650057973
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041\">PR #4041</a> from <code>less-rwlock</code> to <code>main</code>.</p>",
        "id": 279128204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650060045
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041\">PR #4041</a> from <code>less-rwlock</code> to <code>main</code>.</p>",
        "id": 279328104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650312415
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041\">PR #4041</a>.</p>",
        "id": 279416769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650378710
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#pullrequestreview-945961022\">PR review</a>.</p>",
        "id": 279430961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650384494
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#pullrequestreview-945961022\">PR review</a>.</p>",
        "id": 279430962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650384494
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#discussion_r853248276\">PR review comment</a>:</p>\n<blockquote>\n<p>Why switch <code>modules_with_code</code> from a <code>BTreeMap</code> to a sorted <code>Vec</code>? This is introducing  <code>O(n)</code> runtime to registering new modules. Is the binary search in the sorted <code>Vec</code> really that much faster that we are willing to take the hit on <code>O(n)</code> module registration?</p>\n</blockquote>",
        "id": 279430964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650384494
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#pullrequestreview-946032206\">PR review</a>.</p>",
        "id": 279438428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650387678
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#discussion_r853299130\">PR review comment</a>:</p>\n<blockquote>\n<p>This was a drive-by cleanup I figured I'd do while I was changing things. When thinking again about this I figured that most stores would only ever have a small handful of modules so the overhead of <code>BTreeMap</code> probably wasn't worth it. If you'd prefer though I can add the map back in</p>\n</blockquote>",
        "id": 279438429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650387678
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#pullrequestreview-946082285\">PR review</a>.</p>",
        "id": 279444461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650390330
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#discussion_r853334970\">PR review comment</a>:</p>\n<blockquote>\n<p>Does the <code>BTreeMap</code> actually have overhead for a small number of modules? If they all fit in a single node, then I think there wouldn't be any overhead at all?</p>\n<p>Without profiling evidence to the contrary, I'd lean towards keeping the <code>BTreeMap</code> and avoiding turning registration from <code>O(log n)</code> to <code>O(n)</code>. Especially since, with the component model, we will expect smaller but more modules to become the norm.</p>\n</blockquote>",
        "id": 279444462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650390330
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#pullrequestreview-946083551\">PR review</a>.</p>",
        "id": 279444583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650390379
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041#pullrequestreview-946084071\">PR review</a>.</p>",
        "id": 279444612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650390393
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041\">PR #4041</a> from <code>less-rwlock</code> to <code>main</code>.</p>",
        "id": 279457843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650396858
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4041\">PR #4041</a>.</p>",
        "id": 279462560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650399228
    }
]