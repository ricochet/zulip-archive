[
    {
        "content": "<p>bnjbvr opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226\">PR #2226</a> from <code>x64-clif-testing</code> to <code>main</code>:</p>\n<blockquote>\n<p>This adds a new feature experimental_x64 for CLIF tests.</p>\n<p>A test is run in the new x64 backend iff:</p>\n<ul>\n<li>\n<p>either the test doesn't have an x86_64 target requirement, signaling<br>\nit must be target agnostic or not run on this target.</p>\n</li>\n<li>\n<p>or the test does require the x86_64 target, and the test is marked<br>\nwith the <code>experimental_x64</code> feature.</p>\n</li>\n</ul>\n<p>This required one workaround in the parser. The reason is that the<br>\nparser will try to use information not provided by the TargetIsa adapter<br>\nfor the Mach backends, like register names. In particular, parsing test<br>\nmay fail before the test runner realizes that the test must not be run.<br>\nIn this case, we early return an almost-empty TestFile from the parser,<br>\nunder the same conditions as above, so that the caller may filter out<br>\nthe test properly.</p>\n<p>This also copies two tests from the test suite using the new backend,<br>\nfor demonstration purposes.</p>\n</blockquote>",
        "id": 211149674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600962067
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#pullrequestreview-495870599\">PR Review</a>.</p>",
        "id": 211176147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600974499
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#pullrequestreview-495870599\">PR Review</a>.</p>",
        "id": 211176148,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600974499
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#discussion_r494547055\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I would have expected these tests under <code>.../filetests/isa/x64</code>?</p>\n</blockquote>",
        "id": 211176149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600974499
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#discussion_r494548515\">PR Review Comment</a>:</p>\n<blockquote>\n<p>And looking at the <code>filetest</code> structure more closely, what do you think about a slight re-organization in a separate PR:</p>\n<ul>\n<li><code>filetests/vcode/*</code> get moved under <code>filetests/isa</code></li>\n<li>move a bunch of the optimization directories under a new <code>filetests/opt</code><br>\nI'm just thinking that finding where to put new tests is getting challenging.</li>\n</ul>\n</blockquote>",
        "id": 211176150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600974499
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#discussion_r494548515\">PR Review Comment</a>.</p>",
        "id": 211176190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600974524
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#pullrequestreview-495870599\">PR Review</a>.</p>",
        "id": 211176219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600974539
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#pullrequestreview-496211705\">PR Review</a>.</p>",
        "id": 211230518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601022262
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226#discussion_r494828608\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've moved them over to isa/x64; for the rest, I'm not sure what you mean by the optimization directories, so we could discuss it somewhere convenient.</p>\n</blockquote>",
        "id": 211230520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601022262
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226\">PR #2226</a> from <code>x64-clif-testing</code> to <code>main</code>:</p>\n<blockquote>\n<p>This adds a new feature experimental_x64 for CLIF tests.</p>\n<p>A test is run in the new x64 backend iff:</p>\n<ul>\n<li>\n<p>either the test doesn't have an x86_64 target requirement, signaling<br>\nit must be target agnostic or not run on this target.</p>\n</li>\n<li>\n<p>or the test does require the x86_64 target, and the test is marked<br>\nwith the <code>experimental_x64</code> feature.</p>\n</li>\n</ul>\n<p>This required one workaround in the parser. The reason is that the<br>\nparser will try to use information not provided by the TargetIsa adapter<br>\nfor the Mach backends, like register names. In particular, parsing test<br>\nmay fail before the test runner realizes that the test must not be run.<br>\nIn this case, we early return an almost-empty TestFile from the parser,<br>\nunder the same conditions as above, so that the caller may filter out<br>\nthe test properly.</p>\n<p>This also copies two tests from the test suite using the new backend,<br>\nfor demonstration purposes.</p>\n</blockquote>",
        "id": 211230579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601022333
    },
    {
        "content": "<p>bnjbvr merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2226\">PR #2226</a>.</p>",
        "id": 211234384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601025143
    }
]