[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a> from <code>saulecabrera:winch-table-insts</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change adds support for the following table insructions: <code>elem.drop</code>, <code>table.copy</code>, <code>table.set</code>, <code>table.get</code>, <code>table.fill</code>, <code>table.grow</code>, <code>table.size</code>, <code>table.init</code>.</p>\n<p>This change also introduces partial support for the <code>Ref</code> WebAssembly type, more conretely the <code>Func</code> heap type, which means that all the table instructions above, only work this WebAssembly type as of this change.</p>\n<p>Finally, this change is also a small follow up to the primitives introduced in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">https://github.com/bytecodealliance/wasmtime/pull/7100</a>, more concretely:</p>\n<ul>\n<li><code>FnCall::with_lib</code>: tracks the presence of a libcall and ensures that any result registers are freed right when the call is emitted.</li>\n<li><code>MacroAssembler::table_elem_addr</code> returns an address rather than the value of the address, making it convenient for other use cases like <code>table.set</code>.</li>\n</ul>\n<p>--</p>\n<p>prtest:full</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 394939257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696467851
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395015996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696503570
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395022835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696505845
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395037271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696510538
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1659941069\">PR review</a>.</p>",
        "id": 395049598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514252
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1347468699\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm wondering if there's a chance we could make the signatures of the libcalls compatible with the Wasm spec, that way we would avoid having to pre-process the stack before emitting calls. </p>\n</blockquote>",
        "id": 395049601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514253
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1347468699\">PR review comment</a>.</p>",
        "id": 395049707,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514282
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395051042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514647
    },
    {
        "content": "<p><strong>saulecabrera</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a> as ready for review.</p>",
        "id": 395051050,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514651
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395051051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514651
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395051052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514651
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395051053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514651
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395051054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514651
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395051055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696514652
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395125520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696543525
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1660924125\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me, I just had a few questions before approving.</p>\n</blockquote>",
        "id": 395310853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617220
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1660924125\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me, I just had a few questions before approving.</p>\n</blockquote>",
        "id": 395310854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617221
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1348106564\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        // registers, since depending on the signature, the caller\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 395310855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617221
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349181568\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe this should be <code>impl IntoIterator&lt;Item = Val&gt;</code>? All the calls to it use <code>.into_iter()</code> on that argument.</p>\n</blockquote>",
        "id": 395310857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617221
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349051783\">PR review comment</a>:</p>\n<blockquote>\n<p>I think I'm missing something about this branch, won't it never be taken as <code>elem_value != elem_value</code> will be false?</p>\n</blockquote>",
        "id": 395310858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617221
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349046996\">PR review comment</a>:</p>\n<blockquote>\n<p>Is the function guaranteed to never have a <code>void</code> return?</p>\n</blockquote>",
        "id": 395310859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617221
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349184271\">PR review comment</a>:</p>\n<blockquote>\n<p>That seems like a reasonable change to me, @fitzgen is there any reason not to match the spec signature?</p>\n</blockquote>",
        "id": 395310860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617221
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349186200\">PR review comment</a>:</p>\n<blockquote>\n<p>This is a little surprising, shouldn't  we always grow the stack by multiples of 16? (I'm assuming we call some sysv64 functions at some point, which requires 16-byte alignment for the stack.)</p>\n</blockquote>",
        "id": 395310861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617221
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395311252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617365
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662611519\">PR review</a>.</p>",
        "id": 395311938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617710
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349196799\">PR review comment</a>:</p>\n<blockquote>\n<p>Currently calls follow the system ABI requirements when it comes to alignment, but the alignment is done at the callsite, since we don't try to maintain alignment at all times (your stack could go unaligned if/when you perform any spills). Also this alignment will most certainly change to 16 once we support SIMD, but nevertheless we might still end up with an unaligned stack and so we would still need to perform at-callsite alignment. Hope this clarifies things.</p>\n</blockquote>",
        "id": 395311939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617710
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662611821\">PR review</a>.</p>",
        "id": 395311985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617724
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349196989\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, because this function should only be used to lazily initialize a funcref, we know that the builtin associated to it should always have 1 return value. </p>\n</blockquote>",
        "id": 395311993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696617724
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662622101\">PR review</a>.</p>",
        "id": 395312724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696618122
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349202805\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah I agree this is confusing, and perhaps something that can be changed/improved because thinking a bit more about it, this is probably leaking some target-specific details. Internally <code>masm.branch</code> is going to emit a <code>test</code> if both registers are the same and if the comparison is zero or not zero (<code>Eq</code>, <code>Ne</code>). I'll make a note out of this, perhaps we can introduce either a new instruction at the MacroAssembler layer. </p>\n</blockquote>",
        "id": 395312725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696618122
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395313953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696618737
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662635776\">PR review</a>.</p>",
        "id": 395314021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696618776
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349211474\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for the suggestion, fixed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155/commits/f4d975e4935ef46c48658bd6386707cdc8e6186d\">https://github.com/bytecodealliance/wasmtime/pull/7155/commits/f4d975e4935ef46c48658bd6386707cdc8e6186d</a></p>\n</blockquote>",
        "id": 395314022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696618776
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395314222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696618858
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662642531\">PR review</a>.</p>",
        "id": 395314617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696619083
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349215821\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops, I also left this here -- I'll remove it. </p>\n</blockquote>",
        "id": 395314619,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696619083
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395314802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696619147
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662815119\">PR review</a>.</p>",
        "id": 395330222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627248
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349330674\">PR review comment</a>:</p>\n<blockquote>\n<p>Would you mind adding a comment explaining the effect of the branch in the meantime? I think adding a <code>test</code> function to the macro assembler makes sense, but that doesn't need to block this PR.</p>\n</blockquote>",
        "id": 395330224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627249
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662816740\">PR review</a>.</p>",
        "id": 395330472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627365
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349331697\">PR review comment</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/7179\">https://github.com/bytecodealliance/wasmtime/issues/7179</a></p>\n</blockquote>",
        "id": 395330473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627365
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662817237\">PR review</a>:</p>\n<blockquote>\n<p>Looks good to me!</p>\n</blockquote>",
        "id": 395330537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627404
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395331071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627719
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#pullrequestreview-1662821940\">PR review</a>.</p>",
        "id": 395331096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627736
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155#discussion_r1349334968\">PR review comment</a>:</p>\n<blockquote>\n<p>Done, thanks!</p>\n</blockquote>",
        "id": 395331097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627736
    },
    {
        "content": "<p>saulecabrera has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395331136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696627763
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">PR #7155</a>.</p>",
        "id": 395338777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696633127
    }
]