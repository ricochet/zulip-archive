[
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7260\">PR #7260</a>:</p>\n<blockquote>\n<p>Also add language to <code>wasi:http/outgoing-body::finish</code> explaining how it interacts with pending/in-process forwarding operations.</p>\n<p>Together, these changes enable use cases where an instance forwards an incoming request's or response's body to an outgoing request/response and then terminates without waiting for the entire body to be streamed.</p>\n</blockquote>",
        "id": 396990125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697497525
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7260#pullrequestreview-1681076193\">PR review</a>:</p>\n<blockquote>\n<ul>\n<li>how is write readiness of the output-stream defined - I believe it should not become ready for writing until all forwarded input-streams have been fully sent.</li>\n<li>if <code>future-forwarded-result</code> is dropped, what happens? I believe that we should continue to forward no matter what, but we need to make that explicit.</li>\n<li>if execution traps, what happens? I think in the case of a trap we should define forwarding to stop \"at some point afterwards\" - I don't think we want to be on the hook to keep forwarding after a trap, nor give a guarantee that it terminates promptly.</li>\n</ul>\n</blockquote>",
        "id": 396990534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697497694
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7260#pullrequestreview-1681076193\">PR review</a>:</p>\n<blockquote>\n<ul>\n<li>how is write readiness of the output-stream defined - I believe it should not become ready for writing until all forwarded input-streams have been fully sent.</li>\n<li>if <code>future-forwarded-result</code> is dropped, what happens? I believe that we should continue to forward no matter what, but we need to make that explicit.</li>\n<li>if execution traps, what happens? I think in the case of a trap we should define forwarding to stop \"at some point afterwards\" - I don't think we want to be on the hook to keep forwarding after a trap, nor give a guarantee that it terminates promptly.</li>\n</ul>\n</blockquote>",
        "id": 396990535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697497694
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7260#discussion_r1361341262\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this should return <code>result&lt;future-forwarded-result, tuple&lt;stream-error, input-stream&gt;&gt;</code> - returns ownership of the <code>input stream</code> on failure, and says that this <code>output-stream</code> has already closed or somehow failed.</p>\n</blockquote>",
        "id": 396990536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697497694
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7260#discussion_r1361342220\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think we should provide multiple input-streams here, there is only one that has been taken ownership of by the <code>forward</code> function so lets only give one back here. The caller can hold onto handles for all of their future-forward-results and unwrap each of them into an <code>some(ok(err((_error, input-stream))))</code></p>\n</blockquote>",
        "id": 396990537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697497694
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7260\">PR #7260</a>.</p>",
        "id": 401216728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699555870
    }
]