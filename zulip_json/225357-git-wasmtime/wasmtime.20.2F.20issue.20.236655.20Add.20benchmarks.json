[
    {
        "content": "<p>PROMETHIA-27 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6655\">issue #6655</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>I'd like to start contributing benchmarks to cranelift-codegen to allow tracking the effectiveness of optimizations over time (and maybe make comparisons to presumably-mostly-optimal equivalent rust code).</p>\n<h4>Benefit</h4>\n<p>This would encourage the development of optimizations by allowing contributors to easily measure the compile time and code generation impacts of any optimizations.</p>\n<h4>Implementation</h4>\n<p>I plan to add benchmarks alongside the sole existing one, writing relevant CLIF files alongside them. Then, in the benchmarks, use cranelift-codegen and cranelift-jit to compile and run the code, respectively.</p>\n<h4>Alternatives</h4>\n<p>A slightly higher-level DSL to write the examples in might be beneficial to how quickly they can be written. I considered writing a simple lisp that lowers to CLIF but with name resolution.</p>\n<p>The CLIF could be embedded as static strings, but with <code>include_str!</code> that seems messier than separate files.<br>\n</p>\n</blockquote>",
        "id": 370203995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687899309
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6655#issuecomment-1610219382\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6655\">issue #6655</a>:</p>\n<blockquote>\n<p>Benchmarking is generally done using <a href=\"https://github.com/bytecodealliance/sightglass\">https://github.com/bytecodealliance/sightglass</a> which benchmarks compilation and execution of a couple of wasm modules using wasmtime.</p>\n</blockquote>",
        "id": 370206249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687899985
    },
    {
        "content": "<p>PROMETHIA-27 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6655#issuecomment-1610422221\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6655\">issue #6655</a>:</p>\n<blockquote>\n<p>Ah, that does seem much better than what I was proposing. Seems like almost no one knows it exists.</p>\n</blockquote>",
        "id": 370242145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687913870
    },
    {
        "content": "<p>PROMETHIA-27 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6655\">issue #6655</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>I'd like to start contributing benchmarks to cranelift-codegen to allow tracking the effectiveness of optimizations over time (and maybe make comparisons to presumably-mostly-optimal equivalent rust code).</p>\n<h4>Benefit</h4>\n<p>This would encourage the development of optimizations by allowing contributors to easily measure the compile time and code generation impacts of any optimizations.</p>\n<h4>Implementation</h4>\n<p>I plan to add benchmarks alongside the sole existing one, writing relevant CLIF files alongside them. Then, in the benchmarks, use cranelift-codegen and cranelift-jit to compile and run the code, respectively.</p>\n<h4>Alternatives</h4>\n<p>A slightly higher-level DSL to write the examples in might be beneficial to how quickly they can be written. I considered writing a simple lisp that lowers to CLIF but with name resolution.</p>\n<p>The CLIF could be embedded as static strings, but with <code>include_str!</code> that seems messier than separate files.<br>\n</p>\n</blockquote>",
        "id": 370242147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687913871
    }
]