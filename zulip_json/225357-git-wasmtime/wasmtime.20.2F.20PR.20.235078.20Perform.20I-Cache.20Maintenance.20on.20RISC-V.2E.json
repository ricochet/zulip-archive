[
    {
        "content": "<p>yuyang-ok opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is trying to fix <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5033\">https://github.com/bytecodealliance/wasmtime/issues/5033</a>.<br>\nThanks @afonso360, I think he is done all of the investigation,I didn't do a lot of work.<br>\nBut I am still have question about the flag parameter.<br>\nlook like <code>SYS_RISCV_FLUSH_ICACHE_LOCAL</code> and <code>SYS_RISCV_FLUSH_ICACHE_LOCAL</code> have the same value.</p>\n</blockquote>",
        "id": 305051995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666218390
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 305054317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666219604
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 305098998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666253269
    },
    {
        "content": "<p>yuyang-ok edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is trying to fix <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5033\">https://github.com/bytecodealliance/wasmtime/issues/5033</a>.<br>\nThanks @afonso360, I think he is done all of the investigation,I didn't do a lot of work.<br>\nBut I am still have question about the flag parameter.<br>\nlook like <code>SYS_RISCV_FLUSH_ICACHE_ALL</code> and <code>SYS_RISCV_FLUSH_ICACHE_LOCAL</code> have the same value.</p>\n</blockquote>",
        "id": 305121304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666261977
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1149064358\">PR review</a>.</p>",
        "id": 305129812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265209
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1000502204\">PR review comment</a>:</p>\n<blockquote>\n<p><code>num_cpus::get()</code> does multiple syscalls and as such may be more expensive than the <code>SYS_RISCV_FLUSH_ICACHE_ALL</code> syscall it is meant to avoid.</p>\n</blockquote>",
        "id": 305129814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265210
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1148356786\">PR review</a>.</p>",
        "id": 305130271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265407
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1148356786\">PR review</a>.</p>",
        "id": 305130274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265407
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1000473088\">PR review comment</a>:</p>\n<blockquote>\n<p>Although it's not currently use we should really provide these values. These represent the range of addresses for which we should flush the cache (as far as I understand it). We can get these if we move this operation to the <code>clear_cache</code> function below which is a more appropriate place for it.</p>\n<p>There we have the start address and the length which we can easily convert into a start and end address.</p>\n</blockquote>",
        "id": 305130276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265407
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r999997109\">PR review comment</a>:</p>\n<blockquote>\n<p>We might want to call this something along the lines of <code>SYS_RISCV_FLUSH_ICACHE</code> so that it provides a bit more context as to what this is doing.</p>\n</blockquote>",
        "id": 305130277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265407
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1000500130\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm also a bit confused as to why the kernel decide to alias both of these settings, but it seems as it was just to represent the state of things at <a href=\"https://github.com/torvalds/linux/commit/921ebd8f2c081b3cf6c3b29ef4103eef3ff26054\">the time</a>. I think we should be OK just referencing <code>SYS_RISCV_FLUSH_ICACHE_ALL</code> which is the operation that we want but adding a comment on the current situation.</p>\n</blockquote>",
        "id": 305130282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265407
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1000473088\">PR review comment</a>.</p>",
        "id": 305130357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265446
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1000500130\">PR review comment</a>.</p>",
        "id": 305144922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666270876
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1151801747\">PR review</a>.</p>",
        "id": 305484525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666416062
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1002355027\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok,My main consideration is that detected at runtime make it is more easy to use. use this library need no configuration.Maybe I will add a feature <code>one-core</code>. Because of multi-core is the most case. </p>\n</blockquote>",
        "id": 305484526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666416062
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1002666423\">PR review comment</a>:</p>\n<blockquote>\n<p>yeah.</p>\n</blockquote>",
        "id": 305635516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666514010
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1152262029\">PR review</a>.</p>",
        "id": 305635517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666514010
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1152286712\">PR review</a>.</p>",
        "id": 305644589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666520188
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1002684121\">PR review comment</a>:</p>\n<blockquote>\n<p>ok.</p>\n</blockquote>",
        "id": 305644591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666520188
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 305644611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666520208
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 306379189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666850112
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 306379900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666850585
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1007787786\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    riscv_flush_icache(ptr as u64, (ptr as u64) + (len as u64))?;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 306605233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666945854
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1159656828\">PR review</a>.</p>",
        "id": 306605234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666945854
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1007800661\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think we need to do this here. With the way the API for this crate is set up, we should always have a <code>clear_cache</code> operation preceding this. So we are effectively doing the cache flushing twice!<br>\n</p>\n</blockquote>",
        "id": 306605235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666945854
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1159656828\">PR review</a>.</p>",
        "id": 306605236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666945854
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1160882273\">PR review</a>.</p>",
        "id": 306774315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667006716
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1008602706\">PR review comment</a>:</p>\n<blockquote>\n<p>ok.</p>\n</blockquote>",
        "id": 306774316,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667006716
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1008603027\">PR review comment</a>:</p>\n<blockquote>\n<p>ok,thanks.</p>\n</blockquote>",
        "id": 306774421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667006868
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1160882573\">PR review</a>.</p>",
        "id": 306774422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667006868
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 306774517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667006945
    },
    {
        "content": "<p><strong>yuyang-ok</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> as ready for review.</p>",
        "id": 307015507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667170316
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1163679899\">PR review</a>.</p>",
        "id": 307357252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321715
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010656926\">PR review comment</a>:</p>\n<blockquote>\n<p>Writing/grammar fix: let's reword this as</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"w\"> </span><span class=\"n\">Most</span><span class=\"w\"> </span><span class=\"n\">modern</span><span class=\"w\"> </span><span class=\"n\">CPUs</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">SMP</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">multicore</span><span class=\"p\">).</span><span class=\"w\"> </span><span class=\"n\">However</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">when</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">present</span><span class=\"p\">,</span><span class=\"w\"></span>\n#<span class=\"w\"> </span><span class=\"n\">some</span><span class=\"w\"> </span><span class=\"n\">aspects</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">coherence</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">much</span><span class=\"w\"> </span><span class=\"n\">cheaper</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">example</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RISC</span><span class=\"o\">-</span><span class=\"n\">V</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"></span>\n#<span class=\"w\"> </span><span class=\"n\">one</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fence</span><span class=\"p\">.</span><span class=\"n\">i</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">rather</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">syscall</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">invokes</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">other</span><span class=\"w\"> </span><span class=\"n\">cores</span><span class=\"p\">.</span><span class=\"w\"></span>\n#<span class=\"w\"> </span><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"w\"> </span><span class=\"n\">enables</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">optimizations</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">resulting</span><span class=\"w\"> </span><span class=\"n\">program</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">only</span><span class=\"o\">*</span><span class=\"w\"></span>\n#<span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">safe</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">one</span><span class=\"o\">-</span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">systems</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 307357253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010658977\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                        // The syscall isn't defined in `libc`, so we definfe the syscall number here.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 307357254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010657481\">PR review comment</a>:</p>\n<blockquote>\n<p>Missing space before <code>else</code></p>\n</blockquote>",
        "id": 307357255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010662422\">PR review comment</a>:</p>\n<blockquote>\n<p><code>return</code> isn't necessary here, I think: the whole <code>if</code> is an expression that will return the last value in the block.</p>\n</blockquote>",
        "id": 307357256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010657172\">PR review comment</a>:</p>\n<blockquote>\n<p>Missing newline after this line</p>\n</blockquote>",
        "id": 307357257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010662804\">PR review comment</a>:</p>\n<blockquote>\n<p>LIkewise for these two lines: <code>return</code> isn't needed in either case.</p>\n</blockquote>",
        "id": 307357259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010660250\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                    // Currently these parameters are not used, but they are still defined.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 307357260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1163679899\">PR review</a>.</p>",
        "id": 307357261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667321716
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010683106\">PR review comment</a>:</p>\n<blockquote>\n<p>I may have missed some discussion on this, but how come this is a crate feature? It seems like this would be better detected by the crate dynamically since many folks compiling code aren't certain what the target system looks like.</p>\n</blockquote>",
        "id": 307360538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667322602
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1163724308\">PR review</a>.</p>",
        "id": 307360558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667322603
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1163812967\">PR review</a>.</p>",
        "id": 307372490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667325904
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010743898\">PR review comment</a>:</p>\n<blockquote>\n<p>There a comment about detecting the number of cpu's at runtime: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1000502204\">https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1000502204</a></p>\n<p>I'd prefer if we could call the <a href=\"https://github.com/torvalds/linux/blob/5bfc75d92efd494db37f5c4c173d3639d4772966/arch/riscv/kernel/vdso/flush_icache.S#L10\">vDSO implementation</a>, since that would also do the exact same thing for non SMP kernels, and avoid the syscalls. <br>\n</p>\n</blockquote>",
        "id": 307372491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667325904
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010743898\">PR review comment</a>.</p>",
        "id": 307372540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667325925
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1163842344\">PR review</a>.</p>",
        "id": 307376887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667327141
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010762810\">PR review comment</a>:</p>\n<blockquote>\n<p>Could the result of <code>num_cpus::get</code> be stored in a <code>static</code>? That would incur syscalls on the first hit but none subsequently.</p>\n</blockquote>",
        "id": 307376888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667327141
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1010743898\">PR review comment</a>.</p>",
        "id": 307377054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667327194
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1164300651\">PR review</a>.</p>",
        "id": 307438773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667354952
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1011078807\">PR review comment</a>:</p>\n<blockquote>\n<p>@alexcrichton That is a good idea save <code>num_cpus::get</code>  in <code>static</code>.</p>\n</blockquote>",
        "id": 307438774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667354952
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1011079097\">PR review comment</a>:</p>\n<blockquote>\n<p>ok.</p>\n</blockquote>",
        "id": 307438793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667354971
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1164301129\">PR review</a>.</p>",
        "id": 307438794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667354971
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 307455034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667368466
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 307455041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667368476
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 307469976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667376575
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 307487889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667383483
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1011539693\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think <code>num_cpus::get()</code> is safe. Linux supports hotplugging entire cpus and enabling/disabling cpu cores at runtime. In addition cgroups can be used to limit and unlimit cpu usage. <code>num_cpus</code> considers a cgroup limit to 1 or less cpu worth of time as there being only a single core even if it can migrate to a different cpu.</p>\n</blockquote>",
        "id": 307493696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667385507
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1164962750\">PR review</a>.</p>",
        "id": 307493697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667385507
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 307627644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667427490
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 310144730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668499171
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 310148192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668500015
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1180447178\">PR review</a>.</p>",
        "id": 310153317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668502011
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1022497992\">PR review comment</a>:</p>\n<blockquote>\n<p>@bjorn3  I have rollback to features implementation since not safe,safety come first.</p>\n</blockquote>",
        "id": 310153322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668502012
    },
    {
        "content": "<p>yuyang-ok edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1022497992\">PR review comment</a>.</p>",
        "id": 310153884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668502252
    },
    {
        "content": "<p>yuyang-ok edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#discussion_r1022497992\">PR review comment</a>.</p>",
        "id": 310153916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668502265
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078#pullrequestreview-1278509558\">PR review</a>.</p>",
        "id": 325077525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675233644
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a> from <code>risc-fencei</code> to <code>main</code>.</p>",
        "id": 325313195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675310729
    },
    {
        "content": "<p>yuyang-ok closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5078\">PR #5078</a>.</p>",
        "id": 325517429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675380180
    }
]