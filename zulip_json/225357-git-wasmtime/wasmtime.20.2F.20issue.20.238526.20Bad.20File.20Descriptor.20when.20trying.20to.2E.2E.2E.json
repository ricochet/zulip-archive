[
    {
        "content": "<p>maxwellflitton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<p>I have the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[tokio::main(flavor=</span><span class=\"s\">\"current_thread\"</span><span class=\"cp\">)]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">os</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">FromRawFd</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">std_listener</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">StDTcpListener</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"n\">std_listener</span><span class=\"p\">.</span><span class=\"n\">set_nonblocking</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Server listening on port 8080\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>It compiles to the target <code>wasm32-wasi</code> fine, but when I try and run it with the following command:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">FD_COUNT</span><span class=\"o\">=</span><span class=\"s\">\"3\"</span>\n<span class=\"n\">sudo</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">tcp</span><span class=\"o\">-</span><span class=\"n\">listen</span><span class=\"o\">=</span><span class=\"mf\">127.0.0.1</span>:<span class=\"mi\">8080</span>\n</code></pre></div>\n<p>and I get the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Os</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span>: <span class=\"nc\">Uncategorized</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"s\">\"Bad file descriptor\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x12410</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__rust_start_panic</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x12132</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">rust_panic</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x12065</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">panicking</span>::<span class=\"n\">rust_panic_with_hook</span>::<span class=\"n\">h39e3a8d718bdeee9</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x11440</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">panicking</span>::<span class=\"n\">begin_panic_handler</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">he926e6c0f7818bbb</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0x1136b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_end_short_backtrace</span>::<span class=\"n\">h8c8c9b1b5bff6dcb</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x11a3c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">rust_begin_unwind</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0x16f87</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">panicking</span>::<span class=\"n\">panic_fmt</span>::<span class=\"n\">h113f422b14ac6c5e</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x18a23</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"n\">unwrap_failed</span>::<span class=\"n\">h39cc7ddeefacf4e6</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x2602</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">core</span>::<span class=\"n\">pin</span>::<span class=\"n\">Pin</span><span class=\"o\">&lt;</span><span class=\"n\">P</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">future</span>::<span class=\"n\">future</span>::<span class=\"n\">Future</span><span class=\"o\">&gt;</span>::<span class=\"n\">poll</span>::<span class=\"n\">hafd7cce1e3bb831b</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span>:  <span class=\"mh\">0xab4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">tokio</span>::<span class=\"n\">runtime</span>::<span class=\"n\">scheduler</span>::<span class=\"n\">current_thread</span>::<span class=\"n\">Context</span>::<span class=\"n\">enter</span>::<span class=\"n\">h6571e16d8eddbc1b</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span>: <span class=\"mh\">0x2476</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">tokio</span>::<span class=\"n\">runtime</span>::<span class=\"n\">context</span>::<span class=\"n\">scoped</span>::<span class=\"n\">Scoped</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span>::<span class=\"n\">set</span>::<span class=\"n\">hd5c0c2879f3c3696</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span>:  <span class=\"mh\">0xc9a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">tokio</span>::<span class=\"n\">runtime</span>::<span class=\"n\">scheduler</span>::<span class=\"n\">current_thread</span>::<span class=\"n\">CoreGuard</span>::<span class=\"n\">block_on</span>::<span class=\"n\">h530f9f4b35b42418</span>\n<span class=\"w\">          </span><span class=\"mi\">12</span>: <span class=\"mh\">0x215e</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">tokio</span>::<span class=\"n\">runtime</span>::<span class=\"n\">context</span>::<span class=\"n\">runtime</span>::<span class=\"n\">enter_runtime</span>::<span class=\"n\">h8de416387b833c99</span>\n<span class=\"w\">          </span><span class=\"mi\">13</span>:  <span class=\"mh\">0xf9b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi_server</span>::<span class=\"n\">main</span>::<span class=\"n\">h9a3299a258d097bb</span>\n<span class=\"w\">          </span><span class=\"mi\">14</span>: <span class=\"mh\">0x234b</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"n\">h08ca4841d5529c37</span>\n<span class=\"w\">          </span><span class=\"mi\">15</span>: <span class=\"mh\">0x235a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">h64de60455dc43b4c</span>\n<span class=\"w\">          </span><span class=\"mi\">16</span>: <span class=\"mh\">0xea12</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start_internal</span>::<span class=\"n\">h96857314850acb81</span>\n<span class=\"w\">          </span><span class=\"mi\">17</span>: <span class=\"mh\">0x1224</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">          </span><span class=\"mi\">18</span>:  <span class=\"mh\">0x69d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"w\">       </span><span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n</blockquote>",
        "id": 436633388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714635209
    },
    {
        "content": "<p>FrankReh <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526#issuecomment-2090184115\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<p>What version of wasmtime are you using? I only know more recent versions where the \"tcplisten\" parameter is paired with \"-S\" and has to be given immediately after the \"run\" argument, like so:</p>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasmtime<span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">  </span>run<span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">  </span>-S<span class=\"w\"> </span><span class=\"nv\">tcplisten</span><span class=\"o\">=</span><span class=\"m\">127</span>.0.0.1:8080<span class=\"w\"> </span><span class=\"se\">\\</span>\n<span class=\"w\">  </span>./wasi-server.wasm\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 436665494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714646976
    },
    {
        "content": "<p>maxwellflitton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526#issuecomment-2090228122\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<p>@FrankReh thanks for the response. I am using the following version:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"mf\">20.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">9e1084</span><span class=\"n\">ffa</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"o\">-</span><span class=\"mi\">04</span><span class=\"o\">-</span><span class=\"mi\">22</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>I've now switched to the following command:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">tcplisten</span><span class=\"o\">=</span><span class=\"mf\">127.0.0.1</span>:<span class=\"mi\">8080</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>And I get the following error:<br>\nError: components do not support --tcplisten</p>\n</blockquote>",
        "id": 436668244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714647979
    },
    {
        "content": "<p>FrankReh <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526#issuecomment-2090232740\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<p>Yes, that's as far as I get now too and that is puzzling. Now I'm looking into the commit that introduced that code to understand things better. Coincidentally, I had asked why this was  happening a day or two ago myself with no response yet.</p>\n</blockquote>",
        "id": 436668680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714648135
    },
    {
        "content": "<p>FrankReh <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526#issuecomment-2090400231\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<p>Okay. What you and I were missing is another <code>-S</code> option. This is working for me now.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>-S<span class=\"w\"> </span><span class=\"nv\">preview2</span><span class=\"o\">=</span>n<span class=\"w\"> </span>-S<span class=\"w\"> </span><span class=\"nv\">tcplisten</span><span class=\"o\">=</span><span class=\"m\">127</span>.0.0.1:8080<span class=\"w\"> </span>./wasi-server.wasm\n</code></pre></div>\n<p>The transition from the Rust Wasm world only being modules to now having both Wasm modules and Wasm components has created some confusion - at least for me. I incorrectly assumed if <code>wasmtime</code> were passed a Wasm module, it would use the file's type embedded in the header to run the module setup but that was wrong. There is a flag that can be set on the command line to make the choice explicit.</p>\n<p>With that new version of the command, your example works and prints out the line you were expecting. Note that the actual <code>set</code> your main was doing isn't needed. The TCP listener is automatically set to non blocking by the <code>wasmtime</code> CLI code like this.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">compute_preopen_sockets</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">TcpListener</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">listeners</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[];</span>\n\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">common</span><span class=\"p\">.</span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">tcplisten</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">stdlistener</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">net</span>::<span class=\"n\">TcpListener</span>::<span class=\"n\">bind</span><span class=\"p\">(</span><span class=\"n\">address</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">.</span><span class=\"n\">with_context</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"failed to bind to address '{}'\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">address</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stdlistener</span><span class=\"p\">.</span><span class=\"n\">set_nonblocking</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">            </span><span class=\"n\">listeners</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">stdlistener</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">listeners</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 436684127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714653581
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526#issuecomment-2091468594\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<blockquote>\n<p>The transition from the Rust Wasm world only being modules to now having both Wasm modules and Wasm components has created some confusion - at least for me. I incorrectly assumed if wasmtime were passed a Wasm module, it would use the file's type embedded in the header to run the module setup but that was wrong. There is a flag that can be set on the command line to make the choice explicit.</p>\n</blockquote>\n<p>Sorry this has been confusing, I think that our error messages and the choice of <code>-S preview2=n</code> for this option made it extra confusing. There are two host implementations of WASI P1 in the wasmtime tree, and in the <code>wasmtime-cli</code> executable. </p>\n<ul>\n<li>the concept of a tcp socket being available as a preopened fd is from a totally undocumented and untested extension of the WASI P1 implementation that was contributed by a team that dissolved when their startup ran out of money. I asked around for the better part of a year if anyone was depending on this functionality and could contribute docs or tests, and nobody spoke up, so I think you may be the first to use it in a while. We don't recommend anyone actually use that code, because it is both undocumented and untested, and the design of sockets themselves diverged from that in WASI P2.</li>\n<li>There is a legacy WASI implementation in the <code>wasi-common</code> crate that supports WASI P1 only. It has support for the tcp listener preopen. For <code>wasmtime-cli</code> to use the legacy implementation, you must pass the <code>-S preview2=n</code> flag. It would have been a much better choice if we had made this flag <code>-S implementation=legacy</code>, and I'll discuss with the team whether we can change it!</li>\n<li>The new, default implementation, which lives in the <code>wasmtime-wasi</code> crate supports WASI P1 when used with modules, and WASI P2 when used with components. We recommend everyone use this implementation, however, it does not support the tcp socket preopen when used with WASI P1 modules, because we consider that feature of the legacy implementation a historical wart that never got adoption. Instead, in P2 we use the interfaces defined in the <a href=\"https://github.com/WebAssembly/wasi-sockets\">wasi-sockets</a> proposal, which provides much more functionality, has a great set of docs and tests, and many folks actively developing and maintaining it. Wasi-sockets doesn't piggyback on the descriptor type like P1 sockets did. For programs that need it, <code>wasi-libc</code> provides a posix API to the underlying wasi-sockets interface, thanks to @dicej in <a href=\"https://github.com/WebAssembly/wasi-libc/pull/481\">https://github.com/WebAssembly/wasi-libc/pull/481</a> <a href=\"https://github.com/WebAssembly/wasi-libc/pull/482\">https://github.com/WebAssembly/wasi-libc/pull/482</a> <a href=\"https://github.com/WebAssembly/wasi-libc/pull/488\">https://github.com/WebAssembly/wasi-libc/pull/488</a> .</li>\n</ul>\n</blockquote>",
        "id": 436769084,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714680590
    },
    {
        "content": "<p>FrankReh <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526#issuecomment-2091614348\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<p>@pchickey Wow! That's a lot of interesting background. Thanks for that. </p>\n<p>There was probably a busy loop making the <code>mio</code> demo work anyway.</p>\n</blockquote>",
        "id": 436777271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714684181
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526#issuecomment-2093269312\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8526\">issue #8526</a>:</p>\n<blockquote>\n<p>I don't have much more to add over what @pchickey already mentioned, but otherwise can confirm that this is working as expected. Some things I can say are:</p>\n<p>From the OP @maxwellflitton you're using:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"w\"> </span><span class=\"n\">tcp</span><span class=\"o\">-</span><span class=\"n\">listen</span><span class=\"o\">=</span><span class=\"mf\">127.0.0.1</span>:<span class=\"mi\">8080</span>\n</code></pre></div>\n<p>That's actually passing the <code>-W</code> argument to <code>wasi-server.wasm</code> as a CLI argument, not to Wasmtime itself. I believe you've already discovered this as the next attempt was:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">tcplisten</span><span class=\"o\">=</span><span class=\"mf\">127.0.0.1</span>:<span class=\"mi\">8080</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<p>where the error <code> Error: components do not support --tcplisten</code> popped out. That's a bad error message since the flag has been renamed (it used to be <code>--tcplisten</code>), but the \"correct fix\" for this is what @FrankReh pointed out with <code>-Spreview2=n</code> which, as @pchickey pointed out, is a terrible name for a flag (and also difficult to find)</p>\n<p>To me the action items here are:</p>\n<ul>\n<li>Upgrade mio's support of sockets to work with wasi-sockets on the wasip2 target. If acceptable remove the support for wasip1 since sockets were never fully finished/specified at the spec level.</li>\n<li>Rename <code>-Spreview2=n</code> to <code>-S implementation=...</code> </li>\n<li>Improve the error message for <code>-S tcplisten=...</code> when using <code>wasmtime-wasi</code>'s implementation of WASI</li>\n</ul>\n</blockquote>",
        "id": 436910657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714750987
    }
]