[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a> from <code>alexcrichton:miri-stacked-borrows</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is a series of commits hot on the tail of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6332\">https://github.com/bytecodealliance/wasmtime/pull/6332</a>. Previously Wasmtime was only valid under the Tree Borrows model in MIRI which is a much newer but less restrictive model for Rust's borrowing. After some discussion on Zulip though I concluded that there's no reason for us to rely purely on Tree Borrows and it's probably best to work under Stacked Borrows as well. This commit does that.</p>\n<p>This commit also goes a bit further and gets everything working under strict provenance as well to fix any warnings coming out of MIRI. This means that we should be in a pretty strong position with respect to the verification running on CI, where the main remaining hole is lack of coverage.</p>\n</blockquote>",
        "id": 355619832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683153620
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 355619833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683153621
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 355619834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683153621
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 355619835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683153621
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#pullrequestreview-1412013338\">PR review</a>.</p>",
        "id": 355624245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683156346
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#pullrequestreview-1412013338\">PR review</a>.</p>",
        "id": 355624247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683156346
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1184391701\">PR review comment</a>:</p>\n<blockquote>\n<p>This could be simplified slightly to <code>.sub(...)</code>.<br>\n</p>\n</blockquote>",
        "id": 355624248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683156346
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1184380965\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you add a comment about why this is a casted <code>1</code> instead of <code>null_mut()</code>?</p>\n</blockquote>",
        "id": 355624249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683156346
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1184392674\">PR review comment</a>:</p>\n<blockquote>\n<p>Since this takes an immutable <code>&amp;self</code>, should it return a <code>*const VMContext</code>, with a separate <code>vmctx_mut(&amp;mut self)</code> or so if a <code>*mut VMContext</code> is needed?</p>\n</blockquote>",
        "id": 355624251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683156346
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1184395314\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure how to parse \"the pointer's valid is trivially derivable from any <code>&amp;Instance</code> pointer.</p>\n</blockquote>",
        "id": 355624252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683156346
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1185109843\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh the reason for this is the <code>NonNull</code> wrapper makes it incompatible with <code>null_mut</code>. Is there something you think is worth explicitly calling out here though?</p>\n</blockquote>",
        "id": 355793973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683210803
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1185113014\">PR review comment</a>:</p>\n<blockquote>\n<p>I won't pretend to be an expert on Stacked or Tree Borrows unfortunately, so all I can really say for sure is that this passes everything successfully there, so it's at least not a fundamental requirement. While I think it's best to model as carrying mutability it's not actually required due to the way the <code>vmctx</code> pointer is derived now (as it's derived from a pointer stored in <code>self</code> rather than purely from <code>self</code>). This means that the new <code>*_mut</code> methods from <a href=\"https://github.com/bytecodealliance/wasmtime/commit/0977952dcd9d482bff7c288868ccb52769b3a92e\">https://github.com/bytecodealliance/wasmtime/commit/0977952dcd9d482bff7c288868ccb52769b3a92e</a> aren't actually required and we can technically go back to <code>vmctx_plus_offset(&amp;self, u32) -&gt; *mut T</code>, but I figured it's best to leave as-is for at least documentation purposes.</p>\n</blockquote>",
        "id": 355794737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683210942
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1185118982\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, makes sense. Yeah, when I see a <code>1</code> being casted to a pointer, my first thought is \"is this a magic value that something somewhere else knows about?\". A comment stating that the intent is that, no, this is just intended as a placeholder would help.</p>\n</blockquote>",
        "id": 355796167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683211205
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1185168250\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops I typo'd and it's supposed to be <code>s/valid/value/</code></p>\n</blockquote>",
        "id": 355805716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683212944
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 355805940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683212989
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 355806160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683213028
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 355807436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683213278
    },
    {
        "content": "<p>CraftSpider submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#pullrequestreview-1413654718\">PR review</a>.</p>",
        "id": 355853272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683224048
    },
    {
        "content": "<p>CraftSpider submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#pullrequestreview-1413654718\">PR review</a>.</p>",
        "id": 355853273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683224048
    },
    {
        "content": "<p>CraftSpider created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1185352628\">PR review comment</a>:</p>\n<blockquote>\n<p>Is <code>NonNull::dangling</code> not sufficient here? Internally, it's just <code>invalid_mut(align_of::&lt;T&gt;())</code></p>\n</blockquote>",
        "id": 355853275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683224048
    },
    {
        "content": "<p>CraftSpider created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1185359698\">PR review comment</a>:</p>\n<blockquote>\n<p>Drive by comment: <code>*mut</code> and <code>*const</code> are, as far as I'm aware, treated as functionally the same in SB/TB, with their mutability determined by how they're derived, not their type. So, <code>&amp;T -&gt; *mut T -&gt; &amp;T</code> and <code>&amp;mut T -&gt; *const T -&gt; &amp;mut T</code> roundtrips are fine, but <code>&amp;T -&gt; *mut T -&gt; &amp;mut T</code> isn't.</p>\n<p>This works here for the reasons alex mentioned - since it's derived from the original selfref pointer, it keeps its permissions as long as it isn't invalidated.</p>\n</blockquote>",
        "id": 355855099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683224533
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 355873624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683230289
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#discussion_r1185457687\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yes that works perfectly!</p>\n</blockquote>",
        "id": 355873646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683230299
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338#pullrequestreview-1417198196\">PR review</a>:</p>\n<blockquote>\n<p>Yes, I can do that.</p>\n</blockquote>",
        "id": 356772240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683566604
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6338\">PR #6338</a>.</p>",
        "id": 357010928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683644149
    }
]