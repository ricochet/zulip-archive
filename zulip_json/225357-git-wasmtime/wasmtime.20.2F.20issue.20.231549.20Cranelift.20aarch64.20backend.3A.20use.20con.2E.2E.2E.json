[
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1549\">issue #1549</a>:</p>\n<blockquote>\n<p>Currently, to avoid issues with (i) the PC-relative addressing range of <code>LDR</code>, and (ii) the fact that the constant pool needs to be relocatable, the aarch64 backend emits constants inline with code and branches around them. This is obviously suboptimal for code-density and branchiness reasons.</p>\n<p>To handle the first issue, we should use the <code>ConstantPool</code> to collect constants, as the old backend does, and then modify our emission logic to defer constant emission to the end <em>unless</em> we're about to go out of range of pending constant references, in which case we emit a \"constant island\".</p>\n<p>To handle the second issue, we need to emit constant-pool relocations.</p>\n<p>It's still unclear how we can handle the intersection of these two, i.e., when constant references become out-of-range because the client relocates the constant pool further away. One known use case of the relocatable constant pool is for SpiderMonkey to insert its own epilogue into Wasm functions; there, at least, we can bound how much further away the constant pool will be, so perhaps we can just have a slightly-conservative limit for when we must emit a constant island.</p>\n</blockquote>",
        "id": 255816505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633127376
    }
]