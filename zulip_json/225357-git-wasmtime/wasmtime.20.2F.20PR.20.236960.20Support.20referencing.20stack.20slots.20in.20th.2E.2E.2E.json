[
    {
        "content": "<p>SingleAccretion opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a> from <code>SingleAccretion:DI-Vars</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Implements the plan essentially outlined in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2856#issuecomment-1192419659\">https://github.com/bytecodealliance/wasmtime/issues/2856#issuecomment-1192419659</a>:</p>\n<p>1) Emit or use the SysV-style unwind info if debug info is requested.<br>\n2) Reference that unwind info in the form of <code>.debug_frame</code> using <code>DW_OP_call_frame_cfa</code>.<br>\n3) Plumb the right offsets through.</p>\n<p>Fixes #3884 (at least to some degree - however, that issue does not contain anything actionable), and also the example I was looking at in C#, though only for <code>-opt-level 0</code> codegen.</p>\n</blockquote>",
        "id": 389011566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693840205
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389030035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693847766
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>:</p>\n<blockquote>\n<p>Implements the plan essentially outlined in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2856#issuecomment-1192419659\">https://github.com/bytecodealliance/wasmtime/issues/2856#issuecomment-1192419659</a>:</p>\n<p>1) Emit or use SysV-style unwind info if debug info is requested.<br>\n2) Reference that unwind info in the form of <code>.debug_frame</code> using <code>DW_OP_call_frame_cfa</code>.<br>\n3) Plumb the right offsets through.</p>\n<p>Fixes #3884 (at least to some degree - however, that issue does not contain anything actionable), and also the example I was looking at in C#, though only for <code>-opt-level 0</code> codegen.</p>\n</blockquote>",
        "id": 389031825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693848662
    },
    {
        "content": "<p><strong>SingleAccretion</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a> as ready for review.</p>",
        "id": 389037373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693852248
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389037374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693852249
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389037376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693852249
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389037377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693852249
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389037378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693852249
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389048461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693860543
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#pullrequestreview-1611739724\">PR review</a>:</p>\n<blockquote>\n<p>Looks all reasonable to me, thanks again for working on this! I'm no expert myself in debuginfo but I don't think we necessarily have a resident expert to turn to, so happy to review at a somewhat higher level and lean on you for the DWARF correctness and all that.</p>\n<p>One final comment I'd have in addition to those below is that our current debuginfo tests are pretty primitive, so if you're interested or so inspired I think it'd be great to soup them up. For example I'd love to have \"just\" a directory of C and/or Rust files which are compiled automatically in CI and the source itself has various special comments for commands/breakpoints/etc.</p>\n</blockquote>",
        "id": 389262337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693940815
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#pullrequestreview-1611739724\">PR review</a>:</p>\n<blockquote>\n<p>Looks all reasonable to me, thanks again for working on this! I'm no expert myself in debuginfo but I don't think we necessarily have a resident expert to turn to, so happy to review at a somewhat higher level and lean on you for the DWARF correctness and all that.</p>\n<p>One final comment I'd have in addition to those below is that our current debuginfo tests are pretty primitive, so if you're interested or so inspired I think it'd be great to soup them up. For example I'd love to have \"just\" a directory of C and/or Rust files which are compiled automatically in CI and the source itself has various special comments for commands/breakpoints/etc.</p>\n</blockquote>",
        "id": 389262339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693940816
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#discussion_r1316287031\">PR review comment</a>:</p>\n<blockquote>\n<p>I realize that this is preexisting, so there's no need to fix this, but ideally we wouldn't  check in wasm binaries for tests. In the ideal world CI would have a pinned version of wasi-sdk that it downloads and uses to compile these guest programs (as part of the test). </p>\n<p>In lieu of this though could you perhaps comment in the test itself how to generate the wasm file? For example what C flags were passed. That's probably sufficient for now and a future commit could come through to delete the wasm files and build them on CI instead.</p>\n</blockquote>",
        "id": 389262340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693940816
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#discussion_r1316285564\">PR review comment</a>:</p>\n<blockquote>\n<p>This makes me pause for a bit for a few reasons. One is could this assert that at most one of these fields are <code>SystemV</code> unwind information? Hopefully to head off any possible future confusion.</p>\n<p>The second reason is that in Wasmtime <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9377dfd7b82c8cc5bfdfbc435df1b633b2506f08/crates/cranelift-shared/src/obj.rs#L132-L134\">only <code>unwind_info</code> is consulted</a> meaning that it seems to be like we wouldn't emit the DWARF unwinding information? It also seems though like you're probably running/testing on Windows, so I'm curious if you are how this is working?</p>\n</blockquote>",
        "id": 389262342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693940816
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#discussion_r1316281861\">PR review comment</a>:</p>\n<blockquote>\n<p>To confirm, this specific change is not necessarily relevant to stack slots, it's an independent optimization? </p>\n<p>(it's ok to have, just wanted to confirm)</p>\n</blockquote>",
        "id": 389262343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693940816
    },
    {
        "content": "<p>SingleAccretion submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#pullrequestreview-1611808904\">PR review</a>.</p>",
        "id": 389268043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693943062
    },
    {
        "content": "<p>SingleAccretion created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#discussion_r1316324844\">PR review comment</a>:</p>\n<blockquote>\n<p>Correct.</p>\n</blockquote>",
        "id": 389268045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693943063
    },
    {
        "content": "<p>SingleAccretion submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#pullrequestreview-1611835305\">PR review</a>.</p>",
        "id": 389270956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693944215
    },
    {
        "content": "<p>SingleAccretion created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#discussion_r1316342134\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>Could this assert that at most one of these fields are SystemV unwind information?</p>\n</blockquote>\n<p>Sure, will add. It's not really _incorrect_ for them to be <code>{SysV, SysV}</code>, just wasteful in terms of memory.</p>\n<blockquote>\n<p>I'm curious how this is working?</p>\n</blockquote>\n<p>This function is a callee of <code>append_dwarf</code>, which itself adds to the final image. So on Windows we will have <code>.debug_frame</code>, much like the other DWARF sections.</p>\n<p>It is interesting to note what happens when we are on Unix - in that case the unwind info will be effectively emitted twice (note this is pre-existing behavior). AFAICT from the code the \"unwind\" part will be emitted into <code>.eh_frame</code>, so they don't conflict.</p>\n<p>In effect, the \"debug info\" use of this information is completely decoupled from the \"unwind\" use.</p>\n</blockquote>",
        "id": 389270957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693944215
    },
    {
        "content": "<p>SingleAccretion submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#pullrequestreview-1611839001\">PR review</a>.</p>",
        "id": 389271352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693944370
    },
    {
        "content": "<p>SingleAccretion created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#discussion_r1316344545\">PR review comment</a>:</p>\n<blockquote>\n<p>Agree, binaries in source control seem like a large question mark. Will add the arguments.</p>\n</blockquote>",
        "id": 389271353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693944370
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389275397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693945956
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960#pullrequestreview-1611916644\">PR review</a>:</p>\n<blockquote>\n<p>Ok and no worries, I wanted to confirm for my own curiosity mostly. I think it's reasonable to basically incrementally improve things and any work in this space is very much appreciated!</p>\n</blockquote>",
        "id": 389279894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693947239
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389279957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693947244
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6960\">PR #6960</a>.</p>",
        "id": 389290733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693951137
    }
]