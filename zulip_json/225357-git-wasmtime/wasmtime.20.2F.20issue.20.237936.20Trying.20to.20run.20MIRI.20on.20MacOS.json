[
    {
        "content": "<p><a href=\"https://github.com/rookieCookies\">rookieCookies</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">Issue #7936</a>.</p>",
        "id": 421367196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707883588
    },
    {
        "content": "<p>rookieCookies opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">issue #7936</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Make a new cargo project</li>\n<li>Add <code>wasmtime = \"*\"</code></li>\n<li>Do <code>cargo miri run</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Miri compiles and runs successfully</p>\n<h3>Actual Results</h3>\n<p>Failed to compile because of something inside the crate itself. I looked into the module traphandlers and sure enough there is no function named that</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">using_mach_ports</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">traphandlers</span><span class=\"err\">`</span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">macbook</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"mf\">17.0.1</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">52</span>:<span class=\"mi\">23</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">52</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">traphandlers</span>::<span class=\"n\">using_mach_ports</span><span class=\"p\">(),</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                       </span><span class=\"o\">^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">traphandlers</span><span class=\"err\">`</span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0425</span><span class=\"err\">`</span><span class=\"p\">.</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 17.0.1</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: ARM</p>\n</blockquote>",
        "id": 421367197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707883589
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936#issuecomment-1943141710\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">issue #7936</a>:</p>\n<blockquote>\n<p>Miri is unable to interpret jitted code, so even if this compile error is fixed, you still wouldn't be able to run wasm modules using wasmtime inside miri. It should be possible to compile wasm modules without actually running them though once this error is fixed.</p>\n</blockquote>",
        "id": 421376489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707890992
    },
    {
        "content": "<p>rookieCookies <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936#issuecomment-1944268704\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">issue #7936</a>:</p>\n<blockquote>\n<blockquote>\n<p>It should be possible to compile wasm modules without actually running them though once this error is fixed.</p>\n</blockquote>\n<p>Why? Can't it run in interpret-only mode?</p>\n</blockquote>",
        "id": 421493931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707931075
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936#issuecomment-1944277154\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">issue #7936</a>:</p>\n<blockquote>\n<blockquote>\n<p>Why? Can't it run in interpret-only mode?</p>\n</blockquote>\n<p>Wasmtime doesn't have an interpreter tier, unfortunately; all Wasm execution depends on running native code generated by Cranelift.</p>\n</blockquote>",
        "id": 421495038,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707931400
    },
    {
        "content": "<p>rookieCookies <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936#issuecomment-1944304984\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">issue #7936</a>:</p>\n<blockquote>\n<blockquote>\n<p>Wasmtime doesn't have an interpreter tier, unfortunately; all Wasm execution depends on running native code generated by Cranelift.<br>\nAhh, seriously? Bit unrelated to the PR but do you know of any way I can miri wasm?<br>\n</p>\n</blockquote>\n</blockquote>",
        "id": 421498365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707932516
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936#issuecomment-1944318515\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">issue #7936</a>:</p>\n<blockquote>\n<p>If you want to run miri on some code you want to compile to wasm, you did have to use <code>cargo miri run --target wasm32-wasi</code> instead of <code>cargo run --target wasm32-wasi</code>. Miri currently doesn't support wasi though afaik. You can't run miri on a wasm module. Miri can only run the MIR intermediate representation of rustc. After compilation to wasm only something like valgrind which uses dynamic instrumentation and heuristics about the source language is possible. It just so happens that wasmtime already has support for something like this behind the <code>-W wmemcheck</code> flag: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/docs/wmemcheck.md\">https://github.com/bytecodealliance/wasmtime/blob/main/docs/wmemcheck.md</a> You will need to recompile wasmtime with the <code>wmemcheck</code> cargo feature enable for this and as I said it uses heuristics and doesn't catch all UB something like miri would catch. For example violations of the stacked borrows rules or invalid values are not catched.</p>\n</blockquote>",
        "id": 421500212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707933078
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7936\">issue #7936</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Make a new cargo project</li>\n<li>Add <code>wasmtime = \"*\"</code></li>\n<li>Do <code>cargo miri run</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Miri compiles and runs successfully</p>\n<h3>Actual Results</h3>\n<p>Failed to compile because of something inside the crate itself. I looked into the module traphandlers and sure enough there is no function named that</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">using_mach_ports</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">traphandlers</span><span class=\"err\">`</span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">macbook</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"mf\">17.0.1</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">52</span>:<span class=\"mi\">23</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">52</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">traphandlers</span>::<span class=\"n\">using_mach_ports</span><span class=\"p\">(),</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                       </span><span class=\"o\">^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">traphandlers</span><span class=\"err\">`</span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0425</span><span class=\"err\">`</span><span class=\"p\">.</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 17.0.1</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: ARM</p>\n</blockquote>",
        "id": 421521179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707940452
    }
]