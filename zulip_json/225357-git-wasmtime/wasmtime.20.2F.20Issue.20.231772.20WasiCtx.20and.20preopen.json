[
    {
        "content": "<p>donovano opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772\">Issue #1772</a>:</p>\n<blockquote>\n<p>Hi,</p>\n<p><code>Wasi::new</code> takes a <code>WasiCtx</code> parameter that can be created with environment args as shown in your examples on WASI and linking. With the wasmtime binary you can pass the <code>--dir</code> parameter to preopen a directory where the wasm module can read a file from. I did not so far get this to work when instantiating a WASI module using your API. It seems the args passed into the <code>WasiCtx</code> creation does not end up with directories being pre-opened. The end result is that file IO from a WASI module does not seem to work unless you are calling it from the wasmtime binary. Maybe I'm missing something? Thanks.</p>\n</blockquote>",
        "id": 198939268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590607231
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772#issuecomment-634902475\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772\">Issue #1772</a>:</p>\n<blockquote>\n<p>Can you describe how you're setting up the <code>WasiCtx</code>? Are you calling <code>preopened_dir</code> to add the preopens?</p>\n</blockquote>",
        "id": 198943235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590608872
    },
    {
        "content": "<p>donovano <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772#issuecomment-634921968\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772\">Issue #1772</a>:</p>\n<blockquote>\n<p>Sure, the following is based on some code of wasmtime in <a href=\"http://run.rs\">run.rs</a>. I suspect the File::open might be not correct but not sure. The wasm module tries to open a file in the current directory of the executable. Anyway...</p>\n<div class=\"codehilite\"><pre><span></span><code>   ...\n   let mut linker = Linker::new(&amp;store);\n   let mut cx1 = wasi_common::WasiCtxBuilder::new();\n   let mut path = Path::new(&quot;.&quot;);\n   let mut file = match File::open(&amp;path) {\n      Err(why) =&gt; panic!(&quot;couldn&#39;t open file: {}&quot;,\n            why.description()),\n      Ok(file) =&gt; {println!(&quot;could open .&quot;); file},\n   };\n   cx1.preopened_dir(file.try_clone()?, &quot;.&quot;);\n   let cx1 = cx1.build()?;\n   let wasi = Wasi::new(&amp;store, cx1);\n   //NOTE the following also did not work when passing the --dir=. parameter to the executable\n   //let wasi = Wasi::new(&amp;store, WasiCtx::new(std::env::args())?);\n   wasi.add_to_linker(&amp;mut linker)?;\n   ...\n</code></pre></div>\n\n\n</blockquote>",
        "id": 198948662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590611366
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772#issuecomment-634977033\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772\">Issue #1772</a>:</p>\n<blockquote>\n<p>Offhand I don't see anything wrong there. Do you know what string the application code is attempting to <code>open</code> that isn't working?</p>\n</blockquote>",
        "id": 198961677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590618500
    },
    {
        "content": "<p>donovano <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772#issuecomment-634982065\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772\">Issue #1772</a>:</p>\n<blockquote>\n<p>Here is the simple code section from the wasm module. Note that this works when called from wasmtime (with --dir=.). The file is in the current directory:</p>\n<div class=\"codehilite\"><pre><span></span><code>...\nlet path = Path::new(&quot;somefile.txt&quot;);\nlet mut file = match File::open(path) {\n...\n</code></pre></div>\n\n\n<p>I'll fish around for something else that might be causing this if you say that it all looks sound.</p>\n</blockquote>",
        "id": 198962849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590619387
    },
    {
        "content": "<p>donovano <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772#issuecomment-635310087\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772\">Issue #1772</a>:</p>\n<blockquote>\n<p>Solved the problem. start wasn't being called. Thanks for the help.</p>\n</blockquote>",
        "id": 199014308,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590668679
    },
    {
        "content": "<p>linouxis9 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772#issuecomment-640129644\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1772\">Issue #1772</a>:</p>\n<blockquote>\n<p>I'm having a similar issue @donovano, may I ask which start was not being called?</p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 199997132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591484702
    }
]