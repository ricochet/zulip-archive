[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This does not fix any of the issues reported by the fuzzer so far, but I think that is just a coincidence, since at some point it will generate a libcall and we cannot handle those either.</p>\n<p>This allows the interpreter to register libcall handlers and invoke them when called.</p>\n<p>I switched the fuzzer generated libcall from Udiv to Ishl, reason being that we don't want libcalls that can trap. Both functions have identical signatures so we shouldn't have any input format changes to the fuzzer.</p>\n</blockquote>",
        "id": 295237805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437176
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295238123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437278
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1085557253\">PR review</a>.</p>",
        "id": 295239560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437702
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955040868\">PR review comment</a>:</p>\n<blockquote>\n<p>I saw some sources online that point to this being the correct behaviour, but nothing definitive. Does anyone know if this is correct?</p>\n</blockquote>",
        "id": 295239561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437702
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295239725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437752
    },
    {
        "content": "<p>afonso360 deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955040868\">PR review comment</a>.</p>",
        "id": 295239813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437776
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955042619\">PR review comment</a>:</p>\n<blockquote>\n<p>I saw some sources online that point to this being the correct behaviour, but nothing definitive. Does anyone know if this is correct?</p>\n</blockquote>",
        "id": 295239849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437788
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1085559887\">PR review</a>.</p>",
        "id": 295239850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437788
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955042619\">PR review comment</a>.</p>",
        "id": 295240692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661438032
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This does not fix any of the issues reported by the fuzzer so far, but I think that is just a coincidence, since at some point it will generate a libcall and we cannot handle those either.</p>\n<p>Edit: Actually this may have already been reported, but have returned the same error as  #4758 so it wasn't reported separately.</p>\n<p>This allows the interpreter to register libcall handlers and invoke them when called.</p>\n<p>I switched the fuzzer generated libcall from Udiv to Ishl, reason being that we don't want libcalls that can trap. Both functions have identical signatures so we shouldn't have any input format changes to the fuzzer.</p>\n</blockquote>",
        "id": 295242100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661438406
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955124250\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it might also be a good idea to return <code>Result&lt;SmallVec&lt;[V; 1]&gt;, TrapCode&gt;</code> and allow these to trap controllably.</p>\n</blockquote>",
        "id": 295256057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661441663
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1085678624\">PR review</a>.</p>",
        "id": 295256058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661441663
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955124250\">PR review comment</a>.</p>",
        "id": 295256088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661441672
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955124250\">PR review comment</a>.</p>",
        "id": 295256118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661441681
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1085776078\">PR review</a>.</p>",
        "id": 295267024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661445267
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955195022\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this is undefined behaviour, so I've added trap codes to the libcall handlers and reverted back to div</p>\n</blockquote>",
        "id": 295267025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661445267
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295267250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661445354
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295267311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661445365
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295268217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661445666
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1085881703\">PR review</a>.</p>",
        "id": 295281761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661450344
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955267355\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure I understand. We've recently defined shifts to be computed modulo the bit width. So I think <code>Ishl64</code> is a fine choice, but it should evaluate to <code>a &lt;&lt; (b % 64)</code> for all values of <code>b</code>. That in turn means that we don't need to check the preconditions on Rust's implementation of left-shift: it would panic in debug builds if the shift amount is 64 or higher, but we'll never hit that case.</p>\n</blockquote>",
        "id": 295281762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661450345
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1085890377\">PR review</a>.</p>",
        "id": 295283102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661450749
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955273103\">PR review comment</a>:</p>\n<blockquote>\n<p>These libcalls end up being linked to the platform's runtime library if the interpreted version succeeds, so we need to make sure that they match the behaviour agreed by the runtime libraries and not our own.</p>\n<p>We also can't really panic here since it would cause a fuzz error.</p>\n</blockquote>",
        "id": 295283103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661450749
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1085892949\">PR review</a>.</p>",
        "id": 295283433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661450848
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955274716\">PR review comment</a>:</p>\n<blockquote>\n<p>Another option would be to define our own symbol for the JIT as well, and then we control both sides, the interpreted version and the compiled version.</p>\n</blockquote>",
        "id": 295283434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661450848
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r955274716\">PR review comment</a>.</p>",
        "id": 295283506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661450871
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295284159,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661451081
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295429818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661522590
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1087197417\">PR review</a>.</p>",
        "id": 295465558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661531767
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1087197417\">PR review</a>.</p>",
        "id": 295465559,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661531767
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r956212783\">PR review comment</a>:</p>\n<blockquote>\n<p>Since this <code>SmallVec</code> type ends up appearing in other modules, I'd suggest introducing a type alias for it. That way it's easy later either to change it to a regular <code>Vec</code>, or to put more elements in the inline array.</p>\n<p>Also, <code>&amp;dyn Fn</code> is probably more general than necessary. A closure that doesn't capture anything from its environment is compatible with a <code>fn</code> type, and I'd be surprised if interpreter libcall handlers ever needed context.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>pub type LibCallValues&lt;V&gt; = SmallVec&lt;[V; 1]&gt;;\npub type LibCallHandler&lt;V&gt; = fn(LibCall, LibCallValues&lt;V&gt;) -&gt; Result&lt;LibCallValues&lt;V&gt;, TrapCode&gt;;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 295465561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661531767
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r956204482\">PR review comment</a>:</p>\n<blockquote>\n<p>What do you think of defining this function in <code>function_generator.rs</code> next to the array of allowed libcalls?</p>\n</blockquote>",
        "id": 295465563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661531767
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r956550826\">PR review comment</a>:</p>\n<blockquote>\n<p>The only reason I'm hesitant to do this is that <code>fuzzgen</code> is supposed to be executor agnostic (i.e. icache needs none of this), so it feels kinda weird to have a interpreter specific function there.</p>\n</blockquote>",
        "id": 295556104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661585404
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1087653815\">PR review</a>.</p>",
        "id": 295556105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661585405
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> from <code>interp-libcalls</code> to <code>main</code>.</p>",
        "id": 295556128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661585431
    },
    {
        "content": "<p><strong>afonso360</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a> as ready for review.</p>",
        "id": 295716042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661696630
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1089259376\">PR review</a>.</p>",
        "id": 295983173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661801930
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r957727172\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, that makes sense. But this is weird for the same reason that the function references are: only outer fuzz target knows which functions and which libcalls are okay to call. So I think the set of allowed libcalls (and functions) should be provided by the fuzz target. But I also don't think that needs to block merging this PR, it's just something I think we should revisit soon.</p>\n</blockquote>",
        "id": 295983174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661801930
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#pullrequestreview-1089276340\">PR review</a>.</p>",
        "id": 295987275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661802830
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782#discussion_r957739093\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>So I think the set of allowed libcalls (and functions) should be provided by the fuzz target. </p>\n</blockquote>\n<p>I like that! </p>\n<blockquote>\n<p>But I also don't think that needs to block merging this PR, it's just something I think we should revisit soon.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 295987276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661802830
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4782\">PR #4782</a>.</p>",
        "id": 295996885,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661805394
    }
]