[
    {
        "content": "<p>rockwotj opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a> from <code>rockwotj:component-example</code> to <code>bytecodealliance:main</code>.</p>",
        "id": 411674016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692012
    },
    {
        "content": "<p>rockwotj updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411674134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692085
    },
    {
        "content": "<p>rockwotj edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>:</p>\n<blockquote>\n<p>As part of my journey on learning how the component model works, I realized there is no example in wasmtime, so I figured it'd be useful to add a simple example of guest and host calls.</p>\n</blockquote>",
        "id": 411674193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692130
    },
    {
        "content": "<p>rockwotj updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411674332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692231
    },
    {
        "content": "<p><strong>rockwotj</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a> as ready for review.</p>",
        "id": 411675189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692979
    },
    {
        "content": "<p><strong>rockwotj</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411675190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692980
    },
    {
        "content": "<p><strong>rockwotj</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411675191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692980
    },
    {
        "content": "<p><strong>rockwotj</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411675192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704692980
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#pullrequestreview-1809399806\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this!</p>\n<p>I'm somewhat of two minds on this. On one hand this example showcases a lot of downsides to the unsupported nature of the component model in languages. For example embeddings may not always embed <code>wit-component</code> itself and turn core wasm into components on-the-fly. Additionally this probably won't work for many \"real world\" use cases in the sense that WASI isn't handled here. That would require tweaks to both the build process and the embedder. Finaly the <code>wasm32-unknown-unknown</code> target, rarely used off the web, is used here (for simplicity of course, which makes sense)</p>\n<p>On the other hand this showcases a concrete working example which is something folks can base work on. In that sense it's great to have! Given the number of moving parts in the component model being able to start somewhere is definitely valuable.</p>\n<p>I'd probably lean towards landing this, although perhaps with a few more comments with respect to WASI and usage. Could you add a comment indicating that <code>wasm32-unknown-unknown</code> is used for simplicity here and additionally indicate that the usage of <code>wit-component</code> in embeddings is done for the purposes of this example and otherwise may not be expected in all host embeddings of Wasmtime?</p>\n</blockquote>",
        "id": 411764773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704728804
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#pullrequestreview-1809399806\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this!</p>\n<p>I'm somewhat of two minds on this. On one hand this example showcases a lot of downsides to the unsupported nature of the component model in languages. For example embeddings may not always embed <code>wit-component</code> itself and turn core wasm into components on-the-fly. Additionally this probably won't work for many \"real world\" use cases in the sense that WASI isn't handled here. That would require tweaks to both the build process and the embedder. Finaly the <code>wasm32-unknown-unknown</code> target, rarely used off the web, is used here (for simplicity of course, which makes sense)</p>\n<p>On the other hand this showcases a concrete working example which is something folks can base work on. In that sense it's great to have! Given the number of moving parts in the component model being able to start somewhere is definitely valuable.</p>\n<p>I'd probably lean towards landing this, although perhaps with a few more comments with respect to WASI and usage. Could you add a comment indicating that <code>wasm32-unknown-unknown</code> is used for simplicity here and additionally indicate that the usage of <code>wit-component</code> in embeddings is done for the purposes of this example and otherwise may not be expected in all host embeddings of Wasmtime?</p>\n</blockquote>",
        "id": 411764776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704728804
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#discussion_r1444856657\">PR review comment</a>:</p>\n<blockquote>\n<p>For this the <code>default-features = false</code> isn't probably the best example to give since default features should be ok for 99% of embeddings. The reason it's disabled in this repository is for the unique use case of the adapter.</p>\n</blockquote>",
        "id": 411764777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704728805
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#discussion_r1444858193\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this <code>use</code> can be omitted?</p>\n<p>Also, can this file have a comment pointing to the <code>wit-bindgen</code> repository for more information about the generated bindings?</p>\n</blockquote>",
        "id": 411764778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704728805
    },
    {
        "content": "<p>rockwotj submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#pullrequestreview-1811787759\">PR review</a>.</p>",
        "id": 411993040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826130
    },
    {
        "content": "<p>rockwotj created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#discussion_r1446476798\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 411993041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826130
    },
    {
        "content": "<p>rockwotj updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411993044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826131
    },
    {
        "content": "<p>rockwotj submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#pullrequestreview-1811787976\">PR review</a>.</p>",
        "id": 411993061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826139
    },
    {
        "content": "<p>rockwotj created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#discussion_r1446476940\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed by using the default.</p>\n</blockquote>",
        "id": 411993062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826139
    },
    {
        "content": "<p>rockwotj <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#issuecomment-1883604318\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>:</p>\n<blockquote>\n<p>Thanks for the review! I ended up submitting this because I wanted to:</p>\n<p>1) Have a place where there was a single simple as possible example of the component model that was in code. Everywhere else I could find were documentation of the steps of how to do things and were not specific to wasmtime (so didn't include how to create custom worlds using wasmtime's binding macro).<br>\n2) Learn more about the generated bindings via <code>cargo expand</code> so I know what to expose via the C-API</p>\n<p>I thought the first use case was something others wanted to do, so I ended up creating this. I whole heartedly agree with your comments and have updated the PR.</p>\n</blockquote>",
        "id": 411993571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826336
    },
    {
        "content": "<p><strong>rockwotj</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411993575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826339
    },
    {
        "content": "<p>rockwotj updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 411993703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704826407
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759#pullrequestreview-1812080197\">PR review</a>:</p>\n<blockquote>\n<p>Sounds good!</p>\n</blockquote>",
        "id": 412018607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704837301
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7759\">PR #7759</a>.</p>",
        "id": 412022111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704839024
    }
]