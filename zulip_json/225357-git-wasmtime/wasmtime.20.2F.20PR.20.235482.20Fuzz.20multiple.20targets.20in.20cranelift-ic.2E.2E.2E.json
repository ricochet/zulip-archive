[
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a> from <code>trevor/compile-fuzz-all-targets</code> to <code>main</code>:</p>\n<blockquote>\n<p>Fuzz additional targets in the cranelift-icache target. The list of targets fuzzed is controlled by the targets enabled in <code>fuzz/Cargo.toml</code>.</p>\n<p>This PR also reworks how instruction disabling is done in function generator, moving the deny-list to a function to make the decision at runtime instead of compile time.<br>\n&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 319517978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672896922
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/afonso360\">afonso360</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a>.</p>",
        "id": 319534976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672907393
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a>.</p>",
        "id": 319534994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672907401
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#pullrequestreview-1237694229\">PR review</a>.</p>",
        "id": 319639662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941247
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062679787\">PR review comment</a>:</p>\n<blockquote>\n<p>How about this, for a little more detail?</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>/// Returns true if we believe this `OpcodeSignature` should compile correctly\n/// for the given target triple. We currently have a range of known issues\n/// with specific lowerings on specific backends, and we don't want to get\n/// fuzz bug reports for those. Over time our goal is to eliminate all of these\n/// exceptions.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319639663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941247
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#pullrequestreview-1237694229\">PR review</a>.</p>",
        "id": 319639664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941247
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062674667\">PR review comment</a>:</p>\n<blockquote>\n<p>Would you mind factoring this \"print non-default flags\" logic out to a separate function and calling it from the <code>Debug</code> implementation for <code>TestCase</code> as well?</p>\n</blockquote>",
        "id": 319639665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941247
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062668095\">PR review comment</a>:</p>\n<blockquote>\n<p>This doesn't need to be a function. It probably didn't need to be before either, come to think of it...</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        let supports_inline_probestack = match target_arch {\n            Architecture::X86_64 =&gt; true,\n            Architecture::Aarch64(_) =&gt; true,\n            _ =&gt; false,\n        };\n\n        // Optionally test inline stackprobes on supported platforms\n        // TODO: Test outlined stack probes.\n        if supports_inline_probestack &amp;&amp; bool::arbitrary(self.u)? {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319639666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941247
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062732469\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's add a comment here like the one in <code>generate_instructions</code>:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        // We filter out targets that aren't supported in the current build\n        // configuration after randomly choosing one, instead of randomly choosing\n        // a supported one, so that the same fuzz input works across different build\n        // configurations.\n        let target = u.choose(isa::ALL_ARCHITECTURES)?;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319639667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941248
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062686511\">PR review comment</a>:</p>\n<blockquote>\n<p>The comment I'm about to make is an absurd nit-pick, but I have this thing about mixing different ways of emitting newlines, and I don't think the blank line is necessary anyway. Would you mind removing the <code>\\n</code> here?</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        writeln!(f, \"test compile\")?;\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319639668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941248
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062735711\">PR review comment</a>:</p>\n<blockquote>\n<p>Unimportant and pre-existing nit: I believe the <code>'static</code> lifetime isn't required here, so I'd leave it out.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>const OPCODE_SIGNATURES: &amp;[OpcodeSignature] = &amp;[\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319639669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941248
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062740772\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this doesn't need to be <code>pub</code>; it looks like it's only called from this module now.</p>\n</blockquote>",
        "id": 319639670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941248
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062740628\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this doesn't need to be <code>pub</code>; it looks like it's only called from this module now.</p>\n</blockquote>",
        "id": 319639671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941248
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#discussion_r1062727586\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's add a comment here like the one in <code>generate_instructions</code>:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        // We filter out condition codes that aren't supported by the target at\n        // this point after randomly choosing one, instead of randomly choosing a\n        // supported one, to avoid invalidating the corpus when these get implemented.\n        if matches!(fgen.target_triple.architecture, Architecture::Aarch64(_))\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 319639672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672941248
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a> from <code>trevor/compile-fuzz-all-targets</code> to <code>main</code>.</p>",
        "id": 319642747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672942225
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a> from <code>trevor/compile-fuzz-all-targets</code> to <code>main</code>.</p>",
        "id": 319643500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672942470
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a>.</p>",
        "id": 319644561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672942803
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#pullrequestreview-1237853105\">PR review</a>.</p>",
        "id": 319645919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672943268
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482#pullrequestreview-1237854541\">PR review</a>.</p>",
        "id": 319646140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672943336
    },
    {
        "content": "<p>elliottt has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a>.</p>",
        "id": 319648883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672944188
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5482\">PR #5482</a>.</p>",
        "id": 319650009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672944565
    }
]