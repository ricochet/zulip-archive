[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6833\">PR #6833</a>.</p>",
        "id": 383731474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691694001
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6833\">PR #6833</a>.</p>",
        "id": 383732191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691694177
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6833\">PR #6833</a> from <code>alexcrichton:use-worker-thread-unix</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Currently stdin on Unix uses <code>AsyncFd</code> after setting the nonblocking flag on the stdin file descriptor. This cannot generally be relied on to succeed or work well in cases such as:</p>\n<ul>\n<li>\n<p>On Linux if stdin is a file (e.g. <code>wasmtime &lt; ./foo.txt</code>) then that can't be added to epoll and <code>epoll_ctl</code> fails with EPERM.</p>\n</li>\n<li>\n<p>On macOS if stdin is <code>/dev/null</code> that can't be added to kqueue and fails with <code>EINVAL</code>.</p>\n</li>\n</ul>\n<p>Currently this causes Wasmtime to panic due to a <code>.unwrap()</code> in failing to register stdin. To fix this this commit removes the Unix-specific logic using <code>AsyncFd</code> and instead falls back to unconditionally using a spawned thread like Windows does. This does mean it's a little less lightweight but should be more robust in situations like the above.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 383732551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691694274
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6833\">PR #6833</a>.</p>",
        "id": 383733180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691694455
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6833\">PR #6833</a>.</p>",
        "id": 383787203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691713985
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6833\">PR #6833</a>:</p>\n<blockquote>\n<p>Not all file descriptors can get registered with epoll, for example<br>\nfiles on Linux or <code>/dev/null</code> on macOS return errors. In these<br>\nsituations the fallback of the worker thread implementation is used<br>\ninstead.</p>\n</blockquote>",
        "id": 383787239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691713996
    }
]