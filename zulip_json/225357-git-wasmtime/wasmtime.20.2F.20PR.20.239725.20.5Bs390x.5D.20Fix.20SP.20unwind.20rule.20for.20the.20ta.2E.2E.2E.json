[
    {
        "content": "<p><strong>uweigand</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9725\">PR #9725</a>.</p>",
        "id": 485990229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733275966
    },
    {
        "content": "<p><strong>uweigand</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9725\">PR #9725</a>.</p>",
        "id": 485990231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733275966
    },
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9725\">PR #9725</a> from <code>uweigand:s390x-tailcall-unwindfix</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>On s390x, the unwound SP is always at current CFA - 160.  Therefore, the default rule used on most other platforms (which sets the unwound SP to the current CFA) is incorrect, so we need to provide an explicit DWARF CFI rule to unwind SP.</p>\n<p>With the platform ABI, the caller's SP is always stored in the register save area like other call-saved GPRs, so we can simply use a normal DW_CFA_offset rule.  However, with the new tail-call ABI, the value saved in that slot is incorrect - it is not corrected for the incoming tail-call stack arguments that will have been removed as the tail call returns.</p>\n<p>To fix this without introducing unnecessary run-time overhead, we can simply use a DW_CFA_val_offset rule that will set the unwound SP to CFA - 160, which is always correct.  However, the current UnwindInst abstraction does not allow any way to generate this DWARF CFI instruction.  Therefore, we introduce a new UnwindInst::RegStackOffset rule for this purpose.</p>\n<p>Fixes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9719\">https://github.com/bytecodealliance/wasmtime/issues/9719</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 485990232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733275966
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9725#pullrequestreview-2479107223\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this!</p>\n</blockquote>",
        "id": 486119610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733326233
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9725\">PR #9725</a>.</p>",
        "id": 486123687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733327263
    }
]