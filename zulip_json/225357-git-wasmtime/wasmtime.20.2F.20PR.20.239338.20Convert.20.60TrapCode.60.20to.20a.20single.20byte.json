[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a> from <code>alexcrichton:make-trap-just-a-byte</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit refactors the representation of<br>\n<code>cranelift_codegen::ir::TrapCode</code> to be a single byte. The previous enumeration is replaced with an opaque byte-sized structure. Previous variants that Cranelift uses internally are now associated <code>const</code> values on <code>TrapCode</code> itself. For example <code>TrapCode::IntegerOverflow</code> is now <code>TrapCode::INTEGER_OVERFLOW</code>. All non-Cranelift traps are now removed and exclusively live in the <code>wasmtime-cranelift</code> crate now.</p>\n<p>The representation of a <code>TrapCode</code> is now:</p>\n<ul>\n<li>0 - invalid, used in <code>MemFlags</code> for \"no trap code\"</li>\n<li>1..256-N - user traps</li>\n<li>256-N..256 - built-in Cranelift traps (it uses N of these)</li>\n</ul>\n<p>This enables embedders to have 255-N trap codes which is more than enough for Wasmtime for example. Cranelift reserves a few built-in codes for itself which shouldn't eat too much into the trap space. Additionally if Cranelift needs to grow a new trap it can do so pretty easily too.</p>\n<p>The overall intent of this commit is to reduce the coupling of Wasmtime and Cranelift further and generally refactor Wasmtime to use user traps more often. This additionally shrinks the size of <code>TrapCode</code> for storage in various locations, notably it can now infallibly be represented inside of a <code>MemFlags</code>.</p>\n<p>Closes #9310</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 473865860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727732767
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 473865863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727732768
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 473865864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727732768
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 473865866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727732768
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 473867252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727733273
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 473882324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727738125
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#pullrequestreview-2340788455\">PR review</a>:</p>\n<blockquote>\n<p>Nice! A few nitpicks inline below.</p>\n</blockquote>",
        "id": 474073847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799132
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783117112\">PR review comment</a>:</p>\n<blockquote>\n<p>To make it obvious to readers that we aren't losing bits or anything here:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            Some(code) =&gt; u16::from(code.as_raw()),\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 474073848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799132
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783119719\">PR review comment</a>:</p>\n<blockquote>\n<p>If we are being careful, we should be properly careful</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        match byte.checked_add(Self::RESERVED_START).and_then(NonZeroU8::new) {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 474073849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799132
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783125151\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this take a <code>NonZeroU8</code> or return an <code>Option</code>?</p>\n<p>I would sort of expect that either both this and <code>from_raw</code> do not return <code>Option</code>s and assert validity, or both do the checks and return an option. Having them make different choices is a little funky.</p>\n<p>Could always have <code>fn user(u8) -&gt; Option&lt;TrapCode&gt;</code> and <code>fn unwrap_user(u8) -&gt; TrapCode</code> too I guess.</p>\n</blockquote>",
        "id": 474073850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799132
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783118184\">PR review comment</a>:</p>\n<blockquote>\n<p>Unrelated to this PR, but it seems like we should print heap oob traps, since it is possible to not have any traps...</p>\n</blockquote>",
        "id": 474073851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799132
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783139382\">PR review comment</a>:</p>\n<blockquote>\n<p>What do you think about renaming this to <code>TRAP_INTERNAL_ASSERT</code> while we're here? We emit this not just in debug builds but also in release builds for certain asserts, so the \"debug\" nomenclature has been kind of nagging at me recently.</p>\n</blockquote>",
        "id": 474073853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799132
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#pullrequestreview-2340844845\">PR review</a>.</p>",
        "id": 474074353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799293
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783150813\">PR review comment</a>:</p>\n<blockquote>\n<p>Alas <code>const</code> rust thwarts this as <code>u16::from</code> isn't available in a <code>const</code> context</p>\n</blockquote>",
        "id": 474074354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799293
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#pullrequestreview-2340848456\">PR review</a>.</p>",
        "id": 474074679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799396
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783153006\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, gotcha</p>\n</blockquote>",
        "id": 474074682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799396
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#pullrequestreview-2340853319\">PR review</a>.</p>",
        "id": 474075059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799539
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338#discussion_r1783156003\">PR review comment</a>:</p>\n<blockquote>\n<p>Lack of trap though prints as <code>notrap</code>, so I think we're good?</p>\n</blockquote>",
        "id": 474075060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727799539
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 474076588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727800113
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 474077198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727800308
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 474084691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727802236
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 474084752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727802243
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 474094204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727805147
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9338\">PR #9338</a>.</p>",
        "id": 474099845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727806930
    }
]