[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391\">PR #5391</a>.</p>",
        "id": 314386880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670395566
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391\">PR #5391</a> from <code>egraph-opts</code> to <code>main</code>:</p>\n<blockquote>\n<p>It turns out that there was a decent amount of low-hanging fruit:</p>\n<ul>\n<li>\n<p>Save elaborated results by canonical value, not latest value (union value). Previously we were artificially skipping and re-elaborating some values we already had because we were not finding them in the map.</p>\n</li>\n<li>\n<p>Make some changes to handling of icmp results: when icmp became I8-typed (when bools went away), many uses became <code>(uextend $I32 (icmp $I8 ...))</code>, and so patterns in lowering backends were no longer matching.</p>\n<p>This PR includes an x64-specific change to match <code>(brz (uextend (icmp ...)))</code> and similarly for <code>brnz</code>, but it also takes advantage of the ability to write rules easily in the egraph mid-end to rewrite selects with icmp inputs appropriately.</p>\n</li>\n<li>\n<p>Extend constprop to understand selects in the egraph mid-end.</p>\n</li>\n</ul>\n<p>With these changes, bz2.wasm sees a ~1% speedup, and spidermonkey.wasm with a fib.js input sees a ~16% speedup (measured over 5 runs; CPU frequency scaling disabled, pinned to 1 core), with methodology:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">allow</span><span class=\"o\">-</span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"p\">.</span><span class=\"n\">base</span><span class=\"p\">.</span><span class=\"n\">cwasm</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"></span>\n<span class=\"mi\">1346269</span><span class=\"w\"></span>\n<span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">allow</span><span class=\"o\">-</span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"w\">  </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\">  </span><span class=\"mf\">2.14</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">0.01</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mf\">2.148</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">allow</span><span class=\"o\">-</span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"p\">.</span><span class=\"n\">egraphs</span><span class=\"p\">.</span><span class=\"n\">cwasm</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\"></span>\n<span class=\"mi\">1346269</span><span class=\"w\"></span>\n<span class=\"n\">taskset</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">allow</span><span class=\"o\">-</span><span class=\"n\">precompiled</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"w\">  </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">fib</span><span class=\"p\">.</span><span class=\"n\">js</span><span class=\"w\">  </span><span class=\"mf\">1.78</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">0.01</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mf\">1.788</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"w\"></span>\n</code></pre></div>\n<p>My basic strategy here was to stare at disassemblies of the hottest basic blocks when running the above, and pick out what looked like suboptimal code. I suspect doing the same for other benchmarks would possibly yield more benefits.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 314386881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670395566
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391\">PR #5391</a>.</p>",
        "id": 314386882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670395566
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391\">PR #5391</a>.</p>",
        "id": 314386883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670395566
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391\">PR #5391</a> from <code>egraph-opts</code> to <code>main</code>.</p>",
        "id": 314387560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670396016
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391#pullrequestreview-1207861915\">PR review</a>.</p>",
        "id": 314388520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670396572
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391#pullrequestreview-1207861915\">PR review</a>.</p>",
        "id": 314388521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670396572
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391#discussion_r1041825651\">PR review comment</a>:</p>\n<blockquote>\n<p>There's already an <code>intcc_inverse</code> in <code>prelude_lower.isle</code>, implemented in <code>machinst/isle.rs</code>. Can you move that to the prelude instead of introducing a new copy? Maybe move the other <code>intcc</code> and <code>floatcc</code> constructors at the same time, just so they're all in one place.</p>\n</blockquote>",
        "id": 314388522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670396572
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391\">PR #5391</a> from <code>egraph-opts</code> to <code>main</code>.</p>",
        "id": 314509065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670432504
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391#pullrequestreview-1208800313\">PR review</a>.</p>",
        "id": 314509219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670432524
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391#discussion_r1042464153\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I hadn't seen that; updated, thanks!</p>\n</blockquote>",
        "id": 314509223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670432524
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391#pullrequestreview-1209140111\">PR review</a>.</p>",
        "id": 314560150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670448152
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5391\">PR #5391</a>.</p>",
        "id": 314560260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670448195
    }
]