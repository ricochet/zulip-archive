[
    {
        "content": "<p>Zhangyx24 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4437\">issue #4437</a>:</p>\n<blockquote>\n<h2>Cli</h2>\n<p>As shown in documentation, there are 2 ways to execute wasm, JIT and AOT.</p>\n<h4>(1) JIT</h4>\n<p><code>wasmtime run xxx.wasm</code></p>\n<h4>(2)AOT</h4>\n<p><code>wasmtime compile xxx.wasm</code><br>\n<code>wasmtime run --precompiled xxx.cwasm</code><br>\nAre these two ways different ?</p>\n<h2>Rust api</h2>\n<p>How to execute in rust api through JIT and AOT ?</p>\n</blockquote>",
        "id": 289422750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657696345
    },
    {
        "content": "<p>Zhangyx24 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4437\">issue #4437</a>:</p>\n<blockquote>\n<h2>Cli</h2>\n<p>As shown in documentation, there are 2 ways to execute wasm, JIT and AOT.</p>\n<h4>(1) JIT</h4>\n<p><code>wasmtime run xxx.wasm</code></p>\n<h4>(2)AOT</h4>\n<p><code>wasmtime compile xxx.wasm</code><br>\n<code>wasmtime run --allow-precompiled xxx.cwasm</code><br>\nAre these two ways different ?</p>\n<h2>Rust api</h2>\n<p>How to execute in rust api through JIT and AOT ?</p>\n</blockquote>",
        "id": 289422778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657696378
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4437#issuecomment-1182861928\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4437\">issue #4437</a>:</p>\n<blockquote>\n<p>You can use <code>Module::new</code>, <code>Module::from_file</code> or <code>Module::from_binary</code> for JIT compilation. For AOT compilation you first JIT compile and then call <code>.serialize()</code> on the resulting compiled module to get a blob you can write to a file (eg with the <code>.cwasm</code> extension). You can then use <code>Module::deserialize</code> or <code>Module::deserialize_file</code> to load the serialized module into memory again.</p>\n</blockquote>",
        "id": 289423574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657697108
    },
    {
        "content": "<p>Zhangyx24 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4437#issuecomment-1182863138\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4437\">issue #4437</a>:</p>\n<blockquote>\n<p>Thanks for your answer !</p>\n</blockquote>",
        "id": 289423692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657697198
    },
    {
        "content": "<p>Zhangyx24 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4437\">issue #4437</a>:</p>\n<blockquote>\n<h2>Cli</h2>\n<p>As shown in documentation, there are 2 ways to execute wasm, JIT and AOT.</p>\n<h4>(1) JIT</h4>\n<p><code>wasmtime run xxx.wasm</code></p>\n<h4>(2)AOT</h4>\n<p><code>wasmtime compile xxx.wasm</code><br>\n<code>wasmtime run --allow-precompiled xxx.cwasm</code><br>\nAre these two ways different ?</p>\n<h2>Rust api</h2>\n<p>How to execute in rust api through JIT and AOT ?</p>\n</blockquote>",
        "id": 289423695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657697200
    }
]