[
    {
        "content": "<p><a href=\"https://github.com/orangeC23\">orangeC23</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">Issue #7264</a>.</p>",
        "id": 397020511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697515073
    },
    {
        "content": "<p>orangeC23 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<p>(1) The cfile is :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Data/hello.txt\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_RDWR</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">// Open a file for reading</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Failed to open the file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">posix_fallocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error allocating file space\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File '%s' created and allocated with %lld bytes of space.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">myfd</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fstat</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">file_info</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting file attributes\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Size: %lld bytes </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Permissions: %o </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_mode</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">S_IFMT</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Owner UID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_uid</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Group GID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_gid</span><span class=\"p\">);</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lseek</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_CUR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting current offset\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current offset: %lld </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">cur_offset</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error closing file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Leave snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n<span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">into</span><span class=\"w\"> </span><span class=\"n\">wasm</span>: <span class=\"err\">`</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">-</span><span class=\"mf\">16.0</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unkown</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">sysroot</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">-</span><span class=\"mf\">16.0</span><span class=\"o\">/</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sysroot</span><span class=\"w\"> </span><span class=\"n\">test1</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">test1</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n<span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"n\">exeute</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\">  </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"o\">=</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">Data</span><span class=\"w\"> </span><span class=\"n\">test1</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">The</span><span class=\"w\"> </span><span class=\"n\">permission</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">Data</span><span class=\"o\">/</span><span class=\"n\">hello</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mi\">0600</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">user1</span><span class=\"w\"> </span><span class=\"n\">create</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">Data</span><span class=\"o\">/</span><span class=\"n\">hello</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">before</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">user1</span><span class=\"w\"> </span><span class=\"n\">execute</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">.</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Other runtime print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">File</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">Data</span><span class=\"o\">/</span><span class=\"n\">hello</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">created</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">allocated</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Size</span>: <span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">bytes</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Permissions</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Owner</span><span class=\"w\"> </span><span class=\"n\">UID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">GID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Leave</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n</code></pre></div>\n<p>And the file size is change into 58.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">allocating</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">space</span>: <span class=\"nc\">Success</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">getting</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">attributes</span>: <span class=\"nc\">Bad</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span>\n</code></pre></div>\n<p>And file size remains 30.</p>\n<h3>Versions and Environment</h3>\n<p>wasmtime 13.0.0<br>\nOperating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 397020512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697515074
    },
    {
        "content": "<p>orangeC23 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<p>(1) The cfile is :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Data/hello.txt\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_RDWR</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">// Open a file for reading</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Failed to open the file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">posix_fallocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error allocating file space\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File '%s' created and allocated with %lld bytes of space.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">myfd</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fstat</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">file_info</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting file attributes\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Size: %lld bytes </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Permissions: %o </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_mode</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">S_IFMT</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Owner UID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_uid</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Group GID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_gid</span><span class=\"p\">);</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lseek</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_CUR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting current offset\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current offset: %lld </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">cur_offset</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error closing file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Leave snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>(2)compile the c file into wasm: <code>./wasi-sdk-16.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-16.0/share/wasi-sysroot test1.c -o test1.wasm</code><br>\n(3)exeute open.wasm<br>\n<code>wasmtime run  --dir=./Data test1.wasm</code><br>\nThe permission of Data/hello.txt is 0600, user1 create the Data/hello.txt file before and user1 execute the Wasm file.</p>\n<h3>Expected Results</h3>\n<p>Other runtime print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">File</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">Data</span><span class=\"o\">/</span><span class=\"n\">hello</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">created</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">allocated</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Size</span>: <span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">bytes</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Permissions</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Owner</span><span class=\"w\"> </span><span class=\"n\">UID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">GID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Leave</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n</code></pre></div>\n<p>And the file size is change into 58.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">allocating</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">space</span>: <span class=\"nc\">Success</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">getting</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">attributes</span>: <span class=\"nc\">Bad</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span>\n</code></pre></div>\n<p>And file size remains 30.</p>\n<h3>Versions and Environment</h3>\n<p>wasmtime 13.0.0<br>\nOperating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 397020579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697515100
    },
    {
        "content": "<p>orangeC23 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<p>(1) The cfile is :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Data/hello.txt\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_RDWR</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">// Open a file for reading</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Failed to open the file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">posix_fallocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error allocating file space\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File '%s' created and allocated with %lld bytes of space.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">myfd</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fstat</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">file_info</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting file attributes\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Size: %lld bytes </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Permissions: %o </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_mode</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">S_IFMT</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Owner UID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_uid</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Group GID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_gid</span><span class=\"p\">);</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lseek</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_CUR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting current offset\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current offset: %lld </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">cur_offset</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error closing file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Leave snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>(2)compile the c file into wasm: <code>./wasi-sdk-16.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-16.0/share/wasi-sysroot test1.c -o test1.wasm</code><br>\n(3)exeute open.wasm<br>\n<code>wasmtime run  --dir=./Data test1.wasm</code><br>\nThe permission of Data/hello.txt is 0600 or 0700, user1 create the Data/hello.txt file before and user1 execute the Wasm file.</p>\n<h3>Expected Results</h3>\n<p>Other runtime print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">File</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">Data</span><span class=\"o\">/</span><span class=\"n\">hello</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">created</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">allocated</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Size</span>: <span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">bytes</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Permissions</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Owner</span><span class=\"w\"> </span><span class=\"n\">UID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">GID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Leave</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n</code></pre></div>\n<p>And the file size is change into 58.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">allocating</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">space</span>: <span class=\"nc\">Success</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">getting</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">attributes</span>: <span class=\"nc\">Bad</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span>\n</code></pre></div>\n<p>And file size remains 30.</p>\n<h3>Versions and Environment</h3>\n<p>wasmtime 13.0.0<br>\nOperating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 397020654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697515156
    },
    {
        "content": "<p>orangeC23 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<p>(1) The cfile is :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Data/hello.txt\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_RDWR</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">// Open a file for reading</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Failed to open the file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">posix_fallocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error allocating file space\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File '%s' created and allocated with %lld bytes of space.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">myfd</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fstat</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">file_info</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting file attributes\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Size: %lld bytes </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Permissions: %o </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_mode</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">S_IFMT</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Owner UID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_uid</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Group GID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_gid</span><span class=\"p\">);</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lseek</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_CUR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting current offset\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current offset: %lld </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">cur_offset</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error closing file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Leave snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>(2)compile the c file into wasm: <code>./wasi-sdk-16.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-16.0/share/wasi-sysroot test1.c -o test1.wasm</code><br>\n(3)exeute open.wasm<br>\n<code>wasmtime run  --dir=./Data test1.wasm</code><br>\nThe permission of Data/hello.txt is 0600 or 0700, user1 create the Data/hello.txt file before and user1 execute the Wasm file.</p>\n<h3>Expected Results</h3>\n<p>Other runtime print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">File</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">Data</span><span class=\"o\">/</span><span class=\"n\">hello</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">created</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">allocated</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Size</span>: <span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">bytes</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Permissions</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Owner</span><span class=\"w\"> </span><span class=\"n\">UID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">GID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Leave</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n</code></pre></div>\n<p>And the file size is change into 58.</p>\n<p>And using <code>gcc test1.c -o test1</code> and <code>./test1</code> to execute also get this result.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">allocating</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">space</span>: <span class=\"nc\">Success</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">getting</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">attributes</span>: <span class=\"nc\">Bad</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span>\n</code></pre></div>\n<p>And file size remains 30.</p>\n<h3>Versions and Environment</h3>\n<p>wasmtime 13.0.0<br>\nOperating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 397032937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697521882
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264#issuecomment-1766532019\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<p>Thanks for the report! The reason this is happening is that <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9e4d44626a008f8a1b1b3b4a48f0d5693185844b/crates/wasi-common/src/snapshots/preview_1.rs#L132-L136\"><code>fd_allocate</code> is no longer supported</a>. That's being removed from WASI and Wasmtime has preemptively adapted to the latest version of WASI. Other runtimes haven't caught up yet I suspect.</p>\n</blockquote>",
        "id": 397121030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697552781
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<h3>Steps to Reproduce</h3>\n<p>(1) The cfile is :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"Data/hello.txt\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_RDWR</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocateLuGpoE0tKi</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">19</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">get_fd</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"c1\">// Open a file for reading</span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">file_name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">open_style</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Failed to open the file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd_allocate</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">posix_fallocate</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start_value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">len_value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error allocating file space\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File '%s' created and allocated with %lld bytes of space.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">len_value</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">snapshot</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">myfd</span><span class=\"p\">){</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fstat</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">file_info</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting file attributes\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Size: %lld bytes </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Permissions: %o </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_mode</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"n\">S_IFMT</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Owner UID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_uid</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"File Group GID: %d </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">file_info</span><span class=\"p\">.</span><span class=\"n\">st_gid</span><span class=\"p\">);</span>\n\n\n<span class=\"w\">    </span><span class=\"n\">off_t</span><span class=\"w\"> </span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">lseek</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SEEK_CUR</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cur_offset</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error getting current offset\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current offset: %lld </span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"p\">)</span><span class=\"n\">cur_offset</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">myfd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Error closing file\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Leave snapshot</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>(2)compile the c file into wasm: <code>./wasi-sdk-16.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-16.0/share/wasi-sysroot test1.c -o test1.wasm</code><br>\n(3)exeute open.wasm<br>\n<code>wasmtime run  --dir=./Data test1.wasm</code><br>\nThe permission of Data/hello.txt is 0600 or 0700, user1 create the Data/hello.txt file before and user1 execute the Wasm file.</p>\n<h3>Expected Results</h3>\n<p>Other runtime print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">File</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">Data</span><span class=\"o\">/</span><span class=\"n\">hello</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">created</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">allocated</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"mi\">39</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"p\">.</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Size</span>: <span class=\"mi\">58</span><span class=\"w\"> </span><span class=\"n\">bytes</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Permissions</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Owner</span><span class=\"w\"> </span><span class=\"n\">UID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">File</span><span class=\"w\"> </span><span class=\"n\">Group</span><span class=\"w\"> </span><span class=\"n\">GID</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"mi\">0</span>\n<span class=\"n\">Leave</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n</code></pre></div>\n<p>And the file size is change into 58.</p>\n<p>And using <code>gcc test1.c -o test1</code> and <code>./test1</code> to execute also get this result.</p>\n<h3>Actual Results</h3>\n<p>wasmtime prints:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">allocating</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">space</span>: <span class=\"nc\">Success</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">snapshot</span>\n<span class=\"n\">Error</span><span class=\"w\"> </span><span class=\"n\">getting</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">attributes</span>: <span class=\"nc\">Bad</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span>\n</code></pre></div>\n<p>And file size remains 30.</p>\n<h3>Versions and Environment</h3>\n<p>wasmtime 13.0.0<br>\nOperating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 397121032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697552781
    },
    {
        "content": "<p>orangeC23 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264#issuecomment-1767454041\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<p>Thanks for your reply. How can I view the changes in WASI compared to before? Is there any documentation? Thank you!</p>\n</blockquote>",
        "id": 397208206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697592432
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264#issuecomment-1769157364\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<p>You can follow the <a href=\"https://github.com/WebAssembly/WASI\">https://github.com/WebAssembly/WASI</a> repository, but I don't believe changes are exhaustively mentioned yet. Such processes evolve over time and aren't present immediately.</p>\n</blockquote>",
        "id": 397369925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697656124
    },
    {
        "content": "<p>orangeC23 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264#issuecomment-1772336633\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7264\">issue #7264</a>:</p>\n<blockquote>\n<p>Thanks !</p>\n</blockquote>",
        "id": 397662144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697791841
    }
]