[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a> from <code>alexcrichton:enable-memory64</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The memory64 proposal for WebAssembly moved to phase 4 early last November which was the final remaining blocker for enabling it in Wasmtime. I've gone ahead and enabled it here with all the other checkboxes being ticked such as:</p>\n<ul>\n<li>\n<p>Tests - all spec tests are enabled and we have a few tests here and there for memory64 behavior throughout the unit test suite.</p>\n</li>\n<li>\n<p>Finished - this proposal's memory-facing bits have been done for quite some time and the final 64-bit table bits have been done for a bit now as well.</p>\n</li>\n<li>\n<p>Fuzzed - this is enabled in <code>wasm-smith</code> and additionally has custom fuzzing via the <code>memory_accesses</code> fuzzer.</p>\n</li>\n<li>\n<p>API - all APIs related to memory work with <code>u64</code> values to accommodate 64-bit memories and the 64-bit-ness is reflected in the type of memories.</p>\n</li>\n<li>\n<p>C API - the C API's functions for working with memories all reflect 64-bit indices like the Rust API.</p>\n</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 492187177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736198373
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>.</p>",
        "id": 492187179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736198374
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>.</p>",
        "id": 492187180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736198374
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>.</p>",
        "id": 492187181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736198374
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937#issuecomment-2574123889\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 492209627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736207102
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937#pullrequestreview-2537451363\">PR review</a>:</p>\n<blockquote>\n<p>LGTM.  Do we need to do anything special (that hasn't already been done) to indicate that memory64 is not yet compatible with components?  Or will that be caught by <code>wasmparser</code> at validation time?</p>\n</blockquote>",
        "id": 492526154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736349533
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937#issuecomment-2578005562\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>:</p>\n<blockquote>\n<p>Oh you know that's a good point. I haven't checked up on the state of memory64 and components in awhile. I know some parts support some things but not all, and I suspect that there are a number of memory64-related panics in Wasmtime which I should convert to errors first before landing this.</p>\n</blockquote>",
        "id": 492531891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736351249
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937#issuecomment-2578087941\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>:</p>\n<blockquote>\n<p>On review looks like less has support for this than I thought. I've opted to go with a <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1970\">wasmparser validation change</a> for now since components <a href=\"https://github.com/WebAssembly/component-model/issues/22\">don't currently specify</a> how everything works anyway.</p>\n</blockquote>",
        "id": 492538523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736353332
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937#issuecomment-2578920991\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>:</p>\n<blockquote>\n<p>I'm going to flag this for merging now that wasmparser has been updated and components reject memory64-based memories explicitly.</p>\n</blockquote>",
        "id": 492604944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736381269
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9937\">PR #9937</a>.</p>",
        "id": 492606848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736382379
    }
]