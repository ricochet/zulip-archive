[
    {
        "content": "<p>bnjbvr labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1809\">Issue #1809</a>:</p>\n<blockquote>\n<p>Fuzz bug found by cargo-fuzz on a Raspberry PI 4; the following wasm module crashes the new backend on aarch64:</p>\n<p>&lt;details&gt;<br>\n(module<br>\n  (type $t0 (func (result i32)))<br>\n  (type $t1 (func (param i32)))<br>\n  (type $t2 (func (param i32) (result i32)))<br>\n  (func $hello (export \"hello\") (type $t0) (result i32)<br>\n    (local $l0 i32)<br>\n    (if $I0<br>\n      (i32.eqz<br>\n        (local.tee $l0<br>\n          (call $f2)))<br>\n      (then<br>\n        (unreachable)))<br>\n    (i32.store8 offset=4<br>\n      (local.get $l0)<br>\n      (i32.const 42))<br>\n    (local.get $l0))<br>\n  (func $goodbye (export \"goodbye\") (type $t1) (param $p0 i32)<br>\n    (call $f4<br>\n      (local.get $p0)))<br>\n  (func $f2 (type $t0) (result i32)<br>\n    (local $l0 i32) (local $l1 i32) (local $l2 i32)<br>\n    (global.set $g0<br>\n      (local.tee $l1<br>\n        (i32.sub<br>\n          (global.get $g0)<br>\n          (i32.const 16))))<br>\n    (i32.store offset=12<br>\n      (local.get $l1)<br>\n      (i32.load<br>\n        (i32.const 1048576)))<br>\n    (block $B0<br>\n      (br_if $B0<br>\n        (local.tee $l0<br>\n          (call $f3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 12)))))<br>\n      (local.set $l0<br>\n        (i32.const 0))<br>\n      (br_if $B0<br>\n        (i32.eq<br>\n          (local.tee $l2<br>\n            (memory.grow<br>\n              (i32.const 1)))<br>\n          (i32.const -1)))<br>\n      (i32.store<br>\n        (local.tee $l0<br>\n          (i32.shl<br>\n            (local.get $l2)<br>\n            (i32.const 16)))<br>\n        (i32.add<br>\n          (local.get $l0)<br>\n          (i32.const 65643)))<br>\n      (i32.store offset=4<br>\n        (local.get $l0)<br>\n        (i32.const 0))<br>\n      (i32.store offset=8<br>\n        (local.get $l0)<br>\n        (i32.load offset=12<br>\n          (local.get $l1)))<br>\n      (i32.store offset=12<br>\n        (local.get $l1)<br>\n        (local.get $l0))<br>\n      (local.set $l0<br>\n        (call $f3<br>\n          (i32.add<br>\n            (local.get $l1)<br>\n            (i32.const 12)))))<br>\n    (i32.store offset=64<br>\n      (i32.const 1048576)<br>\n      (i32.load offset=12<br>\n        (local.get $l1)))<br>\n    (global.set $g0<br>\n      (i32.add<br>\n        (local.get $l1)<br>\n        (i32.const 16)))<br>\n    (local.get $l0))<br>\n  (func $f3 (type $t2) (param $p0 i32) (result i32)<br>\n    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)<br>\n    (if $I0<br>\n      (local.tee $l1<br>\n        (i32.load<br>\n          (local.get $p0)))<br>\n      (then<br>\n        (loop $L1<br>\n          (local.set $l3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 8)))<br>\n          (if $I2<br>\n            (i32.and<br>\n              (local.tee $l4<br>\n                (i32.load offset=8<br>\n                  (local.get $l1)))<br>\n              (i32.const 1))<br>\n            (then<br>\n              (loop $L3<br>\n                (local.get $l3)<br>\n                (i64.load32_u<br>\n                  (i32.and<br>\n                    (local.get $l4)<br>\n                    (i32.const -2)))<br>\n                (local.set $l2<br>\n                  (block $B4 (result i32)<br>\n                    (drop<br>\n                      (br_if $B4<br>\n                        (i32.const 0)<br>\n                        (i32.eqz<br>\n                          (local.tee $l3<br>\n                            (i32.and<br>\n                              (local.tee $l4<br>\n                                (i32.load offset=4<br>\n                                  (local.get $l1)))<br>\n                              (i32.const -4))))))<br>\n                    (select<br>\n                      (i32.const 0)<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load8_u<br>\n                          (local.get $l3))<br>\n                        (i32.const 1)))))<br>\n                (local.get $l1)<br>\n                (if $I5<br>\n                  (i32.eqz<br>\n                    (i32.or<br>\n                      (i32.eqz<br>\n                        (local.tee $l5<br>\n                          (i32.and<br>\n                            (local.tee $l6<br>\n                              (i32.load<br>\n                                (local.get $l5)))<br>\n                            (i32.const -4))))<br>\n                      (i32.and<br>\n                        (local.get $l6)<br>\n                        (i32.const 2))))<br>\n                  (then<br>\n                    (i32.store offset=4<br>\n                      (local.get $l5)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=4<br>\n                            (local.get $l5))<br>\n                          (i32.const 3))<br>\n                        (local.get $l3)))<br>\n                    (local.set $l3<br>\n                      (i32.and<br>\n                        (local.tee $l4<br>\n                          (i32.load offset=4<br>\n                            (local.get $l1)))<br>\n                        (i32.const -4)))))<br>\n                (i32.and<br>\n                  (if $I6 (result i32)<br>\n                    (local.get $l3)<br>\n                    (then<br>\n                      (i32.store<br>\n                        (local.get $l3)<br>\n                        (i32.or<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l3))<br>\n                            (i32.const 3))<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l1))<br>\n                            (i32.const -4))))<br>\n                      (i32.load offset=4<br>\n                        (local.get $l1)))<br>\n                    (else<br>\n                      (local.get $l4)))<br>\n                  (i32.const 3))<br>\n                (i32.store offset=4)<br>\n                (local.get $l1)<br>\n                (local.get $l1)<br>\n                (i32.store<br>\n                  (local.get $l2)<br>\n                  (i32.and<br>\n                    (local.tee $l1<br>\n                      (unreachable))<br>\n                    (i32.const 3)))<br>\n                (if $I7<br>\n                  (i32.and<br>\n                    (local.get $l1)<br>\n                    (i32.const 2))<br>\n                  (then<br>\n                    (i32.store<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.load<br>\n                          (local.get $l2))<br>\n                        (i32.const 6)))))<br>\n                (i32.store<br>\n                  (local.get $p0)<br>\n                  (local.get $l2))<br>\n                (local.set $l3<br>\n                  (i32.add<br>\n                    (local.get $l2)<br>\n                    (i32.const 8)))<br>\n                (br_if $L3<br>\n                  (i32.and<br>\n                    (local.tee $l4<br>\n                      (i32.load offset=8<br>\n                        (local.tee $l1<br>\n                          (local.get $l2))))<br>\n                    (i32.const -32))))))<br>\n          (if $I8<br>\n            (i32.ge_u<br>\n              (i32.sub<br>\n                (local.tee $l2<br>\n                  (i32.and<br>\n                    (i32.load<br>\n                      (local.get $l1))<br>\n                    (i32.const -4)))<br>\n                (local.get $l3))<br>\n              (i32.const 4))<br>\n            (then<br>\n              (loop $L9<br>\n                (if $I10<br>\n                  (i32.le_u<br>\n                    (i32.add<br>\n                      (local.get $l3)<br>\n                      (i32.const 72))<br>\n                    (i32.add<br>\n                      (local.get $l2)<br>\n                      (i32.const -4)))<br>\n                  (then<br>\n                    (local.tee $l2<br>\n                      (i32.add<br>\n                        (local.get $l2)<br>\n                        (i32.const -12)))<br>\n                    (i64.load32_u offset=8<br>\n                      (i32.const 0))<br>\n                    (i64.store align=4<br>\n                      (local.get $l2)<br>\n                      (i64.const 0))<br>\n                    (local.get $l2)<br>\n                    (i32.store<br>\n                      (i32.load<br>\n                        (local.get $l1))<br>\n                      (i32.clz<br>\n                        (i32.const -4)))<br>\n                    (local.tee $l4<br>\n                      (i32.load<br>\n                        (local.get $l1)))<br>\n                    (if $I11<br>\n                      (i32.eqz<br>\n                        (i32.or<br>\n                          (i32.eqz<br>\n                            (local.tee $p0<br>\n                              (i32.const -1828)))<br>\n                          (i32.and<br>\n                            (local.get $l4)<br>\n                            (i32.const 2))))<br>\n                      (then<br>\n                        (i32.store offset=4<br>\n                          (local.get $p0)<br>\n                          (i32.or<br>\n                            (i32.and<br>\n                              (i32.load offset=36<br>\n                                (local.get $p0))<br>\n                              (i32.const 3))<br>\n                            (local.get $l2)))))<br>\n                    (i32.store offset=4<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=68<br>\n                            (local.get $l2))<br>\n                          (i32.const 19))<br>\n                        (local.get $p0)))<br>\n                    (i32.store<br>\n                      (local.get $l1)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load<br>\n                            (local.get $l1))<br>\n                          (i32.const 3))<br>\n                        (local.get $l2)))<br>\n                    (i32.store<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load<br>\n                          (local.get $l3))<br>\n                        (i32.const -2)))<br>\n                    (br_if $L9<br>\n                      (i32.eqz<br>\n                        (i32.xor<br>\n                          (local.tee $p0<br>\n                            (i32.load offset=2<br>\n                              (local.get $l1)))<br>\n                          (i32.const 2))))</p>\n<p>[message truncated]</p>\n</blockquote>",
        "id": 199635941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591198754
    },
    {
        "content": "<p>bnjbvr labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1809\">Issue #1809</a>:</p>\n<blockquote>\n<p>Fuzz bug found by cargo-fuzz on a Raspberry PI 4; the following wasm module crashes the new backend on aarch64:</p>\n<p>&lt;details&gt;<br>\n(module<br>\n  (type $t0 (func (result i32)))<br>\n  (type $t1 (func (param i32)))<br>\n  (type $t2 (func (param i32) (result i32)))<br>\n  (func $hello (export \"hello\") (type $t0) (result i32)<br>\n    (local $l0 i32)<br>\n    (if $I0<br>\n      (i32.eqz<br>\n        (local.tee $l0<br>\n          (call $f2)))<br>\n      (then<br>\n        (unreachable)))<br>\n    (i32.store8 offset=4<br>\n      (local.get $l0)<br>\n      (i32.const 42))<br>\n    (local.get $l0))<br>\n  (func $goodbye (export \"goodbye\") (type $t1) (param $p0 i32)<br>\n    (call $f4<br>\n      (local.get $p0)))<br>\n  (func $f2 (type $t0) (result i32)<br>\n    (local $l0 i32) (local $l1 i32) (local $l2 i32)<br>\n    (global.set $g0<br>\n      (local.tee $l1<br>\n        (i32.sub<br>\n          (global.get $g0)<br>\n          (i32.const 16))))<br>\n    (i32.store offset=12<br>\n      (local.get $l1)<br>\n      (i32.load<br>\n        (i32.const 1048576)))<br>\n    (block $B0<br>\n      (br_if $B0<br>\n        (local.tee $l0<br>\n          (call $f3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 12)))))<br>\n      (local.set $l0<br>\n        (i32.const 0))<br>\n      (br_if $B0<br>\n        (i32.eq<br>\n          (local.tee $l2<br>\n            (memory.grow<br>\n              (i32.const 1)))<br>\n          (i32.const -1)))<br>\n      (i32.store<br>\n        (local.tee $l0<br>\n          (i32.shl<br>\n            (local.get $l2)<br>\n            (i32.const 16)))<br>\n        (i32.add<br>\n          (local.get $l0)<br>\n          (i32.const 65643)))<br>\n      (i32.store offset=4<br>\n        (local.get $l0)<br>\n        (i32.const 0))<br>\n      (i32.store offset=8<br>\n        (local.get $l0)<br>\n        (i32.load offset=12<br>\n          (local.get $l1)))<br>\n      (i32.store offset=12<br>\n        (local.get $l1)<br>\n        (local.get $l0))<br>\n      (local.set $l0<br>\n        (call $f3<br>\n          (i32.add<br>\n            (local.get $l1)<br>\n            (i32.const 12)))))<br>\n    (i32.store offset=64<br>\n      (i32.const 1048576)<br>\n      (i32.load offset=12<br>\n        (local.get $l1)))<br>\n    (global.set $g0<br>\n      (i32.add<br>\n        (local.get $l1)<br>\n        (i32.const 16)))<br>\n    (local.get $l0))<br>\n  (func $f3 (type $t2) (param $p0 i32) (result i32)<br>\n    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)<br>\n    (if $I0<br>\n      (local.tee $l1<br>\n        (i32.load<br>\n          (local.get $p0)))<br>\n      (then<br>\n        (loop $L1<br>\n          (local.set $l3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 8)))<br>\n          (if $I2<br>\n            (i32.and<br>\n              (local.tee $l4<br>\n                (i32.load offset=8<br>\n                  (local.get $l1)))<br>\n              (i32.const 1))<br>\n            (then<br>\n              (loop $L3<br>\n                (local.get $l3)<br>\n                (i64.load32_u<br>\n                  (i32.and<br>\n                    (local.get $l4)<br>\n                    (i32.const -2)))<br>\n                (local.set $l2<br>\n                  (block $B4 (result i32)<br>\n                    (drop<br>\n                      (br_if $B4<br>\n                        (i32.const 0)<br>\n                        (i32.eqz<br>\n                          (local.tee $l3<br>\n                            (i32.and<br>\n                              (local.tee $l4<br>\n                                (i32.load offset=4<br>\n                                  (local.get $l1)))<br>\n                              (i32.const -4))))))<br>\n                    (select<br>\n                      (i32.const 0)<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load8_u<br>\n                          (local.get $l3))<br>\n                        (i32.const 1)))))<br>\n                (local.get $l1)<br>\n                (if $I5<br>\n                  (i32.eqz<br>\n                    (i32.or<br>\n                      (i32.eqz<br>\n                        (local.tee $l5<br>\n                          (i32.and<br>\n                            (local.tee $l6<br>\n                              (i32.load<br>\n                                (local.get $l5)))<br>\n                            (i32.const -4))))<br>\n                      (i32.and<br>\n                        (local.get $l6)<br>\n                        (i32.const 2))))<br>\n                  (then<br>\n                    (i32.store offset=4<br>\n                      (local.get $l5)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=4<br>\n                            (local.get $l5))<br>\n                          (i32.const 3))<br>\n                        (local.get $l3)))<br>\n                    (local.set $l3<br>\n                      (i32.and<br>\n                        (local.tee $l4<br>\n                          (i32.load offset=4<br>\n                            (local.get $l1)))<br>\n                        (i32.const -4)))))<br>\n                (i32.and<br>\n                  (if $I6 (result i32)<br>\n                    (local.get $l3)<br>\n                    (then<br>\n                      (i32.store<br>\n                        (local.get $l3)<br>\n                        (i32.or<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l3))<br>\n                            (i32.const 3))<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l1))<br>\n                            (i32.const -4))))<br>\n                      (i32.load offset=4<br>\n                        (local.get $l1)))<br>\n                    (else<br>\n                      (local.get $l4)))<br>\n                  (i32.const 3))<br>\n                (i32.store offset=4)<br>\n                (local.get $l1)<br>\n                (local.get $l1)<br>\n                (i32.store<br>\n                  (local.get $l2)<br>\n                  (i32.and<br>\n                    (local.tee $l1<br>\n                      (unreachable))<br>\n                    (i32.const 3)))<br>\n                (if $I7<br>\n                  (i32.and<br>\n                    (local.get $l1)<br>\n                    (i32.const 2))<br>\n                  (then<br>\n                    (i32.store<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.load<br>\n                          (local.get $l2))<br>\n                        (i32.const 6)))))<br>\n                (i32.store<br>\n                  (local.get $p0)<br>\n                  (local.get $l2))<br>\n                (local.set $l3<br>\n                  (i32.add<br>\n                    (local.get $l2)<br>\n                    (i32.const 8)))<br>\n                (br_if $L3<br>\n                  (i32.and<br>\n                    (local.tee $l4<br>\n                      (i32.load offset=8<br>\n                        (local.tee $l1<br>\n                          (local.get $l2))))<br>\n                    (i32.const -32))))))<br>\n          (if $I8<br>\n            (i32.ge_u<br>\n              (i32.sub<br>\n                (local.tee $l2<br>\n                  (i32.and<br>\n                    (i32.load<br>\n                      (local.get $l1))<br>\n                    (i32.const -4)))<br>\n                (local.get $l3))<br>\n              (i32.const 4))<br>\n            (then<br>\n              (loop $L9<br>\n                (if $I10<br>\n                  (i32.le_u<br>\n                    (i32.add<br>\n                      (local.get $l3)<br>\n                      (i32.const 72))<br>\n                    (i32.add<br>\n                      (local.get $l2)<br>\n                      (i32.const -4)))<br>\n                  (then<br>\n                    (local.tee $l2<br>\n                      (i32.add<br>\n                        (local.get $l2)<br>\n                        (i32.const -12)))<br>\n                    (i64.load32_u offset=8<br>\n                      (i32.const 0))<br>\n                    (i64.store align=4<br>\n                      (local.get $l2)<br>\n                      (i64.const 0))<br>\n                    (local.get $l2)<br>\n                    (i32.store<br>\n                      (i32.load<br>\n                        (local.get $l1))<br>\n                      (i32.clz<br>\n                        (i32.const -4)))<br>\n                    (local.tee $l4<br>\n                      (i32.load<br>\n                        (local.get $l1)))<br>\n                    (if $I11<br>\n                      (i32.eqz<br>\n                        (i32.or<br>\n                          (i32.eqz<br>\n                            (local.tee $p0<br>\n                              (i32.const -1828)))<br>\n                          (i32.and<br>\n                            (local.get $l4)<br>\n                            (i32.const 2))))<br>\n                      (then<br>\n                        (i32.store offset=4<br>\n                          (local.get $p0)<br>\n                          (i32.or<br>\n                            (i32.and<br>\n                              (i32.load offset=36<br>\n                                (local.get $p0))<br>\n                              (i32.const 3))<br>\n                            (local.get $l2)))))<br>\n                    (i32.store offset=4<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=68<br>\n                            (local.get $l2))<br>\n                          (i32.const 19))<br>\n                        (local.get $p0)))<br>\n                    (i32.store<br>\n                      (local.get $l1)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load<br>\n                            (local.get $l1))<br>\n                          (i32.const 3))<br>\n                        (local.get $l2)))<br>\n                    (i32.store<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load<br>\n                          (local.get $l3))<br>\n                        (i32.const -2)))<br>\n                    (br_if $L9<br>\n                      (i32.eqz<br>\n                        (i32.xor<br>\n                          (local.tee $p0<br>\n                            (i32.load offset=2<br>\n                              (local.get $l1)))<br>\n                          (i32.const 2))))</p>\n<p>[message truncated]</p>\n</blockquote>",
        "id": 199635942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591198754
    },
    {
        "content": "<p>bnjbvr labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1809\">Issue #1809</a>:</p>\n<blockquote>\n<p>Fuzz bug found by cargo-fuzz on a Raspberry PI 4; the following wasm module crashes the new backend on aarch64:</p>\n<p>&lt;details&gt;<br>\n(module<br>\n  (type $t0 (func (result i32)))<br>\n  (type $t1 (func (param i32)))<br>\n  (type $t2 (func (param i32) (result i32)))<br>\n  (func $hello (export \"hello\") (type $t0) (result i32)<br>\n    (local $l0 i32)<br>\n    (if $I0<br>\n      (i32.eqz<br>\n        (local.tee $l0<br>\n          (call $f2)))<br>\n      (then<br>\n        (unreachable)))<br>\n    (i32.store8 offset=4<br>\n      (local.get $l0)<br>\n      (i32.const 42))<br>\n    (local.get $l0))<br>\n  (func $goodbye (export \"goodbye\") (type $t1) (param $p0 i32)<br>\n    (call $f4<br>\n      (local.get $p0)))<br>\n  (func $f2 (type $t0) (result i32)<br>\n    (local $l0 i32) (local $l1 i32) (local $l2 i32)<br>\n    (global.set $g0<br>\n      (local.tee $l1<br>\n        (i32.sub<br>\n          (global.get $g0)<br>\n          (i32.const 16))))<br>\n    (i32.store offset=12<br>\n      (local.get $l1)<br>\n      (i32.load<br>\n        (i32.const 1048576)))<br>\n    (block $B0<br>\n      (br_if $B0<br>\n        (local.tee $l0<br>\n          (call $f3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 12)))))<br>\n      (local.set $l0<br>\n        (i32.const 0))<br>\n      (br_if $B0<br>\n        (i32.eq<br>\n          (local.tee $l2<br>\n            (memory.grow<br>\n              (i32.const 1)))<br>\n          (i32.const -1)))<br>\n      (i32.store<br>\n        (local.tee $l0<br>\n          (i32.shl<br>\n            (local.get $l2)<br>\n            (i32.const 16)))<br>\n        (i32.add<br>\n          (local.get $l0)<br>\n          (i32.const 65643)))<br>\n      (i32.store offset=4<br>\n        (local.get $l0)<br>\n        (i32.const 0))<br>\n      (i32.store offset=8<br>\n        (local.get $l0)<br>\n        (i32.load offset=12<br>\n          (local.get $l1)))<br>\n      (i32.store offset=12<br>\n        (local.get $l1)<br>\n        (local.get $l0))<br>\n      (local.set $l0<br>\n        (call $f3<br>\n          (i32.add<br>\n            (local.get $l1)<br>\n            (i32.const 12)))))<br>\n    (i32.store offset=64<br>\n      (i32.const 1048576)<br>\n      (i32.load offset=12<br>\n        (local.get $l1)))<br>\n    (global.set $g0<br>\n      (i32.add<br>\n        (local.get $l1)<br>\n        (i32.const 16)))<br>\n    (local.get $l0))<br>\n  (func $f3 (type $t2) (param $p0 i32) (result i32)<br>\n    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)<br>\n    (if $I0<br>\n      (local.tee $l1<br>\n        (i32.load<br>\n          (local.get $p0)))<br>\n      (then<br>\n        (loop $L1<br>\n          (local.set $l3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 8)))<br>\n          (if $I2<br>\n            (i32.and<br>\n              (local.tee $l4<br>\n                (i32.load offset=8<br>\n                  (local.get $l1)))<br>\n              (i32.const 1))<br>\n            (then<br>\n              (loop $L3<br>\n                (local.get $l3)<br>\n                (i64.load32_u<br>\n                  (i32.and<br>\n                    (local.get $l4)<br>\n                    (i32.const -2)))<br>\n                (local.set $l2<br>\n                  (block $B4 (result i32)<br>\n                    (drop<br>\n                      (br_if $B4<br>\n                        (i32.const 0)<br>\n                        (i32.eqz<br>\n                          (local.tee $l3<br>\n                            (i32.and<br>\n                              (local.tee $l4<br>\n                                (i32.load offset=4<br>\n                                  (local.get $l1)))<br>\n                              (i32.const -4))))))<br>\n                    (select<br>\n                      (i32.const 0)<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load8_u<br>\n                          (local.get $l3))<br>\n                        (i32.const 1)))))<br>\n                (local.get $l1)<br>\n                (if $I5<br>\n                  (i32.eqz<br>\n                    (i32.or<br>\n                      (i32.eqz<br>\n                        (local.tee $l5<br>\n                          (i32.and<br>\n                            (local.tee $l6<br>\n                              (i32.load<br>\n                                (local.get $l5)))<br>\n                            (i32.const -4))))<br>\n                      (i32.and<br>\n                        (local.get $l6)<br>\n                        (i32.const 2))))<br>\n                  (then<br>\n                    (i32.store offset=4<br>\n                      (local.get $l5)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=4<br>\n                            (local.get $l5))<br>\n                          (i32.const 3))<br>\n                        (local.get $l3)))<br>\n                    (local.set $l3<br>\n                      (i32.and<br>\n                        (local.tee $l4<br>\n                          (i32.load offset=4<br>\n                            (local.get $l1)))<br>\n                        (i32.const -4)))))<br>\n                (i32.and<br>\n                  (if $I6 (result i32)<br>\n                    (local.get $l3)<br>\n                    (then<br>\n                      (i32.store<br>\n                        (local.get $l3)<br>\n                        (i32.or<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l3))<br>\n                            (i32.const 3))<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l1))<br>\n                            (i32.const -4))))<br>\n                      (i32.load offset=4<br>\n                        (local.get $l1)))<br>\n                    (else<br>\n                      (local.get $l4)))<br>\n                  (i32.const 3))<br>\n                (i32.store offset=4)<br>\n                (local.get $l1)<br>\n                (local.get $l1)<br>\n                (i32.store<br>\n                  (local.get $l2)<br>\n                  (i32.and<br>\n                    (local.tee $l1<br>\n                      (unreachable))<br>\n                    (i32.const 3)))<br>\n                (if $I7<br>\n                  (i32.and<br>\n                    (local.get $l1)<br>\n                    (i32.const 2))<br>\n                  (then<br>\n                    (i32.store<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.load<br>\n                          (local.get $l2))<br>\n                        (i32.const 6)))))<br>\n                (i32.store<br>\n                  (local.get $p0)<br>\n                  (local.get $l2))<br>\n                (local.set $l3<br>\n                  (i32.add<br>\n                    (local.get $l2)<br>\n                    (i32.const 8)))<br>\n                (br_if $L3<br>\n                  (i32.and<br>\n                    (local.tee $l4<br>\n                      (i32.load offset=8<br>\n                        (local.tee $l1<br>\n                          (local.get $l2))))<br>\n                    (i32.const -32))))))<br>\n          (if $I8<br>\n            (i32.ge_u<br>\n              (i32.sub<br>\n                (local.tee $l2<br>\n                  (i32.and<br>\n                    (i32.load<br>\n                      (local.get $l1))<br>\n                    (i32.const -4)))<br>\n                (local.get $l3))<br>\n              (i32.const 4))<br>\n            (then<br>\n              (loop $L9<br>\n                (if $I10<br>\n                  (i32.le_u<br>\n                    (i32.add<br>\n                      (local.get $l3)<br>\n                      (i32.const 72))<br>\n                    (i32.add<br>\n                      (local.get $l2)<br>\n                      (i32.const -4)))<br>\n                  (then<br>\n                    (local.tee $l2<br>\n                      (i32.add<br>\n                        (local.get $l2)<br>\n                        (i32.const -12)))<br>\n                    (i64.load32_u offset=8<br>\n                      (i32.const 0))<br>\n                    (i64.store align=4<br>\n                      (local.get $l2)<br>\n                      (i64.const 0))<br>\n                    (local.get $l2)<br>\n                    (i32.store<br>\n                      (i32.load<br>\n                        (local.get $l1))<br>\n                      (i32.clz<br>\n                        (i32.const -4)))<br>\n                    (local.tee $l4<br>\n                      (i32.load<br>\n                        (local.get $l1)))<br>\n                    (if $I11<br>\n                      (i32.eqz<br>\n                        (i32.or<br>\n                          (i32.eqz<br>\n                            (local.tee $p0<br>\n                              (i32.const -1828)))<br>\n                          (i32.and<br>\n                            (local.get $l4)<br>\n                            (i32.const 2))))<br>\n                      (then<br>\n                        (i32.store offset=4<br>\n                          (local.get $p0)<br>\n                          (i32.or<br>\n                            (i32.and<br>\n                              (i32.load offset=36<br>\n                                (local.get $p0))<br>\n                              (i32.const 3))<br>\n                            (local.get $l2)))))<br>\n                    (i32.store offset=4<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=68<br>\n                            (local.get $l2))<br>\n                          (i32.const 19))<br>\n                        (local.get $p0)))<br>\n                    (i32.store<br>\n                      (local.get $l1)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load<br>\n                            (local.get $l1))<br>\n                          (i32.const 3))<br>\n                        (local.get $l2)))<br>\n                    (i32.store<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load<br>\n                          (local.get $l3))<br>\n                        (i32.const -2)))<br>\n                    (br_if $L9<br>\n                      (i32.eqz<br>\n                        (i32.xor<br>\n                          (local.tee $p0<br>\n                            (i32.load offset=2<br>\n                              (local.get $l1)))<br>\n                          (i32.const 2))))</p>\n<p>[message truncated]</p>\n</blockquote>",
        "id": 199635943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591198754
    },
    {
        "content": "<p>bnjbvr opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1809\">Issue #1809</a>:</p>\n<blockquote>\n<p>Fuzz bug found by cargo-fuzz on a Raspberry PI 4; the following wasm module crashes the new backend on aarch64:</p>\n<p>&lt;details&gt;<br>\n(module<br>\n  (type $t0 (func (result i32)))<br>\n  (type $t1 (func (param i32)))<br>\n  (type $t2 (func (param i32) (result i32)))<br>\n  (func $hello (export \"hello\") (type $t0) (result i32)<br>\n    (local $l0 i32)<br>\n    (if $I0<br>\n      (i32.eqz<br>\n        (local.tee $l0<br>\n          (call $f2)))<br>\n      (then<br>\n        (unreachable)))<br>\n    (i32.store8 offset=4<br>\n      (local.get $l0)<br>\n      (i32.const 42))<br>\n    (local.get $l0))<br>\n  (func $goodbye (export \"goodbye\") (type $t1) (param $p0 i32)<br>\n    (call $f4<br>\n      (local.get $p0)))<br>\n  (func $f2 (type $t0) (result i32)<br>\n    (local $l0 i32) (local $l1 i32) (local $l2 i32)<br>\n    (global.set $g0<br>\n      (local.tee $l1<br>\n        (i32.sub<br>\n          (global.get $g0)<br>\n          (i32.const 16))))<br>\n    (i32.store offset=12<br>\n      (local.get $l1)<br>\n      (i32.load<br>\n        (i32.const 1048576)))<br>\n    (block $B0<br>\n      (br_if $B0<br>\n        (local.tee $l0<br>\n          (call $f3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 12)))))<br>\n      (local.set $l0<br>\n        (i32.const 0))<br>\n      (br_if $B0<br>\n        (i32.eq<br>\n          (local.tee $l2<br>\n            (memory.grow<br>\n              (i32.const 1)))<br>\n          (i32.const -1)))<br>\n      (i32.store<br>\n        (local.tee $l0<br>\n          (i32.shl<br>\n            (local.get $l2)<br>\n            (i32.const 16)))<br>\n        (i32.add<br>\n          (local.get $l0)<br>\n          (i32.const 65643)))<br>\n      (i32.store offset=4<br>\n        (local.get $l0)<br>\n        (i32.const 0))<br>\n      (i32.store offset=8<br>\n        (local.get $l0)<br>\n        (i32.load offset=12<br>\n          (local.get $l1)))<br>\n      (i32.store offset=12<br>\n        (local.get $l1)<br>\n        (local.get $l0))<br>\n      (local.set $l0<br>\n        (call $f3<br>\n          (i32.add<br>\n            (local.get $l1)<br>\n            (i32.const 12)))))<br>\n    (i32.store offset=64<br>\n      (i32.const 1048576)<br>\n      (i32.load offset=12<br>\n        (local.get $l1)))<br>\n    (global.set $g0<br>\n      (i32.add<br>\n        (local.get $l1)<br>\n        (i32.const 16)))<br>\n    (local.get $l0))<br>\n  (func $f3 (type $t2) (param $p0 i32) (result i32)<br>\n    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)<br>\n    (if $I0<br>\n      (local.tee $l1<br>\n        (i32.load<br>\n          (local.get $p0)))<br>\n      (then<br>\n        (loop $L1<br>\n          (local.set $l3<br>\n            (i32.add<br>\n              (local.get $l1)<br>\n              (i32.const 8)))<br>\n          (if $I2<br>\n            (i32.and<br>\n              (local.tee $l4<br>\n                (i32.load offset=8<br>\n                  (local.get $l1)))<br>\n              (i32.const 1))<br>\n            (then<br>\n              (loop $L3<br>\n                (local.get $l3)<br>\n                (i64.load32_u<br>\n                  (i32.and<br>\n                    (local.get $l4)<br>\n                    (i32.const -2)))<br>\n                (local.set $l2<br>\n                  (block $B4 (result i32)<br>\n                    (drop<br>\n                      (br_if $B4<br>\n                        (i32.const 0)<br>\n                        (i32.eqz<br>\n                          (local.tee $l3<br>\n                            (i32.and<br>\n                              (local.tee $l4<br>\n                                (i32.load offset=4<br>\n                                  (local.get $l1)))<br>\n                              (i32.const -4))))))<br>\n                    (select<br>\n                      (i32.const 0)<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load8_u<br>\n                          (local.get $l3))<br>\n                        (i32.const 1)))))<br>\n                (local.get $l1)<br>\n                (if $I5<br>\n                  (i32.eqz<br>\n                    (i32.or<br>\n                      (i32.eqz<br>\n                        (local.tee $l5<br>\n                          (i32.and<br>\n                            (local.tee $l6<br>\n                              (i32.load<br>\n                                (local.get $l5)))<br>\n                            (i32.const -4))))<br>\n                      (i32.and<br>\n                        (local.get $l6)<br>\n                        (i32.const 2))))<br>\n                  (then<br>\n                    (i32.store offset=4<br>\n                      (local.get $l5)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=4<br>\n                            (local.get $l5))<br>\n                          (i32.const 3))<br>\n                        (local.get $l3)))<br>\n                    (local.set $l3<br>\n                      (i32.and<br>\n                        (local.tee $l4<br>\n                          (i32.load offset=4<br>\n                            (local.get $l1)))<br>\n                        (i32.const -4)))))<br>\n                (i32.and<br>\n                  (if $I6 (result i32)<br>\n                    (local.get $l3)<br>\n                    (then<br>\n                      (i32.store<br>\n                        (local.get $l3)<br>\n                        (i32.or<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l3))<br>\n                            (i32.const 3))<br>\n                          (i32.and<br>\n                            (i32.load<br>\n                              (local.get $l1))<br>\n                            (i32.const -4))))<br>\n                      (i32.load offset=4<br>\n                        (local.get $l1)))<br>\n                    (else<br>\n                      (local.get $l4)))<br>\n                  (i32.const 3))<br>\n                (i32.store offset=4)<br>\n                (local.get $l1)<br>\n                (local.get $l1)<br>\n                (i32.store<br>\n                  (local.get $l2)<br>\n                  (i32.and<br>\n                    (local.tee $l1<br>\n                      (unreachable))<br>\n                    (i32.const 3)))<br>\n                (if $I7<br>\n                  (i32.and<br>\n                    (local.get $l1)<br>\n                    (i32.const 2))<br>\n                  (then<br>\n                    (i32.store<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.load<br>\n                          (local.get $l2))<br>\n                        (i32.const 6)))))<br>\n                (i32.store<br>\n                  (local.get $p0)<br>\n                  (local.get $l2))<br>\n                (local.set $l3<br>\n                  (i32.add<br>\n                    (local.get $l2)<br>\n                    (i32.const 8)))<br>\n                (br_if $L3<br>\n                  (i32.and<br>\n                    (local.tee $l4<br>\n                      (i32.load offset=8<br>\n                        (local.tee $l1<br>\n                          (local.get $l2))))<br>\n                    (i32.const -32))))))<br>\n          (if $I8<br>\n            (i32.ge_u<br>\n              (i32.sub<br>\n                (local.tee $l2<br>\n                  (i32.and<br>\n                    (i32.load<br>\n                      (local.get $l1))<br>\n                    (i32.const -4)))<br>\n                (local.get $l3))<br>\n              (i32.const 4))<br>\n            (then<br>\n              (loop $L9<br>\n                (if $I10<br>\n                  (i32.le_u<br>\n                    (i32.add<br>\n                      (local.get $l3)<br>\n                      (i32.const 72))<br>\n                    (i32.add<br>\n                      (local.get $l2)<br>\n                      (i32.const -4)))<br>\n                  (then<br>\n                    (local.tee $l2<br>\n                      (i32.add<br>\n                        (local.get $l2)<br>\n                        (i32.const -12)))<br>\n                    (i64.load32_u offset=8<br>\n                      (i32.const 0))<br>\n                    (i64.store align=4<br>\n                      (local.get $l2)<br>\n                      (i64.const 0))<br>\n                    (local.get $l2)<br>\n                    (i32.store<br>\n                      (i32.load<br>\n                        (local.get $l1))<br>\n                      (i32.clz<br>\n                        (i32.const -4)))<br>\n                    (local.tee $l4<br>\n                      (i32.load<br>\n                        (local.get $l1)))<br>\n                    (if $I11<br>\n                      (i32.eqz<br>\n                        (i32.or<br>\n                          (i32.eqz<br>\n                            (local.tee $p0<br>\n                              (i32.const -1828)))<br>\n                          (i32.and<br>\n                            (local.get $l4)<br>\n                            (i32.const 2))))<br>\n                      (then<br>\n                        (i32.store offset=4<br>\n                          (local.get $p0)<br>\n                          (i32.or<br>\n                            (i32.and<br>\n                              (i32.load offset=36<br>\n                                (local.get $p0))<br>\n                              (i32.const 3))<br>\n                            (local.get $l2)))))<br>\n                    (i32.store offset=4<br>\n                      (local.get $l2)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load offset=68<br>\n                            (local.get $l2))<br>\n                          (i32.const 19))<br>\n                        (local.get $p0)))<br>\n                    (i32.store<br>\n                      (local.get $l1)<br>\n                      (i32.or<br>\n                        (i32.and<br>\n                          (i32.load<br>\n                            (local.get $l1))<br>\n                          (i32.const 3))<br>\n                        (local.get $l2)))<br>\n                    (i32.store<br>\n                      (local.get $l3)<br>\n                      (i32.and<br>\n                        (i32.load<br>\n                          (local.get $l3))<br>\n                        (i32.const -2)))<br>\n                    (br_if $L9<br>\n                      (i32.eqz<br>\n                        (i32.xor<br>\n                          (local.tee $p0<br>\n                            (i32.load offset=2<br>\n                              (local.get $l1)))<br>\n                          (i32.const 2))))</p>\n<p>[message truncated]</p>\n</blockquote>",
        "id": 199635945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591198754
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1809#issuecomment-638278760\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1809\">Issue #1809</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 199635959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591198767
    },
    {
        "content": "<p>bnjbvr edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1809\">Issue #1809</a>:</p>\n<blockquote>\n<p>Fuzz bug found by cargo-fuzz on a Raspberry PI 4; the following wasm module crashes the new backend on aarch64:</p>\n<p>&lt;details&gt;</p>\n<div class=\"codehilite\"><pre><span></span><code>(module\n  (type $t0 (func (result i32)))\n  (type $t1 (func (param i32)))\n  (type $t2 (func (param i32) (result i32)))\n  (func $hello (export &quot;hello&quot;) (type $t0) (result i32)\n    (local $l0 i32)\n    (if $I0\n      (i32.eqz\n        (local.tee $l0\n          (call $f2)))\n      (then\n        (unreachable)))\n    (i32.store8 offset=4\n      (local.get $l0)\n      (i32.const 42))\n    (local.get $l0))\n  (func $goodbye (export &quot;goodbye&quot;) (type $t1) (param $p0 i32)\n    (call $f4\n      (local.get $p0)))\n  (func $f2 (type $t0) (result i32)\n    (local $l0 i32) (local $l1 i32) (local $l2 i32)\n    (global.set $g0\n      (local.tee $l1\n        (i32.sub\n          (global.get $g0)\n          (i32.const 16))))\n    (i32.store offset=12\n      (local.get $l1)\n      (i32.load\n        (i32.const 1048576)))\n    (block $B0\n      (br_if $B0\n        (local.tee $l0\n          (call $f3\n            (i32.add\n              (local.get $l1)\n              (i32.const 12)))))\n      (local.set $l0\n        (i32.const 0))\n      (br_if $B0\n        (i32.eq\n          (local.tee $l2\n            (memory.grow\n              (i32.const 1)))\n          (i32.const -1)))\n      (i32.store\n        (local.tee $l0\n          (i32.shl\n            (local.get $l2)\n            (i32.const 16)))\n        (i32.add\n          (local.get $l0)\n          (i32.const 65643)))\n      (i32.store offset=4\n        (local.get $l0)\n        (i32.const 0))\n      (i32.store offset=8\n        (local.get $l0)\n        (i32.load offset=12\n          (local.get $l1)))\n      (i32.store offset=12\n        (local.get $l1)\n        (local.get $l0))\n      (local.set $l0\n        (call $f3\n          (i32.add\n            (local.get $l1)\n            (i32.const 12)))))\n    (i32.store offset=64\n      (i32.const 1048576)\n      (i32.load offset=12\n        (local.get $l1)))\n    (global.set $g0\n      (i32.add\n        (local.get $l1)\n        (i32.const 16)))\n    (local.get $l0))\n  (func $f3 (type $t2) (param $p0 i32) (result i32)\n    (local $l1 i32) (local $l2 i32) (local $l3 i32) (local $l4 i32) (local $l5 i32) (local $l6 i32)\n    (if $I0\n      (local.tee $l1\n        (i32.load\n          (local.get $p0)))\n      (then\n        (loop $L1\n          (local.set $l3\n            (i32.add\n              (local.get $l1)\n              (i32.const 8)))\n          (if $I2\n            (i32.and\n              (local.tee $l4\n                (i32.load offset=8\n                  (local.get $l1)))\n              (i32.const 1))\n            (then\n              (loop $L3\n                (local.get $l3)\n                (i64.load32_u\n                  (i32.and\n                    (local.get $l4)\n                    (i32.const -2)))\n                (local.set $l2\n                  (block $B4 (result i32)\n                    (drop\n                      (br_if $B4\n                        (i32.const 0)\n                        (i32.eqz\n                          (local.tee $l3\n                            (i32.and\n                              (local.tee $l4\n                                (i32.load offset=4\n                                  (local.get $l1)))\n                              (i32.const -4))))))\n                    (select\n                      (i32.const 0)\n                      (local.get $l3)\n                      (i32.and\n                        (i32.load8_u\n                          (local.get $l3))\n                        (i32.const 1)))))\n                (local.get $l1)\n                (if $I5\n                  (i32.eqz\n                    (i32.or\n                      (i32.eqz\n                        (local.tee $l5\n                          (i32.and\n                            (local.tee $l6\n                              (i32.load\n                                (local.get $l5)))\n                            (i32.const -4))))\n                      (i32.and\n                        (local.get $l6)\n                        (i32.const 2))))\n                  (then\n                    (i32.store offset=4\n                      (local.get $l5)\n                      (i32.or\n                        (i32.and\n                          (i32.load offset=4\n                            (local.get $l5))\n                          (i32.const 3))\n                        (local.get $l3)))\n                    (local.set $l3\n                      (i32.and\n                        (local.tee $l4\n                          (i32.load offset=4\n                            (local.get $l1)))\n                        (i32.const -4)))))\n                (i32.and\n                  (if $I6 (result i32)\n                    (local.get $l3)\n                    (then\n                      (i32.store\n                        (local.get $l3)\n                        (i32.or\n                          (i32.and\n                            (i32.load\n                              (local.get $l3))\n                            (i32.const 3))\n                          (i32.and\n                            (i32.load\n                              (local.get $l1))\n                            (i32.const -4))))\n                      (i32.load offset=4\n                        (local.get $l1)))\n                    (else\n                      (local.get $l4)))\n                  (i32.const 3))\n                (i32.store offset=4)\n                (local.get $l1)\n                (local.get $l1)\n                (i32.store\n                  (local.get $l2)\n                  (i32.and\n                    (local.tee $l1\n                      (unreachable))\n                    (i32.const 3)))\n                (if $I7\n                  (i32.and\n                    (local.get $l1)\n                    (i32.const 2))\n                  (then\n                    (i32.store\n                      (local.get $l2)\n                      (i32.or\n                        (i32.load\n                          (local.get $l2))\n                        (i32.const 6)))))\n                (i32.store\n                  (local.get $p0)\n                  (local.get $l2))\n                (local.set $l3\n                  (i32.add\n                    (local.get $l2)\n                    (i32.const 8)))\n                (br_if $L3\n                  (i32.and\n                    (local.tee $l4\n                      (i32.load offset=8\n                        (local.tee $l1\n                          (local.get $l2))))\n                    (i32.const -32))))))\n          (if $I8\n            (i32.ge_u\n              (i32.sub\n                (local.tee $l2\n                  (i32.and\n                    (i32.load\n                      (local.get $l1))\n                    (i32.const -4)))\n                (local.get $l3))\n              (i32.const 4))\n            (then\n              (loop $L9\n                (if $I10\n                  (i32.le_u\n                    (i32.add\n                      (local.get $l3)\n                      (i32.const 72))\n                    (i32.add\n                      (local.get $l2)\n                      (i32.const -4)))\n                  (then\n                    (local.tee $l2\n                      (i32.add\n                        (local.get $l2)\n                        (i32.const -12)))\n                    (i64.load32_u offset=8\n                      (i32.const 0))\n                    (i64.store align=4\n                      (local.get $l2)\n                      (i64.const 0))\n                    (local.get $l2)\n                    (i32.store\n                      (i32.load\n                        (local.get $l1))\n                      (i32.clz\n                        (i32.const -4)))\n                    (local.tee $l4\n                      (i32.load\n                        (local.get $l1)))\n                    (if $I11\n                      (i32.eqz\n                        (i32.or\n                          (i32.eqz\n                            (local.tee $p0\n                              (i32.const -1828)))\n                          (i32.and\n                            (local.get $l4)\n                            (i32.const 2))))\n                      (then\n                        (i32.store offset=4\n                          (local.get $p0)\n                          (i32.or\n                            (i32.and\n                              (i32.load offset=36\n                                (local.get $p0))\n                              (i32.const 3))\n                            (local.get $l2)))))\n                    (i32.store offset=4\n                      (local.get $l2)\n                      (i32.or\n                        (i32.and\n                          (i32.load offset=68\n                            (local.get $l2))\n                          (i32.const 19))\n                        (local.get $p0)))\n                    (i32.store\n                      (local.get $l1)\n                      (i32.or\n                        (i32.and\n                          (i32.load\n                            (local.get $l1))\n                          (i32.const 3))\n                        (local.get $l2)))\n                    (i32.store\n                      (local.get $l3)\n                      (i32.and\n                        (i32.load\n                          (local.get $l3))\n                        (i32.const -2)))\n                    (br_if $L9\n                      (i32.eqz\n                        (i32.xor\n                          (local.tee $p0\n                            (i32.load offset=2\n                              (local.get $l1)))\n                          (i32.const 2))))\n\n[message truncated]\n</code></pre></div>\n\n\n</blockquote>",
        "id": 199635970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591198773
    }
]