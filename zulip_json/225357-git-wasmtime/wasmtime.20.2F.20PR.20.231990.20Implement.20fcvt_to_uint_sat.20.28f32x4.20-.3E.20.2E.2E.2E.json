[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1990\">PR #1990</a> from <code>trunc-sat-unsigned-again</code> to <code>main</code>:</p>\n<blockquote>\n<p>This replaces #1822; it consists of the same functionality but removes the AVX512 instruction lowering for the time being. There are two reasons for this:</p>\n<ul>\n<li>the default MXCSR rounding is round to nearest even, which does not match the semantics required by <a href=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#floating-point-to-integer-with-saturation\"><code>i32x4.trunc_sat_f32x4_u</code></a>. We can then use embedded rounding control but lose the ability to specify the vector length, so the instruction would operate on 512-bits which we should discuss (@sunfishcode has reported issues with 512-bit vectors in Spidermonkey)</li>\n<li>the output of <code>VCVTPS2UDQ</code> for negative lanes is <code>0xFFFFFFFF</code> (I had thought it would be <code>0x00000000</code>); this can be resolved with the following sequence: <code>v0 = pxor ...; v2 = fcmp gte v1, v0 (gte ensures they are ordered); v3 = vcvtps2udq v1; v4 = band v2, v3</code>. However, I would like to look at this a little bit more before submitting a separate PR for it (this is the reason for keeping the legalization in <code>enc_tables.rs</code> and under <code>narrow_avx</code>, BTW).</li>\n</ul>\n</blockquote>",
        "id": 203135247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594143635
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1990\">PR #1990</a>.</p>",
        "id": 203135564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594143831
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1990\">PR #1990</a> from <code>trunc-sat-unsigned-again</code> to <code>main</code>:</p>\n<blockquote>\n<p>This replaces #1822; it consists of the same functionality but removes the AVX512 instruction lowering for the time being. There are two reasons for this:</p>\n<ul>\n<li>the default MXCSR rounding is round to nearest even, which does not match the semantics required by <a href=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#floating-point-to-integer-with-saturation\"><code>i32x4.trunc_sat_f32x4_u</code></a>. We can then use embedded rounding control but lose the ability to specify the vector length, so the instruction would operate on 512-bits which we should discuss (@sunfishcode has reported issues with 512-bit vectors in Spidermonkey)</li>\n<li>the output of <code>VCVTPS2UDQ</code> for negative lanes is <code>0xFFFFFFFF</code> (I had thought it would be <code>0x00000000</code>); this can be resolved with the following sequence: <code>v0 = pxor ...; v2 = fcmp gte v1, v0 (gte ensures they are ordered); v3 = vcvtps2udq v1; v4 = band v2, v3</code>. However, I would like to look at this a little bit more before submitting a separate PR for it (this is the reason for keeping the legalization in <code>enc_tables.rs</code> and under <code>narrow_avx</code>, BTW).</li>\n</ul>\n</blockquote>",
        "id": 203286482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594224151
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1990#pullrequestreview-444920631\">PR Review</a>.</p>",
        "id": 203287704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594224697
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1990\">PR #1990</a> from <code>trunc-sat-unsigned-again</code> to <code>main</code>:</p>\n<blockquote>\n<p>This replaces #1822; it consists of the same functionality but removes the AVX512 instruction lowering for the time being. There are two reasons for this:</p>\n<ul>\n<li>the default MXCSR rounding is round to nearest even, which does not match the semantics required by <a href=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#floating-point-to-integer-with-saturation\"><code>i32x4.trunc_sat_f32x4_u</code></a>. We can then use embedded rounding control but lose the ability to specify the vector length, so the instruction would operate on 512-bits which we should discuss (@sunfishcode has reported issues with 512-bit vectors in Spidermonkey)</li>\n<li>the output of <code>VCVTPS2UDQ</code> for negative lanes is <code>0xFFFFFFFF</code> (I had thought it would be <code>0x00000000</code>); this can be resolved with the following sequence: <code>v0 = pxor ...; v2 = fcmp gte v1, v0 (gte ensures they are ordered); v3 = vcvtps2udq v1; v4 = band v2, v3</code>. However, I would like to look at this a little bit more before submitting a separate PR for it (this is the reason for keeping the legalization in <code>enc_tables.rs</code> and under <code>narrow_avx</code>, BTW).</li>\n</ul>\n</blockquote>",
        "id": 203288791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594225159
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1990\">PR #1990</a>.</p>",
        "id": 203296085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594228803
    }
]