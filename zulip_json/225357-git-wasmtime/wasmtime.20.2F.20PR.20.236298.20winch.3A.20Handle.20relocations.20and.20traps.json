[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a> from <code>saulecabrera:winch-handle-relocs-and-traps</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change introduces handling of traps and relocations in Winch, which was left out in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6119\">https://github.com/bytecodealliance/wasmtime/pull/6119</a>.</p>\n<p>In order to so, this change moves the <code>CompiledFunction</code> struct to the <code>wasmtime-cranelift-shared</code> crate, allowing Cranelift and Winch to operate on a single, shared representation, following some of the ideas discussed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5944\">https://github.com/bytecodealliance/wasmtime/pull/5944</a>.</p>\n<p>Even though Winch doesn't rely on all the fields of <code>CompiledFunction</code>, it eventually will. With the addition of relocations and traps it started to be more evident that even if we wanted to have different representations of a compiled function, they would end up being very similar.</p>\n<p>This change also consolidates where the <code>traps</code> and <code>relocations</code> of the <code>CompiledFunction</code> get created, by introducing a constructor that operates on a <code>MachBufferFinalized&lt;Final&gt;</code>, esentially encapsulating this process in a single place for both Winch and Cranelift.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 353416697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682617559
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 353452963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682622955
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#pullrequestreview-1404763701\">PR review</a>:</p>\n<blockquote>\n<p>I've got a possible high-level idea which might help simplify things by removing the number of types in flight, but irrespective of which way we go on that this looks reasonable to me!</p>\n</blockquote>",
        "id": 353461719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682624408
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#pullrequestreview-1404763701\">PR review</a>:</p>\n<blockquote>\n<p>I've got a possible high-level idea which might help simplify things by removing the number of types in flight, but irrespective of which way we go on that this looks reasonable to me!</p>\n</blockquote>",
        "id": 353461720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682624409
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#discussion_r1179603816\">PR review comment</a>:</p>\n<blockquote>\n<p>One thing I attempted a long time ago but didn't get a chance to finish, which I think might simplify the winch/cranelift duo in the long run, is to replace this entire structure with <code>MachBufferFinalized</code>. Most of these fields are already present within there and the copies here are simple translations from Cranelift datatypes to <code>wasmtime-cranelift-shared</code> datatypes. In such a situation I think it'd be better to leave everything at-rest as Cranelift datatypes and only much later, for example when inserting into an object, is anything translated from Cranelift.</p>\n<p>Would you be up for exploring such a change like this?</p>\n</blockquote>",
        "id": 353461721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682624409
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#discussion_r1179605119\">PR review comment</a>:</p>\n<blockquote>\n<p>This is an example where ideally we'd \"simply\" feed in a <code>&amp;MachBufferFinalized</code> into this function so you wouldn't have to pass all these extra fields manually. That's at least the rough idea, unsure how it'll play out in practice.</p>\n</blockquote>",
        "id": 353461722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682624409
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#discussion_r1179614984\">PR review comment</a>:</p>\n<blockquote>\n<p>Right, I see what you mean. Instead of eagerly converting from <code>MachBufferFinalized&lt;T&gt;</code> into the current <code>CompiledFunction</code> in <code>compile_function</code>, the idea would be to defer any conversions when needed, e.g. in <code>append_code</code> for example. </p>\n<p>Now that I'm a bit more acquainted with this part of the codebase I think I can try this out. </p>\n</blockquote>",
        "id": 353465882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682625107
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 354990533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682981407
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 354990972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682981651
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 354992482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682982499
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 355130687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683029594
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 355131372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683029762
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 355197623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683043346
    },
    {
        "content": "<p><strong>saulecabrera</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a> as ready for review.</p>",
        "id": 355217484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683047940
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/itsrainy\">itsrainy</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 355217493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683047941
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 355217498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683047942
    },
    {
        "content": "<p><strong>itsrainy</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 355243510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683054397
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298#pullrequestreview-1409781354\">PR review</a>:</p>\n<blockquote>\n<p>Looks reasonable to me!</p>\n</blockquote>",
        "id": 355251056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683056746
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6298\">PR #6298</a>.</p>",
        "id": 355257631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683058960
    }
]