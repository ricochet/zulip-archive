[
    {
        "content": "<p>MartinKolbAtWork opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2855\">Issue #2855</a>:</p>\n<blockquote>\n<p>When calling <code>wasi_config_delete()</code> on a configuration that was created with <code>wasi_config_new()</code>, I get a <code>Segmentation fault</code>.</p>\n<h3>Test Case</h3>\n<p>I used the official WASI example of wasmtime as a template:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/03077e0de9bc5bb92623d58a1e5d78b828fd1634/examples/wasi/main.c\">main.c</a></p>\n<p>I added <code>wasi_config_delete(wasi_config);</code> in the line before <code>return 0</code> of the <code>main</code> function. I did this because the <strong>documentation</strong> of <code>wasi_config_new()</code> reads: </p>\n<blockquote>\n<p>The caller is expected to deallocate the returned configuration</p>\n</blockquote>\n<h3>Steps to Reproduce</h3>\n<p>Running the program with this one additional line containing <code>wasi_config_delete</code> causes the process to crash with a segmentation fault.</p>\n<p>I discovered that <code>wasi_config_delete</code> can be called without problems <strong>up to the point</strong> when <code>wasi_instance_new</code> is called. It seems that <code>wasi_instance_new</code> <strong>takes ownership</strong> of parts of the data that is stored in <code>wasi_config_t</code>.</p>\n<h3>Expected Results</h3>\n<p><code>wasi_config_delete</code> should delete the <code>wasi_config_t</code> structure without any negative side effects. </p>\n<h3>Actual Results</h3>\n<p>Segfault!</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: Fresh pull of wasmtime on April 19th (200d7f1df668db31baf14f1453ab8cee54724292)</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64 GNU/Linux</p>\n</blockquote>",
        "id": 235499956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619007796
    },
    {
        "content": "<p>MartinKolbAtWork labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2855\">Issue #2855</a>:</p>\n<blockquote>\n<p>When calling <code>wasi_config_delete()</code> on a configuration that was created with <code>wasi_config_new()</code>, I get a <code>Segmentation fault</code>.</p>\n<h3>Test Case</h3>\n<p>I used the official WASI example of wasmtime as a template:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/03077e0de9bc5bb92623d58a1e5d78b828fd1634/examples/wasi/main.c\">main.c</a></p>\n<p>I added <code>wasi_config_delete(wasi_config);</code> in the line before <code>return 0</code> of the <code>main</code> function. I did this because the <strong>documentation</strong> of <code>wasi_config_new()</code> reads: </p>\n<blockquote>\n<p>The caller is expected to deallocate the returned configuration</p>\n</blockquote>\n<h3>Steps to Reproduce</h3>\n<p>Running the program with this one additional line containing <code>wasi_config_delete</code> causes the process to crash with a segmentation fault.</p>\n<p>I discovered that <code>wasi_config_delete</code> can be called without problems <strong>up to the point</strong> when <code>wasi_instance_new</code> is called. It seems that <code>wasi_instance_new</code> <strong>takes ownership</strong> of parts of the data that is stored in <code>wasi_config_t</code>.</p>\n<h3>Expected Results</h3>\n<p><code>wasi_config_delete</code> should delete the <code>wasi_config_t</code> structure without any negative side effects. </p>\n<h3>Actual Results</h3>\n<p>Segfault!</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: Fresh pull of wasmtime on April 19th (200d7f1df668db31baf14f1453ab8cee54724292)</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64 GNU/Linux</p>\n</blockquote>",
        "id": 235499957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619007796
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2855#issuecomment-824091035\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2855\">Issue #2855</a>:</p>\n<blockquote>\n<p>Are you using <a href=\"https://docs.wasmtime.dev/c-api/wasm_8h.html#a86055998306ba65b938cc5bfe479f2f9\"><code>wasm_engine_new_with_config</code></a>? If so that function is documented as taking ownership of the <code>wasm_config_t</code> so you don't need to free it.</p>\n</blockquote>",
        "id": 235516118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619014100
    },
    {
        "content": "<p>MartinKolbAtWork <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2855#issuecomment-824099579\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2855\">Issue #2855</a>:</p>\n<blockquote>\n<blockquote>\n<p>Are you using <a href=\"https://docs.wasmtime.dev/c-api/wasm_8h.html#a86055998306ba65b938cc5bfe479f2f9\"><code>wasm_engine_new_with_config</code></a>? If so that function is documented as taking ownership of the <code>wasm_config_t</code> so you don't need to free it.</p>\n</blockquote>\n<p>@alexcrichton Thanks for pointing this out. Actually I'm using <code>wasi_instance_new</code> , and this function has the same semantics of taking ownership of the config object. I should have read the f***ing manual in more detail ;-)</p>\n<p>I'll close this issue because this information resolves my problem. Thanks for looking into this. </p>\n</blockquote>",
        "id": 235517959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619014786
    },
    {
        "content": "<p>MartinKolbAtWork closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2855\">Issue #2855</a>:</p>\n<blockquote>\n<p>When calling <code>wasi_config_delete()</code> on a configuration that was created with <code>wasi_config_new()</code>, I get a <code>Segmentation fault</code>.</p>\n<h3>Test Case</h3>\n<p>I used the official WASI example of wasmtime as a template:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/03077e0de9bc5bb92623d58a1e5d78b828fd1634/examples/wasi/main.c\">main.c</a></p>\n<p>I added <code>wasi_config_delete(wasi_config);</code> in the line before <code>return 0</code> of the <code>main</code> function. I did this because the <strong>documentation</strong> of <code>wasi_config_new()</code> reads: </p>\n<blockquote>\n<p>The caller is expected to deallocate the returned configuration</p>\n</blockquote>\n<h3>Steps to Reproduce</h3>\n<p>Running the program with this one additional line containing <code>wasi_config_delete</code> causes the process to crash with a segmentation fault.</p>\n<p>I discovered that <code>wasi_config_delete</code> can be called without problems <strong>up to the point</strong> when <code>wasi_instance_new</code> is called. It seems that <code>wasi_instance_new</code> <strong>takes ownership</strong> of parts of the data that is stored in <code>wasi_config_t</code>.</p>\n<h3>Expected Results</h3>\n<p><code>wasi_config_delete</code> should delete the <code>wasi_config_t</code> structure without any negative side effects. </p>\n<h3>Actual Results</h3>\n<p>Segfault!</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: Fresh pull of wasmtime on April 19th (200d7f1df668db31baf14f1453ab8cee54724292)</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64 GNU/Linux</p>\n</blockquote>",
        "id": 235517960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1619014786
    }
]