[
    {
        "content": "<p>brendandburns opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a> from <code>brendandburns:ptr</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is related to the discussion here: <a href=\"https://github.com/WebAssembly/wasi-http/issues/24\">https://github.com/WebAssembly/wasi-http/issues/24</a></p>\n<p>Where we decided that streams should be <code>child-own</code> properties of the request or response that they are tied to.</p>\n<p>This adds clarity to when it is valid to drop an input or output stream and in what order relative to the response.</p>\n</blockquote>",
        "id": 350666691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681791318
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 350666692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681791318
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 350666693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681791319
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 350857656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681842542
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1391329249\">PR review</a>.</p>",
        "id": 350952882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886355
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1391329249\">PR review</a>.</p>",
        "id": 350952883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170865812\">PR review comment</a>:</p>\n<blockquote>\n<p>Doesn't <code>with_context</code> work here?</p>\n</blockquote>",
        "id": 350952884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170855948\">PR review comment</a>:</p>\n<blockquote>\n<p>nit; since we only care about the <code>Some</code> case, how about an <code>if let Some(r) = self.requests.get(&amp;request)</code> instead?</p>\n<p>Or even</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Entry</span>::<span class=\"n\">Occupied</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">requests</span><span class=\"p\">.</span><span class=\"n\">entry</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">   </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">remove</span><span class=\"p\">();</span>\n</code></pre></div>\n<p><a href=\"https://doc.rust-lang.org/std/collections/hash_map/struct.OccupiedEntry.html#method.remove\">https://doc.rust-lang.org/std/collections/hash_map/struct.OccupiedEntry.html#method.remove</a></p>\n</blockquote>",
        "id": 350952886,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170864915\">PR review comment</a>:</p>\n<blockquote>\n<p>If we had a <code>Default</code> trait impl, this could have just called <code>Self::default()</code></p>\n</blockquote>",
        "id": 350952887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170864063\">PR review comment</a>:</p>\n<blockquote>\n<p>How about a <code>derive(Default)</code>?</p>\n</blockquote>",
        "id": 350952889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170867919\">PR review comment</a>:</p>\n<blockquote>\n<p>You wouldn't need this clone if the call to <code>buf.len</code> below was moved higher, before the match.</p>\n</blockquote>",
        "id": 350952891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170869028\">PR review comment</a>:</p>\n<blockquote>\n<p>If we had <code>Default</code> implemented, this could have been <code>unwrap_or_default</code></p>\n</blockquote>",
        "id": 350952892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170869979\">PR review comment</a>:</p>\n<blockquote>\n<p>Looking at the usages of this struct, it seems that a <code>From&lt;Bytes&gt;</code> implementation could really clear this up</p>\n</blockquote>",
        "id": 350952894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1170870723\">PR review comment</a>:</p>\n<blockquote>\n<p>If there was a <code>From</code> implementation, this could have been <code>Stream::from(new.freeze())</code></p>\n</blockquote>",
        "id": 350952895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681886356
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171888926\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately, <code>HashMap::get(...)</code> returns a reference rather than a value, and there's no default for a reference. I could implement the <code>Default</code> trait for <code>&amp;Stream</code> references, but I'm not sure if that's what is best. Let me know.</p>\n</blockquote>",
        "id": 351159144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941128
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171889069\">PR review comment</a>:</p>\n<blockquote>\n<p>done.</p>\n</blockquote>",
        "id": 351159175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941140
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171889135\">PR review comment</a>:</p>\n<blockquote>\n<p>done.</p>\n</blockquote>",
        "id": 351159193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941146
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171889736\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure I'm following your suggestion, can you clarify?</p>\n</blockquote>",
        "id": 351159308,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941209
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171889775\">PR review comment</a>:</p>\n<blockquote>\n<p>done.</p>\n</blockquote>",
        "id": 351159320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941215
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171889837\">PR review comment</a>:</p>\n<blockquote>\n<p>added.</p>\n</blockquote>",
        "id": 351159327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941221
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171889911\">PR review comment</a>:</p>\n<blockquote>\n<p>done.</p>\n</blockquote>",
        "id": 351159333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941228
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171890194\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n<p>Thanks for the suggestion, I'm still learning idiomatic rust)</p>\n</blockquote>",
        "id": 351159420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681941251
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 351161612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681942297
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 351161766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681942353
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171907619\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, I'm referring to this method on the <code>anyhow::Context</code> trait <a href=\"https://docs.rs/anyhow/latest/anyhow/trait.Context.html#tymethod.with_context\">https://docs.rs/anyhow/latest/anyhow/trait.Context.html#tymethod.with_context</a></p>\n<p>If it's in scope, you should be able to call <code>context</code> or <code>with_context</code> (usually used with <code>format!</code> and similar) on most <code>Result</code> and all <code>Option</code> types directly, thus eliminating the need for <code>ok_or_else</code> and explicit <code>anyhow!</code> invocation</p>\n</blockquote>",
        "id": 351162843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681942970
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171914396\">PR review comment</a>:</p>\n<blockquote>\n<p>That makes sense, I think this is fine.<br>\nI am making a few changes here to allow for the host to provide a custom connect implementation, so I'll take a deeper look at this as well next week</p>\n</blockquote>",
        "id": 351164322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681943713
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1392972754\">PR review</a>:</p>\n<blockquote>\n<p>Just a general question, why are we not modifying the stream data buffer, but rather cloning it? In other words, why would we ever want to read the same bytes more than once?</p>\n</blockquote>",
        "id": 351164948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681944040
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1392972754\">PR review</a>:</p>\n<blockquote>\n<p>Just a general question, why are we not modifying the stream data buffer, but rather cloning it? In other words, why would we ever want to read the same bytes more than once?</p>\n</blockquote>",
        "id": 351164949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681944040
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1171915741\">PR review comment</a>:</p>\n<blockquote>\n<p>This should probably also use the <code>From</code> trait</p>\n</blockquote>",
        "id": 351164950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681944041
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1172867237\">PR review comment</a>:</p>\n<blockquote>\n<p>done.</p>\n</blockquote>",
        "id": 351381852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682009863
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1172924825\">PR review comment</a>:</p>\n<blockquote>\n<p>I made those ok_or_else(|| anyhow!(...)) suggestions in a prior PR and wasn't aware that Context could do that for me. Thank you.</p>\n<p>@brendandburns The suggested change here is <code>let st = self.streams.get_mut(&amp;stream).with_context(|| format!(\"stream not found: {stream}\"))?;</code>, or maybe even <code>....get_mut(&amp;stream).context(\"stream not found\")?</code> if leaving out the stream number is ok - and it probably is, because (at least when using the component linker, I'm not sure if it works in module mode) bindgen is inserting <code>tracing</code> statements which someone debugging can recover the values of the arguments from.</p>\n</blockquote>",
        "id": 351394546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682013478
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1172924825\">PR review comment</a>.</p>",
        "id": 351394683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682013507
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1394513739\">PR review</a>.</p>",
        "id": 351395405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682013716
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1394513739\">PR review</a>.</p>",
        "id": 351395406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682013716
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1172927702\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                    bail!(\"cannot write to closed stream\");\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 351395407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682013717
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1394525961\">PR review</a>.</p>",
        "id": 351397041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014170
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#pullrequestreview-1394525961\">PR review</a>.</p>",
        "id": 351397042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014170
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1172935039\">PR review comment</a>:</p>\n<blockquote>\n<p>From <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#issuecomment-1516661764\">https://github.com/bytecodealliance/wasmtime/pull/6228#issuecomment-1516661764</a>, as you said, I think I'd just use <code>BytesMut</code> and <a href=\"https://docs.rs/bytes/latest/bytes/struct.BytesMut.html#method.extend_from_slice\">https://docs.rs/bytes/latest/bytes/struct.BytesMut.html#method.extend_from_slice</a> here</p>\n<p>This that would be quite a bit shorter, it could probably also make sense to remove the match altogether and instead rely on <a href=\"https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.and_modify\">https://doc.rust-lang.org/std/collections/hash_map/enum.Entry.html#method.and_modify</a> (see example there with <code>or_insert</code>)</p>\n</blockquote>",
        "id": 351397044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014170
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1172935039\">PR review comment</a>.</p>",
        "id": 351397202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014203
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 351416313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682020380
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 351473910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682031547
    },
    {
        "content": "<p>brendandburns created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1173160553\">PR review comment</a>:</p>\n<blockquote>\n<p>Done. I needed to use <code>.or_default().extend_from_slice(...)</code> but I think it achieves the same goal (and thanks for the suggestion of implementing <code>Default</code> that made it possible :)</p>\n</blockquote>",
        "id": 351473969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682031591
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">PR #6228</a>.</p>",
        "id": 351710378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682103436
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228#discussion_r1175396247\">PR review comment</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6272\">https://github.com/bytecodealliance/wasmtime/pull/6272</a></p>\n</blockquote>",
        "id": 352298634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682347490
    }
]