[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4948\">issue #4948</a>:</p>\n<blockquote>\n<blockquote>\n<p>One other thought that came back to me while looking at this was that I really wanted to implement <code>vconst</code> (and all other constant accesses for vectors) with the aligned version (<code>MOVDQA</code>, <code>MOVAPS</code>, <code>MOVAPD</code>) instead of the unaligned version we currently use. At the time, it was impossible to ensure that the vector constants were actually aligned so these aligned loads would have trapped--that's why I abandoned that thought, IIRC. But now that may be more possible (?). Now, I'm not sure if this will result in any great latency improvement on most CPUs we use today, but I did wonder if it might improve the cache line story. Just a thought...</p>\n</blockquote>\n<p>_Originally posted by @abrown in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_\">https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_</a></p>\n</blockquote>",
        "id": 300413092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663953028
    },
    {
        "content": "<p>jameysharp labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4948\">issue #4948</a>:</p>\n<blockquote>\n<blockquote>\n<p>One other thought that came back to me while looking at this was that I really wanted to implement <code>vconst</code> (and all other constant accesses for vectors) with the aligned version (<code>MOVDQA</code>, <code>MOVAPS</code>, <code>MOVAPD</code>) instead of the unaligned version we currently use. At the time, it was impossible to ensure that the vector constants were actually aligned so these aligned loads would have trapped--that's why I abandoned that thought, IIRC. But now that may be more possible (?). Now, I'm not sure if this will result in any great latency improvement on most CPUs we use today, but I did wonder if it might improve the cache line story. Just a thought...</p>\n</blockquote>\n<p>_Originally posted by @abrown in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_\">https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_</a></p>\n</blockquote>",
        "id": 300413225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663953090
    },
    {
        "content": "<p>jameysharp labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4948\">issue #4948</a>:</p>\n<blockquote>\n<blockquote>\n<p>One other thought that came back to me while looking at this was that I really wanted to implement <code>vconst</code> (and all other constant accesses for vectors) with the aligned version (<code>MOVDQA</code>, <code>MOVAPS</code>, <code>MOVAPD</code>) instead of the unaligned version we currently use. At the time, it was impossible to ensure that the vector constants were actually aligned so these aligned loads would have trapped--that's why I abandoned that thought, IIRC. But now that may be more possible (?). Now, I'm not sure if this will result in any great latency improvement on most CPUs we use today, but I did wonder if it might improve the cache line story. Just a thought...</p>\n</blockquote>\n<p>_Originally posted by @abrown in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_\">https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_</a></p>\n</blockquote>",
        "id": 300413226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663953090
    },
    {
        "content": "<p>jameysharp labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4948\">issue #4948</a>:</p>\n<blockquote>\n<blockquote>\n<p>One other thought that came back to me while looking at this was that I really wanted to implement <code>vconst</code> (and all other constant accesses for vectors) with the aligned version (<code>MOVDQA</code>, <code>MOVAPS</code>, <code>MOVAPD</code>) instead of the unaligned version we currently use. At the time, it was impossible to ensure that the vector constants were actually aligned so these aligned loads would have trapped--that's why I abandoned that thought, IIRC. But now that may be more possible (?). Now, I'm not sure if this will result in any great latency improvement on most CPUs we use today, but I did wonder if it might improve the cache line story. Just a thought...</p>\n</blockquote>\n<p>_Originally posted by @abrown in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_\">https://github.com/bytecodealliance/wasmtime/issues/2399#issuecomment-1235016953_</a></p>\n</blockquote>",
        "id": 300413227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663953090
    }
]