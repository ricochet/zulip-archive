[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392\">PR #5392</a> from <code>isle-partial-flag</code> to <code>main</code>:</p>\n<blockquote>\n<p>I speculate that this PR may have a performance impact, which I want to measure before merging, but I'd appreciate review on the implementation. Also I wanted to get the CI run going overnight.</p>\n<p>Instead of tying fallibility of constructors to whether they're either internal or pure, this commit assumes all constructors are infallible unless tagged otherwise with a \"partial\" flag.</p>\n<p>Internal constructors without the \"partial\" flag are not allowed to use constructors which have the \"partial\" flag on the right-hand side of any rules, because they have no way to report last-minute match failures.</p>\n<p>Multi-constructors should never be \"partial\"; they report match failures with an empty iterator instead. In turn this means you can't use partial constructors on the right-hand side of internal multi-constructor rules. However, you can use the same constructors on the left-hand side with <code>if</code> or <code>if-let</code> instead.</p>\n<p>In many cases, ISLE can already trivially prove that an internal constructor always returns <code>Some</code>. With this commit, those cases are laregly unchanged, except for removing all the <code>Option</code>s and <code>Some</code>s from the generated code for those terms.</p>\n<p>However, for internal non-partial constructors where ISLE could not prove that, it now emits an <code>unreachable!</code> panic as the last-resort, instead of returning <code>None</code> like it used to do. Among the existing backends, here's how many constructors have these panic cases:</p>\n<ul>\n<li>x64: 14% (53/374)</li>\n<li>aarch64: 15% (41/277)</li>\n<li>riscv64: 23% (26/114)</li>\n<li>s390x: 47% (268/567)</li>\n</ul>\n<p>It's often possible to rewrite rules so that ISLE can tell the panic can never be hit. Just ensure that there's a lowest-priority rule which has no constraints on the left-hand side.</p>\n<p>But in many of these constructors, it's difficult to statically prove the unhandled cases are unreachable because that's only down to knowledge about how they're called or other preconditions.</p>\n<p>So this commit does not try to enforce that all terms have a last-resort fallback rule.</p>\n</blockquote>",
        "id": 314387536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670395992
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392\">PR #5392</a>.</p>",
        "id": 314387537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670395992
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392\">PR #5392</a> from <code>isle-partial-flag</code> to <code>main</code>.</p>",
        "id": 314544426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670442291
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392\">PR #5392</a> from <code>isle-partial-flag</code> to <code>main</code>.</p>",
        "id": 314574758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670453952
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392\">PR #5392</a> from <code>isle-partial-flag</code> to <code>main</code>.</p>",
        "id": 314575394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670454202
    },
    {
        "content": "<p><strong>jameysharp</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392\">PR #5392</a> as ready for review.</p>",
        "id": 314575785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670454400
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392#pullrequestreview-1209283963\">PR review</a>.</p>",
        "id": 314582124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670458135
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5392\">PR #5392</a>.</p>",
        "id": 314587764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670462165
    }
]