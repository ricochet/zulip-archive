[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a> from <code>isle-generated-code-manifest</code> to <code>main</code>:</p>\n<blockquote>\n<p>Currently, the <code>build.rs</code> script that generates Rust source from the<br>\nISLE DSL will only do this generation if the <code>rebuild-isle</code> Cargo<br>\nfeature is specified. By default, it is not. This is based on the<br>\nprinciple that we (the build script) do not modify the source tree as<br>\nmanaged by git; git-managed files are strictly a human-managed and<br>\nhuman-edited resource. By adding the opt-in Cargo feature, a developer<br>\nis requesting the build script to perform an explicit action. (In my<br>\nunderstanding at least, this principle comes from the general philosophy<br>\nof hermetic builds: the output should be a pure function of the input,<br>\nand part of this is that the input is read-only. If we modify the source<br>\ntree, then all bets are off.)</p>\n<p>Unfortunately, requiring the opt-in feature also creates a footgun that<br>\nis easy to hit: if a developer modifies the ISLE DSL source, but forgets<br>\nto specify the Cargo feature, then the compiler will silently be built<br>\nsuccessfully with stale source, and will silently exclude any changes<br>\nthat were made.</p>\n<p>The generated source is checked into git for a good reason: we want DSL<br>\ncompiler to not affect build times for the overwhelmingly common case<br>\nthat Cranelift is used as a dependency but the backends are not being<br>\nactively developed. (This overhead comes mainly from building <code>islec</code><br>\nitself.)</p>\n<p>So, what to do? This PR implements a middle ground first described in<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/3506#discussion_r743113351\">this conversation</a>, in which we:</p>\n<ul>\n<li>\n<p>Generate a hash (SHA-512) of the ISLE DSL source and produce a<br>\n  \"manifest\" of ISLE inputs alongside the generated source; and</p>\n</li>\n<li>\n<p>Always read the ISLE DSL source, and see if the manifest is still<br>\n  valid, on builds that do not have the opt-in \"rebuild\" feature.</p>\n</li>\n</ul>\n<p>This allows us to know whether the ISLE compiler output would have been<br>\nthe same (modulo changes to the DSL compiler itself, which are<br>\nout-of-scope here), without actually building the ISLE compiler and<br>\nrunning it.</p>\n<p>If the compiler-backend developer modifies an ISLE source file and then<br>\ntries to build <code>cranelift-codegen</code> without adding the <code>rebuild-isle</code><br>\nCargo feature, they get the following output:</p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>  Error: the ISLE source files that resulted in the generated Rust source\n\n        * src/isa/x64/lower/isle/generated_code.rs\n\n  have changed but the generated source was not rebuilt! These ISLE source\n  files are:\n\n         * src/clif.isle\n         * src/prelude.isle\n         * src/isa/x64/inst.isle\n         * src/isa/x64/lower.isle\n\n  Please add `--features rebuild-isle` to your `cargo build` command\n  if you wish to rebuild the generated source, then include these changes\n  in any git commits you make that include the changes to the ISLE.\n\n  For example:\n\n    $ cargo build -p cranelift-codegen --features rebuild-isle\n\n  (This build script cannot do this for you by default because we cannot\n  modify checked-into-git source without your explicit opt-in.)\n</code></pre></div>\n<p>which will tell them exactly what they need to do to fix the problem!</p>\n<p>Note that I am leaving the \"Rebuild ISLE\" CI job alone for now, because<br>\notherwise, we are trusting whomever submits a PR to generate the correct<br>\ngenerated source. In other words, the manifest is a communication from<br>\nthe checked-in tree to the developer, but we still need to verify that<br>\nthe checked-in generated Rust source and the manifest are correct with<br>\nrespect to the checked-in ISLE source.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</li>\n<li>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</li>\n<li>[ ] This PR contains test cases, if meaningful.</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 261606237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637048194
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a>.</p>",
        "id": 261606240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637048198
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#pullrequestreview-807151348\">PR review</a>.</p>",
        "id": 261625452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637060900
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#discussion_r750160011\">PR review comment</a>:</p>\n<blockquote>\n<p>md5 or sha1 should be enough for this purpose, right? That is probably faster.</p>\n</blockquote>",
        "id": 261625453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637060900
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#pullrequestreview-807443909\">PR review</a>.</p>",
        "id": 261656166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637075987
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#pullrequestreview-807443909\">PR review</a>.</p>",
        "id": 261656167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637075987
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#discussion_r750376156\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW I see that this was done already but <code>std::process::abort</code> is a somewhat violent method of taking down the process (I think it may core dump?) and <code>std::process::exit</code> I think is a reasonable alternative.</p>\n</blockquote>",
        "id": 261656168,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637075987
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#pullrequestreview-807451167\">PR review</a>.</p>",
        "id": 261656254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637076006
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#discussion_r750381380\">PR review comment</a>:</p>\n<blockquote>\n<p>Speed is not a concern here so few files are hashed.</p>\n</blockquote>",
        "id": 261656255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637076006
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a> from <code>isle-generated-code-manifest</code> to <code>main</code>.</p>",
        "id": 261694461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637091199
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#pullrequestreview-807750285\">PR review</a>.</p>",
        "id": 261694542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637091234
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#discussion_r750599426\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, I was following the existing <code>abort()</code> but I've made it <code>exit(1)</code> now.</p>\n</blockquote>",
        "id": 261694543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637091234
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#pullrequestreview-807820397\">PR review</a>.</p>",
        "id": 261704806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637095776
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a> from <code>isle-generated-code-manifest</code> to <code>main</code>.</p>",
        "id": 261711934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637099470
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a> from <code>isle-generated-code-manifest</code> to <code>main</code>.</p>",
        "id": 261720021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637103573
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a> from <code>isle-generated-code-manifest</code> to <code>main</code>.</p>",
        "id": 261720452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637103770
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a> from <code>isle-generated-code-manifest</code> to <code>main</code>.</p>",
        "id": 261721542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637104380
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534#pullrequestreview-807937192\">PR review</a>.</p>",
        "id": 261722120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637104738
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a> from <code>isle-generated-code-manifest</code> to <code>main</code>.</p>",
        "id": 261722531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637105016
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3534\">PR #3534</a>.</p>",
        "id": 261726427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637107193
    }
]