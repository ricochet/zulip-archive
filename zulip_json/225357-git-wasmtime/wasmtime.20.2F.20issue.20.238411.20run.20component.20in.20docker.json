[
    {
        "content": "<p>erkules opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>I bulid <a href=\"https://github.com/sunfishcode/hello-wasi-http\">https://github.com/sunfishcode/hello-wasi-http</a></p>\n<p>wasmtime serve works<br>\n</p>\n</blockquote>\n<p>$ wasmtime serve target/wasm32-wasi/debug/hello_wasi_http.wasm<br>\nServing HTTP on <a href=\"http://0.0.0.0:8080/\">http://0.0.0.0:8080/</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">docker</span><span class=\"w\"> </span><span class=\"n\">configured</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">runtime</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">works</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">proxy</span><span class=\"w\"> </span><span class=\"n\">wasm</span>:\n</code></pre></div>\n<p>$ docker container run --platform=wasi/wasm --runtime wasmtime  erkules/mywasm:v1<br>\n12</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">But</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">how</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">configure</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">tell</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">runtime</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">subcommand</span><span class=\"p\">.</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 434278887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713499900
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2066840812\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>Sorry but can you expand the problem you're having a bit more? I think that most of us working on Wasmtime aren't familiar with <code>docker container run</code> or the arguments you're passing. It may be best to report this issue to the maintainers of the wasm/wasmtime support in Docker as they might be able to help more?</p>\n</blockquote>",
        "id": 434389252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713541559
    },
    {
        "content": "<p>erkules <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2067808299\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>Sorry for being so bad.<br>\nThe basic problem is imho WIT.<br>\n</p>\n</blockquote>\n<p>wasmtime serve target/wasm32-wasi/debug/hello_wasi_http.wasm</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">prove</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">gitexample</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">working</span><span class=\"p\">.</span>\n\n<span class=\"n\">When</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">docker</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">similar</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">configure</span><span class=\"w\"> </span><span class=\"n\">containerd</span><span class=\"o\">/</span><span class=\"n\">runwasi</span><span class=\"p\">.</span>\n\n<span class=\"n\">But</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">way</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">tell</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">shim</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">runwasi</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">server</span><span class=\"w\"> </span><span class=\"n\">subcommand</span><span class=\"p\">.</span>\n\n<span class=\"n\">like</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">runwasi</span><span class=\"o\">/</span><span class=\"n\">containnerd</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">entrypoint</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">container</span><span class=\"o\">/</span><span class=\"n\">image</span><span class=\"p\">.</span>\n<span class=\"n\">But</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">need</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">convince</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">server</span><span class=\"w\"> </span><span class=\"n\">subcommand</span><span class=\"p\">.</span>\n\n<span class=\"n\">Rephrased</span>: <span class=\"nc\">How</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">docker</span><span class=\"o\">/</span><span class=\"n\">runwasi</span><span class=\"w\"> </span><span class=\"n\">etc</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">knows</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"o\">/</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"p\">.</span>\n</code></pre></div>",
        "id": 434540133,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713653877
    },
    {
        "content": "<p>hone <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2069744768\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>@erkules looking at your <code>Dockerfile</code> on <a href=\"https://hub.docker.com/layers/erkules/mywasm/v1/images/sha256-d197cfb42060401023014da25f8e3e5f8ad29aafd367b309858778640c11d3ab?context=explore\">dockerhub</a>, you have this set as the <code>CMD</code> which will be executed:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">CMD</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"wasmedge\"</span><span class=\"w\"> </span><span class=\"s\">\"/main.wasm\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I'm not sure what you have <code>ENTRYPOINT</code> set to, but I think you want to set <code>CMD</code> to <code>wasmtime serve &lt;path to WASM module&gt;</code>.</p>\n</blockquote>",
        "id": 434770424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713797409
    },
    {
        "content": "<p>erkules <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2069949769\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>Hi @hone, thx for checking.<br>\nYou looked up the image  erkules/wasm-http:imcontainer <br>\nThis is a ordinary working docker container </p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span><code>        &quot;Cmd&quot;: [\n            &quot;serve&quot;,\n            &quot;/http.wasm&quot;\n</code></pre></div>\n\n<p>..<br>\n            \"Entrypoint\": [<br>\n                \"/usr/bin/wasmtime\"<br>\n        \"Architecture\": \"amd64\",</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">containerd</span><span class=\"o\">-</span><span class=\"n\">shim</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">need</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">wasm</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">container</span><span class=\"p\">.</span>\n<span class=\"n\">So</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\">  </span><span class=\"n\">erkules</span><span class=\"o\">/</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">http</span>:<span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">don</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">look</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">actual</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"n\">up</span>:<span class=\"p\">)</span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>    &quot;Architecture&quot;: &quot;wasm&quot;,\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">images</span><span class=\"w\"> </span><span class=\"n\">expect</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">ENTRYPOINT</span><span class=\"p\">.</span>\n<span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">.</span>\n<span class=\"p\">[</span><span class=\"s\">\"serve\"</span><span class=\"p\">,</span><span class=\"s\">\"/http.wasm\"</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"/http.wasm\"</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">nothing</span><span class=\"w\"> </span><span class=\"n\">worked</span><span class=\"p\">.</span>\n<span class=\"n\">Having</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">ENTRYPOINT</span><span class=\"w\"> </span><span class=\"n\">pointing</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">working</span><span class=\"p\">.</span>\n\n<span class=\"n\">So</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">way</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">tell</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">shim</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">special</span><span class=\"w\"> </span><span class=\"n\">subcommand</span><span class=\"p\">.</span>\n<span class=\"n\">How</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">shim</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">.</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">knows</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">hast</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">spin</span><span class=\"w\"> </span><span class=\"n\">up</span><span class=\"o\">?</span>\n</code></pre></div>",
        "id": 434784051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713800561
    },
    {
        "content": "<p>matsbror <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2070604444\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>@erkules did you resolve this? I am looking to do exactly this right now as well.</p>\n</blockquote>",
        "id": 434821345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713811310
    },
    {
        "content": "<p>matsbror edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2070604444\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>@erkules did you resolve this? I am looking to do exactly this right now as well. But I think like @alexcrichton this is not a wasmtime issue, it's a docker issue.</p>\n</blockquote>",
        "id": 434821457,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713811341
    },
    {
        "content": "<p>erkules <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2071110047\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>@matsbror haven't solved it. <br>\nI don't think it is an docker issue. At least Ive got problems with ctr and containerd also. <br>\n</p>\n</blockquote>\n<p>ctr run --rm --runtime=io.containerd.wasmtime.v1 <a href=\"http://docker.io/erkules/wasm-http:v1\">docker.io/erkules/wasm-http:v1</a> a </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">containerd</span><span class=\"o\">-</span><span class=\"n\">logs</span>:\n</code></pre></div>\n<p>Apr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.957073021Z\" level=info msg=\"server listen started\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.957281712Z\" level=info msg=\"server started\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.957314698Z\" level=info msg=\"Shim successfully started, waiting for exit signal...\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.977023213Z\" level=info msg=\"found manifest with WASM OCI image format\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.977646223Z\" level=info msg=\"no WASM layers found in OCI image\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.978939323Z\" level=info msg=\"close_range; preserve_fds=0\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.979583692Z\" level=info msg=\"cgroup manager V2 will be used\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.980169131Z\" level=warn msg=\"Controller rdma is not yet implemented.\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.980636981Z\" level=warn msg=\"Controller misc is not yet implemented.\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.982457118Z\" level=warn msg=\"Controller rdma is not yet implemented.\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.982478878Z\" level=warn msg=\"Controller misc is not yet implemented.\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.99490045Z\" level=info msg=\"close_range; preserve_fds=0\"<br>\nApr 22 23:19:47 perl3 containerd[3423363]: time=\"2024-04-22T23:19:47.995551693Z\" level=warn msg=\"intermediate process already reaped\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.001191379Z\" level=info msg=\"starting instance: a\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.002387964Z\" level=info msg=\"calling start function\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.002425554Z\" level=info msg=\"setting up wasi\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.002488088Z\" level=info msg=\"building wasi context\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.314272152Z\" level=info msg=\"instantiating component\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.315334175Z\" level=info msg=\"error running start function: import <code>wasi:http/types@0.2.0</code> has the wrong type\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.3210106Z\" level=info msg=\"deleting instance: a\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.32122991Z\" level=info msg=\"cgroup manager V2 will be used\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.322184447Z\" level=info msg=\"Shutting down shim instance\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.322215203Z\" level=info msg=\"close monitor\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.322241327Z\" level=error msg=\"listener accept got Custom { kind: Other, error: \"listener shutdown for quit flag\" }\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.32229698Z\" level=info msg=\"ttrpc server listener stopped\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.322362134Z\" level=info msg=\"listener thread stopped\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.322389062Z\" level=info msg=\"begin to shutdown connection\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.322412009Z\" level=info msg=\"connections closed\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.323181034Z\" level=info msg=\"reaper thread exited\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.323274325Z\" level=info msg=\"reaper thread stopped\"<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.323239141Z\" level=info msg=\"shim disconnected\" id=a<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.324789933Z\" level=warning msg=\"cleaning up after shim disconnected\" id=a namespace=default<br>\nApr 22 23:19:48 perl3 containerd[3423363]: time=\"2024-04-22T23:19:48.324921527Z\" level=info msg=\"cleaning up dead shim\"</p>",
        "id": 434866921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713828022
    },
    {
        "content": "<p>matsbror <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2081865462\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>I did some research on this and the issue lies in <code>runwasi</code> which is used by <code>containerd</code> to implement the wasm shims. It does not yet support http-wasi. There is a github issue about it: <a href=\"https://github.com/containerd/runwasi/issues/416\">https://github.com/containerd/runwasi/issues/416</a></p>\n</blockquote>",
        "id": 435950459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714364469
    },
    {
        "content": "<p>matsbror edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2081865462\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>I did some research on this and the problem lies in <code>runwasi</code> which is used by <code>containerd</code> to implement the wasm shims. It does not yet support http-wasi. There is a github issue about it: <a href=\"https://github.com/containerd/runwasi/issues/416\">https://github.com/containerd/runwasi/issues/416</a></p>\n</blockquote>",
        "id": 435950508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714364482
    },
    {
        "content": "<p>Mossaka <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2087803154\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>Hey runwasi maintainer here. Yes I agree that this is an <a href=\"https://github.com/containerd/runwasi/issues/416\">runwasi issue</a>, probably not related to wasmtime. As @matsbror mentioned, there is no support for <code>wasi:http</code> at the moment. The only supported world is <code>wasi:cli/run</code>. </p>\n<blockquote>\n<p>I got no way to tell the shim (or runwasi) to use the server subcommand.</p>\n</blockquote>\n<p>You assessment is right. The wasmtime shim in Docker is using the wasmtime SDK directly, and thus there is no subcommand for serving HTTP requests. </p>\n<blockquote>\n<p>How does the wasmtime shim i.e. knows it is a component it hast to spin up?</p>\n</blockquote>\n<p>The shim will parse the first few bytes of the binary and determine whether it's a wasm module, a wasm component, or something else. If it's a wasm component, it assumes the component implmenets the <code>wasi:cli</code> world. And this is why you are seeing the error <code>\"import </code>wasi:http/types@0.2.0<code> has the wrong type\"</code> in the containerd log. </p>\n<hr>\n<p>In the meantime, if you just want to run <code>hello_wasi_http.wasm</code> component in Docker / Kubernetes, you may want to try the <a href=\"https://github.com/spinkube/containerd-shim-spin\">spinkube/containerd-spin-shim</a> which uses the Spin runtime and it does support serving <code>wasi:http</code> requests. </p>\n</blockquote>",
        "id": 436378134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714526048
    },
    {
        "content": "<p>erkules <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411#issuecomment-2095203038\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8411\">issue #8411</a>:</p>\n<blockquote>\n<p>thx @Mossaka  and @matsbror </p>\n</blockquote>",
        "id": 437195299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714971833
    }
]