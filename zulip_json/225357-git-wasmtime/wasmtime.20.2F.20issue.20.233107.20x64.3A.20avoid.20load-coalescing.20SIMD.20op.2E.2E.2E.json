[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107#issuecomment-884421844\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107\">issue #3107</a>:</p>\n<blockquote>\n<p>One thing I noticed reading your thoughts on #2943 is that as an engine we have to assume that all loads/stores in wasm are unaligned, even if the alignment specified on the memory operation is aligned. The alignment in the <code>memarg</code> is just a hint and the wasm itself doesn't have to uphold the alignment. I suspect, though, that all wasm loads/stores are flagged as unaligned, so this should still fix the issue? (can tests be added?)</p>\n<p>I presume that cranelift could still otherwise try to prove that an address is actually aligned, but I would be surprised if that were a cheap or already-implemented analysis...</p>\n</blockquote>",
        "id": 246763839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626894077
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107#issuecomment-884561200\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107\">issue #3107</a>:</p>\n<blockquote>\n<p>I'll probably leave this open until @cfallin takes a look: I think this type of change has to happen but maybe he can think of a better way.</p>\n</blockquote>",
        "id": 246793283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626909990
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107#issuecomment-886930211\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107\">issue #3107</a>:</p>\n<blockquote>\n<p>Dealing with a signal and handling it I don't think should be too too hard on embedders, there's nothing really different than trap handling I think. That being said I suspect it would be significantly tricky, so I think we'd probably want some motivating data first to see if the optimization is worth it.</p>\n</blockquote>",
        "id": 247242496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627324125
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107#issuecomment-887004370\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3107\">issue #3107</a>:</p>\n<blockquote>\n<p>In case of for example cg_clif there is no embedder that can catch the <code>SIGBUS</code>. Now in case of cg_clif most loads/stores are guaranteed to be aligned, so <code>AlignHint</code> is not very useful, but I can imagine that there will be other cases where it may be useful. I think at the very least cranelift-wasm should have an option to disable <code>AlignHint</code> emission.</p>\n</blockquote>",
        "id": 247257258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627331277
    }
]