[
    {
        "content": "<p>fabianmurariu opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9686\">issue #9686</a>:</p>\n<blockquote>\n<p>Project <a href=\"https://github.com/fabianmurariu/jit-experiments\">here</a></p>\n<p>I'm evaluationg wasm + wasmtime for a query execution library, much of that involves calling iterators into rust to get data then executing dynamically generated logic via wasm.</p>\n<p>The code here sums up an iterator by calling a rust function and doing the summing up in wasm</p>\n<ol>\n<li>is there a better way to measure the wasmtime execution time</li>\n<li>can this be made to run faster? If yes then how?</li>\n</ol>\n<p>currently the run times seem to be</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">rust</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"n\">ns</span>\n<span class=\"n\">wasm</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"n\">ms</span>\n<span class=\"n\">python</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mf\">0.75</span><span class=\"n\">s</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 484507622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732625904
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9686#issuecomment-2501255890\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9686\">issue #9686</a>:</p>\n<blockquote>\n<p>At least for wasmtime you're measuring what's the fastest way. The Rust number probably isn't representative because it's probably constant-folded by LLVM which means it's not actually doing anything at runtime. The Wasm number shows an overhead of 4.2ns per call which is roughly what's expected. I'm not familiar with benchmarking Python so I don't know whether that's representative.</p>\n</blockquote>",
        "id": 484547670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732637058
    },
    {
        "content": "<p>fabianmurariu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9686#issuecomment-2545068137\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9686\">issue #9686</a>:</p>\n<blockquote>\n<p>I'm considering using the memory instead, can a rust function be called from WASM and write something to memory that can then be accessed in WASM?</p>\n</blockquote>",
        "id": 489188327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734341824
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9686#issuecomment-2546002512\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9686\">issue #9686</a>:</p>\n<blockquote>\n<p>Yes, I'd recommend reading over the <a href=\"https://docs.rs/wasmtime/latest/wasmtime/struct.Func.html#examples-2\">examples here</a></p>\n</blockquote>",
        "id": 489273526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734364507
    }
]