[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1302709787\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 307845087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667511834
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1302757891\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>Thanks. I'd rather not break the current use of <code>tracing: true | false</code> in the macro if we can avoid it. For suppressing it on certain functions, could you add an optional suffix like, perhaps, <code>tracing: true except { module::func, module2::func2</code>?</p>\n</blockquote>",
        "id": 307852935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667515129
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1302757891\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>Thanks. I'd rather not break the current use of <code>tracing: true | false</code> in the macro if we can avoid it. For suppressing it on certain functions, could you add an optional suffix like, perhaps, <code>tracing: true except { module::func, module2::func2 }</code>?</p>\n</blockquote>",
        "id": 307852948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667515137
    },
    {
        "content": "<p>joeshaw <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1302777506\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>Thanks for the feedback, I'll look into it.  My worry with <code>except</code> is that you might expect something different if you did <code>tracing: false except { module::func }</code> but there's probably another word we can use.</p>\n</blockquote>",
        "id": 307856960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667517113
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1302784554\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>It should probably give an error if used in the <code>false</code> case? <code>exclude</code> is another word we could use.</p>\n</blockquote>",
        "id": 307858135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667517819
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1302873845\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>Perhaps:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">tracing</span>: <span class=\"nc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">//  all functions</span>\n\n<span class=\"c1\">// ... or ...</span>\n\n<span class=\"n\">tracing</span>: <span class=\"nc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"c1\">// no functions</span>\n\n<span class=\"c1\">// ... or ...</span>\n\n<span class=\"n\">tracing</span>: <span class=\"p\">[</span><span class=\"s\">\"...\"</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"c1\">// only these functions</span>\n</code></pre></div>\n<p>Would that work for your use case? I agree we'd ideally avoid various directions of lists here if we could. One possibility would be to support globs as well if families of functions to trace all have similar names. I suppose this could even go so far as to have:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">tracing</span>: <span class=\"p\">[</span><span class=\"s\">\"trace-me\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"!this-is-not-trace\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n</code></pre></div>\n<p>where a <code>!</code> in front disables tracing for that function (or any other matching globs)</p>\n</blockquote>",
        "id": 307872849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667528288
    },
    {
        "content": "<p>joeshaw <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1303678983\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>@alexcrichton For my use case, I am looking to suppress tracing from a function that carries sensitive information, so negation is the only thing that'd work.</p>\n<p>Taking a step back: is there a strong reason to have the tracing config be highly customizable?  I think I have a compelling reason for _disabling_ tracing on a particular function but is it important to be able to turn it on for just a few functions?</p>\n<p>I'm also hesitant to diverge too much from syntax that already exists.  <code>async</code> allows either a catchall (<code>async: *</code>) or a list of identifiers in braces (<code>async: { module::func1, module::func2 }</code>).<br>\n</p>\n</blockquote>",
        "id": 307975538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667573514
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1303863654\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>Keeping consistent with <code>async</code> seems reasonable, but I think that it's fine to change the syntaxes for both at the same time. I would agree that there's probably not much of a use case for \"just this function\". Perhaps:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">tracing</span>: <span class=\"nc\">true</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"n\">tracing</span>: <span class=\"nc\">false</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"n\">tracing_skip</span>: <span class=\"p\">[</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n<p>and that may work?</p>\n</blockquote>",
        "id": 308002249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667580419
    },
    {
        "content": "<p>joeshaw <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1303940694\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>I pushed a new set of commits that implements what @pchickey suggested (but with <code>disable_for</code> instead of <code>except</code> -- but happy to change this back).</p>\n<p>Example usage:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wiggle</span>::<span class=\"n\">from_witx</span><span class=\"o\">!</span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tracing</span>: <span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"n\">disable_for</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module1</span>::<span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module2</span>::<span class=\"n\">another_func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">witx</span>: <span class=\"p\">[</span><span class=\"s\">\"...\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"p\">});</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 308013691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667583899
    },
    {
        "content": "<p>joeshaw edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1303940694\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>I pushed a new set of commits that implements what @pchickey suggested (but with <code>disable_for</code> instead of <code>except</code> because I think it flows better even if you change <code>true</code> to <code>false</code> -- but happy to change this back).</p>\n<p>Example usage:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wiggle</span>::<span class=\"n\">from_witx</span><span class=\"o\">!</span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tracing</span>: <span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"n\">disable_for</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module1</span>::<span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module2</span>::<span class=\"n\">another_func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">witx</span>: <span class=\"p\">[</span><span class=\"s\">\"...\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"p\">});</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 308014571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667584143
    },
    {
        "content": "<p>joeshaw edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1303940694\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>I pushed a new set of commits that implements what @pchickey suggested (but with <code>disable_for</code> instead of <code>except</code> because I think it flows better even if you change <code>true</code> to <code>false</code> -- but happy to change this back).</p>\n<p>Example usage:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wiggle</span>::<span class=\"n\">from_witx</span><span class=\"o\">!</span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tracing</span>: <span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"n\">disable_for</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module1</span>::<span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module2</span>::<span class=\"n\">another_func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">witx</span>: <span class=\"p\">[</span><span class=\"s\">\"...\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"p\">});</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm also happy to switch this to be a separate argument altogether if that's preferred.</p>\n</blockquote>",
        "id": 308015064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667584243
    },
    {
        "content": "<p>joeshaw edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1303940694\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>I pushed a new set of commits that implements what @pchickey suggested (but with <code>disable_for</code> instead of <code>except</code> because I think it flows better even if you change <code>true</code> to <code>false</code> -- but happy to change this back).</p>\n<p>Example usage:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wiggle</span>::<span class=\"n\">from_witx</span><span class=\"o\">!</span><span class=\"p\">({</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tracing</span>: <span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"n\">disable_for</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module1</span>::<span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">module2</span>::<span class=\"n\">another_func</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">witx</span>: <span class=\"p\">[</span><span class=\"s\">\"...\"</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"p\">});</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm also happy to switch this to be a separate argument altogether (@alexcrichton's <code>tracing_skip</code> suggestion) if that's preferred.</p>\n</blockquote>",
        "id": 308015147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667584261
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1304093785\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>Seems reasonable to me <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> but I defer to @pchickey for the final approval</p>\n</blockquote>",
        "id": 308037476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667591341
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194#issuecomment-1304607209\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5194\">issue #5194</a>:</p>\n<blockquote>\n<p>Thanks @joeshaw, this is good work.</p>\n</blockquote>",
        "id": 308175057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667673091
    }
]