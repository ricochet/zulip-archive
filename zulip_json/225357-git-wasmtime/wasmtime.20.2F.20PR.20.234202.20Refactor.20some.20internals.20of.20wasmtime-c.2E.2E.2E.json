[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202\">PR #4202</a> from <code>refactor-cranelift-obj-builder</code> to <code>main</code>:</p>\n<blockquote>\n<p>In an effort to make future PRs for component-model functionality smaller I'm splitting off pieces into smaller PRs to get independently reviewed ahead of time. This round of refactorings for wasmtime-cranelift is targeted at splitting out pieces which will be used for the component model. Specifically the wasm-to-host trampoline function was split into components (hah) and the <code>ObjectBuilder</code> type was refactored to remove unwind information and additionally split out dwarf processing into the main <code>Compiler</code> type.</p>\n</blockquote>",
        "id": 284646876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654106111
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202\">PR #4202</a>.</p>",
        "id": 284646878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654106112
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202#pullrequestreview-992489363\">PR review</a>.</p>",
        "id": 284649546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654107326
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202#discussion_r887163601\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>       // Write all debug data relocations.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 284649547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654107326
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202\">PR #4202</a> from <code>refactor-cranelift-obj-builder</code> to <code>main</code>.</p>",
        "id": 284650733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654107868
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202#pullrequestreview-992492932\">PR review</a>.</p>",
        "id": 284660468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654112823
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202#pullrequestreview-992492932\">PR review</a>.</p>",
        "id": 284660469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654112823
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202#discussion_r887165025\">PR review comment</a>:</p>\n<blockquote>\n<p>Pre-existing, but why do we pass <code>host_fn</code> as a <code>usize</code> rather than a function pointer with the appropriate signature that we then cast to an integer here?</p>\n</blockquote>",
        "id": 284660470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654112823
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202#pullrequestreview-992651843\">PR review</a>.</p>",
        "id": 284666445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654115987
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202#discussion_r887278834\">PR review comment</a>:</p>\n<blockquote>\n<p>That's a good question...</p>\n<p>Looking into it it appears that it's because the compiler type is defined in the <code>wasmtime-environ</code> crate but the types for the function pointer signature (e.g. <code>VMContext</code> and <code>ValRaw</code>) are located in the <code>wasmtime-runtime</code> crate which <code>wasmtime-cranelift</code> doesn't depend on, so I think the dependency tree is thwarting that plumbing of information.</p>\n</blockquote>",
        "id": 284666446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654115988
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4202\">PR #4202</a>.</p>",
        "id": 284666460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654115994
    }
]