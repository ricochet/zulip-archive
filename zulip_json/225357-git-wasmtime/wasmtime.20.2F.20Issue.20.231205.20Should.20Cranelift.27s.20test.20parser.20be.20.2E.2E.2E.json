[
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1205\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1205\">Issue #1205</a>:</p>\n<blockquote>\n<p>Wasmtime is hooked up to oss-fuzz which means that our fuzz targets get an abnormally large amount of coverage, which in turn means that if we want to fuzz something we should be quite sure we're ready for all sorts of bugs. In that sense do we want to disable Cranelift's <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/fuzz/fuzz_targets/reader_parse_test.rs\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/fuzz/fuzz_targets/reader_parse_test.rs\"><code>reader_parse_test</code></a>?</p>\n<p>Looks like over the weekend an OOM was found which amounted to the input:</p>\n<div class=\"codehilite\"><pre><span></span>function%(){block225322254\n</pre></div>\n\n\n<p>Doing some debugging the parser allocations a huge amount of memory <a href=\"https://github.com/bytecodealliance/wasmtime/blob/3848bf54f750914924fd6f880ec058460f4a8c34/cranelift/reader/src/parser.rs#L344-L346\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/blob/3848bf54f750914924fd6f880ec058460f4a8c34/cranelift/reader/src/parser.rs#L344-L346\">in this loop</a> because it's appending 225322254 blocks.</p>\n<p>While this could probably be fixed by perhaps using a more sparse encoding or something like that, I wanted to ask a question here first if we're ready for these kinds of fuzz bugs. For example is this worth it to fix at this time? I don't know much about the cranelift parser/format, so wanted to ask others what they felt about this!</p>\n</blockquote>",
        "id": 189728427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583351653
    }
]