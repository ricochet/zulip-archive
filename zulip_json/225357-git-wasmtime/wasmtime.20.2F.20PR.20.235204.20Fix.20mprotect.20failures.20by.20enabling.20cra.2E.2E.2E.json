[
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5204\">PR #5204</a> from <code>mprotect-fix</code> to <code>main</code>:</p>\n<blockquote>\n<p>The sample program in cranelift/filetests/src/function_runner.rs would abort with an mprotect failure under certain circumstances, see <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4453#issuecomment-1303803222\">https://github.com/bytecodealliance/wasmtime/pull/4453#issuecomment-1303803222</a></p>\n<p>Root cause was that enabling PROT_EXEC on the main process heap may be prohibited, depending on Linux distro and version.</p>\n<p>This only shows up in the doc test sample program because the main clif-util is multi-threaded and therefore allocations will happen on glibc's per-thread heap, which is allocated via mmap, and not the main process heap.</p>\n<p>Work around the problem by enabling the \"selinux-fix\" feature of the cranelift-jit crate dependency in the filetests.  Note that this didn't compile out of the box, so a separate fix is also required and provided as part of this PR.</p>\n<p>Going forward, it would be preferable to always use mmap to allocate the backing memory for JITted code.</p>\n<p>CC @cfallin @afonso360 </p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 308017098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667584691
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5204\">PR #5204</a> from <code>mprotect-fix</code> to <code>main</code>.</p>",
        "id": 308025675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667586909
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5204#pullrequestreview-1169103046\">PR review</a>.</p>",
        "id": 308034547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667590191
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5204#pullrequestreview-1169136534\">PR review</a>.</p>",
        "id": 308039793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667592273
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5204#pullrequestreview-1169189377\">PR review</a>.</p>",
        "id": 308048392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667595692
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5204\">PR #5204</a>.</p>",
        "id": 308048404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667595699
    }
]