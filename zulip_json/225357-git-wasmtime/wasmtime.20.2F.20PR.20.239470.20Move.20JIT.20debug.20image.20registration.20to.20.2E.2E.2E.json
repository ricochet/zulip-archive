[
    {
        "content": "<p>SingleAccretion opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a> from <code>SingleAccretion:DI-Dups</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>JIT images correspond to ELF images, which may represent multiple modules within a single component.</p>\n<p>Fixes #9461.</p>\n<p>Tested manually on moderately large component input as well as with the existing LLDB tests.</p>\n</blockquote>",
        "id": 477076451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729029056
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>:</p>\n<blockquote>\n<p>JIT images correspond to ELF images, which may represent multiple modules within a single component.</p>\n<p>Fixes #9461.</p>\n<p>Tested manually on moderately large component as well as with the existing LLDB tests.</p>\n</blockquote>",
        "id": 477076477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729029070
    },
    {
        "content": "<p>SingleAccretion submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#pullrequestreview-2370767304\">PR review</a>.</p>",
        "id": 477076824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729029246
    },
    {
        "content": "<p>SingleAccretion created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#discussion_r1802061397\">PR review comment</a>:</p>\n<blockquote>\n<p>Since these tests are <code>#[ignore]</code>d by default, and run fine on Windows when explicitly requested, it seems there is no reason to have these guards anymore.</p>\n</blockquote>",
        "id": 477076826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729029246
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>.</p>",
        "id": 477076901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729029309
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>.</p>",
        "id": 477077104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729029408
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#pullrequestreview-2371037370\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for the PR as well as for the issue! This looks like the right fix to me. I suspect that writing a test for this will be relatively hard, so otherwise having the preexisting tests pass I think is sufficient for this.</p>\n<p>I also think that the bug you highlighted where we're double-registering with the native profiler is probably also an issue as well. If you'd like that's ok to defer to a second PR to fix, or if you'd like bundling it in here I think would be reasonable too</p>\n</blockquote>",
        "id": 477104546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729045160
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>:</p>\n<blockquote>\n<p>JIT images correspond to ELF images, which may represent multiple modules within a single component.</p>\n<p>Fixes #9461.</p>\n<p>Tested manually on a moderately large component as well as with the existing LLDB tests.</p>\n</blockquote>",
        "id": 477194056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729079114
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>.</p>",
        "id": 477307586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729116097
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#issuecomment-2418048770\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>:</p>\n<blockquote>\n<blockquote>\n<p>I also think that the bug you highlighted where we're double-registering with the native profiler is probably also an issue as well. </p>\n</blockquote>\n<p>Opened #9478 about this.</p>\n</blockquote>",
        "id": 477307942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729116302
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#issuecomment-2418048770\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>:</p>\n<blockquote>\n<blockquote>\n<p>I also think that the bug you highlighted where we're double-registering with the native profiler is probably also an issue as well. </p>\n</blockquote>\n<p>Opened #9478 about this.</p>\n<p>The fix there is going to be a little trickier since the profiler \"get name\" callback operates on actual per-module state.</p>\n</blockquote>",
        "id": 477308111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729116419
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#issuecomment-2418048770\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>:</p>\n<blockquote>\n<blockquote>\n<p>I also think that the bug you highlighted where we're double-registering with the native profiler is probably also an issue as well. </p>\n</blockquote>\n<p>Opened #9478 about this.</p>\n<p>The fix there is going to be a little trickier since the profiler's \"get name\" callback operates on actual per-module state.</p>\n</blockquote>",
        "id": 477308136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729116429
    },
    {
        "content": "<p><strong>SingleAccretion</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a> as ready for review.</p>",
        "id": 477308781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729116808
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>.</p>",
        "id": 477308784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729116809
    },
    {
        "content": "<p><strong>SingleAccretion</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>.</p>",
        "id": 477308785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729116809
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#pullrequestreview-2373785160\">PR review</a>.</p>",
        "id": 477312034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729117320
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#discussion_r1803863436\">PR review comment</a>:</p>\n<blockquote>\n<p>Reading over this again, mind removing the <code>ManualllyDrop</code> wrapper here? This is already paying the cost of the <code>Option</code> overhead so I don't think the unsafe drop part is buying a whole lot here.</p>\n<p>The destructor can still be early executed through <code>let _ = self.debug_registration.take();</code> in the <code>Drop</code> implementation though.</p>\n<p>(I realize you were probably copying <code>unwind_registration</code> and I think we should apply this change there too, as a separate PR if you'd prefer to leave that as-is for now)</p>\n</blockquote>",
        "id": 477312035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729117320
    },
    {
        "content": "<p>SingleAccretion submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#pullrequestreview-2373794070\">PR review</a>.</p>",
        "id": 477312978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729117848
    },
    {
        "content": "<p>SingleAccretion created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#discussion_r1803869592\">PR review comment</a>:</p>\n<blockquote>\n<p>While we're on the topic - I don't quite get this manual <code>drop</code>ping. Wouldn't reordering <code>mmap</code> to be after the registrations work equivalently?</p>\n</blockquote>",
        "id": 477312979,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729117848
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#pullrequestreview-2373803964\">PR review</a>.</p>",
        "id": 477313695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729118231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470#discussion_r1803875905\">PR review comment</a>:</p>\n<blockquote>\n<p>I think so yeah, but the drop order of fields with respect to field orderings in structs is pretty subtle so we've occasionally used <code>ManuallyDrop</code> to make it more clear that the drop order changing is an intentional change. </p>\n<p>Once both <code>debug_registration</code> and <code>unwind_registration</code> are just <code>Option</code> though it would be fine to remove all the <code>ManuallyDrop</code> here and the <code>Drop</code> implementation would just be <code>let _ = self.field.take()</code> for the two registrations.</p>\n</blockquote>",
        "id": 477313696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729118231
    },
    {
        "content": "<p>SingleAccretion updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>.</p>",
        "id": 477315245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729119172
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9470\">PR #9470</a>.</p>",
        "id": 477317797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729120771
    }
]