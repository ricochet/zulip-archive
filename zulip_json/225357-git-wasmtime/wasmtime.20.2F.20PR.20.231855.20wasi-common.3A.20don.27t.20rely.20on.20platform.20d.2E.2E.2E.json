[
    {
        "content": "<p>ueno opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855\">PR #1855</a> from <code>wip/dueno/null</code> to <code>master</code>:</p>\n<blockquote>\n<p>If stdio is not inherited nor associated with a file, <code>WasiCtxBuilder</code> tries to open \"/dev/null\" (\"NUL\" on Windows) and attach stdio to it. While most platforms today support those device files, it would be<br>\ngood to avoid unnecessary access to the host device if possible.  This patch instead uses a virtual Handle that emulates the \"NUL\" device.</p>\n<p>This is particularly needed when using wasmtime in a restricted environment, such as inside TEE (see <a href=\"https://github.com/enarx/enarx/issues/559\">https://github.com/enarx/enarx/issues/559</a> for the context).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 200440828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591806536
    },
    {
        "content": "<p>ueno updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855\">PR #1855</a> from <code>wip/dueno/null</code> to <code>master</code>:</p>\n<blockquote>\n<p>If stdio is not inherited nor associated with a file, <code>WasiCtxBuilder</code> tries to open \"/dev/null\" (\"NUL\" on Windows) and attach stdio to it. While most platforms today support those device files, it would be<br>\ngood to avoid unnecessary access to the host device if possible.  This patch instead uses a virtual Handle that emulates the \"NUL\" device.</p>\n<p>This is particularly needed when using wasmtime in a restricted environment, such as inside TEE (see <a href=\"https://github.com/enarx/enarx/issues/559\">https://github.com/enarx/enarx/issues/559</a> for the context).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 200449379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591810388
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#pullrequestreview-428308204\">PR Review</a>.</p>",
        "id": 200455130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591812891
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#pullrequestreview-428308204\">PR Review</a>.</p>",
        "id": 200455132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591812892
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438318941\">PR Review Comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>                let cast_iovlen: types::Size = iov.len().try_into()?;\n</code></pre></div>\n\n\n<p>I think this should bubble up with an error rather than panic, and same below. Oh, and FWIW this should be convertible to <code>crate::wasi::Error</code> without remapping the error types, etc.</p>\n</blockquote>",
        "id": 200455134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591812892
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438316123\">PR Review Comment</a>:</p>\n<blockquote>\n<p>So the reason we've had a <code>PendingEntry::Thunk</code> here was because (if my memory serves me well) <code>OsOther::from_null</code> was fallible and hence it was convenient to save a function returning <code>Result</code> rather than dealing with unwraps, etc., in <code>WasiCtxBuilder::new</code> which is non-fallible. Since I don't see any reason for <code>NullDevice::null_device</code> to be fallible (it always succeeds since it's a virtual device, am I right?), perhaps we could make the fn <code>null_device</code> non-fallible, or better yet, have a more meaningful method such as <code>NullDevice::new</code> as it's constructor, and here, use <code>PendingEntry::Handle</code> instead of <code>PendingEntry::Thunk</code>?</p>\n</blockquote>",
        "id": 200455135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591812892
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438319166\">PR Review Comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>            .fold(Some(0u32), |len, iov| len.and_then(|x| x.checked_add(iov)))?;\n</code></pre></div>\n\n\n</blockquote>",
        "id": 200455136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591812892
    },
    {
        "content": "<p>ueno updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855\">PR #1855</a> from <code>wip/dueno/null</code> to <code>master</code>:</p>\n<blockquote>\n<p>If stdio is not inherited nor associated with a file, <code>WasiCtxBuilder</code> tries to open \"/dev/null\" (\"NUL\" on Windows) and attach stdio to it. While most platforms today support those device files, it would be<br>\ngood to avoid unnecessary access to the host device if possible.  This patch instead uses a virtual Handle that emulates the \"NUL\" device.</p>\n<p>This is particularly needed when using wasmtime in a restricted environment, such as inside TEE (see <a href=\"https://github.com/enarx/enarx/issues/559\">https://github.com/enarx/enarx/issues/559</a> for the context).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 200536511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591878280
    },
    {
        "content": "<p>ueno submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#pullrequestreview-428857242\">PR Review</a>.</p>",
        "id": 200536681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591878364
    },
    {
        "content": "<p>ueno created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438744672\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Thank you for the suggestion! I've rewritten that part along these lines.</p>\n</blockquote>",
        "id": 200536682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591878364
    },
    {
        "content": "<p>ueno submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#pullrequestreview-428859171\">PR Review</a>.</p>",
        "id": 200536990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591878529
    },
    {
        "content": "<p>ueno created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438746018\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This and the below seem to be a bit tricky (to a Rust newbie :-), as the error is inside closure. I tried to rewrite this part with <code>try_fold</code>, though it required some manual remapping.</p>\n</blockquote>",
        "id": 200536991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591878529
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#pullrequestreview-428967029\">PR Review</a>.</p>",
        "id": 200551432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591885603
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438827059\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ahh, I missed the fact this was within a <code>map</code> closure. FWIW, in situations like this one, I prefer to use a standard <code>for</code> loop and use <code>?</code> without the need to remap or carry over the result until the collect/fold step:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">total_len</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">iov</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">iovs</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">len</span>: <span class=\"nc\">types</span>::<span class=\"n\">Size</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iov</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">().</span><span class=\"n\">try_into</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">total_len</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">total_len</span><span class=\"p\">.</span><span class=\"n\">checked_add</span><span class=\"p\">(</span><span class=\"n\">len</span><span class=\"p\">).</span><span class=\"n\">ok_or</span><span class=\"p\">(</span><span class=\"n\">Errno</span>::<span class=\"n\">Overflow</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">total_len</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 200551433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591885603
    },
    {
        "content": "<p>kubkon edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438827059\">PR Review Comment</a>.</p>",
        "id": 200551824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591885803
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#pullrequestreview-428977483\">PR Review</a>.</p>",
        "id": 200552817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591886261
    },
    {
        "content": "<p>ueno updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855\">PR #1855</a> from <code>wip/dueno/null</code> to <code>master</code>:</p>\n<blockquote>\n<p>If stdio is not inherited nor associated with a file, <code>WasiCtxBuilder</code> tries to open \"/dev/null\" (\"NUL\" on Windows) and attach stdio to it. While most platforms today support those device files, it would be<br>\ngood to avoid unnecessary access to the host device if possible.  This patch instead uses a virtual Handle that emulates the \"NUL\" device.</p>\n<p>This is particularly needed when using wasmtime in a restricted environment, such as inside TEE (see <a href=\"https://github.com/enarx/enarx/issues/559\">https://github.com/enarx/enarx/issues/559</a> for the context).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 200554035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591886837
    },
    {
        "content": "<p>ueno submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#pullrequestreview-428987217\">PR Review</a>.</p>",
        "id": 200554136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591886880
    },
    {
        "content": "<p>ueno created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855#discussion_r438842081\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Indeed, that is much cleaner, thanks!</p>\n</blockquote>",
        "id": 200554137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591886880
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1855\">PR #1855</a>.</p>",
        "id": 200570918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591893925
    }
]