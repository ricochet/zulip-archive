[
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>armv7</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orr</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#-2147483648</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"nf\">blr</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n<span class=\"nf\">br</span><span class=\"w\">      </span><span class=\"nv\">%r14</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 295835705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661776653
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803#issuecomment-1230989893\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p>I think this looks like a good candidate to work on after @cfallin's mid-end optimizer work lands.</p>\n</blockquote>",
        "id": 296018172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661817804
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>armv7</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orr</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#-2147483648</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 296034851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661834791
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803#issuecomment-1231755720\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p>While Cranelift does not support the 32-bit Arm architecture, I would like to mention that the <code>armv7</code> lowering is non-sensical because it operates on general-purpose registers (instead of floating-point ones), unless the code is meant to comply with one of the soft float ABIs and the operations are the first ones in the procedure, so that the input value has not been moved into a floating-point register yet.</p>\n</blockquote>",
        "id": 296135588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661870055
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 296210295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661889068
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803#issuecomment-1232100424\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p>@akirilov-arm Thanks for the clarification. I removed the mention of <code>armv7</code></p>\n</blockquote>",
        "id": 296210734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661889238
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 296845467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133159
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 296845468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133159
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 296845470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133159
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 296845472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133160
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 296845473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133160
    }
]