[
    {
        "content": "<p>pchickey labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>This issue is specific to the Wiggle crate. It is a good beginner issue.</p>\n<h4>Feature</h4>\n<p>We don't have a way to convert between GuestPtr&lt;[u8]&gt; and GuestPtr&lt;str&gt;. I just came across a case where it would be useful - I have a <code>GuestPtr&lt;str&gt;</code> and I need to pass the underlying data as <code>&amp;[u8]</code> to a function that will perform its own utf8 validation - and the opposite is probably useful as well. #### Benefit</p>\n<h4>Implementation</h4>\n<p>Add methods to <code>impl GuestPtr&lt;[T]&gt;</code> and impl <code>GuestPtr&lt;str&gt;</code> that return the other type.</p>\n</blockquote>",
        "id": 201056940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592332698
    },
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>This issue is specific to the Wiggle crate. It is a good beginner issue.</p>\n<h4>Feature</h4>\n<p>We don't have a way to convert between GuestPtr&lt;[u8]&gt; and GuestPtr&lt;str&gt;. I just came across a case where it would be useful - I have a <code>GuestPtr&lt;str&gt;</code> and I need to pass the underlying data as <code>&amp;[u8]</code> to a function that will perform its own utf8 validation - and the opposite is probably useful as well. #### Benefit</p>\n<h4>Implementation</h4>\n<p>Add methods to <code>impl GuestPtr&lt;[T]&gt;</code> and impl <code>GuestPtr&lt;str&gt;</code> that return the other type.</p>\n</blockquote>",
        "id": 201056941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592332698
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>This issue is specific to the Wiggle crate. It is a good beginner issue.</p>\n<h4>Feature</h4>\n<p>We don't have a way to convert between GuestPtr&lt;[u8]&gt; and GuestPtr&lt;str&gt;. I just came across a case where it would be useful - I have a <code>GuestPtr&lt;str&gt;</code> and I need to pass the underlying data as <code>&amp;[u8]</code> to a function that will perform its own utf8 validation - and the opposite is probably useful as well.</p>\n<h4>Implementation</h4>\n<p>Add methods to <code>impl GuestPtr&lt;[T]&gt;</code> and impl <code>GuestPtr&lt;str&gt;</code> that return the other type.</p>\n</blockquote>",
        "id": 201056964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592332707
    },
    {
        "content": "<p>siyopao <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888#issuecomment-645946238\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>Hi! Would it be okay if I took a shot at this? Although I may require a bit more explanation... </p>\n</blockquote>",
        "id": 201253349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592478272
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888#issuecomment-646147040\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>Welcome @siyopao, thank you for volunteering!</p>\n<p>In the wiggle crate, we have three impls of the <code>Pointee</code> trait that describe how we keep track of pointers to atomic values <code>T</code>, slices <code>[T]</code>, and strings <code>str</code>. A string is just a <code>[u8]</code> which contains valid utf-8 codepoints.</p>\n<p>One mechanic of <code>GuestPtr</code> is we check for validity of the contents not when the <code>GuestPtr</code> is constructed but when it is \"dereferenced\" - via <code>read</code>, <code>as_slice</code>, or <code>as_str</code>. So, the check for whether the contents of a <code>GuestPtr&lt;str&gt;</code> are valid utf-8 doesn't occur until <code>GuestPtr::as_str</code> is invoked.</p>\n<p>If the user wishes to skip the utf-8 validity check, there is currently no way to take a <code>GuestPtr&lt;str&gt;</code> and treat it as a <code>GuestPtr&lt;[u8]&gt;</code>, these are kept separate in the type system even though they have the same <code>type Pointer = (u32, u32);</code> indicating the start of, and length of, the linear memory region.</p>\n<p>So, I propose adding a method to <code>impl GuestPtr&lt;str&gt;</code> that has the signature <code>pub fn as_byte_ptr(&amp;self) -&gt; GuestPtr&lt;[u8]&gt;</code>, and a new <code>impl GuestPtr&lt;[u8]&gt;</code> that has a function with signature <code>pub fn as_str_ptr(&amp;self) -&gt; GuestPtr&lt;str&gt;</code>.</p>\n</blockquote>",
        "id": 201292689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592497824
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888#issuecomment-646147040\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>Welcome @siyopao, thank you for volunteering!</p>\n<p>In the wiggle crate, we have three impls of the <code>Pointee</code> trait that describe how we keep track of pointers to atomic values <code>T</code>, slices <code>[T]</code>, and strings <code>str</code>. A string is just a <code>[u8]</code> which contains valid utf-8 codepoints.</p>\n<p>One mechanic of <code>GuestPtr</code> is we check for validity of the contents not when the <code>GuestPtr</code> is constructed but when it is \"dereferenced\" - via <code>read</code>, <code>as_slice</code>, or <code>as_str</code>. So, the check for whether the contents of a <code>GuestPtr&lt;str&gt;</code> are valid utf-8 doesn't occur until <code>GuestPtr::as_str</code> is invoked.</p>\n<p>If the user wishes to skip the utf-8 validity check, there is currently no way to take a <code>GuestPtr&lt;str&gt;</code> and treat it as a <code>GuestPtr&lt;[u8]&gt;</code>, these are kept separate in the type system even though they have the same <code>type Pointer = (u32, u32);</code> indicating the start of, and length of, the linear memory region.</p>\n<p>So, I propose adding a method to <code>impl GuestPtr&lt;str&gt;</code> that has the signature <code>pub fn as_byte_ptr(&amp;self) -&gt; GuestPtr&lt;[u8]&gt;</code>, and a new <code>impl GuestPtr&lt;[u8]&gt;</code> that has a method with signature <code>pub fn as_str_ptr(&amp;self) -&gt; GuestPtr&lt;str&gt;</code>.</p>\n</blockquote>",
        "id": 201292720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592497846
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>This issue is specific to the Wiggle crate. It is a good beginner issue.</p>\n<h4>Feature</h4>\n<p>We don't have a way to convert between <code>GuestPtr&lt;[u8]&gt;</code> and <code>GuestPtr&lt;str&gt;</code>. I just came across a case where it would be useful - I have a <code>GuestPtr&lt;str&gt;</code> and I need to pass the underlying data as <code>&amp;[u8]</code> to a function that will perform its own utf8 validation - and the opposite is probably useful as well.</p>\n<h4>Implementation</h4>\n<p>Add methods to <code>impl GuestPtr&lt;[u8]&gt;</code> and impl <code>GuestPtr&lt;str&gt;</code> that return the other type.</p>\n</blockquote>",
        "id": 201293437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592498188
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888#issuecomment-646147040\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>Welcome @siyopao, thank you for volunteering!</p>\n<p>In the wiggle crate, we have three impls of the <code>Pointee</code> trait that describe how we keep track of pointers to atomic values <code>T</code>, slices <code>[T]</code>, and strings <code>str</code>. A string is just a <code>[u8]</code> which contains valid utf-8 codepoints.</p>\n<p>One mechanic of <code>GuestPtr</code> is we check for validity of the contents not when the <code>GuestPtr</code> is constructed but when it is \"dereferenced\" - via <code>read</code>, <code>as_slice</code>, or <code>as_str</code>. So, the check for whether the contents of a <code>GuestPtr&lt;str&gt;</code> are valid utf-8 doesn't occur until <code>GuestPtr::as_str</code> is invoked.</p>\n<p>If the user wishes to skip the utf-8 validity check, there is currently no way to take a <code>GuestPtr&lt;str&gt;</code> and treat it as a <code>GuestPtr&lt;[u8]&gt;</code>, these are kept separate in the type system even though they have the same <code>type Pointer = (u32, u32);</code> indicating the start of, and length of, the linear memory region they point to.</p>\n<p>So, I propose adding a method to <code>impl GuestPtr&lt;str&gt;</code> that has the signature <code>pub fn as_byte_ptr(&amp;self) -&gt; GuestPtr&lt;[u8]&gt;</code>, and a new <code>impl GuestPtr&lt;[u8]&gt;</code> that has a method with signature <code>pub fn as_str_ptr(&amp;self) -&gt; GuestPtr&lt;str&gt;</code>.</p>\n</blockquote>",
        "id": 201296273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592499354
    },
    {
        "content": "<p>siyopao <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888#issuecomment-646385895\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>Hello @pchickey! Wow, thank you for the in-depth explanation. Let me see what I can do <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 201344451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592530262
    },
    {
        "content": "<p>siyopao <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888#issuecomment-646920151\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>Hi @pchickey. Again, thank you the the explanation. So I have started to take a look, and noticed that the implementation of <code>GuestPtr&lt;str&gt;</code> has a method</p>\n<div class=\"codehilite\"><pre><span></span><code>pub fn as_bytes(&amp;self) -&gt; GuestPtr&lt;&#39;a, [u8]&gt; {\n    GuestPtr::new(self.mem, self.pointer)\n}\n</code></pre></div>\n\n\n<p>Is this basically what your proposed <code>pub fn as_byte_ptr(&amp;self) -&gt; GuestPtr&lt;[u8]&gt;</code> would look like, or am I totally off base? Thank you!</p>\n</blockquote>",
        "id": 201456835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592618394
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888#issuecomment-647672366\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>If that typechecks then it looks correct to me.</p>\n</blockquote>",
        "id": 201636668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592847205
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1888\">Issue #1888</a>:</p>\n<blockquote>\n<p>This issue is specific to the Wiggle crate. It is a good beginner issue.</p>\n<h4>Feature</h4>\n<p>We don't have a way to convert between <code>GuestPtr&lt;[u8]&gt;</code> and <code>GuestPtr&lt;str&gt;</code>. I just came across a case where it would be useful - I have a <code>GuestPtr&lt;str&gt;</code> and I need to pass the underlying data as <code>&amp;[u8]</code> to a function that will perform its own utf8 validation - and the opposite is probably useful as well.</p>\n<h4>Implementation</h4>\n<p>Add methods to <code>impl GuestPtr&lt;[u8]&gt;</code> and impl <code>GuestPtr&lt;str&gt;</code> that return the other type.</p>\n</blockquote>",
        "id": 201809888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592971726
    }
]