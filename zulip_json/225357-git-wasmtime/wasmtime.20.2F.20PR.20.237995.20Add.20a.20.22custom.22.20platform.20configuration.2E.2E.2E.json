[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a> from <code>alexcrichton:min-platform-upstream</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit leverages adds a new \"platform\" to Wasmtime to be supported in the <code>crates/runtime/src/sys</code> folder. This joins preexisting platforms such as Unix and Windows. The goal of this platform is to be an opt-in way to build Wasmtime for targets that don't have a predefined way to run.</p>\n<p>The new \"custom\" platform requires <code>--cfg wasmtime_custom_platform</code> to be passed to the Rust compiler, for example by using <code>RUSTFLAGS</code>. This new platform bottoms out in a C API that is intended to be small and Linux-like. The C API is effectively the interface to virtual memory that Wasmtime requires. This C API is also available as a header file at <code>examples/min-platform/embedding/wasmtime-platform.h</code> (generated by <code>cbindgen</code>).</p>\n<p>The main purpose of this is to make it easier to experiment with porting Wasmtime to new platforms. By decoupling a platform implementation from Wasmtime itself it should be possible to run these experiments out-of-tree. An example of this I've been working on is getting Wasmtime running on bare-metal with a custom kernel. This support enables defining the platform interface of the custom kernel's syscalls outside of Wasmtime.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 423116561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708735768
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423116562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708735768
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423116564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708735769
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423116565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708735769
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423116808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708736008
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423117355,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708736481
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423117460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708736563
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423117954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708736985
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1899396106\">PR review</a>.</p>",
        "id": 423157715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708769997
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1501389971\">PR review comment</a>:</p>\n<blockquote>\n<p>Is <code>ptr</code> guaranteed to stay valid until the memory image is freed or does the implementation need to copy the data elsewhere?</p>\n</blockquote>",
        "id": 423157716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708769997
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1899396242\">PR review</a>.</p>",
        "id": 423157835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770096
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1501390467\">PR review comment</a>:</p>\n<blockquote>\n<p>I assume wasmtime_munmap is used to unmap this memory range again. Is that correct?</p>\n</blockquote>",
        "id": 423157836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770096
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1899396377\">PR review</a>.</p>",
        "id": 423157926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770175
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1501390799\">PR review comment</a>:</p>\n<blockquote>\n<p>Why does this need access to the memory image? It only modifies the VM mapping, right? And doesn't need to read the original content of the memory image.</p>\n</blockquote>",
        "id": 423157927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770175
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1899396423\">PR review</a>.</p>",
        "id": 423157953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770202
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1501390910\">PR review comment</a>:</p>\n<blockquote>\n<p>Are all derived VM mappings guaranteed to be unmapped before calling this?</p>\n</blockquote>",
        "id": 423157954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770202
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1899396584\">PR review</a>.</p>",
        "id": 423158096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770296
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1501391524\">PR review comment</a>:</p>\n<blockquote>\n<p>Why not return an error and have the rust side panic? That would allow recovering from the error. It would be pretty bad for a kernel to simply crash because of an allocation failure.</p>\n</blockquote>",
        "id": 423158097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770296
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1899396820\">PR review</a>.</p>",
        "id": 423158331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770429
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1501392239\">PR review comment</a>:</p>\n<blockquote>\n<p>What is the empty symbol used for? Is it for the <code>STT_FILE</code> symbols? If so skipping <code>SymbolKind::File</code> above makes more sense I think.</p>\n</blockquote>",
        "id": 423158332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708770429
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901080975\">PR review</a>:</p>\n<blockquote>\n<p>r=me with answers to bjorn3's questions/comments</p>\n</blockquote>",
        "id": 423416287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708960102
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901080975\">PR review</a>:</p>\n<blockquote>\n<p>r=me with answers to bjorn3's questions/comments</p>\n</blockquote>",
        "id": 423416288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708960102
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1502736675\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we remove \"probably\" here? If I were attempting to implement this API, I wouldn't know what to do with that.</p>\n</blockquote>",
        "id": 423416290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708960102
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1502741230\">PR review comment</a>:</p>\n<blockquote>\n<p>The nomicon recommends against uninhabited types to represent C opaque types: <a href=\"https://doc.rust-lang.org/nomicon/ffi.html#representing-opaque-structs\">https://doc.rust-lang.org/nomicon/ffi.html#representing-opaque-structs</a></p>\n<p>Any reason not to follow their guidance here?</p>\n</blockquote>",
        "id": 423416292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708960102
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1502748982\">PR review comment</a>:</p>\n<blockquote>\n<p>Does <code>len</code> have to be a multiple of the system's page size? Is the resulting memory image rounded up to the page size? Is this stuff visible at all to Wasmtime?</p>\n</blockquote>",
        "id": 423416293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708960103
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1502744785\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// Returns 1 if `wasmtime_longjmp` was not called and `callback` returned.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 423416296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708960103
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901584979\">PR review</a>.</p>",
        "id": 423449505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708968698
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503037924\">PR review comment</a>:</p>\n<blockquote>\n<p>Good question, I'll expand the docs to indicate that a copy is required.</p>\n</blockquote>",
        "id": 423449506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708968698
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901587996\">PR review</a>.</p>",
        "id": 423449824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708968785
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503040255\">PR review comment</a>:</p>\n<blockquote>\n<p>Correct, I'll expand the docs here</p>\n</blockquote>",
        "id": 423449826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708968785
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901596576\">PR review</a>.</p>",
        "id": 423450570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969060
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503047224\">PR review comment</a>:</p>\n<blockquote>\n<p>I was mostly just reflecting the existing Wasmtime API, which has not been meticulously thought out, onto the C API. You're right though that this entire function I think is not necessary, and I've replaced it with a call to <code>wasmtime_mmap_remap</code>.</p>\n</blockquote>",
        "id": 423450572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969060
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901599349\">PR review</a>.</p>",
        "id": 423450857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969151
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503049452\">PR review comment</a>:</p>\n<blockquote>\n<p>Not currently, no, I'll expand the documentation.</p>\n</blockquote>",
        "id": 423450858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969151
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901604181\">PR review</a>.</p>",
        "id": 423451234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969309
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503053469\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah I didn't question it much, but turns out it's <code>SymbolKind::Null</code> so I filtered that out to remove this case.</p>\n</blockquote>",
        "id": 423451235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969309
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901612152\">PR review</a>.</p>",
        "id": 423451800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969562
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503059912\">PR review comment</a>:</p>\n<blockquote>\n<p>Sort of, but also sort of not. I've expanded the words here to describe that the meaning of an unhandled trap is embedder-specific. Basically if Wasmtime doesn't handle a <code>SIGSEGV</code>, for example, it's up to the application of what to do next. Wasmtime can't know whether that is surely an \"abort the process\" kind of exception.</p>\n</blockquote>",
        "id": 423451802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969562
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901619745\">PR review</a>.</p>",
        "id": 423452300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969765
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503065476\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately that recommendation doesn't generate the right C header bindings.</p>\n<p>I'm also not aware of any compiler issues using <code>*mut Uninhabited</code>, which is what these bindings are doing. While I know <code>&amp;mut Uninhabited</code> is bad, the former is not plagued with the same issues as far as I'm aware.</p>\n</blockquote>",
        "id": 423452301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969765
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901623676\">PR review</a>.</p>",
        "id": 423452622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969883
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503068409\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes they're both guaranteed to be page aligned, updated docs to match.</p>\n<blockquote>\n<p>Is this stuff visible at all to Wasmtime?</p>\n</blockquote>\n<p>Could you elaborate on this? (e.g. what you mean by \"stuff\")</p>\n</blockquote>",
        "id": 423452624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969883
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423452676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708969907
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901628302\">PR review</a>.</p>",
        "id": 423452992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708970029
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503071792\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd be tempted to say the embedding should crash in an embedding-defined way if possible to get better stack frames/debugging/etc. This API isn't intended to be set in stone until the end of time so I'm imagining it can change in the future to returning a result. In the meantime though whether the embedder aborts or Wasmtime aborts seems six-to-one-half-dozen-or-the-other to me</p>\n</blockquote>",
        "id": 423452993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708970029
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1901749176\">PR review</a>.</p>",
        "id": 423463514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708973822
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1503145367\">PR review comment</a>:</p>\n<blockquote>\n<p>The embedder could return an error bringing down just a single wasm instance without crashing the entire process.</p>\n</blockquote>",
        "id": 423463536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708973829
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#pullrequestreview-1904423241\">PR review</a>.</p>",
        "id": 423668405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709057392
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#discussion_r1504724747\">PR review comment</a>:</p>\n<blockquote>\n<p>That's a good point yeah, and it's also true that <code>Result</code> is already in all these locations, so you've convinced me and I'll remove the assumed aborts here</p>\n</blockquote>",
        "id": 423668406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709057392
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423671545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709058523
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995#issuecomment-1967355023\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>:</p>\n<blockquote>\n<p>Ok I've updated to make the C API fallible and Wasmtime propagates the error codes (thanks for pushing back on that @bjorn3!)</p>\n</blockquote>",
        "id": 423671648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709058570
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423871220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709142580
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423871227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709142584
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423886936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709148141
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423893022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709150433
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7995\">PR #7995</a>.</p>",
        "id": 423901064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709153569
    }
]