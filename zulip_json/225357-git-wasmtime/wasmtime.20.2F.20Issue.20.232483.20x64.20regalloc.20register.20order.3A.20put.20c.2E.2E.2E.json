[
    {
        "content": "<p>julian-seward1 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2483#issuecomment-739871299\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2483\">Issue #2483</a>:</p>\n<blockquote>\n<p>@cfallin regarding the coalescing problem, I'm aware of a shortcoming that is probably what you are seeing.  This was as a result of a test case that @bnjbvr had a couple of months back.</p>\n<p>The problem is that, although the coalescer propagates \"we all want to ride together in the same real reg please!\" constraints along arbitrarily long chains of virtualreg-to-virtualreg assignments, it doesn't do that for virtualreg-realreg or realreg-virtualreg assignments.  In such cases it only does a one-step propagation, which is sufficient for most purposes.  Consequently, in a case such as</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">vreg2</span><span class=\"w\"> </span>:<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vreg1</span><span class=\"w\"></span>\n<span class=\"n\">rreg</span><span class=\"w\"> </span>:<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vreg2</span><span class=\"w\"></span>\n</code></pre></div>\n<p>it will correctly conclude that <code>vreg2</code> should be in <code>rreg</code>, but that constraint doesn't get propagated back to <code>vreg1</code>.  This is by accident, not by design.</p>\n<p>This is no doubt fixable, but I'd have to page in a ton of stuff, so won't happen at least in the short term.  The real concern is not that it isn't fixable or is hard to fix, but rather that fixing it might make the coalescer slower in some cases.</p>\n</blockquote>",
        "id": 219070712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607342059
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2483#issuecomment-740043113\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2483\">Issue #2483</a>:</p>\n<blockquote>\n<p>@julian-seward1 thanks for the details -- this will be useful if/when I jump into regalloc to handle this case in the future :-) It doesn't seem to be a huge deal at the moment, at least informally while staring at code.</p>\n</blockquote>",
        "id": 219105452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607359986
    }
]