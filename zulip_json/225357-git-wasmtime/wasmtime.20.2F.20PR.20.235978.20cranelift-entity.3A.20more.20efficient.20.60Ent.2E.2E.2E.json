[
    {
        "content": "<p>maekawatoshiki opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978\">PR #5978</a> from <code>develop</code> to <code>main</code>:</p>\n<blockquote>\n<p>As discussed on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5804\">https://github.com/bytecodealliance/wasmtime/issues/5804</a>, this PR replaces <code>u8</code> elements in <code>EntitySet</code> with <code>usize</code> elements.</p>\n<p>I didn't add doc-tests. If I did so, I needed to add a piece of code like below to doc-tests for every method, which looks redundant to me. I think there's no need to remove the existing tests.<br>\nLet me know if something in my opinion is wrong.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// `EntityRef` impl for testing.</span>\n<span class=\"cp\">#[derive(Clone, Copy, Debug, PartialEq, Eq, PartialOrd, Ord)]</span>\n<span class=\"k\">struct</span> <span class=\"nc\">E</span><span class=\"p\">(</span><span class=\"kt\">u32</span><span class=\"p\">);</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">EntityRef</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">i</span>: <span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">E</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">usize</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">usize</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">EntitySet</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<hr>\n<p>I realized that, in <code>wasmtime/cranelift/entity</code>, <code>cargo test</code> fails on some tests below.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">running</span><span class=\"w\"> </span><span class=\"mi\">52</span><span class=\"w\"> </span><span class=\"n\">tests</span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"n\">omitted</span><span class=\"o\">..</span><span class=\"p\">.</span>\n\n<span class=\"n\">failures</span>:\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">tests</span>::<span class=\"n\">basic_entity</span>::<span class=\"n\">cannot_construct_from_reserved_u32</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">note</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">expected</span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">tests</span>::<span class=\"n\">basic_entity</span>::<span class=\"n\">cannot_construct_from_reserved_usize</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">note</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">expected</span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">tests</span>::<span class=\"n\">other_entity</span>::<span class=\"n\">cannot_construct_from_reserved_u32</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">note</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">expected</span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">tests</span>::<span class=\"n\">other_entity</span>::<span class=\"n\">cannot_construct_from_reserved_usize</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">note</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">expected</span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">tests</span>::<span class=\"n\">prefix_entity</span>::<span class=\"n\">cannot_construct_from_reserved_u32</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">note</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">expected</span>\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">tests</span>::<span class=\"n\">prefix_entity</span>::<span class=\"n\">cannot_construct_from_reserved_usize</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span>\n<span class=\"n\">note</span>: <span class=\"nc\">test</span><span class=\"w\"> </span><span class=\"n\">did</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">expected</span>\n\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">tests</span>::<span class=\"n\">basic_entity</span>::<span class=\"n\">cannot_construct_from_reserved_u32</span>\n<span class=\"w\">    </span><span class=\"n\">tests</span>::<span class=\"n\">basic_entity</span>::<span class=\"n\">cannot_construct_from_reserved_usize</span>\n<span class=\"w\">    </span><span class=\"n\">tests</span>::<span class=\"n\">other_entity</span>::<span class=\"n\">cannot_construct_from_reserved_u32</span>\n<span class=\"w\">    </span><span class=\"n\">tests</span>::<span class=\"n\">other_entity</span>::<span class=\"n\">cannot_construct_from_reserved_usize</span>\n<span class=\"w\">    </span><span class=\"n\">tests</span>::<span class=\"n\">prefix_entity</span>::<span class=\"n\">cannot_construct_from_reserved_u32</span>\n<span class=\"w\">    </span><span class=\"n\">tests</span>::<span class=\"n\">prefix_entity</span>::<span class=\"n\">cannot_construct_from_reserved_usize</span>\n\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">result</span>: <span class=\"nc\">FAILED</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"n\">passed</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">ignored</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">measured</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">filtered</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">finished</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"n\">s</span>\n</code></pre></div>\n<p>Is this an expected behavior?</p>\n</blockquote>",
        "id": 340865524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678455946
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978#pullrequestreview-1335569377\">PR review</a>.</p>",
        "id": 340962772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678481640
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978#pullrequestreview-1335569377\">PR review</a>.</p>",
        "id": 340962774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678481640
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978#discussion_r1132843964\">PR review comment</a>:</p>\n<blockquote>\n<p>While reviewing this patch I noticed that I'm not sure why the <code>cardinality</code> function was written the way it was. This is nothing wrong with your changes, but if you'd like to make another PR I think this function can be cleaned up.</p>\n<p>As far as I can tell, <code>self.len</code> is supposed to always track the position of the last 1 bit in the set. If that's working correctly, then the first <code>count_ones</code> loop should work fine in all cases and we don't need a special case for the last element. The only trick is that instead of looping to <code>self.len/BITS</code>, we need to round up to the next element boundary with <code>(self.len + (BITS - 1)) / BITS</code>, like we've done elsewhere.</p>\n<p>I don't want to make that change in this PR because it's possible that <code>self.len</code> is not being managed correctly and I'd want to think about that separately.</p>\n</blockquote>",
        "id": 340962775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678481640
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978#discussion_r1132845329\">PR review comment</a>:</p>\n<blockquote>\n<p>I see a couple of places where variables have <code>byte</code> in their names, which is confusing now that they aren't actually bytes. Could you search for the word <code>byte</code> in this file and pick new names? In this case, I think <code>byte_ix</code> could be <code>idx</code> instead.</p>\n<p>As future work, this loop could be replaced with something like <code>self.elems[..self.len / BITS].iter().map(|x| x.count_ones() as usize).sum()</code>. That should be faster by avoiding bounds checks. But I'd want that in a separate PR. I like that you've kept this PR simple, making only one change.</p>\n</blockquote>",
        "id": 340962776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678481640
    },
    {
        "content": "<p>maekawatoshiki updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978\">PR #5978</a> from <code>develop</code> to <code>main</code>.</p>",
        "id": 341012835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678509459
    },
    {
        "content": "<p><strong>maekawatoshiki</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978\">PR #5978</a>.</p>",
        "id": 341019207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678513982
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978#pullrequestreview-1337734553\">PR review</a>.</p>",
        "id": 341546097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678733009
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5978\">PR #5978</a>.</p>",
        "id": 341554096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678735350
    }
]