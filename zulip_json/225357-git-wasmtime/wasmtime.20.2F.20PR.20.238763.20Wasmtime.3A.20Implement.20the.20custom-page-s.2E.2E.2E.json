[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a> from <code>fitzgen:custom-page-sizes</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit adds support for the custom-page-sizes proposal to Wasmtime: <a href=\"https://github.com/WebAssembly/custom-page-sizes\">https://github.com/WebAssembly/custom-page-sizes</a></p>\n<p>I've migrated, fixed some bugs within, and extended the <code>*.wast</code> tests for this proposal from the <code>wasm-tools</code> repository. I intend to upstream them into the proposal shortly.</p>\n<p>There is a new <code>wasmtime::Config::wasm_custom_page_sizes_proposal</code> method to enable or disable the proposal. It is disabled by default.</p>\n<p>Our fuzzing config has been updated to turn this feature on/off as dictated by the arbitrary input given to us from the fuzzer.</p>\n<p>Additionally, there were getting to be so many constructors for <code>wasmtime::MemoryType</code> that I added a builder rather than add yet another constructor.</p>\n<p>In general, we store the <code>log2(page_size)</code> rather than the page size directly. This helps cut down on invalid states and properties we need to assert.</p>\n<p>I've also intentionally written this code such that supporting any power of two page size (rather than just the exact values <code>1</code> and <code>65536</code> that are currently valid) will essentially just involve updating <code>wasmparser</code>'s validation and removing some debug asserts in Wasmtime.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 443855681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718050542
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443855684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718050543
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443855685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718050543
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443855689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718050544
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443855691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718050544
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443855693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718050544
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443855694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718050544
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443862610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718052963
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443862937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718053117
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443864147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718053530
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443871572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718056935
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2108731680\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me, thanks!</p>\n</blockquote>",
        "id": 443874599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2108731680\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me, thanks!</p>\n</blockquote>",
        "id": 443874600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633815479\">PR review comment</a>:</p>\n<blockquote>\n<p>FITZGEN</p>\n</blockquote>",
        "id": 443874601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633897782\">PR review comment</a>:</p>\n<blockquote>\n<p>How come this is stored here? This should be statically known from ambient context elsewhere I think? (e.g. this just stores the runtime state of the base/current byte length)</p>\n</blockquote>",
        "id": 443874602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633820313\">PR review comment</a>:</p>\n<blockquote>\n<p>(and/or if it's just for 1-byte pages could this have special handling to handle that case with an <code>icmp</code>/<code>select</code> combo specifically?)</p>\n<p>(and/or if you feel it's not worth it to specialize here mind leaving a comment?)</p>\n</blockquote>",
        "id": 443874603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633900575\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind importing this function since it's called a few times in succession here?</p>\n</blockquote>",
        "id": 443874604,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633819086\">PR review comment</a>:</p>\n<blockquote>\n<p>Since we're already storing the log2 and cranelift doesn't optimize div, want to go ahead and change this to a shift-right?</p>\n</blockquote>",
        "id": 443874605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633901621\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind importing this function as well since it's used a few times?</p>\n</blockquote>",
        "id": 443874606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633819351\">PR review comment</a>:</p>\n<blockquote>\n<p>How come the translation here changed?</p>\n</blockquote>",
        "id": 443874607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718058565
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#issuecomment-2159504049\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"cranelift:area:x64\", \"cranelift:wasm\", \"fuzzing\", \"wasmtime:api\", \"wasmtime:config\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 443883577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063085
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#issuecomment-2159504470\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 443883631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063116
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443884155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063324
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#issuecomment-2159504470\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[x] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 443884205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063353
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#issuecomment-2159504470\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[x] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[x] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 443884212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063356
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#issuecomment-2159504470\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[x] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[x] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[x] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 443884213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063359
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2108967845\">PR review</a>.</p>",
        "id": 443884982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063737
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633989730\">PR review comment</a>:</p>\n<blockquote>\n<p>I think I was using it for an approach that I ultimately abandoned.</p>\n</blockquote>",
        "id": 443884983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063737
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443885161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063818
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 443885428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718063949
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2108969407\">PR review</a>.</p>",
        "id": 443887332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718064749
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633990907\">PR review comment</a>:</p>\n<blockquote>\n<p>Did this comment change at all, or was it just reformatted?</p>\n</blockquote>",
        "id": 443887333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718064749
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2108969407\">PR review</a>.</p>",
        "id": 443887334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718064749
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1633996383\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this be an <code>unwrap_or_else</code> to avoid always computing the default?</p>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        .unwrap_or_else(|| u64::MAX / page_size + 1)\n</code></pre></div>\n<p>Also, could you add a comment that explains the default?</p>\n</blockquote>",
        "id": 443887335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718064749
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2110895287\">PR review</a>.</p>",
        "id": 444040894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718121963
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635145529\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah with single-byte pages <code>-1</code> is now a valid return from a <code>memory.{grow,size}</code> in certain cases and so in this scenario we can't blindly sign extend. I can factor this out to another case for only when the memory has a 1-byte page size.</p>\n</blockquote>",
        "id": 444040909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718121963
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2110920207\">PR review</a>.</p>",
        "id": 444044519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718122702
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635161281\">PR review comment</a>:</p>\n<blockquote>\n<p>I think sign extension still works since you can't actually consume the entire address space for wasm though, right?</p>\n</blockquote>",
        "id": 444044521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718122702
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2110928111\">PR review</a>.</p>",
        "id": 444045497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718122947
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635166226\">PR review comment</a>:</p>\n<blockquote>\n<p>But you could consume ~half of it and therefore have the sign bit set, which if we sign extend will result in a negative value / wrong unsigned value.</p>\n</blockquote>",
        "id": 444045498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718122947
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2110939140\">PR review</a>.</p>",
        "id": 444047213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123273
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635173204\">PR review comment</a>:</p>\n<blockquote>\n<p>The only \"memory growth failed\" value though is -1, not any negative number?</p>\n</blockquote>",
        "id": 444047215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123273
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2110949060\">PR review</a>.</p>",
        "id": 444048894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123566
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635179295\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, but you could have a valid memory size that has the sign bit set now, where that was impossible before because the maximum number of wasm pages that could fit in the address space wasn't large enough. That is, <code>(u32::MAX / 2) + 1</code> is a valid memory size with single-byte page sizes, and it has its high bit set, so if we sign-extend that value then we end up giving an incorrect memory size to the Wasm.</p>\n</blockquote>",
        "id": 444048895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123566
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2110952568\">PR review</a>.</p>",
        "id": 444049265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123656
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635181684\">PR review comment</a>:</p>\n<blockquote>\n<p>Just wrapped to 80 characters.</p>\n</blockquote>",
        "id": 444049266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123656
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2110955652\">PR review</a>.</p>",
        "id": 444049542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123750
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635183679\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it probably doesn't matter much either way in this case, since there isn't anything here that could prevent LLVM from cleaning this up itself (like a function call) but happy to make the change so that future readers don't ahve to reason through that.</p>\n</blockquote>",
        "id": 444049543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718123750
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444053209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718124873
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#issuecomment-2161217384\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>:</p>\n<blockquote>\n<p>I believe all review feedback has been addressed at this point.</p>\n</blockquote>",
        "id": 444053279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718124903
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444070741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718130269
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444073522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718131193
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2111263963\">PR review</a>.</p>",
        "id": 444080432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718133514
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635368968\">PR review comment</a>:</p>\n<blockquote>\n<p>Right! I'm apparently forgetting how negative numbers work...</p>\n</blockquote>",
        "id": 444080433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718133514
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2111267048\">PR review</a>.</p>",
        "id": 444081127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718133729
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2111267048\">PR review</a>.</p>",
        "id": 444081129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718133729
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1635370868\">PR review comment</a>:</p>\n<blockquote>\n<p>This change is fine by me, but this might reveal some fuzz bugs after this lands as we trip various assertions that previously assumed things were page aligned. I'm not sure how many of these options we frob during fuzzing though...</p>\n<p>In any case it's fine to fix them as they arise, just wanted to give a heads up.</p>\n</blockquote>",
        "id": 444081130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718133729
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444090453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718136855
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444090471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718136861
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444291718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718213280
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444291811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718213297
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444329166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718225132
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444329185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718225139
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444331937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226221
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1637088917\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this'll want to stay as <code>true</code> as it's trying to exercise the path where the OS says \"no you can't have that much memory\" as opposed to the store limiting memory, and if <code>false</code> is returned here we won't ever hit the OS. I'm not sure why this test previously passed on MIRI though and it's failing on this PR</p>\n</blockquote>",
        "id": 444332181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226315
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2114218852\">PR review</a>.</p>",
        "id": 444332184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226316
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2114223754\">PR review</a>.</p>",
        "id": 444332655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226503
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1637092572\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm not sure why this test previously passed on MIRI though and it's failing on this PR</p>\n</blockquote>\n<p>I'm not sure either, AFAICT we should be doing the same thing as before.</p>\n</blockquote>",
        "id": 444332656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226503
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2114228462\">PR review</a>.</p>",
        "id": 444333071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226694
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1637096479\">PR review comment</a>:</p>\n<blockquote>\n<p>Testing locally it looks like an error was returned before we hit MIRI before. I changed <a href=\"https://github.com/bytecodealliance/wasmtime/blob/34d2a08fc8340ef0b9c010947482dbb510a3f1a3/crates/wasmtime/src/runtime/vm/sys/miri/mmap.rs#L38\">this line</a> to a panic and the test passed. </p>\n</blockquote>",
        "id": 444333073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226695
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444333351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718226825
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#issuecomment-2163923124\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>:</p>\n<blockquote>\n<p>oh my god this CI failure is driving me crazy:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/9489825551/job/26152011334?pr=8763#step:5:243\">https://github.com/bytecodealliance/wasmtime/actions/runs/9489825551/job/26152011334?pr=8763#step:5:243</a></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">unused</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">prelude</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"err\">`</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">vm</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">14</span><span class=\"p\">:</span><span class=\"mi\">5</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">prelude</span><span class=\"p\">::</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DefinedFuncIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">DefinedMemoryIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">HostPtr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ModuleInternedTypeIndex</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">VMOffsets</span><span class=\"p\">,</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^</span>\n<span class=\"w\">   </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"n\">unused</span><span class=\"o\">-</span><span class=\"n\">imports</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">implied</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"n\">warnings</span><span class=\"err\">`</span>\n<span class=\"w\">   </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">help</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">to</span><span class=\"w\"> </span><span class=\"kr\">override</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"n\">warnings</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"cp\">#[allow(unused_imports)]</span><span class=\"err\">`</span>\n</code></pre></div>\n<p>If I remove that import, then all the <code>err2anyhow()</code> calls break. I've tried with all sorts of different <code>cfg</code>s and I can't reproduce locally, even when I copy the <code>./ci/run-tests.sh</code> invocation from CI.</p>\n<p>I have no idea why it thinks this is unused, AFAICT, it is definitely used.</p>\n</blockquote>",
        "id": 444334381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718227289
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444335922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718227973
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763\">PR #8763</a>.</p>",
        "id": 444339468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718229696
    },
    {
        "content": "<p>XinyuZeng submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2296202281\">PR review</a>.</p>",
        "id": 469340713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726047038
    },
    {
        "content": "<p>XinyuZeng created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1753788907\">PR review comment</a>:</p>\n<blockquote>\n<p>This comment seems to be incomplete</p>\n</blockquote>",
        "id": 469340714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726047038
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#pullrequestreview-2303464576\">PR review</a>.</p>",
        "id": 470000318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726242019
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8763#discussion_r1759090041\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for catching this!</p>\n</blockquote>",
        "id": 470000319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726242019
    }
]