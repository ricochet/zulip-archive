[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9766\">issue #9766</a>:</p>\n<blockquote>\n<p>While reviewing <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9762\">https://github.com/bytecodealliance/wasmtime/pull/9762</a>, I realized that in the case of 32-bit operands a sign-extension is required given that <code>cranelift-codegen</code>, only accepts 64-bit operands. </p>\n<p>The ARM64 documentation states [1], [2] that 32-bit operands for division are allowed.</p>\n<p>[1]: <a href=\"https://developer.arm.com/documentation/ddi0596/2020-12/Base-Instructions/SDIV--Signed-Divide-\">https://developer.arm.com/documentation/ddi0596/2020-12/Base-Instructions/SDIV--Signed-Divide-</a><br>\n[2]: <a href=\"https://developer.arm.com/documentation/ddi0602/2024-09/Base-Instructions/UDIV--Unsigned-divide-\">https://developer.arm.com/documentation/ddi0602/2024-09/Base-Instructions/UDIV--Unsigned-divide-</a></p>\n<p>Introducing support for 32-bit operands means that in Winch we can skip the extension sequence when dealing with 32-bit operands, similar th </p>\n<p>As a side note, it seems that when migrating to ISLE <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572/files#diff-bd652d5af8795961ba7456cf427fdae37bb82500e9f18fa6fc1621281bd1ab58L103\">the intention was to add support for 32-bit operands</a>. </p>\n<p>cc @alexcrichton / @cfallin I'm not entirely familiar with the development history of the Aarch64 backend, is there any other reason to be aware of when considering support for 32-bit operands?<br>\n</p>\n</blockquote>",
        "id": 486996287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733751138
    }
]