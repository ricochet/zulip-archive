[
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492533845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736351837
    },
    {
        "content": "<p>jeffcharles opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a> from <code>jeffcharles:winch-add-load-extend-splat-instructions</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nPart of #8093. Adds support on x64 with AVX2 for:</p>\n<ul>\n<li><code>v128.load8x8_s</code></li>\n<li><code>v128.load8x8_u</code></li>\n<li><code>v128.load16x4_s</code></li>\n<li><code>v128.load16x4_u</code></li>\n<li><code>v128.load32x2_s</code></li>\n<li><code>v128.load32x2_u</code></li>\n<li><code>v128.load8_splat</code></li>\n<li><code>v128.load16_splat</code></li>\n<li><code>v128.load32_splat</code></li>\n<li><code>v128.load64_splat</code></li>\n</ul>\n<p>I've changed <code>wasm_load</code> on the macroassemblers to take a <code>LoadKind</code> instead of <code>Option&lt;ExtendKind&gt;</code> to model the additional vector operations (vector extends and splats), but I'm open to changing that to a different abstraction.</p>\n</blockquote>",
        "id": 492533846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736351837
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492533848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736351838
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492533849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736351838
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492533850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736351838
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#issuecomment-2578070764\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>:</p>\n<blockquote>\n<p>I can take this review.</p>\n</blockquote>",
        "id": 492537177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736352856
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492537191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736352863
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#issuecomment-2578260409\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 492555719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736358280
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492596386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736376708
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1908892259\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you return an error here instead of panicking? I've done a refactoring across the compiler to ensure that panics are minimal, particularly for unimplemented/unsupported features. This ensures that we can can successfully run spec tests even when there's partial support for Wasm proposals. </p>\n<p>Perhaps we can introduce a new <code>Unimplemeted*</code> enum entry here <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/codegen/error.rs#L7\">https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/codegen/error.rs#L7</a>, something around the lines of <code>UnimplementedLoadKind</code></p>\n</blockquote>",
        "id": 492824469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736459129
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2540055334\">PR review</a>:</p>\n<blockquote>\n<p>Looking good! Left some comments inline. </p>\n</blockquote>",
        "id": 492824470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736459129
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1909467285\">PR review comment</a>:</p>\n<blockquote>\n<p>Nit: can we remove this enum entry and keep <code>Option&lt;LoadKind&gt;</code> instead? Or where you envisioning this approach to be easier to consume in the callee as opposed to using an <code>Option</code>? </p>\n</blockquote>",
        "id": 492824471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736459129
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1909456778\">PR review comment</a>:</p>\n<blockquote>\n<p>Given that we're starting with avx2 as our baseline, I wonder if we should emit the <code>vpmov*</code> variants here. </p>\n</blockquote>",
        "id": 492824472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736459129
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2542665736\">PR review</a>.</p>",
        "id": 492968496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736521447
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1910499410\">PR review comment</a>:</p>\n<blockquote>\n<p>We could. I figured if they are equivalent instructions that are supported on older chipsets, we could emit those so there would be less work to support non-AVX CPUs in the future given we only need to support 128-bit vectors. One thing I'm not clear on is if <code>Vpmov*</code> instructions are faster or not. If they are faster, then it would probably make sense to emit those instead.</p>\n</blockquote>",
        "id": 492968501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736521448
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2542680379\">PR review</a>.</p>",
        "id": 492969655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736521831
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1910508264\">PR review comment</a>:</p>\n<blockquote>\n<p>It's a little easier on the callee side IMO since we can avoid nesting a match inside another match or an if-let. It's possible that <code>None</code> is not the appropriate name for this variant and something like <code>Plain</code> or <code>Simple</code> might be more appropriate.</p>\n</blockquote>",
        "id": 492969657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736521831
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2542695133\">PR review</a>.</p>",
        "id": 492970948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736522230
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1910517396\">PR review comment</a>:</p>\n<blockquote>\n<p>My expectation is that they are probably more performant, but I haven't performed any meaningful benchmarks. Aside from the potential performance benefit, my comment here is for consistency mostly: given that we aren't planning on doing any checks/emission for anything other than avx2 for SIMD at least initially, I'd prefer if we could default to emitting avx2 only to start. My expectation is that when thinking about fallbacks for anything &lt; avx2, it will require substantial work regardless given that we'd probably want to find a way to share that implementation with what already exists in Cranelift.</p>\n</blockquote>",
        "id": 492970949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736522230
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2542702366\">PR review</a>.</p>",
        "id": 492971553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736522428
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1910521641\">PR review comment</a>:</p>\n<blockquote>\n<p>It's been a bit since I last checked, and I also haven't benchmarked, but IIRC the Intel optimization guide recommended either using exclusively VEX instructions (ones with the <code>v*</code> prefix) or exclusively non-VEX instructions. It's got something subtle to do with CPU state and such. It generally has to do with the fact that VEX instructions mutate the entire register contents as opposed to SSE which only mutate the lower 128-bits. This means that SSE instructions can accidentally create false dependencies between instructions.</p>\n<p>The rule of thumb I used in Cranelift at least was to try to unconditionally prefer <code>v*</code> VEX instructions when AVX is enabled as I think that's what Intel assumes compilers are doing to make things faster</p>\n</blockquote>",
        "id": 492971555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736522428
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2542711182\">PR review</a>.</p>",
        "id": 492972320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736522650
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1910526692\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't want to bikeshed too much here, I think the comment is clear enough, so I'm good if you'd like to leave it this way. </p>\n</blockquote>",
        "id": 492972323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736522650
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492973515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736523050
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 492983097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736526156
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2542941427\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 492986419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736527263
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493025696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736543227
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493031213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736546042
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493031884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736546372
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493041393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736552104
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#pullrequestreview-2546629125\">PR review</a>.</p>",
        "id": 493353139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736775387
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950#discussion_r1913203663\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                let unsupported = [\"spec_testsuite/simd_align.wast\"];\n</code></pre></div>\n<p>This is why the PR is still failing in CI. I tested the change in my arm64 machine FWIW. </p>\n</blockquote>",
        "id": 493353142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736775388
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493373365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736780465
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493375817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736781111
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493381081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736782444
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9950\">PR #9950</a>.</p>",
        "id": 493385472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736783634
    }
]