[
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3262\">issue #3262</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>This is fairly common pattern that generates LLVM-based languages for power of two code (<code>x != 0 &amp; (x &amp; (x - 1) == 0</code> =&gt; <code>popcnt(x) == 1</code>). This is a pretty compact and fast representation, but not for platforms which don't support <code>popcnt</code> instructions, such as armv8 or x86 before Nehalem architecture. AArch64 could also benefit from this.</p>\n<h4>Benefit</h4>\n<p><a href=\"https://godbolt.org/z/dM4fqvozn\">https://godbolt.org/z/dM4fqvozn</a></p>\n<h4>Implementation</h4>\n<p>During lowering I propose lower <code>popcnt(x) == 1</code> pattern to <code>(x != 0) &amp; ((x &amp; (x - 1) == 0)</code> for some archs.<br>\n</p>\n</blockquote>",
        "id": 251132408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630243277
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3262\">issue #3262</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>This is fairly common pattern that generates by LLVM-based languages for power of two code (<code>x != 0 &amp; (x &amp; (x - 1) == 0</code> =&gt; <code>popcnt(x) == 1</code>). This is a pretty compact and fast representation, but not for platforms which don't support <code>popcnt</code> instructions, such as armv8 or x86 before Nehalem architecture. AArch64 could also benefit from this.</p>\n<h4>Benefit</h4>\n<p><a href=\"https://godbolt.org/z/dM4fqvozn\">https://godbolt.org/z/dM4fqvozn</a></p>\n<h4>Implementation</h4>\n<p>During lowering I propose lower <code>popcnt(x) == 1</code> pattern to <code>(x != 0) &amp; ((x &amp; (x - 1) == 0)</code> for some archs.<br>\n</p>\n</blockquote>",
        "id": 251147464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630259577
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3262\">issue #3262</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>This is fairly common pattern that generates by LLVM-based languages for power of two code <br>\n(<code>x != 0 &amp; (x &amp; (x - 1) == 0</code> =&gt; <code>popcnt(x) == 1</code>). This is a pretty compact and fast representation, but not for platforms which don't support <code>popcnt</code> instructions, such as armv8 or x86 before Nehalem architecture. AArch64 could also benefit from this.</p>\n<h4>Benefit</h4>\n<p><a href=\"https://godbolt.org/z/dM4fqvozn\">https://godbolt.org/z/dM4fqvozn</a></p>\n<h4>Implementation</h4>\n<p>During lowering I propose lower <code>popcnt(x) == 1</code> pattern to <code>(x != 0) &amp; ((x &amp; (x - 1) == 0)</code> for some archs.<br>\n</p>\n</blockquote>",
        "id": 251147474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630259589
    }
]