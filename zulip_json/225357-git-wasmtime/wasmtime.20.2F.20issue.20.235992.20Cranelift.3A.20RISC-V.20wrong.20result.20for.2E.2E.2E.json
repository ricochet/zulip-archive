[
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">interpret</span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">riscv64gc</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a_f32</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i16</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">b_f32</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a_f64</span><span class=\"p\">(</span><span class=\"kt\">f64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i16</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">b_f64</span><span class=\"p\">(</span><span class=\"kt\">f64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li><code>clif-util test ./the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The test to pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">28032</span>\n<span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">128</span>\n<span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">9494000000000</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">28032</span>\n<span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">9494000000000</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">128</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main</p>\n<p>Operating system: Linux</p>\n<p>Architecture: riscv64</p>\n<h3>Extra Info</h3>\n<p>cc: @yuyang-ok <br>\n</p>\n</blockquote>",
        "id": 341162160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678555383
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1465514174\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>Should works fine.<br>\ngenerate code quit simple.</p>\n</blockquote>\n<p>test interpret<br>\ntest run<br>\ntarget riscv64</p>\n<p>function %b_f32(f32) -&gt; i8 {<br>\nblock0(v0: f32):<br>\n    v1 = fcvt_to_uint_sat.i8 v0<br>\n    return v1<br>\n}<br>\n; run: %b_f32(0x1.949400p21) == -1</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>\n<p>Disassembly of 24 bytes:<br>\n   0:   53 25 a5 a0             feq.s   a0, fa0, fa0<br>\n   4:   63 06 05 00             beqz    a0, 0xc<br>\n   8:   53 05 15 c0             fcvt.wu.s       a0, fa0, rne<br>\n   c:   6f 00 80 00             j       8<br>\n  10:   13 05 00 00             mv      a0, zero<br>\n  14:   67 80 00 00             ret</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 341370767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678683706
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1465514174\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>Should works fine.<br>\ngenerated code quit simple.</p>\n</blockquote>\n<p>test interpret<br>\ntest run<br>\ntarget riscv64</p>\n<p>function %b_f32(f32) -&gt; i8 {<br>\nblock0(v0: f32):<br>\n    v1 = fcvt_to_uint_sat.i8 v0<br>\n    return v1<br>\n}<br>\n; run: %b_f32(0x1.949400p21) == -1</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>\n<p>Disassembly of 24 bytes:<br>\n   0:   53 25 a5 a0             feq.s   a0, fa0, fa0<br>\n   4:   63 06 05 00             beqz    a0, 0xc<br>\n   8:   53 05 15 c0             fcvt.wu.s       a0, fa0, rne<br>\n   c:   6f 00 80 00             j       8<br>\n  10:   13 05 00 00             mv      a0, zero<br>\n  14:   67 80 00 00             ret</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 341370876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678683791
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1465520719\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>@afonso360 Any Idea about this issue.</p>\n</blockquote>",
        "id": 341371296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678684096
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1465520719\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>@afonso360 Any Idea about this issue??</p>\n</blockquote>",
        "id": 341371302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678684102
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1465520719\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>@afonso360 Any idea about this issue??</p>\n</blockquote>",
        "id": 341371490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678684243
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1465913766\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>Right, <code>fcvt.wu.s</code> operates on the full 32bit values. Which means that when performing this conversion it does not saturate up to the max of <code>i8</code> (or <code>i16</code>).</p>\n<p>When looking at <a href=\"https://godbolt.org/z/T1MWPPWTP\">what LLVM does for this operation</a> it looks like they manually clamp the value using <code>fmin</code>/<code>fmax</code> before doing the operation. </p>\n</blockquote>",
        "id": 341426499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678704743
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1467238740\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>@afonso360 Thanks.</p>\n</blockquote>",
        "id": 341608775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678760125
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992#issuecomment-1776030124\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p>Fixed in #7327</p>\n</blockquote>",
        "id": 398157143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698095572
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5992\">issue #5992</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">interpret</span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">riscv64gc</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a_f32</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i16</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">b_f32</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a_f64</span><span class=\"p\">(</span><span class=\"kt\">f64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i16</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">b_f64</span><span class=\"p\">(</span><span class=\"kt\">f64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"p\">}</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li><code>clif-util test ./the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The test to pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">28032</span>\n<span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f32</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">949400</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">128</span>\n<span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">a_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">9494000000000</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">28032</span>\n<span class=\"w\">    </span><span class=\"n\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">b_f64</span><span class=\"p\">(</span><span class=\"mh\">0x1</span><span class=\"p\">.</span><span class=\"mi\">9494000000000</span><span class=\"n\">p21</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"o\">-</span><span class=\"mi\">128</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main</p>\n<p>Operating system: Linux</p>\n<p>Architecture: riscv64</p>\n<h3>Extra Info</h3>\n<p>cc: @yuyang-ok <br>\n</p>\n</blockquote>",
        "id": 398157144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698095573
    }
]