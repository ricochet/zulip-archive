[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7058\">PR #7058</a> from <code>alexcrichton:stdin-always-worker</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is a follow-up to #6833 to remove the <code>unix</code> module for handling stdio which sets stdin to nonblocking mode. I've just now discovered that on macOS at least configuring <code>O_NONBLOCK</code> for stdin affects the stdout/stderr descriptors too. This program for example will panic:</p>\n<div class=\"codehilite\"><pre><span></span><code>fn main() {\n    unsafe {\n        let r = libc::fcntl(\n            libc::STDIN_FILENO,\n            libc::F_SETFL,\n            libc::fcntl(libc::STDIN_FILENO, libc::F_GETFL) | libc::O_NONBLOCK,\n        );\n        assert_eq!(r, 0);\n    }\n\n    loop {\n        println!(&quot;hello&quot;);\n    }\n}\n</code></pre></div>\n\n<p>It was originally assumed that updating the flags for stdin wouldn't affect anything else except Wasmtime, but because this looks to not be the case this commit removes the logic of registering stdin raw with Tokio and instead unconditionally using the worker thread solution which should work in all situations.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 391767727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695067866
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7058\">PR #7058</a>.</p>",
        "id": 391767730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695067866
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7058\">PR #7058</a>.</p>",
        "id": 391767732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695067867
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7058#pullrequestreview-1631951173\">PR review</a>.</p>",
        "id": 391773355,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695070401
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7058\">PR #7058</a>.</p>",
        "id": 391825995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695097891
    }
]