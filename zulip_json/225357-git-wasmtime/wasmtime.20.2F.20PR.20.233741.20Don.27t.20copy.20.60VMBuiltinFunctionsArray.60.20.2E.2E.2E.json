[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741\">PR #3741</a> from <code>builtins-nocopy</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is another PR along the lines of \"let's squeeze all possible<br>\nperformance we can out of instantiation\". Before this PR we would copy,<br>\nby value, the contents of <code>VMBuiltinFunctionsArray</code> into each<br>\n<code>VMContext</code> allocated. This array of function pointers is modestly-sized<br>\nbut growing over time as we add various intrinsics. Additionally it's<br>\nthe exact same for all <code>VMContext</code> allocations.</p>\n<p>This PR attempts to speed up instantiation slightly by instead storing<br>\nan indirection to the function array. This means that calling a builtin<br>\nintrinsic is a tad bit slower since it requires two loads instead of one<br>\n(one to get the base pointer, another to get the actual address).<br>\nOtherwise though <code>VMContext</code> initialization is now simply setting one<br>\npointer instead of doing a <code>memcpy</code> from one location to another.</p>\n<p>With some macro-magic this commit also replaces the previous<br>\nimplementation with one that's more <code>const</code>-friendly which also gets us<br>\ncompile-time type-checks of libcalls as well as compile-time<br>\nverification that all libcalls are defined.</p>\n<p>Overall, as with #3739, the win is very modest here. Locally I measured<br>\na speedup from 1.9us to 1.7us taken to instantiate an empty module with<br>\none function. While small at these scales it's still a 10% improvement!</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 269804557,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643405041
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#pullrequestreview-866730888\">PR review</a>.</p>",
        "id": 269806061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643405785
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#pullrequestreview-866731183\">PR review</a>.</p>",
        "id": 269806213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643405871
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#discussion_r794904863\">PR review comment</a>:</p>\n<blockquote>\n<p>Rather than <code>new()</code>, can we call this <code>static_instance()</code> or something like that? As written it was somewhat concerning to read <code>VMBuiltinFunctionsArray::new()</code> in the initialization path -- it looked like an allocation of an owned thing.</p>\n</blockquote>",
        "id": 269806214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643405871
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#pullrequestreview-866731183\">PR review</a>.</p>",
        "id": 269806215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643405871
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741\">PR #3741</a> from <code>builtins-nocopy</code> to <code>main</code>.</p>",
        "id": 269806489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643406005
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#pullrequestreview-866733658\">PR review</a>.</p>",
        "id": 269806527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643406028
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#discussion_r794906674\">PR review comment</a>:</p>\n<blockquote>\n<p>Aha looks like I can do one better and have <code>const INIT: VMBuiltinFunctionsArray = ...</code>!<br>\n</p>\n</blockquote>",
        "id": 269806530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643406028
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#pullrequestreview-866750776\">PR review</a>.</p>",
        "id": 269809264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643407492
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#discussion_r794919121\">PR review comment</a>:</p>\n<blockquote>\n<p>This function doesn't return an actual pointer, right?</p>\n</blockquote>",
        "id": 269809265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643407493
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#pullrequestreview-866762653\">PR review</a>.</p>",
        "id": 269811709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643408671
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741#discussion_r794928046\">PR review comment</a>:</p>\n<blockquote>\n<p>Correct, this is just how the type-checking with the macro worked out.</p>\n</blockquote>",
        "id": 269811710,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643408671
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3741\">PR #3741</a>.</p>",
        "id": 269811719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643408675
    }
]