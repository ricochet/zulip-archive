[
    {
        "content": "<p>mleonhard <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2274#issuecomment-868480293\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2274\">issue #2274</a>:</p>\n<blockquote>\n<p>I think the new 'fuel' mechanism is sufficient for making wasm threads behave nicely.  Thank you.</p>\n<p>I found relevant documentation under <a href=\"https://docs.wasmtime.dev/api/wasmtime/struct.Config.html#method.async_support\"><code>wasmtime::Config::async_support</code></a>.  I wish it did not require async.</p>\n<p>I found a little issue in the docs:</p>\n<blockquote>\n<p>Care must be taken for this because Wasmtime futures are not <code>Send</code> or <code>Sync</code>.</p>\n</blockquote>\n<p>The binary <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7a1b7cdf92a644a256a9f4c5c002682e1900d817/examples/tokio/main.rs#L24\"><code>examples/tokio/main.rs </code></a> makes a future to call <a href=\"https://docs.wasmtime.dev/api/wasmtime/struct.Func.html#method.call_async\"><code>wasmtime::Func::call_async</code></a> and passes the future to <a href=\"https://docs.rs/tokio/1.7.1/tokio/runtime/struct.Runtime.html#method.spawn\"><code>tokio::runtime::Runtime::spawn</code></a> which accepts only <code>Send</code> futures.  If this binary compiles then Wasmtime futures are <code>Send</code>.</p>\n<p>Closing issue.  Thanks again!</p>\n</blockquote>",
        "id": 243911479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624625781
    },
    {
        "content": "<p>mleonhard closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2274\">issue #2274</a>:</p>\n<blockquote>\n<p>I wish to use wasmtime in a server to run small untrusted code blocks. I need to limit the CPU time consumed by each running block. I looked through the docs and found only the ability to interrupt running code (<a href=\"https://docs.rs/wasmtime/0.20.0/wasmtime/struct.Store.html#method.interrupt_handle\">Store::interrupt_handle</a>).  I don't want to kill badly-behaved blocks.  I want to make the blocks behave nicely.  I need the server to run hundreds of wasmtime VMs while also not starving the server's request processing code.</p>\n<p>Ideally, wasmtime would let me configure a set of VMs with a shared CPU restriction of a certain number of cores, or fractional cores.  The VMs would run concurrently and yield to each other so all can make progress.  And all of the VMs in the set would not consume more than the set amount of CPU time per second.</p>\n<p>Let's support or document how to restrict instance cpu time.</p>\n<p>Related issue for restricting memory usage: #2273</p>\n<p>Related discussion: <a href=\"https://users.rust-lang.org/t/limit-handler-to-cpu-memory-bounds/26429\">https://users.rust-lang.org/t/limit-handler-to-cpu-memory-bounds/26429</a></p>\n</blockquote>",
        "id": 243911480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624625781
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2274#issuecomment-868546415\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2274\">issue #2274</a>:</p>\n<blockquote>\n<p>Thanks for pointing that out, I've updated those docs in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3034\">https://github.com/bytecodealliance/wasmtime/pull/3034</a></p>\n</blockquote>",
        "id": 243924496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624631850
    }
]