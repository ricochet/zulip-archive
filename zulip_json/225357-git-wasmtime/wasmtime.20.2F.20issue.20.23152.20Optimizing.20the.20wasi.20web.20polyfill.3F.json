[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/152#issuecomment-1405533479\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/152\">issue #152</a>:</p>\n<blockquote>\n<p>I think this can be closed now as the polyfill at <a href=\"https://wasi.dev/polyfill/index.html\">https://wasi.dev/polyfill/index.html</a> is gone.</p>\n</blockquote>",
        "id": 323824237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674762310
    },
    {
        "content": "<p>jameysharp closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/152\">issue #152</a>:</p>\n<blockquote>\n<p>The current polyfill, if I understand correctly, is an emscripten-compiled program that contains a wasi runtime implemented in POSIX. Emscripten's POSIX support is then used to run the wasi. And the polyfill program contains all the code necessary to run the entire wasi API, so that it can run an arbitrary wasi program.</p>\n<p>@dschuff and I were thinking about the following use case: an existing wasi executable exists, and someone wants to package it for the web. Using the current polyfill would work, but it's larger than it needs to be for most programs. In theory it would be nice if we could do <code>emcc -Os wasi_program.wasm -o wasi_program.html</code> and get html+js+wasm that works and is as small as possible - that is, if emscripten could take wasi programs as input, link in necessary stuff, emit an optimized and minified JS runtime, etc. However it seems like that can't quite work, because wasi executables are not relocatable - and so we can't link in the wasm parts of the emscripten runtime.</p>\n<p>Alternatively, if a <em>relocatable</em> wasi was provided, that could work. However, if we're not using a plain wasi executable anymore, then we can maybe just recompile the program from source using emscripten anyhow - that is, the recommended path for people would be to make sure their programs compile with both the wasi and emscripten sdks, if they want to both run on the server and also run on the web with minimal size. But this has downsides. Maybe there's a better option?</p>\n<p>Another possible thought here - what if wasi executables <em>were</em> relocatable?<br>\n</p>\n</blockquote>",
        "id": 323904884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674765678
    }
]