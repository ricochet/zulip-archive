[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8449\">PR #8449</a>.</p>",
        "id": 435069459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713907049
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8449\">PR #8449</a>.</p>",
        "id": 435069460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713907049
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8449\">PR #8449</a> from <code>jameysharp:s390-pregs</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>When OperandCollector's reg_use/reg_late_use/reg_def/reg_early_def methods are handed a Reg that refers to a physical (\"real\") register, they all delegate to reg_fixed_nonallocatable, ignoring the constraint kinds and positions.</p>\n<p>In several cases, the s390x backend was calling those methods with the result of the <code>gpr</code> or <code>writable_gpr</code> functions, which return physical registers. In these cases we can be more explicit that this is a non-allocatable register.</p>\n<p>This doesn't change any behavior but is a nice change to split out of a larger PR I'm working on.</p>\n<p>cc: @uweigand</p>\n</blockquote>",
        "id": 435069461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713907049
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8449\">PR #8449</a>.</p>",
        "id": 435071807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713908268
    },
    {
        "content": "<p>jameysharp edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8449\">PR #8449</a>:</p>\n<blockquote>\n<p>When OperandCollector's reg_use/reg_late_use/reg_def/reg_early_def methods are handed a Reg that refers to a physical (\"real\") register, they all delegate to reg_fixed_nonallocatable, ignoring the constraint kinds and positions. This behavior was introduced in #5132.</p>\n<p>In several cases, the s390x backend was calling those methods with the result of the <code>gpr</code> or <code>writable_gpr</code> functions, which return physical registers. In these cases we can be more explicit that this is a non-allocatable register.</p>\n<p>In addition, this PR reverts #4973 and #5121 because they became unecessary due, again, to #5132.</p>\n<p>This doesn't change any behavior but is a nice change to split out of a larger PR I'm working on.</p>\n<p>cc: @uweigand</p>\n</blockquote>",
        "id": 435071900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713908297
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8449#pullrequestreview-2018406042\">PR review</a>:</p>\n<blockquote>\n<p>LGTM, thanks!</p>\n</blockquote>",
        "id": 435074418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713909584
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8449\">PR #8449</a>.</p>",
        "id": 435079984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713913016
    }
]