[
    {
        "content": "<p>jeffcharles opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a> from <code>jeffcharles:winch-add-v128-const</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nAdding support for <code>v128.const</code> to Winch. Start of work to add SIMD support to Winch for the x64 architecture.</p>\n</blockquote>",
        "id": 453247194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672737
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2192273858\">PR review</a>.</p>",
        "id": 453247458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672787
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1686977469\">PR review comment</a>:</p>\n<blockquote>\n<p>Not sure if we want to keep the <code>wasm_features(simd)</code> check on here since this is a SIMD test. I removed it so the test would run on Winch.</p>\n</blockquote>",
        "id": 453247459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672787
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2192277822\">PR review</a>.</p>",
        "id": 453247833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672859
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1686978793\">PR review comment</a>:</p>\n<blockquote>\n<p>This is a result of changing how memory values are popped from the stack. It now uses the type of the Wasm value to determine the scratch register to use so this now uses the XMM scratch register instead of a GPR.</p>\n</blockquote>",
        "id": 453247836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672860
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2192278828\">PR review</a>.</p>",
        "id": 453247923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672879
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1686979151\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto for this change to the disass.</p>\n</blockquote>",
        "id": 453247924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672879
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2192283871\">PR review</a>.</p>",
        "id": 453248283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672956
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1686981133\">PR review comment</a>:</p>\n<blockquote>\n<p>This now needs to handle 128 bit values so using the GPR scratch won't work.</p>\n</blockquote>",
        "id": 453248286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672956
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453248352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721672975
    },
    {
        "content": "<p><strong>jeffcharles</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a> as ready for review.</p>",
        "id": 453253934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721674617
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453253936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721674617
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453253937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721674617
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453253938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721674617
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#issuecomment-2243866778\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 453282661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721684671
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2194085743\">PR review</a>:</p>\n<blockquote>\n<p>It's going on a good direction!</p>\n<p>One thing that we need to also update as part of this PR is the stack alignment details in the ABI.</p>\n<p>Currently, the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/isa/x64/abi.rs#L66\">stack alignment</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/isa/x64/abi.rs#L156\">slot size</a> are both set to 8 bytes, given that types &gt; 8 bytes were not supported. We'd probably want to ensure that it's now set to 16.</p>\n</blockquote>",
        "id": 453425234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721743848
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2194085743\">PR review</a>:</p>\n<blockquote>\n<p>It's going on a good direction!</p>\n<p>One thing that we need to also update as part of this PR is the stack alignment details in the ABI.</p>\n<p>Currently, the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/isa/x64/abi.rs#L66\">stack alignment</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/winch/codegen/src/isa/x64/abi.rs#L156\">slot size</a> are both set to 8 bytes, given that types &gt; 8 bytes were not supported. We'd probably want to ensure that it's now set to 16.</p>\n</blockquote>",
        "id": 453425235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721743848
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1688122381\">PR review comment</a>:</p>\n<blockquote>\n<p>I've been giving a bit of thought to this change. If I'm not wrong the motivation is to future-proof, be explicit and correctly differentiate the scratch register for different types (GPR, FPR) and sizes (FPR vs v128). </p>\n<p>I'm wondering if there's an alternative way that would allow a similar outcome without need to introduce more <code>*_scratch_reg</code> variations. One option that I can think of is to remove <code>scratch_reg</code> and <code>float_scratch_reg</code> and rely exclusively on <code>scratch_for</code> and <code>sratch!(M, &amp;ty)</code> method and macro respectively. This might make it easier to encapsulate the details of which register should be used depending on the type/size/architecture.</p>\n</blockquote>",
        "id": 453425237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721743849
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1688122381\">PR review comment</a>.</p>",
        "id": 453425891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721744071
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2194141241\">PR review</a>.</p>",
        "id": 453426931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721744403
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1688155585\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah I debated whether to just use the float scratch register directly but that seemed like it would be mixing different levels of abstraction. Changing everything to use <code>scratch_for</code> or <code>scratch!(M, &amp;ty)</code> instead makes sense to me. I'll make those changes. Might try doing that in a separate PR to keep it easier to review.</p>\n</blockquote>",
        "id": 453426935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721744403
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2194338352\">PR review</a>.</p>",
        "id": 453446716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721748718
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1688276971\">PR review comment</a>:</p>\n<blockquote>\n<p>I looked into this a little more, the <code>scratch!</code> macro relies on <code>scratch_for</code> and <code>scratch_for</code> relies on the <code>scratch_reg</code> and <code>float_scratch_reg</code> methods being present on the ABI trait. I could remove <code>scratch_reg</code> and <code>float_scratch_reg</code> from the trait and move the implementation of <code>scratch_for</code> into the ABI trait implementations. The logic isn't that complicated so repeating the logic in each trait implementation with the registers hard-coded wouldn't necessarily be too bad.</p>\n<p>Alternatively, I could not add <code>vector_scratch_reg</code> on the trait, update <code>scratch_for</code> to use the <code>float_scratch_register</code> for v128, and update <code>store_impl</code> to use <code>scratch_for</code>. That'll avoid having to implement <code>scratch_for</code> for each ABI trait implementation.</p>\n</blockquote>",
        "id": 453446717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721748719
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2194354766\">PR review</a>.</p>",
        "id": 453447848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721749092
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1688286846\">PR review comment</a>:</p>\n<blockquote>\n<p>In my original comment I was leaning more towards the first option from your comment above: moving <code>scratch_for</code> to each ABI implementation, hoping to (i) get the most flexibility (architecture-wise) at the cost of some repetition (ii) reduce the number of scratch related methods from the ABI trait. </p>\n</blockquote>",
        "id": 453447851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721749092
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2194437375\">PR review</a>.</p>",
        "id": 453456334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721751015
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1688337731\">PR review comment</a>:</p>\n<blockquote>\n<p>Opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8999\">https://github.com/bytecodealliance/wasmtime/pull/8999</a> to do the refactoring.</p>\n</blockquote>",
        "id": 453456338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721751016
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453480226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721757013
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2194672976\">PR review</a>.</p>",
        "id": 453480682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721757203
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#discussion_r1688478955\">PR review comment</a>:</p>\n<blockquote>\n<p>I could change this to just reuse the existing floating point register methods given this is inside the x64 ABI if that would be preferable.</p>\n</blockquote>",
        "id": 453480683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721757203
    },
    {
        "content": "<p>jeffcharles <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#issuecomment-2245886836\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>:</p>\n<blockquote>\n<p>The merge commit removed the new vector method on the ABI trait. Not sure if you would like me to do the same with the <code>next_vr</code> and associated methods I've added in the X64ABI file.</p>\n</blockquote>",
        "id": 453480989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721757326
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453480993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721757329
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#issuecomment-2245912511\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>:</p>\n<blockquote>\n<blockquote>\n<p>The merge commit removed the new vector method on the ABI trait. Not sure if you would like me to do the same with the <code>next_vr</code> and associated methods I've added in the X64ABI file.</p>\n</blockquote>\n<p>Yeah it sounds reasonable to me to get rid of <code>next_vr</code> and <code>vector_reg_for</code> 👍🏽 </p>\n</blockquote>",
        "id": 453482352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721757769
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453484338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721758283
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453487813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721759025
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453490417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721759522
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453760849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721843338
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453769307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721845717
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990#pullrequestreview-2197528811\">PR review</a>:</p>\n<blockquote>\n<p>This looks great to me, thanks!</p>\n</blockquote>",
        "id": 453772745,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721847170
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8990\">PR #8990</a>.</p>",
        "id": 453775373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721848122
    }
]