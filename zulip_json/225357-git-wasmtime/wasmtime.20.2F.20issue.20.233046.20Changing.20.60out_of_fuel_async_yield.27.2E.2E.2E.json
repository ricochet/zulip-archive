[
    {
        "content": "<p>bkolobara opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3046\">issue #3046</a>:</p>\n<blockquote>\n<p>I'm using the <a href=\"https://docs.rs/wasmtime/0.28.0/wasmtime/struct.Store.html#method.out_of_fuel_async_yield\">out_of_fuel_async_yield</a> method on the <code>Store</code> to configure yielding back after around 10k instructions. I would like to allow the async call to run <strong>forever</strong>, but if I set <code>injection_count</code> to the maximum value <code>u32::MAX</code> of re-injections this gives me around <code>4*10^13</code> instructions in total. On a 4 Ghz processor I would run out of fuel in around 3 hours.</p>\n<p>Should the <code>injection_count</code> type here be <code>u64</code> or am I missing something?</p>\n</blockquote>",
        "id": 244480505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625083678
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3046\">issue #3046</a>:</p>\n<blockquote>\n<p>I'm using the <a href=\"https://docs.rs/wasmtime/0.28.0/wasmtime/struct.Store.html#method.out_of_fuel_async_yield\">out_of_fuel_async_yield</a> method on the <code>Store</code> to configure yielding back after around 10k instructions. I would like to allow the async call to run <strong>forever</strong>, but if I set <code>injection_count</code> to the maximum value <code>u32::MAX</code> of re-injections this gives me around <code>4*10^13</code> instructions in total. On a 4 Ghz processor I would run out of fuel in around 3 hours.</p>\n<p>Should the <code>injection_count</code> type here be <code>u64</code> or am I missing something?</p>\n</blockquote>",
        "id": 244587483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625154382
    }
]