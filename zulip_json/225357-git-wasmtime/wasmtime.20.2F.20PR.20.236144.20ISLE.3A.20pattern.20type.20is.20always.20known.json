[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6144\">PR #6144</a> from <code>jameysharp:isle-pattern-types</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>While type-checking the AST for a pattern, ISLE was passing in an <code>Option&lt;TypeId&gt;</code> for the expected result type of the pattern. However, at every call we either passed <code>Some</code> type explicitly, or passed the parent's expected type in a self-recursive call.</p>\n<p>Therefore, by induction, <code>expected_ty</code> is never <code>None</code>. So this PR unwraps the type everywhere. That in turn shows that a bunch of error messages were unreachable, so this deletes a bunch of error-handling code.</p>\n<p>In addition, this function returned the type it computed for the sub-pattern, but that information is already available in the sub-pattern itself. Not only that but the type should always be equal to <code>expected_ty</code>; when it isn't, we've reported a type error and are just trying to check for more errors.</p>\n<p>Most callers ignored the returned type but in some cases we used it to try to avoid emitting useless error messages. I've preserved that behavior for bind-patterns.</p>\n<p>For and-patterns, the returned type looked like it was being used, but because <code>expected_ty</code> was never <code>None</code>, the fallback of \"fill in with the sub-pattern's type\" never fired. So I've deleted that fallback.</p>\n<p>Finally, this reverts #4915 (9d99eff6f90522a838551326e651bb6b660ca624) which was introduced to flatten nested and-patterns, to simplify overlap checking. However, the visitor trait used by trie_again effectively flattens and-patterns anyway, so the current representation used for overlap checking doesn't need this any more.</p>\n</blockquote>",
        "id": 346995159,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680654253
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6144\">PR #6144</a>.</p>",
        "id": 346995160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680654253
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6144\">PR #6144</a>.</p>",
        "id": 346995161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680654253
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6144#pullrequestreview-1373177146\">PR review</a>.</p>",
        "id": 347183592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680708571
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6144#pullrequestreview-1373192411\">PR review</a>.</p>",
        "id": 347186072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680709070
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6144\">PR #6144</a>.</p>",
        "id": 347205957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680713605
    }
]