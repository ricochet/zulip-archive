[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794\">issue #6794</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"nv\">$a</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"nv\">$a</span><span class=\"p\">)))</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>target/debug/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--disable-cache<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>foo<span class=\"w\"> </span><span class=\"m\">42</span><span class=\"w\"> </span>test.wat\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Print <code>42</code>.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Error: if you're trying to run a precompiled module, pass --allow-precompiled\n\nCaused by:\n    0: failed to read input file: 42\n    1: No such file or directory (os error 2)\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: latest <code>main</code> (5200159)</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86</p>\n<h3>Extra Info</h3>\n<p>This is probably some weirdness related to <code>clap</code> and how it parses the CLI arguments. For another data point, when I run <code>target/debug/wasmtime run --disable-cache test.wat --invoke foo 42</code> then nothing happens at all (the module is JIT-compiled but the Wasmtime CLI does not know understand that it should invoke <code>foo</code>). I figured it would be good to raise this as an issue in case this has already been resolved by work on #6741 (cc: @alexcrichton?).<br>\n</p>\n</blockquote>",
        "id": 381310248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691017889
    },
    {
        "content": "<p><a href=\"https://github.com/abrown\">abrown</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794\">Issue #6794</a>.</p>",
        "id": 381310249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691017889
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794#issuecomment-1663086489\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794\">issue #6794</a>:</p>\n<blockquote>\n<p>Have you tried <code>wasmtime run --invoke foo test.wat 42</code>?</p>\n<p>Based on the output of <code>wasmtime help run</code> I'd expect <code>--invoke</code> to eat one following argument, giving the name of the function to invoke; then, the non-option arguments need to have the input file first, optionally followed by any arguments to pass along.</p>\n</blockquote>",
        "id": 381311214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691018173
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794#issuecomment-1664231755\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794\">issue #6794</a>:</p>\n<blockquote>\n<p>Yeah, that works. I guess what is confusing is that I would expect <code>target/debug/wasmtime run --disable-cache test.wat --invoke foo 42</code> to work but it does not.</p>\n</blockquote>",
        "id": 381533673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691077835
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794#issuecomment-1664231755\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794\">issue #6794</a>:</p>\n<blockquote>\n<p>Yeah, that works. I guess what is confusing is that I would expect <code>target/debug/wasmtime run --disable-cache test.wat --invoke foo 42</code> to work then but it does not.</p>\n</blockquote>",
        "id": 381533725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691077846
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794#issuecomment-1664276670\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794\">issue #6794</a>:</p>\n<blockquote>\n<p>I totally understand expecting that to work. I think what's happening there is that <code>--invoke</code> is being interpreted as an argument to <code>test.wat</code> instead of a Wasmtime option, since it comes after a non-option argument.</p>\n<p>This is clearly a bug in the sense that the interpretation of this option is confusing and it'd be great to do better, but let's consider that to be a part of #6741 and close this as a duplicate. I'm glad we've confirmed that it is at least possible to <code>--invoke</code> a function with arguments.</p>\n</blockquote>",
        "id": 381543615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691079721
    },
    {
        "content": "<p>jameysharp closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6794\">issue #6794</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"nv\">$a</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">local.get</span> <span class=\"nv\">$a</span><span class=\"p\">)))</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>target/debug/wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--disable-cache<span class=\"w\"> </span>--invoke<span class=\"w\"> </span>foo<span class=\"w\"> </span><span class=\"m\">42</span><span class=\"w\"> </span>test.wat\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Print <code>42</code>.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>Error: if you're trying to run a precompiled module, pass --allow-precompiled\n\nCaused by:\n    0: failed to read input file: 42\n    1: No such file or directory (os error 2)\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: latest <code>main</code> (5200159)</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86</p>\n<h3>Extra Info</h3>\n<p>This is probably some weirdness related to <code>clap</code> and how it parses the CLI arguments. For another data point, when I run <code>target/debug/wasmtime run --disable-cache test.wat --invoke foo 42</code> then nothing happens at all (the module is JIT-compiled but the Wasmtime CLI does not know understand that it should invoke <code>foo</code>). I figured it would be good to raise this as an issue in case this has already been resolved by work on #6741 (cc: @alexcrichton?).<br>\n</p>\n</blockquote>",
        "id": 381543617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691079721
    }
]