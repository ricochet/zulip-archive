[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325\">PR #4325</a> from <code>trap-backtrace-with-store</code> to <code>main</code>:</p>\n<blockquote>\n<p>Previous to this commit Wasmtime would use the <code>GlobalModuleRegistry</code><br>\nwhen learning information about a trap such as its trap code, the<br>\nsymbols for each frame, etc. This has a downside though of holding a<br>\nglobal read-write lock for the duration of this operation which hinders<br>\nregistration of new modules in parallel. In addition there was a fair<br>\namount of internal duplication between this \"global module registry\" and<br>\nthe store-local module registry. Finally relying on global state for<br>\ninformation like this gets a bit more brittle over time as it seems best<br>\nto scope global queries to precisely what's necessary rather than<br>\nholding extra information.</p>\n<p>With the refactoring in wasm backtraces done in #4183 it's now possible<br>\nto always have a <code>StoreOpaque</code> reference when a backtrace is collected<br>\nfor symbolication and otherwise Trap-identification purposes. This<br>\ncommit adds a <code>StoreOpaque</code> parameter to the <code>Trap::from_runtime</code><br>\nconstructor and then plumbs that everywhere. Note that while doing this<br>\nI changed the internal <code>traphandlers::lazy_per_thread_init</code> function to<br>\nno longer return a <code>Result</code> and instead just <code>panic!</code> on Unix if memory<br>\ncouldn't be allocated for a stack. This removed quite a lot of<br>\nerror-handling code for a case that's expected to quite rarely happen.<br>\nIf necessary in the future we can add a fallible initialization point<br>\nbut this feels like a better default balance for the code here.</p>\n<p>With a <code>StoreOpaque</code> in use when a trap is being symbolicated that means<br>\nwe have a <code>ModuleRegistry</code> which can be used for queries and such. This<br>\nmeant that the <code>GlobalModuleRegistry</code> state could largely be dismantled<br>\nand moved to per-<code>Store</code> state (within the <code>ModuleRegistry</code>, mostly just<br>\nmoving methods around).</p>\n<p>The final state is that the global rwlock is not exclusively scoped<br>\naround insertions/deletions/<code>is_wasm_trap_pc</code> which is just a lookup and<br>\natomic add. Otherwise symbolication for a backtrace exclusively uses<br>\nstore-local state now (as intended).</p>\n<p>The original motivation for this commit was that frame information<br>\nlookup and pieces were looking to get somewhat complicated with the<br>\naddition of components which are a new vector of traps coming out of<br>\nCranelift-generated code. My hope is that by having a <code>Store</code> around for<br>\nmore operations it's easier to plumb all this through.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 287591613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656342638
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325\">PR #4325</a>.</p>",
        "id": 287591614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656342638
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325\">PR #4325</a> from <code>trap-backtrace-with-store</code> to <code>main</code>.</p>",
        "id": 287594743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656343980
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325#pullrequestreview-1020533316\">PR review</a>.</p>",
        "id": 287612333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656351641
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325#pullrequestreview-1020533316\">PR review</a>.</p>",
        "id": 287612334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656351641
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325#discussion_r907624116\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        .expect(\"allocating memory map for altstack\");\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 287612335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656351642
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325#pullrequestreview-1020579187\">PR review</a>.</p>",
        "id": 287614593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656352738
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325\">PR #4325</a> from <code>trap-backtrace-with-store</code> to <code>main</code>.</p>",
        "id": 287625025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656357592
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4325\">PR #4325</a>.</p>",
        "id": 287632320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656361501
    }
]