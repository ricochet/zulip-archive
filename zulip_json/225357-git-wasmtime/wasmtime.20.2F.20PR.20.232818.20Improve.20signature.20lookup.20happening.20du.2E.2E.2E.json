[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818\">PR #2818</a> from <code>faster-lookup</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is intended to be a perf improvement for instantiation of<br>\nmodules with lots of functions. Previously the <code>lookup_shared_signature</code><br>\ncallback was showing up quite high in profiles as part of instantiation.</p>\n<p>As some background, this callback is used to translate from a module's<br>\n<code>SignatureIndex</code> to a <code>VMSharedSignatureIndex</code> which the instance<br>\nstores. This callback is called for two reasons, one is to translate all<br>\nof the module's own types into <code>VMSharedSignatureIndex</code> for the purposes<br>\nof <code>call_indirect</code> (the translation of that loads from this table to<br>\ncompare indices). The second reason is that a <code>VMCallerCheckedAnyfunc</code><br>\nis prepared for all functions and this embeds a <code>VMSharedSignatureIndex</code><br>\ninside of it.</p>\n<p>The slow part today is that the lookup callback was called<br>\nonce-per-function and each lookup involved hashing a full<br>\n<code>WasmFuncType</code>. Albeit our hash algorithm is still Rust's default<br>\nSipHash algorithm which is quite slow, but we also shouldn't need to<br>\nre-hash each signature if we see it multiple times anyway.</p>\n<p>The fix applied in this commit is to change this lookup callback to an<br>\n<code>enum</code> where one variant is that there's a table to lookup from. This<br>\ntable is a <code>PrimaryMap</code> which means that lookup is quite fast. The only<br>\nthing we need to do is to prepare the table ahead of time. Currently<br>\nthis happens on the instantiation path because in my measurments the<br>\ncreation of the table is quite fast compared to the rest of<br>\ninstantiation. If this becomes an issue, though, we can look into<br>\ncreating the table as part of <code>SigRegistry::register_module</code> and caching<br>\nit somewhere (I'm not entirely sure where but I'm sure we can figure it<br>\nout).</p>\n<p>There's in generally not a ton of efficiency around the <code>SigRegistry</code><br>\ntype. I'm hoping though that this fixes the next-lowest-hanging-fruit in<br>\nterms of performance without complicating the implementation too much. I<br>\ntried a few variants and this change seemed like the best balance<br>\nbetween simplicity and still a nice performance gain.</p>\n<p>Locally I measured an improvement in instantiation time for a large-ish<br>\nmodule by reducing the time from ~3ms to ~2.6ms per instance.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 233687296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617900589
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818\">PR #2818</a> from <code>faster-lookup</code> to <code>main</code>.</p>",
        "id": 233697985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617904075
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#pullrequestreview-631688683\">PR Review</a>.</p>",
        "id": 233703345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617905854
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#pullrequestreview-631688683\">PR Review</a>.</p>",
        "id": 233703346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617905854
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r609960397\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Was this showing up in profiles? It seems unrelated to the rest of the changes in this PR and the early return seems like it is necessary to avoid tripping the <code>assert!(old.is_none())</code> assertion at the end of this function.</p>\n</blockquote>",
        "id": 233703349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617905854
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r609973204\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Rather than returning the <code>PrimaryMap</code> and giving up ownership, could we keep the map on <code>self</code>, clear it and rebuild it on each call, and reutrn a <code>&amp;PrimaryMap</code>? This way we could reuse the underlying allocation.</p>\n<p>I suppose -- at that point, though -- we might as well move this out and cache it <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span> somewhere <span aria-label=\"sparkles\" class=\"emoji emoji-2728\" role=\"img\" title=\"sparkles\">:sparkles:</span> like you mention in the OP. I guess finding that somewhere is a bit hard because <code>SignatureRegistry</code>s are <code>Store</code>-specific, so we can't hang this map off the <code>Module</code>.</p>\n</blockquote>",
        "id": 233703350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617905854
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r609975166\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah okay this is where all that stuff about whether we are registering for the first time or not is handled. (FWIW, this would have been a little easier on me, as a reviewer, if it were in a separate commit)</p>\n</blockquote>",
        "id": 233703351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617905854
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r609965423\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Similarly confused with what's going on over here.</p>\n</blockquote>",
        "id": 233703352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617905854
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#pullrequestreview-631727079\">PR Review</a>.</p>",
        "id": 233707740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617907503
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r609998303\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oops my bad, sorry about that! I forgot to call this out in the description as well...</p>\n</blockquote>",
        "id": 233707742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617907503
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#pullrequestreview-631751485\">PR Review</a>.</p>",
        "id": 233712540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617909390
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r610021943\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm good point! Given what we were discussing on chat though where this may soon move into a <code>Engine</code> I think I might leave this as-is for now and we can revisit this later if this gets costly in the future (so far this isn't showing up when benchmarking instantiation for me).</p>\n</blockquote>",
        "id": 233712541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617909390
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#pullrequestreview-631768826\">PR Review</a>.</p>",
        "id": 233715869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617910789
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r610040319\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This was ensuring we don't register the same module more than once in the store, however, this could probably just be <code>if self.module(start).is_some()</code> so it doesn't bother looking up the pc into the already registered module.</p>\n</blockquote>",
        "id": 233715870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617910789
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#discussion_r610041269\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh wait, I just caught up to the changes below.  Yeah, this shouldn't be necessary any more.</p>\n</blockquote>",
        "id": 233716036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617910864
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818#pullrequestreview-631769763\">PR Review</a>.</p>",
        "id": 233716037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617910864
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2818\">PR #2818</a>.</p>",
        "id": 233719260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617912259
    }
]