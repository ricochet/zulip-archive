[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a>.</p>",
        "id": 434455915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713574306
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a>.</p>",
        "id": 434455916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713574307
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a> from <code>jameysharp:x64-narrow-test</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The x86 <code>test</code> instruction does a bitwise-and operation, setting flags, but otherwise discarding the result. And when one operand is an immediate constant, any zero bits in the constant can't have an effect on the result. So we can emit shorter versions of this instruction by truncating the most significant zero bits and using the narrowest possible immediate form for the provided constant.</p>\n<p>I think this has merge conflicts with #8408 so I'll rebase it next week.</p>\n</blockquote>",
        "id": 434455917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713574307
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a>.</p>",
        "id": 434620547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713734842
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421#issuecomment-2068353853\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a>:</p>\n<blockquote>\n<p>It's not clear to me whether I made the right choice to make this change in the code for emitting into the machbuffer, rather than doing it earlier when building vcode.</p>\n<p>It's a little weird that the machbuffer disassembly doesn't match the vcode disassembly for an instruction as simple as <code>test</code>.</p>\n<p>On the other hand this means that Winch gets this optimization too, and I think it's simpler to implement this in Rust than in ISLE right now.</p>\n<p>So I'd be interested in other people's opinions on this: @cfallin @alexcrichton @elliottt?</p>\n</blockquote>",
        "id": 434636499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713751267
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421#issuecomment-2069685038\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a>:</p>\n<blockquote>\n<p>Personally I think I'd prefer to do this in ISLE, but I don't feel too strongly really. Given that this is already done here it seems reasonable to land to me</p>\n</blockquote>",
        "id": 434766827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713796494
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421#issuecomment-2069808550\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a>:</p>\n<blockquote>\n<p>One reason to try to lift optimizations like this into ISLE, and keep the VCode insts as close to 1-to-1 correspondence with machine code as possible, is that it makes verification more tractable: rather than writing a specification for the vcode inst that is \"may do this, or that, depending on the constant\", we have that logic exposed in ISLE left-hand sides where we can reason about it. For that reason I think I'd prefer for us to do that as well, unless it turns out that it's not really possible or practical at all. (There's definitely room for compromise here and some VCode insts definitely are smarter than they should be! This is more of an aspirational direction for current and future work.)</p>\n</blockquote>",
        "id": 434774929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713798399
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421#issuecomment-2070495683\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8421\">PR #8421</a>:</p>\n<blockquote>\n<p>Okay, I'll investigate how difficult it is to do this in ISLE and let you all know what I find out, and maybe we can reevaluate then.</p>\n</blockquote>",
        "id": 434816262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713809481
    }
]