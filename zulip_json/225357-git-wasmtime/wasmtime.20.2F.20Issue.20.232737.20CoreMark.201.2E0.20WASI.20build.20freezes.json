[
    {
        "content": "<p>vshymanskyy opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/6165209/coremark.wasm.zip\">coremark.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">curl</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//wasmtime.dev/install.sh -sSf | bash</span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">0.25.0</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">freezes</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$wasmer</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"mi\">2</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">parameters</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">CoreMark</span><span class=\"w\"> </span><span class=\"n\">Size</span><span class=\"w\">    </span>: <span class=\"mi\">666</span><span class=\"w\"></span>\n<span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"n\">ticks</span><span class=\"w\">      </span>: <span class=\"mi\">333589297</span><span class=\"w\"></span>\n<span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">secs</span><span class=\"p\">)</span>: <span class=\"mf\">17.513458</span><span class=\"w\"></span>\n<span class=\"n\">Iterations</span><span class=\"o\">/</span><span class=\"n\">Sec</span><span class=\"w\">   </span>: <span class=\"mf\">6280.883934</span><span class=\"w\"></span>\n<span class=\"n\">Iterations</span><span class=\"w\">       </span>: <span class=\"mi\">110000</span><span class=\"w\"></span>\n<span class=\"n\">Compiler</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span>: <span class=\"nc\">Clang</span><span class=\"w\"> </span><span class=\"mf\">11.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/llvm/llvm-project 176249bd6732a8044d457092ed932768724a6f06)</span>\n<span class=\"n\">Compiler</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"w\">   </span>: <span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"></span>\n<span class=\"n\">Memory</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"w\">  </span>: <span class=\"nc\">STATIC</span><span class=\"w\"></span>\n<span class=\"n\">seedcrc</span><span class=\"w\">          </span>: <span class=\"mh\">0xe9f5</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crclist</span><span class=\"w\">       </span>: <span class=\"mh\">0xe714</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcmatrix</span><span class=\"w\">     </span>: <span class=\"mh\">0x1fd7</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcstate</span><span class=\"w\">      </span>: <span class=\"mh\">0x8e3a</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcfinal</span><span class=\"w\">      </span>: <span class=\"mh\">0x33ff</span><span class=\"w\"></span>\n<span class=\"n\">Correct</span><span class=\"w\"> </span><span class=\"n\">operation</span><span class=\"w\"> </span><span class=\"n\">validated</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">README</span><span class=\"p\">.</span><span class=\"n\">md</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">reporting</span><span class=\"w\"> </span><span class=\"n\">rules</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">CoreMark</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"w\"> </span>: <span class=\"mf\">6280.883934</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">Clang</span><span class=\"w\"> </span><span class=\"mf\">11.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/llvm/llvm-project 176249bd6732a8044d457092ed932768724a6f06) -O3    / STATIC</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>Wasmtime freezes</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit:  0.25.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 230882725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616081080
    },
    {
        "content": "<p>vshymanskyy labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/6165209/coremark.wasm.zip\">coremark.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">curl</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//wasmtime.dev/install.sh -sSf | bash</span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">0.25.0</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">freezes</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$wasmer</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"mi\">2</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">parameters</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">CoreMark</span><span class=\"w\"> </span><span class=\"n\">Size</span><span class=\"w\">    </span>: <span class=\"mi\">666</span><span class=\"w\"></span>\n<span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"n\">ticks</span><span class=\"w\">      </span>: <span class=\"mi\">333589297</span><span class=\"w\"></span>\n<span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">secs</span><span class=\"p\">)</span>: <span class=\"mf\">17.513458</span><span class=\"w\"></span>\n<span class=\"n\">Iterations</span><span class=\"o\">/</span><span class=\"n\">Sec</span><span class=\"w\">   </span>: <span class=\"mf\">6280.883934</span><span class=\"w\"></span>\n<span class=\"n\">Iterations</span><span class=\"w\">       </span>: <span class=\"mi\">110000</span><span class=\"w\"></span>\n<span class=\"n\">Compiler</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span>: <span class=\"nc\">Clang</span><span class=\"w\"> </span><span class=\"mf\">11.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/llvm/llvm-project 176249bd6732a8044d457092ed932768724a6f06)</span>\n<span class=\"n\">Compiler</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"w\">   </span>: <span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"></span>\n<span class=\"n\">Memory</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"w\">  </span>: <span class=\"nc\">STATIC</span><span class=\"w\"></span>\n<span class=\"n\">seedcrc</span><span class=\"w\">          </span>: <span class=\"mh\">0xe9f5</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crclist</span><span class=\"w\">       </span>: <span class=\"mh\">0xe714</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcmatrix</span><span class=\"w\">     </span>: <span class=\"mh\">0x1fd7</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcstate</span><span class=\"w\">      </span>: <span class=\"mh\">0x8e3a</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcfinal</span><span class=\"w\">      </span>: <span class=\"mh\">0x33ff</span><span class=\"w\"></span>\n<span class=\"n\">Correct</span><span class=\"w\"> </span><span class=\"n\">operation</span><span class=\"w\"> </span><span class=\"n\">validated</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">README</span><span class=\"p\">.</span><span class=\"n\">md</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">reporting</span><span class=\"w\"> </span><span class=\"n\">rules</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">CoreMark</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"w\"> </span>: <span class=\"mf\">6280.883934</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">Clang</span><span class=\"w\"> </span><span class=\"mf\">11.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/llvm/llvm-project 176249bd6732a8044d457092ed932768724a6f06) -O3    / STATIC</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>Wasmtime freezes</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit:  0.25.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 230882726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616081080
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-802037167\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>Thanks for the report! I believe the freezing behavior is due to the wasm file itself rather than wasmtime. Using <code>RUST_LOG=trace</code> I can see that a number of calls to wasi are being made, notably:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">tracing</span>::<span class=\"n\">span</span><span class=\"w\">                                             </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"clock_time_get\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">tracing</span>::<span class=\"n\">span</span>::<span class=\"n\">active</span><span class=\"w\">                                     </span><span class=\"o\">&gt;</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">id</span><span class=\"o\">=</span><span class=\"n\">ProcessCputimeId</span><span class=\"w\"> </span><span class=\"n\">precision</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"n\">clocks</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">supported</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">Badf</span>: <span class=\"nc\">Bad</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span><span class=\"w\">                         </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Error</span>: <span class=\"nc\">process</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"n\">clocks</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">supported</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">Badf</span>: <span class=\"nc\">Bad</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">descriptor</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">tracing</span>::<span class=\"n\">span</span>::<span class=\"n\">active</span><span class=\"w\">                                     </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"w\"></span>\n</code></pre></div>\n<p>It looks like the module is calling the <code>clock_res_get</code> API with the <code>ProcessCputimeId</code> clock id is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5fecdfa49150e3304c1b949aab73bd4a0a02dbac/crates/wasi-common/src/snapshots/preview_1.rs#L228-L230\">not supported right now</a>. In that sense I don't think that the wasm module is handling the error reported by wasmtime.</p>\n<p>There's also the separate issue, however, of the need to implement this part of the WASI API as well.</p>\n</blockquote>",
        "id": 230887325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616082554
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-802043158\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>For background, <code>ProcessCputimeId</code> has been <a href=\"https://github.com/WebAssembly/WASI/pull/197\">removed</a> from WASI ephemeral, as many implementations don't have a one-to-one relationship between processes and instances.</p>\n</blockquote>",
        "id": 230888827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616083008
    },
    {
        "content": "<p>vshymanskyy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-802050425\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>It's an ordinary C app, compiled using <code>wasi-sdk 12.0</code> and <code>clang 11.0.0</code>, and is targeting <code>wasi_snapshot_preview1</code>.<br>\nDo you suggest this is <code>wasi-sdk</code> issue?</p>\n</blockquote>",
        "id": 230891207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616083507
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-802057805\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>wasi-sdk's libc (WebAssembly/wasi-libc) is faithfully translating the application's desire to measure process cpu time to the WASI layer, but WASI cannot support that measurement. So, even if the libc could proactively return the same error that wasmtime is providing here, the application needs to change to not need this sort of measurement.</p>\n<p>If you are trying to measure performance of Wasmtime or WebAssembly code in general, @fitzgen and others have been doing related work, some starting points to look at are <a href=\"https://github.com/bytecodealliance/rfcs/pull/4\">https://github.com/bytecodealliance/rfcs/pull/4</a> and <a href=\"https://github.com/bytecodealliance/sightglass\">https://github.com/bytecodealliance/sightglass</a></p>\n</blockquote>",
        "id": 230893624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616084051
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-802178212\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>It's a good point that wasi-libc's <code>clock</code>, <code>times</code>, and <code>getrusage</code>  implicitly make use of the process and thread clocks. I'll think about whether there's something better we can do for these.</p>\n</blockquote>",
        "id": 230913719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616091342
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-804220897\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>I've now submitted <a href=\"https://github.com/WebAssembly/wasi-libc/pull/241\">https://github.com/WebAssembly/wasi-libc/pull/241</a> to propose a way to fix WASI libc to avoid using the <code>PROCES_CPUTIME</code> clock implicitly.</p>\n</blockquote>",
        "id": 231344454,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616431586
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-807507090\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>I'm going to close this since I think the behavior is correct today (returning an error it's not implemented), it's probably going to be correct into tomorrow (this is removed from the next version of wasi), and the upstream wasi-libc has now been fixed to avoid using these clocks.</p>\n</blockquote>",
        "id": 231877698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616707105
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/6165209/coremark.wasm.zip\">coremark.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">curl</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//wasmtime.dev/install.sh -sSf | bash</span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">0.25.0</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"err\">#</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">freezes</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$wasmer</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"mi\">2</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">parameters</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">coremark</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">CoreMark</span><span class=\"w\"> </span><span class=\"n\">Size</span><span class=\"w\">    </span>: <span class=\"mi\">666</span><span class=\"w\"></span>\n<span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"n\">ticks</span><span class=\"w\">      </span>: <span class=\"mi\">333589297</span><span class=\"w\"></span>\n<span class=\"n\">Total</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">secs</span><span class=\"p\">)</span>: <span class=\"mf\">17.513458</span><span class=\"w\"></span>\n<span class=\"n\">Iterations</span><span class=\"o\">/</span><span class=\"n\">Sec</span><span class=\"w\">   </span>: <span class=\"mf\">6280.883934</span><span class=\"w\"></span>\n<span class=\"n\">Iterations</span><span class=\"w\">       </span>: <span class=\"mi\">110000</span><span class=\"w\"></span>\n<span class=\"n\">Compiler</span><span class=\"w\"> </span><span class=\"n\">version</span><span class=\"w\"> </span>: <span class=\"nc\">Clang</span><span class=\"w\"> </span><span class=\"mf\">11.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/llvm/llvm-project 176249bd6732a8044d457092ed932768724a6f06)</span>\n<span class=\"n\">Compiler</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"w\">   </span>: <span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"></span>\n<span class=\"n\">Memory</span><span class=\"w\"> </span><span class=\"n\">location</span><span class=\"w\">  </span>: <span class=\"nc\">STATIC</span><span class=\"w\"></span>\n<span class=\"n\">seedcrc</span><span class=\"w\">          </span>: <span class=\"mh\">0xe9f5</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crclist</span><span class=\"w\">       </span>: <span class=\"mh\">0xe714</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcmatrix</span><span class=\"w\">     </span>: <span class=\"mh\">0x1fd7</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcstate</span><span class=\"w\">      </span>: <span class=\"mh\">0x8e3a</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"n\">crcfinal</span><span class=\"w\">      </span>: <span class=\"mh\">0x33ff</span><span class=\"w\"></span>\n<span class=\"n\">Correct</span><span class=\"w\"> </span><span class=\"n\">operation</span><span class=\"w\"> </span><span class=\"n\">validated</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">README</span><span class=\"p\">.</span><span class=\"n\">md</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">reporting</span><span class=\"w\"> </span><span class=\"n\">rules</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">CoreMark</span><span class=\"w\"> </span><span class=\"mf\">1.0</span><span class=\"w\"> </span>: <span class=\"mf\">6280.883934</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">Clang</span><span class=\"w\"> </span><span class=\"mf\">11.0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/llvm/llvm-project 176249bd6732a8044d457092ed932768724a6f06) -O3    / STATIC</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>Wasmtime freezes</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit:  0.25.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 231877699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616707106
    },
    {
        "content": "<p>vshymanskyy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-807555038\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>I agree.</p>\n</blockquote>",
        "id": 231881439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616708823
    },
    {
        "content": "<p>vshymanskyy edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737#issuecomment-807555038\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2737\">Issue #2737</a>:</p>\n<blockquote>\n<p>I agree. Thanks everyone!</p>\n</blockquote>",
        "id": 231881455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616708834
    }
]