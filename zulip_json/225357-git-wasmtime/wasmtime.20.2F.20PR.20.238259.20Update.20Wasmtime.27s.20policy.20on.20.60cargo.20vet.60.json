[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a>.</p>",
        "id": 430151778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711655388
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a> from <code>alexcrichton:update-vet-policy</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This was discussed at today's Wasmtime meeting out of some concerns around our current policies. Namely I felt the current state of affairs is not striking the right balance between cost and benefit with our usage of <code>cargo vet</code>. After discussion we've reached consensus around two changes to our <code>cargo vet</code> policy documented here in this PR:</p>\n<ul>\n<li>\n<p>An exemption can be added for \"popular crates\" at any time with no review required. This should handle most big crates that are needed for various dependencies. The thinking behind this is that a supply-chain attack against these crates is highly likely to be detected in a short time due to their popularity. Coupled with the fact that changes to Wasmtime take a minimum of two weeks to get released means that it's an unlikely exploitation vector.</p>\n</li>\n<li>\n<p>Maintainers are recommended to push directly to contributor's PRs for <code>cargo vet</code> entries instead of making separate PRs. This avoids the need for contributor rebasing and additionally solves the problem where the <code>vet</code> entries land in a separate PR but then the contributor's PR takes much longer to land. In the interim some <code>vet</code> entries have been cleaned up by accident which requires re-landing the PR to add the entries.</p>\n</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 430151779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711655388
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a>.</p>",
        "id": 430151780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711655388
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259#issuecomment-2025998944\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a>:</p>\n<blockquote>\n<p>Some points of note:</p>\n<ul>\n<li>I kept the 10,000 crate download metric since spot checking a few dependencies seemed to show that as a resonable threshold. For example from the ONNX PR the <code>compact_str</code> dependency clears this threshold but the <code>capstone</code> dependency does not. That makes sense to me since I don't expect disassembling to be all that popular on <a href=\"http://crates.io\">crates.io</a></li>\n<li>I briefly looked into what it might take to \"comment on a PR if a github actions fails\". I'd love to drop a comment on PRs from contributors pointing to this documentation when the <code>cargo vet</code> entry fails in CI. Turns out GitHub Actions has an <a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow\">example of doing exactly that</a> (well, mostly), but it's pretty nasty so I didn't pursue it yet.</li>\n</ul>\n</blockquote>",
        "id": 430152356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711655631
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259#issuecomment-2025998944\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a>:</p>\n<blockquote>\n<p>Some points of note:</p>\n<ul>\n<li>I kept the 10,000 crate download metric since spot checking a few dependencies seemed to show that as a reasonable threshold. For example from the ONNX PR the <code>compact_str</code> dependency clears this threshold but the <code>capstone</code> dependency does not. That makes sense to me since I don't expect disassembling to be all that popular on <a href=\"http://crates.io\">crates.io</a></li>\n<li>I briefly looked into what it might take to \"comment on a PR if a github actions fails\". I'd love to drop a comment on PRs from contributors pointing to this documentation when the <code>cargo vet</code> entry fails in CI. Turns out GitHub Actions has an <a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow\">example of doing exactly that</a> (well, mostly), but it's pretty nasty so I didn't pursue it yet.</li>\n</ul>\n</blockquote>",
        "id": 430152413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711655645
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259#pullrequestreview-1967197541\">PR review</a>:</p>\n<blockquote>\n<p>LGTM -- this accurately represents what we came out of the discussion with, I think. Thanks very much for writing up the details!</p>\n</blockquote>",
        "id": 430155932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711657147
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259#pullrequestreview-1967197541\">PR review</a>:</p>\n<blockquote>\n<p>LGTM -- this accurately represents what we came out of the discussion with, I think. Thanks very much for writing up the details!</p>\n</blockquote>",
        "id": 430155933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711657147
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259#discussion_r1543600047\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's add some explicit note heres too -- maybe something like \"... or don't overwrite your vet entries. Also verify that if the PR branch is rebased or force-pushed, the details of your previously pushed vetting remain the same: e.g., versions were not bumped and descriptive reasons remain the same. If pushing a vetting commit to a contributor's PR and also asking for more changes, request that the contributor make the requested fixes in an additional commit rather than force-pushing a rewritten history, so your existing vetting commit remains untouched. These guidelines make it easier to verify no tampering has occurred.\"</p>\n</blockquote>",
        "id": 430155935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711657147
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259#discussion_r1543600047\">PR review comment</a>.</p>",
        "id": 430156065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711657204
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a>.</p>",
        "id": 430281332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711729618
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a>.</p>",
        "id": 430281346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711729623
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8259\">PR #8259</a>.</p>",
        "id": 430288532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711732558
    }
]