[
    {
        "content": "<p>flyflypeng opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328\">issue #3328</a>:</p>\n<blockquote>\n<p>I read the post <a href=\"https://bytecodealliance.org/articles/1-year-update\">Bytecode Alliance: One year update</a>, which have announced that \"The Lucet and Wasmtime teams join forces\", so I have a question, wasmtime will port the benefits of the lucet runtime to support AOT style execution model?</p>\n</blockquote>",
        "id": 252891711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631347108
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328#issuecomment-917397820\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328\">issue #3328</a>:</p>\n<blockquote>\n<p>This is indeed implemented now: you can use <code>wasmtime compile your.wasm</code> and then run it with <code>wasmtime run your.cwasm</code>, or load it in your embedding.</p>\n</blockquote>",
        "id": 252905625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631362685
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328#issuecomment-917397937\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328\">issue #3328</a>:</p>\n<blockquote>\n<p>I'll close this issue as I don't think there's anything else to address here, but feel free to open new issues if problems arise in using Wasmtime! :)</p>\n</blockquote>",
        "id": 252905657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631362735
    },
    {
        "content": "<p>tschneidereit closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328\">issue #3328</a>:</p>\n<blockquote>\n<p>I read the post <a href=\"https://bytecodealliance.org/articles/1-year-update\">Bytecode Alliance: One year update</a>, which have announced that \"The Lucet and Wasmtime teams join forces\", so I have a question, wasmtime will port the benefits of the lucet runtime to support AOT style execution model?</p>\n</blockquote>",
        "id": 252905658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631362736
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328#issuecomment-918402601\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328\">issue #3328</a>:</p>\n<blockquote>\n<p>Please note: currently running a AOT compiled module using <code>wasmtime run</code> is not supported (this changed <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2858\">back in April</a>) as it is considered an unsafe operation to deserialize a pre-compiled module (see comment <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/module.rs#L438-L468\">here</a>).</p>\n<p>Right now you will need to write your own version of <code>wasmtime run</code> that uses <code>Module::deserialize</code> (or better yet the recently added <code>Module::deserialize_file</code>) to load the module.</p>\n</blockquote>",
        "id": 253126328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631553337
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328#issuecomment-918402601\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328\">issue #3328</a>:</p>\n<blockquote>\n<p>Please note: currently running an AOT compiled module using <code>wasmtime run</code> is not supported (this changed <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2858\">back in April</a>) as it is considered an unsafe operation to deserialize a pre-compiled module (see comment <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/module.rs#L438-L468\">here</a>).</p>\n<p>Right now you will need to write your own version of <code>wasmtime run</code> that uses <code>Module::deserialize</code> (or better yet the recently added <code>Module::deserialize_file</code>) to load the module.</p>\n</blockquote>",
        "id": 253126361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631553350
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328#issuecomment-918406830\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3328\">issue #3328</a>:</p>\n<blockquote>\n<p>Actually, it looks like @alexcrichton already put up a PR to restore this functionality to <code>wasmtime run</code> (that's what I get for going from oldest to newest in my github notifications <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span>).</p>\n</blockquote>",
        "id": 253127122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631553643
    }
]