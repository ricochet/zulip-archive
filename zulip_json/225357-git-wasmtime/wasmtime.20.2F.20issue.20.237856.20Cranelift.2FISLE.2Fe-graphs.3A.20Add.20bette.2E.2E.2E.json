[
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856\">Issue #7856</a>.</p>",
        "id": 419278779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706803489
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the isle label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856\">Issue #7856</a>.</p>",
        "id": 419278782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706803489
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856\">issue #7856</a>:</p>\n<blockquote>\n<p>In traditional peephole passes, it is easy to add logging for each rewrite you perform on the IR.</p>\n<p>In e-graphs, we perform all possible rewrites, producing many equivalent expressions, and then afterwards extract just the best version. This means that logging each rewrite we perform will emit a bunch of largely irrelevant logs for expressions that we didn't ultimately extract. And by the time we do extraction, we no longer know which chain of rewrites produced that expression. This makes debugging a series of rewrites quite difficult.</p>\n<p>We should figure out some way to improve things here.</p>\n<p>Straw person idea:</p>\n<ul>\n<li>when adding an e-node to an e-class, record in a secondary map:<ul>\n<li>the id of the rewrite that produced that e-node</li>\n<li>the e-node that was the input to that rewrite</li>\n</ul>\n</li>\n<li>\n<p>when printing clif, optionally use this secondary map to add annotation comments like</p>\n<p><code>\n; Rewrite chain:\n;   v97 = simplify(v96) rule at remat.isle:12\n;   v120 = simplify(v97) rule at bitops.isle:283\n;   v123 = simplify(v120) rule at cprop.isle:84 \nv123 = iadd v42, v36\n</code></p>\n</li>\n</ul>\n<p>We would probably only want to do this when a compile-time cargo feature is enabled. We could enable this feature for the filetests crate, but not be default in <code>cranelift-codegen</code>, so we could even write filetests that assert that certain rules we expect to chain together, do in fact chain together.</p>\n<p>I think there were plans to add names to rules (maybe support for this even already landed in ISLE? can't remember) and we could use these names in the comments if they exist. That would be something that we could test for in the filetest directives, since we wouldn't want to include the source locations, as those would be too noisy for filetests when adding, removing, and tweaking rules.</p>\n<p>But anyways, the filetest support is ultimately a secondary priority. I really just want to have better debugging of the e-graph rewrites.</p>\n<p>cc @elliottt</p>\n</blockquote>",
        "id": 419278785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706803490
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856#issuecomment-1921666481\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856\">issue #7856</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 419278955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706803537
    },
    {
        "content": "<p>avanhatt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856#issuecomment-1930622022\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856\">issue #7856</a>:</p>\n<blockquote>\n<p>FWIW, egg's <a href=\"https://egraphs-good.github.io/egg/egg/tutorials/_03_explanations/index.html\">\"explanation\"</a> construct (and <a href=\"https://www.cs.upc.edu/~roberto/papers/rta05.pdf\">the paper they reference</a>) might be a useful place to look for inspiration.</p>\n</blockquote>",
        "id": 420120436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707248043
    },
    {
        "content": "<p>avanhatt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856#issuecomment-1930623515\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7856\">issue #7856</a>:</p>\n<blockquote>\n<p>We also have code to name ISLE rules in the Crocus codebase, I can try to split that off as a separate PR soon. </p>\n</blockquote>",
        "id": 420120636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707248105
    }
]