[
    {
        "content": "<p>kubkon opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a> from <code>wasi-common-armv7</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enables <code>target_pointer_width = 32</code> compatibility for <code>wasi-common</code> (and by transitivity, any crate found inside, e.g., <code>yanix</code>). I've also added a simplistic (bare minimum) check to our CI to ensure that <code>wasi-common</code> cross-compiles to <code>armv7-unknown-gnueabihf</code> fine. While here, I've done the same for <code>wasm32-unknown-emscripten</code>.</p>\n<p>To avoid code duplication, I've added a custom ext trait <code>FileTimeExt</code> which implements seconds and nanoseconds accessors for with different impls for different pointer widths. I'm not sure whether that's the cleanest approach but definitely seemed like it at the time. Lemme know what you reckon!</p>\n<p>Fixes #1219 </p>\n<p>cc @stefson hopefully this fixes it for you :-)</p>\n</blockquote>",
        "id": 190166369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583843482
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a>, and <a href=\"https://github.com/sunfishcode\" target=\"_blank\" title=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a>.</p>",
        "id": 190166370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583843482
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a>, and <a href=\"https://github.com/sunfishcode\" target=\"_blank\" title=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a>.</p>",
        "id": 190166371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583843482
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371922821\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371922821\">PR Review</a>.</p>",
        "id": 190168789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583845521
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371922821\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371922821\">PR Review</a>.</p>",
        "id": 190168790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583845521
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390291258\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390291258\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Actually, seeing this written out reminds me that some 32-bit targets are transitioning to a 64-bit <code>time_t</code> and making their <code>tv_sec</code> a <code>time_t</code> to fix the 2038 bug. So what we could do instead here would be to change the <code>Result&lt;i32&gt;</code> here to a <code>Result&lt;libc::time_t&gt;</code>, and that should work for both 32-bit and 64-bit targets. It can still use <code>try_into</code>, but it should get optimized away in the case where <code>time_t</code> is 64-bit.</p>\n</blockquote>",
        "id": 190168791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583845521
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390296588\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390296588\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We should use <code>libc::c_long</code> here. Or even better, can we use <code>libc::UTIME_NOW</code> and <code>libc::UTIME_OMIT</code> instead of defining our own copies?</p>\n</blockquote>",
        "id": 190168792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583845521
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390293483\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390293483\">PR Review Comment</a>:</p>\n<blockquote>\n<p>For nanoseconds, the <code>filetime</code> library <a href=\"https://docs.rs/filetime/0.2.8/filetime/struct.FileTime.html#method.nanoseconds\" target=\"_blank\" title=\"https://docs.rs/filetime/0.2.8/filetime/struct.FileTime.html#method.nanoseconds\">documents</a> that the nanoseconds value is always less than 1 billion, so any value it returns should be convertible to <code>i32</code>, so we can just <code>.try_into().unwrap()</code>.</p>\n</blockquote>",
        "id": 190168793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583845521
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371975831\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371975831\">PR Review</a>.</p>",
        "id": 190174418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848760
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390332440\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390332440\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That's a good point actually. As far as I can remember, the main reason why we'd define them ourselves was to support older <code>libc</code> crates where those constants were incorrectly defined for some targets (netbsd and macos are the awkward ones among others). Given that they are now fixed in <code>libc</code>, I'm happy to reuse their definitions instead <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>\n</blockquote>",
        "id": 190174419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848761
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371975927\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371975927\">PR Review</a>.</p>",
        "id": 190174427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848766
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390332520\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390332520\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Good catch, thanks!</p>\n</blockquote>",
        "id": 190174428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848766
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371976054\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-371976054\">PR Review</a>.</p>",
        "id": 190174441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848774
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390332631\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390332631\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Excellent!</p>\n</blockquote>",
        "id": 190174442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848774
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a> from <code>wasi-common-armv7</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enables <code>target_pointer_width = 32</code> compatibility for <code>wasi-common</code> (and by transitivity, any crate found inside, e.g., <code>yanix</code>). I've also added a simplistic (bare minimum) check to our CI to ensure that <code>wasi-common</code> cross-compiles to <code>armv7-unknown-gnueabihf</code> fine. While here, I've done the same for <code>wasm32-unknown-emscripten</code>.</p>\n<p>To avoid code duplication, I've added a custom ext trait <code>FileTimeExt</code> which implements seconds and nanoseconds accessors for with different impls for different pointer widths. I'm not sure whether that's the cleanest approach but definitely seemed like it at the time. Lemme know what you reckon!</p>\n<p>Fixes #1219 </p>\n<p>cc @stefson hopefully this fixes it for you :-)</p>\n</blockquote>",
        "id": 190174567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848820
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a>, and <a href=\"https://github.com/sunfishcode\" target=\"_blank\" title=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a>.</p>",
        "id": 190174712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583848909
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372072785\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372072785\">PR Review</a>.</p>",
        "id": 190187691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583854921
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372072785\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372072785\">PR Review</a>.</p>",
        "id": 190187695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583854921
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390411337\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390411337\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could we avoid having this <code>#[cfg]</code>? It seems like it'd be best to just always have the <code>try_into().unwrap()</code>, and that I think means we could also remove  the <code>_checked</code> from the name, right?</p>\n</blockquote>",
        "id": 190187701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583854922
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390410829\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390410829\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is the <code>#[cfg]</code> here necessary? </p>\n<p>I'd love to have as few <code>#[cfg]</code> as necessary and it seems like we'd want this logic on all platforms?</p>\n</blockquote>",
        "id": 190187704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583854922
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390409269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390409269\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Since this likely executes pretty quickly I don't think we necessarily need to have two whole builders for this, could these be collapsed perhaps into a single \"check all the targets\" builder?</p>\n</blockquote>",
        "id": 190187705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583854922
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372077382\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372077382\">PR Review</a>.</p>",
        "id": 190187913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855030
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390412993\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390412993\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Agreed! You beat me to it actually! I was just reworking this bit as it seems silly to have <code>unwrap</code> wrapped in <code>Result</code> :-D</p>\n</blockquote>",
        "id": 190187915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855030
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372078740\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372078740\">PR Review</a>.</p>",
        "id": 190188108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855115
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390414049\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390414049\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Agreed about <code>#[cfg]</code>s.</p>\n<p>Hmm, do you reckon we could collapse both <code>from_raw</code> versions into one with <code>try_into</code>?</p>\n</blockquote>",
        "id": 190188109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855115
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372075785\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372075785\">PR Review</a>.</p>",
        "id": 190188165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855146
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372075785\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372075785\">PR Review</a>.</p>",
        "id": 190188166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855146
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390411686\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390411686\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We can take this even further: <code>tv_nsec</code> is always a <code>libc::c_long</code>, so we can return that for both 32-bit and 64-bit platforms and avoid the <code>target_pointer_width</code> checks, and since the check always succeeds, we can just return the value instead of a <code>Result</code>.</p>\n</blockquote>",
        "id": 190188167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855147
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390414227\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390414227\">PR Review Comment</a>:</p>\n<blockquote>\n<p>And now that I think about it, we can do a similar thing here -- just have one version for both 32-bit and 64-bit platforms, which returns a <code>Result&lt;libc::c_long&gt;</code>, and we can rely on the compiler to optimize away the <code>map_err</code> in the case where <code>c_long</code> is 64-bit.</p>\n</blockquote>",
        "id": 190188170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855147
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390416326\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390416326\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah yeah @sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390414227\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#discussion_r390414227\">put it well here</a></p>\n</blockquote>",
        "id": 190188507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855295
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372081609\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372081609\">PR Review</a>.</p>",
        "id": 190188508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583855295
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a> from <code>wasi-common-armv7</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enables <code>target_pointer_width = 32</code> compatibility for <code>wasi-common</code> (and by transitivity, any crate found inside, e.g., <code>yanix</code>). I've also added a simplistic (bare minimum) check to our CI to ensure that <code>wasi-common</code> cross-compiles to <code>armv7-unknown-gnueabihf</code> fine. While here, I've done the same for <code>wasm32-unknown-emscripten</code>.</p>\n<p>To avoid code duplication, I've added a custom ext trait <code>FileTimeExt</code> which implements seconds and nanoseconds accessors for with different impls for different pointer widths. I'm not sure whether that's the cleanest approach but definitely seemed like it at the time. Lemme know what you reckon!</p>\n<p>Fixes #1219 </p>\n<p>cc @stefson hopefully this fixes it for you :-)</p>\n</blockquote>",
        "id": 190190805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583856338
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a> from <code>wasi-common-armv7</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enables <code>target_pointer_width = 32</code> compatibility for <code>wasi-common</code> (and by transitivity, any crate found inside, e.g., <code>yanix</code>). I've also added a simplistic (bare minimum) check to our CI to ensure that <code>wasi-common</code> cross-compiles to <code>armv7-unknown-gnueabihf</code> fine. While here, I've done the same for <code>wasm32-unknown-emscripten</code>.</p>\n<p>To avoid code duplication, I've added a custom ext trait <code>FileTimeExt</code> which implements seconds and nanoseconds accessors for with different impls for different pointer widths. I'm not sure whether that's the cleanest approach but definitely seemed like it at the time. Lemme know what you reckon!</p>\n<p>Fixes #1219 </p>\n<p>cc @stefson hopefully this fixes it for you :-)</p>\n</blockquote>",
        "id": 190191296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583856558
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a>.</p>",
        "id": 190191351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583856591
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" target=\"_blank\" title=\"https://github.com/alexcrichton\">alexcrichton</a>, and <a href=\"https://github.com/sunfishcode\" target=\"_blank\" title=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a>.</p>",
        "id": 190191352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583856591
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372107504\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269#pullrequestreview-372107504\">PR Review</a>.</p>",
        "id": 190192055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583856938
    },
    {
        "content": "<p>kubkon merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1269\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1269\">PR #1269</a>.</p>",
        "id": 190206855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583864342
    }
]