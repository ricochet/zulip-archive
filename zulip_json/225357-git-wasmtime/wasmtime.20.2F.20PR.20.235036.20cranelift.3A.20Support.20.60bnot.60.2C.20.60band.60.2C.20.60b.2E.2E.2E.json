[
    {
        "content": "<p>ArtBlnd edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> from <code>x86_64-float-bitops1</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n<p>This patch implements float bitops on x86_64 using SSE instructions.<br>\n@afonso360 </p>\n<ul>\n<li>[x] Check if better single slot bitops available on x86_64. (which has better latency or throughput?...) </li>\n<li>[ ] Make single slot mask for <code>f32</code>, <code>f64</code> instead of <code>vector_all_ones</code></li>\n</ul>\n</blockquote>",
        "id": 303345033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665449705
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1144850219\">PR review</a>.</p>",
        "id": 304565010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666043317
    },
    {
        "content": "<p><strong>ArtBlnd</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> as ready for review.</p>",
        "id": 305570328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666464769
    },
    {
        "content": "<p>ArtBlnd edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> from <code>x86_64-float-bitops1</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n<p>This patch implements float bitops on x86_64 using SSE instructions.<br>\n@afonso360 </p>\n<ul>\n<li>[x] Check if better single slot bitops available on x86_64. (which has better latency or throughput?...) </li>\n<li>[x] Make single slot mask for <code>f32</code>, <code>f64</code> instead of <code>vector_all_ones</code></li>\n</ul>\n</blockquote>",
        "id": 305570330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666464772
    },
    {
        "content": "<p>ArtBlnd updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> from <code>x86_64-float-bitops1</code> to <code>main</code>.</p>",
        "id": 305572447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666465672
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1153358712\">PR review</a>.</p>",
        "id": 305850375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666626523
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1003465088\">PR review comment</a>:</p>\n<blockquote>\n<p>Same comment here and below.</p>\n</blockquote>",
        "id": 305850376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666626523
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1003463992\">PR review comment</a>:</p>\n<blockquote>\n<p>We should probably use the same <code>if</code> syntax here for consistency...</p>\n</blockquote>",
        "id": 305850379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666626523
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1003477637\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it might be preferable to use <code>ANDNPS</code> here: <code>AND</code>-ing the register to itself keeps the same bits in place and the <code>NOT</code> part will do what we want it to do. That way we avoid an extra <code>PCMPEQ*</code> due to the <code>vector_all_ones</code>.</p>\n</blockquote>",
        "id": 305850380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666626523
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1153358712\">PR review</a>.</p>",
        "id": 305850385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666626524
    },
    {
        "content": "<p>ArtBlnd updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> from <code>x86_64-float-bitops1</code> to <code>main</code>.</p>",
        "id": 307649470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667444074
    },
    {
        "content": "<p>ArtBlnd submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1166224482\">PR review</a>.</p>",
        "id": 307649510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667444141
    },
    {
        "content": "<p>ArtBlnd created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1012455180\">PR review comment</a>:</p>\n<blockquote>\n<p>I am not sure we have to make mask for xor or and after xor. also why than our eq tests does not fail because of side-effects?</p>\n</blockquote>",
        "id": 307649511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667444144
    },
    {
        "content": "<p>ArtBlnd edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1012455180\">PR review comment</a>.</p>",
        "id": 307649968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667444609
    },
    {
        "content": "<p>ArtBlnd updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> from <code>x86_64-float-bitops1</code> to <code>main</code>.</p>",
        "id": 307656412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667450220
    },
    {
        "content": "<p>ArtBlnd created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1012492780\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">isa</span><span class=\"err\">\\</span><span class=\"n\">x64</span><span class=\"err\">\\</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">isle</span>:<span class=\"mi\">275</span>:<span class=\"mi\">3</span>: <span class=\"nc\">type</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">Used</span><span class=\"w\"> </span><span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">pure</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">ty_scalar_float</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">pure</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">isa</span><span class=\"err\">\\</span><span class=\"n\">x64</span><span class=\"err\">\\</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">isle</span>:<span class=\"mi\">337</span>:<span class=\"mi\">3</span>: <span class=\"nc\">type</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">Used</span><span class=\"w\"> </span><span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">pure</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">ty_scalar_float</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">pure</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"n\">context</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"err\">```</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">```</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">ty_scalar_float</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Type</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Type</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">ty_scalar_float</span><span class=\"w\"> </span><span class=\"n\">ty_scalar_float</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I don't think this is possible now. It should be separate to other patch.</p>\n</blockquote>",
        "id": 307657365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667451161
    },
    {
        "content": "<p>ArtBlnd submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1166275202\">PR review</a>.</p>",
        "id": 307657366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667451161
    },
    {
        "content": "<p>ArtBlnd updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> from <code>x86_64-float-bitops1</code> to <code>main</code>.</p>",
        "id": 307657550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667451332
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1167796030\">PR review</a>.</p>",
        "id": 307861656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667520196
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1013498531\">PR review comment</a>:</p>\n<blockquote>\n<p>Can you re-phrase your question? I'm not sure exactly what you mean...</p>\n</blockquote>",
        "id": 307861657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667520196
    },
    {
        "content": "<p>ArtBlnd created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1013549915\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh... I misunderstood. just nevermind.</p>\n</blockquote>",
        "id": 307873916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667529224
    },
    {
        "content": "<p>ArtBlnd submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1167862047\">PR review</a>.</p>",
        "id": 307873917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667529224
    },
    {
        "content": "<p>ArtBlnd edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1013549915\">PR review comment</a>.</p>",
        "id": 307873925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667529230
    },
    {
        "content": "<p>ArtBlnd submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1173137529\">PR review</a>.</p>",
        "id": 308704349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667958984
    },
    {
        "content": "<p>ArtBlnd created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1017322924\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think this works. the and<code>not</code> will negative the float value itself. here is result.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">test</span>: <span class=\"nc\">run</span>: <span class=\"o\">%</span><span class=\"n\">bnot_f32</span><span class=\"p\">(</span><span class=\"mf\">0.0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">NaN</span>:<span class=\"mh\">0x3fffff</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">actual</span>: <span class=\"mf\">0.0</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 308704350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667958984
    },
    {
        "content": "<p>ArtBlnd submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1173138526\">PR review</a>.</p>",
        "id": 308704426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667959077
    },
    {
        "content": "<p>ArtBlnd created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1017323693\">PR review comment</a>:</p>\n<blockquote>\n<p>You can check over here <a href=\"https://www.felixcloutier.com/x86/andnps#andnps--128-bit-legacy-sse-version-\">https://www.felixcloutier.com/x86/andnps#andnps--128-bit-legacy-sse-version-</a></p>\n</blockquote>",
        "id": 308704427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667959077
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1174889964\">PR review</a>.</p>",
        "id": 308894107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668036805
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#discussion_r1018511931\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh, you're right! The NOT happens before the AND. Sorry for the distraction, let me take one more look at everything else...</p>\n</blockquote>",
        "id": 308894108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668036805
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#pullrequestreview-1174891382\">PR review</a>.</p>",
        "id": 308894304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668036930
    },
    {
        "content": "<p>ArtBlnd updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a> from <code>x86_64-float-bitops1</code> to <code>main</code>.</p>",
        "id": 310744934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668744305
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">PR #5036</a>.</p>",
        "id": 310850601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668786356
    }
]