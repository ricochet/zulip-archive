[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791\">PR #3791</a> from <code>minor-instantiate-wins</code> to <code>main</code>:</p>\n<blockquote>\n<p>I've been poring over profiles of instantiation recently and this is the final batch (for now at least) of optimizations of low-ish hanging fruit for speeding up instantiation. At this level the fruit is starting to appear significantly higher in the tree and at least for me this is basically at the limit of what I think makes sense to optimize for now. In the <code>instantiation.rs</code> benchmark the <code>WasiCtx::new</code> call is starting to become a pretty nontrivial portion of the entire benchmark which while we could make faster shows just how fast instantiation is at this point.</p>\n<p>Each optimization is split out to a separate commit below, but at a high level the optimizations implemented here are:</p>\n<ul>\n<li>The <code>FuncData</code> type is shrunk to avoid extraneous movement of hundreds of bytes per-instantiation.</li>\n<li>Type information is no longer stored inline in <code>VMContext</code> but rather externally in <code>Module</code> to provide constant-time instantiation.</li>\n<li>Space for functions being inserted into a store is now pre-reserved to minimize reallocations and memory movement during the instantiation process.</li>\n</ul>\n<p>Each improvement here is relatively modest but overall this improves the instantiation of spidermonkey/rustpython modules by 20-25%, dropping them to 3.5 and 3.9us on my machine.</p>\n<p>The <a href=\"https://share.firefox.dev/3Bb0ieI\">remaining profile</a> I'm having a tough time finding what else to move out of the way and optimize. One of the highest parts of the profile now is all the <code>Arc&lt;T&gt;</code> reference count management, but doing something different there would be a pretty major overhaul I think and honestly this feels like a great problem to have. There's probably some minor tweaks we can make to data structures in <code>Store&lt;T&gt;</code> to make them more optimal, but as things go it feels like we're in a pretty good place as-is.</p>\n</blockquote>",
        "id": 271531399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644554731
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791\">PR #3791</a> from <code>minor-instantiate-wins</code> to <code>main</code>.</p>",
        "id": 271532901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644556446
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791#pullrequestreview-879789348\">PR review</a>.</p>",
        "id": 271534449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644558553
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791#pullrequestreview-879789348\">PR review</a>.</p>",
        "id": 271534450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644558553
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791#discussion_r804369049\">PR review comment</a>:</p>\n<blockquote>\n<p>We probably limit <code>sig_index</code> here sufficiently, but just in case, out of principle, <code>checked_mul()</code> here?</p>\n</blockquote>",
        "id": 271534452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644558553
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791#pullrequestreview-880207188\">PR review</a>.</p>",
        "id": 271579442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644587679
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791#discussion_r804670801\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it make sense to remove this variant and always use an <code>Arc</code>?</p>\n</blockquote>",
        "id": 271579443,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644587679
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791\">PR #3791</a> from <code>minor-instantiate-wins</code> to <code>main</code>.</p>",
        "id": 271591015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644592771
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791#pullrequestreview-880318377\">PR review</a>.</p>",
        "id": 271591071,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644592797
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791#discussion_r804749419\">PR review comment</a>:</p>\n<blockquote>\n<p>Perhaps one day if this gets too complicated, but otherwise <code>Arc</code> management is already pretty high in the performance profile so I'd prefer to not add more.</p>\n</blockquote>",
        "id": 271591072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644592797
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3791\">PR #3791</a>.</p>",
        "id": 271595983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644594909
    }
]