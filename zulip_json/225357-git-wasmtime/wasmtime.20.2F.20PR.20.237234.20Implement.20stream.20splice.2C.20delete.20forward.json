[
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 396545601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697217671
    },
    {
        "content": "<p><strong>pchickey</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a> as ready for review.</p>",
        "id": 396545616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697217682
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396545618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697217683
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396545620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697217683
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396546536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697218096
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>:</p>\n<blockquote>\n<p>This PR implements <code>output-stream.splice</code> and <code>blocking-splice</code>.</p>\n<p>The wit definitions for these functions has been changed to take a <code>borrow&lt;input-stream&gt;</code>, rather than the owned resource.</p>\n<p>Splice performs the equivalent to:</p>\n<ul>\n<li>uses <code>check-write</code> to determine how much input is accepted by the <code>output-stream</code>.</li>\n<li>uses <code>read</code> to read up to that much (or the <code>len</code> bound provided by caller) from the <code>input-stream</code></li>\n<li>uses <code>write</code> to write the read data to the <code>output-stream</code>.</li>\n</ul>\n<p>By implementing this in the host using the <code>HostInputStream</code> and <code>HostOutputStream</code> traits, the read and write are done in terms of <code>Bytes</code> representation, so there are zero copies of the underlying data made as part of the splice.</p>\n<p>A blocking splice waits for both read and write readiness before performing those operations.</p>\n<p>The <code>output-stream.forward</code> method has been deleted from the wit. We believe that the fusion of an <code>output-stream</code> into an <code>input-stream</code> (which gives up ownership of both resources, and happens perpetually in the background) is a worthwhile concept to implement some day, but it raises various questions on how progress and errors can be reported, and whether the background work can outlive the calling component, so rather than open that can of worms now we are going to ask users to implement it with their own event loops using <code>splice</code> for now, and look at adding it again in the future.</p>\n</blockquote>",
        "id": 396547598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697218534
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396548274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697218890
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396549822,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697219720
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396939028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697473958
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#pullrequestreview-1680599714\">PR review</a>.</p>",
        "id": 396948439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697477698
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#pullrequestreview-1680599714\">PR review</a>.</p>",
        "id": 396948440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697477699
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#discussion_r1361032659\">PR review comment</a>:</p>\n<blockquote>\n<p>Same as above, this and below may no longer be necessary?</p>\n</blockquote>",
        "id": 396948441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697477699
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#discussion_r1361029005\">PR review comment</a>:</p>\n<blockquote>\n<p>no longer necessary I think?</p>\n</blockquote>",
        "id": 396948442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697477699
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#pullrequestreview-1680618758\">PR review</a>.</p>",
        "id": 396949785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697478244
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#discussion_r1361046869\">PR review comment</a>:</p>\n<blockquote>\n<p>You do need to give up the borrow of output before creating input below, because they are both mut borrows into the table. I changed this to use blocks instead of explicit drops to make it a little more obvious.</p>\n</blockquote>",
        "id": 396949796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697478244
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396949859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697478279
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#pullrequestreview-1680621909\">PR review</a>.</p>",
        "id": 396950066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697478371
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#discussion_r1361048819\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh? I would imagine that NLL fixes this because <code>let _: &amp;mut T = val;</code> AFAIK does nothing in terms of lifetime inference</p>\n</blockquote>",
        "id": 396950069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697478371
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#pullrequestreview-1680706264\">PR review</a>.</p>",
        "id": 396955081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697480574
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234#discussion_r1361108359\">PR review comment</a>:</p>\n<blockquote>\n<p>oh. yes, you're right. im not sure what error message i was trying to get around by writing it that way, but it isnt necessary. at any rate i like the way its written now.</p>\n</blockquote>",
        "id": 396955082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697480575
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7234\">PR #7234</a>.</p>",
        "id": 396971895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697487635
    }
]