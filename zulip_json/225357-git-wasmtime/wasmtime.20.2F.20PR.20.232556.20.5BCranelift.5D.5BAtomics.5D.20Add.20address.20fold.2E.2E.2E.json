[
    {
        "content": "<p>yurydelendik opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556\">PR #2556</a> from <code>bug1684861</code> to <code>main</code>:</p>\n<blockquote>\n<p>Related isseue <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1684861\">https://bugzilla.mozilla.org/show_bug.cgi?id=1684861</a></p>\n<p>There are two parts:</p>\n<ul>\n<li>cranelift/wasm/src/code_translator.rs the logic required for SM to work properly</li>\n<li>rest of it is testing of the broken logic</li>\n</ul>\n<p>I don't think it is necessary to check alignment in the <code>fold_atomic_mem_addr</code> though it is the only way at this moment to verify/test fix in the wasmtime.</p>\n<p>Does makes sense for <code>wasmtime_memory_atomic_</code> to operate with 64-bit address instead of 32-bit one? But that's different question we have to address.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] check for i32 adderss overflow?</li>\n</ul>\n</blockquote>",
        "id": 222000979,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610053671
    },
    {
        "content": "<p><strong>yurydelendik</strong> requested <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556\">PR #2556</a>.</p>",
        "id": 222001053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610053690
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556\">PR #2556</a> from <code>bug1684861</code> to <code>main</code>:</p>\n<blockquote>\n<p>Related isseue <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1684861\">https://bugzilla.mozilla.org/show_bug.cgi?id=1684861</a></p>\n<p>There are two parts:</p>\n<ul>\n<li>cranelift/wasm/src/code_translator.rs the logic required for SM to work properly</li>\n<li>rest of it is testing of the broken logic</li>\n</ul>\n<p>I don't think it is necessary to check alignment in the <code>fold_atomic_mem_addr</code> though it is the only way at this moment to verify/test fix in the wasmtime.</p>\n<p>Does it make sense for <code>wasmtime_memory_atomic_</code> to operate with 64-bit address instead of 32-bit one? But that's different question we have to address.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] check for i32 address overflow?</li>\n</ul>\n</blockquote>",
        "id": 222001192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610053781
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556\">PR #2556</a> from <code>bug1684861</code> to <code>main</code>:</p>\n<blockquote>\n<p>Related isseue <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1684861\">https://bugzilla.mozilla.org/show_bug.cgi?id=1684861</a></p>\n<p>There are two parts:</p>\n<ul>\n<li>cranelift/wasm/src/code_translator.rs the logic required for SM to work properly</li>\n<li>rest of it is testing of the broken logic</li>\n</ul>\n<p>I don't think it is necessary to check alignment in the <code>fold_atomic_mem_addr</code> though it is the only way at this moment to verify/test fix in the wasmtime.</p>\n<p>Does it make sense for <code>wasmtime_memory_atomic_</code> to operate with 64-bit address instead of 32-bit one? But that's different question we have to address.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] check for i32 address overflow?</li>\n</ul>\n</blockquote>",
        "id": 222009233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610057634
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556\">PR #2556</a> from <code>bug1684861</code> to <code>main</code>:</p>\n<blockquote>\n<p>Related isseue <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1684861\">https://bugzilla.mozilla.org/show_bug.cgi?id=1684861</a></p>\n<p>There are two parts:</p>\n<ul>\n<li>cranelift/wasm/src/code_translator.rs the logic required for SM to work properly</li>\n<li>rest of it is testing of the broken logic</li>\n</ul>\n<p>I don't think it is necessary to check alignment in the <code>fold_atomic_mem_addr</code> though it is the only way at this moment to verify/test fix in the wasmtime.</p>\n<p>Does it make sense for <code>wasmtime_memory_atomic_</code> to operate with 64-bit address instead of 32-bit one? But that's different question we have to address.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] check for i32 address overflow?</li>\n</ul>\n</blockquote>",
        "id": 222009416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610057714
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-563868947\">PR Review</a>.</p>",
        "id": 222010256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610058141
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-563868947\">PR Review</a>.</p>",
        "id": 222010257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610058141
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553624583\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I figured that we already had a function somewhere in this file to calculate an address, could that perhaps be used instead of duplicating the logic here? That handles things with the guard page and whatnot too to deduplicate checks.</p>\n</blockquote>",
        "id": 222010258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610058141
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553623614\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Due to the relative cost of these functions, could the distinction between local/imported memories be removed to halve the number of intrinsics added?</p>\n</blockquote>",
        "id": 222010259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610058141
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553624848\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Similar to above I figured we'd already have alignment checks somewhere else for other atomic ops</p>\n</blockquote>",
        "id": 222010260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610058141
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-563887545\">PR Review</a>.</p>",
        "id": 222013373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610059972
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553639881\">PR Review Comment</a>:</p>\n<blockquote>\n<p>In Cranelift memory instructions directlt get an offset as argument, so there is probably no need for such a function.</p>\n</blockquote>",
        "id": 222013375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610059972
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-563888392\">PR Review</a>.</p>",
        "id": 222013555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610060085
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553640601\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I could not find specifically one that combines offsets, I saw only those that calculate a pointer based on memory base.</p>\n</blockquote>",
        "id": 222013556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610060085
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-563888995\">PR Review</a>.</p>",
        "id": 222013690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610060166
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553641105\">PR Review Comment</a>:</p>\n<blockquote>\n<p>yep, I copied a part of the logic from <code>finalise_atomic_mem_addr</code> though it calculates a host memory pointer.</p>\n</blockquote>",
        "id": 222013691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610060166
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-563891119\">PR Review</a>.</p>",
        "id": 222014182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610060448
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553642866\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I agree, though I adapted a pattern used by <code>imported_memory_fill</code>/ <code>imemory_fill</code> or <code>imported_memory32_grow</code>/<code>memory32_grow</code>. Are there plans to do the same with above?</p>\n</blockquote>",
        "id": 222014183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610060448
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564195322\">PR Review</a>.</p>",
        "id": 222062379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610105773
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553894521\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@bjorn3 But for atomic wait/notify, the actual handling code is generated by calling <code>environ.translate_atomic_wait</code> etc.  And that takes only the final linear memory offset as an argument.  There's no way to pass it an additional constant offset as a second arg.  Hence we have no option here but to \"manually\" fold in <code>memarg.offset</code> (and adding a second bounds check, sigh.)</p>\n</blockquote>",
        "id": 222062380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610105774
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564197388\">PR Review</a>.</p>",
        "id": 222062648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610106001
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553896149\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@yurydelendik Do any of these tests test the case where the test created in <code>fold_atomic_mem_addr</code> fails?  I mean, where the check <code>linear_mem_addr + memarg.offset &gt;= 0x_1_0000_0000u64</code> ?  If not, can you add one?  If yes, can you add a one-liner comment above each test, to say what case it tests?</p>\n</blockquote>",
        "id": 222062649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610106001
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564197698\">PR Review</a>.</p>",
        "id": 222062724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610106036
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553896372\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Indeed. I was reacting to</p>\n<blockquote>\n<p>I figured that we already had a function somewhere in this file to calculate an address</p>\n</blockquote>\n</blockquote>",
        "id": 222062725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610106036
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564248365\">PR Review</a>.</p>",
        "id": 222070288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610111595
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r553935715\">PR Review Comment</a>:</p>\n<blockquote>\n<p>yes, <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556/commits/d76cba6e0b875c5514b51c46c2fae5e2520ec871#diff-3d0a7bf818a02b8a4a928c29ad09cb70ac01dd516b1670d2520289ff061a3e14R18-R29\">line of 18</a> of the wast tests that</p>\n</blockquote>",
        "id": 222070289,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610111595
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564354544\">PR Review</a>.</p>",
        "id": 222086156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610120218
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r554016039\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Eventually I'd like to get to those and do the same yeah, we did it awhile ago for a few reference types intrinsics but haven't gotten around to fixing things generally.</p>\n</blockquote>",
        "id": 222086157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610120218
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564355528\">PR Review</a>.</p>",
        "id": 222086326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610120294
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r554016797\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could raw pointers get passed to the native functions which handle the implementation? The bounds-checking code is so tricky it seems like it'd be best to avoid duplicating it if we can.</p>\n</blockquote>",
        "id": 222086327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610120294
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564428397\">PR Review</a>.</p>",
        "id": 222096966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610125300
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564460551\">PR Review</a>.</p>",
        "id": 222103204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610128103
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r554097748\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yep, raised the related question at <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1684861#c7\">https://bugzilla.mozilla.org/show_bug.cgi?id=1684861#c7</a> (consumer side)</p>\n</blockquote>",
        "id": 222103205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610128103
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#pullrequestreview-564464924\">PR Review</a>.</p>",
        "id": 222104064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610128496
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556#discussion_r554101122\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2561\">https://github.com/bytecodealliance/wasmtime/issues/2561</a> to address it in the future.</p>\n</blockquote>",
        "id": 222104066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610128497
    },
    {
        "content": "<p>yurydelendik merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2556\">PR #2556</a>.</p>",
        "id": 222104113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610128522
    }
]