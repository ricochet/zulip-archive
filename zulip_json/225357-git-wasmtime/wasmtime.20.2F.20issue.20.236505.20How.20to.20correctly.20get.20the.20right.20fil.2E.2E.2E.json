[
    {
        "content": "<p>orangeC23 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<h2>Steps to reproduce</h2>\n<p>(1)'cargo new fd_advise'<br>\n(2)<code>cd fd_advise</code> and modify the <a href=\"http://main.rs\">main.rs</a> :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p1</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p2</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Filesize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p3</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Filesize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p4</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Advice</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">ADVICE_NORMAL</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"===[Result]===\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">fd_advise</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p4</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And add dependency in Cargo.toml:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.11.0\"</span>\n</code></pre></div>\n<p>(3) <code>cargo build --target wasm32-wasi</code><br>\n(4) execute it by wasmtime:<code>wasmtime run --dir=/Users/name/filetest ./target/wasm32-wasi/debug/fd_advise.wasm</code> and it prints<br>\n![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/28601300/9b6a973c-5b92-42a0-8b5a-6d813eee83cd\">https://github.com/bytecodealliance/wasmtime/assets/28601300/9b6a973c-5b92-42a0-8b5a-6d813eee83cd</a>)</p>\n<p>(5) execute it by wasmer:<code>wasmer --dir=/Users/name/filetest ./target/wasm32-wasi/debug/fd_advise.wasm </code> and it prints:<br>\n![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/28601300/41662979-5bff-460b-9bbe-6c1c37e4e3e0\">https://github.com/bytecodealliance/wasmtime/assets/28601300/41662979-5bff-460b-9bbe-6c1c37e4e3e0</a>)</p>\n<p>without panic</p>\n</blockquote>",
        "id": 363043566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685711185
    },
    {
        "content": "<p>orangeC23 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<h2>Steps to reproduce</h2>\n<p>(1)'cargo new fd_advise'<br>\n(2)<code>cd fd_advise</code> and modify the <a href=\"http://main.rs\">main.rs</a> :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p1</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p2</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Filesize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p3</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Filesize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p4</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Advice</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">ADVICE_NORMAL</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"===[Result]===\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">fd_advise</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p4</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And add dependency in Cargo.toml:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.11.0\"</span>\n</code></pre></div>\n<p>(3) <code>cargo build --target wasm32-wasi</code><br>\n(4) execute it by wasmtime:<code>wasmtime run --dir=/Users/name/filetest ./target/wasm32-wasi/debug/fd_advise.wasm</code> and it prints<br>\n![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/28601300/9b6a973c-5b92-42a0-8b5a-6d813eee83cd\">https://github.com/bytecodealliance/wasmtime/assets/28601300/9b6a973c-5b92-42a0-8b5a-6d813eee83cd</a>)</p>\n<p>(5) execute it by wasmer:<code>wasmer --dir=/Users/name/filetest ./target/wasm32-wasi/debug/fd_advise.wasm </code> and it prints:<br>\n![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/28601300/41662979-5bff-460b-9bbe-6c1c37e4e3e0\">https://github.com/bytecodealliance/wasmtime/assets/28601300/41662979-5bff-460b-9bbe-6c1c37e4e3e0</a>)</p>\n<p>without panic</p>\n<p>Maybe I use wasmtime with wrong code ?</p>\n</blockquote>",
        "id": 363043781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685711223
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1573791273\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>I don't think <code>fd_advise</code> is meant to be used on directories. <code>--dir</code> opens a directory, not a file. If <code>/Users/name/filetest</code> is a file, I'm surprised you don't get an error earlier when trying to open it as directory.</p>\n</blockquote>",
        "id": 363060638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685714494
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1574122949\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>@bjorn3 is correct: wasmtime's wasi implementation fails BADF on directories because fd_advise does not work on directories. In your example, fd <code>3</code> is a preopened directory. </p>\n</blockquote>",
        "id": 363129789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685729285
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1574143804\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>Since I believe what you described is the intended behavior, I'm going to close this issue, but please re-open if my understanding of the problem is incorrect.</p>\n</blockquote>",
        "id": 363133989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685730379
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<h2>Steps to reproduce</h2>\n<p>(1)'cargo new fd_advise'<br>\n(2)<code>cd fd_advise</code> and modify the <a href=\"http://main.rs\">main.rs</a> :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p1</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p2</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Filesize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p3</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Filesize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">p4</span>:<span class=\"nc\">wasi</span>::<span class=\"n\">Advice</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">ADVICE_NORMAL</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"===[Result]===\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">fd_advise</span><span class=\"p\">(</span><span class=\"n\">p1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">p4</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And add dependency in Cargo.toml:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.11.0\"</span>\n</code></pre></div>\n<p>(3) <code>cargo build --target wasm32-wasi</code><br>\n(4) execute it by wasmtime:<code>wasmtime run --dir=/Users/name/filetest ./target/wasm32-wasi/debug/fd_advise.wasm</code> and it prints<br>\n![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/28601300/9b6a973c-5b92-42a0-8b5a-6d813eee83cd\">https://github.com/bytecodealliance/wasmtime/assets/28601300/9b6a973c-5b92-42a0-8b5a-6d813eee83cd</a>)</p>\n<p>(5) execute it by wasmer:<code>wasmer --dir=/Users/name/filetest ./target/wasm32-wasi/debug/fd_advise.wasm </code> and it prints:<br>\n![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/28601300/41662979-5bff-460b-9bbe-6c1c37e4e3e0\">https://github.com/bytecodealliance/wasmtime/assets/28601300/41662979-5bff-460b-9bbe-6c1c37e4e3e0</a>)</p>\n<p>without panic</p>\n<p>Maybe I use wasmtime with wrong code ?</p>\n</blockquote>",
        "id": 363133991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685730380
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1574145372\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>Would it make sense to add a test that the wasi implementation will return EBADF for fd_advise on directories?</p>\n</blockquote>",
        "id": 363134315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685730471
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1574149794\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>We already do, along with a note that it differs from the Linux behavior. <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/test-programs/wasi-tests/src/bin/dir_fd_op_failures.rs#L64\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/test-programs/wasi-tests/src/bin/dir_fd_op_failures.rs#L64</a></p>\n</blockquote>",
        "id": 363135000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685730643
    },
    {
        "content": "<p>orangeC23 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1575326280\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>Thanks a lot !</p>\n</blockquote>",
        "id": 363408319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685844150
    },
    {
        "content": "<p>yamt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1844559904\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>it sounds like a bug (or a restriction) in wasmtime to me.</p>\n<p>in posix environments, it's common to ignore fadvice on directory.<br>\nwasi doesn't seem to have a word about the case. (so i expect it to follow posix equivalent.)</p>\n<p>besides that, if you want to make it fail for some reasons, i feel it's more natural to use EISDIR than EBADF.<br>\n</p>\n</blockquote>",
        "id": 406465410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701927942
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505#issuecomment-1846207236\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6505\">issue #6505</a>:</p>\n<blockquote>\n<p>OK. This is the least interesting topic possible to debate, so we will change wasmtime's behavior to ignore and return success if you send a PR to change our implementations and tests.</p>\n</blockquote>",
        "id": 406631434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701988129
    }
]