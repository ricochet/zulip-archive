[
    {
        "content": "<p>darinmorrison <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-597264143\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-597264143\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>@alexcrichton I'm not sure how it fits into the current plans (per #1271) but I would like to volunteer to continue the work you started with <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1013\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1013\">https://github.com/bytecodealliance/wasmtime/pull/1013</a>.</p>\n<p>I spent some time going through the source to get an idea of what is involved and have already started adding some of the missing instructions (from <a href=\"https://github.com/WebAssembly/interface-types/blob/master/proposals/interface-types/working-notes/instr.md\" target=\"_blank\" title=\"https://github.com/WebAssembly/interface-types/blob/master/proposals/interface-types/working-notes/instr.md\">instr.md</a>) in a local branch (not published yet).</p>\n<p>I might need guidance at various points (around strings, compilation, etc.) but I have time to focus on it and I've been looking for something more substantial to work on.</p>\n</blockquote>",
        "id": 190213032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583867629
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-597325616\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-597325616\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>@darinmorrison that'd be awesome, and I'd be happy to help!</p>\n<p>I think the <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1013#issuecomment-592169767\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1013#issuecomment-592169767\">TODO list</a> on that PR covers pretty well the major two remaining bits, and I'd probably recommend tackling the first two earlier rather than later to ensure that all the various integration points are largely working before an interpreter becomes more fleshed out. </p>\n<p>Feel free to ping me on zulip or here if you've got questions though!</p>\n</blockquote>",
        "id": 190227073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583875544
    },
    {
        "content": "<p>rheinardkorf <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-609513255\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-609513255\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>@alexcrichton , based on the last comment here <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1289\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1289\">https://github.com/bytecodealliance/wasmtime/pull/1289</a> it looks like @darinmorrison is not able to continue on this work.</p>\n<p>I can't even begin to fathom how all this works, nor do I have the capacity right now to work on things.  I'm justing pinging it here so that the \"interface types\" work doesn't disappear. Its important :D </p>\n</blockquote>",
        "id": 192985741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586133602
    },
    {
        "content": "<p>Serentty <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-610477354\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-610477354\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<blockquote>\n<p>That's a good point about encodings, although I would initally sort of hope that we could preserve \"utf-8 everywhere\" as long as possible, but not with copies.</p>\n</blockquote>\n<p>I don't think that interface types are the place to push UTF-8. Ultimately it's up to the languages, not the bytecode. No one will _choose_ which encoding to used based on what interface types do, they'll choose based on what the languages involved do. Supporting more Unicode encodings means removing redundant copies, it's as simple as that. It won't lead to some dystopia where everyone is switching to UTF-16 because it wasn't barred up enough.</p>\n</blockquote>",
        "id": 193211076,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586275679
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-610878819\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-610878819\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<blockquote>\n<p>I don't think that interface types are the place to push UTF-8</p>\n</blockquote>\n<p>Note that when it comes to Interface Types, we'll implement what gets standardized, so if the <a href=\"https://github.com/WebAssembly/interface-types\" title=\"https://github.com/WebAssembly/interface-types\">Interface Types proposal</a> ends up only supporting UTF-8, then we'll only implement that. I.e., arguments for additional encoding should be made to the WebAssembly CG, not here.</p>\n</blockquote>",
        "id": 193299478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586341576
    },
    {
        "content": "<p>Serentty <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-611157100\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-611157100\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>Thanks, I left a comment on their repository saying the same thing.</p>\n</blockquote>",
        "id": 193369762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586375228
    },
    {
        "content": "<p>onehundredfeet <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-702417094\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>Sorry for the uninformed question, but how can I enable interface types at the moment? Do I need the wasm-interface-types crate?  Or is it a total no-go atm?</p>\n</blockquote>",
        "id": 211980440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601589088
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-702437780\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>Unfortuantely at this time there's not a prototype or a switch to turn on. This is not implemented, so testing this out (or even playing around with it) will have to wait until someone implements this.</p>\n</blockquote>",
        "id": 211985958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601592767
    },
    {
        "content": "<p>slightknack <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-771554516\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<blockquote>\n<p>This is not implemented, so testing this out (or even playing around with it) will have to wait until someone implements this.</p>\n</blockquote>\n<p>@alexcrichton Just out of curiosity, what is needs to be implemented for interface types to be supported? Is there a set of issues / roadmap / milestone we can refer to? Or is just a matter of reading through the spec and implementing the appropriate features in accordance with wasmtime's API?</p>\n</blockquote>",
        "id": 224855996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612263683
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-771751139\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>I'm not aware of a milestone as-is at this time. The main blocker is still planning work to happen on this. There's a number of moving parts, though, especially in that the specification itself is not stable and is a moving target. This will likely be an effort that's much larger than simply implementing the current state of the specification in wasmtime itself.</p>\n</blockquote>",
        "id": 224893768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612282496
    },
    {
        "content": "<p>morigs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-791578402\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>Is it possible to use some temporary workaround? For example witx? (especially after #2659 has been merged)<br>\nI want to experiment with the implementation of the plugin system using wasm, but inventing your own ABI and manipulating memory and pointers every time you want to pass a struct to a function is kinda hell <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> </p>\n</blockquote>",
        "id": 228994810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614966423
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-792822509\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>Yes it's definitely true that working with raw pointers and such is painful and error-prone today. We're working on exactly what you're thinking, though, which is a system to use <code>*.witx</code> files to generate bindings for consumers and producers of wasm files. It won't be full interface types (no support in <code>wasmtime</code>-the-crate, but support generating code for <code>wasmtime</code>-the-crate), but we hope it's a good step towards interface types.</p>\n</blockquote>",
        "id": 229314361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615216515
    },
    {
        "content": "<p>morigs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677#issuecomment-800445108\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\">Issue #677</a>:</p>\n<blockquote>\n<p>Looking forward to a working prototype of what you've mentioned!<br>\nPlease let us know when it will be possible to try new witx in battle <span aria-label=\"sunglasses\" class=\"emoji emoji-1f60e\" role=\"img\" title=\"sunglasses\">:sunglasses:</span> </p>\n</blockquote>",
        "id": 230552248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615914362
    }
]