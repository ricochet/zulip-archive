[
    {
        "content": "<p>yamt opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7592\">issue #7592</a>:</p>\n<blockquote>\n<p>i have a preview1 reactor module, which exports <code>_initialize</code>.<br>\nwhen adapting it with <code>wasi_snapshot_preview1.reactor.wasm</code> and loading the resulted component with wasmtime,<br>\ni expected the <code>_initialize</code> export of the original module is somehow called during the component startup.<br>\nhowever, it doesn't seem to be called.<br>\n</p>\n</blockquote>",
        "id": 404554155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701152072
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7592#issuecomment-1830036972\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7592\">issue #7592</a>:</p>\n<blockquote>\n<p>Currently the <code>*.reactor.wasm</code> adapter doesn't do anything with <code>_initialize</code>, so you'll likely want to build your own adapter which calls it as part of the <code>start</code> function or implicitly as part of exports.</p>\n<p>Alternatively a convention could be built into <code>wit-component</code> to perhaps do this automatically but that would be pretty complicated implementation-wise since it would need to handle the fact that <code>_initialize</code> is optional.</p>\n</blockquote>",
        "id": 404655693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701184093
    },
    {
        "content": "<p>yamt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7592#issuecomment-1831145195\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7592\">issue #7592</a>:</p>\n<blockquote>\n<blockquote>\n<p>Currently the <code>*.reactor.wasm</code> adapter doesn't do anything with <code>_initialize</code>, so you'll likely want to build your own adapter which calls it as part of the <code>start</code> function or implicitly as part of exports.</p>\n</blockquote>\n<p>ok.<br>\ni put a hack in the (non-standard) entry point of my module and it's working well.</p>\n<blockquote>\n<p>Alternatively a convention could be built into <code>wit-component</code> to perhaps do this automatically but that would be pretty complicated implementation-wise since it would need to handle the fact that <code>_initialize</code> is optional.</p>\n</blockquote>\n<p>i guess it's necessary for a reactor built with wasi-libc to work correctly.<br>\n</p>\n</blockquote>",
        "id": 404768188,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701227566
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7592#issuecomment-1832275735\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7592\">issue #7592</a>:</p>\n<blockquote>\n<p>Most of the usage of <code>_initialize</code> in wasi-libc for example has been pushed to lazy instead of eager initialization, which if possible is what I would recommend for other uses as well. Otherwise feel free to open an issue on the wasm-tools repository for a proposal about how to add <code>_initialize</code> support to <code>wit-component</code> and adapters of course!</p>\n</blockquote>",
        "id": 404904801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701275303
    }
]