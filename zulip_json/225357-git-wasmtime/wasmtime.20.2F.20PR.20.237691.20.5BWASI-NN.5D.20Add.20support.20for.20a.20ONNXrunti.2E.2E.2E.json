[
    {
        "content": "<p>devigned opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a> from <code>devigned:wasi-nn-ort</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<p>This change adds an ONNXruntime backend for WASI-NN. Since there is only one backend implemented, this will help to move the standardization of this proposal forward.</p>\n<p>Also, the example usage of the ONNXruntime backend shows how to build a component using WASI-NN and ONNXruntime.<br>\n</p>\n</blockquote>",
        "id": 408064730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702596470
    },
    {
        "content": "<p><strong>devigned</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 408064731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702596471
    },
    {
        "content": "<p><strong>devigned</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 408064732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702596471
    },
    {
        "content": "<p><strong>devigned</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 408064733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702596471
    },
    {
        "content": "<p>devigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1856950034\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@abrown please take a look when you have a minute. Thank you!!</p>\n</blockquote>",
        "id": 408064791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702596493
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 408070837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702599556
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 408216575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702657166
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1858566508\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@devigned, I'll take a closer look next week. I will say I've been been changing the ground under your feet here (sorry <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span>) with <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7679\">https://github.com/bytecodealliance/wasmtime/pull/7679</a>; that PR will mean we have to move some of your tests over to <code>test-programs</code> and write Rust tests instead of bash scripts. An overall improvement, just inconvenient timing.</p>\n<p>As for the CI failures here: I think we can add a line to <code>skip-tree</code> in <code>deny.toml</code> to ignore the version mismatch of the <code>half</code> dependency: { name = \"half\", depth = 1 }<code>. As for the </code>cargo vet` failures, I think we'll have to audit those, maybe even as a separate PR... anything you can do to reduce the number of dependencies coming in will make that easier (drop features?).</p>\n</blockquote>",
        "id": 408266508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702679370
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1791869596\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for all the work to make this happen! This is going to be a great addition to Wasmtime. Let me know on Zulip if you need help working through the test refactoring, CI issues, etc.</p>\n</blockquote>",
        "id": 409279931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116403
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1791869596\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for all the work to make this happen! This is going to be a great addition to Wasmtime. Let me know on Zulip if you need help working through the test refactoring, CI issues, etc.</p>\n</blockquote>",
        "id": 409279932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116403
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1433281895\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think we'll need this script anymore now that #7679 is merged.</p>\n</blockquote>",
        "id": 409279934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116404
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1433285259\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe something like the following would be less verbose?</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"fm\">unimplemented!</span><span class=\"p\">(</span><span class=\"s\">\"{:?} not supported by ONNX\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">input</span><span class=\"p\">.</span><span class=\"n\">tensor_type</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 409279935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116404
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1433283332\">PR review comment</a>:</p>\n<blockquote>\n<p>Good to see the auto-generated bindings work!</p>\n</blockquote>",
        "id": 409279936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116404
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1433281497\">PR review comment</a>:</p>\n<blockquote>\n<p>I opened <a href=\"https://github.com/abrown/install-openvino-action/issues/29\">https://github.com/abrown/install-openvino-action/issues/29</a> to track this.</p>\n</blockquote>",
        "id": 409279937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116404
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1433282984\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't know how easy it will be to add these dependencies to <code>test-programs</code>. If it is difficult for some reason, you could always dump the decoded bytes to a file like I did with the OpenVINO test fixtures. If you do keep this, though, we probably only need the <code>jpeg</code> feature.</p>\n</blockquote>",
        "id": 409279938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116404
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1433284324\">PR review comment</a>:</p>\n<blockquote>\n<p>You could probably <code>self.0.lock()</code> once at the top of this function?</p>\n</blockquote>",
        "id": 409279939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116404
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1433285814\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe we should explain somewhere why we are forced to copy the tensor twice &mdash; at input and output.</p>\n</blockquote>",
        "id": 409279940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703116404
    },
    {
        "content": "<p>mtobin-tdab <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1929182992\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>This is great, I have been testing different ONNX models and encountered a data type mismatch error for certain models, specifically at the wasi-nn compute function in <a href=\"http://bindings.rs\">bindings.rs</a>. The error indicates a failure to parse ctx: GraphExecutionContext as i32:</p>\n<div class=\"codehilite\"><pre><span></span><code>1: error while executing at wasm backtrace:\n       0: 0x245b42a3 - wit-component:shim!indirect-wasi:nn/inference-compute\n       1: 0x698ad - octaioxide::bindings::wasi::nn::inference::compute::h1bf34b4c8ec1bf77\n                       at ....................bindings.rs:11137:15\n2: Failed while accessing backend\n3: Data type mismatch: was Int64, tried to convert to Float32\n</code></pre></div>\n\n<p>As far as I can tell the ctx value is 0 when I pass it to compute, I've tried to cast it to f32, but the compiler expects a u32.</p>\n<p>Very possible I'm missing something obvious as I am fairly new to both WASM and Rust. But thought I would share.</p>\n<p>For some extra context, both models which have produced this error have been classification models (specifcially an xgboost and sklearn's SGDClassifier model) - Are there model types in ONNX format which we would never expect this to be compatible with?</p>\n</blockquote>",
        "id": 420013529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707214274
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420369036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707353710
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1869091745\">PR review</a>.</p>",
        "id": 420369237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707353855
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1482287605\">PR review comment</a>:</p>\n<blockquote>\n<p>I fixed this and added a test program.</p>\n</blockquote>",
        "id": 420369239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707353855
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1869092893\">PR review</a>.</p>",
        "id": 420369293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707353882
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1482288647\">PR review comment</a>:</p>\n<blockquote>\n<p>added to test-programs and reduced to jpeg.</p>\n</blockquote>",
        "id": 420369294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707353882
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1869093980\">PR review</a>.</p>",
        "id": 420369359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707353912
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1482289412\">PR review comment</a>:</p>\n<blockquote>\n<p>I updated this to reflect the latest changes in <code>cargo component</code> and preview 2. </p>\n</blockquote>",
        "id": 420369360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707353912
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420369792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707354149
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420369878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707354223
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420373494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707356771
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420472113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707403266
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1870415931\">PR review</a>.</p>",
        "id": 420472858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707403499
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1483092104\">PR review comment</a>:</p>\n<blockquote>\n<p>I was verbose to be super clear about what is not implemented. I've since changed it to your suggestion.</p>\n</blockquote>",
        "id": 420472860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707403500
    },
    {
        "content": "<p>devigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1934275858\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<blockquote>\n<p>This is great, I have been testing different ONNX models and encountered a data type mismatch error for certain models, specifically at the wasi-nn compute function in <a href=\"http://bindings.rs\">bindings.rs</a>. The error indicates a failure to parse ctx: GraphExecutionContext as i32:</p>\n<p><code>\n1: error while executing at wasm backtrace:\n       0: 0x245b42a3 - wit-component:shim!indirect-wasi:nn/inference-compute\n       1: 0x698ad - octaioxide::bindings::wasi::nn::inference::compute::h1bf34b4c8ec1bf77\n                       at ....................bindings.rs:11137:15\n2: Failed while accessing backend\n3: Data type mismatch: was Int64, tried to convert to Float32\n</code></p>\n<p>As far as I can tell the ctx value is 0 when I pass it to compute, I've tried to cast it to f32, but the compiler expects a u32.</p>\n<p>Very possible I'm missing something obvious as I am fairly new to both WASM and Rust. But thought I would share.</p>\n<p>For some extra context, both models which have produced this error have been classification models (specifcially an xgboost and sklearn's SGDClassifier model) - Are there model types in ONNX format which we would never expect this to be compatible with?</p>\n</blockquote>\n<p>Is there any chance you could share code that reproduces this behavior, or create a branch with a failing test reproducing this behavior?</p>\n</blockquote>",
        "id": 420473332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707403656
    },
    {
        "content": "<p>devigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1934290875\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@sunfishcode, I believe I need someone that is a trusted contributor to Wasmtime to approve the cargo vet dependencies added in this PR (per <a href=\"https://docs.wasmtime.dev/contributing-coding-guidelines.html#dependencies-of-wasmtime\">https://docs.wasmtime.dev/contributing-coding-guidelines.html#dependencies-of-wasmtime</a>). Would you please consider allow listing the failing vet dependencies?</p>\n<p>I'm not sure if the <code>cargo deny</code> result for <code>ittapi-sys</code> is spurious or if the license is going to be a problem. What would you advise?</p>\n</blockquote>",
        "id": 420474926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707404118
    },
    {
        "content": "<p>devigned edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1934290875\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@sunfishcode, I believe I need someone that is a trusted contributor to Wasmtime to approve the cargo vet dependencies added in this PR (per <a href=\"https://docs.wasmtime.dev/contributing-coding-guidelines.html#dependencies-of-wasmtime\">https://docs.wasmtime.dev/contributing-coding-guidelines.html#dependencies-of-wasmtime</a>). Would you please consider allow listing the failing vet dependencies?</p>\n<p>I'm not sure if the <code>cargo deny</code> result for <code>ittapi-sys</code> is spurious or if the license is going to be a problem. What would you advise?</p>\n<p>Also, if this is not how this stuff should work, please let me know :).</p>\n</blockquote>",
        "id": 420475128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707404174
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420476457,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707404525
    },
    {
        "content": "<p>devigned edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1934290875\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@sunfishcode, I believe I need someone that is a trusted contributor to Wasmtime to approve the <code>cargo vet</code> dependencies added in this PR (per <a href=\"https://docs.wasmtime.dev/contributing-coding-guidelines.html#dependencies-of-wasmtime\">https://docs.wasmtime.dev/contributing-coding-guidelines.html#dependencies-of-wasmtime</a>). Would you please consider allow listing the failing vet dependencies?</p>\n<p>I'm not sure if the <code>cargo deny</code> result for <code>ittapi-sys</code> is spurious or if the license is going to be a problem. What would you advise?</p>\n<p>Also, if this is not how this stuff should work, please let me know :).</p>\n</blockquote>",
        "id": 420476539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707404549
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420486102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707407245
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420506471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707413069
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420510145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707414339
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420514180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707415703
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420518014,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707417021
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420529493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707421396
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420532361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707422485
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420536431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707424165
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420541401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707426209
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420544999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707427728
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 420547470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707428817
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1935007886\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@devigned. I see a bunch of dependencies for the <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/7836371527/job/21383872144?pr=7691#step:5:15\">failing vet check</a>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"n\">bytemuck</span>:<span class=\"mf\">1.14.2</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">bytes</span>:<span class=\"mf\">1.5.0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">castaway</span>:<span class=\"mf\">0.2.2</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">color_quant</span>:<span class=\"mf\">1.1.0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">compact_str</span>:<span class=\"mf\">0.7.1</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">crunchy</span>:<span class=\"mf\">0.2.2</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">fdeflate</span>:<span class=\"mf\">0.3.4</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">filetime</span>:<span class=\"mf\">0.2.16</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">flate2</span>:<span class=\"mf\">1.0.28</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">half</span>:<span class=\"mf\">2.3.1</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">image</span>:<span class=\"mf\">0.24.8</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">matrixmultiply</span>:<span class=\"mf\">0.3.8</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">ndarray</span>:<span class=\"mf\">0.15.6</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">num</span><span class=\"o\">-</span><span class=\"n\">complex</span>:<span class=\"mf\">0.4.4</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">num</span><span class=\"o\">-</span><span class=\"n\">integer</span>:<span class=\"mf\">0.1.45</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">ort</span>:<span class=\"mf\">2.0.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">ort</span><span class=\"o\">-</span><span class=\"n\">sys</span>:<span class=\"mf\">2.0.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">png</span>:<span class=\"mf\">0.17.11</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">rawpointer</span>:<span class=\"mf\">0.2.1</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">rustversion</span>:<span class=\"mf\">1.0.14</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">adler32</span>:<span class=\"mf\">0.3.7</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">static_assertions</span>:<span class=\"mf\">1.1.0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">tar</span>:<span class=\"mf\">0.4.40</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">ureq</span>:<span class=\"mf\">2.9.1</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">xattr</span>:<span class=\"mf\">1.1.1</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I would guess that at least some of these are related to testing? If that is the case, one thing that I suggested in #7807 is to create a test fixture file with all the tensor bytes in the right format. This could remove some of these dependencies, reducing the amount of crates that we will have to audit.</p>\n</blockquote>",
        "id": 420550092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707429973
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 421326725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707858924
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 421327586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707859338
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 421338244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707864510
    },
    {
        "content": "<p>devigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1942789355\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@abrown, I've trimmed down to about as slim as I think I can get the dependencies. I've removed any dependency on <code>half</code> and <code>ndarray</code> which cut the list of dependencies by over half.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"n\">unvetted</span><span class=\"w\"> </span><span class=\"n\">dependencies</span>:\n  <span class=\"nc\">bytes</span>:<span class=\"mf\">1.5.0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">castaway</span>:<span class=\"mf\">0.2.2</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">compact_str</span>:<span class=\"mf\">0.7.1</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">filetime</span>:<span class=\"mf\">0.2.16</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">flate2</span>:<span class=\"mf\">1.0.28</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">ort</span>:<span class=\"mf\">2.0.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">ort</span><span class=\"o\">-</span><span class=\"n\">sys</span>:<span class=\"mf\">2.0.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">rustversion</span>:<span class=\"mf\">1.0.14</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">static_assertions</span>:<span class=\"mf\">1.1.0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">tar</span>:<span class=\"mf\">0.4.40</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">ureq</span>:<span class=\"mf\">2.9.1</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">xattr</span>:<span class=\"mf\">1.2.0</span><span class=\"w\"> </span><span class=\"n\">missing</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"s\">\"safe-to-deploy\"</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>WDYT?</p>\n</blockquote>",
        "id": 421340327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707865614
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1944295441\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<blockquote>\n<p>@abrown, I've trimmed down to about as slim as I think I can get the dependencies. I've removed any dependency on <code>half</code> and <code>ndarray</code> which cut the list of dependencies by over half.</p>\n<p>WDYT?</p>\n</blockquote>\n<p>Thanks! Let's talk about this in the Wasmtime meeting tomorrow.</p>\n</blockquote>",
        "id": 421497294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707932116
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 422512642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708468498
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1955235116\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>I audited the dependencies this PR would bring in and the only crate I didn't audit was <code>compact_str</code>: I do not feel comfortable putting a stamp of approval on this crate without some further discussion. The crate is well-designed and has many kinds of tests, including proptests, but the fundamental <code>unsafe</code> issue is that the crate manually implements what would otherwise be an <code>enum</code>: if a string is less than 24 bytes, it lives on the stack; otherwise, it lives on the heap. This causes all kinds of <code>unsafe</code> pointer copies for its special integer representation, <code>unsafe</code> ways to pass in unchecked UTF-8 strings, several <code>unsafe</code> implementations of <code>Sync</code>, <code>Send</code>, <code>LifetimeFree</code>, etc. I would note that all of these unsafe instances are carefully documented with \"SAFETY:\" comments which seemed reasonable, but the large amount of unsafety and how inherent it is to the crate gave me pause. Perhaps someone else can more confidently vouch for this?</p>\n</blockquote>",
        "id": 422512867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708468593
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1960053147\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>Given your review and the fact that I'm seeing extensive fuzzing and miri testing in the repo I think it's safe to put all that into the vet entry. Vetting isn't so much guaranteeing that the crate is correct but moreso that it doesn't intentionally do bad things. You've done an initial review and the author is clearly covering all the bases they can, so I think it's reasonable to say it's well vetted.</p>\n</blockquote>",
        "id": 422883024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708627729
    },
    {
        "content": "<p>devigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1971455754\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@abrown would you like me to add the vet audit entry for <code>compact_str</code>? Is that all we need to get this moving forward?</p>\n</blockquote>",
        "id": 424052601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709222581
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1977477924\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@devigned: yeah, go for it!</p>\n</blockquote>",
        "id": 424749492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709587284
    },
    {
        "content": "<p>mingqiusun submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1920742956\">PR review</a>.</p>",
        "id": 425171248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709756446
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425174893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709758039
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425184347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709762024
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425184856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709762238
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425203080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709771066
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1923742690\">PR review</a>.</p>",
        "id": 425415213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1923742690\">PR review</a>.</p>",
        "id": 425415216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516960936\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think we need to add this top-level feature because we have workspaces. We should be able to reach down and control sub-crate features by doing: <code>cargo build --features wasmtime-wasi-nn/onnx</code>, e.g.</p>\n</blockquote>",
        "id": 425415220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516964893\">PR review comment</a>:</p>\n<blockquote>\n<p>Not sure this should be making a comeback &mdash; why is it back?</p>\n</blockquote>",
        "id": 425415222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516979403\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I think all these additions of <code>target_os = \"windows\"</code> are necessary; thanks for catching that.</p>\n</blockquote>",
        "id": 425415226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516963411\">PR review comment</a>:</p>\n<blockquote>\n<p>Might want to tweak these comments: \"MobileNet\" -&gt; \"SqueezeNet\". BTW, are the SqueezeNet expectations here the same?</p>\n</blockquote>",
        "id": 425415227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516980062\">PR review comment</a>:</p>\n<blockquote>\n<p>No <code>\"macos\"</code>?</p>\n</blockquote>",
        "id": 425415228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516966608\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's follow the precedent like with the other backends and just retrieve any models with a test helper function, e.g.:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/83417388c0aa03592600a7ed9a8e42316527be45/crates/wasi-nn/src/testing.rs#L84\">https://github.com/bytecodealliance/wasmtime/blob/83417388c0aa03592600a7ed9a8e42316527be45/crates/wasi-nn/src/testing.rs#L84</a></p>\n</blockquote>",
        "id": 425415229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516962135\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    --features wasmtime-wasi-nn/onnx \\\n</code></pre></div>\n<p>See my previous comment about workspace features, plus I don't think we really want to enable the <code>wasmtime-wasi-nn/winml</code> feature unconditionally since (1) it is Windows-specific and (2) @jianjunz found that the WinML APIs aren't even available in the GitHub CI images.</p>\n</blockquote>",
        "id": 425415231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854323
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516977763\">PR review comment</a>:</p>\n<blockquote>\n<p>We can refactor all this stuff later, but for now it probably makes sense to retrieve any ONNX artifacts separately, e.g., with a <code>check_onnx_artifacts_are_available</code> function.</p>\n</blockquote>",
        "id": 425415232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854323
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516980733\">PR review comment</a>:</p>\n<blockquote>\n<p>Friendly reminder that this Git submodule change is probably from a missing <code>git submodule update --init</code> at some point.</p>\n</blockquote>",
        "id": 425415234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854323
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516979656\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's just leave this unimplemented; we can follow up with better error handling in a separate PR.</p>\n</blockquote>",
        "id": 425415235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854323
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1516964423\">PR review comment</a>:</p>\n<blockquote>\n<p>In case some Git mischief happened here: <code>image</code> looks to be pulling in all the features again, not just <code>jpeg</code>.</p>\n</blockquote>",
        "id": 425415238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854323
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425618293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709937501
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1925971275\">PR review</a>.</p>",
        "id": 425618521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709937625
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1518385316\">PR review comment</a>:</p>\n<blockquote>\n<p>No, I don't think we needed to skip 1 there.</p>\n</blockquote>",
        "id": 425618523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709937626
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1518386922\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep. Updated. Thank you.<br>\n</p>\n</blockquote>",
        "id": 425618819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709937803
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1925973618\">PR review</a>.</p>",
        "id": 425618820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709937803
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425619002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709937893
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425620003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709938462
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425622087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709939783
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425988534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710183153
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 425991752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710184271
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1928906253\">PR review</a>.</p>",
        "id": 425992366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710184506
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1520300848\">PR review comment</a>:</p>\n<blockquote>\n<p>@abrown this won't work with multiple features enabled. For example, if onnx and openvino are enabled, then each backend will try to be run for a given model. Unless the backends support the same model input, the caller is going to have a bad time.</p>\n<p>Rather than running for every backend in a test, I have each test pass in their backend to run.</p>\n</blockquote>",
        "id": 425992367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710184506
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1520303270\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd like to find a better way of doing this rather than chunking from u8 to the type and size of the model input.</p>\n</blockquote>",
        "id": 425992668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710184642
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1928913369\">PR review</a>.</p>",
        "id": 425992669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710184643
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1929818695\">PR review</a>.</p>",
        "id": 426027735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710200004
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1520544818\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, that makes more sense! <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> <br>\n</p>\n</blockquote>",
        "id": 426027736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710200004
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1929819682\">PR review</a>.</p>",
        "id": 426027766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710200028
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426029897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710201572
    },
    {
        "content": "<p>devigned submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#pullrequestreview-1929858823\">PR review</a>.</p>",
        "id": 426030079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710201653
    },
    {
        "content": "<p>devigned created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#discussion_r1520576879\">PR review comment</a>:</p>\n<blockquote>\n<p>@abrown I didn't realize that I needed to mark this as <code>publish = false</code>. Should be good now.</p>\n</blockquote>",
        "id": 426030080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710201653
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426101936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710241984
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426103206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710242480
    },
    {
        "content": "<p>squillace <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1991734133\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>outstanding. Thanks for your work, @devigned and to the reviewers!</p>\n</blockquote>",
        "id": 426132634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710252370
    },
    {
        "content": "<p>squillace <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992012675\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>go figure: </p>\n<p>thread 'main' panicked at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ort-sys-2.0.0-rc.0/build.rs:308:22:<br>\n  downloaded binaries not available for target riscv64gc-unknown-linux-gnu<br>\n  you may have to compile ONNX Runtime from source<br>\n  stack backtrace:<br>\n     0: rust_begin_unwind<br>\n               at /rustc/07dca489ac2d933c78d3c5158e3f43beefeb02ce/library/std/src/panicking.rs:645:5<br>\n     1: core::panicking::panic_fmt<br>\n               at /rustc/07dca489ac2d933c78d3c5158e3f43beefeb02ce/library/core/src/panicking.rs:72:14<br>\n     2: build_script_build::prepare_libort_dir<br>\n     3: build_script_build::real_main<br>\n     4: build_script_build::main<br>\n     5: core::ops::function::FnOnce::call_once<br>\n  note: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.<br>\nwarning: build failed, waiting for other jobs to finish...<br>\nError: Process completed with exit code 101.</p>\n</blockquote>",
        "id": 426160825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710259445
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992075759\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<blockquote>\n<p>downloaded binaries not available for target riscv64gc-unknown-linux-gnu</p>\n</blockquote>\n<p>That's fine; this just needs a few more target checks.</p>\n</blockquote>",
        "id": 426166799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710260992
    },
    {
        "content": "<p>devigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992079643\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>downloaded binaries not available for target riscv64gc-unknown-linux-gnu</p>\n</blockquote>\n<p>That's fine; this just needs a few more target checks.</p>\n</blockquote>\n<p>I'm on it.</p>\n</blockquote>",
        "id": 426167222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710261103
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426189606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710268335
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426197403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710271355
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426199955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710272497
    },
    {
        "content": "<p>squillace <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992481596\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>let's go baby</p>\n</blockquote>",
        "id": 426203446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710273912
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426207427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710275527
    },
    {
        "content": "<p>squillace <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992527085\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>GACK. MingGW!!! crazy amazing</p>\n</blockquote>",
        "id": 426207486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710275553
    },
    {
        "content": "<p>squillace <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992527287\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>you having fun yet, @devigned ?<br>\n</p>\n</blockquote>",
        "id": 426207519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710275562
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992543245\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>Since this isn't intended to work everywhere just yet, it might be best to add a new builder on CI specifically dedicated to testing ONNX rather than trying to get it to work across all the platforms.</p>\n<p>If that works for you I'd recommend copying <a href=\"https://github.com/bytecodealliance/wasmtime/blob/d29b863aaf6447f65f63de9596a2f8116d0b2447/.github/workflows/main.yml#L364-L384\">this to start</a>, updating all the bits there (e.g. run on ubuntu, not on windows), and then be sure to add an entry <a href=\"https://github.com/bytecodealliance/wasmtime/blob/d29b863aaf6447f65f63de9596a2f8116d0b2447/.github/workflows/main.yml#L828\">down here</a> to ensure we gate on it in CI.</p>\n<p>Also, what I might also recommend, if you add <code>prtest:full</code> as a string in a commit message it'll run full CI on this PR before going to the merge queue, and that may help avoid the bouncing back and forth between the merge queue and back here.</p>\n</blockquote>",
        "id": 426209065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710276200
    },
    {
        "content": "<p>squillace <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992553941\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>drinking booze all night now over here, best soap opera I've watched in years</p>\n</blockquote>",
        "id": 426210201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710276683
    },
    {
        "content": "<p>devigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992586292\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@alexcrichton, in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691/commits/22d14d6e768d8bbc346b7ade3a99bed7b8571092\">https://github.com/bytecodealliance/wasmtime/pull/7691/commits/22d14d6e768d8bbc346b7ade3a99bed7b8571092</a> I'm reducing the set of triplets in which ONNX will run. I do not plan on pursuing riscv or s390 precompiled onnxruntime bins at this point. Are you good with the matrix-test approach or would you still prefer I break it out into another builder?</p>\n</blockquote>",
        "id": 426212222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710277445
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426212386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710277515
    },
    {
        "content": "<p>devigned edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992586292\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@alexcrichton, in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691/commits/7f7fca55bf40fcde8083345c9bbe4b70f85b33ff\">https://github.com/bytecodealliance/wasmtime/pull/7691/commits/7f7fca55bf40fcde8083345c9bbe4b70f85b33ff</a> I'm reducing the set of triplets in which ONNX will run. I do not plan on pursuing riscv or s390 precompiled onnxruntime bins at this point. Are you good with the matrix-test approach or would you still prefer I break it out into another builder?</p>\n</blockquote>",
        "id": 426212632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710277616
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426212754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710277678
    },
    {
        "content": "<p>devigned edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992586292\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>@alexcrichton, in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691/commits/2b7a104684f0c45e5969f5ef25b858f8069d69bd\">https://github.com/bytecodealliance/wasmtime/pull/7691/commits/2b7a104684f0c45e5969f5ef25b858f8069d69bd</a> I'm reducing the set of triplets in which ONNX will run. I do not plan on pursuing riscv or s390 precompiled onnxruntime bins at this point. Are you good with the matrix-test approach or would you still prefer I break it out into another builder?</p>\n</blockquote>",
        "id": 426213197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710277834
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691#issuecomment-1992598456\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>:</p>\n<blockquote>\n<p>Nah if that works for you seems fine, just trying to save some CI headache.</p>\n</blockquote>",
        "id": 426213713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710278072
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426243432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710294672
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426304206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710325870
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426304561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710325995
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426310093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710327502
    },
    {
        "content": "<p>devigned updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426312888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710328568
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7691\">PR #7691</a>.</p>",
        "id": 426378543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710346889
    }
]