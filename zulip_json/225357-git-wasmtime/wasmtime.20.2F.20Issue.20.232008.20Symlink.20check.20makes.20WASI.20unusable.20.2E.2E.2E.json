[
    {
        "content": "<p>whitequark opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>I'm trying to debug another wasmtime misbehavior (it seems that under Windows and Windows only it does not truncate existing files) under wine. I cannot use wasmtime to write to an existing file because it has a symlink check, which always fails if the file exists:</p>\n<div class=\"codehilite\"><pre><span></span><code> DEBUG wasi_common::path                              &gt; path_get cur_path = &quot;foo.json&quot;\n DEBUG wasi_common::path                              &gt; path_get path_stack = []\n DEBUG wasi_common::sys::windows::path                &gt; out_path=&quot;Z:\\\\home\\\\whitequark\\\\xxx\\\\build\\\\foo.json&quot;\n DEBUG wasi_common::sys::windows::path                &gt; readlinkat error=50\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; error=Notsup\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; wiggle abi; module=&quot;wasi_snapshot_preview1&quot; function=&quot;fd_write&quot;\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; fd=Fd(1) iovs=*guest 0x6003f0/2\nERROR: Can&#39;t open output file `foo.json&#39; for writing: Not supported\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; nwritten=68\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; success=No error occurred. System call completed successfully. (Errno::Success(0))\n</code></pre></div>\n\n\n</blockquote>",
        "id": 203512258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594391074
    },
    {
        "content": "<p>whitequark labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>I'm trying to debug another wasmtime misbehavior (it seems that under Windows and Windows only it does not truncate existing files) under wine. I cannot use wasmtime to write to an existing file because it has a symlink check, which always fails if the file exists:</p>\n<div class=\"codehilite\"><pre><span></span><code> DEBUG wasi_common::path                              &gt; path_get cur_path = &quot;foo.json&quot;\n DEBUG wasi_common::path                              &gt; path_get path_stack = []\n DEBUG wasi_common::sys::windows::path                &gt; out_path=&quot;Z:\\\\home\\\\whitequark\\\\xxx\\\\build\\\\foo.json&quot;\n DEBUG wasi_common::sys::windows::path                &gt; readlinkat error=50\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; error=Notsup\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; wiggle abi; module=&quot;wasi_snapshot_preview1&quot; function=&quot;fd_write&quot;\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; fd=Fd(1) iovs=*guest 0x6003f0/2\nERROR: Can&#39;t open output file `foo.json&#39; for writing: Not supported\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; nwritten=68\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; success=No error occurred. System call completed successfully. (Errno::Success(0))\n</code></pre></div>\n\n\n</blockquote>",
        "id": 203512260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594391074
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008#issuecomment-656711933\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>Seems this could fix it?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gh\">diff --git a/crates/wasi-common/src/sys/windows/path.rs b/crates/wasi-common/src/sys/windows/path.rs</span>\n<span class=\"gh\">index 50a234474..79e0df7f1 100644</span>\n<span class=\"gd\">--- a/crates/wasi-common/src/sys/windows/path.rs</span>\n<span class=\"gi\">+++ b/crates/wasi-common/src/sys/windows/path.rs</span>\n<span class=\"gu\">@@ -139,6 +139,9 @@ pub(crate) fn readlinkat(dirfd: &amp;OsDir, s_path: &amp;str) -&gt; Result&lt;String&gt; {</span>\n     };\n     if let Some(code) = err.raw_os_error() {\n         log::debug!(&quot;readlinkat error={:?}&quot;, code);\n<span class=\"gi\">+        if code as u32 == winerror::ERROR_NOT_SUPPORTED {</span>\n<span class=\"gi\">+            return Err(Errno::Inval);</span>\n<span class=\"gi\">+        }</span>\n         if code as u32 == winerror::ERROR_INVALID_NAME {\n             if s_path.ends_with(&#39;/&#39;) {\n                 // strip &quot;/&quot; and check if exists\n</code></pre></div>\n\n\n</blockquote>",
        "id": 203514608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594392101
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>I'm trying to debug another wasmtime misbehavior (it seems that under Windows and Windows only it does not truncate existing files) under wine. I cannot use wasmtime to write to an existing file because it has a symlink check, which always fails if the file exists:</p>\n<div class=\"codehilite\"><pre><span></span><code> DEBUG wasi_common::path                              &gt; path_get cur_path = &quot;foo.json&quot;\n DEBUG wasi_common::path                              &gt; path_get path_stack = []\n DEBUG wasi_common::sys::windows::path                &gt; out_path=&quot;Z:\\\\home\\\\whitequark\\\\xxx\\\\build\\\\foo.json&quot;\n DEBUG wasi_common::sys::windows::path                &gt; readlinkat error=50\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; error=Notsup\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; wiggle abi; module=&quot;wasi_snapshot_preview1&quot; function=&quot;fd_write&quot;\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; fd=Fd(1) iovs=*guest 0x6003f0/2\nERROR: Can&#39;t open output file `foo.json&#39; for writing: Not supported\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; nwritten=68\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; success=No error occurred. System call completed successfully. (Errno::Success(0))\n</code></pre></div>\n\n\n</blockquote>",
        "id": 203516417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594392865
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>I'm trying to debug another wasmtime misbehavior (it seems that under Windows and Windows only it does not truncate existing files) under wine. I cannot use wasmtime to write to an existing file because it has a symlink check, which always fails if the file exists:</p>\n<div class=\"codehilite\"><pre><span></span><code> DEBUG wasi_common::path                              &gt; path_get cur_path = &quot;foo.json&quot;\n DEBUG wasi_common::path                              &gt; path_get path_stack = []\n DEBUG wasi_common::sys::windows::path                &gt; out_path=&quot;Z:\\\\home\\\\whitequark\\\\xxx\\\\build\\\\foo.json&quot;\n DEBUG wasi_common::sys::windows::path                &gt; readlinkat error=50\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; error=Notsup\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; wiggle abi; module=&quot;wasi_snapshot_preview1&quot; function=&quot;fd_write&quot;\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; fd=Fd(1) iovs=*guest 0x6003f0/2\nERROR: Can&#39;t open output file `foo.json&#39; for writing: Not supported\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; nwritten=68\n TRACE wasi_common::wasi::wasi_snapshot_preview1      &gt; success=No error occurred. System call completed successfully. (Errno::Success(0))\n</code></pre></div>\n\n\n</blockquote>",
        "id": 203516418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594392865
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008#issuecomment-656718360\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 203516457,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594392883
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008#issuecomment-803435313\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>Is this still the case after the rewrite of the wasi implementation?</p>\n</blockquote>",
        "id": 231161091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616263169
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008#issuecomment-803665613\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>All of that path resolution code has been completely rewritten, it now resides in cap-std and has a different design than before. However, I don't think I have enough information to reproduce these bugs and check. @whitequark can you provide a bit more context?</p>\n</blockquote>",
        "id": 231243373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616363347
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008#issuecomment-803681202\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>I'm going to try to reproduce this and comment with the steps as well as close the issue if it's fixed.</p>\n</blockquote>",
        "id": 231248912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616369863
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008#issuecomment-805666678\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>This is no longer an issue on <code>main</code> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n</blockquote>",
        "id": 231608290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616580209
    },
    {
        "content": "<p>whitequark closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2008\">Issue #2008</a>:</p>\n<blockquote>\n<p>I'm trying to debug another wasmtime misbehavior (it seems that under Windows and Windows only it does not truncate existing files) under wine. I cannot use wasmtime to write to an existing file because it has a symlink check, which always fails if the file exists:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">path</span><span class=\"w\">                              </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">path_get</span><span class=\"w\"> </span><span class=\"n\">cur_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"foo.json\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">path</span><span class=\"w\">                              </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">path_get</span><span class=\"w\"> </span><span class=\"n\">path_stack</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">sys</span>::<span class=\"n\">windows</span>::<span class=\"n\">path</span><span class=\"w\">                </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">out_path</span><span class=\"o\">=</span><span class=\"s\">\"Z:</span><span class=\"se\">\\\\</span><span class=\"s\">home</span><span class=\"se\">\\\\</span><span class=\"s\">whitequark</span><span class=\"se\">\\\\</span><span class=\"s\">xxx</span><span class=\"se\">\\\\</span><span class=\"s\">build</span><span class=\"se\">\\\\</span><span class=\"s\">foo.json\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">DEBUG</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">sys</span>::<span class=\"n\">windows</span>::<span class=\"n\">path</span><span class=\"w\">                </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">readlinkat</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">wasi</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"o\">=</span><span class=\"n\">Notsup</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">wasi</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"fd_write\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">wasi</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"o\">=</span><span class=\"n\">Fd</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">iovs</span><span class=\"o\">=*</span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"mh\">0x6003f0</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"w\"></span>\n<span class=\"n\">ERROR</span>: <span class=\"nc\">Can</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">json</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">writing</span>: <span class=\"nc\">Not</span><span class=\"w\"> </span><span class=\"n\">supported</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">wasi</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">nwritten</span><span class=\"o\">=</span><span class=\"mi\">68</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">wasi</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">success</span><span class=\"o\">=</span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">occurred</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">System</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">completed</span><span class=\"w\"> </span><span class=\"n\">successfully</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Errno</span>::<span class=\"n\">Success</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 231608291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616580209
    }
]