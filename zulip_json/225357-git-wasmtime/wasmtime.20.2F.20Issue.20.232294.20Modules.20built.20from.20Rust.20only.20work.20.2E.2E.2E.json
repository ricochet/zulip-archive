[
    {
        "content": "<p>itowlson opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>When I write a program in Rust and compile it to WASM, I cannot run it under <code>wasmtime</code> on Windows unless I passed the <code>--release</code> flag when I built it.  If I built the WASM module in debug mode, <code>wasmtime</code> gives the error \"command export '__rustc_debug_gdb_scripts_section__' is not a function\".  All other combinations of OS and build mode work: the error is specific to debug builds under Windows.</p>\n<h2>Steps to reproduce</h2>\n<ol>\n<li>Get hold of a Windows box.  Install Rust, the <code>wasm32-wasi</code> target and <code>wasmtime</code>.</li>\n<li><code>cargo new</code> a hello-world program.</li>\n<li><code>cd</code> into the hello-world directory and <code>cargo build --target wasm32-wasi</code></li>\n<li>Run <code>wasmtime run .\\target\\wasm32-wasi\\debug\\hello-world.wasm</code></li>\n</ol>\n<h2>Results</h2>\n<p>Expected: Should print <code>Hello, world!</code></p>\n<p>Actual:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">instantiate</span><span class=\"w\"> </span><span class=\"s\">\".</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">wasm32-wasi</span><span class=\"se\">\\\\</span><span class=\"s\">debug</span><span class=\"se\">\\\\</span><span class=\"s\">hello-world.wasm\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">command</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">__</span><span class=\"na\">rustc_debug_gdb_scripts_section__</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"></span>\n</code></pre></div>\n\n<h2>Environment</h2>\n<p>Windows 10, x64<br>\nRust 1.40.0<br>\nWasmtime 0.20.0</p>\n<h2>Additional information</h2>\n<ul>\n<li>If I <code>cargo build ... --release</code> and use wasmtime to run the release build, it works.</li>\n<li>If I run the debug build on Linux (WSL Ubuntu), it works.</li>\n</ul>\n</blockquote>",
        "id": 213504122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602807522
    },
    {
        "content": "<p>itowlson labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>When I write a program in Rust and compile it to WASM, I cannot run it under <code>wasmtime</code> on Windows unless I passed the <code>--release</code> flag when I built it.  If I built the WASM module in debug mode, <code>wasmtime</code> gives the error \"command export '__rustc_debug_gdb_scripts_section__' is not a function\".  All other combinations of OS and build mode work: the error is specific to debug builds under Windows.</p>\n<h2>Steps to reproduce</h2>\n<ol>\n<li>Get hold of a Windows box.  Install Rust, the <code>wasm32-wasi</code> target and <code>wasmtime</code>.</li>\n<li><code>cargo new</code> a hello-world program.</li>\n<li><code>cd</code> into the hello-world directory and <code>cargo build --target wasm32-wasi</code></li>\n<li>Run <code>wasmtime run .\\target\\wasm32-wasi\\debug\\hello-world.wasm</code></li>\n</ol>\n<h2>Results</h2>\n<p>Expected: Should print <code>Hello, world!</code></p>\n<p>Actual:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">instantiate</span><span class=\"w\"> </span><span class=\"s\">\".</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">wasm32-wasi</span><span class=\"se\">\\\\</span><span class=\"s\">debug</span><span class=\"se\">\\\\</span><span class=\"s\">hello-world.wasm\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">command</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">__</span><span class=\"na\">rustc_debug_gdb_scripts_section__</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"></span>\n</code></pre></div>\n\n<h2>Environment</h2>\n<p>Windows 10, x64<br>\nRust 1.40.0<br>\nWasmtime 0.20.0</p>\n<h2>Additional information</h2>\n<ul>\n<li>If I <code>cargo build ... --release</code> and use wasmtime to run the release build, it works.</li>\n<li>If I run the debug build on Linux (WSL Ubuntu), it works.</li>\n</ul>\n</blockquote>",
        "id": 213504130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602807525
    },
    {
        "content": "<p>tschneidereit assigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a> (assigned to yurydelendik):</p>\n<blockquote>\n<p>When I write a program in Rust and compile it to WASM, I cannot run it under <code>wasmtime</code> on Windows unless I passed the <code>--release</code> flag when I built it.  If I built the WASM module in debug mode, <code>wasmtime</code> gives the error \"command export '__rustc_debug_gdb_scripts_section__' is not a function\".  All other combinations of OS and build mode work: the error is specific to debug builds under Windows.</p>\n<h2>Steps to reproduce</h2>\n<ol>\n<li>Get hold of a Windows box.  Install Rust, the <code>wasm32-wasi</code> target and <code>wasmtime</code>.</li>\n<li><code>cargo new</code> a hello-world program.</li>\n<li><code>cd</code> into the hello-world directory and <code>cargo build --target wasm32-wasi</code></li>\n<li>Run <code>wasmtime run .\\target\\wasm32-wasi\\debug\\hello-world.wasm</code></li>\n</ol>\n<h2>Results</h2>\n<p>Expected: Should print <code>Hello, world!</code></p>\n<p>Actual:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">instantiate</span><span class=\"w\"> </span><span class=\"s\">\".</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">wasm32-wasi</span><span class=\"se\">\\\\</span><span class=\"s\">debug</span><span class=\"se\">\\\\</span><span class=\"s\">hello-world.wasm\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">command</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">__</span><span class=\"na\">rustc_debug_gdb_scripts_section__</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"></span>\n</code></pre></div>\n\n<h2>Environment</h2>\n<p>Windows 10, x64<br>\nRust 1.40.0<br>\nWasmtime 0.20.0</p>\n<h2>Additional information</h2>\n<ul>\n<li>If I <code>cargo build ... --release</code> and use wasmtime to run the release build, it works.</li>\n<li>If I run the debug build on Linux (WSL Ubuntu), it works.</li>\n</ul>\n</blockquote>",
        "id": 213546486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602847092
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294#issuecomment-709985474\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>Sounds like an issue with debug info handling. @yurydelendik, can you take a look?</p>\n</blockquote>",
        "id": 213546543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602847130
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294#issuecomment-709991162\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p><code>__rustc_debug_gdb_scripts_section__</code> is exported by rustc to prevent LLVM from gcing a section that gdb reads to load the pretty printing python script for rust. That section normally contains the string <code>gdb_load_rust_pretty_printers.py</code>.</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/95b4a4f0eee935f9e0c80b0ceef34866bcb72ca3/compiler/rustc_codegen_llvm/src/debuginfo/gdb.rs#L37\">https://github.com/rust-lang/rust/blob/95b4a4f0eee935f9e0c80b0ceef34866bcb72ca3/compiler/rustc_codegen_llvm/src/debuginfo/gdb.rs#L37</a></p>\n<p>Either Wasmtime should simply ignore this export instead of attempting to interpret it as command or rustc should stop adding this section for wasm.</p>\n</blockquote>",
        "id": 213547696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602847947
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294#issuecomment-709992733\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>Thank you for the investigation, @bjorn3!</p>\n<blockquote>\n<p>Either Wasmtime should simply ignore this export instead of attempting to interpret it as command or rustc should stop adding this section for wasm.</p>\n</blockquote>\n<p>I think the former is preferable: we shouldn't rely on the compiler doing the right thing (assuming not adding this section would be the right thing, which I don't have enough context to know) about something like this.</p>\n</blockquote>",
        "id": 213548049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602848183
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294#issuecomment-713684279\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>Looks unrelated to wasmtime debugging capabilities. Will the following help?</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/crates/wasmtime/src/linker.rs b/crates/wasmtime/src/linker.rs</span>\n<span class=\"gh\">index c22b89bf4..2f944050f 100644</span>\n<span class=\"gd\">--- a/crates/wasmtime/src/linker.rs</span>\n<span class=\"gi\">+++ b/crates/wasmtime/src/linker.rs</span>\n<span class=\"gu\">@@ -442,2 +442,5 @@ impl Linker {</span>\n                 warn!(\"command module exporting '__data_end' is deprecated\");\n<span class=\"gi\">+            } else if export.name() == \"__rustc_debug_gdb_scripts_section__\" &amp;&amp; export.ty().global().is_some() {</span>\n<span class=\"gi\">+                // Allow an exported \"__rustc_debug_gdb_scripts_section__\" for compatibility with toolchains.</span>\n<span class=\"gi\">+                // See rustc logic for \".debug_gdb_scripts\" section.</span>\n             } else if export.name() == \"__heap_base\" &amp;&amp; export.ty().global().is_some() {\n</code></pre></div>\n\n</blockquote>",
        "id": 214072909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603296297
    },
    {
        "content": "<p>yurydelendik unassigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>When I write a program in Rust and compile it to WASM, I cannot run it under <code>wasmtime</code> on Windows unless I passed the <code>--release</code> flag when I built it.  If I built the WASM module in debug mode, <code>wasmtime</code> gives the error \"command export '__rustc_debug_gdb_scripts_section__' is not a function\".  All other combinations of OS and build mode work: the error is specific to debug builds under Windows.</p>\n<h2>Steps to reproduce</h2>\n<ol>\n<li>Get hold of a Windows box.  Install Rust, the <code>wasm32-wasi</code> target and <code>wasmtime</code>.</li>\n<li><code>cargo new</code> a hello-world program.</li>\n<li><code>cd</code> into the hello-world directory and <code>cargo build --target wasm32-wasi</code></li>\n<li>Run <code>wasmtime run .\\target\\wasm32-wasi\\debug\\hello-world.wasm</code></li>\n</ol>\n<h2>Results</h2>\n<p>Expected: Should print <code>Hello, world!</code></p>\n<p>Actual:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">hello</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">instantiate</span><span class=\"w\"> </span><span class=\"s\">\".</span><span class=\"se\">\\\\</span><span class=\"s\">target</span><span class=\"se\">\\\\</span><span class=\"s\">wasm32-wasi</span><span class=\"se\">\\\\</span><span class=\"s\">debug</span><span class=\"se\">\\\\</span><span class=\"s\">hello-world.wasm\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">command</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"nb\">__</span><span class=\"na\">rustc_debug_gdb_scripts_section__</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"></span>\n</code></pre></div>\n\n<h2>Environment</h2>\n<p>Windows 10, x64<br>\nRust 1.40.0<br>\nWasmtime 0.20.0</p>\n<h2>Additional information</h2>\n<ul>\n<li>If I <code>cargo build ... --release</code> and use wasmtime to run the release build, it works.</li>\n<li>If I run the debug build on Linux (WSL Ubuntu), it works.</li>\n</ul>\n</blockquote>",
        "id": 214072956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603296308
    },
    {
        "content": "<p>workingjubilee <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294#issuecomment-716151226\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>If gdb can debug wasm, then rustc should continue adding the section for wasm targets.<br>\nIf gdb cannot debug wasm, then rustc should not add the section.<br>\nI don't know gdb's limits here.</p>\n</blockquote>",
        "id": 214490360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603633647
    },
    {
        "content": "<p>workingjubilee edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294#issuecomment-716151226\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>If gdb (and specifically the rust-gdb pretty printer) can debug wasm, then rustc should continue adding the section for wasm targets. If gdb cannot debug wasm, then rustc should not add the section.<br>\nI don't know rust-gdb's limits here.</p>\n</blockquote>",
        "id": 214490434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603633731
    },
    {
        "content": "<p>workingjubilee edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294#issuecomment-716151226\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2294\">Issue #2294</a>:</p>\n<blockquote>\n<p>If gdb (and specifically the rust-gdb pretty printer) can debug wasm, then rustc should (probably) continue adding the section for wasm targets. If gdb cannot debug wasm, then rustc should not add the section.<br>\nI don't know rust-gdb's limits here.</p>\n</blockquote>",
        "id": 214522291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603673310
    }
]