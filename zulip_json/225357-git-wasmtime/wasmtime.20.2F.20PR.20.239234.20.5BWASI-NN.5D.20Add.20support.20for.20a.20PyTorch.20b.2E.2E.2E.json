[
    {
        "content": "<p>rahulchaphalkar opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> from <code>rahulchaphalkar:pytorch-dyn-link-pr</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change adds a PyTorch backend for wasi-nn.<br>\n<a href=\"https://crates.io/crates/tch\">tch crate</a> is used for Libtorch bindings. I have added an image classification example to demonstrate its usage, which uses a torchscript model.<br>\nThis backend is currently gated behind a wasi-nn feature flag <code>--features pytorch</code> as due to dynamic linking, a Libtorch v2.4.0 installation on the system (specified by <code>LIBTORCH=/path/to/libtorch</code>) is needed for building.</p>\n</blockquote>",
        "id": 469749887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726165105
    },
    {
        "content": "<p><strong>rahulchaphalkar</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>.</p>",
        "id": 469749890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726165106
    },
    {
        "content": "<p><strong>rahulchaphalkar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>.</p>",
        "id": 469749891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726165106
    },
    {
        "content": "<p><strong>rahulchaphalkar</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>.</p>",
        "id": 469749892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726165106
    },
    {
        "content": "<p>abrown assigned abrown to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>.</p>",
        "id": 469754112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726166484
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>.</p>",
        "id": 469771748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726171762
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2316728869\">PR review</a>:</p>\n<blockquote>\n<p>This is a good start. The main thing to fix is the handling of the input and output tensors.</p>\n</blockquote>",
        "id": 471582989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792143
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767584683\">PR review comment</a>:</p>\n<blockquote>\n<p>nit: merge these</p>\n</blockquote>",
        "id": 471582991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767593723\">PR review comment</a>:</p>\n<blockquote>\n<p>This function needs to handle the passed index: a model can have multiple inputs and the job this function needs to do is map the incoming tensor to the right one.</p>\n</blockquote>",
        "id": 471582992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767590158\">PR review comment</a>:</p>\n<blockquote>\n<p>This seems incorrect: <code>load_from_dir</code> is going to pass the path to a directory and this code will try to use it as a file.</p>\n</blockquote>",
        "id": 471582993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767765615\">PR review comment</a>:</p>\n<blockquote>\n<p>Storing the output tensor in the same location as the input tensor means that <code>set_input</code> followed immediately by <code>get_output</code> would return the input tensor... probably not what you want here. It looks like <code>forward_ts</code> only returns a single tensor so perhaps just create an <code>output</code> field for that and another <code>input: Vec&lt;Tensor&gt;</code> for the inputs.</p>\n</blockquote>",
        "id": 471582994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767769190\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            unimplemented!(\"the pytorch backend does not yet support GPU execution targets\")\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 471582995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767770067\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            unimplemented!(\"the pytorch backend does not yet support TPU execution targets\")\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 471582996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767769925\">PR review comment</a>:</p>\n<blockquote>\n<p>...since PyTorch backend does indeed support GPU execution.</p>\n</blockquote>",
        "id": 471582997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1767768911\">PR review comment</a>:</p>\n<blockquote>\n<p>This is incorrect: we need to retrieve the data regardless of the type, so we need to first figure out how many bytes each <code>Kind</code> is before constructing the receiving buffer, like:</p>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        let data = vec![0u8; size_of(ty) * numel];\n        self.1.copy_data_u8(&amp;mut data, numel);\n</code></pre></div>\n</blockquote>",
        "id": 471582998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792144
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#issuecomment-2362479324\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>:</p>\n<blockquote>\n<p>The <code>cargo vet</code> situation is a bit much:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"n\">zstd</span><span class=\"o\">-</span><span class=\"n\">safe</span><span class=\"w\"> </span><span class=\"mf\">5.0.1</span><span class=\"o\">+</span><span class=\"n\">zstd</span><span class=\"p\">.</span><span class=\"mf\">1.5.2</span><span class=\"w\"> </span><span class=\"mf\">5.0.2</span><span class=\"o\">+</span><span class=\"n\">zstd</span><span class=\"p\">.</span><span class=\"mf\">1.5.2</span>\n<span class=\"w\">                                                          </span><span class=\"n\">gyscos</span><span class=\"w\">         </span><span class=\"n\">zstd</span><span class=\"w\">                        </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"n\">zstd</span><span class=\"w\"> </span><span class=\"mf\">0.11.1</span><span class=\"o\">+</span><span class=\"n\">zstd</span><span class=\"p\">.</span><span class=\"mf\">1.5.2</span><span class=\"w\"> </span><span class=\"mf\">0.11.2</span><span class=\"o\">+</span><span class=\"n\">zstd</span><span class=\"p\">.</span><span class=\"mf\">1.5.2</span>\n<span class=\"w\">                                                          </span><span class=\"n\">gyscos</span><span class=\"w\">         </span><span class=\"n\">zip</span><span class=\"w\">                         </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"n\">num</span><span class=\"o\">-</span><span class=\"n\">complex</span><span class=\"w\"> </span><span class=\"mf\">0.4.2</span><span class=\"w\"> </span><span class=\"mf\">0.4.6</span><span class=\"w\">                </span><span class=\"n\">cuviper</span><span class=\"w\">        </span><span class=\"n\">ndarray</span><span class=\"w\">                     </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">188</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"n\">NOTE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">project</span><span class=\"w\"> </span><span class=\"n\">trusts</span><span class=\"w\"> </span><span class=\"n\">Josh</span><span class=\"w\"> </span><span class=\"n\">Stone</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cuviper</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">consider</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">trust</span><span class=\"w\"> </span><span class=\"n\">num</span><span class=\"o\">-</span><span class=\"n\">complex</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">trust</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">cuviper</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">constant_time_eq</span><span class=\"w\"> </span><span class=\"mf\">0.1.5</span><span class=\"w\">              </span><span class=\"n\">cesarb</span><span class=\"w\">         </span><span class=\"n\">zip</span><span class=\"w\">                         </span><span class=\"mi\">311</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"n\">sha1</span><span class=\"w\"> </span><span class=\"mf\">0.10.5</span><span class=\"w\"> </span><span class=\"mf\">0.10.6</span><span class=\"w\">                     </span><span class=\"n\">newpavlov</span><span class=\"w\">      </span><span class=\"n\">zip</span><span class=\"w\">                         </span><span class=\"mi\">7</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">302</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">rawpointer</span><span class=\"w\"> </span><span class=\"mf\">0.2.1</span><span class=\"w\">                    </span><span class=\"n\">bluss</span><span class=\"w\">          </span><span class=\"n\">ndarray</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">matrixmultiply</span><span class=\"w\">  </span><span class=\"mi\">559</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"n\">zip</span><span class=\"w\"> </span><span class=\"mf\">0.6.4</span><span class=\"w\"> </span><span class=\"mf\">0.6.6</span><span class=\"w\">                        </span><span class=\"n\">Plecra</span><span class=\"w\">         </span><span class=\"n\">tch</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">torch</span><span class=\"o\">-</span><span class=\"n\">sys</span><span class=\"w\">           </span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">604</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">109</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">inout</span><span class=\"w\"> </span><span class=\"mf\">0.1.3</span><span class=\"w\">                         </span><span class=\"n\">newpavlov</span><span class=\"w\">      </span><span class=\"n\">cipher</span><span class=\"w\">                      </span><span class=\"mi\">1112</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">      </span><span class=\"n\">NOTE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">zcash</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">eliminate</span><span class=\"w\"> </span><span class=\"n\">this</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">pbkdf2</span><span class=\"w\"> </span><span class=\"mf\">0.9.0</span><span class=\"w\">                        </span><span class=\"n\">tarcieri</span><span class=\"w\">       </span><span class=\"n\">zip</span><span class=\"w\">                         </span><span class=\"mi\">1120</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">bzip2</span><span class=\"w\"> </span><span class=\"mf\">0.4.4</span><span class=\"w\">                         </span><span class=\"n\">alexcrichton</span><span class=\"w\">   </span><span class=\"n\">zip</span><span class=\"w\">                         </span><span class=\"mi\">2094</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">      </span><span class=\"n\">NOTE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">project</span><span class=\"w\"> </span><span class=\"n\">trusts</span><span class=\"w\"> </span><span class=\"n\">Alex</span><span class=\"w\"> </span><span class=\"n\">Crichton</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">alexcrichton</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">consider</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">trust</span><span class=\"w\"> </span><span class=\"n\">bzip2</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">trust</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">alexcrichton</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">safetensors</span><span class=\"w\"> </span><span class=\"mf\">0.3.3</span><span class=\"w\">                   </span><span class=\"n\">Narsil</span><span class=\"w\">         </span><span class=\"n\">tch</span><span class=\"w\">                         </span><span class=\"mi\">2200</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">cipher</span><span class=\"w\"> </span><span class=\"mf\">0.4.4</span><span class=\"w\">                        </span><span class=\"n\">newpavlov</span><span class=\"w\">      </span><span class=\"n\">aes</span><span class=\"w\">                         </span><span class=\"mi\">2635</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">      </span><span class=\"n\">NOTE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">zcash</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">reduce</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">130</span><span class=\"p\">](</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/bytecodealliance/wasmtime/actions/runs/10836457564/job/30070281197?pr=9234#step:6:131)0-line diff</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">password</span><span class=\"o\">-</span><span class=\"n\">hash</span><span class=\"w\"> </span><span class=\"mf\">0.3.2</span><span class=\"w\">                 </span><span class=\"n\">tarcieri</span><span class=\"w\">       </span><span class=\"n\">pbkdf2</span><span class=\"w\">                      </span><span class=\"mi\">3139</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">base64ct</span><span class=\"w\"> </span><span class=\"mf\">1.6.0</span><span class=\"w\">                      </span><span class=\"n\">tarcieri</span><span class=\"w\">       </span><span class=\"n\">password</span><span class=\"o\">-</span><span class=\"n\">hash</span><span class=\"w\">               </span><span class=\"mi\">3381</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">diff</span><span class=\"w\"> </span><span class=\"n\">half</span><span class=\"w\"> </span><span class=\"mf\">1.8.2</span><span class=\"w\"> </span><span class=\"mf\">2.4.1</span><span class=\"w\">                       </span><span class=\"n\">starkat99</span><span class=\"w\">      </span><span class=\"n\">tch</span><span class=\"w\">                         </span><span class=\"mi\">19</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">changed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2546</span><span class=\"w\"> </span><span class=\"n\">insertions</span><span class=\"p\">(</span><span class=\"o\">+</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"mi\">958</span><span class=\"w\"> </span><span class=\"n\">deletions</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"mf\">0.1.44</span><span class=\"w\">                         </span><span class=\"n\">jhpratt</span><span class=\"w\">        </span><span class=\"n\">zip</span><span class=\"w\">                         </span><span class=\"mi\">3915</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">aes</span><span class=\"w\"> </span><span class=\"mf\">0.7.5</span><span class=\"w\">                           </span><span class=\"n\">tarcieri</span><span class=\"w\">       </span><span class=\"n\">zip</span><span class=\"w\">                         </span><span class=\"mi\">6822</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">matrixmultiply</span><span class=\"w\"> </span><span class=\"mf\">0.3.8</span><span class=\"w\">                </span><span class=\"n\">bluss</span><span class=\"w\">          </span><span class=\"n\">ndarray</span><span class=\"w\">                     </span><span class=\"mi\">7934</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">ndarray</span><span class=\"w\"> </span><span class=\"mf\">0.15.6</span><span class=\"w\">                      </span><span class=\"n\">jturner314</span><span class=\"w\">     </span><span class=\"n\">tch</span><span class=\"w\">                         </span><span class=\"mi\">41996</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">torch</span><span class=\"o\">-</span><span class=\"n\">sys</span><span class=\"w\"> </span><span class=\"mf\">0.17.0</span><span class=\"w\">                    </span><span class=\"n\">LaurentMazare</span><span class=\"w\">  </span><span class=\"n\">tch</span><span class=\"w\">                         </span><span class=\"mi\">52119</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">bzip2</span><span class=\"o\">-</span><span class=\"n\">sys</span><span class=\"w\"> </span><span class=\"mf\">0.1.11</span><span class=\"o\">+</span><span class=\"mf\">1.0.8</span><span class=\"w\">              </span><span class=\"n\">alexcrichton</span><span class=\"w\">   </span><span class=\"n\">bzip2</span><span class=\"w\">                       </span><span class=\"mi\">264</span><span class=\"p\">[</span><span class=\"mi\">133</span><span class=\"p\">](</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"c1\">//github.com/bytecodealliance/wasmtime/actions/runs/10836457564/job/30070281197?pr=9234#step:6:134) lines</span>\n<span class=\"w\">      </span><span class=\"n\">NOTE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">project</span><span class=\"w\"> </span><span class=\"n\">trusts</span><span class=\"w\"> </span><span class=\"n\">Alex</span><span class=\"w\"> </span><span class=\"n\">Crichton</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">alexcrichton</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">consider</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">trust</span><span class=\"w\"> </span><span class=\"n\">bzip2</span><span class=\"o\">-</span><span class=\"n\">sys</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">trust</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">alexcrichton</span>\n<span class=\"w\">    </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">vet</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">tch</span><span class=\"w\"> </span><span class=\"mf\">0.17.0</span><span class=\"w\">                          </span><span class=\"n\">LaurentMazare</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">nn</span><span class=\"w\">            </span><span class=\"mi\">2287297</span><span class=\"w\"> </span><span class=\"n\">lines</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 471583129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726792248
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 471831948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726865923
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2319347592\">PR review</a>.</p>",
        "id": 471832330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866109
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1769253512\">PR review comment</a>:</p>\n<blockquote>\n<p>Changed to <code>path.join(\"model.pt\")</code></p>\n</blockquote>",
        "id": 471832332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866109
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2319347847\">PR review</a>.</p>",
        "id": 471832401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866124
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1769253668\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 471832403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866124
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2319351669\">PR review</a>.</p>",
        "id": 471832553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866218
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1769254836\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point. I added <code>inputs</code> as vector of tensors. Also changed structs in general to use named fields to make code more readable.</p>\n</blockquote>",
        "id": 471832554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866219
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2319353403\">PR review</a>.</p>",
        "id": 471832729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866295
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1769256011\">PR review comment</a>:</p>\n<blockquote>\n<p>Done, added <code>kind_to_size()</code> for conversions.</p>\n</blockquote>",
        "id": 471832730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866295
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2319353604\">PR review</a>.</p>",
        "id": 471832776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866305
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1769256121\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 471832777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866305
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2319355039\">PR review</a>.</p>",
        "id": 471832978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866388
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1769257039\">PR review comment</a>:</p>\n<blockquote>\n<p>This is one of the differences for this backend. The module's <code>forward</code> method should handle multiple inputs appropriately if it does support multiple inputs. The vector of input tensors being passed to <code>forward</code> should be sufficient, no index or name is needed.</p>\n</blockquote>",
        "id": 471832979,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866388
    },
    {
        "content": "<p>rahulchaphalkar <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#issuecomment-2364620397\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>:</p>\n<blockquote>\n<blockquote>\n<p>This is a good start. The main thing to fix is the handling of the input and output tensors.</p>\n</blockquote>\n<p>Thanks for the review, Andrew. I've marked smaller Nits as resolved, and I've addressed other comments as well, but kept them 'unresolved' as of now until you take a look.</p>\n</blockquote>",
        "id": 471833265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726866529
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2332282808\">PR review</a>.</p>",
        "id": 472968404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727382309
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1777693496\">PR review comment</a>:</p>\n<blockquote>\n<p>This is almost there: we're still ignoring the index, though. What might need to happen is that we set up inputs as a <code>Vec&lt;Option&lt;TchTensor&gt;&gt;</code> filled with <code>None</code> and then set the right item based on the index. We are able to retrieve the number of inputs, right? </p>\n</blockquote>",
        "id": 472968406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727382310
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2334324283\">PR review</a>.</p>",
        "id": 473174002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727459995
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1778970313\">PR review comment</a>:</p>\n<blockquote>\n<p>The index is being ignored because jit-compiled pytorch models expect tensors in order, similar to what is achieved by vector of tensors in <code>set_input()</code>. Do we need to use index here to keep things consistent with wasi-nn? I don't think I saw a direct way to retrieve the number of inputs to a model, I can look into that further. However, someone using pytorch would probably not intend on using index.<br>\nThis was my previous comment on ignoring the index:</p>\n<blockquote>\n<p>This is one of the differences for this backend. The module's forward method should handle multiple inputs appropriately if it does support multiple inputs. The vector of input tensors being passed to forward should be sufficient, no index or name is needed.</p>\n</blockquote>\n</blockquote>",
        "id": 473174004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727459996
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2334409946\">PR review</a>.</p>",
        "id": 473185705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727462850
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1779019516\">PR review comment</a>:</p>\n<blockquote>\n<p>Did you mean use the index as the position/index for the vector of tensors? That sounds good. I'll see if there's a way to determine the max number of inputs to the given model.</p>\n</blockquote>",
        "id": 473185706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727462851
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 473593338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727675883
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2336480429\">PR review</a>.</p>",
        "id": 473599283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727676967
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1780495222\">PR review comment</a>:</p>\n<blockquote>\n<p>Alright, so here's what I've changed -</p>\n<ul>\n<li><code>set_input()</code> now uses the <code>id</code> passed to it. If it is <code>u32</code>, it assigns the tensor to the vector <code>inputs[id]</code>, assigning <code>None</code> if there are any empty spots below the given <code>id</code>. This will give the user flexibility to set input tensors non sequentially.</li>\n<li><code>compute()</code> will check the vector for any <code>None</code> values, and give an error if present, before calling <code>forward_ts()</code>.</li>\n<li>There is no reliable way at this time to get max inputs for a model. However, assigning more inputs than available returns an error message detailing the max inputs the model expects at run time, so this is helpful for the user. The expectation, similar to other backends, is for the user to be aware of input size/shape etc.</li>\n<li>If <code>id</code> is a string, I've currently permitted only single input to be set, effectively ignoring the index. If more inputs are assigned, or if <code>u32</code> and <code>String</code> indexes are used together, we give out an error.</li>\n</ul>\n<p>Let me know if this looks fine. Thanks.</p>\n</blockquote>",
        "id": 473599285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727676967
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 473768099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727709480
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2341658933\">PR review</a>.</p>",
        "id": 474151318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727828573
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1783668241\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, looking at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234/commits/727a4aa31e54519371377a2796afe73719e745b2\">727a4aa</a>, I think that makes more sense. I was kind of hoping that <a href=\"https://docs.rs/tch/latest/tch/struct.CModule.html#method.named_parameters\"><code>CModule::named_parameters</code></a> would return the list of inputs by name, but, if that's not the case, then let's just return an error for <code>Id::Name</code> side of things. In any case, we probably don't need <code>id_type</code>: if we get an <code>Id::Index</code> we know were to put it in the vector and if we get an <code>Id::Name</code> then we either (a) look up its index in <code>named_parameters</code> or (b) if that's not possible, return an error.</p>\n</blockquote>",
        "id": 474151319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727828574
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1783668241\">PR review comment</a>.</p>",
        "id": 474151337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727828590
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2345982603\">PR review</a>.</p>",
        "id": 474621846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727969875
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1786451629\">PR review comment</a>:</p>\n<blockquote>\n<p>I had added the Id:Name case because the wit test cases (<code>nn_wit_image_classification_pytorch</code> in this case) need a Name instead of Index to pass - <a href=\"https://github.com/bytecodealliance/wasmtime/blob/80ed395e185b7092bb0b520b67150b7b984e1148/crates/test-programs/src/nn.rs#L43\">nn.rs</a> and <a href=\"https://github.com/rahulchaphalkar/wasmtime/blob/786b073664950ebcf3b4fe801826bc17ad3207e3/crates/wasi-nn/wit/wasi-nn.wit#L121\">wasi-nn.wit</a>. Although it looks like <code>set-input</code> might be going away anyway.</p>\n</blockquote>",
        "id": 474621847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727969875
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 475605989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728403700
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2355684273\">PR review</a>.</p>",
        "id": 475691333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728429099
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1792604405\">PR review comment</a>:</p>\n<blockquote>\n<p>Here's the identical 44.7MB file checked in again.</p>\n</blockquote>",
        "id": 475691334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728429099
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1792602285\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we find a smaller model or download this instead? Not all Wasmtime users probably want to download this file... twice.</p>\n</blockquote>",
        "id": 475691335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728429099
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1792602617\">PR review comment</a>:</p>\n<blockquote>\n<p>Can you re-add the new line?</p>\n</blockquote>",
        "id": 475691336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728429099
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1792602617\">PR review comment</a>.</p>",
        "id": 475691361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728429113
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 475692630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728429993
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 475697374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728433036
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 475699434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728434512
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 476807530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728918375
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2366953289\">PR review</a>.</p>",
        "id": 476807634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728918415
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1799691273\">PR review comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 476807636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728918415
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2366967148\">PR review</a>.</p>",
        "id": 476808493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728918736
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1799698877\">PR review comment</a>:</p>\n<blockquote>\n<p>I've made the following changes -</p>\n<ul>\n<li>\n<p>Created a repository to generate jit-compiled libtorch models, and download models from Release for tests and examples. <br>\n<a href=\"https://github.com/rahulchaphalkar/libtorch-models\">https://github.com/rahulchaphalkar/libtorch-models</a><br>\n<a href=\"https://github.com/rahulchaphalkar/libtorch-models/releases/tag/v0.1\">https://github.com/rahulchaphalkar/libtorch-models/releases/tag/v0.1</a></p>\n</li>\n<li>\n<p>Switched from Resnet18(45MB) to Squeezenet1.1(4.5MB) as the file to download from above repo. </p>\n</li>\n<li>This <code>libtorch-models</code> repo can issue new releases if we update the pytorch/libtorch version in this backend from current 2.4.0 to ensure model compatibility.</li>\n</ul>\n</blockquote>",
        "id": 476808494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728918736
    },
    {
        "content": "<p>rahulchaphalkar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#discussion_r1799699506\">PR review comment</a>:</p>\n<blockquote>\n<p>Downloading from external repo, same as tests</p>\n</blockquote>",
        "id": 476808569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728918766
    },
    {
        "content": "<p>rahulchaphalkar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2366968163\">PR review</a>.</p>",
        "id": 476808570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728918766
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 476814737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728921037
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#issuecomment-2411866065\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>:</p>\n<blockquote>\n<p>I think <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234/commits/51930fa31b8053b17e9a856fac4c89a98a96bb80\">51930fa</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234/commits/da1f467d805909464102a1134464134e147be21d\">da1f467</a> have unintentionally updated some crates. Can you remove those commits?</p>\n</blockquote>",
        "id": 476828940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728927422
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 476846523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728936705
    },
    {
        "content": "<p>rahulchaphalkar <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#issuecomment-2412206508\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>:</p>\n<blockquote>\n<p>I rolled back 2 commits, but there's an issue with the lock file. I had previously attempted to fix this by deleting my lockfile, rebasing off of latest main, and then doing a <code>cargo build</code> to generate any of my lock file changes on top of that.</p>\n</blockquote>",
        "id": 476848563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728937913
    },
    {
        "content": "<p>rahulchaphalkar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a> (assigned to abrown).</p>",
        "id": 476849141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728938243
    },
    {
        "content": "<p>rahulchaphalkar <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#issuecomment-2414484352\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>:</p>\n<blockquote>\n<p>The failing tests fail due to</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">retrieving</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">mingw</span><span class=\"o\">-</span><span class=\"n\">w64</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">headers</span><span class=\"o\">-</span><span class=\"n\">git</span><span class=\"o\">-</span><span class=\"mf\">12.0.0.</span><span class=\"n\">r329</span><span class=\"p\">.</span><span class=\"n\">g8f7b5ce36</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">any</span><span class=\"p\">.</span><span class=\"n\">pkg</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">zst</span><span class=\"p\">.</span><span class=\"n\">sig</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">mirror</span><span class=\"p\">.</span><span class=\"n\">clarkson</span><span class=\"p\">.</span><span class=\"n\">edu</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Operation</span><span class=\"w\"> </span><span class=\"n\">too</span><span class=\"w\"> </span><span class=\"n\">slow</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Less</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"o\">/</span><span class=\"n\">sec</span><span class=\"w\"> </span><span class=\"n\">transferred</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"n\">seconds</span>\n<span class=\"w\"> </span><span class=\"n\">mingw</span><span class=\"o\">-</span><span class=\"n\">w64</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">gcc</span><span class=\"o\">-</span><span class=\"mf\">14.2.0</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">any</span><span class=\"w\"> </span><span class=\"n\">downloading</span><span class=\"o\">..</span><span class=\"p\">.</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">retrieving</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">mingw</span><span class=\"o\">-</span><span class=\"n\">w64</span><span class=\"o\">-</span><span class=\"n\">x86_64</span><span class=\"o\">-</span><span class=\"n\">mpfr</span><span class=\"o\">-</span><span class=\"mf\">4.2.1</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"o\">-</span><span class=\"n\">any</span><span class=\"p\">.</span><span class=\"n\">pkg</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">zst</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"n\">mirror</span><span class=\"p\">.</span><span class=\"n\">msys2</span><span class=\"p\">.</span><span class=\"n\">org</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Operation</span><span class=\"w\"> </span><span class=\"n\">too</span><span class=\"w\"> </span><span class=\"n\">slow</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Less</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">bytes</span><span class=\"o\">/</span><span class=\"n\">sec</span><span class=\"w\"> </span><span class=\"n\">transferred</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"n\">seconds</span>\n</code></pre></div>\n<p>I'm hoping a rerun of CI would help.</p>\n</blockquote>",
        "id": 477027238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729009614
    },
    {
        "content": "<p>rahulchaphalkar <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#issuecomment-2420227161\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>:</p>\n<blockquote>\n<p>@abrown can you take a look</p>\n</blockquote>",
        "id": 477499478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729188987
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234#pullrequestreview-2383371152\">PR review</a>.</p>",
        "id": 478156143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729547384
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9234\">PR #9234</a>.</p>",
        "id": 478158319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729548297
    }
]