[
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836\">PR #3836</a>.</p>",
        "id": 272870106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645565860
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836\">PR #3836</a> from <code>wasm-mutate-fuzz-targets</code> to <code>main</code>:</p>\n<blockquote>\n<p>There's definitely more to be done here but I think this is a good starting point.</p>\n<p>The big open question for the future in my mind is how this will integrate with the way we heavily rely on swarm testing for Wasmtime configuration. What's great about <code>wasm-mutate</code> is that the seed file <em>is</em> the Wasm, so you can just throw a bunch of interesting Wasm files in your corpus and start exploring some really interesting Wasm programs. But our swarm configuration relies on interpreting the start of the seed files as \"DNA\" for Wasmtime's configuration. If we do that, we lose the ability to easily add interesting Wasm programs to our corpus. Maybe we don't use swarm testing with <code>wasm-mutate</code>? And choose only N interesting points in the configuration space at which to test?</p>\n<p>Also we could basically have a <code>wasm-mutate</code> version of every fuzz target we have if we made our infra a little more generic and always used fuel to avoid infinite loops. That seems do-able but will require another overhaul of a lot of our infra, since it kind of assumes <code>wasm-smith</code> right now.</p>\n<p>Happy to brainstorm on these things, but I think solving them is something for the future.</p>\n</blockquote>",
        "id": 272870107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645565860
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836\">PR #3836</a> from <code>wasm-mutate-fuzz-targets</code> to <code>main</code>.</p>",
        "id": 272870850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645566324
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836#pullrequestreview-890476533\">PR review</a>.</p>",
        "id": 272881406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645572504
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836#pullrequestreview-890476533\">PR review</a>.</p>",
        "id": 272881407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645572504
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836#discussion_r812441566\">PR review comment</a>:</p>\n<blockquote>\n<p>Could wasmparser be updated elsewhere in wasmtime to ensure we've only got one at a time?</p>\n</blockquote>",
        "id": 272881408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645572504
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836\">PR #3836</a> from <code>wasm-mutate-fuzz-targets</code> to <code>main</code>.</p>",
        "id": 273000330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645644926
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3836\">PR #3836</a>.</p>",
        "id": 273005270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645647253
    }
]