[
    {
        "content": "<p>antonromanov1 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3263\">issue #3263</a>:</p>\n<blockquote>\n<p>Now we have such creation of a function in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/dominator_tree.rs\">unreachable_node test in dominator_tree.rs</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>let mut func = Function::new();\nlet block0 = func.dfg.make_block();\nlet v0 = func.dfg.append_block_param(block0, I32);\nlet block1 = func.dfg.make_block();\nlet block2 = func.dfg.make_block();\n\nlet mut cur = FuncCursor::new(&amp;mut func);\n\ncur.insert_block(block0);\ncur.ins().brnz(v0, block2, &amp;[]);\ncur.ins().trap(TrapCode::User(0));\n\ncur.insert_block(block1);\nlet v1 = cur.ins().iconst(I32, 1);\nlet v2 = cur.ins().iadd(v0, v1);\ncur.ins().jump(block0, &amp;[v2]);\n\ncur.insert_block(block2);\ncur.ins().return_(&amp;[v0]);\n</code></pre></div>\n\n<p>This is not very readable. Can we write a DSL with approximately such usage:</p>\n<div class=\"codehilite\"><pre><span></span><code>Function {\n    Block(0, p0: I32) {\n        INST(0, Opcode::Brnz).Args(p0).Target(2, &amp;[])\n        INST(1, Opcode::Trap).User(0)\n    }\n    Block(1) {\n        INST(2, Opcode::Iconst).Value(1)\n        INST(3, Opcode::Iadd).Args(p0, 2)\n        INST(4, Opcode::Jump).Target(0, &amp;[3])\n    }\n    Block(2) {\n        INST(5, Opcode::Return).Args(p0)\n    }\n}\n</code></pre></div>\n\n<p>?</p>\n</blockquote>",
        "id": 251227796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630329624
    }
]