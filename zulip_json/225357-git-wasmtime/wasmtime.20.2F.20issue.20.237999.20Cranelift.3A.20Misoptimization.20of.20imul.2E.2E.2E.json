[
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">Issue #7999</a>.</p>",
        "id": 423574396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709029106
    },
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">Issue #7999</a>.</p>",
        "id": 423574397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709029106
    },
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">issue #7999</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">speed</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">11</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">imul_imm</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">256</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ireduce</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Compile reproducing test case with <code>opt_level=speed</code>.</li>\n</ul>\n<h3>Expected Results</h3>\n<p>The function unconditionally returns 0.</p>\n<h3>Actual Results</h3>\n<p>The function gets optimized to returning the argument:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">11</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.105 and 36fb62ca3bea7dd1456f12ead03084e2ceb48cda</p>\n<p>Operating system: N/A</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Found by @cbeuw in <a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/issues/1460\">https://github.com/rust-lang/rustc_codegen_cranelift/issues/1460</a>. Replacing <code>i8</code> with <code>i32</code> returns the correct result.</p>\n</blockquote>",
        "id": 423574412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709029112
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999#issuecomment-1966455572\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">issue #7999</a>:</p>\n<blockquote>\n<p>Thanks for the bug report!</p>\n<p>Might be related to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">https://github.com/bytecodealliance/wasmtime/pull/7882</a> -- cc @elliott</p>\n</blockquote>",
        "id": 423597041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709037520
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999#issuecomment-1967300723\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">issue #7999</a>:</p>\n<blockquote>\n<p>Is this perhaps the wrong reduction? With rustc this code also optimizes to <code>return 0</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[no_mangle]</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"n\">a</span>: <span class=\"kt\">u8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u8</span> <span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">u64</span>::<span class=\"n\">from</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"mi\">256</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">u8</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>although I fear I may be missing something subtle by accident</p>\n</blockquote>",
        "id": 423665835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709056554
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999#issuecomment-1967309372\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">issue #7999</a>:</p>\n<blockquote>\n<p>Doing a little bit of debugging, reverting #7882 doesn't fix the problem, but reverting #7719 as well does. Here's the assembly before reverting #7719:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"w\">   </span><span class=\"err\">0:</span><span class=\"w\">   </span><span class=\"err\">55</span><span class=\"w\">                      </span><span class=\"nf\">pushq</span><span class=\"w\">   </span><span class=\"nv\">%rbp</span>\n<span class=\"w\">   </span><span class=\"err\">1:</span><span class=\"w\">   </span><span class=\"err\">48</span><span class=\"w\"> </span><span class=\"err\">89</span><span class=\"w\"> </span><span class=\"nf\">e5</span><span class=\"w\">                </span><span class=\"no\">movq</span><span class=\"w\">    </span><span class=\"nv\">%rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">%rbp</span>\n<span class=\"w\">   </span><span class=\"err\">4:</span><span class=\"w\">   </span><span class=\"err\">48</span><span class=\"w\"> </span><span class=\"err\">89</span><span class=\"w\"> </span><span class=\"nf\">f8</span><span class=\"w\">                </span><span class=\"no\">movq</span><span class=\"w\">    </span><span class=\"nv\">%rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">%rax</span>\n<span class=\"w\">   </span><span class=\"err\">7:</span><span class=\"w\">   </span><span class=\"err\">48</span><span class=\"w\"> </span><span class=\"err\">89</span><span class=\"w\"> </span><span class=\"nf\">ec</span><span class=\"w\">                </span><span class=\"no\">movq</span><span class=\"w\">    </span><span class=\"nv\">%rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">%rsp</span>\n<span class=\"w\">   </span><span class=\"nl\">a:</span><span class=\"w\">   </span><span class=\"err\">5</span><span class=\"nf\">d</span><span class=\"w\">                      </span><span class=\"no\">popq</span><span class=\"w\">    </span><span class=\"nv\">%rbp</span>\n<span class=\"w\">   </span><span class=\"nl\">b:</span><span class=\"w\">   </span><span class=\"nf\">c3</span><span class=\"w\">                      </span><span class=\"no\">retq</span>\n</code></pre></div>\n<p>And here's the output after reverting both #7882 and #7719:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"w\">   </span><span class=\"err\">0:</span><span class=\"w\">   </span><span class=\"err\">55</span><span class=\"w\">                      </span><span class=\"nf\">pushq</span><span class=\"w\">   </span><span class=\"nv\">%rbp</span>\n<span class=\"w\">   </span><span class=\"err\">1:</span><span class=\"w\">   </span><span class=\"err\">48</span><span class=\"w\"> </span><span class=\"err\">89</span><span class=\"w\"> </span><span class=\"nf\">e5</span><span class=\"w\">                </span><span class=\"no\">movq</span><span class=\"w\">    </span><span class=\"nv\">%rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">%rbp</span>\n<span class=\"w\">   </span><span class=\"err\">4:</span><span class=\"w\">   </span><span class=\"err\">48</span><span class=\"w\"> </span><span class=\"err\">0</span><span class=\"nf\">f</span><span class=\"w\"> </span><span class=\"no\">b6</span><span class=\"w\"> </span><span class=\"no\">c7</span><span class=\"w\">             </span><span class=\"no\">movzbq</span><span class=\"w\">  </span><span class=\"nv\">%dil</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">%rax</span>\n<span class=\"w\">   </span><span class=\"err\">8:</span><span class=\"w\">   </span><span class=\"err\">48</span><span class=\"w\"> </span><span class=\"nf\">c1</span><span class=\"w\"> </span><span class=\"no\">e0</span><span class=\"w\"> </span><span class=\"mi\">08</span><span class=\"w\">             </span><span class=\"no\">shlq</span><span class=\"w\">    </span><span class=\"no\">$8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">%rax</span>\n<span class=\"w\">   </span><span class=\"nl\">c:</span><span class=\"w\">   </span><span class=\"err\">48</span><span class=\"w\"> </span><span class=\"err\">89</span><span class=\"w\"> </span><span class=\"nf\">ec</span><span class=\"w\">                </span><span class=\"no\">movq</span><span class=\"w\">    </span><span class=\"nv\">%rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nv\">%rsp</span>\n<span class=\"w\">   </span><span class=\"nl\">f:</span><span class=\"w\">   </span><span class=\"err\">5</span><span class=\"nf\">d</span><span class=\"w\">                      </span><span class=\"no\">popq</span><span class=\"w\">    </span><span class=\"nv\">%rbp</span>\n<span class=\"w\">  </span><span class=\"err\">10:</span><span class=\"w\">   </span><span class=\"nf\">c3</span><span class=\"w\">                      </span><span class=\"no\">retq</span>\n</code></pre></div>\n<p>I think there's an unexpected interaction of rules happening here, because in isolation the rules we have for <code>imul x, 0</code> and the rules introduced in #7719 for reordering <code>ireduce</code> and <code>extend</code> should be sufficient to rewrite this to moving <code>0</code> into <code>%rax</code>.</p>\n</blockquote>",
        "id": 423666916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709056885
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999#issuecomment-1967311631\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">issue #7999</a>:</p>\n<blockquote>\n<blockquote>\n<p>Actual Results</p>\n<p>The function gets optimized to returning the argument:</p>\n</blockquote>\n<p>Aha that's what I was missing, actually reading! Apologies!</p>\n</blockquote>",
        "id": 423667173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709056967
    },
    {
        "content": "<p>jameysharp closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7999\">issue #7999</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">speed</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">11</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">imul_imm</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">256</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ireduce</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Compile reproducing test case with <code>opt_level=speed</code>.</li>\n</ul>\n<h3>Expected Results</h3>\n<p>The function unconditionally returns 0.</p>\n<h3>Actual Results</h3>\n<p>The function gets optimized to returning the argument:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">11</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i8</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.105 and 36fb62ca3bea7dd1456f12ead03084e2ceb48cda</p>\n<p>Operating system: N/A</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Found by @cbeuw in <a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/issues/1460\">https://github.com/rust-lang/rustc_codegen_cranelift/issues/1460</a>. Replacing <code>i8</code> with <code>i32</code> returns the correct result.</p>\n</blockquote>",
        "id": 423734917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709087292
    }
]