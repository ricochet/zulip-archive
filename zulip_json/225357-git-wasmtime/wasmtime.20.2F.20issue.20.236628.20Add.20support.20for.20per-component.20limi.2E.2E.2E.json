[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628\">issue #6628</a>:</p>\n<blockquote>\n<p>That is, we should be able to reject allocation/instantiation for a component with more instances/tables/etc than a pre-configured limit, even when we actually have that much capacity in the pooling allocator.</p>\n</blockquote>",
        "id": 368638944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687453836
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628\">issue #6628</a>:</p>\n<blockquote>\n<p>That is, we should be able to reject allocation/instantiation for a component with more instances/tables/etc than a pre-configured limit, even when we actually have that much capacity in the pooling allocator.</p>\n</blockquote>",
        "id": 368638947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687453836
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628\">issue #6628</a>:</p>\n<blockquote>\n<p>That is, we should be able to reject allocation/instantiation for a component with more instances/tables/etc than a pre-configured limit, even when we actually have that much capacity in the pooling allocator.</p>\n</blockquote>",
        "id": 368638949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687453836
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628\">issue #6628</a>:</p>\n<blockquote>\n<p>That is, we should be able to reject allocation/instantiation for a component with more instances/tables/etc than a pre-configured limit, even when we actually have that much capacity in the pooling allocator.</p>\n</blockquote>",
        "id": 368638950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687453837
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628#issuecomment-1603029487\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628\">issue #6628</a>:</p>\n<blockquote>\n<p>This might exist in <code>InstancePre</code>, need to double check.</p>\n</blockquote>",
        "id": 368639088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687453873
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628#issuecomment-1603031688\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628\">issue #6628</a>:</p>\n<blockquote>\n<p>Either way, we should have typed errors for when you try to instantiate a component that lets you determine whether instantiation failed because there is not enough capacity for the component currently, or because the component is statically above the configured per-component limits on tables/memories/etc.</p>\n</blockquote>",
        "id": 368639536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687453966
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628#issuecomment-1607673463\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6628\">issue #6628</a>:</p>\n<blockquote>\n<p>Right now this <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2d34b4657aa5290948da9a07cb31764a12c12994/crates/wasmtime/src/module.rs#L583\">exists for modules</a> as <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2d34b4657aa5290948da9a07cb31764a12c12994/crates/runtime/src/instance/allocator.rs#L91-L95\"><code>InstanceAllocator::validate</code></a> and I think the solution here is \"just\" adding a component version of that. Note though that this is a compile-time check as opposed to a instantiation-time check, so you'd never run into a situation where a component could never be instantiated due to its limits. </p>\n<p>That being said I think a descriptive error here is still good to have, since even if a component fits within the limits configured it can still fail to instantiate and it'd be good to understand why.</p>\n</blockquote>",
        "id": 369736061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687791780
    }
]