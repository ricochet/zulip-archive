[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a> from <code>alexcrichton:pulley-in-wasmtime</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is the initial implementation of executing the Pulley<br>\ninterpreter from the <code>wasmtime</code> crate. This gives access to all of the<br>\n<code>wasmtime</code> crate's runtime APIs backed by execution of bytecode in<br>\nPulley. This builds on the previous PRs I've been making for support in<br>\nPulley to culminate in testing on CI in this PR. This PR handles some<br>\nfinal tidbits related to producing a runnable image that can be<br>\ninterpreted by the <code>wasmtime</code> crate such as:</p>\n<ul>\n<li>\n<p>Pulley compilation artifacts are no longer marked as natively<br>\n  executable, just read-only.</p>\n</li>\n<li>\n<p>Pulley compilation artifacts include wasm-to-array trampolines like<br>\n  normal platforms (removes a pulley special-case).</p>\n</li>\n<li>\n<p>Dispatch of host calls from Pulley to the Wasmtime runtime are<br>\n  implemented.</p>\n</li>\n<li>\n<p>Pulley's list of panicking wasm features is slimmed down as most are<br>\n  covered by \"this lowering isn't supported\" errors.</p>\n</li>\n<li>\n<p>Execution of wasm code now has an <code>if</code> to see whether Pulley is<br>\n  enabled within a <code>Store</code> or not.</p>\n</li>\n<li>\n<p>Traps and basic \"unwinding\" of the pulley stack are implemented (e.g.<br>\n  a \"pulley version\" of <code>setjmp</code> and <code>longjmp</code>, sort of)</p>\n</li>\n<li>\n<p>Halting the interpreter has been refactored to help shrink the size of<br>\n<code>ControlFlow&lt;Done&gt;</code> and handle metadata with each done state.</p>\n</li>\n</ul>\n<p>Some minor refactorings are also included here and there along with a<br>\nfew fixes here and there necessary to get tests passing.</p>\n<p>The next major part of this commit is updates to our <code>wast</code> test suite<br>\nand executing all <code>*.wast</code> files. Pulley is now executed by default for<br>\nall files as a new execution engine. This means that all platforms in CI<br>\nwill start executing Pulley tests. At this time almost all tests are<br>\nflagged as \"expected to fail\" but there are a small handful of<br>\nallow-listed tests which are expected to pass. This exact list will<br>\nchange over time as CLIF lowerings are implemented and the interpreter<br>\nis extended.</p>\n<p>Follow-up PRs will extend the testing strategy further such as:</p>\n<ul>\n<li>Extending <code>#[wasmtime_test]</code> to include Pulley in addition to Winch.</li>\n<li>Getting testing set up on CI for 32-bit platforms.</li>\n</ul>\n</blockquote>",
        "id": 486382850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733428487
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486382881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733428500
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#issuecomment-2521272965\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>:</p>\n<blockquote>\n<p>I'll note that this is in draft form as it currently is based on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9743\">https://github.com/bytecodealliance/wasmtime/pull/9743</a>. I'm going ahead and opening this up to see what CI has to say about this.</p>\n</blockquote>",
        "id": 486382933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733428524
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486385120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733429309
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486385868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733429622
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486388779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733430805
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#issuecomment-2521517450\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 486398504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733435090
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486403675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733437454
    },
    {
        "content": "<p><strong>alexcrichton</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a> as ready for review.</p>",
        "id": 486403689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733437461
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486403691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733437461
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486403692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733437461
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486403693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733437461
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486403726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733437481
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#issuecomment-2521593186\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>:</p>\n<blockquote>\n<p>@fitzgen ok should be rebased and updated, I believe s390x CI is failing but I think most of the rest should be passing. Once results come in I'll figure out how to best ignore s390x for now.</p>\n</blockquote>",
        "id": 486403806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733437519
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486407686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733439250
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486408459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733439636
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#pullrequestreview-2483191953\">PR review</a>.</p>",
        "id": 486409236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733440043
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1872282757\">PR review comment</a>:</p>\n<blockquote>\n<p>I've added this to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9747\">https://github.com/bytecodealliance/wasmtime/issues/9747</a></p>\n</blockquote>",
        "id": 486409237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733440043
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486410960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733440969
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#pullrequestreview-2485610444\">PR review</a>:</p>\n<blockquote>\n<p>Very nice! Super excited to see this progress!</p>\n<p>A few nitpicks and suggestions below, but nothing major</p>\n</blockquote>",
        "id": 486581987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873827103\">PR review comment</a>:</p>\n<blockquote>\n<p>Curious: why was this change needed?</p>\n</blockquote>",
        "id": 486581988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873846667\">PR review comment</a>:</p>\n<blockquote>\n<p>You could use <code>crate::runtime::Uninhabited</code> instead of defining it again <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> </p>\n</blockquote>",
        "id": 486581989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873834301\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we <code>#[cfg(feature = \"pulley\")]</code> this?</p>\n</blockquote>",
        "id": 486581990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873835288\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah okay, nvm about the last comment.</p>\n</blockquote>",
        "id": 486581991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873851320\">PR review comment</a>:</p>\n<blockquote>\n<p>Minor comment addition since this is tricky code and all the other conditions have comments:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        // If the fault was at a location that was not marked as\n        // potentially trapping, then its not our problem.\n        let Some(trap) = code.lookup_trap_code(text_offset) else {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486581992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873845360\">PR review comment</a>:</p>\n<blockquote>\n<p>Nice.</p>\n</blockquote>",
        "id": 486581993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873848985\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this is slightly out-of-sync now that there is a <code>TrapTest</code> enum?</p>\n</blockquote>",
        "id": 486581994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873854770\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// must all be valid for this wasm function call to proceed. For example\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486581995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873828168\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        // If this target is Pulley then flag the text section as not needing the\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486581996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873872733\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// provided in registers according to Pulley's ABI.\n    ///\n    /// # Unsafety\n    ///\n    /// All the same unsafety as `call` and additiionally, you must\n    /// invoke `call_run` and then `call_end` after calling `call_start`.\n    /// If you don't want to wrangle these invocations, use `call` instead\n    /// of `call_{start,run,end}`.\n    pub unsafe fn call_start&lt;'a&gt;(&amp;'a mut self, args: &amp;[Val]) {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486581997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873852008\">PR review comment</a>:</p>\n<blockquote>\n<p>Similarly, nitpick-y regrouping of code and comment so that the comment covers the whole okay-this-really-is-a-wasm-trap path:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        // If all that passed then this is indeed a wasm trap, so return the\n        // `jmp_buf` passed to `wasmtime_longjmp` to resume.\n        self.set_jit_trap(regs, faulting_addr, trap);\n        TrapTest::Trap {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486581998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873859283\">PR review comment</a>:</p>\n<blockquote>\n<p>Possible bikeshed: Maybe rename <code>Cranelift</code> to <code>CraneliftNative</code> and <code>Pulley</code> to <code>CraneliftPulley</code>? In addition to clarifying the native code execution bits, this would future proof for a possible <code>WinchPulley</code> in the future.</p>\n</blockquote>",
        "id": 486581999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873873993\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// executed.\n    ///\n    /// # Unsafety\n    ///\n    /// In addition to all the invariants documented for `call`, you\n    /// may only invoke `call_run` after invoking `call_start` to\n    /// initialize this call's arguments.\n    pub unsafe fn call_run(&amp;mut self, pc: NonNull&lt;u8&gt;) -&gt; DoneReason&lt;()&gt; {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486582000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873862049\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe we should</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">TestConfit</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">custom_page_sizes</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">custom_page_sizes</span><span class=\"p\">.</span><span class=\"n\">unwrap_or</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// etc...</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>if we are doing this dance every time we access these fields</p>\n</blockquote>",
        "id": 486582001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873880200\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            id: u8,\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486582003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873874526\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// Peforms the tail end of [`Vm::call`] by returning the values as\n    /// determined by `rets` according to Pulley's ABI.\n    ///\n    /// # Unsafety\n    ///\n    /// In addition to the invariants documented for `call`, this may\n    /// only be called after `call_run`.\n    pub unsafe fn call_end&lt;'a&gt;(\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 486582004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733513606
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#pullrequestreview-2485728505\">PR review</a>.</p>",
        "id": 486583805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733514375
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873896988\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah this is due to some other rule only accepting 32 or 64-bit inputs which causes ISLE to panic as something not a partial constructor. Basically tests panic unless this is here, so a future refactoring will need to flesh out more lowering rules for 8/16-bit types.</p>\n</blockquote>",
        "id": 486583808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733514375
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#pullrequestreview-2485731041\">PR review</a>.</p>",
        "id": 486583944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733514457
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744#discussion_r1873898520\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks I always forget what we have, where it's defined, and what it's called heh. </p>\n</blockquote>",
        "id": 486583945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733514458
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486585358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733515084
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486585384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733515094
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486586526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733515570
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486586528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733515570
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9744\">PR #9744</a>.</p>",
        "id": 486591244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733517607
    }
]