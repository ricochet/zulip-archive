[
    {
        "content": "<p>ArtBlnd <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1282955279\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>I need to make test for float to vec. xor operation may generate incorrect code because current xor implementation does use <code>vector_all_ones</code> which will flip all unused bits. </p>\n</blockquote>",
        "id": 304833608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666124349
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1282955279\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>I need to make test for float to vec. xor operation may generate incorrect code because current xor implementation does use <code>vector_all_ones</code> which will flip all unused bits. </p>\n<p>I am finding a efficient  way to generate single slot bit mask. </p>\n</blockquote>",
        "id": 304833713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666124400
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1282955279\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>first of all, I need to make test for float to vec to check that unused bits are filtered out. xor operation may generate incorrect code because current xor implementation does use <code>vector_all_ones</code> which will flip all unused bits. </p>\n<p>I am finding a efficient  way to generate single slot bit mask. </p>\n</blockquote>",
        "id": 304833843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666124442
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1282955279\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>first of all, I need to make test for float to vec to check that unused bits are filtered out. xor operation may generate incorrect code because current xor implementation does use <code>vector_all_ones</code> which will flip all unused bits. </p>\n<p>so I am finding a efficient  way to generate single slot bit mask. (not using load ops. that will need extra stack allocations.)</p>\n</blockquote>",
        "id": 304833939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666124490
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1282955279\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>first of all, I need to make test for float to vec to check that unused bits are filtered out. bnot operation may generate incorrect code because current bnot implementation does use <code>vector_all_ones</code> which will flip all unused bits. </p>\n<p>so I am finding a efficient  way to generate single slot bit mask. (not using load ops. that will need extra stack allocations.)</p>\n</blockquote>",
        "id": 304834133,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666124556
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1282955279\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>first of all, I need to make test for float to vec to check that unused bits are filtered out. bnot operation may generate incorrect code because current bnot implementation does use <code>vector_all_ones</code> which will flip all unused bits. </p>\n<p>so I am finding a efficient  way to generate single slot bit mask. (not using load ops. that will need extra stack allocations.)</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036/files#diff-4fb30cf23cc13cba2f11079dc6d0305f972170585aab27b27d143c2f3252e4faR1270-R1274\">https://github.com/bytecodealliance/wasmtime/pull/5036/files#diff-4fb30cf23cc13cba2f11079dc6d0305f972170585aab27b27d143c2f3252e4faR1270-R1274</a></p>\n</blockquote>",
        "id": 304834166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666124571
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1282955279\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>first of all, I need to make test for float to vec to check that unused bits are filtered out. bnot operation may generate incorrect code because current bnot implementation does use <code>vector_all_ones</code> which will flip all unused bits. means it has side-effect.</p>\n<p>so I am finding a efficient  way to generate single slot bit mask. (not using load ops. that will need extra stack allocations.)</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036/files#diff-4fb30cf23cc13cba2f11079dc6d0305f972170585aab27b27d143c2f3252e4faR1270-R1274\">https://github.com/bytecodealliance/wasmtime/pull/5036/files#diff-4fb30cf23cc13cba2f11079dc6d0305f972170585aab27b27d143c2f3252e4faR1270-R1274</a></p>\n</blockquote>",
        "id": 304835035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666124954
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1283000303\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>You can tag me once you're ready for review; I glanced over this and it made sense.</p>\n</blockquote>",
        "id": 304840346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666126969
    },
    {
        "content": "<p>ArtBlnd <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1287882662\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>I think there is no cheap way to generate masks...</p>\n</blockquote>",
        "id": 305570177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666464623
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1287882662\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>I think there is no cheap way to generate masks...</p>\n<p>maybe we need to truncate all unused vector slots when using <code>scalar_to_vector</code></p>\n</blockquote>",
        "id": 305570239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666464697
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1287882662\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>I think there is no cheap way to generate masks...</p>\n<p>maybe we need to truncate all unused vector slots when using <code>scalar_to_vector</code><br>\nI'll make seperate PR for this task.</p>\n</blockquote>",
        "id": 305570383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666464840
    },
    {
        "content": "<p>ArtBlnd edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1287882662\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>I think there is no cheap way to generate masks...</p>\n<p><del>maybe we need to truncate all unused vector slots when using <code>scalar_to_vector</code></del><br>\n<del>I'll make seperate PR for this task.</del></p>\n<p>nevermind. scalar_to_vector is using movss, movsd.</p>\n</blockquote>",
        "id": 305573777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666466130
    },
    {
        "content": "<p>ArtBlnd <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1287889690\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>@abrown I think its ready to review.</p>\n</blockquote>",
        "id": 305574705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666466546
    },
    {
        "content": "<p>ArtBlnd <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1301585990\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>sorry for the very late response for the review.</p>\n</blockquote>",
        "id": 307649562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667444178
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1310787470\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<p>@ArtBlnd, I believe the CI failure here is due to some rustc changes between when this PR was open and now. Can you rebase this PR and see if that resolves things?</p>\n</blockquote>",
        "id": 309061077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668108150
    },
    {
        "content": "<p>ArtBlnd <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036#issuecomment-1319515908\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5036\">issue #5036</a>:</p>\n<blockquote>\n<blockquote>\n<p>@ArtBlnd, I believe the CI failure here is due to some rustc changes between when this PR was open and now. Can you rebase this PR and see if that resolves things?</p>\n</blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 310744948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668744317
    }
]