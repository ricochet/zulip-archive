[
    {
        "content": "<p>mchesser opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold, improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"err\">```</span><span class=\"nf\">asm</span><span class=\"w\"></span>\n<span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and uses heavy cold annotations).</p>\n</blockquote>",
        "id": 292360106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659933638
    },
    {
        "content": "<p>mchesser labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold, improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"err\">```</span><span class=\"nf\">asm</span><span class=\"w\"></span>\n<span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and uses heavy cold annotations).</p>\n</blockquote>",
        "id": 292360107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659933638
    },
    {
        "content": "<p>mchesser labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold, improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"err\">```</span><span class=\"nf\">asm</span><span class=\"w\"></span>\n<span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and uses heavy cold annotations).</p>\n</blockquote>",
        "id": 292360108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659933638
    },
    {
        "content": "<p>mchesser edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold, improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"err\">```</span><span class=\"nf\">asm</span><span class=\"w\"></span>\n<span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and heavily uses cold annotations).</p>\n</blockquote>",
        "id": 292360202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659933742
    },
    {
        "content": "<p>mchesser edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold (#4636), improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"err\">```</span><span class=\"nf\">asm</span><span class=\"w\"></span>\n<span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and heavily uses cold annotations).</p>\n</blockquote>",
        "id": 292360218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659933775
    },
    {
        "content": "<p>mchesser edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold (#4636), improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and heavily uses cold annotations).</p>\n</blockquote>",
        "id": 292360227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659933787
    },
    {
        "content": "<p>mchesser edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold (#4636), improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and heavily uses cold annotations).</p>\n</blockquote>",
        "id": 292361081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659935002
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4635\">issue #4635</a>:</p>\n<blockquote>\n<p>During lowering Cranelift may generate additional blocks to handle moves that conceptually occur on edges. The block ordering code treats these blocks the same as ordinary blocks, irrespective of whether they are associated with a cold block. This means that edges from a cold block can cause additional code to be inserted in the hot path.</p>\n<p>For example, consider the following IL:</p>\n<div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>function %test_cold(i64, i64, i64, i64) -&gt; i64 {\nblock0(v0: i64, v1: i64, v2: i64, v3: i64):\n    brz v0, block2\n    jump block1\n\nblock1:\n    v10 = iadd.i64 v0, v2\n    jump block3(v10)\n\nblock2 cold:\n    v20 = iadd.i64 v1, v3\n    brnz v20, block3(v20)\n    jump block4(v3)\n\nblock3(v30: i64):\n    v34 = iadd.i64 v30, v1\n    jump block4(v34)\n\nblock4(v40: i64):\n    return v40\n}\n</code></pre></div>\n<p>Currently Cranelift emits the following (annotated x86-64 code):</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x28</span><span class=\"w\">        </span><span class=\"c1\">; .block2</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x1a</span><span class=\"w\">        </span><span class=\"c1\">; .block1</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x20</span><span class=\"w\">        </span><span class=\"c1\">; .block4</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block4:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x1d</span><span class=\"w\">        </span><span class=\"c1\">; .block3</span>\n\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x12</span><span class=\"w\">        </span><span class=\"c1\">; .block2_to_block4_edge</span>\n</code></pre></div>\n<p>Modifying the lowering stage to mark edge blocks as cold if either the predecessor or successor block is cold (#4636), improves code generation:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nl\">.block0:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">push</span><span class=\"w\">    </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">je</span><span class=\"w\">      </span><span class=\"mi\">0x1b</span><span class=\"w\">  </span><span class=\"c1\">; .block2</span>\n\n<span class=\"nl\">.block1:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdx</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block3:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n\n<span class=\"na\">.block4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">pop</span><span class=\"w\">     </span><span class=\"no\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">ret</span><span class=\"w\"></span>\n\n<span class=\"nl\">.block2:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">add</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">test</span><span class=\"w\">    </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rdi</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jne</span><span class=\"w\">     </span><span class=\"mi\">0x10</span><span class=\"w\">      </span><span class=\"c1\">; .block3</span>\n\n<span class=\"nl\">.block2_to_block4_edge:</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">mov</span><span class=\"w\">     </span><span class=\"no\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nf\">jmp</span><span class=\"w\">     </span><span class=\"mi\">0x13</span><span class=\"w\">      </span><span class=\"c1\">; .block4</span>\n</code></pre></div>\n<p>This provided significant runtime speedups (~11%) for my code (which is severely frontend bound and heavily uses cold annotations).</p>\n</blockquote>",
        "id": 292527234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660021559
    }
]