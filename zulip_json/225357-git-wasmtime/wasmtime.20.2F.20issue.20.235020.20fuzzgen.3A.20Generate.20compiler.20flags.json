[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1268494798\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:meta\", \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 302471622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664980799
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1273717975\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<p>This PR had some performance issues:</p>\n<ul>\n<li>\n<p>The regalloc checker started consuming a bunch of time (around 45%) so we now try to minimize runs with it (10% with the current iteration).</p>\n</li>\n<li>\n<p>I've also had to limit the amount of runs that we allow, at some point the fuzzer decided that spending 100% of the time in the interpreter was a good idea, and started generating huge inputs, that were in the order of 20k runs each. (up to 130k!)</p>\n</li>\n</ul>\n<p>execs/s seems way better than before, which is nice.</p>\n<p>And for those who are interested, here's a flamegraph of where we spend time. This is about 1min at 1Khz around 190k inputs into my normal benchmark run:</p>\n<p>![flamegraph all](<a href=\"https://user-images.githubusercontent.com/1357143/194936815-38ab0c4c-211c-4828-95fc-ad63e9f5ba74.svg\">https://user-images.githubusercontent.com/1357143/194936815-38ab0c4c-211c-4828-95fc-ad63e9f5ba74.svg</a>)</p>\n</blockquote>",
        "id": 303314046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665429554
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1273717975\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<p>This PR had some performance issues:</p>\n<ul>\n<li>\n<p>The regalloc checker started consuming a bunch of time (around 45%) so we now try to minimize runs with it (10% with the current iteration).</p>\n</li>\n<li>\n<p>I've also had to limit the amount of runs that we allow, at some point the fuzzer decided that spending 100% of the time in the interpreter was a good idea, and started generating huge inputs, that were in the order of 20k runs each. (up to 130k!)</p>\n</li>\n</ul>\n<p>execs/s seems way better than before, which is nice.</p>\n<p>And for those who are interested, here's a flamegraph of where we spend time. This is about 2min at 1Khz around 190k inputs into my normal benchmark run:</p>\n<p>![flamegraph all](<a href=\"https://user-images.githubusercontent.com/1357143/194936815-38ab0c4c-211c-4828-95fc-ad63e9f5ba74.svg\">https://user-images.githubusercontent.com/1357143/194936815-38ab0c4c-211c-4828-95fc-ad63e9f5ba74.svg</a>)</p>\n</blockquote>",
        "id": 303314194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665429615
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1273717975\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<p>This PR had some performance issues:</p>\n<ul>\n<li>\n<p>The regalloc checker started consuming a bunch of time (around 45%) so we now try to minimize runs with it (10% with the current iteration).</p>\n</li>\n<li>\n<p>I've also had to limit the amount of runs that we allow, at some point the fuzzer decided that spending 100% of the time in the interpreter was a good idea, and started generating huge inputs, that were in the order of 20k runs each. (up to 130k!)</p>\n</li>\n</ul>\n<p>execs/s seems way better than before, which is nice.</p>\n<p>And for those who are interested, here's a flamegraph of where we spend time. This is about 2min at 1Khz around 190k inputs into my normal benchmark run:</p>\n<p>![flamegraph all](<a href=\"https://user-images.githubusercontent.com/1357143/194936815-38ab0c4c-211c-4828-95fc-ad63e9f5ba74.svg\">https://user-images.githubusercontent.com/1357143/194936815-38ab0c4c-211c-4828-95fc-ad63e9f5ba74.svg</a>)</p>\n<p>Edit: I should note, this is all on top of #5034 </p>\n</blockquote>",
        "id": 303314473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665429777
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1281506641\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<p>I've given this one round of fuzzing on AArch64 and x86, and it found the two issues with <code>iconst</code>, one has already been fixed in  #5061 and I'm working on removing <code>iconst.i128</code>, once that is merged I'll give this another round of fuzzing and if everything goes right we should be able to merge this.</p>\n</blockquote>",
        "id": 304560114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666041433
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1286162493\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<p>@cfallin What do you think about merging this with the <code>use_egraphs</code> flag commented out and enabling that on a separate PR?</p>\n<p>It's getting a bit annoying having to rebase my other work on this PR just to fuzz it. I've fuzzed this for about an hour on both AArch64 and x86 without <code>use_egraphs</code> and it seems stable.</p>\n</blockquote>",
        "id": 305239537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666300575
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1286168777\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<p>Oh, for sure, I didn't know we were waiting on something here; sorry! I was waiting for your go-ahead to merge. FWIW the PR is still marked as a draft; go ahead and transition it to \"Ready for review\" when you want me to merge.</p>\n<p>I actually think maybe it's fine to include <code>use_egraphs</code>; better to get the fuzzbugs coming sooner than later, and I'm happy to take them as they come in. But I'm open to the other approach if you think otherwise.</p>\n</blockquote>",
        "id": 305240444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666300942
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1286237708\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<blockquote>\n<p>Oh, for sure, I didn't know we were waiting on something here; sorry! <br>\nI wasn't really, I just got a bit annoyed today at having to do a rebase for the third time, that's where that suggestion came from!</p>\n</blockquote>\n<p>I'm okay with merging this as is and letting fuzzgen report issues as we go along.</p>\n</blockquote>",
        "id": 305250129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666305663
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020#issuecomment-1286237708\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5020\">issue #5020</a>:</p>\n<blockquote>\n<blockquote>\n<p>Oh, for sure, I didn't know we were waiting on something here; sorry! </p>\n</blockquote>\n<p>I wasn't really, I just got a bit annoyed today at having to do a rebase for the third time, that's where that suggestion came from!</p>\n<p>I'm okay with merging this as is and letting ossfuzz report issues as we go along.</p>\n</blockquote>",
        "id": 305250168,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666305684
    }
]