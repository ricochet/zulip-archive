[
    {
        "content": "<p>bkolobara opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Hi everyone,</p>\n<p>I need help understanding a Cranelift panic when translating a WASM module with <a href=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.FuncTranslator.html#method.translate\" title=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.FuncTranslator.html#method.translate\">FuncTranslator::translate</a>:</p>\n<div class=\"codehilite\"><pre><span></span>(module\n  (func $one (result i32)\n      i32.const 42)\n  (func $add (param $p1 i32) (param $p2 i32) (result i32)\n      local.get $p1\n      local.get $p2\n      i32.add)\n  (export &quot;add&quot; (func $add)))\n</pre></div>\n\n\n<p>When calling translate on this 2 functions the first one works as expected, but the second call panics with: <code>thread 'main' panicked at 'variable Variable(0) is used but its type has not been declared', /Users/bkolobara/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.62.0/src/frontend.rs:283:17</code></p>\n<p>I have spent a lot of time trying to figure out what's going on here, but just can't get to the bottom of it. What type declaration is missing here?</p>\n</blockquote>",
        "id": 194450626,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587134582
    },
    {
        "content": "<p>bkolobara edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Hi everyone,</p>\n<p>I need help understanding a Cranelift panic when translating a WASM module with <a href=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.FuncTranslator.html#method.translate\" title=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.FuncTranslator.html#method.translate\">FuncTranslator::translate</a>:</p>\n<div class=\"codehilite\"><pre><span></span>(module\n  (func $one (result i32)\n    i32.const 42)\n  (func $add (param $p1 i32) (param $p2 i32) (result i32)\n    (i32.add\n      (get_local $p1)\n      (get_local $p2)))\n  (export &quot;add&quot; (func $add)))\n</pre></div>\n\n\n<p>When calling translate on this 2 functions the first one works as expected, but the second call panics with: <code>thread 'main' panicked at 'variable Variable(0) is used but its type has not been declared', /Users/bkolobara/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.62.0/src/frontend.rs:283:17</code></p>\n<p>I have spent a lot of time trying to figure out what's going on here, but just can't get to the bottom of it. What type declaration is missing here?</p>\n</blockquote>",
        "id": 194462545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587139244
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615343834\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615343834\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Are you using <code>module_translator::translate_module</code>? There is a lot of module-level stuff in there that might need to happen.</p>\n</blockquote>",
        "id": 194466521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587141119
    },
    {
        "content": "<p>bkolobara <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615380211\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615380211\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>I use <a href=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/fn.translate_module.html\" title=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/fn.translate_module.html\">cranelift_wasm::translate_module()</a> and then forward the returned <a href=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.ModuleTranslationState.html\" title=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.ModuleTranslationState.html\">ModuleTranslationState</a> to <code>FuncTranslator::translate()</code>.</p>\n</blockquote>",
        "id": 194476634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587145761
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615387866\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615387866\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> Can you post a <code>#[test]</code> snippet so that I can try to reproduce? And maybe the full backtrace?</p>\n</blockquote>",
        "id": 194478979,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587146769
    },
    {
        "content": "<p>bkolobara <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615407293\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615407293\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Thanks @abrown for helping me out. I managed to figure out what the issue was.</p>\n<p>When calling <code>FuncTranslator::translate()</code> I pass a context (created with <code>let mut context = cranelift_codegen::Context::new();</code>) to it, but I never assigned a signature to the function in the context.</p>\n<p>I was missing a <code>context.func.signature = ...</code> before the call to <code>translate()</code>. What really confused me is that it worked with functions that only have a return types.</p>\n</blockquote>",
        "id": 194484331,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587149454
    },
    {
        "content": "<p>bkolobara closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Hi everyone,</p>\n<p>I need help understanding a Cranelift panic when translating a WASM module with <a href=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.FuncTranslator.html#method.translate\" title=\"https://docs.rs/cranelift-wasm/0.62.0/cranelift_wasm/struct.FuncTranslator.html#method.translate\">FuncTranslator::translate</a>:</p>\n<div class=\"codehilite\"><pre><span></span>(module\n  (func $one (result i32)\n    i32.const 42)\n  (func $add (param $p1 i32) (param $p2 i32) (result i32)\n    (i32.add\n      (get_local $p1)\n      (get_local $p2)))\n  (export &quot;add&quot; (func $add)))\n</pre></div>\n\n\n<p>When calling translate on this 2 functions the first one works as expected, but the second call panics with: <code>thread 'main' panicked at 'variable Variable(0) is used but its type has not been declared', /Users/bkolobara/.cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-frontend-0.62.0/src/frontend.rs:283:17</code></p>\n<p>I have spent a lot of time trying to figure out what's going on here, but just can't get to the bottom of it. What type declaration is missing here?</p>\n</blockquote>",
        "id": 194484332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587149454
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615412635\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615412635\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Ha, yes, that is a bit tricky. I do see that <code>translate</code> has documentation about requiring a name and signature but it might not be clear enough. What do you think about adding an <code>assert</code> or <code>debug_assert</code> somewhere to make sure all the requirements are met and, if not, fail with a more descriptive message?</p>\n</blockquote>",
        "id": 194485853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587150178
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615412635\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615412635\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Ha, yes, that is a bit tricky. I do see that <code>translate</code> has documentation about requiring a name and signature but it might not be clear enough--and easy to overlook in any case. What do you think about adding an <code>assert</code> or <code>debug_assert</code> somewhere to make sure all the requirements are met and, if not, fail with a more descriptive message?</p>\n</blockquote>",
        "id": 194485916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587150204
    },
    {
        "content": "<p>bkolobara <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615851918\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615851918\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Having an <code>assert</code> to check that the input requirements for <code>translate</code> are met would have saved me a lot of time. It would stop the error from propagating too deep, where it's becomes really hard to reason about it if you are not familiar with the internals of Cranelift.</p>\n</blockquote>",
        "id": 194540705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587210979
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615960488\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-615960488\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>I agree; do you want to add it or do you want me to?</p>\n</blockquote>",
        "id": 194566133,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587247825
    },
    {
        "content": "<p>bkolobara <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-616135433\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-616135433\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>I prefer you doing it :). Thanks a lot!</p>\n</blockquote>",
        "id": 194597810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587303079
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-618020881\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532#issuecomment-618020881\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1532\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1532\">Issue #1532</a>:</p>\n<blockquote>\n<p>Took a look at this today and it is a bit trickier than I initially thought: we can't just <code>debug_assert</code> that the <code>func.signature</code> has the same number of parameters as the Wasm function because we haven't read the Wasm function yet. And an empty signature (no params, no returns) doesn't mean it is unitialized; that is a perfectly valid signature. An alternative would be to change <code>Function::signature</code> to an <code>Option&lt;Signature&gt;</code> but that's a whole other can of worms. I'm going to leave this as-is until I think of a better option.</p>\n</blockquote>",
        "id": 194986949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587587180
    }
]