[
    {
        "content": "<p>Mrmaxmeier edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875\">Issue #2875</a>:</p>\n<blockquote>\n<p>I'm not sure what causes this, so I'll stick to a generic title..</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">1</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">heap0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v3</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">â‹Š</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">manifest</span><span class=\"o\">-</span><span class=\"n\">path</span><span class=\"o\">=</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">Cargo</span><span class=\"p\">.</span><span class=\"n\">toml</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.08</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">types</span>::<span class=\"n\">I32</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">types</span>::<span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1289</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n   <span class=\"mi\">0</span>: <span class=\"nc\">rust_begin_unwind</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">.]</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">3</span>: <span class=\"nc\">core</span>::<span class=\"n\">panicking</span>::<span class=\"n\">assert_failed</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">lower</span>::<span class=\"n\">lower_to_amode</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1289</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">5</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">lower</span>::<span class=\"n\">lower_insn_to_regs</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">4805</span>:<span class=\"mi\">21</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">lower</span>::<span class=\"o\">&lt;</span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">lower</span>::<span class=\"n\">LowerBackend</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">X64Backend</span><span class=\"o\">&gt;</span>::<span class=\"n\">lower</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">5755</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">lower</span>::<span class=\"n\">Lower</span><span class=\"o\">&lt;</span><span class=\"n\">I</span><span class=\"o\">&gt;</span>::<span class=\"n\">lower_clif_block</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">736</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">8</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">lower</span>::<span class=\"n\">Lower</span><span class=\"o\">&lt;</span><span class=\"n\">I</span><span class=\"o\">&gt;</span>::<span class=\"n\">lower</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">973</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">9</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">compile</span>::<span class=\"n\">compile</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">compile</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">30</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">X64Backend</span>::<span class=\"n\">compile_vcode</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">50</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>: <span class=\"o\">&lt;</span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">X64Backend</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">MachBackend</span><span class=\"o\">&gt;</span>::<span class=\"n\">compile_function</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">61</span>:<span class=\"mi\">21</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">12</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">context</span>::<span class=\"n\">Context</span>::<span class=\"n\">compile</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">197</span>:<span class=\"mi\">26</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">13</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">context</span>::<span class=\"n\">Context</span>::<span class=\"n\">compile_and_emit</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">137</span>:<span class=\"mi\">20</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>: <span class=\"nc\">clif_util</span>::<span class=\"n\">compile</span>::<span class=\"n\">handle_module</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">compile</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">81</span>:<span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">15</span>: <span class=\"nc\">clif_util</span>::<span class=\"n\">compile</span>::<span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">compile</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">52</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">16</span>: <span class=\"nc\">clif_util</span>::<span class=\"n\">main</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">130</span>:<span class=\"mi\">33</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>0.73.0</code> and current main</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>A quick <code>git bisect</code> takes me to cb48ea406eea535b3108853b7b680d9aa21eb14b. That's probably not too useful though.</p>\n</blockquote>",
        "id": 237486125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620217592
    },
    {
        "content": "<p>Mrmaxmeier <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875#issuecomment-832650275\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875\">Issue #2875</a>:</p>\n<blockquote>\n<p>Right, thanks! Seems like I'm missing a few <code>heap_addr</code>s in my codegen.<br>\nIt seems like 32bit pointers are supported / extended when not in the form of adds though.</p>\n</blockquote>",
        "id": 237486947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620218017
    },
    {
        "content": "<p>Mrmaxmeier edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875#issuecomment-832650275\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875\">Issue #2875</a>:</p>\n<blockquote>\n<p>Right, thanks! Seems like I'm missing a few <code>heap_addr</code>s in my codegen.<br>\nIt looks like 32bit pointers are supported / extended when not in the form of adds though.</p>\n</blockquote>",
        "id": 237487023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620218044
    },
    {
        "content": "<p>Mrmaxmeier <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875#issuecomment-832658286\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875\">Issue #2875</a>:</p>\n<blockquote>\n<p>Here's a crude patch that disables the special handling of non-i64 iadd pointers:</p>\n<p><div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/cranelift/codegen/src/isa/x64/lower.rs b/cranelift/codegen/src/isa/x64/lower.rs</span>\n<span class=\"gh\">index 6f675b923..ba00b8a61 100644</span>\n<span class=\"gd\">--- a/cranelift/codegen/src/isa/x64/lower.rs</span>\n<span class=\"gi\">+++ b/cranelift/codegen/src/isa/x64/lower.rs</span>\n<span class=\"gu\">@@ -1286,6 +1286,7 @@ fn lower_to_amode&lt;C: LowerCtx&lt;I = Inst&gt;&gt;(ctx: &amp;mut C, spec: InsnInput, offset: i</span>\n     // We now either have an add that we must materialize, or some other input; as well as the\n     // final offset.\n     if let Some(add) = matches_input(ctx, spec, Opcode::Iadd) {\n<span class=\"gi\">+        if ctx.output_ty(add, 0) == types::I64 {</span>\n         debug_assert_eq!(ctx.output_ty(add, 0), types::I64);\n         let add_inputs = &amp;[\n             InsnInput {\n<span class=\"gu\">@@ -1359,6 +1360,7 @@ fn lower_to_amode&lt;C: LowerCtx&lt;I = Inst&gt;&gt;(ctx: &amp;mut C, spec: InsnInput, offset: i</span>\n         };\n\n         return Amode::imm_reg_reg_shift(offset as u32, base, index, shift).with_flags(flags);\n<span class=\"gi\">+        }</span>\n     }\n\n     let input = put_input_in_reg(ctx, spec);\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 237488603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620218776
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875#issuecomment-832660963\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875\">Issue #2875</a>:</p>\n<blockquote>\n<p>Non-64bit pointers shouldn't work at all with <code>load</code> and <code>store</code> on 64bit systems. They are fine with <code>heap_load</code> and <code>heap_store</code> if the heap is itself declared as 32bit.</p>\n</blockquote>",
        "id": 237489207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620219032
    },
    {
        "content": "<p>Mrmaxmeier edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875#issuecomment-832650275\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875\">Issue #2875</a>:</p>\n<blockquote>\n<p>Right, thanks! <del>Seems like I'm missing a few <code>heap_addr</code>s in my (untested..) codegen.</del> I got the order of the store arguments wrong.<br>\nIt looks like 32bit pointers are supported / extended when not in the form of adds though.</p>\n</blockquote>",
        "id": 237489328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620219101
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875#issuecomment-833081230\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2875\">Issue #2875</a>:</p>\n<blockquote>\n<p>@Mrmaxmeier, thanks for this report! As @bjorn3 noted, the fundamental issue is the use of 32-bit pointer types here (on a 64-bit platform); rather than try to make it somehow work, I think the right answer is to reject the type mismatch. In particular, depending on the OS and system configuration, it might not even be possible to represent a valid pointer in 32 bits; e.g. with ASLR it's unlikely that a native pointer will be in the low 4GB of the address space. So such a pattern in CLIF is almost certainly a bug and I think it would be safer to detect it and panic explicitly.</p>\n<p>The developer-UX you experienced is certainly suboptimal -- we should have a proper panic/error message here that indicates what's wrong. I think we can use this issue to track that -- thanks!</p>\n</blockquote>",
        "id": 237575957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1620252737
    }
]