[
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a>:</p>\n<blockquote>\n<p>Found with some fuzzing, this module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result i64)\n      v128.const i64x2 -1 1\n      global.get 0\n      f64x2.replace_lane 0\n      i64x2.extract_lane 1\n  )\n\n  (global f64 (f64.const 1))\n  (export \"\" (func 0)))\n</code></pre></div>\n<p>leads to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">''</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"mi\">0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the result should be 1</p>\n<p>cc @jlb6740, @abrown </p>\n</blockquote>",
        "id": 250054937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629410470
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a>:</p>\n<blockquote>\n<p>Found with some fuzzing, this module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result i64)\n      v128.const i64x2 -1 1\n      global.get 0\n      f64x2.replace_lane 0\n      i64x2.extract_lane 1\n  )\n\n  (global f64 (f64.const 1))\n  (export \"\" (func 0)))\n</code></pre></div>\n<p>leads to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">''</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"mi\">0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the result should be 1</p>\n<p>cc @jlb6740, @abrown </p>\n</blockquote>",
        "id": 250054938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629410470
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a>:</p>\n<blockquote>\n<p>Found with some fuzzing, this module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result i64)\n      v128.const i64x2 -1 1\n      global.get 0\n      f64x2.replace_lane 0\n      i64x2.extract_lane 1\n  )\n\n  (global f64 (f64.const 1))\n  (export \"\" (func 0)))\n</code></pre></div>\n<p>leads to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">''</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"mi\">0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the result should be 1</p>\n<p>cc @jlb6740, @abrown </p>\n</blockquote>",
        "id": 250054939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629410470
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a>:</p>\n<blockquote>\n<p>Found with some fuzzing, this module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result i64)\n      v128.const i64x2 -1 1\n      global.get 0\n      f64x2.replace_lane 0\n      i64x2.extract_lane 1\n  )\n\n  (global f64 (f64.const 1))\n  (export \"\" (func 0)))\n</code></pre></div>\n<p>leads to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">''</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"mi\">0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the result should be 1</p>\n<p>cc @jlb6740, @abrown </p>\n</blockquote>",
        "id": 250054940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629410470
    },
    {
        "content": "<p>abrown assigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a>:</p>\n<blockquote>\n<p>Found with some fuzzing, this module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result i64)\n      v128.const i64x2 -1 1\n      global.get 0\n      f64x2.replace_lane 0\n      i64x2.extract_lane 1\n  )\n\n  (global f64 (f64.const 1))\n  (export \"\" (func 0)))\n</code></pre></div>\n<p>leads to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">''</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"mi\">0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the result should be 1</p>\n<p>cc @jlb6740, @abrown </p>\n</blockquote>",
        "id": 250145938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629479609
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a> (assigned to abrown):</p>\n<blockquote>\n<p>Found with some fuzzing, this module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result i64)\n      v128.const i64x2 -1 1\n      global.get 0\n      f64x2.replace_lane 0\n      i64x2.extract_lane 1\n  )\n\n  (global f64 (f64.const 1))\n  (export \"\" (func 0)))\n</code></pre></div>\n<p>leads to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">''</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"mi\">0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the result should be 1</p>\n<p>cc @jlb6740, @abrown </p>\n</blockquote>",
        "id": 251956235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630713039
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216#issuecomment-915376674\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a>:</p>\n<blockquote>\n<p>I chose this to poke around with <code>objdump</code> and the new module serialization format (not that I couldn't do this before, I just wanted to make sure it all worked), and it looks like the assembly is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">&gt;</span>:\n       <span class=\"mi\">0</span>: <span class=\"mi\">55</span><span class=\"w\">                            </span><span class=\"n\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"mi\">1</span>: <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                      </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"mi\">4</span>: <span class=\"nc\">f3</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">05</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">movdqu</span><span class=\"w\">  </span><span class=\"mi\">20</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rip</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"w\">  </span>#<span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">+</span><span class=\"mh\">0x20</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">c</span>: <span class=\"nc\">f2</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">47</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"w\">                </span><span class=\"n\">movsd</span><span class=\"w\">   </span><span class=\"mi\">48</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">11</span>: <span class=\"mi\">66</span><span class=\"w\"> </span><span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"n\">c6</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">          </span><span class=\"n\">pextrq</span><span class=\"w\">  </span><span class=\"cp\">$</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">18</span>: <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">f0</span><span class=\"w\">                      </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">b</span>: <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                      </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">e</span>: <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                            </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">f</span>: <span class=\"nc\">c3</span><span class=\"w\">                            </span><span class=\"n\">retq</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">20</span>: <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                         </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">22</span>: <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                         </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">24</span>: <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                         </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">26</span>: <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                         </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">28</span>: <span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                         </span><span class=\"n\">addl</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">a</span>: <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                         </span><span class=\"n\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">c</span>: <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                         </span><span class=\"n\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">e</span>: <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                         </span><span class=\"n\">addb</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">al</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>It looks like <code>xmm0</code> is reused for the <code>global.get</code> (or something about that) with some instructions possibly getting fused together. My guess is that there's a bug informing regalloc of used/defined registers somewhere which would fix this.</p>\n</blockquote>",
        "id": 252488610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631117624
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3216\">issue #3216</a> (assigned to abrown):</p>\n<blockquote>\n<p>Found with some fuzzing, this module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result i64)\n      v128.const i64x2 -1 1\n      global.get 0\n      f64x2.replace_lane 0\n      i64x2.extract_lane 1\n  )\n\n  (global f64 (f64.const 1))\n  (export \"\" (func 0)))\n</code></pre></div>\n<p>leads to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"o\">''</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"mi\">0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>but the result should be 1</p>\n<p>cc @jlb6740, @abrown </p>\n</blockquote>",
        "id": 261980681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637264892
    }
]