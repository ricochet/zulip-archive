[
    {
        "content": "<p>ifsheldon opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9932\">issue #9932</a>:</p>\n<blockquote>\n<p>Here is a simple example that has block my PR #9788 for weeks. </p>\n<p>In this PR, I need to use <code>wasm32-wasip2</code> target, which was not added here<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67\">https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67</a><br>\nwhich is used by CI.</p>\n<p>My PR added L69 to compile an example with <code>wasm32-wasip2</code> target like below:</p>\n<p>&lt;img width=\"1199\" alt=\"image\" src=\"<a href=\"https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38\">https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38</a>\" /&gt;</p>\n<p>This <code>create_rust_wasm(wasi wasm32-wasip2)</code> should have failed CI but not, because it didn't checked the return code of the command that was run.</p>\n<p>The command should have returned something like </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-p<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>--target<span class=\"w\"> </span>wasm32-wasip2\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>v0.0.0<span class=\"w\"> </span><span class=\"o\">(</span>/Users/zhiqiu/offline_code/opensource/wasmtime/examples/wasm<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0463<span class=\"o\">]</span>:<span class=\"w\"> </span>can<span class=\"err\">'</span>t<span class=\"w\"> </span>find<span class=\"w\"> </span>crate<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"sb\">`</span>std<span class=\"sb\">`</span>\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"sb\">`</span>aarch64-apple-ios<span class=\"sb\">`</span><span class=\"w\"> </span>target<span class=\"w\"> </span>may<span class=\"w\"> </span>not<span class=\"w\"> </span>be<span class=\"w\"> </span><span class=\"nv\">installed</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>help:<span class=\"w\"> </span>consider<span class=\"w\"> </span>downloading<span class=\"w\"> </span>the<span class=\"w\"> </span>target<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span>rustup<span class=\"w\"> </span>target<span class=\"w\"> </span>add<span class=\"w\"> </span>wasm32-wasip2<span class=\"sb\">`</span>\n\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>this<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0463<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>example-wasi-wasm<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"wasi\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>error\n</code></pre></div>\n<p>This error was not checked, so a test failed later, because this step didn't compiled a required manifest file (<code>wasi.wasm</code>).</p>\n<p>I don't know if this case is a special case or there are loopholes in CI in which CMake is used but it does not checked a return code of a command that is run.<br>\n</p>\n</blockquote>",
        "id": 492146011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736183522
    },
    {
        "content": "<p>ifsheldon edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9932\">issue #9932</a>:</p>\n<blockquote>\n<p>Here is a simple example that has blocked my PR #9788 for weeks. </p>\n<p>In this PR, I need to use <code>wasm32-wasip2</code> target, which was not added here<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67\">https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67</a><br>\nwhich is used by CI.</p>\n<p>My PR added L69 to compile an example with <code>wasm32-wasip2</code> target like below:</p>\n<p>&lt;img width=\"1199\" alt=\"image\" src=\"<a href=\"https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38\">https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38</a>\" /&gt;</p>\n<p>This <code>create_rust_wasm(wasi wasm32-wasip2)</code> should have failed CI but not, because it didn't checked the return code of the command that was run.</p>\n<p>The command should have returned something like </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-p<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>--target<span class=\"w\"> </span>wasm32-wasip2\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>v0.0.0<span class=\"w\"> </span><span class=\"o\">(</span>/Users/zhiqiu/offline_code/opensource/wasmtime/examples/wasm<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0463<span class=\"o\">]</span>:<span class=\"w\"> </span>can<span class=\"err\">'</span>t<span class=\"w\"> </span>find<span class=\"w\"> </span>crate<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"sb\">`</span>std<span class=\"sb\">`</span>\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"sb\">`</span>aarch64-apple-ios<span class=\"sb\">`</span><span class=\"w\"> </span>target<span class=\"w\"> </span>may<span class=\"w\"> </span>not<span class=\"w\"> </span>be<span class=\"w\"> </span><span class=\"nv\">installed</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>help:<span class=\"w\"> </span>consider<span class=\"w\"> </span>downloading<span class=\"w\"> </span>the<span class=\"w\"> </span>target<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span>rustup<span class=\"w\"> </span>target<span class=\"w\"> </span>add<span class=\"w\"> </span>wasm32-wasip2<span class=\"sb\">`</span>\n\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>this<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0463<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>example-wasi-wasm<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"wasi\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>error\n</code></pre></div>\n<p>This error was not checked, so a test later failed with misleading error messages, because this step didn't compiled a required manifest file (<code>wasi.wasm</code>).</p>\n<p>I don't know if this case is a special case or there are loopholes in CI in which CMake is used but it does not checked a return code of a command that is run.<br>\n</p>\n</blockquote>",
        "id": 492230726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736218058
    },
    {
        "content": "<p>ifsheldon edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9932\">issue #9932</a>:</p>\n<blockquote>\n<p>Here is a simple example that has blocked my PR #9788 for weeks. </p>\n<p>In this PR, I need to use <code>wasm32-wasip2</code> target, which was not added here<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67\">https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67</a><br>\nwhich is used by CI.</p>\n<p>My PR added L69 to compile an example with <code>wasm32-wasip2</code> target like below:</p>\n<p>&lt;img width=\"1199\" alt=\"image\" src=\"<a href=\"https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38\">https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38</a>\" /&gt;</p>\n<p>This <code>create_rust_wasm(wasi wasm32-wasip2)</code> should have failed CI but not, because it didn't checked the return code of the command that was run.</p>\n<p>The command should have returned something like </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-p<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>--target<span class=\"w\"> </span>wasm32-wasip2\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>v0.0.0<span class=\"w\"> </span><span class=\"o\">(</span>/Users/zhiqiu/offline_code/opensource/wasmtime/examples/wasm<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0463<span class=\"o\">]</span>:<span class=\"w\"> </span>can<span class=\"err\">'</span>t<span class=\"w\"> </span>find<span class=\"w\"> </span>crate<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"sb\">`</span>std<span class=\"sb\">`</span>\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"sb\">`</span>wasm32-wasip2<span class=\"sb\">`</span><span class=\"w\"> </span>target<span class=\"w\"> </span>may<span class=\"w\"> </span>not<span class=\"w\"> </span>be<span class=\"w\"> </span><span class=\"nv\">installed</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>help:<span class=\"w\"> </span>consider<span class=\"w\"> </span>downloading<span class=\"w\"> </span>the<span class=\"w\"> </span>target<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span>rustup<span class=\"w\"> </span>target<span class=\"w\"> </span>add<span class=\"w\"> </span>wasm32-wasip2<span class=\"sb\">`</span>\n\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>this<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0463<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>example-wasi-wasm<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"wasi\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>error\n</code></pre></div>\n<p>This error was not checked, so a test later failed with misleading error messages, because this step didn't compiled a required manifest file (<code>wasi.wasm</code>).</p>\n<p>I don't know if this case is a special case or there are loopholes in CI in which CMake is used but it does not checked a return code of a command that is run.<br>\n</p>\n</blockquote>",
        "id": 492354346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736270896
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9932\">issue #9932</a>:</p>\n<blockquote>\n<p>Here is a simple example that has blocked my PR #9788 for weeks. </p>\n<p>In this PR, I need to use <code>wasm32-wasip2</code> target, which was not added here<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67\">https://github.com/bytecodealliance/wasmtime/blob/fc7ef8d62e196df90522b26ed055bc21667cd19a/.github/actions/install-rust/action.yml#L67</a><br>\nwhich is used by CI.</p>\n<p>My PR added L69 to compile an example with <code>wasm32-wasip2</code> target like below:</p>\n<p>&lt;img width=\"1199\" alt=\"image\" src=\"<a href=\"https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38\">https://github.com/user-attachments/assets/f5780e6a-0e2e-4b67-a85c-b576ec431b38</a>\" /&gt;</p>\n<p>This <code>create_rust_wasm(wasi wasm32-wasip2)</code> should have failed CI but not, because it didn't checked the return code of the command that was run.</p>\n<p>The command should have returned something like </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>cargo<span class=\"w\"> </span>build<span class=\"w\"> </span>-p<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>--target<span class=\"w\"> </span>wasm32-wasip2\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>example-wasi-wasm<span class=\"w\"> </span>v0.0.0<span class=\"w\"> </span><span class=\"o\">(</span>/Users/zhiqiu/offline_code/opensource/wasmtime/examples/wasm<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0463<span class=\"o\">]</span>:<span class=\"w\"> </span>can<span class=\"err\">'</span>t<span class=\"w\"> </span>find<span class=\"w\"> </span>crate<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"sb\">`</span>std<span class=\"sb\">`</span>\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"sb\">`</span>wasm32-wasip2<span class=\"sb\">`</span><span class=\"w\"> </span>target<span class=\"w\"> </span>may<span class=\"w\"> </span>not<span class=\"w\"> </span>be<span class=\"w\"> </span><span class=\"nv\">installed</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>help:<span class=\"w\"> </span>consider<span class=\"w\"> </span>downloading<span class=\"w\"> </span>the<span class=\"w\"> </span>target<span class=\"w\"> </span>with<span class=\"w\"> </span><span class=\"sb\">`</span>rustup<span class=\"w\"> </span>target<span class=\"w\"> </span>add<span class=\"w\"> </span>wasm32-wasip2<span class=\"sb\">`</span>\n\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>this<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0463<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>example-wasi-wasm<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"wasi\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">1</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>error\n</code></pre></div>\n<p>This error was not checked, so a test later failed with misleading error messages, because this step didn't compiled a required manifest file (<code>wasi.wasm</code>).</p>\n<p>I don't know if this case is a special case or there are loopholes in CI in which CMake is used but it does not checked a return code of a command that is run.<br>\n</p>\n</blockquote>",
        "id": 492400633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736289714
    }
]