[
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1031#issuecomment-601993819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1031#issuecomment-601993819\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1031\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1031\">Issue #1031</a>:</p>\n<blockquote>\n<p>Cranelift (formerly Cretonne) is currently focusing on \"backend\" compilation, however if it is successful, we hope to extend it some day with high-level inter-procedural optimizations.</p>\n<p>While Cranelift includes the <code>cranelift-wasm</code> crate for translating wasm, it isn't sufficient for complete wasm compilation. One needs additional support, such as the support now provided by <a href=\"https://github.com/bytecodealliance/wasmtime/\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/\">Wasmtime</a>.</p>\n<p>It is theoretically possible that Cranelift could output to wasm some day, however it is not set up to do so right now.</p>\n<p>Cranelift is indeed meant to be useful in both JIT and AOT configurations. <a href=\"https://github.com/fastly/lucet/\" target=\"_blank\" title=\"https://github.com/fastly/lucet/\">Lucet</a> and <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift\" target=\"_blank\" title=\"https://github.com/bjorn3/rustc_codegen_cranelift\">rustc_codegen_cranelift</a> are examples of using it in an AOT configuration, and <a href=\"https://github.com/bytecodealliance/wasmtime/\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/\">Wasmtime</a> is an example of using it in a JIT configuration.</p>\n<p>If you have any further questions, please re-open this issue or file a new one!</p>\n</blockquote>",
        "id": 191328262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584765720
    },
    {
        "content": "<p>sunfishcode closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1031\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1031\">Issue #1031</a>:</p>\n<blockquote>\n<p>The readme says that cretonne is supposed to be a code generator for WebAssembly, but it's a bit unclear what that means, seeing how there doesn't appear to be anything to actually do with wasm in the code.</p>\n<ul>\n<li>I heard that cretonne is meant to have inter-procedural optimizations as another layer built over top. Is this true, and always going to be the case?</li>\n<li>Does another tool to translate wasm to cretonne IR need to be built in order to generate code for wasm?</li>\n<li>Is it in scope for cretonne to output <em>to</em> wasm, or is it only intended to output to native code? (e.g. will I be able to use cretonne as a pure-rust binaryen alternative?)</li>\n<li>Is cretonne meant to be useful in both JIT and AOT configurations?</li>\n</ul>\n<p>Preferably, the readme or documentation should be able to answer these questions.</p>\n</blockquote>",
        "id": 191328263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584765720
    }
]