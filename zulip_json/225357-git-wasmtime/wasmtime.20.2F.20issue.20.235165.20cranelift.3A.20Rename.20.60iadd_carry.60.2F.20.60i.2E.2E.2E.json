[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165\">issue #5165</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>While implementing <code>iadd_cout</code> for aarch64 I realized that the output of the carry bit depends on signedness of the operation. If we implement it as unsigned we only signal overflow on <code>0xFF</code> + 1, and if we implement it as signed we signal overflow on <code>0x7F</code> + 1</p>\n<p>Thus  should we rename this operation to <code>sadd_cout</code> to keep consistency with our other operations that depend on signedness (i.e. <code>sdiv</code>/<code>udiv</code>)? The operation seems to be signed based on the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/faeeed4fb94e03b5108940dd71f2b360f97d3983/cranelift/filetests/filetests/runtests/iaddcout.clif#L21\">existing test suite</a>.</p>\n<p>Does the existence of <code>sadd_cout</code> also imply that we should have <code>uadd_cout</code>?</p>\n<p>The same question applies for <code>iadd_carry</code>, but not for <code>iadd_cin</code>.</p>\n</blockquote>",
        "id": 307283552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667299003
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165#issuecomment-1298340205\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165\">issue #5165</a>:</p>\n<blockquote>\n<p>Makes sense. I would have expected iadd_cout to be unsigned. As the name carry is often used for unsigned overflow AFAIK. For example x86 has the carry and overflow flags for unsigned cq signed overflow.</p>\n<blockquote>\n<p>Does the existence of sadd_cout also imply that we should have uadd_cout?</p>\n</blockquote>\n<p>IMO yes there should be.</p>\n</blockquote>",
        "id": 307284508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667299438
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165#issuecomment-1298383030\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165\">issue #5165</a>:</p>\n<blockquote>\n<p>It looks like we also <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5123#issuecomment-1292419397\">discussed the naming of the new <code>iadd_overflow_trap</code> instruction</a> last week, and it got renamed to <code>uadd_overflow_trap</code>. </p>\n<p>And it looks like folks preferred <code>uadd_overflow_trap</code> instead of <code>uadd_carry_trap</code>, so maybe we should apply the same naming convention here? (I'd be in favor of this.)</p>\n</blockquote>",
        "id": 307291192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667302094
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165#issuecomment-1298383030\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165\">issue #5165</a>:</p>\n<blockquote>\n<p>It looks like we also <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5123#issuecomment-1292419397\">discussed the naming of the new <code>iadd_overflow_trap</code> instruction</a> last week, and it got renamed to <code>uadd_overflow_trap</code>. </p>\n<p>And it looks like folks preferred <code>uadd_overflow_trap</code> instead of <code>uadd_carry_trap</code>, so maybe we should apply the same naming convention here? (I'd also be in favor of this.)</p>\n</blockquote>",
        "id": 307291253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667302118
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165#issuecomment-1298383030\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165\">issue #5165</a>:</p>\n<blockquote>\n<p>It looks like we also <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5123#issuecomment-1292419397\">discussed the naming of the new <code>iadd_overflow_trap</code> instruction</a> last week, and it got renamed to <code>uadd_overflow_trap</code>. </p>\n<p>And it looks like folks preferred <code>uadd_overflow_trap</code> instead of <code>uadd_carry_trap</code>, so maybe we should apply the same naming convention here? (I'd be in favor of this.)</p>\n</blockquote>",
        "id": 307291279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667302128
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165#issuecomment-1504979806\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165\">issue #5165</a>:</p>\n<blockquote>\n<p>This was fixed in #5784 and  #6198.</p>\n</blockquote>",
        "id": 348673603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681292752
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5165\">issue #5165</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>While implementing <code>iadd_cout</code> for aarch64 I realized that the output of the carry bit depends on signedness of the operation. If we implement it as unsigned we only signal overflow on <code>0xFF</code> + 1, and if we implement it as signed we signal overflow on <code>0x7F</code> + 1</p>\n<p>Thus  should we rename this operation to <code>sadd_cout</code> to keep consistency with our other operations that depend on signedness (i.e. <code>sdiv</code>/<code>udiv</code>)? The operation seems to be signed based on the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/faeeed4fb94e03b5108940dd71f2b360f97d3983/cranelift/filetests/filetests/runtests/iaddcout.clif#L21\">existing test suite</a>.</p>\n<p>Does the existence of <code>sadd_cout</code> also imply that we should have <code>uadd_cout</code>?</p>\n<p>The same question applies for <code>iadd_carry</code>, but not for <code>iadd_cin</code>.</p>\n</blockquote>",
        "id": 348673606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681292752
    }
]