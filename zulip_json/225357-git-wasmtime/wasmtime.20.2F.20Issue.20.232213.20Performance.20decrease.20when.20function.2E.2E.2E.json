[
    {
        "content": "<p>Rochet2 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213\">Issue #2213</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nLink a 1000 modules together with the following code inside them by using a Linker.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">used</span><span class=\"p\">))</span>\n<span class=\"kt\">int</span> <span class=\"n\">hello</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>Then measure the time it takes to call <code>instance.get_func(&amp;function_name)</code> for each instance's hello function.<br>\nThen create 1000 modules with the same code, except the hello functions in each module has an increasing integer in its name.<br>\nThe time measurements should differ.</p>\n<p>In our tests the time with all modules having hello function name takes<br>\n<code>0.00096920039999999778</code> seconds<br>\nand when the function names are different (have different number at the end of them) the measured time is<br>\n<code>0.000034551999999999665</code> seconds</p>\n<p>The difference is quite significant and the only change we tested was to change the function names in the modules.</p>\n<ul>\n<li>\n<p>What do you expect to happen? What does actually happen? Does it panic, and if so, with which assertion?<br>\nWe would expect the time to fetch a function to be similar regardless of function naming.</p>\n</li>\n<li>\n<p>Which Wasmtime version / commit hash / branch are you using?<br>\n0.19</p>\n</li>\n<li>\n<p>If relevant, can you include some extra information about your environment? (Rust version, operating system, architecture...)<br>\nUbuntu 18.04.5 LTS 64-bit<br>\nrustc 1.44.0 (49cae5576 2020-06-01)<br>\n16GB RAM, i5-7200 @2.5GHz*4</p>\n</li>\n</ul>\n</blockquote>",
        "id": 210729430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600688567
    },
    {
        "content": "<p>Rochet2 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213\">Issue #2213</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nLink a 1000 modules together with the following code inside them by using a Linker.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">used</span><span class=\"p\">))</span>\n<span class=\"kt\">int</span> <span class=\"n\">hello</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>Then measure the time it takes to call <code>instance.get_func(&amp;function_name)</code> for each instance's hello function.<br>\nThen create 1000 modules with the same code, except the hello functions in each module has an increasing integer in its name.<br>\nThe time measurements should differ.</p>\n<p>In our tests the time with all modules having hello function name takes<br>\n<code>0.00096920039999999778</code> seconds<br>\nand when the function names are different (have different number at the end of them) the measured time is<br>\n<code>0.000034551999999999665</code> seconds</p>\n<p>The difference is quite significant and the only change we tested was to change the function names in the modules.</p>\n<ul>\n<li>\n<p>What do you expect to happen? What does actually happen? Does it panic, and if so, with which assertion?<br>\nWe would expect the time to fetch a function to be similar regardless of function naming.</p>\n</li>\n<li>\n<p>Which Wasmtime version / commit hash / branch are you using?<br>\n0.19</p>\n</li>\n<li>\n<p>If relevant, can you include some extra information about your environment? (Rust version, operating system, architecture...)<br>\nUbuntu 18.04.5 LTS 64-bit<br>\nrustc 1.44.0 (49cae5576 2020-06-01)<br>\n16GB RAM, i5-7200 @2.5GHz*4</p>\n</li>\n</ul>\n</blockquote>",
        "id": 210729431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600688567
    },
    {
        "content": "<p>Rochet2 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213\">Issue #2213</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nLink a 1000 modules together with the following code inside them by using a Linker.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">used</span><span class=\"p\">))</span>\n<span class=\"kt\">int</span> <span class=\"n\">hello</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>Then measure the time it takes to call <code>instance.get_func(&amp;function_name)</code> for each instance's hello function.<br>\nThen create 1000 modules with the same code, except the hello functions in each module has an increasing integer in its name.<br>\nThe time measurements should differ.</p>\n<p>In our tests when all modules are having the same hello function name, the average time for a single fetch is<br>\n<code>0.00096920039999999778</code> seconds<br>\nand when the function names are different (have different number at the end of them) the measured time is<br>\n<code>0.000034551999999999665</code> seconds</p>\n<p>The difference is quite significant and the only change we tested was to change the function names in the modules.</p>\n<ul>\n<li>\n<p>What do you expect to happen? What does actually happen? Does it panic, and if so, with which assertion?<br>\nWe would expect the time to fetch a function to be similar regardless of function naming.</p>\n</li>\n<li>\n<p>Which Wasmtime version / commit hash / branch are you using?<br>\n0.19</p>\n</li>\n<li>\n<p>If relevant, can you include some extra information about your environment? (Rust version, operating system, architecture...)<br>\nUbuntu 18.04.5 LTS 64-bit<br>\nrustc 1.44.0 (49cae5576 2020-06-01)<br>\n16GB RAM, i5-7200 @2.5GHz*4</p>\n</li>\n</ul>\n</blockquote>",
        "id": 210729601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600688702
    },
    {
        "content": "<p>Rochet2 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213\">Issue #2213</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nLink a 1000 modules together with the following code inside them by using a Linker.</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">used</span><span class=\"p\">))</span>\n<span class=\"kt\">int</span> <span class=\"n\">hello</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>Then measure the time it takes to call <code>instance.get_func(&amp;function_name)</code> for each instance's hello function.<br>\nThen create 1000 modules with the same code, except the hello functions in each module has an increasing integer in its name.<br>\nThe time measurements should differ.</p>\n<p>In our tests when all modules are having the same hello function name, the average time for a single fetch is<br>\n<code>0.0010949896000000006</code> seconds<br>\nand when the function names are different (have different number at the end of them) the measured time is<br>\n<code>0.000036767999999999476</code> seconds</p>\n<p>The difference is quite significant and the only change we tested was to change the function names in the modules.</p>\n<ul>\n<li>\n<p>What do you expect to happen? What does actually happen? Does it panic, and if so, with which assertion?<br>\nWe would expect the time to fetch a function to be similar regardless of function naming.</p>\n</li>\n<li>\n<p>Which Wasmtime version / commit hash / branch are you using?<br>\n0.19</p>\n</li>\n<li>\n<p>If relevant, can you include some extra information about your environment? (Rust version, operating system, architecture...)<br>\nUbuntu 18.04.5 LTS 64-bit<br>\nrustc 1.44.0 (49cae5576 2020-06-01)<br>\n16GB RAM, i5-7200 @2.5GHz*4</p>\n</li>\n</ul>\n</blockquote>",
        "id": 210730026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600689017
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213#issuecomment-696856761\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213\">Issue #2213</a>:</p>\n<blockquote>\n<p>Thanks for the report, and this does indeed seem a little bizarre! Would you be able to share some code of how you're using the <code>wasmtime</code> crate, and ideally what wasm blobs you're using?</p>\n</blockquote>",
        "id": 210901553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600794637
    },
    {
        "content": "<p>Rochet2 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213#issuecomment-731864338\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213\">Issue #2213</a>:</p>\n<blockquote>\n<p>Thanks for your response. Closing the issue as new tests show that the measurement was likely simply flawed.<br>\nThe original measuring code is not available, but attempts to replicate the issue based on code used at the time the issue was created or based on the issue description yields the expected correct result.</p>\n</blockquote>",
        "id": 217575698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606087155
    },
    {
        "content": "<p>Rochet2 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2213\">Issue #2213</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue?<br>\nLink a 1000 modules together with the following code inside them by using a Linker.</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"n\">__attribute__</span><span class=\"p\">((</span><span class=\"n\">used</span><span class=\"p\">))</span>\n<span class=\"kt\">int</span> <span class=\"n\">hello</span><span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">return</span> <span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Then measure the time it takes to call <code>instance.get_func(&amp;function_name)</code> for each instance's hello function.<br>\nThen create 1000 modules with the same code, except the hello functions in each module has an increasing integer in its name.<br>\nThe time measurements should differ.</p>\n<p>In our tests when all modules are having the same hello function name, the average time for a single fetch is<br>\n<code>0.0010949896000000006</code> seconds<br>\nand when the function names are different (have different number at the end of them) the measured time is<br>\n<code>0.000036767999999999476</code> seconds</p>\n<p>The difference is quite significant and the only change we tested was to change the function names in the modules.</p>\n<ul>\n<li>\n<p>What do you expect to happen? What does actually happen? Does it panic, and if so, with which assertion?<br>\nWe would expect the time to fetch a function to be similar regardless of function naming.</p>\n</li>\n<li>\n<p>Which Wasmtime version / commit hash / branch are you using?<br>\n0.19</p>\n</li>\n<li>\n<p>If relevant, can you include some extra information about your environment? (Rust version, operating system, architecture...)<br>\nUbuntu 18.04.5 LTS 64-bit<br>\nrustc 1.44.0 (49cae5576 2020-06-01)<br>\n16GB RAM, i5-7200 @2.5GHz*4</p>\n</li>\n</ul>\n</blockquote>",
        "id": 217575699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606087155
    }
]