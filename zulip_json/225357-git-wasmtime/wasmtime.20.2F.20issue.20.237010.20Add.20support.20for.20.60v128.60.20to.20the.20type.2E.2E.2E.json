[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7010#issuecomment-1716705943\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7010\">issue #7010</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen, @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\", \"wasmtime:api\", \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n<li>peterhuene: wasmtime:api, wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 390614910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694562294
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7010#issuecomment-1718389003\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7010\">issue #7010</a>:</p>\n<blockquote>\n<p>I should also mention before I forget, it is theoretically possible to support v128 on all platforms. We are in control of our own ABI and we could say that the v128 type always maps to memory or a pair of u64 values. This would require rejiggering not only the Cranelift trampolines generated but additionally the <code>WasmTy</code> trait and how arguments are passed in the ABI. I figured that was a big lift for now where it'd be \"much easier\" to wait for Rust to add stable support for vector types on s390x and RISC-V in theory (in the assumption that users desiring that will coincide with a much later date in the future)</p>\n</blockquote>",
        "id": 390811950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694643552
    }
]