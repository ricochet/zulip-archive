[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a> from <code>trevor/xmm-mem-alignment-bug</code> to <code>main</code>:</p>\n<blockquote>\n<p>Ensure that constants generated for the memory case of XmmMem values are always 16 bytes, ensuring that we don't accidantally perform an unaligned load.</p>\n<p>Fixes #4761<br>\n&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 295492694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540264
    },
    {
        "content": "<p><strong>elliottt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a> as ready for review.</p>",
        "id": 295493453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540511
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087412900\">PR review</a>.</p>",
        "id": 295493643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540562
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956355304\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we delegate to <code>put_in_xmm_mem</code> at this point to share logic (then lift the <code>XmmMem</code> back to <code>XmmMemImm</code>)?</p>\n</blockquote>",
        "id": 295493644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540562
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956355998\">PR review comment</a>:</p>\n<blockquote>\n<p>We can probably use a <code>u128</code> here to avoid the awkward iter-chaining below? Then we can do a zero-extend cast when calling this rather than giving <code>0</code> as <code>upper</code>.</p>\n</blockquote>",
        "id": 295493646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540562
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087412900\">PR review</a>.</p>",
        "id": 295493647,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540562
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087414905\">PR review</a>.</p>",
        "id": 295494262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540765
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087414905\">PR review</a>.</p>",
        "id": 295494265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540765
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956357158\">PR review comment</a>:</p>\n<blockquote>\n<p>Absolutely unimportant nit: I like to use <code>copied</code> instead of <code>cloned</code> when I'm expecting it to be cheap, so the compiler can tell me if I've tried to do it to a type that isn't <code>Copy</code>.</p>\n</blockquote>",
        "id": 295494267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540765
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956359013\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this comment say \"put_in_reg_mem_imm\"?</p>\n</blockquote>",
        "id": 295494268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540765
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956358565\">PR review comment</a>:</p>\n<blockquote>\n<p>Should we just run this on all architectures as well as the interpreter? The bug was x64-specific but the test should work everywhere and it would be nice to know if it didn't.</p>\n</blockquote>",
        "id": 295494269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661540765
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a> from <code>trevor/xmm-mem-alignment-bug</code> to <code>main</code>.</p>",
        "id": 295495025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541022
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a>.</p>",
        "id": 295495046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541030
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a> from <code>trevor/xmm-mem-alignment-bug</code> to <code>main</code>.</p>",
        "id": 295495186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541084
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956365015\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed this by delegating to a different function here :)</p>\n</blockquote>",
        "id": 295495365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541135
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087423150\">PR review</a>.</p>",
        "id": 295495366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541136
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956368535\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh, after Chris' suggestion, now you can simplify this to <code>value.to_le_bytes().into()</code>, I think.</p>\n</blockquote>",
        "id": 295496057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541386
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087426792\">PR review</a>.</p>",
        "id": 295496058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541386
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087429615\">PR review</a>.</p>",
        "id": 295496602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541581
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956371142\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess <code>ConstantData</code> doesn't have a <code>From</code> implementation for arrays, but <code>.as_slice().into()</code> ought to work at least.</p>\n</blockquote>",
        "id": 295496603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541581
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087430574\">PR review</a>.</p>",
        "id": 295496793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541649
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956372125\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, delegating to a different function worked out very nicely!</p>\n</blockquote>",
        "id": 295496796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541650
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087433047\">PR review</a>.</p>",
        "id": 295497236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541815
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956374411\">PR review comment</a>:</p>\n<blockquote>\n<p>Looks like we're stuck with my verbose monstrosity:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">809</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VCodeConstantData</span>::<span class=\"n\">Generated</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">to_le_bytes</span><span class=\"p\">().</span><span class=\"n\">iter</span><span class=\"p\">().</span><span class=\"n\">into</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                                                </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">From</span><span class=\"o\">&lt;</span><span class=\"n\">core</span>::<span class=\"n\">slice</span>::<span class=\"n\">Iter</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"o\">&gt;&gt;</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ConstantData</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 295497237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541815
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956374958\">PR review comment</a>:</p>\n<blockquote>\n<p>The problem there is the <code>.iter()</code>.</p>\n</blockquote>",
        "id": 295497364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541852
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087433631\">PR review</a>.</p>",
        "id": 295497365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541852
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087435359\">PR review</a>.</p>",
        "id": 295497732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541972
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956376666\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I get a similar error without it. I had been experimenting :)</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">809</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">VCodeConstantData</span>::<span class=\"n\">Generated</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">.</span><span class=\"n\">to_le_bytes</span><span class=\"p\">().</span><span class=\"n\">into</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                                         </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">From</span><span class=\"o\">&lt;</span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ConstantData</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 295497734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661541972
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087438267\">PR review</a>.</p>",
        "id": 295498047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542093
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956379284\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd figured out that just <code>.into()</code> wouldn't work after I posted my first comment. Did you try my second suggestion, of <code>.as_slice().into()</code>?</p>\n</blockquote>",
        "id": 295498048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542093
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a> from <code>trevor/xmm-mem-alignment-bug</code> to <code>main</code>.</p>",
        "id": 295498223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542196
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087442843\">PR review</a>.</p>",
        "id": 295498238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542202
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956383363\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah! Totally missed your second comment, that works <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 295498240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542202
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087445449\">PR review</a>.</p>",
        "id": 295498777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542387
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087445513\">PR review</a>.</p>",
        "id": 295498794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542393
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956385971\">PR review comment</a>:</p>\n<blockquote>\n<p>Hooray! It'd probably be nice if <code>ConstantData</code> actually had a <code>From&lt;[T; n]&gt;</code> implementation too, but I didn't want to suggest doing that in this PR. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n</blockquote>",
        "id": 295498795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542393
    },
    {
        "content": "<p>elliottt has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a>.</p>",
        "id": 295501268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661543346
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790\">PR #4790</a>.</p>",
        "id": 295503433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661544280
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#pullrequestreview-1087649422\">PR review</a>.</p>",
        "id": 295551653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661581945
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4790#discussion_r956545992\">PR review comment</a>:</p>\n<blockquote>\n<p>As a further suggestion, we can also remove the <code>set enable_llvm_abi_extensions</code> since we no longer have <code>i128</code>'s in this new minimized test case.</p>\n</blockquote>",
        "id": 295551654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661581945
    }
]