[
    {
        "content": "<p>PureWhiteWu opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4188\">PR #4188</a> from <code>feat/remove_strategy</code> to <code>main</code>:</p>\n<blockquote>\n<h1>TL;DR</h1>\n<p>This commit removes support for users to set the <code>strategy</code> field.<br>\nI'd propose to do this because:</p>\n<ol>\n<li>This field is easy to misuse / cause problems and hard to debug.</li>\n<li>This field isn't useful these days (nor likely in the near future).</li>\n</ol>\n<h1>Misuse</h1>\n<p>I updated from wasmtime <code>0.35</code> to <code>0.37</code> these days, and it breaks with the <br>\nfollowing error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">compilation</span><span class=\"w\"> </span><span class=\"n\">settings</span><span class=\"w\"> </span><span class=\"n\">are</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">compatible</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">native</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"nc\">setting</span><span class=\"w\"> </span><span class=\"s\">\"enable_safepoints\"</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">configured</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">Bool</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">supported</span><span class=\"w\"></span>\n</code></pre></div>\n<p>And here's what my config code looks like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">default_config</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Config</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">cfg</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Running related configs</span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">module_version</span><span class=\"p\">(</span><span class=\"n\">ModuleVersionStrategy</span>::<span class=\"n\">WasmtimeVersion</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">profiler</span><span class=\"p\">(</span><span class=\"n\">ProfilingStrategy</span>::<span class=\"nb\">None</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">allocation_strategy</span><span class=\"p\">(</span><span class=\"n\">InstanceAllocationStrategy</span>::<span class=\"n\">OnDemand</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_backtrace_details</span><span class=\"p\">(</span><span class=\"n\">WasmBacktraceDetails</span>::<span class=\"n\">Enable</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">memory_init_cow</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">consume_fuel</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">epoch_interruption</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Wasm related configs</span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_threads</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_reference_types</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_simd</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_bulk_memory</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_multi_value</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_multi_memory</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">wasm_memory64</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Compiler settings</span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">parallel_compilation</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">generate_address_map</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"n\">Speed</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// disable avx512</span>\n<span class=\"w\">    </span><span class=\"cp\">#[cfg(target_arch = </span><span class=\"s\">\"x86_64\"</span><span class=\"cp\">)]</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_avx\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_avx2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_avx512bitalg\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"false\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_avx512dq\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"false\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_avx512f\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"false\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_avx512vbmi\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"false\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_avx512vl\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"false\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_bmi1\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_bmi2\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_lzcnt\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_popcnt\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_sse3\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_sse41\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_sse42\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">(</span><span class=\"s\">\"has_ssse3\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">cfg</span><span class=\"p\">.</span><span class=\"n\">cranelift_flag_set</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">cfg</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>It works fine in 0.35 but breaks in 0.37, and I found that it's because runtime checks<br>\nhave been added in #3899. But it is weird that I've already set <code>cfg.wasm_reference_types(true)</code><br>\nwhich should have set <code>enable_safepoints</code> to true:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">wasm_reference_types</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">enable</span>: <span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">compiler</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">set</span><span class=\"p\">(</span><span class=\"s\">\"enable_safepoints\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">enable</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"true\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"s\">\"false\"</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>And finally I found that it's because <code>config.strategy</code> creates a new <code>compiler builder</code> instead, <br>\nwhich invalidates all the compiler flags.</p>\n<p>To use this field correctly, users should set the strategy first, and this is not documented.</p>\n<p>This in fact caused a lot of configs to not work in the previous release(&lt;0.36) without any errors<br>\nand really hard to discover. If I did set <code>references_type</code> to false, then I would not discover this<br>\nerror together with other not working configs such as simd.</p>\n<p>So I think this is easy to misuse / causes problems and hard to discover / debug.</p>\n<h1>Not Useful</h1>\n<p>Per <a href=\"https://github.com/bytecodealliance/rfcs/pull/14\">RFC 14</a> there seems only one <code>Strategy</code><br>\nleft(<code>Cranelift</code>), and I searched through issues and infomation, there's no plan to add new new backends<br>\nin the (near) futures.</p>\n<p>This config field itself also did nothing useful other than creates the only <code>Cranelift</code> backend compiler builder,<br>\nwhich is already created as the default value of <code>Config</code>.</p>\n<h1>Alternatives</h1>\n<h2>Noop</h2>\n<p>The first is to make <code>strategy</code> config field to a no-op, such as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">strategy</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strategy</span>: <span class=\"nc\">Strategy</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">Self</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>But I think this field is useless now, and more important is that it is also likely to be useless in the future,<br>\nso I prefer to remove it directly.</p>\n<h2>Panic</h2>\n<p>The second is to panic if the <code>compiler</code> field has been set.</p>\n<p>But I don't find a clean way to check if the <code>compiler</code> has been changed (maybe need to iter / add another<br>\nfield to mark), and same as the above reason, I'd prefer to remove it.</p>\n<h2>Document</h2>\n<p>The third is to document that this field must be called at the start of <code>Config</code>.</p>\n<p>Besides the above reasons, there's also two cons of this way:<br>\n1. Users are likely to miss this detail in the document.<br>\n2. Old misused users cannot discover this error.</p>\n<h1>Conclusion</h1>\n<p>So I think directly remove this config field is the best way to avoid this problem.</p>\n<p>And besides the problems it causes, it's also reasonable to remove this since this<br>\nis really useless these days and in the foreseeable future.</p>\n</blockquote>",
        "id": 283933228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653508775
    },
    {
        "content": "<p>PureWhiteWu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4188\">PR #4188</a> from <code>feat/remove_strategy</code> to <code>main</code>.</p>",
        "id": 283933894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653509089
    },
    {
        "content": "<p>PureWhiteWu closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4188\">PR #4188</a>.</p>",
        "id": 283976776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653548712
    }
]