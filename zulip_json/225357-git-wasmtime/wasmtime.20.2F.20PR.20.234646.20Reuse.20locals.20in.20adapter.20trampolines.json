[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4646\">PR #4646</a> from <code>reuse-locals</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit implements a scheme I've been meaning to work on in the<br>\nadapter compiler where instead of always generating a fresh local for<br>\nall operations locals may now be reused. Locals generated are explicitly<br>\nfree'd when their lexical scope has ended, allowing reuse in translation<br>\nof later types in the adapter.</p>\n<p>This also implements a new scheme for initializing locals where<br>\npreviously a local could simply be generated, but now the local must be<br>\nfused with its initializer where a <code>local.{tee,set}</code> instruction is<br>\nalways generated. This should help prevent a bug I ran into with strings<br>\nwhere one usage of a local was forgotten to be initialized which meant<br>\nthat when it was used during a loop it may have had a stale value from<br>\nbefore.</p>\n<p>Modeling this in Rust isn't possible at compile time unfortunately so I<br>\nopted for the next best thing, runtime panics. If a local is<br>\naccidentally not released back to the pool of free locals then it will<br>\npanic. The fuzzer for simply generating and validating adapter modules<br>\nshould be good at exercising this and it weeded out a few forgotten<br>\nfree's and should be good now.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 292493233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659991082
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4646\">PR #4646</a>.</p>",
        "id": 292493234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659991082
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4646#pullrequestreview-1065785410\">PR review</a>.</p>",
        "id": 292495949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659992446
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4646\">PR #4646</a>.</p>",
        "id": 292496806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659992825
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4646\">PR #4646</a>.</p>",
        "id": 292497960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659993486
    }
]