[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8940\">issue #8940</a>:</p>\n<blockquote>\n<blockquote>\n<p>Performing a GC requires <code>&amp;mut</code> though, right? So given <code>&amp;StoreOpaque</code> that's static proof that a GC won't happen? </p>\n<p>Musing though: because <code>unchecked_try_gc_ref</code> returns a lifetime bound to <code>&amp;StoreOpaque</code> doesn't that mean that GC is already statically disallowed while we're working with the <code>gc_ref</code>? If that's the case could the <code>unchecked_</code> prefix be removed? (fine to defer this to a future PR of course)</p>\n</blockquote>\n<p>_Originally posted by @alexcrichton in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8933#discussion_r1674184310_\">https://github.com/bytecodealliance/wasmtime/pull/8933#discussion_r1674184310_</a></p>\n<p>Note: we can't just remove the <code>unchecked_</code> prefix, since there are versions of this method already named those things, but they take a <code>AutoAssertNoGc</code> instead of a `&amp;StoreOpaque. So it isn't clear what naming conventions we want to have here. Or we could make a trait that represents stores/contexts where we can rest assured that GC won't happen while that store/context type exists.</p>\n<p>Feel free to bikeshed.</p>\n</blockquote>",
        "id": 450758605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720716370
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8940\">issue #8940</a>:</p>\n<blockquote>\n<blockquote>\n<p>Performing a GC requires <code>&amp;mut</code> though, right? So given <code>&amp;StoreOpaque</code> that's static proof that a GC won't happen? </p>\n<p>Musing though: because <code>unchecked_try_gc_ref</code> returns a lifetime bound to <code>&amp;StoreOpaque</code> doesn't that mean that GC is already statically disallowed while we're working with the <code>gc_ref</code>? If that's the case could the <code>unchecked_</code> prefix be removed? (fine to defer this to a future PR of course)</p>\n</blockquote>\n<p>_Originally posted by @alexcrichton in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8933#discussion_r1674184310_\">https://github.com/bytecodealliance/wasmtime/pull/8933#discussion_r1674184310_</a></p>\n<p>Note: we can't just remove the <code>unchecked_</code> prefix, since there are versions of this method already named those things, but they take a <code>AutoAssertNoGc</code> instead of a `&amp;StoreOpaque. So it isn't clear what naming conventions we want to have here. Or we could make a trait that represents stores/contexts where we can rest assured that GC won't happen while that store/context type exists.</p>\n<p>Feel free to bikeshed.</p>\n</blockquote>",
        "id": 451087449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720823612
    }
]