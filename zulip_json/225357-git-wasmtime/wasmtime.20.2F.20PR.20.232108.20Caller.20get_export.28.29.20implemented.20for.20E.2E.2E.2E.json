[
    {
        "content": "<p>agiachris opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108\">PR #2108</a> from <code>main</code> to <code>main</code>:</p>\n<blockquote>\n<p>To my knowledge, this has not been discussed in an issue. However, comments in the overwritten code make clear that the get_export() function is only currently implemented for Extern::Memory, with potential future support for Extern::Func - which is the update of this PR. This update simply enables user to lookup and return Extern::Func types from Caller structure.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[x] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[x] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[x] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 206167022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596732699
    },
    {
        "content": "<p>PiotrSikora submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#pullrequestreview-462702501\">PR Review</a>.</p>",
        "id": 206170202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596734175
    },
    {
        "content": "<p>PiotrSikora created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#discussion_r466553228\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Style: <code>s/return Some(Extern::Func(func));/Some(Extern::Func(func))/</code> (i.e. no <code>return</code>, no <code>;</code>).</p>\n</blockquote>",
        "id": 206170203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596734175
    },
    {
        "content": "<p>PiotrSikora created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#discussion_r466553035\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Style: <code>s/return Some(Extern::Memory(mem));/Some(Extern::Memory(mem))/</code> (i.e. no <code>return</code>, no <code>;</code>).</p>\n</blockquote>",
        "id": 206170204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596734176
    },
    {
        "content": "<p>PiotrSikora submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#pullrequestreview-462702501\">PR Review</a>.</p>",
        "id": 206170205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596734176
    },
    {
        "content": "<p>PiotrSikora created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#discussion_r466556446\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Style: <code>s/return None,/None,/</code> (i.e. no <code>return</code>).</p>\n</blockquote>",
        "id": 206170206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596734176
    },
    {
        "content": "<p>agiachris updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108\">PR #2108</a> from <code>main</code> to <code>main</code>:</p>\n<blockquote>\n<p>To my knowledge, this has not been discussed in an issue. However, comments in the overwritten code make clear that the get_export() function is only currently implemented for Extern::Memory, with potential future support for Extern::Func - which is the update of this PR. This update simply enables user to lookup and return Extern::Func types from Caller structure.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[x] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[x] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[x] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 206173701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596735902
    },
    {
        "content": "<p>PiotrSikora submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#pullrequestreview-462769739\">PR Review</a>.</p>",
        "id": 206178289,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596738161
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#pullrequestreview-463398336\">PR Review</a>.</p>",
        "id": 206270559,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596813798
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#pullrequestreview-463398336\">PR Review</a>.</p>",
        "id": 206270560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596813798
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#discussion_r467106690\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could this be refactored a bit to avoid duplicating the <code>let handle = ...</code>?</p>\n<p>Something like:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">lookup</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">?</span>:\n<span class=\"nc\">let</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.;</span><span class=\"w\"></span>\n<span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Export</span>::<span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">Export</span>::<span class=\"n\">Memory</span><span class=\"p\">(</span><span class=\"n\">Memory</span>::<span class=\"n\">from_wasmtime_memory</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">)),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Export</span>::<span class=\"n\">Function</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"cm\">/* ... */</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"o\">~~~</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 206270561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596813798
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#discussion_r467108686\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think that the documentation on the <code>Caller</code> type itself needs to be updated to indicate it's more than just memory now, and this function can probably point to that documentation to guide about usages of the function.</p>\n<p>On the <code>Caller</code> struct itself I think it can be updated to something like:</p>\n<blockquote>\n<p>This structure can be taken as the first parameter of a closure passed to<br>\n[<code>Func::wrap</code>], and it can be used to learn information about the caller of<br>\nthe function, such as the calling module's memory, exports, etc.</p>\n<p>The primary purpose of this structure is to provide access to the<br>\ncaller's information, namely it's exported memory and exported functions. This<br>\nallows functions which take pointers as arguments to easily read the memory the<br>\npointers point into, or if a function is expected to call <code>malloc</code> in the wasm<br>\nmodule to reserve space for the output you can do that.</p>\n<p>Note that this <code>Caller</code> type a pretty temporary mechanism for accessing the<br>\ncaller's information until interface types has been fully standardized and<br>\nimplemented. The interface types proposal will obsolete this type and this will<br>\nbe removed in the future at some point after interface types is implemented. If<br>\nyou're relying on this <code>Caller</code> type it's recommended to become familiar with<br>\ninterface types to ensure that your use case is covered by the proposal.</p>\n</blockquote>\n</blockquote>",
        "id": 206270562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596813798
    },
    {
        "content": "<p>agiachris submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#pullrequestreview-463402905\">PR Review</a>.</p>",
        "id": 206270887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596813963
    },
    {
        "content": "<p>agiachris created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108#discussion_r467110364\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Great, will make these updates. Thank you!</p>\n</blockquote>",
        "id": 206270888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596813963
    },
    {
        "content": "<p>agiachris updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108\">PR #2108</a> from <code>main</code> to <code>main</code>:</p>\n<blockquote>\n<p>To my knowledge, this has not been discussed in an issue. However, comments in the overwritten code make clear that the get_export() function is only currently implemented for Extern::Memory, with potential future support for Extern::Func - which is the update of this PR. This update simply enables user to lookup and return Extern::Func types from Caller structure.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[x] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[x] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[x] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[x] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 206273118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596815098
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2108\">PR #2108</a>.</p>",
        "id": 206277955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596817483
    }
]