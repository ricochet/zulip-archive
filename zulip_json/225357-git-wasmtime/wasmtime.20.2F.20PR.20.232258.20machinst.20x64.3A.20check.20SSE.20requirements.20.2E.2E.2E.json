[
    {
        "content": "<p><strong>bnjbvr</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a>.</p>",
        "id": 212094895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601654740
    },
    {
        "content": "<p>bnjbvr opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a> from <code>check-sse</code> to <code>main</code>:</p>\n<blockquote>\n<p>This builds on top of #2255 (two commits), and adds a dynamic check that every time we emit an instruction that uses SSE features, the features were enabled by the configuration. This avoids cases where we could use e.g. SSE4.1 on a machine that doesn't have it.</p>\n<p>The way to pass the ISA flags is a bit tricky; please see commit message for the explanation of why it was done this way. Happy to try a different way if anybody has better suggestions!</p>\n</blockquote>",
        "id": 212094896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601654740
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258#pullrequestreview-501275912\">PR Review</a>.</p>",
        "id": 212098198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601656425
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258#pullrequestreview-501275912\">PR Review</a>.</p>",
        "id": 212098199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601656426
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258#discussion_r498923378\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could we rename this to <code>isa_requirement()</code>? I think \"ISA\" is a more standard term than \"iset\" as an abbreviation.</p>\n</blockquote>",
        "id": 212098200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601656426
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258#discussion_r498924696\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Are all of the below SSE2, e.g. <code>JmpIf</code>? (Perhaps they have some options or encodings that are?)</p>\n<p>(To be clear, I like this function and the explicitness of this <code>match</code>; I'm just curious about the comment is all.)</p>\n</blockquote>",
        "id": 212098201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601656426
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258#pullrequestreview-502139910\">PR Review</a>.</p>",
        "id": 212310359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601909609
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258#discussion_r499659896\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yep, I just checked the ones for which i had a few doubts:</p>\n<ul>\n<li>the conversions from int to float/doubles (and reciprocally) are SSE (for floats) and SSE2 (for doubles)</li>\n<li>JmpIf is just a plain old conditional jump, (e.g. <code>jo</code>), so nothing to fret about.</li>\n</ul>\n</blockquote>",
        "id": 212310360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601909609
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a> from <code>check-sse</code> to <code>main</code>:</p>\n<blockquote>\n<p>This builds on top of #2255 (two commits), and adds a dynamic check that every time we emit an instruction that uses SSE features, the features were enabled by the configuration. This avoids cases where we could use e.g. SSE4.1 on a machine that doesn't have it.</p>\n<p>The way to pass the ISA flags is a bit tricky; please see commit message for the explanation of why it was done this way. Happy to try a different way if anybody has better suggestions!</p>\n</blockquote>",
        "id": 212310673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601909726
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a> from <code>check-sse</code> to <code>main</code>:</p>\n<blockquote>\n<p>This builds on top of #2255 (two commits), and adds a dynamic check that every time we emit an instruction that uses SSE features, the features were enabled by the configuration. This avoids cases where we could use e.g. SSE4.1 on a machine that doesn't have it.</p>\n<p>The way to pass the ISA flags is a bit tricky; please see commit message for the explanation of why it was done this way. Happy to try a different way if anybody has better suggestions!</p>\n</blockquote>",
        "id": 212320240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601913656
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a> from <code>check-sse</code> to <code>main</code>:</p>\n<blockquote>\n<p>This builds on top of #2255 (two commits), and adds a dynamic check that every time we emit an instruction that uses SSE features, the features were enabled by the configuration. This avoids cases where we could use e.g. SSE4.1 on a machine that doesn't have it.</p>\n<p>The way to pass the ISA flags is a bit tricky; please see commit message for the explanation of why it was done this way. Happy to try a different way if anybody has better suggestions!</p>\n</blockquote>",
        "id": 212448726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601999971
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a> from <code>check-sse</code> to <code>main</code>:</p>\n<blockquote>\n<p>This builds on top of #2255 (two commits), and adds a dynamic check that every time we emit an instruction that uses SSE features, the features were enabled by the configuration. This avoids cases where we could use e.g. SSE4.1 on a machine that doesn't have it.</p>\n<p>The way to pass the ISA flags is a bit tricky; please see commit message for the explanation of why it was done this way. Happy to try a different way if anybody has better suggestions!</p>\n</blockquote>",
        "id": 212530515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602061080
    },
    {
        "content": "<p><strong>bnjbvr</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a>.</p>",
        "id": 212535233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602063792
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258#pullrequestreview-504113859\">PR Review</a>.</p>",
        "id": 212592830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602092039
    },
    {
        "content": "<p>bnjbvr merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2258\">PR #2258</a>.</p>",
        "id": 212654498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602141713
    }
]