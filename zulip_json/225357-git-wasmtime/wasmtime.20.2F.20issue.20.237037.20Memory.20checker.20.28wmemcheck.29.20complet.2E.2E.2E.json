[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7037\">issue #7037</a>:</p>\n<blockquote>\n<p>This issue is meant to track what remains to make <code>wmemcheck</code> feature-complete and robust enough for practical use:</p>\n<ul>\n<li>[ ] Handle SIMD loads and stores (#6829)</li>\n<li>[ ] Hook <code>calloc</code> as well as existing <code>malloc</code> and <code>free</code></li>\n<li>[ ] Provide hooks for custom allocators to use</li>\n<li>[ ] Allow for more flexibility in heap and stack layout (don't assume stack is above <code>.data</code>/<code>.bss</code> and everything below initial TOS is accessible)</li>\n<li>[ ] Provide an alternate way to hook <code>malloc</code>/<code>free</code>, rather than requiring a name section in the <code>.wasm</code> module</li>\n<li>[ ] Provide an option to print warnings as violations occur, rather than halting execution (like Valgrind)</li>\n<li>[ ] Provide a mechanism to define \"suppressions\" for unwanted warnings (like Valgrind)</li>\n<li>[ ] Track definedness at byte or bit level?</li>\n</ul>\n<p>cc @iximeow for more thoughts, and others from today's Wasmtime meeting?</p>\n</blockquote>",
        "id": 390990586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694713466
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7037#issuecomment-1721483630\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7037\">issue #7037</a>:</p>\n<blockquote>\n<p>@alexcrichton noted earlier that it would be good to have:</p>\n<ul>\n<li>[ ] an end-to-end test starting with some clearly-UB .c and test expectations for a stack trace pointing to wasmtime trapping a bad access</li>\n</ul>\n<p>and since wmemcheck doesn't support multiple memories (though we ought to make it so!),</p>\n<ul>\n<li>[ ] warn if a user tries to wmemcheck a multi-memory program<br>\nor add that support multiple memories. but i think that's maybe a step after \"robust enough for practical use\" in terms of effort, warning seems more expedient for now :)</li>\n</ul>\n</blockquote>",
        "id": 391203479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694792386
    },
    {
        "content": "<p>iximeow edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7037#issuecomment-1721483630\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7037\">issue #7037</a>:</p>\n<blockquote>\n<p>@alexcrichton noted earlier that it would be good to have:</p>\n<ul>\n<li>[ ] an end-to-end test starting with some clearly-UB .c and test expectations for a stack trace pointing to wasmtime trapping a bad access</li>\n</ul>\n<p>and since wmemcheck doesn't support multiple memories (though we ought to make it so!),</p>\n<ul>\n<li>[ ] warn if a user tries to wmemcheck a multi-memory program</li>\n</ul>\n<p>or add that support multiple memories. but i think that's maybe a step after \"robust enough for practical use\" in terms of effort, warning seems more expedient for now :)</p>\n</blockquote>",
        "id": 391203566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694792406
    }
]