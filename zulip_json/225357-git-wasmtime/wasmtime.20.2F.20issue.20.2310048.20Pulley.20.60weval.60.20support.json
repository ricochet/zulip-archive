[
    {
        "content": "<p>gkgoat1 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/10048\">issue #10048</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Pulley should support <code>weval</code> such that, on wasm platforms, it can be aot compiled if modules are known statically.</p>\n<h4>Benefit</h4>\n<p>This would unlock aot compilation of components down to core wasm using Wasmtime, along with enhancing <code>weval</code> to be able to process programs like itself.</p>\n<h4>Implementation</h4>\n<ul>\n<li>If WASM is not supported currently in Pulley, that would have to be implemented first</li>\n<li>A Rust api for <code>weval</code>'s WASM interface would also be needed</li>\n<li>After that, it should really just come down to calling the functions when needed</li>\n</ul>\n<h4>Alternatives</h4>\n<p>For components, another route is converting them fully to js with <code>jco</code>, then using something like Porffor to aot compile it.  The rest could be done by allowing <code>wizer</code> to use the js engine WASM runtime, which would be provided by StarlingMonkey, which can further aot compile to a component, coverable with the previous alternative. These pipelines, while somewhat easier to plan for, are convoluted for the user and might massively reduce performance.</p>\n</blockquote>",
        "id": 494582174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737244088
    }
]