[
    {
        "content": "<p>localvar opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981\">issue #2981</a>:</p>\n<blockquote>\n<p>I need to interrupt the execution of user-provided wasm code if it cannot complete in a limited time, say 1 second.</p>\n<p>The documentation of <code>Interrupt</code> says:</p>\n<blockquote>\n<p>Interrupt interrupts currently executing WebAssembly code, if it's currently running, or interrupts wasm the next time it starts running.</p>\n</blockquote>\n<p>So my question is: how to ensure it only interrupts the current execution but not the next?</p>\n<p>For example:</p>\n<div class=\"codehilite\" data-code-language=\"Go\"><pre><span></span><code><span class=\"k\">go</span> <span class=\"kd\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Sleep</span><span class=\"p\">(</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Second</span><span class=\"p\">)</span>\n    <span class=\"nx\">interruptHandle</span><span class=\"p\">.</span><span class=\"nx\">Interrupt</span><span class=\"p\">()</span>\n<span class=\"p\">}</span> <span class=\"p\">()</span>\n\n<span class=\"c1\">// execute wasm code</span>\n</code></pre></div>\n<p>As two goroutines are involved, there are race conditions, and it is possible for <code>Interrupt</code> to be called after the wasm code finishes current execution, which will result in the next execution be interrupted at the start.</p>\n<p>There may be some tricky workarounds for this requirement, like execute a dummy wasm function to reset the <code>Interrupthandle</code> before execute the desired code, but all of them look ugly.</p>\n<p>Is there a better way to reset the <code>InterruptHandle</code>?</p>\n</blockquote>",
        "id": 242603900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623680463
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981#issuecomment-860724763\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981\">issue #2981</a>:</p>\n<blockquote>\n<p>I've transferred this issue to the wasmtime repository itself since the feature will need to be implemented here first.</p>\n</blockquote>",
        "id": 242603966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623680484
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981\">issue #2981</a>:</p>\n<blockquote>\n<p>I need to interrupt the execution of user-provided wasm code if it cannot complete in a limited time, say 1 second.</p>\n<p>The documentation of <code>Interrupt</code> says:</p>\n<blockquote>\n<p>Interrupt interrupts currently executing WebAssembly code, if it's currently running, or interrupts wasm the next time it starts running.</p>\n</blockquote>\n<p>So my question is: how to ensure it only interrupts the current execution but not the next?</p>\n<p>For example:</p>\n<div class=\"codehilite\" data-code-language=\"Go\"><pre><span></span><code><span class=\"k\">go</span> <span class=\"kd\">func</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Sleep</span><span class=\"p\">(</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Second</span><span class=\"p\">)</span>\n    <span class=\"nx\">interruptHandle</span><span class=\"p\">.</span><span class=\"nx\">Interrupt</span><span class=\"p\">()</span>\n<span class=\"p\">}</span> <span class=\"p\">()</span>\n\n<span class=\"c1\">// execute wasm code</span>\n</code></pre></div>\n<p>As two goroutines are involved, there are race conditions, and it is possible for <code>Interrupt</code> to be called after the wasm code finishes current execution, which will result in the next execution be interrupted at the start.</p>\n<p>There may be some tricky workarounds for this requirement, like execute a dummy wasm function to reset the <code>Interrupthandle</code> before execute the desired code, but all of them look ugly.</p>\n<p>Is there a better way to reset the <code>InterruptHandle</code>?</p>\n</blockquote>",
        "id": 242603986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623680490
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981#issuecomment-860724989\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981\">issue #2981</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 242604027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623680505
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981#issuecomment-1117523423\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981\">issue #2981</a>:</p>\n<blockquote>\n<p>This API has since been removed from Wasmtime so I'm going to close this</p>\n</blockquote>",
        "id": 281175938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651679766
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2981\">issue #2981</a>:</p>\n<blockquote>\n<p>I need to interrupt the execution of user-provided wasm code if it cannot complete in a limited time, say 1 second.</p>\n<p>The documentation of <code>Interrupt</code> says:</p>\n<blockquote>\n<p>Interrupt interrupts currently executing WebAssembly code, if it's currently running, or interrupts wasm the next time it starts running.</p>\n</blockquote>\n<p>So my question is: how to ensure it only interrupts the current execution but not the next?</p>\n<p>For example:</p>\n<div class=\"codehilite\" data-code-language=\"Go\"><pre><span></span><code><span class=\"k\">go</span><span class=\"w\"> </span><span class=\"kd\">func</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Sleep</span><span class=\"p\">(</span><span class=\"nx\">time</span><span class=\"p\">.</span><span class=\"nx\">Second</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nx\">interruptHandle</span><span class=\"p\">.</span><span class=\"nx\">Interrupt</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"></span>\n\n<span class=\"c1\">// execute wasm code</span><span class=\"w\"></span>\n</code></pre></div>\n<p>As two goroutines are involved, there are race conditions, and it is possible for <code>Interrupt</code> to be called after the wasm code finishes current execution, which will result in the next execution be interrupted at the start.</p>\n<p>There may be some tricky workarounds for this requirement, like execute a dummy wasm function to reset the <code>Interrupthandle</code> before execute the desired code, but all of them look ugly.</p>\n<p>Is there a better way to reset the <code>InterruptHandle</code>?</p>\n</blockquote>",
        "id": 281175940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651679767
    }
]