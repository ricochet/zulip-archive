[
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783\">PR #3783</a> from <code>isle-multioutput</code> to <code>main</code>:</p>\n<blockquote>\n<p>This changes the output of the <code>lower</code> constructor from a<br>\n<code>ValueRegs</code> to a new <code>InstOutput</code> type, which is a vector<br>\nof <code>ValueRegs</code>.</p>\n<p>Code in <code>lower_common</code> is updated to use this new type to<br>\nhandle instructions with multiple outputs.  All back-ends<br>\nare updated to use the new type.</p>\n<p>CC @cfallin @fitzgen - this is an attempt to address <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3747\">https://github.com/bytecodealliance/wasmtime/issues/3747</a></p>\n<p>I like the way <code>lower_common</code> now looks better, and handling of <code>iadd_ifcount</code> seems improved.  However, the current implementation requires a large number of changes to all back ends, which is not ideal.   Note that if we end up implementing the suggestion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3753\">https://github.com/bytecodealliance/wasmtime/issues/3753</a>, we can avoid most of those changes simply by installing a default conversion from a <code>ValueRegs</code> to a (singleton) <code>InstOutput</code>.</p>\n<p>Not sure if the terminology <code>InstOutput</code> is the best possible -- other suggestions appreciated!</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 271266334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644408100
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-882072691\">PR review</a>.</p>",
        "id": 271873762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644865887
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-882072691\">PR review</a>.</p>",
        "id": 271873763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644865887
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#discussion_r806156115\">PR review comment</a>:</p>\n<blockquote>\n<p>nitpick: Could we call this <code>side_effect</code>? This would match how we have the <code>SideEffect</code> type (not <code>Sideeffect</code>) right now.</p>\n</blockquote>",
        "id": 271873764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644865887
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-882072691\">PR review</a>.</p>",
        "id": 271873908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644865938
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-882092483\">PR review</a>.</p>",
        "id": 271877320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644867344
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-882092483\">PR review</a>.</p>",
        "id": 271877322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644867344
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#discussion_r806170488\">PR review comment</a>:</p>\n<blockquote>\n<p>On general comment -- we should look to make sure in whatever final design we use, we don't incur any allocations in the ordinary one-register case. We use <code>SmallVec</code> in a number of other places in the backend framework, and some of the chosen inline-vector sizes were based on allocation profiling; we found sometimes significant speedups from this at least early in development. I think we can definitely get around this though (see top-level comment).</p>\n</blockquote>",
        "id": 271877324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644867344
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#discussion_r806170488\">PR review comment</a>.</p>",
        "id": 271877354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644867353
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-882975609\">PR review</a>.</p>",
        "id": 271972522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644931395
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#discussion_r806825145\">PR review comment</a>:</p>\n<blockquote>\n<p>Right, this makes sense.</p>\n</blockquote>",
        "id": 271972523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644931395
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783\">PR #3783</a> from <code>isle-multioutput</code> to <code>main</code>.</p>",
        "id": 273078520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645703244
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-892892695\">PR review</a>.</p>",
        "id": 273136442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645730448
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-892929093\">PR review</a>.</p>",
        "id": 273141443,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645732638
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-892929093\">PR review</a>.</p>",
        "id": 273141445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645732638
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#discussion_r814220516\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't see any uses of this builder in the current PR; is it required for some later changes, e.g. handling calls with a variable number of returns? (That's fine if so; I just want to make sure it's not a leftover.)</p>\n</blockquote>",
        "id": 273141446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645732638
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-893045447\">PR review</a>.</p>",
        "id": 273154985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645739915
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#discussion_r814302659\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, exactly.   This is used in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3785\">https://github.com/bytecodealliance/wasmtime/pull/3785</a> here to construct the output for call instructions:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/3785/files#diff-1eac808500791b38886e17f448d60faa6583f025fef1c810fadc9dfdc04efe37R2275\">https://github.com/bytecodealliance/wasmtime/pull/3785/files#diff-1eac808500791b38886e17f448d60faa6583f025fef1c810fadc9dfdc04efe37R2275</a></p>\n</blockquote>",
        "id": 273154986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645739915
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#pullrequestreview-893048805\">PR review</a>.</p>",
        "id": 273155511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645740149
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783#discussion_r814305128\">PR review comment</a>:</p>\n<blockquote>\n<p>Makes sense, thanks!</p>\n</blockquote>",
        "id": 273155512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645740150
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3783\">PR #3783</a>.</p>",
        "id": 273155574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645740187
    }
]