[
    {
        "content": "<p>SingleAccretion opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9899\">issue #9899</a>:</p>\n<blockquote>\n<p>I am sure everyone building wasmtime is familiar with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">@</span><span class=\"mf\">0.116.0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustfmt</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">ISLE</span><span class=\"o\">-</span><span class=\"n\">generated</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Custom</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Other</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"`rustfmt` exited with status exit code: 0xc00000fd\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>It is a constant feature of the CI builds as well. <code>0xc00000fd</code> is <code>STATUS_STACK_OVERFLOW</code>.</p>\n</blockquote>",
        "id": 490701911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735064256
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9899\">issue #9899</a>:</p>\n<blockquote>\n<p>I am sure everyone building wasmtime is familiar with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">@</span><span class=\"mf\">0.116.0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustfmt</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">ISLE</span><span class=\"o\">-</span><span class=\"n\">generated</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Custom</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Other</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"`rustfmt` exited with status exit code: 0xc00000fd\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>It is a constant feature of the CI builds as well. <code>0xc00000fd</code> is <code>STATUS_STACK_OVERFLOW</code>.</p>\n</blockquote>",
        "id": 490702183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735064452
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9899#issuecomment-2561345924\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9899\">issue #9899</a>:</p>\n<blockquote>\n<p>Fascinating -- I wonder if this is a <code>rustfmt</code> failure to handle very large functions without recursing. We've run into similar issues with ISLE-generated code being too large for tools in <a href=\"https://github.com/rust-lang/rust/issues/128422\">rust-lang/rust#128422</a>; the ultimate fix should be to the tool IMHO, but...</p>\n<p>In the meantime perhaps we can stop running rustfmt on the code <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f64a9d5056fda49cb90444d5074984e7c942b296/cranelift/codegen/build.rs#L215\">here</a>? I don't recall the exact reason we decided to do that; it dates back to the original ISLE integration in <a href=\"https://github.com/bytecodealliance/wasmtime/commit/7a568b19b42ddb86da156e5566bbbde98307ccb4\">this commit</a>. Perhaps we were worried about human readability of the generated code. In any case, we rarely (or at least I rarely?) look at this generated code today, so if it's causing any problems in CI we can skip it. Happy to review a PR for that (with some delay, this is a holiday week for most of us).</p>\n</blockquote>",
        "id": 490704421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735065979
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9899\">issue #9899</a>:</p>\n<blockquote>\n<p>I am sure everyone building wasmtime is familiar with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">@</span><span class=\"mf\">0.116.0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustfmt</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">ISLE</span><span class=\"o\">-</span><span class=\"n\">generated</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Custom</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Other</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"`rustfmt` exited with status exit code: 0xc00000fd\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>It is a constant feature of the CI builds as well. <code>0xc00000fd</code> is <code>STATUS_STACK_OVERFLOW</code>.</p>\n</blockquote>",
        "id": 490900917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735235313
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9899#issuecomment-2563354682\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9899\">issue #9899</a>:</p>\n<blockquote>\n<p>I've seen a similar error in CI quite a lot but I always figured it was because <code>rustfmt</code> wasn't installed and that error wasn't otherwise specifically handled. Otherwise though:</p>\n<blockquote>\n<p>I am sure everyone building wasmtime is familiar with:</p>\n</blockquote>\n<p>I never actually saw this day-to-day myself and I think it's a Windows-specific issue where Windows has smaller thread stacks by default than other platforms (or at least I think, maybe I'm wrong...). </p>\n<p>Mostly just wanted to highlight that you might be one of the first developers to frequently work on Wasmtime on Windows, so please keep your eyes peeled for any other gotchas and points of friction. Most of the preexisting maintainers I believe don't develop day-to-day on Windows, so I wouldn't be surprised if this weren't the only point of friction. #9901 is much appreciated (as is all your DWARF work, thank you!) and please feel free to call out any other issues you see!</p>\n</blockquote>",
        "id": 490952641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735279367
    }
]