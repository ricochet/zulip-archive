[
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Engine</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Engine</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_engine_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 224822708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234483
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Engine</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Engine</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_engine_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 224822858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234686
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Engine</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Engine</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_engine_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 224822894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234767
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 224822902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234794
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-580948055\">PR Review</a>.</p>",
        "id": 224822993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234889
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568290034\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've added a comment where we have the unsafe impls for <code>HostFunc</code>.</p>\n</blockquote>",
        "id": 224822994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234889
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-580948416\">PR Review</a>.</p>",
        "id": 224823067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234949
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568290301\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm now in favor of keeping the interning as the map can be cloned into multiple engines from a single config.</p>\n<p>Thoughts with the recent changes?</p>\n</blockquote>",
        "id": 224823068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234949
    },
    {
        "content": "<p><strong>peterhuene</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a>.</p>",
        "id": 224823072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234956
    },
    {
        "content": "<p><strong>peterhuene</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a>.</p>",
        "id": 224823073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612234958
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 224823720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612235727
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581488282\">PR Review</a>.</p>",
        "id": 224891052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612281507
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568712998\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm we may wish to brainstorm a different API for this. I'm worried about this causing unexpected panics in applications because you couldn't, for example, call this method recursively twice. I fear that would hamper usage of this API quite a lot. For example if you're implementing a WASI API which calls back into the module to malloc you'd need to be extremely careful to not <code>with_context</code> while malloc is being run.</p>\n</blockquote>",
        "id": 224891053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612281507
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568710934\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Would it be possible to move this logic into <code>self.get</code> directly? That internally handles the module-linking feature where if you import an instance it can be satisfied with a function definition of a two-level import. I think that if <code>self.store</code> were consulted in <code>self.get</code> that it'd naturally support that though.</p>\n</blockquote>",
        "id": 224891054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612281507
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568718714\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah ok makes sense! I don't feel that this should be removed really, only that I wasn't sure if the complexity was worth it (not even sure it's entirely worth it in <code>Linker</code>, not like I've profiled anything...). Seems fine to leave though!</p>\n</blockquote>",
        "id": 224891055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612281507
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568717926\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We could unify these two actually by fetching the <code>Store</code> from the same location, the location in TLS post-dates the original storage into the function's environment here. I think then the two could be shared?</p>\n</blockquote>",
        "id": 224891056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612281507
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581500356\">PR Review</a>.</p>",
        "id": 224891283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612281593
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568719930\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think the ideal API here would be <code>fn get&lt;T&gt;(&amp;self) -&gt; Option&lt;&amp;T&gt;</code> perhaps.</p>\n<p>Could we not support <code>remove</code> and if consumers want it then they could have <code>T = RefCell&lt;Option&lt;U&gt;&gt;</code> perhaps?</p>\n</blockquote>",
        "id": 224891284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612281593
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581648558\">PR Review</a>.</p>",
        "id": 224916602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291346
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581648558\">PR Review</a>.</p>",
        "id": 224916603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291346
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568833911\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Does this mean that we need to check that this store is using an engine that is using this <code>HostFunc</code>'s config? is it possible for these things to get out of sync (which seems like it would lead to unsafety)</p>\n</blockquote>",
        "id": 224916604,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291346
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568842074\">PR Review Comment</a>:</p>\n<blockquote>\n<p>+1 for exposing <code>&amp;T</code> instead of <code>&amp;mut T</code></p>\n<p>if users are the ones adding ref cells, then they are aware of the re-entrancy concerns and can design around that, rather than being surprised when they finally hit a corner case and have already designed and implemented a bunch of stuff that now needs to be redone</p>\n</blockquote>",
        "id": 224916605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291346
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568835154\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Seems like, based on this call site, they should stay in-sync, but that perhaps <code>to_func</code> isn't always guaranteed to be safe. If I'm understanding all this correctly, then I think <code>to_func</code> should be <code>unsafe</code> and this call site should be the place with the <code>unsafe</code> block that has a comment like \"we know this store is using the same config as the host func\".</p>\n</blockquote>",
        "id": 224916606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291346
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581662111\">PR Review</a>.</p>",
        "id": 224916892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291465
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568844455\">PR Review Comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>Could we not support <code>remove</code> and if consumers want it then they could have <code>T = RefCell&lt;Option&lt;U&gt;&gt;</code> perhaps?</p>\n</blockquote>\n<p>Yeah, good point. I guess switching to <code>&amp;T</code> alone isn't enough, we also have to not support removal to make reentrancy panic-free.</p>\n</blockquote>",
        "id": 224916893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291465
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581663007\">PR Review</a>.</p>",
        "id": 224917030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291534
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568845110\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Worth documenting for users how they would get mutability and the ability to remove context via <code>RefCell&lt;Option&lt;T&gt;&gt;</code> in the doc comments.</p>\n</blockquote>",
        "id": 224917031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291534
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568845110\">PR Review Comment</a>.</p>",
        "id": 224917085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612291559
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581710941\">PR Review</a>.</p>",
        "id": 224925400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295090
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568882169\">PR Review Comment</a>:</p>\n<blockquote>\n<p>If we want to do that rather than sourcing it from the instance data, I'll make the shim shared.</p>\n</blockquote>",
        "id": 224925401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295090
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581712756\">PR Review</a>.</p>",
        "id": 224925694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295228
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568883656\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think you're right, <code>get</code> makes more sense for this implementation as it should behave as if the function were already defined in the linker even though it comes from the store.</p>\n<p>I'll make that change.</p>\n</blockquote>",
        "id": 224925695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295228
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581714818\">PR Review</a>.</p>",
        "id": 224926089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295390
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568885317\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah I think we may as well change to that. It also has the added benefit of where the host state can remain 0-sized if <code>Self</code> is 0-sized (as is the case with all wasi functions). Additionally I think you could actually go ahead and remove <code>into_func</code> and simply have <code>into_host_func</code>, and then <code>Func::wrap</code> would have a small amount more glue to handle the add-the-instance-to-the-store case?</p>\n</blockquote>",
        "id": 224926090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295390
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581717582\">PR Review</a>.</p>",
        "id": 224926681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295614
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568887336\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That's a good point about reentrancy and moving the <code>RefCell</code> into the context value would give the callers more control over mutation scope.</p>\n<p>This will necessitate a method on <code>Wasi</code> or <code>WasiCtx</code> to set the context in the store with the exact type the generated <code>Wasi</code> host functions expect, though (it's how I had it in the RFC, but this was a poor attempt at a \"cleaner\" API).</p>\n<p>I'll get this fixed.</p>\n</blockquote>",
        "id": 224926683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295614
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581718347\">PR Review</a>.</p>",
        "id": 224926857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295674
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568887911\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I will add a debug assertion just to double check that the <code>HostFunc</code> is indeed related to the associated config.</p>\n</blockquote>",
        "id": 224926858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295675
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581718780\">PR Review</a>.</p>",
        "id": 224926942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295706
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568888232\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'll make it unsafe and comment as to the safety of the call.</p>\n</blockquote>",
        "id": 224926944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612295707
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581735717\">PR Review</a>.</p>",
        "id": 224930124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612297045
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568901088\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That works.  Thoughts on renaming the trait then?</p>\n</blockquote>",
        "id": 224930125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612297045
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568901088\">PR Review Comment</a>.</p>",
        "id": 224930229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612297083
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581741560\">PR Review</a>.</p>",
        "id": 224931183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612297529
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r568905571\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Actually, the lookup can't be done quickly as the <code>HostFunc</code> doesn't store the requisite information to query the passed store.</p>\n<p>I think making this unsafe as suggested in the other comment is the best approach.</p>\n</blockquote>",
        "id": 224931184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612297529
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 224949311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612306525
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 224950342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612307108
    },
    {
        "content": "<p><strong>peterhuene</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a>.</p>",
        "id": 224950562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612307241
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-581874986\">PR Review</a>.</p>",
        "id": 224954748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612310108
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 225065872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612379625
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith an <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 225070061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612381227
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith a <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 225113226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612407155
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR introduces defining host functions at the <code>Config</code> rather than with<br>\n<code>Func</code> tied to a <code>Store</code>.</p>\n<p>The intention here is to enable a host to define all of the functions once at<br>\nwith a <code>Config</code> and then use a <code>Linker</code> (or directly with<br>\n<code>Store::get_host_func</code>) to use the functions when instantiating a module.</p>\n<p>This should help improve the performance of use cases where a <code>Store</code> is<br>\nshort-lived and redefining the functions at every module instantiation a<br>\nnoticeable performance hit.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/9\">bytecodealliance/rfcs#9</a> regarding these changes.</p>\n</blockquote>",
        "id": 225197115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612461456
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 226907174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1613696439
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229413929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615258864
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229417193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615261676
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229551797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615323230
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229552544,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615323500
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-608085193\">PR Review</a>.</p>",
        "id": 229558115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615325680
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229578032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615333971
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-608912276\">PR Review</a>.</p>",
        "id": 229695866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615393777
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-608912276\">PR Review</a>.</p>",
        "id": 229695867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615393777
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591673229\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm although then you'd have to also validate that no functions were defined yet, which is a bit wonky...</p>\n<p>Do you have thoughts on this? I think it's fine either way myself.</p>\n</blockquote>",
        "id": 229695868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615393777
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591672102\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The purpose of this being a constructor on <code>Store</code> was primarily to avoid switching at runtime, but because <code>Config</code> is intended as a builder and it's \"frozen\" as an <code>Engine</code> I think this is fine to simply have as an extra method on <code>Config</code> (probably named <code>async_</code>)</p>\n</blockquote>",
        "id": 229695869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615393777
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-609020737\">PR Review</a>.</p>",
        "id": 229714788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615399951
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591756228\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm leaning towards making it a setting like any other, rather than having <code>Config::new_async</code>, and having to set \"async\" prior to defining any async shared host functions.</p>\n<p>With the instance allocator and now host functions in <code>Config</code>, I'm concerned that <code>Config</code> is too stateful now.  There's a similar problem with <code>async_stack_size</code> not being able to be set <em>after</em> an instance allocation strategy was set because the pooling allocator relies on that setting.</p>\n<p>I'm wondering if we should move the <em>instantiated</em> instance allocator and shared host functions into <code>Engine</code> (like we have for <code>Compiler</code>), leaving <code>Config</code> a bunch of settings and only concerned with conflicts rather than <em>ordering</em> of the settings.  This wouldn't be a breaking change to the API.</p>\n<p>This would change the semantics a little as each engine would now have its own instance allocator, but to me that makes more sense than having each engine share the instance allocator from a \"configuration\".</p>\n<p>We'd still have to panic when you attempt to construct an <code>Engine</code> from an incorrect <code>Config</code>, though (e.g. you defined an async host function without setting the \"async\" setting, but now the order of those operations doesn't matter).</p>\n<p>What's your take?</p>\n</blockquote>",
        "id": 229714789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615399951
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-609067470\">PR Review</a>.</p>",
        "id": 229723410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615403083
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591792768\">PR Review Comment</a>:</p>\n<blockquote>\n<p>However, we'd also have to panic when constructing an engine if we can't allocate enough memory for the pooling instance allocator (when used) instead of what we do currently which is return error from <code>Config::with_allocation_strategy</code>.</p>\n<p>Given this would ever likely be done once early on and isn't recoverable in a way that would make progress (out of memory <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>), I'm not terribly concerned with a panicking if it improves <code>Config</code>.<br>\n</p>\n</blockquote>",
        "id": 229723412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615403083
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591792768\">PR Review Comment</a>.</p>",
        "id": 229723573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615403138
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591756228\">PR Review Comment</a>.</p>",
        "id": 229723636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615403161
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591792768\">PR Review Comment</a>.</p>",
        "id": 229724078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615403313
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229731487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615405997
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#pullrequestreview-609109518\">PR Review</a>.</p>",
        "id": 229731558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615406032
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625#discussion_r591826968\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've pushed up a change for the instance allocator to get a sense of what I'm talking about above. It also removes that confusing \"default\" instance allocator in the process.</p>\n<p>I'll see about the same for moving \"async\" to a setting and making instantiating the host functions into the engine rather than config.</p>\n<p>If we don't like it this way, I'll remove the commits.</p>\n</blockquote>",
        "id": 229731560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615406033
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229732064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615406221
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229768816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615420534
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a> from <code>engine-funcs</code> to <code>main</code>.</p>",
        "id": 229770404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615421348
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2625\">PR #2625</a>.</p>",
        "id": 229876901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615479251
    }
]