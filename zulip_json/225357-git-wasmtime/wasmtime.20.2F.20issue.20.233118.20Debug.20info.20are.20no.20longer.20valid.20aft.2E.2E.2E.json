[
    {
        "content": "<p>shingfeel opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3118\">issue #3118</a>:</p>\n<blockquote>\n<p>I use nginx to process http requests. and load wasm file, set \"wasmtime_config_debug_info_set\" flag, compile modules and link modules in main process. Then fork and call wasm func in child process. <br>\nWhen i use a debugger: gdb -p [pid] to attach to child process and want to beak point in wasm function. It failed with:\"Function \"xxxxxx\" not defined\"。It seem's debuger can't find debug_info in child process.<br>\nI wonder why debuger work fine in main process and don't work in child process?</p>\n</blockquote>",
        "id": 247307396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627374971
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3118#issuecomment-887756129\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3118\">issue #3118</a>:</p>\n<blockquote>\n<p>Wasmtime <a href=\"https://github.com/bytecodealliance/wasmtime/blob/b5f7b2f86a828fd777e3d022e7e1066e9291c2fa/crates/runtime/src/jit_int.rs#L103-L120\">manually has to tell GDB</a> about code that we've generated (along with debuginfo), but maybe GDB doesn't preserve this information across forks? Wasmtime doesn't do anything after a fork to re-inform GDB about dynamically generated code.</p>\n<p>My guess is that GDB \"forgets\" about dynamically loaded code after a fork and we'd have to re-inform it of code, but that's just a hunch and I don't actually know how gdb works in this regard.</p>\n</blockquote>",
        "id": 247375680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627412245
    },
    {
        "content": "<p>shingfeel <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3118#issuecomment-888767762\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3118\">issue #3118</a>:</p>\n<blockquote>\n<p>thank @alexcrichton for your answer.</p>\n<p>It seems GDB really \"forgets\" to dynamically loaded code after fork. in my code, recompile wasm module after fork and GDB now working correctly.</p>\n</blockquote>",
        "id": 247540504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627528475
    },
    {
        "content": "<p>shingfeel closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3118\">issue #3118</a>:</p>\n<blockquote>\n<p>I use nginx to process http requests. and load wasm file, set \"wasmtime_config_debug_info_set\" flag, compile modules and link modules in main process. Then fork and call wasm func in child process. <br>\nWhen i use a debugger: gdb -p [pid] to attach to child process and want to beak point in wasm function. It failed with:\"Function \"xxxxxx\" not defined\"。It seem's debuger can't find debug_info in child process.<br>\nI wonder why debuger work fine in main process and don't work in child process?</p>\n</blockquote>",
        "id": 247540510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627528481
    }
]