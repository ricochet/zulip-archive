[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4662\">PR #4662</a> from <code>big-alloc-in-remove-constant-phis</code> to <code>main</code>:</p>\n<blockquote>\n<p>By having a single, large allocation instead.</p>\n<p>The motivation is that the <code>SmallVec</code> for each block's outgoing edges' actual argument values was often running out of their inline capacity and triggering heap allocations.</p>\n<p>Unfortunately, this seems to ultimately be a ~3% slow down on our <code>spidermonkey.wasm</code> benchmark, probably due to the new bounds checks caused from indexing into the single large allocation.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">121036165.40</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">64555091.05</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.01</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.05</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">backing</span><span class=\"o\">-</span><span class=\"n\">values</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3983134514</span><span class=\"w\"> </span><span class=\"mf\">4236785350.52</span><span class=\"w\"> </span><span class=\"mi\">4613932381</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">backing</span><span class=\"o\">-</span><span class=\"n\">values</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3790337770</span><span class=\"w\"> </span><span class=\"mf\">4115749185.12</span><span class=\"w\"> </span><span class=\"mi\">4653228728</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">165139806</span><span class=\"w\"> </span><span class=\"mf\">179373271.11</span><span class=\"w\"> </span><span class=\"mi\">208813013</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">backing</span><span class=\"o\">-</span><span class=\"n\">values</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">165229705</span><span class=\"w\"> </span><span class=\"mf\">175595715.17</span><span class=\"w\"> </span><span class=\"mi\">202773232</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">188779955</span><span class=\"w\"> </span><span class=\"mf\">224630804.71</span><span class=\"w\"> </span><span class=\"mi\">270825205</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">backing</span><span class=\"o\">-</span><span class=\"n\">values</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">189541100</span><span class=\"w\"> </span><span class=\"mf\">222431248.35</span><span class=\"w\"> </span><span class=\"mi\">281750519</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Just opening this PR for posterity and if anyone else gets any ideas here.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 292635303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660070399
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4662\">PR #4662</a> from <code>big-alloc-in-remove-constant-phis</code> to <code>main</code>.</p>",
        "id": 293589021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660584642
    },
    {
        "content": "<p>fitzgen closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4662\">PR #4662</a>.</p>",
        "id": 293595359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660586911
    }
]