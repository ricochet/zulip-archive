[
    {
        "content": "<p>MaxGraey opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Not all architectures has a fast 64-bit imul + imm. But even on modern like SnB-family and AMD Ryzen it takes <code>3 cycle</code> latency, <code>1c throughput</code> which not always faster lea + shl / add combination. So I propose use lowering to  lea + shl / add for non-power of two constants at least for <code>imm &lt; 400</code> and 64-bit imul only if this possible. Similar to GCC:</p>\n<p><a href=\"https://godbolt.org/z/aG7bPer9v\">https://godbolt.org/z/aG7bPer9v</a></p>\n</blockquote>",
        "id": 292889671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660207830
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686#issuecomment-1211752557\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<blockquote>\n<p>for non-power of two constants at least for imm &lt; 400</p>\n</blockquote>\n<p>Should this check for a low hamming weight rather than a max value?</p>\n</blockquote>",
        "id": 292895222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660210383
    },
    {
        "content": "<p>MaxGraey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686#issuecomment-1211753619\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<blockquote>\n<p>low hamming weight rather than a max value?</p>\n</blockquote>\n<p>Yeah, perhaps this will be better</p>\n</blockquote>",
        "id": 292895407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660210451
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Not all architectures has a fast 64-bit imul + imm. But even on modern like SnB-family and AMD Ryzen it takes <code>3 cycle</code> latency, <code>1c throughput</code> which not always faster lea + shl / add combination. So I propose use lowering to  lea + shl / add for non-power of two constants <del>at least for <code>imm &lt; 400</code></del> with low hamming weight and 64-bit imul only if this possible. Similar to GCC:</p>\n<p><a href=\"https://godbolt.org/z/aG7bPer9v\">https://godbolt.org/z/aG7bPer9v</a></p>\n</blockquote>",
        "id": 292896119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660210728
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Not all architectures has a fast 64-bit imul + imm. But even on modern like SnB-family and AMD Ryzen it takes <code>3 cycle</code> latency, <code>1c throughput</code> which not always faster lea + shl / add combination. So I propose use lowering to  lea + shl / add for non-power of two constants <del>at least for <code>imm &lt; 400</code></del> with low hamming weight and 64-bit imul only if this possible. Similar to GCC:</p>\n<p><a href=\"https://godbolt.org/z/aG7bPer9v\">https://godbolt.org/z/aG7bPer9v</a></p>\n</blockquote>",
        "id": 296845839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133286
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Not all architectures has a fast 64-bit imul + imm. But even on modern like SnB-family and AMD Ryzen it takes <code>3 cycle</code> latency, <code>1c throughput</code> which not always faster lea + shl / add combination. So I propose use lowering to  lea + shl / add for non-power of two constants <del>at least for <code>imm &lt; 400</code></del> with low hamming weight and 64-bit imul only if this possible. Similar to GCC:</p>\n<p><a href=\"https://godbolt.org/z/aG7bPer9v\">https://godbolt.org/z/aG7bPer9v</a></p>\n</blockquote>",
        "id": 296845840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133286
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Not all architectures has a fast 64-bit imul + imm. But even on modern like SnB-family and AMD Ryzen it takes <code>3 cycle</code> latency, <code>1c throughput</code> which not always faster lea + shl / add combination. So I propose use lowering to  lea + shl / add for non-power of two constants <del>at least for <code>imm &lt; 400</code></del> with low hamming weight and 64-bit imul only if this possible. Similar to GCC:</p>\n<p><a href=\"https://godbolt.org/z/aG7bPer9v\">https://godbolt.org/z/aG7bPer9v</a></p>\n</blockquote>",
        "id": 296845841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133286
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Not all architectures has a fast 64-bit imul + imm. But even on modern like SnB-family and AMD Ryzen it takes <code>3 cycle</code> latency, <code>1c throughput</code> which not always faster lea + shl / add combination. So I propose use lowering to  lea + shl / add for non-power of two constants <del>at least for <code>imm &lt; 400</code></del> with low hamming weight and 64-bit imul only if this possible. Similar to GCC:</p>\n<p><a href=\"https://godbolt.org/z/aG7bPer9v\">https://godbolt.org/z/aG7bPer9v</a></p>\n</blockquote>",
        "id": 296845846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133287
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4686\">issue #4686</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Not all architectures has a fast 64-bit imul + imm. But even on modern like SnB-family and AMD Ryzen it takes <code>3 cycle</code> latency, <code>1c throughput</code> which not always faster lea + shl / add combination. So I propose use lowering to  lea + shl / add for non-power of two constants <del>at least for <code>imm &lt; 400</code></del> with low hamming weight and 64-bit imul only if this possible. Similar to GCC:</p>\n<p><a href=\"https://godbolt.org/z/aG7bPer9v\">https://godbolt.org/z/aG7bPer9v</a></p>\n</blockquote>",
        "id": 296845848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133288
    }
]