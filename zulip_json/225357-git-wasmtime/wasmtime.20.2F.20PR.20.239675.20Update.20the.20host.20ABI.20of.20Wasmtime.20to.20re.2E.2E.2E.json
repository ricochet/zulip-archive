[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a> from <code>alexcrichton:move-traps-into-abi</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit updates the \"array call\" ABI of Wasmtime used to transition from wasm to the host to explicitly return a <code>bool</code> indicating whether the call succeeded or not. Previously functions would implicitly unwind via <code>longjmp</code> and thus no explicit checks were necessary. The burden of unwinding is now placed on Cranelift-compiled code itself instead of the caller.</p>\n<p>There are a few pieces of rationale for this change:</p>\n<ul>\n<li>\n<p>Primarily I was implementing initial integration of Pulley where the host <code>setjmp</code> and <code>longjmp</code> cannot be used to maintain the Pulley interpreter state. My initial plan for handling this was to handle traps a bit differently in Pulley where having direct access to whether a function trapped or not in the interpreter bytecode is easier to deal with.</p>\n</li>\n<li>\n<p>Additionally it's generally not safe to call <code>longjmp</code> from Rust as it will not run on-stack destructors. This is ok today in the sense that we shouldn't have these in Wasmtime, but directly returning to compiled code improves our safety story here a bit where we just won't have to deal with the problem of skipping destructors.</p>\n</li>\n<li>\n<p>In the future I'd like to move away from <code>setjmp</code> and <code>longjmp</code> entirely in the host to a Cranelift-native solution. This change would be required for such a migration anyway so it's my hope to make such a Cranelift-based implementation easier in the future. This might be necessary, for example, when implementing the <code>exception-handling</code> proposal for Wasmtime.</p>\n</li>\n</ul>\n<p>Functionally this commit does not remove all usages of call-<code>longjmp</code>-from-Rust. Notably all libcalls and builtins still use this helper in the trampolines generated in Rust. I plan on going through the libcalls and updating their ABIs and signatures to reflect this in follow-up commits. As a result a few preexisting functions that should go away are marked <code>#[deprecated]</code> for internal use in this commit. I'll be cleaning that up as follow-ups. For now this commit handles the \"hard part\" of host functions by ensuring that the new <code>bool</code> return value is plumbed in all the locations correctly.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 484361108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732557575
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484361113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732557575
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484361114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732557575
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#issuecomment-2498695282\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>:</p>\n<blockquote>\n<p>I'll note that this has a bit of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9673\">https://github.com/bytecodealliance/wasmtime/pull/9673</a> mixed in but doesn't depend on it.</p>\n<p>Also to expand on:</p>\n<blockquote>\n<p>I plan on going through the libcalls and updating their ABIs and signatures to reflect this in follow-up commits</p>\n</blockquote>\n<p>The categories of libcalls are:</p>\n<ul>\n<li>Some libcalls, but not all, need to be able to raise traps. For example we support <code>memory.grow</code> raising a trap because of the embedder API but we don't support table-lazy-init raising a trap.</li>\n<li>All libcalls, however, need to catch Rust panics and do something with them.</li>\n</ul>\n<p>My plan is to update the ABI of all libcalls that return traps to return some encoding of the current return value plus whether it trapped. That'll suffice for catching panics and handling traps. For all other libcalls which can't actually trap my plan is to abort the process. I plan on doing this by removing the <code>catch_unwind</code> entirely. That is no longer necessary for safety reasons in recent versions of Rust. That means that only libcalls which can raise a trap will have panics shepherded across them, and panics in other libcalls will abort the process.</p>\n</blockquote>",
        "id": 484361743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732557745
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484362034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732557853
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484367345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732559860
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#pullrequestreview-2459363452\">PR review</a>:</p>\n<blockquote>\n<p>Broad strokes looks good, though I'm not quite enough of a cranelift expert to catch anything subtle here.</p>\n</blockquote>",
        "id": 484368763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732560370
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#discussion_r1857177995\">PR review comment</a>:</p>\n<blockquote>\n<p>Still a FIXME here and below in same file</p>\n</blockquote>",
        "id": 484368764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732560370
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#discussion_r1857179030\">PR review comment</a>:</p>\n<blockquote>\n<p>FIXME</p>\n</blockquote>",
        "id": 484368765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732560370
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#pullrequestreview-2459413036\">PR review</a>.</p>",
        "id": 484371841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732561555
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#discussion_r1857210254\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yeah this is intentional where it's deferred to a future PR to handle the usages for libcalls</p>\n</blockquote>",
        "id": 484371842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732561556
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484382638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732565909
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484382760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732565974
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#pullrequestreview-2459563621\">PR review</a>:</p>\n<blockquote>\n<p>Cranelift compilation bits look good to me.</p>\n</blockquote>",
        "id": 484384255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732566509
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484415897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732582456
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484415898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732582456
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484415899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732582456
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484417780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732583757
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484418306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732584207
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675#issuecomment-2499551437\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"pulley\", \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: pulley</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 484426184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732590143
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484542152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732635524
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484543194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732635804
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484545842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732636549
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484547842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732637117
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484570971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732644854
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484602418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732657922
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484603443,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732658407
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">PR #9675</a>.</p>",
        "id": 484608816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732661076
    }
]