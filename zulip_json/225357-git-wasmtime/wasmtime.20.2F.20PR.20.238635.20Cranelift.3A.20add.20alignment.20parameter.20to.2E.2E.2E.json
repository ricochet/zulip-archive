[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439045762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715872897
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439045763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715872897
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439045764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715872897
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a> from <code>cfallin:stackslot-alignment</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Fixes #6716.</p>\n<p>Currently, stack slots on the stack are aligned only to a machine-word boundary. This is insufficient for some use-cases: for example, storing SIMD data or structs that require a larger alignment.</p>\n<p>This PR adds a parameter to the <code>StackSlotData</code> to specify alignment, and the associated logic to the CLIF parser and printer. It updates the shared ABI code to compute the stackslot layout taking the alignment into account. In order to ensure the alignment is always a power of two, it is stored as a shift amount (log2 of actual alignment) in the IR.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 439045765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715872897
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061155344\">PR review</a>.</p>",
        "id": 439046049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715872985
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603590632\">PR review comment</a>:</p>\n<blockquote>\n<p>(Just below this point) the old <code>alignment</code> function didn't seem to be used in the ABI code or anywhere else; it's likely left over from some earlier use-case. The \"largest power of two that divides...\" logic is a little weird (it can result in an alignment less than requested?) so I removed it and pushed the alignment computation to the <code>std::cmp::max</code> in <code>abi.rs</code>.</p>\n</blockquote>",
        "id": 439046052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715872985
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439046909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715873256
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#issuecomment-2115553785\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>:</p>\n<blockquote>\n<p>(for the record: work on this now spawned by <a href=\"#narrow/stream/217117-cranelift/topic/Retrieve.20alignment.20of.20architecture\">this thread</a>)</p>\n</blockquote>",
        "id": 439047240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715873332
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061211926\">PR review</a>:</p>\n<blockquote>\n<p>Awesome!</p>\n</blockquote>",
        "id": 439051177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715874535
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061211926\">PR review</a>:</p>\n<blockquote>\n<p>Awesome!</p>\n</blockquote>",
        "id": 439051179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715874535
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603629276\">PR review comment</a>:</p>\n<blockquote>\n<p>Do we have a way of enabling an explicit stack check in clif tests? That would be a nice way of verifying that the total stack space required is accounted for.</p>\n</blockquote>",
        "id": 439051180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715874535
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603633297\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            u32::try_from(align).map_err(|_| self.error(\"alignment must be a 32-bit unsigned integer\"))?\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 439051181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715874535
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061233849\">PR review</a>.</p>",
        "id": 439052294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715874913
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061233849\">PR review</a>.</p>",
        "id": 439052295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715874913
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603642829\">PR review comment</a>:</p>\n<blockquote>\n<p>Can this be set to 4? The ValRaw bits in Wasmtime require a 16-byte alignment </p>\n</blockquote>",
        "id": 439052296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715874913
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061260427\">PR review</a>.</p>",
        "id": 439054536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715875546
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603657812\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah!</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>function %f0() -&gt; i64, i64, i64, i64 {\n  gv0 = vmctx\n  ss0 = explicit_slot 8, align=16\n  ss1 = explicit_slot 8, align=16\n  ss2 = explicit_slot 4\n  ss3 = explicit_slot 4\n  ss4 = stack_limit gv0\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 439054537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715875546
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603657812\">PR review comment</a>.</p>",
        "id": 439054660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715875579
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439056854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876302
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439057263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876433
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439057381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876481
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061299676\">PR review</a>.</p>",
        "id": 439057395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876487
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603680930\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 439057396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876487
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439057931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876685
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439058030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876719
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439058224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715876798
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635\">PR #8635</a>.</p>",
        "id": 439064357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715878972
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061746320\">PR review</a>.</p>",
        "id": 439090416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715889034
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603954465\">PR review comment</a>:</p>\n<blockquote>\n<p>If the alignment is bigger than the ABI stack alignment it would be necessary to adjust the stack pointer to correctly align it. This is missing here. Rust allows arbitrary power of two alignments for stack variables, even something crazy like a 1GB alignment. More realistically though, cache line alignment is used by crates like rayon for performance reasons. Without correctly aligning, rustc will trigger a debug assertion in some cases like for the aforementioned rayon crate.</p>\n</blockquote>",
        "id": 439090417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715889034
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#pullrequestreview-2061901730\">PR review</a>.</p>",
        "id": 439102436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715894027
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1604049170\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yes, that's a good point -- to summarize: alignment of offset within the stack frame to alignment A does not imply alignment to A overall, because SP itself may be aligned less (e.g. only to A/4).</p>\n<p>I don't have time to work further on this at the moment, but I'd be happy to review a PR that addressed this.</p>\n</blockquote>",
        "id": 439102437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715894027
    }
]