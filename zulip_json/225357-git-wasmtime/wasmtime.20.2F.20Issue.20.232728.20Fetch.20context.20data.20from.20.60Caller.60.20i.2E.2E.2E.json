[
    {
        "content": "<p>davxy opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728\">Issue #2728</a>:</p>\n<blockquote>\n<p>Hi there, I'm using your Rust implementation.</p>\n<p>I'm having hard times trying to pass a structure reference from the host (before entering the wasm) to a host function (called from the wasm).</p>\n<p>The idea is to be able to fetch a reference to the data once I'm in the host function callback (actually a solution can be pass the data as a serialized byte array, but that option has been excluded for performance reasons).</p>\n<p>Is there a way to attach a reference to my structure to the <code>Caller</code> structure that I receive in the host function?</p>\n<p>I think that the issue has already being partially covered by #2491 (using lambdas) . But I was wandering if some other alternative method is available.</p>\n<p>Thank you so much for your awesome work</p>\n</blockquote>",
        "id": 230387609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615829559
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728#issuecomment-799620314\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728\">Issue #2728</a>:</p>\n<blockquote>\n<p>The next release of wasmtime will let you configure <code>Store</code>-specific context data, and you can get the <code>Store</code> from a <code>Caller</code>:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/store.rs#L216-L242\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/wasmtime/src/store.rs#L216-L242</a></li>\n<li><a href=\"https://docs.rs/wasmtime/0.24.0/wasmtime/struct.Caller.html#method.store\">https://docs.rs/wasmtime/0.24.0/wasmtime/struct.Caller.html#method.store</a></li>\n</ul>\n</blockquote>",
        "id": 230390312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615830621
    },
    {
        "content": "<p>davxy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728#issuecomment-799983074\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728\">Issue #2728</a>:</p>\n<blockquote>\n<p>Awesome!!!</p>\n<p>Just to know how to move with my project (i.e. wait for the release or make a temporary hack). When do you think that the new version will be published on <code>crates.io</code>?<br>\nNo pressure :-)</p>\n<p>Thanks a lot</p>\n</blockquote>",
        "id": 230464300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615875174
    },
    {
        "content": "<p>davxy edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728\">Issue #2728</a>:</p>\n<blockquote>\n<p>Hi there, I'm using your Rust implementation.</p>\n<p>I'm having hard times trying to pass a structure reference from the host (before entering the wasm) to a host function (called from the wasm).</p>\n<p>The idea is to be able to fetch a reference to the data once I'm in the host function callback (actually a solution can be pass the data as a serialized byte array, but that option has been excluded for performance reasons).</p>\n<p>Is there a way to attach a reference to my structure to the <code>Caller</code> structure that I receive in the host function?</p>\n<p>I think that the issue has already being partially covered by #2491 (using lambdas) . But I was wandering if some other alternative method is available.</p>\n<p>Thank you so much for your awesome work</p>\n</blockquote>",
        "id": 230464930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615875857
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728#issuecomment-800435508\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728\">Issue #2728</a>:</p>\n<blockquote>\n<p>I'll double check with the team to see if there's anything we need to finish up first before we can cut a new release.</p>\n<p>In the meantime, you can add this to your <code>Cargo.toml</code>:</p>\n<p><div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[patch.crates-io]</span>\n<span class=\"n\">wasmtime</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"n\">git</span> <span class=\"o\">=</span> <span class=\"s\">\"https://github.com/bytecodealliance/wasmtime.git\"</span><span class=\"p\">,</span> <span class=\"n\">branch</span> <span class=\"o\">=</span> <span class=\"s\">\"main\"</span> <span class=\"p\">}</span>\n<span class=\"c1\"># And do the same for any other wasmtime crates you're using that need to be</span>\n<span class=\"c1\"># the same version, eg `wasmtime-wasi`</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 230550125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615913655
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728#issuecomment-800582553\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728\">Issue #2728</a>:</p>\n<blockquote>\n<p>wasmtime 0.25.0 is now published on <a href=\"http://crates.io\">crates.io</a>: <a href=\"https://crates.io/crates/wasmtime/0.25.0\">https://crates.io/crates/wasmtime/0.25.0</a></p>\n</blockquote>",
        "id": 230585730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615926580
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2728\">Issue #2728</a>:</p>\n<blockquote>\n<p>Hi there, I'm using your Rust implementation.</p>\n<p>I'm having hard times trying to pass a structure reference from the host (before entering the wasm) to a host function (called from the wasm).</p>\n<p>The idea is to be able to fetch a reference to the data once I'm in the host function callback (actually a solution can be pass the data as a serialized byte array, but that option has been excluded for performance reasons).</p>\n<p>Is there a way to attach a reference to my structure to the <code>Caller</code> structure that I receive in the host function?</p>\n<p>I think that the issue has already being partially covered by #2491 (using lambdas) . But I was wandering if some other alternative method is available.</p>\n<p>Thank you so much for your awesome work</p>\n</blockquote>",
        "id": 230585731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1615926580
    }
]