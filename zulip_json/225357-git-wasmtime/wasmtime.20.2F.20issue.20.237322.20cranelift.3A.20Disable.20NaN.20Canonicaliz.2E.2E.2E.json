[
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:area:riscv64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7322\">Issue #7322</a>.</p>",
        "id": 397885309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697932208
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7322\">issue #7322</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>In RISC-V almost all <a href=\"https://github.com/riscv/riscv-isa-manual/blob/c8155afea51a0d47297936aa2f5d29d7ce3946f3/src/f-st-ext.adoc#nan-generation-and-propagation\">floating point instructions return a canonical NaN when its result would be a NaN</a>. In cranelift we have a separate pass that includes some NaN normalization code when the <code>enable_nan_canonicalization</code> flag is enabled. RISC-V's canonical NaN pattern is also defined to be the same as WASM's canonical NaN.</p>\n<p>This isn't really required for RISC-V and just causes additional overhead, so it would be nice if we could disable it. This thought occurred to me while reading #7321 which might make that easier by querying each backend and applying those legalization rules conditionally. </p>\n</blockquote>",
        "id": 397885310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697932208
    }
]