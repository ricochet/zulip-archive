[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2409\">Issue #2409</a>:</p>\n<blockquote>\n<p>As discussed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2397#discussion_r522410217\">https://github.com/bytecodealliance/wasmtime/pull/2397#discussion_r522410217</a>, the Cranelift semantics for shift amounts must be masked to the number of bits that are present in the value to be shifted; e.g. if we try to shift a 32-bit integer by <code>33 we would actually shift by </code>33 mod 32 = 1<code>. Currently, these semantics (which may the Wasm semantics) are enforced in the translation from Wasm to CLIF (i.e. </code>code_translator.rs`) and not by the compiler backends. This means that users of Cranelift are able to use shifts with the incorrect semantics.</p>\n<p>My proposed fix is to remove the masking from <code>code_translator.rs</code> and add it directly to the x64 backend--might need some help for the other backends (cc: @akirilov-arm, @cfallin). Another fix would be to change the semantics, but this seems less desirable so I don't plan to pursue it (let me know in the comments if you disagree!).</p>\n</blockquote>",
        "id": 216537724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605219668
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2409\">Issue #2409</a>:</p>\n<blockquote>\n<p>As discussed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2397#discussion_r522410217\">https://github.com/bytecodealliance/wasmtime/pull/2397#discussion_r522410217</a>, the Cranelift semantics for shift amounts must be masked to the number of bits that are present in the value to be shifted; e.g. if we try to shift a 32-bit integer by <code>33</code> we would actually shift by <code>33 mod 32 = 1</code>. Currently, these semantics (which match the Wasm semantics) are enforced in the translation from Wasm to CLIF (i.e. <code>code_translator.rs</code>) and not by the compiler backends. This means that users of Cranelift are able to use shifts with the incorrect semantics.</p>\n<p>My proposed fix is to remove the masking from <code>code_translator.rs</code> and add it directly to the x64 backend--might need some help for the other backends (cc: @akirilov-arm, @cfallin). Another fix would be to change the semantics, but this seems less desirable so I don't plan to pursue it (let me know in the comments if you disagree!).</p>\n</blockquote>",
        "id": 218343744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606769271
    }
]