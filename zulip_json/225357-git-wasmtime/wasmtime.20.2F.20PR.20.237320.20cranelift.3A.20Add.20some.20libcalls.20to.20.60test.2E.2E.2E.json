[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7320\">PR #7320</a> from <code>afonso360:interpret-libcalls</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a follow up to one of @alexcrichton 's <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7203#issuecomment-1758980302\">comments</a> in #7203, where he found some fuzzing issues with RISC-V. I'm still investigating those, but this solves one of them.</p>\n<p>Fuzzgen can currently <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ed68661976554b8ea967d7d3ca2f2e0741323aad/fuzz/fuzz_targets/cranelift-fuzzgen.rs#L283-L291\">generate a number of libcalls</a>, these also need to be given a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ed68661976554b8ea967d7d3ca2f2e0741323aad/fuzz/fuzz_targets/cranelift-fuzzgen.rs#L301-L312\">handler when building the interpreter</a>. We currently have that in the fuzzgen interpreter, but don't have an equivalent in <code>test interpret</code>, so when copying a failing clif case from fuzzgen it's possible to get a second error if the testcase references some libcall.</p>\n<p>I've been currently just stripping out libcalls from failing clif cases, but probably should have addressed this a while ago.</p>\n<p>This adds the same libcalls that we have in the fuzzer, it might be worth having a default interpreter implementation in <code>cranelift-interpreter</code> that adds these, not entirely sure.</p>\n</blockquote>",
        "id": 397851682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697896272
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7320\">PR #7320</a>.</p>",
        "id": 397851683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697896272
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7320\">PR #7320</a>.</p>",
        "id": 397851684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697896272
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7320\">PR #7320</a>.</p>",
        "id": 397851685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697896272
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7320#pullrequestreview-1691328507\">PR review</a>.</p>",
        "id": 397873773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697917530
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7320\">PR #7320</a>.</p>",
        "id": 397875925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697919935
    }
]