[
    {
        "content": "<p>ZW007 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I am running a standalone wasm file by using  <strong>wasmtime  --dir=.  mainWasi.wasm</strong><br>\nThe wasm needs to read some local files, the size of local files in total  is 10MB</p>\n<p>Error: failed to run main module <code>mainWasi.wasm</code></p>\n<p>Caused by:<br>\n    0: failed to invoke command default<br>\n    1: wasm trap: out of bounds memory access<br>\n       wasm backtrace:<br>\n         0: 0x29cb - &lt;unknown&gt;!Predict<br>\n         1: 0x346d - &lt;unknown&gt;!testing<br>\n         2: 0x38ef - &lt;unknown&gt;!foo<br>\n         3: 0x39eb - &lt;unknown&gt;!__original_main<br>\n         4:  0x2c1 - &lt;unknown&gt;!_start</p>\n<p>I wonder if I can allocate more memory for wasmtime? In lucet, i can use --min-reserved-size, but haven't found similar in wasmtime, but even when i use  <strong>lucetc-wasi --min-reserved-size 6442450944 -o <a href=\"http://mainLucet.so\">mainLucet.so</a> mainWasi.wasm</strong> to compile in lucet, I still get the error in lucet run: thread 'main' panicked at 'instance can be created: ModuleError(IncorrectModule(\"heap spec sizes would overflow: HeapSpec { reserved_size: 6442450944, guard_size: 4194304, initial_size: 131072, max_size: None }\"))', lucet-wasi/src/main.rs:239:24</p>\n<p>What I am running is a standalone lenet inference task. I dont think it can be called a large app. Maybe I should try to read just one image from the file system, rather than the whole t10k-images-idx3-ubyte which is 7.8MB. </p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 217360152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605845527
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-731397580\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>Sorry it sounds like there's a lot of moving parts here and there's perhaps more than a few scenarios in play. Would you be able to share a set of instructions along with code of how to reproduce the issue you're currently having?</p>\n</blockquote>",
        "id": 217456327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605904957
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-731410814\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Sorry it sounds like there's a lot of moving parts here and there's perhaps more than a few scenarios in play. Would you be able to share a set of instructions along with code of how to reproduce the issue you're currently having?</p>\n</blockquote>\n<p>@alexcrichton Thank you. Does wasm support struct, I have tested by printf,  before this line, it is OK<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L271\">https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L271</a><br>\nWhere <strong>Feature</strong> is a struct defined here:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/lenet.h#L60\">https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/lenet.h#L60</a></p>\n<p>To reproduce the error, In readme, you can find the error I had in runing inside wasmtime. <br>\n<a href=\"https://github.com/ZW007/lenet5\">https://github.com/ZW007/lenet5</a></p>\n</blockquote>",
        "id": 217459701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605906907
    },
    {
        "content": "<p>ZW007 deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-731410814\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Sorry it sounds like there's a lot of moving parts here and there's perhaps more than a few scenarios in play. Would you be able to share a set of instructions along with code of how to reproduce the issue you're currently having?</p>\n</blockquote>\n<p>@alexcrichton Thank you. Does wasm support struct, I have tested by printf,  before this line, it is OK<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L271\">https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L271</a><br>\nWhere <strong>Feature</strong> is a struct defined here:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/lenet.h#L60\">https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/lenet.h#L60</a></p>\n<p>To reproduce the error, In readme, you can find the error I had in runing inside wasmtime. <br>\n<a href=\"https://github.com/ZW007/lenet5\">https://github.com/ZW007/lenet5</a></p>\n</blockquote>",
        "id": 217460816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605907499
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-731415167\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Sorry it sounds like there's a lot of moving parts here and there's perhaps more than a few scenarios in play. Would you be able to share a set of instructions along with code of how to reproduce the issue you're currently having?</p>\n</blockquote>\n<p>@alexcrichton Thank you. Does wasm support struct, I have tested by printf, before this line, it is OK<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L271\">https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L271</a><br>\nWhere Feature is a struct defined here:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/lenet.h#L60\">https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/lenet.h#L60</a></p>\n<p>To reproduce the error, In readme, you can find the error I had in runing inside wasmtime.<br>\n<a href=\"https://github.com/ZW007/lenet5\">https://github.com/ZW007/lenet5</a></p>\n</blockquote>",
        "id": 217460990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605907583
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-733849137\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>Sorry for taking a bit to get back, but running that wasm file I get \"Dataset File Not Find!Please Copy Dataset to the Floder Included the exe\", so I think I'm missing some files?</p>\n<p>Also have you seen this file work in other wasm environments? Is there anything in particular that makes you think wasmtime is at fault?</p>\n</blockquote>",
        "id": 217915973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606325616
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-733887566\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Sorry for taking a bit to get back, but running that wasm file I get \"Dataset File Not Find!Please Copy Dataset to the Floder Included the exe\", so I think I'm missing some files?</p>\n</blockquote>\n<p>@alexcrichton  Hi Alex! Sorry for the mess. I have deleted the wasm file in that repo. Please refer to the new repo. <br>\nYou could clone that repo, get the wasm file, and run the wasm (need to give --dir=. permission) using  :<br>\n<strong>wasm32-wasi-clang   -I ./ lenet.c main.c -lm -o mainWasi.wasm</strong><br>\n<strong>wasmtime --dir=. mainWasi.wasm</strong></p>\n<p>It should work if you have downloaded the mnist dataset, extra it and put them in the same dir: <a href=\"http://yann.lecun.com/exdb/mnist/\">http://yann.lecun.com/exdb/mnist/</a></p>\n<p>The extracted  files need to named by: <br>\nt10k-images.idx3-ubyte <br>\nt10k-labels.idx1-ubyte<br>\ntrain-images.idx3-ubyte<br>\ntrain-labels.idx1-ubyte</p>\n<blockquote>\n<p>Also have you seen this file work in other wasm environments? Is there anything in particular that makes you think wasmtime is at fault?</p>\n</blockquote>\n<p>Yes, I ran it in Nodejs and worked fine. That is how I ran it, first generate wasm file and glue code, </p>\n<p><strong>emcc -s ALLOW_MEMORY_GROWTH=1 -s NODERAWFS=1 -I ./ lenet.c main.c -lm -o</strong></p>\n<p>After that, there  is an   a.out.index.js file create by me, <a href=\"https://github.com/ZW007/lenet5/blob/main/a.out.index.js\">https://github.com/ZW007/lenet5/blob/main/a.out.index.js</a></p>\n<p><strong>node a.out.index.js</strong></p>\n<p>You should find node works fine then,<br>\n</p>\n</blockquote>",
        "id": 217923783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606329941
    },
    {
        "content": "<p>ZW007 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-733887566\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Sorry for taking a bit to get back, but running that wasm file I get \"Dataset File Not Find!Please Copy Dataset to the Floder Included the exe\", so I think I'm missing some files?</p>\n</blockquote>\n<p>@alexcrichton  Hi Alex! Sorry for the mess. I have deleted the wasm file in that repo. Please refer to the new repo. <br>\nYou could clone that repo, get the wasm file, and run the wasm (need to give --dir=. permission) using  :<br>\n<strong>wasm32-wasi-clang   -I ./ lenet.c main.c -lm -o mainWasi.wasm</strong><br>\n<strong>wasmtime --dir=. mainWasi.wasm</strong></p>\n<p>It should work if you have downloaded the mnist dataset, extra it and put them in the same dir: <a href=\"http://yann.lecun.com/exdb/mnist/\">http://yann.lecun.com/exdb/mnist/</a></p>\n<p>The extracted  files need to named by: <br>\nt10k-images.idx3-ubyte <br>\nt10k-labels.idx1-ubyte<br>\ntrain-images.idx3-ubyte<br>\ntrain-labels.idx1-ubyte</p>\n<blockquote>\n<p>Also have you seen this file work in other wasm environments? Is there anything in particular that makes you think wasmtime is at fault?</p>\n</blockquote>\n<p>Yes, I ran it in Nodejs and worked fine. That is how I ran it, first generate wasm file and glue code,  using NODERAWFS=1 for file mapping</p>\n<p><strong>emcc -s ALLOW_MEMORY_GROWTH=1 -s NODERAWFS=1 -I ./ lenet.c main.c -lm -o</strong></p>\n<p>After that, there  is an   a.out.index.js file create by me, <a href=\"https://github.com/ZW007/lenet5/blob/main/a.out.index.js\">https://github.com/ZW007/lenet5/blob/main/a.out.index.js</a>   run this js file by</p>\n<p><strong>node a.out.index.js</strong></p>\n<p>You should find node works fine then,<br>\n</p>\n</blockquote>",
        "id": 217924284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606330234
    },
    {
        "content": "<p>ZW007 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-733887566\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Sorry for taking a bit to get back, but running that wasm file I get \"Dataset File Not Find!Please Copy Dataset to the Floder Included the exe\", so I think I'm missing some files?</p>\n</blockquote>\n<p>@alexcrichton  Hi Alex! Sorry for the mess. I have deleted the wasm file in that repo. Please refer to the new repo. <br>\nYou could clone that repo, get the wasm file, and run the wasm (need to give --dir=. permission) using  :<br>\n<strong>wasm32-wasi-clang   -I ./ lenet.c main.c -lm -o mainWasi.wasm</strong><br>\n<strong>wasmtime --dir=. mainWasi.wasm</strong></p>\n<p>It should work if you have downloaded the mnist dataset, extra it and put them in the same dir: <a href=\"http://yann.lecun.com/exdb/mnist/\">http://yann.lecun.com/exdb/mnist/</a></p>\n<p>The extracted  files need to named by: <br>\nt10k-images.idx3-ubyte <br>\nt10k-labels.idx1-ubyte<br>\ntrain-images.idx3-ubyte<br>\ntrain-labels.idx1-ubyte</p>\n<blockquote>\n<p>Also have you seen this file work in other wasm environments? Is there anything in particular that makes you think wasmtime is at fault?</p>\n</blockquote>\n<p>Yes, I ran it in Nodejs and worked fine. That is how I ran it, first generate wasm file and glue code,  using NODERAWFS=1 for file mapping</p>\n<p><strong>emcc -s ALLOW_MEMORY_GROWTH=1 -s NODERAWFS=1 -I ./ lenet.c main.c -lm -o</strong></p>\n<p>After that, there  is an   a.out.index.js file create by me, <a href=\"https://github.com/ZW007/lenet5/blob/main/a.out.index.js\">https://github.com/ZW007/lenet5/blob/main/a.out.index.js</a>   run this js file by</p>\n<p><strong>node a.out.index.js</strong></p>\n<p>You should find node works fine then. Please let me know if there are still problems, thank you!<br>\n</p>\n</blockquote>",
        "id": 217924584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606330425
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-733963328\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I believe the issue you're running into is stack overflow. If during the linking phase you tell LLD to create a larger stack then it makes more progress. I believe the reason why it seems emscripten works and C doesn't is that presumably emscripten allocates a larger stack by default. You can allocate a larger stack by passing <code>-Wl,-z,stack-size=1048576</code> to the compilation.</p>\n</blockquote>",
        "id": 217943913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606341358
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-733986069\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>I believe the issue you're running into is stack overflow. If during the linking phase you tell LLD to create a larger stack then it makes more progress. I believe the reason why it seems emscripten works and C doesn't is that presumably emscripten allocates a larger stack by default. You can allocate a larger stack by passing <code>-Wl,-z,stack-size=1048576</code> to the compilation.</p>\n</blockquote>\n<p>@alexcrichton Thank you Alex! I asked a silly question again, sorry ( </p>\n<p>I suspected the problem is from memory and read the wasmtime tutorial <a href=\"http://docs.wasmtime.dev/introduction.html\">http://docs.wasmtime.dev/introduction.html</a> <br>\nbut i did not find anything about stack allocation. I know it is clang usage, not wasmtime, maybe you could add some about clang, to make it nicer to the newbie like me )</p>\n</blockquote>",
        "id": 217949917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606346016
    },
    {
        "content": "<p>ZW007 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I am running a standalone wasm file by using  <strong>wasmtime  --dir=.  mainWasi.wasm</strong><br>\nThe wasm needs to read some local files, the size of local files in total  is 10MB</p>\n<p>Error: failed to run main module <code>mainWasi.wasm</code></p>\n<p>Caused by:<br>\n    0: failed to invoke command default<br>\n    1: wasm trap: out of bounds memory access<br>\n       wasm backtrace:<br>\n         0: 0x29cb - &lt;unknown&gt;!Predict<br>\n         1: 0x346d - &lt;unknown&gt;!testing<br>\n         2: 0x38ef - &lt;unknown&gt;!foo<br>\n         3: 0x39eb - &lt;unknown&gt;!__original_main<br>\n         4:  0x2c1 - &lt;unknown&gt;!_start</p>\n<p>I wonder if I can allocate more memory for wasmtime? In lucet, i can use --min-reserved-size, but haven't found similar in wasmtime, but even when i use  <strong>lucetc-wasi --min-reserved-size 6442450944 -o <a href=\"http://mainLucet.so\">mainLucet.so</a> mainWasi.wasm</strong> to compile in lucet, I still get the error in lucet run: thread 'main' panicked at 'instance can be created: ModuleError(IncorrectModule(\"heap spec sizes would overflow: HeapSpec { reserved_size: 6442450944, guard_size: 4194304, initial_size: 131072, max_size: None }\"))', lucet-wasi/src/main.rs:239:24</p>\n<p>What I am running is a standalone lenet inference task. I dont think it can be called a large app. Maybe I should try to read just one image from the file system, rather than the whole t10k-images-idx3-ubyte which is 7.8MB. </p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 217957564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606354130
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-735843249\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>No worries, and makes sense that we should add it to the tutorial!</p>\n</blockquote>",
        "id": 218298649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606748909
    }
]