[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5818\">issue #5818</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1191\">here</a>.</p>\n<p>AtomicCAS usually swaps the value at an address atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a> <code>p</code></li>\n<li>Compare the loaded <code>p</code> value to the expected <code>e</code> value passed in the instruction arguments.</li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value</a>  <code>x</code> if <code>p</code> and <code>e</code> are equal</li>\n<li>Return the loaded <code>p</code> value, regardless if we actually stored or not <code>x</code></li>\n</ol>\n<p>(I'm using the same nomenclature that we have in the  <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code> instruction documents</a>)</p>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-cas.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328492176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676646377
    },
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5818\">issue #5818</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1191\">here</a>.</p>\n<p>AtomicCAS usually swaps the value at an address atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a> <code>p</code></li>\n<li>Compare the loaded <code>p</code> value to the expected <code>e</code> value passed in the instruction arguments.</li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value</a>  <code>x</code> if <code>p</code> and <code>e</code> are equal</li>\n<li>Return the loaded <code>p</code> value, regardless if we actually stored or not <code>x</code></li>\n</ol>\n<p>(I'm using the same nomenclature that we have in the  <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code> instruction documents</a>)</p>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-cas.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328492178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676646378
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5818\">issue #5818</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1191\">here</a>.</p>\n<p>AtomicCAS usually swaps the value at an address atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a> <code>p</code></li>\n<li>Compare the loaded <code>p</code> value to the expected <code>e</code> value passed in the instruction arguments.</li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value</a>  <code>x</code> if <code>p</code> and <code>e</code> are equal</li>\n<li>Return the loaded <code>p</code> value, regardless if we actually stored or not <code>x</code></li>\n</ol>\n<p>(I'm using the same nomenclature that we have in the  <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code> instruction documentation</a>)</p>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-cas.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328492248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676646404
    },
    {
        "content": "<p>jameysharp labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5818\">issue #5818</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1191\">here</a>.</p>\n<p>AtomicCAS usually swaps the value at an address atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a> <code>p</code></li>\n<li>Compare the loaded <code>p</code> value to the expected <code>e</code> value passed in the instruction arguments.</li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value</a>  <code>x</code> if <code>p</code> and <code>e</code> are equal</li>\n<li>Return the loaded <code>p</code> value, regardless if we actually stored or not <code>x</code></li>\n</ol>\n<p>(I'm using the same nomenclature that we have in the  <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code> instruction documentation</a>)</p>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-cas.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328553431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676664147
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5818\">issue #5818</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1191\">here</a>.</p>\n<p>AtomicCAS usually swaps the value at an address atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a> <code>p</code></li>\n<li>Compare the loaded <code>p</code> value to the expected <code>e</code> value passed in the instruction arguments.</li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value</a>  <code>x</code> if <code>p</code> and <code>e</code> are equal</li>\n<li>Return the loaded <code>p</code> value, regardless if we actually stored or not <code>x</code></li>\n</ol>\n<p>(I'm using the same nomenclature that we have in the  <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_cas\"><code>AtomicCAS</code> instruction documentation</a>)</p>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-cas.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 339210561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677793402
    }
]