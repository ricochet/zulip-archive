[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2983\">issue #2983</a>:</p>\n<blockquote>\n<p>The <code>Caller::get_export</code> API, which we recommend callees use to get access to memories and functions, internally allocates memory on the memory/function vectors within a store. This memory, however, cannot be deallocated until after the <code>Store</code> is itself deallocated. This means that each time <code>get_export</code> is called, which is typically handled by wasm itself, memory usage keeps growing.</p>\n<p>We should instead have some sort of map where the same export, when fetched, always returns the same index within the <code>Store</code>.</p>\n</blockquote>",
        "id": 242616492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623685136
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2983\">issue #2983</a>:</p>\n<blockquote>\n<p>The <code>Caller::get_export</code> API, which we recommend callees use to get access to memories and functions, internally allocates memory on the memory/function vectors within a store. This memory, however, cannot be deallocated until after the <code>Store</code> is itself deallocated. This means that each time <code>get_export</code> is called, which is typically handled by wasm itself, memory usage keeps growing.</p>\n<p>We should instead have some sort of map where the same export, when fetched, always returns the same index within the <code>Store</code>.</p>\n</blockquote>",
        "id": 242616505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623685144
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2983#issuecomment-860790311\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2983\">issue #2983</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 242617576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623685537
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2983\">issue #2983</a>:</p>\n<blockquote>\n<p>The <code>Caller::get_export</code> API, which we recommend callees use to get access to memories and functions, internally allocates memory on the memory/function vectors within a store. This memory, however, cannot be deallocated until after the <code>Store</code> is itself deallocated. This means that each time <code>get_export</code> is called, which is typically handled by wasm itself, memory usage keeps growing.</p>\n<p>We should instead have some sort of map where the same export, when fetched, always returns the same index within the <code>Store</code>.</p>\n</blockquote>",
        "id": 243071000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623958070
    }
]