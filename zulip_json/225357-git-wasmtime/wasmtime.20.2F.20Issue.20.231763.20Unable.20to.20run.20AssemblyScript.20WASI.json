[
    {
        "content": "<p>okalousek opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>I have tried some assemblyscript projects with WASI, but no one worked with wasmtime. All od these are working fine on wasmer. <br>\nIt showes me error with <em>something</em> Is not a function</p>\n<p><a href=\"https://github.com/torch2424/wasm-matrix\">https://github.com/torch2424/wasm-matrix</a> </p>\n<p><a href=\"https://github.com/shonenada/hash-wasm\">https://github.com/shonenada/hash-wasm</a> </p>\n</blockquote>",
        "id": 198828987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590531780
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-634688579\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>Thanks for the report! Would you be able to provide us with some reproduction steps? For example what wasm modules were you working with? How did you execute them? (etc)</p>\n</blockquote>",
        "id": 198896217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590588798
    },
    {
        "content": "<p>okalousek <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-634914991\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>Just downloaded these from issue links. Wasm-matrix have prebuild WASMs and hash-wasm i had to compile myself. I did not do anything special with compilation. Only runned build.</p>\n</blockquote>",
        "id": 198946654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590610457
    },
    {
        "content": "<p>okalousek edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-634914991\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>Just downloaded these from issue links. Wasm-matrix have prebuild WASMs and hash-wasm i had to compile myself. I did not do anything special with compilation. Only runned build.<br>\nI have executed by: wasmtime buildedname.wasm</p>\n</blockquote>",
        "id": 198946674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590610476
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-634918396\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>The \"matrix\" example is known to use ANSI-style escape codes to draw character graphics, and Wasmtime doesn't currently support this, because unrestricted use of ANSI-style escape codes creates a variety of security concerns (eg. <a href=\"http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000523\">http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1000523</a>). We are currently working on a design which allows us to support escape sequences while ensuring security.</p>\n<p>Could you post the error message you see when you run hash-wasm?</p>\n</blockquote>",
        "id": 198947576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590610902
    },
    {
        "content": "<p>okalousek <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-634919325\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>$ wasmtime hash.wasm\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>Error: failed to run main module `hash.wasm`\n\nCaused by:\n    0: failed to instantiate &quot;hash.wasm&quot;\n    1: command export &#39;__rtti_base&#39; is not a function\n</code></pre></div>\n\n\n</blockquote>",
        "id": 198947869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590611028
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-635269793\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p><code>__rtti_base</code> is part of the <code>AssemblyScript</code> runtime. Wasmtime doesn't allow any exported globals other than a few specific ones:</p>\n</blockquote>",
        "id": 199007525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590663485
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-635269793\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p><code>__rtti_base</code> is part of the <code>AssemblyScript</code> runtime. Wasmtime doesn't allow any exported globals other than a few specific ones:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/3715e19c67ab7e59fadf750a1de2ba48f1e6f4ce/crates/wasmtime/src/linker.rs#L448\">https://github.com/bytecodealliance/wasmtime/blob/3715e19c67ab7e59fadf750a1de2ba48f1e6f4ce/crates/wasmtime/src/linker.rs#L448</a></p>\n</blockquote>",
        "id": 199007534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590663491
    },
    {
        "content": "<p>torch2424 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-635498208\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>Hello! @pchickey brought this to my attention <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span> </p>\n<p>@bjorn3 is correct in that looks like an export from AS runtime <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span> Though, If I understand correctly, a WASI module can have multiple exports correct? Is that a Wasmtime issue than?</p>\n<p>@okalousek in the meantime, you could compile your AssemblyScript with <code>--runtime half</code>, as that <a href=\"https://docs.assemblyscript.org/details/runtime#runtime-variants\">won't export anything that is from the runtime</a>.</p>\n<p>And wasm-matrix is a really old AS WASI example of mine (it doesn't use the runtime, it uses the old allocators directly). I've been working on some WASI examples for WasmByExample. As the AS WASI story is a lot better now, especially in very recently released <code>0.10.0</code> <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span> </p>\n</blockquote>",
        "id": 199056260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590688000
    },
    {
        "content": "<p>torch2424 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-635503924\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>And I went ahead and made a quick hello world example: <a href=\"https://github.com/torch2424/as-playground/tree/master/wasi-hello-world\">https://github.com/torch2424/as-playground/tree/master/wasi-hello-world</a> . Take a look at the <code>package.json</code>, it shows how I am using <code>--runtime half</code> with the compiler, to work around this for now. Also, I provided a binary as well @okalousek if you want to test it quickly <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span> </p>\n</blockquote>",
        "id": 199057734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590688672
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-635696812\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>AssemblyScript programs are now fixed, as of #1773. Use of <code>--runtime half</code> is recommended for command-style programs like this, though not strictly required (for now). Thanks for your help everyone!</p>\n<p>I've also now collected the information here into a document showing how to run AssemblyScript programs in Wasmtime:</p>\n<p><a href=\"https://bytecodealliance.github.io/wasmtime/wasm-assemblyscript.html\">https://bytecodealliance.github.io/wasmtime/wasm-assemblyscript.html</a></p>\n</blockquote>",
        "id": 199103667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590714125
    },
    {
        "content": "<p>sunfishcode closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>I have tried some assemblyscript projects with WASI, but no one worked with wasmtime. All od these are working fine on wasmer. <br>\nIt showes me error with <em>something</em> Is not a function</p>\n<p><a href=\"https://github.com/torch2424/wasm-matrix\">https://github.com/torch2424/wasm-matrix</a> </p>\n<p><a href=\"https://github.com/shonenada/hash-wasm\">https://github.com/shonenada/hash-wasm</a> </p>\n</blockquote>",
        "id": 199103669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590714125
    },
    {
        "content": "<p>torch2424 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763#issuecomment-636238255\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1763\">Issue #1763</a>:</p>\n<blockquote>\n<p>Yay! Thank you @sunfishcode ! <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span> </p>\n</blockquote>",
        "id": 199225294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590795858
    }
]