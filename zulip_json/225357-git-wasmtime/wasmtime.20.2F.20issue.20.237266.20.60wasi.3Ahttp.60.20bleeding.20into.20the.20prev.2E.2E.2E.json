[
    {
        "content": "<p><a href=\"https://github.com/rvolosatovs\">rvolosatovs</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266\">Issue #7266</a>.</p>",
        "id": 397098578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697545940
    },
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266\">issue #7266</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/rvolosatovs/wasmtime-adapter-http-repro\">https://github.com/rvolosatovs/wasmtime-adapter-http-repro</a></p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>clone <a href=\"https://github.com/rvolosatovs/wasmtime-adapter-http-repro\">https://github.com/rvolosatovs/wasmtime-adapter-http-repro</a></li>\n<li><code>curl -sL https://github.com/bytecodealliance/wasmtime/releases/download/dev/wasi_snapshot_preview1.reactor.wasm | cargo run</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Success, especially because <code>wasm-tools print</code> suggests no <code>incoming-body</code> type exists in the adapter</p>\n<h3>Actual Results</h3>\n<p>Failure to encode a component</p>\n<h3>Versions and Environment</h3>\n<p><code>dev</code> (9e4d44626a008f8a1b1b3b4a48f0d5693185844b)</p>\n<p>Operating system: linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>We have seen this issue before @dicej @alexcrichton @pchickey, it appeared that it was fixed, but perhaps that was because the component and adapter definitions happened to be in sync during testing.</p>\n</blockquote>",
        "id": 397098579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697545940
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266\">issue #7266</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/rvolosatovs/wasmtime-adapter-http-repro\">https://github.com/rvolosatovs/wasmtime-adapter-http-repro</a></p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>clone <a href=\"https://github.com/rvolosatovs/wasmtime-adapter-http-repro\">https://github.com/rvolosatovs/wasmtime-adapter-http-repro</a></li>\n<li><code>curl -sL https://github.com/bytecodealliance/wasmtime/releases/download/dev/wasi_snapshot_preview1.reactor.wasm | cargo run</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Success, especially because <code>wasm-tools print</code> suggests no <code>incoming-body</code> type exists in the adapter</p>\n<h3>Actual Results</h3>\n<p>Failure to encode a component</p>\n<h3>Versions and Environment</h3>\n<p><code>dev</code> (9e4d44626a008f8a1b1b3b4a48f0d5693185844b)</p>\n<p>Operating system: linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>We have seen this issue before @dicej @alexcrichton @pchickey, it appeared that it was fixed, but perhaps that was because the component and adapter definitions happened to be in sync during testing.</p>\n</blockquote>",
        "id": 397102582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697547267
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266#issuecomment-1766641380\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266\">issue #7266</a>:</p>\n<blockquote>\n<p>Looking into this the issue appears to be:</p>\n<ul>\n<li>The <code>Resolve</code> for the world used to create the adapter has <code>wasi:http</code> in it. This is because the <code>wasmtime:wasi</code> package that's used to pull everything together has worlds in it that depend on <code>wasi:http</code>.</li>\n<li>When the adapter is produced the <code>wasmtime:wasi</code> package is serialized into binary and embedded within the adapter itself.</li>\n<li>When the adapter is processed by <code>wit-component</code> it will deserialize this information into an entire <code>Resolve</code> and then merge it with the target resolve.</li>\n</ul>\n<p>This means that even though the adapter itself doesn't use the <code>wasi:http</code> interfaces the merge step of two <code>Resolve</code> items still attempts to merge them together. The best fix that I can think of is to filter out items during the encoding phase so only the relevant types are encoded, namely just the <code>wasmtime:wasi/preview1-adapter-reactor</code> world for example. Such filtering should remove the encoding of <code>wasi:http</code> types and interfaces, meaning they'll be entirely gone from the adapter.</p>\n<p>Such a change must happen in <code>wit-component</code> in the <code>wasm-tools</code> repository. I'll wait for <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1252\">https://github.com/bytecodealliance/wasm-tools/pull/1252</a> to finish before implementing this.</p>\n</blockquote>",
        "id": 397132551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697556090
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266#issuecomment-1773211960\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266\">issue #7266</a>:</p>\n<blockquote>\n<p>Ok I've looked again at this and this should be solved by <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1260\">https://github.com/bytecodealliance/wasm-tools/pull/1260</a>. The issue doesn't actually reproduce as-is today due to the introduction of versions on <code>main</code> which means merging now succeeds, but I've tested <code>main</code> just before versions came in and was able to reproduce this issue and test that <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1260\">https://github.com/bytecodealliance/wasm-tools/pull/1260</a> fixes things.</p>\n<p>The fix there will be a bit delayed due to the fact that we'll have it off-by-default for a bit. Eventually down the road we'll switch the adapter to using the new metadata format by default, but until that point this bug will still be present. You can compile your own adapter, however, and specify <code>WIT_COMPONENT_NEW_ENCODE=1</code> to build an adapter with the new format to fix this issue. This does depend on all pices of the system using an updated <code>wit-component</code>, however.</p>\n</blockquote>",
        "id": 397758952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697826850
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266\">issue #7266</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/rvolosatovs/wasmtime-adapter-http-repro\">https://github.com/rvolosatovs/wasmtime-adapter-http-repro</a></p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>clone <a href=\"https://github.com/rvolosatovs/wasmtime-adapter-http-repro\">https://github.com/rvolosatovs/wasmtime-adapter-http-repro</a></li>\n<li><code>curl -sL https://github.com/bytecodealliance/wasmtime/releases/download/dev/wasi_snapshot_preview1.reactor.wasm | cargo run</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Success, especially because <code>wasm-tools print</code> suggests no <code>incoming-body</code> type exists in the adapter</p>\n<h3>Actual Results</h3>\n<p>Failure to encode a component</p>\n<h3>Versions and Environment</h3>\n<p><code>dev</code> (9e4d44626a008f8a1b1b3b4a48f0d5693185844b)</p>\n<p>Operating system: linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>We have seen this issue before @dicej @alexcrichton @pchickey, it appeared that it was fixed, but perhaps that was because the component and adapter definitions happened to be in sync during testing.</p>\n</blockquote>",
        "id": 429547224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711423045
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266#issuecomment-2019309337\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7266\">issue #7266</a>:</p>\n<blockquote>\n<p>I believe this has since been fixed, so closing.</p>\n</blockquote>",
        "id": 429547225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711423045
    }
]