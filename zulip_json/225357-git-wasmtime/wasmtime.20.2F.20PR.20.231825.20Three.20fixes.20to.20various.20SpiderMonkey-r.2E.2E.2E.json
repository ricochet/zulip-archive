[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825\">PR #1825</a> from <code>spidermonkey-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Properly mask constant values down to appropriate width when<br>\n  generating a constant value directly in aarch64 backend. This was a<br>\n  miscompilation introduced in the new-isel refactor. In combination<br>\n  with failure to respect NarrowValueMode, this resulted in a very<br>\n  subtle bug when an <code>i32</code> constant was used in bit-twiddling logic.</p>\n</li>\n<li>\n<p>Add support for <code>iadd_ifcout</code> in aarch64 backend as used in explicit<br>\n  heap-check mode. With this change, we no longer fail heap-related<br>\n  tests with the huge-heap-region mode disabled.</p>\n</li>\n<li>\n<p>Remove a panic that was occurring in some tests that are currently<br>\n  ignored on aarch64, by simply returning empty/default information in<br>\n<code>value_label</code> functionality rather than touching unimplemented APIs.<br>\n  This is not a bugfix per-se, but removes confusing panic messages from<br>\n<code>cargo test</code> output that might otherwise mislead.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 199830446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591323777
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825\">PR #1825</a>.</p>",
        "id": 199830448,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591323777
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825\">PR #1825</a> from <code>spidermonkey-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Properly mask constant values down to appropriate width when<br>\n  generating a constant value directly in aarch64 backend. This was a<br>\n  miscompilation introduced in the new-isel refactor. In combination<br>\n  with failure to respect NarrowValueMode, this resulted in a very<br>\n  subtle bug when an <code>i32</code> constant was used in bit-twiddling logic.</p>\n</li>\n<li>\n<p>Add support for <code>iadd_ifcout</code> in aarch64 backend as used in explicit<br>\n  heap-check mode. With this change, we no longer fail heap-related<br>\n  tests with the huge-heap-region mode disabled.</p>\n</li>\n<li>\n<p>Remove a panic that was occurring in some tests that are currently<br>\n  ignored on aarch64, by simply returning empty/default information in<br>\n<code>value_label</code> functionality rather than touching unimplemented APIs.<br>\n  This is not a bugfix per-se, but removes confusing panic messages from<br>\n<code>cargo test</code> output that might otherwise mislead.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 199941383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591396484
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825\">PR #1825</a> from <code>spidermonkey-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Properly mask constant values down to appropriate width when<br>\n  generating a constant value directly in aarch64 backend. This was a<br>\n  miscompilation introduced in the new-isel refactor. In combination<br>\n  with failure to respect NarrowValueMode, this resulted in a very<br>\n  subtle bug when an <code>i32</code> constant was used in bit-twiddling logic.</p>\n</li>\n<li>\n<p>Add support for <code>iadd_ifcout</code> in aarch64 backend as used in explicit<br>\n  heap-check mode. With this change, we no longer fail heap-related<br>\n  tests with the huge-heap-region mode disabled.</p>\n</li>\n<li>\n<p>Remove a panic that was occurring in some tests that are currently<br>\n  ignored on aarch64, by simply returning empty/default information in<br>\n<code>value_label</code> functionality rather than touching unimplemented APIs.<br>\n  This is not a bugfix per-se, but removes confusing panic messages from<br>\n<code>cargo test</code> output that might otherwise mislead.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 199943928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591398776
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825\">PR #1825</a> from <code>spidermonkey-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Properly mask constant values down to appropriate width when<br>\n  generating a constant value directly in aarch64 backend. This was a<br>\n  miscompilation introduced in the new-isel refactor. In combination<br>\n  with failure to respect NarrowValueMode, this resulted in a very<br>\n  subtle bug when an <code>i32</code> constant was used in bit-twiddling logic.</p>\n</li>\n<li>\n<p>Add support for <code>iadd_ifcout</code> in aarch64 backend as used in explicit<br>\n  heap-check mode. With this change, we no longer fail heap-related<br>\n  tests with the huge-heap-region mode disabled.</p>\n</li>\n<li>\n<p>Remove a panic that was occurring in some tests that are currently<br>\n  ignored on aarch64, by simply returning empty/default information in<br>\n<code>value_label</code> functionality rather than touching unimplemented APIs.<br>\n  This is not a bugfix per-se, but removes confusing panic messages from<br>\n<code>cargo test</code> output that might otherwise mislead.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 199947934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591403438
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825#pullrequestreview-426399120\">PR Review</a>.</p>",
        "id": 200125212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591634823
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825#discussion_r436827556\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: corresponds</p>\n</blockquote>",
        "id": 200125213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591634823
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825#pullrequestreview-426399120\">PR Review</a>.</p>",
        "id": 200125214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591634823
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825#discussion_r436829507\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: corresponds</p>\n</blockquote>",
        "id": 200125215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591634823
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825#discussion_r436840513\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It was UnsignedLessThan in the old backend's code; was this a preexisting bug, or is this a bad copy-pasto? I'm not sure it's quite easy to test right now, because there's no support for x86-64 in Spidermonkey, and I'm convinced it's testable with Cranelift's old x86 backend in Spidermonkey.</p>\n</blockquote>",
        "id": 200125216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591634824
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825\">PR #1825</a> from <code>spidermonkey-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<ul>\n<li>\n<p>Properly mask constant values down to appropriate width when<br>\n  generating a constant value directly in aarch64 backend. This was a<br>\n  miscompilation introduced in the new-isel refactor. In combination<br>\n  with failure to respect NarrowValueMode, this resulted in a very<br>\n  subtle bug when an <code>i32</code> constant was used in bit-twiddling logic.</p>\n</li>\n<li>\n<p>Add support for <code>iadd_ifcout</code> in aarch64 backend as used in explicit<br>\n  heap-check mode. With this change, we no longer fail heap-related<br>\n  tests with the huge-heap-region mode disabled.</p>\n</li>\n<li>\n<p>Remove a panic that was occurring in some tests that are currently<br>\n  ignored on aarch64, by simply returning empty/default information in<br>\n<code>value_label</code> functionality rather than touching unimplemented APIs.<br>\n  This is not a bugfix per-se, but removes confusing panic messages from<br>\n<code>cargo test</code> output that might otherwise mislead.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 200148817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591646529
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825#pullrequestreview-426577952\">PR Review</a>.</p>",
        "id": 200148966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591646593
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825#discussion_r436967631\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It's unclear to me why it was the way it was; but with the way that things are lowered now, it should be <code>&gt;=</code>, as far as I can tell. The documentation for the underlying trait method this fulfills (on <code>TargetIsa</code>) says that it is the condition that should be triggered when an add overflows; and that's definitely carry-flag-set on x86 (and aarch64). In any case we will want to carefully check this when we build out the new x86-64 backend.</p>\n</blockquote>",
        "id": 200148967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591646593
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1825\">PR #1825</a>.</p>",
        "id": 200154730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591649655
    }
]