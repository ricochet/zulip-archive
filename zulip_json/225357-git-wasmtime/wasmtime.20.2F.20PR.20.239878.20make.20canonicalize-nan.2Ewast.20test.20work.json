[
    {
        "content": "<p>Lordworms opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a> from <code>Lordworms:canonicalize</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 490096209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734672130
    },
    {
        "content": "<p><strong>Lordworms</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490096212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734672130
    },
    {
        "content": "<p><strong>Lordworms</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490096213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734672131
    },
    {
        "content": "<p><strong>Lordworms</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490096214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734672131
    },
    {
        "content": "<p><strong>Lordworms</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490096215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734672131
    },
    {
        "content": "<p><strong>Lordworms</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490096216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734672131
    },
    {
        "content": "<p>Lordworms edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<p>part of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">https://github.com/bytecodealliance/wasmtime/issues/9783</a></p>\n</blockquote>",
        "id": 490096252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734672181
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#issuecomment-2556391563\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"pulley\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: pulley</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 490102996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734677213
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2516937128\">PR review</a>.</p>",
        "id": 490107804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734679872
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1893572078\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm surprised this is necessary: the intent of <code>canonicalize-nan.wast</code> is to test Cranelift's NaN-canonicalization pass, and this pass operates on the machine-independent IR (CLIF) so it should work for compilation to Pulley as well as any other target. The Pulley virtual machine shouldn't have to unconditionally canonicalize NaNs.</p>\n<p>Could you check whether the pass is producing NaN-canonicalization sequences (which look like compares to test for NaN, then a select operator)?</p>\n<p>I'm wondering whether this might have something to do with the <code>has_vector_support</code> boolean in <code>Context::canonicalize_nans()</code>; the comment there (that riscv64 is the only architecture without vector support) is no longer accurate now that we have Pulley in-tree; I'm not sure but perhaps that's related?</p>\n</blockquote>",
        "id": 490107805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734679872
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2517894938\">PR review</a>.</p>",
        "id": 490193041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734711855
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1894134984\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh I think this might be my fault, in the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/CONTRIBUTING.md\">contribution docs for pulley</a> it recommends running the test suite directly via <code>wasmtime wast .../*.wast</code>. When <code>tests/misc_testsuite/simd/canonicalize-nan.wast</code> is executed that's actually expected to fail (it even fails on native) and it requires an extra <code>-W nan-canonicalization</code> flag. </p>\n<p>Chris is right though in that the manual canonicalization here shouldn't be necessary. @Lordworms you'll find though that <code>-W nan-canonicalization</code> isn't fully supported just yet:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">script</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">canonicalize</span><span class=\"o\">-</span><span class=\"n\">nan</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"o\">'</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">directive</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">misc_testsuite</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">canonicalize</span><span class=\"o\">-</span><span class=\"n\">nan</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"p\">:</span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"mi\">1</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Compilation</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">should</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcmp</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">uno</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">I32X4</span><span class=\"p\">)</span><span class=\"err\">`</span>\n</code></pre></div>\n<p>That being said this PR still gets the <code>simd_f32x4_rounding.wast</code> test passing, so with the canonicalization removed it should still be good to flag that test as passing </p>\n</blockquote>",
        "id": 490193042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734711856
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2517896248\">PR review</a>.</p>",
        "id": 490193142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734711901
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1894135789\">PR review comment</a>:</p>\n<blockquote>\n<p>As a minor stylistic note, mind prefixing these instructions with <code>v</code> (e.g. <code>vtrunc32x4</code>) instead? I've been trying to use the <code>v</code> prefix for all simd/vector-related instructions so far</p>\n</blockquote>",
        "id": 490193143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734711902
    },
    {
        "content": "<p>Lordworms submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2517982983\">PR review</a>.</p>",
        "id": 490200477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734714564
    },
    {
        "content": "<p>Lordworms created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1894185321\">PR review comment</a>:</p>\n<blockquote>\n<p>yep</p>\n</blockquote>",
        "id": 490200478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734714564
    },
    {
        "content": "<p>Lordworms created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1894188604\">PR review comment</a>:</p>\n<blockquote>\n<p>I am new to this project and didn't find it. Sorry for that.</p>\n</blockquote>",
        "id": 490201032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734714794
    },
    {
        "content": "<p>Lordworms submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2517988537\">PR review</a>.</p>",
        "id": 490201034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734714794
    },
    {
        "content": "<p>Lordworms updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490202693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734715473
    },
    {
        "content": "<p>Lordworms updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490204484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734716256
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2518035298\">PR review</a>.</p>",
        "id": 490204710,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734716361
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1894212898\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh this'll want to stay as these are test exemptions for a different compiler, Winch, unrelated to Pulley. Only the ones above are the ones affecting Pulley.</p>\n<p>Also it looks like a merge conflict has creeped in due to this file, so if you want to rebase that should help resolve the conflict.</p>\n</blockquote>",
        "id": 490204714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734716361
    },
    {
        "content": "<p>Lordworms updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490205239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734716614
    },
    {
        "content": "<p>Lordworms submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2518042708\">PR review</a>.</p>",
        "id": 490205313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734716644
    },
    {
        "content": "<p>Lordworms created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1894218450\">PR review comment</a>:</p>\n<blockquote>\n<p>resolved it.</p>\n</blockquote>",
        "id": 490205315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734716644
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2518057486\">PR review</a>.</p>",
        "id": 490206502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734717229
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#discussion_r1894227974\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh I think this test popped back in by accident during the rebase</p>\n</blockquote>",
        "id": 490206505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734717229
    },
    {
        "content": "<p>Lordworms updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490206686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734717312
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878#pullrequestreview-2518069919\">PR review</a>.</p>",
        "id": 490207752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734717767
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490207763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734717771
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9878\">PR #9878</a>.</p>",
        "id": 490210564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734719029
    }
]