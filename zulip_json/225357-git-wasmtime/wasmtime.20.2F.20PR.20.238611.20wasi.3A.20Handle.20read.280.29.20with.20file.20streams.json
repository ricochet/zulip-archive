[
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>.</p>",
        "id": 438473196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715645361
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>.</p>",
        "id": 438473197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715645362
    },
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a> from <code>elliottt:trevor/wasi-file-stream-read-zero</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The <code>read</code> method on streams should support a size argument of zero, to test if the stream is still open. However, the implementation of <code>read</code> for open files was unconditionally treating a read that would return zero bytes as an indication that the stream was closed.</p>\n<p>This PR fixes this bug by handling a <code>read(0)</code> as an explicit test to see if the current position is at the end of the file.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 438473198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715645362
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>.</p>",
        "id": 438473782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715645741
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611#pullrequestreview-2055646931\">PR review</a>:</p>\n<blockquote>\n<p>I'm a little hesitant to provide such a strong guarantee that a read of size 0 is effectively a <code>stat</code> on all files. Would it work to instead pass the read size to <code>read_result</code> and don't return <code>Closed</code> if the read size is zero? </p>\n</blockquote>",
        "id": 438593188,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715698196
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611#issuecomment-2110467546\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>:</p>\n<blockquote>\n<p>I don't think that works, as <code>cap_std::fs::File::read_at</code> won't signal any error for a read off the end of <code>0</code> bytes. That means that a <code>read(0)</code> will succeed indicating that it ready zero bytes, and a subsequent non-zero read will fail because the file is closed. I agree that this is a bit heavyweight, but I think something like it is necessary to satisfy this part of the streams contract: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7a91375623051da84e60f513564a144078eeb43c/crates/wasi/wit/deps/io/streams.wit#L51-L53\">https://github.com/bytecodealliance/wasmtime/blob/7a91375623051da84e60f513564a144078eeb43c/crates/wasi/wit/deps/io/streams.wit#L51-L53</a></p>\n</blockquote>",
        "id": 438595192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715698733
    },
    {
        "content": "<p>elliottt edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611#issuecomment-2110467546\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>:</p>\n<blockquote>\n<p>I don't think that works, as <code>cap_std::fs::File::read_at</code> won't signal any error for a read at the end of a file, of <code>0</code> bytes. That means that a <code>read(0)</code> will succeed indicating that it read zero bytes, and a subsequent non-zero read will fail because the file is closed. I agree that this is a bit heavyweight, but I think something like it is necessary to satisfy this part of the streams contract: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7a91375623051da84e60f513564a144078eeb43c/crates/wasi/wit/deps/io/streams.wit#L51-L53\">https://github.com/bytecodealliance/wasmtime/blob/7a91375623051da84e60f513564a144078eeb43c/crates/wasi/wit/deps/io/streams.wit#L51-L53</a></p>\n</blockquote>",
        "id": 438595967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715698950
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611#issuecomment-2110476840\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>:</p>\n<blockquote>\n<p>I think it still satisfies the contract though because the streams interface is supposed to be super general and it's always possible for a generic stream to get disconnected at any time. For example if you do a zero-length read on a socket it may say it's ready only for the next read to say it's closed.<br>\n</p>\n</blockquote>",
        "id": 438596037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715698972
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>.</p>",
        "id": 438597070,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715699244
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611#issuecomment-2110488142\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>:</p>\n<blockquote>\n<p>Fair enough. I've pushed a change to that effect.</p>\n</blockquote>",
        "id": 438597104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715699254
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611#pullrequestreview-2055722579\">PR review</a>.</p>",
        "id": 438598946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715699803
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>.</p>",
        "id": 438598965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715699813
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8611\">PR #8611</a>.</p>",
        "id": 438615255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715705101
    }
]