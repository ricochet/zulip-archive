[
    {
        "content": "<p>stevefan1999-personal opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<p>Thanks for filing a feature request! Please fill out the TODOs below.</p>\n<h4>Feature</h4>\n<p>Add no_std back to the equation.</p>\n<h4>Benefit</h4>\n<p>So we can build a safer eBPF implementation in Linux kernel</p>\n<h4>Implementation</h4>\n<p>We could use <a href=\"https://gitlab.com/jD91mZM2/no-std-compat\">https://gitlab.com/jD91mZM2/no-std-compat</a> for this.</p>\n<h4>Alternatives</h4>\n<p>Don't attempt to rewrite eBPF<br>\n</p>\n</blockquote>",
        "id": 360217911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684749468
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424#issuecomment-1557868766\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<p>I assume you want <code>no_std</code> in Cranelift specifically, and you don't care about Wasmtime, right?</p>\n<p>The most recent time this came up was #6131 and the discussion there is still relevant. Unfortunately the person who authored that PR apparently gave up and deleted their branch after we asked for the additional work we'd need to make sure we can reliably maintain <code>no_std</code> support for Cranelift going forward.</p>\n<p>There's some work to do but I think it's a fairly straightforward path if you want to work on it. I'd be happy to answer questions!</p>\n</blockquote>",
        "id": 360363240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684785255
    },
    {
        "content": "<p>stevefan1999-personal <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424#issuecomment-1558380663\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<blockquote>\n<p>I assume you want <code>no_std</code> in Cranelift specifically, and you don't care about Wasmtime, right?</p>\n</blockquote>\n<p>Correct. I should be more specific.</p>\n<blockquote>\n<p>The most recent time this came up was #6131 and the discussion there is still relevant. Unfortunately the person who authored that PR apparently gave up and deleted their branch after we asked for the additional work we'd need to make sure we can reliably maintain <code>no_std</code> support for Cranelift going forward.</p>\n</blockquote>\n<p>Well, he/she just deleted all their GH repos. But if we still have the patch set we can just try and apply the hunks manually. But this would mean their cobtribution commit would be lost. Not sure if I can just cherrypick the the PR branch...</p>\n<blockquote>\n<p>There's some work to do but I think it's a fairly straightforward path if you want to work on it. I'd be happy to answer questions!</p>\n</blockquote>\n</blockquote>",
        "id": 360409340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684807020
    },
    {
        "content": "<p>stevefan1999-personal <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424#issuecomment-1558380726\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<blockquote>\n<p>I assume you want <code>no_std</code> in Cranelift specifically, and you don't care about Wasmtime, right?</p>\n</blockquote>\n<p>Correct. I should be more specific.</p>\n<blockquote>\n<p>The most recent time this came up was #6131 and the discussion there is still relevant. Unfortunately the person who authored that PR apparently gave up and deleted their branch after we asked for the additional work we'd need to make sure we can reliably maintain <code>no_std</code> support for Cranelift going forward.</p>\n</blockquote>\n<p>Well, he/she just deleted all their GH repos. But if we still have the patch set we can just try and apply the hunks manually. But this would mean their cobtribution commit would be lost. Not sure if I can just cherrypick the the PR branch...</p>\n<blockquote>\n<p>There's some work to do but I think it's a fairly straightforward path if you want to work on it. I'd be happy to answer questions!</p>\n</blockquote>\n</blockquote>",
        "id": 360409351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684807025
    },
    {
        "content": "<p>stevefan1999-personal deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424#issuecomment-1558380726\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<blockquote>\n<p>I assume you want <code>no_std</code> in Cranelift specifically, and you don't care about Wasmtime, right?</p>\n</blockquote>\n<p>Correct. I should be more specific.</p>\n<blockquote>\n<p>The most recent time this came up was #6131 and the discussion there is still relevant. Unfortunately the person who authored that PR apparently gave up and deleted their branch after we asked for the additional work we'd need to make sure we can reliably maintain <code>no_std</code> support for Cranelift going forward.</p>\n</blockquote>\n<p>Well, he/she just deleted all their GH repos. But if we still have the patch set we can just try and apply the hunks manually. But this would mean their cobtribution commit would be lost. Not sure if I can just cherrypick the the PR branch...</p>\n<blockquote>\n<p>There's some work to do but I think it's a fairly straightforward path if you want to work on it. I'd be happy to answer questions!</p>\n</blockquote>\n</blockquote>",
        "id": 360409358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684807031
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424#issuecomment-2050528840\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<p>If still interested, I've opened a plan for this at <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8341\">https://github.com/bytecodealliance/wasmtime/issues/8341</a></p>\n</blockquote>",
        "id": 432786143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712869059
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<p>Thanks for filing a feature request! Please fill out the TODOs below.</p>\n<h4>Feature</h4>\n<p>Add no_std back to the equation.</p>\n<h4>Benefit</h4>\n<p>So we can build a safer eBPF implementation in Linux kernel</p>\n<h4>Implementation</h4>\n<p>We could use <a href=\"https://gitlab.com/jD91mZM2/no-std-compat\">https://gitlab.com/jD91mZM2/no-std-compat</a> for this.</p>\n<h4>Alternatives</h4>\n<p>Don't attempt to rewrite eBPF<br>\n</p>\n</blockquote>",
        "id": 437913903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715307187
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424#issuecomment-2103724176\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6424\">issue #6424</a>:</p>\n<blockquote>\n<p>Wasmtime now supports no_std, and I'll defer supporting no_std in Cranelift to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1158\">https://github.com/bytecodealliance/wasmtime/issues/1158</a>, so closing this.</p>\n</blockquote>",
        "id": 437913907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715307188
    }
]