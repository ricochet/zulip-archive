[
    {
        "content": "<p>elliottt labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4791\">issue #4791</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the example clif, targeting x86_64.</p>\n<h3>Expected Results</h3>\n<p>Code would be generated.</p>\n<h3>Actual Results</h3>\n<p>A panic is generated, because we currently only support lowering this operation in the context of a <code>fcvt_to_uint_sat</code> and zero input: the following program will compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">f64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: c1f9736938ad79354384cb6ab339a2efbdecb993</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 295509597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661546668
    },
    {
        "content": "<p>elliottt labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4791\">issue #4791</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the example clif, targeting x86_64.</p>\n<h3>Expected Results</h3>\n<p>Code would be generated.</p>\n<h3>Actual Results</h3>\n<p>A panic is generated, because we currently only support lowering this operation in the context of a <code>fcvt_to_uint_sat</code> and zero input: the following program will compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">f64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: c1f9736938ad79354384cb6ab339a2efbdecb993</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 295509598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661546668
    },
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4791\">issue #4791</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the example clif, targeting x86_64.</p>\n<h3>Expected Results</h3>\n<p>Code would be generated.</p>\n<h3>Actual Results</h3>\n<p>A panic is generated, because we currently only support lowering this operation in the context of a <code>fcvt_to_uint_sat</code> and zero input: the following program will compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">f64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: c1f9736938ad79354384cb6ab339a2efbdecb993</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 295509599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661546668
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4791\">issue #4791</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the example clif, targeting x86_64.</p>\n<h3>Expected Results</h3>\n<p>Code would be generated.</p>\n<h3>Actual Results</h3>\n<p>A panic is generated, because we currently only support lowering this operation in the context of a <code>fcvt_to_uint_sat</code> and zero input: the following program will compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">f64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619\">https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619</a></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: c1f9736938ad79354384cb6ab339a2efbdecb993</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 295509999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661546849
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4791\">issue #4791</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the example clif, targeting x86_64.</p>\n<h3>Expected Results</h3>\n<p>Code would be generated.</p>\n<h3>Actual Results</h3>\n<p>A panic is generated, because we currently only support lowering this operation in the context of a <code>fcvt_to_uint_sat</code> and zero input: the following program will compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">f64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619\">https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619</a></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 295510154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661546910
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4791\">issue #4791</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the example clif, targeting x86_64.</p>\n<h3>Expected Results</h3>\n<p>Code would be generated.</p>\n<h3>Actual Results</h3>\n<p>A panic is generated, because we currently only support lowering this operation in the context of a <code>fcvt_to_uint_sat</code> and zero input: the following program will compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">f64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619\">https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619</a></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>This is a similar issue to #4734.</p>\n</blockquote>",
        "id": 295510684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661547131
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4791\">issue #4791</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the example clif, targeting x86_64.</p>\n<h3>Expected Results</h3>\n<p>Code would be generated.</p>\n<h3>Actual Results</h3>\n<p>A panic is generated, because we currently only support lowering this operation in the context of a <code>fcvt_to_uint_sat</code> and zero input: the following program will compile:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">f1</span><span class=\"p\">(</span><span class=\"n\">f64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f64x2</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fcvt_to_uint_sat</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uunarrow</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619\">https://github.com/bytecodealliance/wasmtime/blob/ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1/cranelift/codegen/src/isa/x64/lower.rs#L619</a></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: ca6d648e37c80cb13e5027cc746ec0d2e4bd64d1</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>This is a similar issue to #4734.</p>\n</blockquote>",
        "id": 300809655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664197459
    }
]