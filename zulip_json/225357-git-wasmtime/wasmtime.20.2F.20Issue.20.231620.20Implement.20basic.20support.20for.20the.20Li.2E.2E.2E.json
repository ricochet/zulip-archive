[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-620658017\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-620658017\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>r=me on the wasmtime bits here, thanks!</p>\n</blockquote>",
        "id": 195575697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588085653
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-620791983\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-620791983\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr, @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 195609971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588100016
    },
    {
        "content": "<p>stuaxo <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623198266\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623198266\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>This is awesome, could it help Rust compile dos executables ?</p>\n<p><a href=\"https://github.com/Serentty/rusty-dos/\" title=\"https://github.com/Serentty/rusty-dos/\">https://github.com/Serentty/rusty-dos/</a></p>\n</blockquote>",
        "id": 196127713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588547227
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623198814\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623198814\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<blockquote>\n<p>This is awesome, could it help Rust compile dos executables ?</p>\n</blockquote>\n<p>Certainly not, this PR is not even remotely related to DOS and I cannot imagine that Cranelift would ever be able to emit real-mode x86 machine code.</p>\n</blockquote>",
        "id": 196127856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588547476
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623415856\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623415856\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>Cranelift could theoretically add <code>data32</code> prefixes everywhere.</p>\n</blockquote>",
        "id": 196169530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588592747
    },
    {
        "content": "<p>stuaxo <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623426400\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-623426400\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>Oh heh, I meant 32 bit protected mode DOS, but fair enough.</p>\n</blockquote>",
        "id": 196171671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588594253
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-624408788\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-624408788\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'd give ArgumentPurpose::CalleeSaved a shot here, this is well after register allocation so it's probably free of risk in side effects there. </p>\n</blockquote>\n<p>I tried that first and I <em>think</em> it either didn't work correctly or generated useless instructions. I can recheck it if you want to be sure, but that was my first implementation.</p>\n</blockquote>",
        "id": 196391007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588731675
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-624412054\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-624412054\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>I'd greatly appreciate if you could check again. If it fails in a weird way I'd think Cranelift should be better-behaved. Worst case, it helps motivate an atypical ArgumentPurpose that isn't <code>CalleeSave</code>. Or, we should be clearer about the semantics of <code>ArgumentPurpose</code> and <code>Normal</code> should be acceptable (by being an argument to the function, even if it's not an ABI-mandated one)</p>\n</blockquote>",
        "id": 196391556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588732509
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-625641772\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-625641772\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>@iximeow I stand corrected--there seems to be no observable difference and everything apperas to work just fine with %rsp as CSR.</p>\n</blockquote>",
        "id": 196859706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588916542
    },
    {
        "content": "<p>whitequark edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-625641772\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-625641772\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>@iximeow I stand corrected--there seems to be no observable difference in the generated code and everything appears to work just fine with %rsp as CSR.</p>\n</blockquote>",
        "id": 196859708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588916553
    },
    {
        "content": "<p>whitequark <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-626138834\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620#issuecomment-626138834\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1620\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1620\">Issue #1620</a>:</p>\n<blockquote>\n<p>I've updated the PR to use <code>ArgumentPurpoe::CalleeSave</code>.</p>\n</blockquote>",
        "id": 196982952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589017495
    }
]