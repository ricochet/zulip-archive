[
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228\">PR #7228</a>.</p>",
        "id": 396331165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697130495
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228\">PR #7228</a>.</p>",
        "id": 396331166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697130495
    },
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228\">PR #7228</a> from <code>saulecabrera:winch-final-builtins</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change is a follow up to:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7155\">https://github.com/bytecodealliance/wasmtime/pull/7155</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/pull/7035\">https://github.com/bytecodealliance/wasmtime/pull/7035</a></li>\n</ul>\n<p>One of the objectives of this change is to make it easy to emit function calls at the MacroAssembler layer, for cases in which it's challenging to know ahead-of-time if a particular functionality can be achieved natively (e.g. rounding and SSE4.2).  The original implementation of function call emission, made this objective difficult to achieve and it was also difficult to reason about.<br>\nI decided to simplify the overall approach to function calls as part of this PR; in essence, the <code>call</code> module now exposes a single function <code>FnCall::emit</code> which is reponsible of gathtering the dependencies and orchestrating the emission of the call. This new approach deliberately avoids holding any state regarding the function call for simplicity.</p>\n<p>This change also standardizes the usage of <code>Callee</code> as the main entrypoint for function call emission, as of this change 4 <code>Callee</code> types exist (<code>Local</code>, <code>Builtin</code>, <code>Import</code>, <code>FuncRef</code>), each callee kind is mappable to a <code>CalleeKind</code> which is the materialized version of a callee which Cranelift understands.</p>\n<p>This change also moves the creation of the <code>BuiltinFunctions</code> to the <code>ISA</code> level given that they can be safely used accross multiple function compilations.</p>\n<p>Finally, this change also introduces support for some of the \"well-known\" libcalls and hooks those libcalls at the <code>MacroAssembler::float_round</code> callsite.</p>\n<p>--</p>\n<p>prtest:full</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 396331167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697130496
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228\">PR #7228</a>.</p>",
        "id": 396331169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697130497
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228\">PR #7228</a>.</p>",
        "id": 396331170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697130497
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228\">PR #7228</a>.</p>",
        "id": 396331242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697130535
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#pullrequestreview-1675002270\">PR review</a>.</p>",
        "id": 396357529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#pullrequestreview-1675002270\">PR review</a>.</p>",
        "id": 396357530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357302691\">PR review comment</a>:</p>\n<blockquote>\n<p>I might call this <code>index</code> since it is the index within the <code>BuiltinFunctionsArray</code> right?</p>\n</blockquote>",
        "id": 396357532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357303135\">PR review comment</a>:</p>\n<blockquote>\n<p>This is the offset within the vmctx of the whole <code>BuiltinFunctionsArray</code>?</p>\n</blockquote>",
        "id": 396357533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357352948\">PR review comment</a>:</p>\n<blockquote>\n<p>In my experience, when we start to get many lifetime parameters like this, it helps to give them more descriptive names. </p>\n</blockquote>",
        "id": 396357534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357329831\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there a reason not to use <code>std::borrowed::Cow</code> here?</p>\n</blockquote>",
        "id": 396357535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357347480\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe name this <code>unwrap_builtin</code>?</p>\n</blockquote>",
        "id": 396357536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357305649\">PR review comment</a>:</p>\n<blockquote>\n<p>I assume that the <code>base</code> and <code>offset</code> fields will be added together ultimately to do <code>load(vmctx + base + offset)</code> and I wonder if it makes sense to just store the <code>base + offset</code> here, rather than the two parts separately.</p>\n</blockquote>",
        "id": 396357537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357353654\">PR review comment</a>:</p>\n<blockquote>\n<p>ditto</p>\n</blockquote>",
        "id": 396357538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697141510
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#pullrequestreview-1675142099\">PR review</a>.</p>",
        "id": 396360295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697142796
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357386585\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, but note that this index is the built-in function's index multiplied by the pointer size, but index works for me. </p>\n</blockquote>",
        "id": 396360297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697142796
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#pullrequestreview-1675198242\">PR review</a>.</p>",
        "id": 396364074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697144584
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357421024\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think that this will work (unless I'm missing something). The reason why I'm storing both separately is that loading the builtin's address requires two loads:</p>\n<ul>\n<li>base = load(vmctx + base)</li>\n<li>builtin_addr = load(base + index)</li>\n</ul>\n</blockquote>",
        "id": 396364075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697144584
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228\">PR #7228</a>.</p>",
        "id": 396365134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697145122
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#pullrequestreview-1675211747\">PR review</a>.</p>",
        "id": 396365297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697145184
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7228#discussion_r1357429743\">PR review comment</a>:</p>\n<blockquote>\n<p>As I was fixing this I realized that this was actually dead code, so I ended up removing <code>get_builtin</code> and <code>get_info</code> entirely.</p>\n</blockquote>",
        "id": 396365298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697145185
    }
]