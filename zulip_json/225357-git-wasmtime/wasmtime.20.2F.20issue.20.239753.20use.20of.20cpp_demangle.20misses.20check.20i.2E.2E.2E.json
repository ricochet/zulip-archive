[
    {
        "content": "<p><a href=\"https://github.com/chobermaier\">chobermaier</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9753\">Issue #9753</a>.</p>",
        "id": 486542724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733500201
    },
    {
        "content": "<p>chobermaier opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9753\">issue #9753</a>:</p>\n<blockquote>\n<p>Probably related: #4162</p>\n<p>I came across this issue while trying to use _perf_ with wasmtime <a href=\"https://docs.wasmtime.dev/examples-profiling-perf.html\">following the documentation</a>.<br>\nWhen I used the param <code>--profile=perfmap</code> or <code>--profile=jitdump</code>, I got the following error message:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">instantiate</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">73</span><span class=\"p\">:</span><span class=\"mi\">76</span><span class=\"p\">:</span>\n<span class=\"nc\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span><span class=\"p\">::</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Error</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>I tried using a simple hello-world example wasm file and found that the issue was not present there.<br>\nAfter some trying around, I think, I might have found the cause.</p>\n<p>The wasm file I tried to use with perf initially has a symbol named \"RC4\". When the _demangle_function_name_ function is called in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/66989d9d6cfabb4c0781134b8d78bcbd81c6e511/crates/wasmtime/src/runtime/instantiate.rs#L73\">instantiate.rs:73</a> unwrapping fails, because the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/66989d9d6cfabb4c0781134b8d78bcbd81c6e511/crates/environ/src/demangling.rs#L10\">if-let statement</a> that passes the function name to cpp_demangle crate only creates the <a href=\"https://docs.rs/cpp_demangle/latest/cpp_demangle/struct.Symbol.html\">Symbol</a>, which apparently is not safe to demangle actually. Even if its Result is Ok.<br>\nI'm not quite sure if this is their intended behavior. What do you think?</p>\n<p>This gist shows the isolation of the problem: <a href=\"https://gist.github.com/chobermaier/3adf8f2a004ccbe17865bfc20df5c6d3\">https://gist.github.com/chobermaier/3adf8f2a004ccbe17865bfc20df5c6d3</a></p>\n<p>I would propose to change _demangle_function_name_ this way (<a href=\"https://github.com/chobermaier/wasmtime/commit/2852fc633a65f97661fbab2033fc7cedcb010cf2\">commit with diff</a>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">demangle_function_name</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Write</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"cp\">#[cfg(feature = </span><span class=\"s\">\"demangle\"</span><span class=\"cp\">)]</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">demangled</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rustc_demangle</span><span class=\"p\">::</span><span class=\"n\">try_demangle</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"fm\">write!</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"{demangled}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cpp_demangle</span><span class=\"p\">::</span><span class=\"n\">Symbol</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">options</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cpp_demangle</span><span class=\"p\">::</span><span class=\"n\">DemangleOptions</span><span class=\"p\">::</span><span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">demangled</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"p\">.</span><span class=\"n\">demangle</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">options</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"fm\">write!</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"{demangled}\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"fm\">write!</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"{name}\"</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This would call <a href=\"https://docs.rs/cpp_demangle/latest/cpp_demangle/struct.Symbol.html#method.demangle\">demangle</a> explicitly and provide the information if it's possible through the Result returned. Instead of the implicit call through the write macro. So this should not introduce any performance overhead.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>wasmtime 27.0.0 (8eefa236f 2024-11-20)</code></p>\n<p>Operating system: Linux 6.12.1-arch1-1</p>\n<p>Architecture: amd64<br>\n</p>\n</blockquote>",
        "id": 486542726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733500202
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9753#issuecomment-2523815725\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9753\">issue #9753</a>:</p>\n<blockquote>\n<p>That looks like a reasonable fix to me, thanks for this! Would you be interested in sending a PR with your change?</p>\n</blockquote>",
        "id": 486563663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733506340
    },
    {
        "content": "<p>chobermaier <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9753#issuecomment-2523932778\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9753\">issue #9753</a>:</p>\n<blockquote>\n<p>I can try to send a PR.</p>\n<p>I'm glad if I could help <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> </p>\n</blockquote>",
        "id": 486574231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733510422
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9753\">issue #9753</a>:</p>\n<blockquote>\n<p>Probably related: #4162</p>\n<p>I came across this issue while trying to use _perf_ with wasmtime <a href=\"https://docs.wasmtime.dev/examples-profiling-perf.html\">following the documentation</a>.<br>\nWhen I used the param <code>--profile=perfmap</code> or <code>--profile=jitdump</code>, I got the following error message:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">instantiate</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">73</span><span class=\"p\">:</span><span class=\"mi\">76</span><span class=\"p\">:</span>\n<span class=\"nc\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span><span class=\"p\">::</span><span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Error</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n</code></pre></div>\n<p>I tried using a simple hello-world example wasm file and found that the issue was not present there.<br>\nAfter some trying around, I think, I might have found the cause.</p>\n<p>The wasm file I tried to use with perf initially has a symbol named \"RC4\". When the _demangle_function_name_ function is called in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/66989d9d6cfabb4c0781134b8d78bcbd81c6e511/crates/wasmtime/src/runtime/instantiate.rs#L73\">instantiate.rs:73</a> unwrapping fails, because the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/66989d9d6cfabb4c0781134b8d78bcbd81c6e511/crates/environ/src/demangling.rs#L10\">if-let statement</a> that passes the function name to cpp_demangle crate only creates the <a href=\"https://docs.rs/cpp_demangle/latest/cpp_demangle/struct.Symbol.html\">Symbol</a>, which apparently is not safe to demangle actually. Even if its Result is Ok.<br>\nI'm not quite sure if this is their intended behavior. What do you think?</p>\n<p>This gist shows the isolation of the problem: <a href=\"https://gist.github.com/chobermaier/3adf8f2a004ccbe17865bfc20df5c6d3\">https://gist.github.com/chobermaier/3adf8f2a004ccbe17865bfc20df5c6d3</a></p>\n<p>I would propose to change _demangle_function_name_ this way (<a href=\"https://github.com/chobermaier/wasmtime/commit/2852fc633a65f97661fbab2033fc7cedcb010cf2\">commit with diff</a>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">demangle_function_name</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"n\">Write</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">name</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"kt\">str</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">core</span><span class=\"p\">::</span><span class=\"n\">fmt</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"cp\">#[cfg(feature = </span><span class=\"s\">\"demangle\"</span><span class=\"cp\">)]</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">demangled</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">rustc_demangle</span><span class=\"p\">::</span><span class=\"n\">try_demangle</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"fm\">write!</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"{demangled}\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">symbol</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cpp_demangle</span><span class=\"p\">::</span><span class=\"n\">Symbol</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">options</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">cpp_demangle</span><span class=\"p\">::</span><span class=\"n\">DemangleOptions</span><span class=\"p\">::</span><span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">demangled</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"p\">.</span><span class=\"n\">demangle</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">options</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"fm\">write!</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"{demangled}\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"fm\">write!</span><span class=\"p\">(</span><span class=\"n\">writer</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"{name}\"</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This would call <a href=\"https://docs.rs/cpp_demangle/latest/cpp_demangle/struct.Symbol.html#method.demangle\">demangle</a> explicitly and provide the information if it's possible through the Result returned. Instead of the implicit call through the write macro. So this should not introduce any performance overhead.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>wasmtime 27.0.0 (8eefa236f 2024-11-20)</code></p>\n<p>Operating system: Linux 6.12.1-arch1-1</p>\n<p>Architecture: amd64<br>\n</p>\n</blockquote>",
        "id": 486583883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733514416
    }
]