[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4068\">PR #4068</a> from <code>fix-cmp-and-choose-load-op-merging</code> to <code>main</code>:</p>\n<blockquote>\n<p>The recent work in #4061 introduced a notion of \"unique uses\" for CLIF<br>\nvalues that both simplified the load-op merging rules and allowed<br>\nloads to merge in some more places.</p>\n<p>Unfortunately there's one factor that PR didn't account for: a unique<br>\nuse at the CLIF level could become a multiple-use at the VCode level,<br>\nwhen a lowering uses a value multiple times!</p>\n<p>Making this less error-prone in general is hard, because we don't know<br>\nthe lowering in VCode until it's emitted, so we can't ahead-of-time<br>\nknow that a value will be used multiple times and prevent its<br>\nmerging. But we <em>can</em> know in the lowerings themselves when we're<br>\ndoing this. At least we get a panic from regalloc when we get this<br>\nwrong; no bad code (uninitialized register being read) should ever<br>\ncome from a backend bug like this.</p>\n<p>This is still a bit less than ideal, but for now the fix is: in<br>\n<code>cmp_and_choose</code> in the x64 backend (which compares values, then<br>\npicks one or the other with a cmove), explicitly put values in<br>\nregisters.</p>\n<p>Fixes #4067 (thanks @Mrmaxmeier for the report!).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 280096854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650905177
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4068\">PR #4068</a>.</p>",
        "id": 280096856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650905177
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4068\">PR #4068</a>.</p>",
        "id": 280096857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650905177
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4068#pullrequestreview-952212858\">PR review</a>.</p>",
        "id": 280101465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650907353
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4068#pullrequestreview-952212858\">PR review</a>.</p>",
        "id": 280101491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650907367
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4068#pullrequestreview-952213195\">PR review</a>.</p>",
        "id": 280101501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650907372
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4068\">PR #4068</a>.</p>",
        "id": 280102762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650907930
    }
]