[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6485\">PR #6485</a> from <code>alexcrichton:x64-vpsraq</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit adds support for the AVX-512 instruction <code>vpsraq</code> which is used to implement the <code>sshr</code> operation for the <code>i64x2</code> type. This instruction does not fit into any previous shape of supported AVX-512 instruction so new encoding support was added.</p>\n<p>Additionally the instruction helpers for this differ from <code>psra{w,d}</code> where those two instructions are encoded with the second operand as <code>XmmMemImm</code>. The reason for this is that <code>psra{w,d}</code> are based on SSE encodings where a second argument of <code>XmmMemImm</code> reflects what the instruction can do, but <code>vpsraq</code> has two variants which subtly differ:</p>\n<div class=\"codehilite\"><pre><span></span><code>(decl x64_vpsraq (Xmm XmmMem) Xmm)\n(decl x64_vpsraq_imm (XmmMem u8) Xmm)\n</code></pre></div>\n\n<p>Notably the <code>*_imm</code> variant can take a memory-based operand of what-to-shift unlike the SSE variant. Note that <code>vpsra{w,d}</code> are additionally supported with AVX-512 encodings but support is not added for those in this commit (left for a future PR to do so). Additionally the two encodings of <code>vpsraq</code> have a different <code>TupleType</code> which at least necessitates different opcodes and naturally extends it self to different instruction helpers.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 362541585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685558161
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6485\">PR #6485</a>.</p>",
        "id": 362541603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685558163
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6485\">PR #6485</a>.</p>",
        "id": 362541615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685558163
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6485#pullrequestreview-1454066721\">PR review</a>:</p>\n<blockquote>\n<p>LGTM!</p>\n</blockquote>",
        "id": 362559496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685563221
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6485\">PR #6485</a>.</p>",
        "id": 362567450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685565673
    }
]