[
    {
        "content": "<p>ShuP1 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5210#issuecomment-1304541134\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5210\">issue #5210</a>:</p>\n<blockquote>\n<blockquote>\n<p>Are the pipes safe to span threads?<br>\nSafe to move to another thread but may lock.</p>\n</blockquote>\n<p>Or even maybe dead lock during concurrent use ?<br>\nThis reaches the limit of my understand of rust async...</p>\n<p><a href=\"https://docs.rs/wasi-common/latest/src/wasi_common/pipe.rs.html#112\">https://docs.rs/wasi-common/latest/src/wasi_common/pipe.rs.html#112</a> <br>\n<code>RwLock</code> is locked in an async function who does <strong>not</strong> use await.<br>\nSo no \"context switch\" ? and no risk for another thread to hung on this lock ?</p>\n</blockquote>",
        "id": 308136124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667652703
    },
    {
        "content": "<p>ShuP1 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5210#issuecomment-1304541213\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5210\">issue #5210</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'd avoid wasm_byte_vec_t as it's cumbersome to work with and instead use read/write-style buffer passing</p>\n</blockquote>\n<p>Does this point also includes changing that ?</p>\n<p><div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">wasi_config_set_stdin_bytes</span><span class=\"p\">(</span><span class=\"n\">wasi_config_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_byte_vec_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">binary</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"c1\">// to</span>\n<span class=\"kt\">void</span><span class=\"w\"> </span><span class=\"nf\">wasi_config_set_stdin_bytes</span><span class=\"p\">(</span><span class=\"n\">wasi_config_t</span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">byte_t</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">size_t</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 308136232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667652736
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5210#issuecomment-1304542411\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5210\">issue #5210</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 308137291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667653218
    }
]