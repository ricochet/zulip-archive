[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>A fuzz bug came in over the weekend and bisection points to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3886\">https://github.com/bytecodealliance/wasmtime/pull/3886</a> as the cause. This wasm module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result v128)\n    global.get 0\n    global.get 0\n    i8x16.gt_u\n  )\n  (global (mut v128) v128.const i64x2 0 0)\n)\n</code></pre></div>\n<p>fails with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">testcase0</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Register</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">vcode</span><span class=\"w\"></span>\n<span class=\"n\">VCode_ShowWithRRU</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span>:\n  <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">successor</span>: <span class=\"nc\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span>:   <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span>:   <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v1J</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span>:   <span class=\"nc\">movups</span><span class=\"w\">  </span><span class=\"mi\">64</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v2V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">3</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v2V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">4</span>:   <span class=\"nc\">pmaxub</span><span class=\"w\">  </span><span class=\"mi\">64</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">5</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">6</span>:   <span class=\"nc\">pcmpeqb</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v3V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">7</span>:   <span class=\"nc\">pcmpeqd</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">8</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">9</span>:   <span class=\"nc\">pxor</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">10</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v5V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">11</span>:   <span class=\"nc\">jmp</span><span class=\"w\">     </span><span class=\"n\">label1</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span>:\n  <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">12</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v5V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v6V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">13</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v6V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">14</span>:   <span class=\"nc\">ret</span><span class=\"w\"></span>\n<span class=\"p\">}}</span><span class=\"w\"></span>\n\n<span class=\"n\">Error</span>: <span class=\"nc\">Analysis</span><span class=\"p\">(</span><span class=\"n\">EntryLiveinValues</span><span class=\"p\">([</span><span class=\"n\">v3V</span><span class=\"p\">]))</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">register</span><span class=\"w\"> </span><span class=\"n\">allocation</span>: <span class=\"nc\">Analysis</span><span class=\"p\">(</span><span class=\"n\">EntryLiveinValues</span><span class=\"p\">([</span><span class=\"n\">v3V</span><span class=\"p\">]))</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">compile</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">98</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The non-minimized reproduction is <a href=\"https://github.com/bytecodealliance/wasmtime/files/8316145/testcase0.wasm.gz\">here</a></p>\n</blockquote>",
        "id": 276056969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647872360
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>A fuzz bug came in over the weekend and bisection points to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3886\">https://github.com/bytecodealliance/wasmtime/pull/3886</a> as the cause. This wasm module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result v128)\n    global.get 0\n    global.get 0\n    i8x16.gt_u\n  )\n  (global (mut v128) v128.const i64x2 0 0)\n)\n</code></pre></div>\n<p>fails with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">testcase0</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Register</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">vcode</span><span class=\"w\"></span>\n<span class=\"n\">VCode_ShowWithRRU</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span>:\n  <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">successor</span>: <span class=\"nc\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span>:   <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span>:   <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v1J</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span>:   <span class=\"nc\">movups</span><span class=\"w\">  </span><span class=\"mi\">64</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v2V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">3</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v2V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">4</span>:   <span class=\"nc\">pmaxub</span><span class=\"w\">  </span><span class=\"mi\">64</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">5</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">6</span>:   <span class=\"nc\">pcmpeqb</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v3V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">7</span>:   <span class=\"nc\">pcmpeqd</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">8</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">9</span>:   <span class=\"nc\">pxor</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">10</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v5V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">11</span>:   <span class=\"nc\">jmp</span><span class=\"w\">     </span><span class=\"n\">label1</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span>:\n  <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">12</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v5V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v6V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">13</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v6V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">14</span>:   <span class=\"nc\">ret</span><span class=\"w\"></span>\n<span class=\"p\">}}</span><span class=\"w\"></span>\n\n<span class=\"n\">Error</span>: <span class=\"nc\">Analysis</span><span class=\"p\">(</span><span class=\"n\">EntryLiveinValues</span><span class=\"p\">([</span><span class=\"n\">v3V</span><span class=\"p\">]))</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">register</span><span class=\"w\"> </span><span class=\"n\">allocation</span>: <span class=\"nc\">Analysis</span><span class=\"p\">(</span><span class=\"n\">EntryLiveinValues</span><span class=\"p\">([</span><span class=\"n\">v3V</span><span class=\"p\">]))</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">compile</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">98</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The non-minimized reproduction is <a href=\"https://github.com/bytecodealliance/wasmtime/files/8316145/testcase0.wasm.gz\">here</a></p>\n</blockquote>",
        "id": 276056970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647872361
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951#issuecomment-1073978867\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>I'll take a look...</p>\n</blockquote>",
        "id": 276059332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647873374
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951#issuecomment-1074128890\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>The following ISLE code is doing the lowering:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/926d37589c60078f1749ef5735ee382b79187389/cranelift/codegen/src/isa/x64/lower.isle#L1472-L1476\">https://github.com/bytecodealliance/wasmtime/blob/926d37589c60078f1749ef5735ee382b79187389/cranelift/codegen/src/isa/x64/lower.isle#L1472-L1476</a></p>\n<p>In the snippet above, it looks like <code>max</code> is assigned <code>v7V</code> and <code>b</code> should be assigned the value coming from a load (i.e., <code>v3V</code>). But that load has been coalesced into the first operand of <code>pmaxub</code> (i.e.,<code>64(%v0J)</code>). @fitzgen, @alexcrichton: I can't remember how to avoid this load coalescing, though...</p>\n</blockquote>",
        "id": 276078426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647880309
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951#issuecomment-1074140811\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>Correction: I can turn off load coalescing manually with the following, which fixes the issue:</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/cranelift/codegen/src/isa/x64/lower.rs b/cranelift/codegen/src/isa/x64/lower.rs</span><span class=\"w\"></span>\n<span class=\"gh\">index 3b9341420..6cc265be2 100644</span><span class=\"w\"></span>\n<span class=\"gd\">--- a/cranelift/codegen/src/isa/x64/lower.rs</span><span class=\"w\"></span>\n<span class=\"gi\">+++ b/cranelift/codegen/src/isa/x64/lower.rs</span><span class=\"w\"></span>\n<span class=\"gu\">@@ -137,6 +137,10 @@ fn is_mergeable_load&lt;C: LowerCtx&lt;I = Inst&gt;&gt;(</span><span class=\"w\"></span>\n<span class=\"w\"> </span>        return None;<span class=\"w\"></span>\n<span class=\"w\"> </span>    }<span class=\"w\"></span>\n\n<span class=\"gi\">+    if load_ty.is_vector() {</span><span class=\"w\"></span>\n<span class=\"gi\">+        return None;</span><span class=\"w\"></span>\n<span class=\"gi\">+    }</span><span class=\"w\"></span>\n<span class=\"gi\">+</span><span class=\"w\"></span>\n<span class=\"w\"> </span>    // SIMD instructions can only be load-coalesced when the loaded value comes<span class=\"w\"></span>\n<span class=\"w\"> </span>    // from an aligned address.<span class=\"w\"></span>\n<span class=\"w\"> </span>    if load_ty.is_vector() &amp;&amp; !insn_data.memflags().map_or(false, |f| f.aligned()) {<span class=\"w\"></span>\n</code></pre></div>\n<p>But that is not the right approach. What I meant is that there may have been a way to prevent this kind of thing from happening when an operand was resused but I can't remember exactly how Chris would do it.</p>\n</blockquote>",
        "id": 276080355,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647881009
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951#issuecomment-1074155617\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>I'm not really here (out of office and vanishing after this comment!) but this is the same issue as 3934 I think. Compares need explicit put_in_reg, not implicit reg or mem.</p>\n</blockquote>",
        "id": 276081984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647881633
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951#issuecomment-1074156494\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>(sorry for not catching that in review, it's subtle!)</p>\n</blockquote>",
        "id": 276082153,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647881690
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951#issuecomment-1074434580\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>Thanks @cfallin! That's exactly what I couldn't remember!</p>\n</blockquote>",
        "id": 276115802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647897785
    },
    {
        "content": "<p>abrown closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3951\">issue #3951</a>:</p>\n<blockquote>\n<p>A fuzz bug came in over the weekend and bisection points to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3886\">https://github.com/bytecodealliance/wasmtime/pull/3886</a> as the cause. This wasm module:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (func (result v128)\n    global.get 0\n    global.get 0\n    i8x16.gt_u\n  )\n  (global (mut v128) v128.const i64x2 0 0)\n)\n</code></pre></div>\n<p>fails with:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">q</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">testcase0</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Register</span><span class=\"w\"> </span><span class=\"n\">allocation</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">vcode</span><span class=\"w\"></span>\n<span class=\"n\">VCode_ShowWithRRU</span><span class=\"w\"> </span><span class=\"p\">{{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Entry</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">0</span>:\n  <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">successor</span>: <span class=\"nc\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">12</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span>:   <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span>:   <span class=\"nc\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v1J</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span>:   <span class=\"nc\">movups</span><span class=\"w\">  </span><span class=\"mi\">64</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v2V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">3</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v2V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">4</span>:   <span class=\"nc\">pmaxub</span><span class=\"w\">  </span><span class=\"mi\">64</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">v0J</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">5</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v7V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">6</span>:   <span class=\"nc\">pcmpeqb</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v3V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">7</span>:   <span class=\"nc\">pcmpeqd</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">8</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v8V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">9</span>:   <span class=\"nc\">pxor</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">v9V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">10</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v4V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v5V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">11</span>:   <span class=\"nc\">jmp</span><span class=\"w\">     </span><span class=\"n\">label1</span><span class=\"w\"></span>\n<span class=\"n\">Block</span><span class=\"w\"> </span><span class=\"mi\">1</span>:\n  <span class=\"p\">(</span><span class=\"n\">original</span><span class=\"w\"> </span><span class=\"n\">IR</span><span class=\"w\"> </span><span class=\"n\">block</span>: <span class=\"nc\">block1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">range</span>: <span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"w\"> </span><span class=\"mi\">15</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">12</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v5V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v6V</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">13</span>:   <span class=\"nc\">movdqa</span><span class=\"w\">  </span><span class=\"o\">%</span><span class=\"n\">v6V</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">14</span>:   <span class=\"nc\">ret</span><span class=\"w\"></span>\n<span class=\"p\">}}</span><span class=\"w\"></span>\n\n<span class=\"n\">Error</span>: <span class=\"nc\">Analysis</span><span class=\"p\">(</span><span class=\"n\">EntryLiveinValues</span><span class=\"p\">([</span><span class=\"n\">v3V</span><span class=\"p\">]))</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">register</span><span class=\"w\"> </span><span class=\"n\">allocation</span>: <span class=\"nc\">Analysis</span><span class=\"p\">(</span><span class=\"n\">EntryLiveinValues</span><span class=\"p\">([</span><span class=\"n\">v3V</span><span class=\"p\">]))</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">compile</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">98</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The non-minimized reproduction is <a href=\"https://github.com/bytecodealliance/wasmtime/files/8316145/testcase0.wasm.gz\">here</a></p>\n</blockquote>",
        "id": 276134769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1647913588
    }
]