[
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477491133,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729185793
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477491134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729185793
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477491135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729185794
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a> from <code>fitzgen:null-gc</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The null collector does not actually collect any garbage, it simply bump-allocates until the heap is exhausted, at which point further allocation attempts will fail. It does not require any GC barriers.</p>\n<p>Users can configure which collector to use via the <code>wasmtime::Config::collector</code> method or the <code>-C collector=drc|null</code> CLI flag. The <code>wasmtime::Collector</code> enumeration, similar to the <code>wasmtime::Strategy</code> enumeration but for choosing a collector rather than a compiler, additionally has a table summarizing the properties and characteristics of our current set of collector implementations.</p>\n<p>Finally, we also run <code>.wast</code> tests that exercise GC types under both the DRC and null collectors. I tried to avoid running tests that are not related to GC under both configurations just to avoid a combinatorial blow up.</p>\n<hr>\n<p>(This PR builds on top of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9483\">https://github.com/bytecodealliance/wasmtime/pull/9483</a>, which is the first commit.)</p>\n</blockquote>",
        "id": 477491139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729185794
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477491828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729186053
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477503113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729190423
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<p>The null collector does not actually collect any garbage, it simply bump-allocates until the heap is exhausted, at which point further allocation attempts will fail. It does not require any GC barriers.</p>\n<p>Users can configure which collector to use via the <code>wasmtime::Config::collector</code> method or the <code>-C collector=drc|null</code> CLI flag. The <code>wasmtime::Collector</code> enumeration, similar to the <code>wasmtime::Strategy</code> enumeration but for choosing a collector rather than a compiler, additionally has a table summarizing the properties and characteristics of our current set of collector implementations.</p>\n<p>Finally, we also run <code>.wast</code> tests that exercise GC types under both the DRC and null collectors. I tried to avoid running tests that are not related to GC under both configurations just to avoid a combinatorial blow up.</p>\n</blockquote>",
        "id": 477503951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729190761
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477504567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729190981
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477506063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729191522
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477514175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729194740
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#issuecomment-2420657864\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\", \"wasmtime:config\", \"wasmtime:ref-types\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: wasmtime:ref-types</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 477528848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729201493
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#issuecomment-2420747876\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 477535260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729205101
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477692799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729269427
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 477692801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729269428
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#issuecomment-2420747876\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[x] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 477692825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729269440
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#issuecomment-2420747876\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[x] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[x] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 477692833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729269443
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#issuecomment-2420747876\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[x] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[x] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[x] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 477692840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729269447
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#issuecomment-2422953153\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 477702468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729273473
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#pullrequestreview-2381426894\">PR review</a>:</p>\n<blockquote>\n<p>Very nice! I like how this shaped up. I hope the <code>#[cfg]</code> wasn't too much to add, but it all looks relatively focused to be so it's hopefully just a one-time cost.</p>\n</blockquote>",
        "id": 478005015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729503092
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#discussion_r1808417060\">PR review comment</a>:</p>\n<blockquote>\n<p>To confirm this technically isn't necessary right? (to specify <code>-C collector=drc</code>)</p>\n<p>I think it's good to have in the test for future-proofing, but I want to double-check that as-is in isolation this isn't needed if we make no more changes to wasmtime in the future</p>\n</blockquote>",
        "id": 478005016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729503092
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#discussion_r1808407044\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of <code>self.features()</code> can you use the <code>features</code> that are in scope from above?</p>\n</blockquote>",
        "id": 478005017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729503092
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#discussion_r1808400064\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this get pushed into a <code>Result</code>-return of <code>Config::collector</code> or within <code>Config::validate</code>?</p>\n</blockquote>",
        "id": 478005018,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729503092
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#pullrequestreview-2382674929\">PR review</a>.</p>",
        "id": 478107003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729529403
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#discussion_r1809162618\">PR review comment</a>:</p>\n<blockquote>\n<p>Correct, this is just future-proofing for if/when we change the default collector.</p>\n</blockquote>",
        "id": 478107007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729529403
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 478124674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729535480
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 478124688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729535484
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484#issuecomment-2427444853\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>:</p>\n<blockquote>\n<blockquote>\n<p>Very nice! I like how this shaped up.</p>\n</blockquote>\n<p>Thanks!</p>\n<blockquote>\n<p>I hope the <code>#[cfg]</code> wasn't too much to add, but it all looks relatively focused to be so it's hopefully just a one-time cost.</p>\n</blockquote>\n<p>Indeed, it was mostly some shuffling to get rid of the disabled collector impl and then realizing that various things that were DRC-specific modules could actually be made a little more generic and reused with other collectors. I think adding the copying collector will be relatively small in comparison to this PR, which is kind of funny.</p>\n</blockquote>",
        "id": 478125383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729535729
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 478171924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729554428
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 478171946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729554439
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 479758610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730319835
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 479763418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730321872
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 479763427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730321879
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 479927785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730395995
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 479927975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730396059
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9484\">PR #9484</a>.</p>",
        "id": 479932675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730397720
    }
]