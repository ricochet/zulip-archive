[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-606728675\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-606728675\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443\">Issue #1443</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"wasi\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"wasi\"&lt;/summary&gt;</p>\n<ul>\n<li>@kubkon</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 192412728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585671415
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-609928046\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-609928046\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443\">Issue #1443</a>:</p>\n<blockquote>\n<p>@sunfishcode Did you perhaps have a look at the proposed changes in this PR? I'd like to merge this in so that we can move on to other things such as the polyfill, etc.</p>\n</blockquote>",
        "id": 193073526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586193779
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-611128087\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-611128087\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443\">Issue #1443</a>:</p>\n<blockquote>\n<blockquote>\n<p>This looks good! <code>Handle</code> growing into a proper item rather than \"weird thing for virtfs\" is nice to see :)</p>\n<p>The hierarchy you mentioned,</p>\n<p><code>\n\\-- OsHandle \\-- OsFile\n              -- Stdio\n\\-- Virtual\n</code></p>\n<p>is slightly different from what I'd had in mind, something like:</p>\n<p><code>\n\\-- File     \\-- Os\n              -- Virtual\n\\-- Stream   \\-- Os\n              -- Virtual\n</code></p>\n<p>where delineating on a <code>File</code>/not-<code>File</code> line seemed to match with \"can I even take an action on this handle\", like <code>seek</code> on a <code>Stream</code>, where \"can this be fulfilled with the handle I have\" is possibly an implementation constraint from \"is <code>virtualfs</code> implemented in all the places people want to use it\".</p>\n<p>To that end, I think it's about the same as you've outlined here, where there's a trait impl that either form takes, so we don't have to worry about nonsense calls like asking <code>VirtualFile</code> for its raw fd. I just mention this here because I'm not sure if this is still the same direction you're thinking, or maybe I'd missed an important conversation in the last month or so.</p>\n<p>I'm also curious about the <code>RawFd</code> shenanigans we do in wasi-common - is there a particular reason we _need_ to touch <code>RawFd</code> or <code>ManuallyDrop</code>? I see there are cases we have to update a referenced file descriptor (<code>fdstat_set_flags</code>, to support Windows' impl), but even the we could retain the returned <code>File</code> rather than swapping out <code>fd</code> numbers under the hood. The implementation here looks good, but it'd be nice to be sure we won't accidentally pick up a bug in the future from some change that forgets to drop an <code>fd</code> :D</p>\n<p>Approving as this all looks good, and even if there are points to keep from my comment they can be changes in a subsequent PR or here - your choice.</p>\n</blockquote>\n<p>So actually, your model is exactly what I had in mind here. Perhaps naming is somewhat misleading here. When refactoring, I noticed that <code>VirtualFs</code> is like <code>std::fs::File</code>, hence why I pushed it out from <code>OsHandle</code> since <code>OsHandle</code> is also meant to act like <code>std::fs::File</code>. And when streams come up, they will be a type separate from <code>OsHandle</code>. Perhaps renaming will be in order then to avoid this sort of confusion!</p>\n</blockquote>",
        "id": 193362392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586371652
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-611732684\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443#issuecomment-611732684\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1443\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1443\">Issue #1443</a>:</p>\n<blockquote>\n<p>So after some offline discussion with @sunfishcode, we agreed to land this PR with the intention to take this refactoring further however by splitting the \"one trait\" for WASI handle into multiple traits, each responsible for different type of functionality, essentially disambiguating between files, dirs, streams, etc. This will take some considerable amount of effort to pull off, but anyway, we do believe this PR is a good first step in that direction, and landing it will give us some decent base to iterate from.</p>\n</blockquote>",
        "id": 193503945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586463491
    }
]