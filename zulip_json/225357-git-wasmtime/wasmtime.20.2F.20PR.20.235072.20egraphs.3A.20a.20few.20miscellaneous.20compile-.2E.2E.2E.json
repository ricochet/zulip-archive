[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a> from <code>egraph-misc-opts</code> to <code>main</code>:</p>\n<blockquote>\n<p>These optimizations together are worth about a 2% compile-time reduction, as measured on one more with spidermonkey.wasm as an input, using <code>hyperfine</code> on <code>wasmtime compile</code>.</p>\n<p>The changes included are:</p>\n<ul>\n<li>Some better pre-allocation (blockparams and side-effects concatenated list vecs);</li>\n<li>Avoiding the indirection of storing list-of-types for every Pure and Inst node, when almost all nodes produce only a single result; instead, store arity and single type if it exists, and allow result projection nodes to fill in types otherwise;</li>\n<li>Pack the <code>MemoryState</code> enum into one <code>u32</code> (this together with the above removal of the type slice allows <code>Node</code> to shrink from 48 bytes to 32 bytes);</li>\n<li>always-inline an accessor (<code>entry</code> on <code>CtxHash</code>) that wasn't (<code>always(inline)</code> appears to be load-bearing, rather than just <code>inline</code>);</li>\n<li>Split the update-analysis path into two hotpaths, one for the union case and one for the new-node case (and the former can avoid recomputing for the contained node when replacing a node with node-and-child eclass entry).</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 304849659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666131147
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a>.</p>",
        "id": 304849660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666131148
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a>.</p>",
        "id": 304849661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666131148
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a> from <code>egraph-misc-opts</code> to <code>main</code>.</p>",
        "id": 304849922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666131268
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a> from <code>egraph-misc-opts</code> to <code>main</code>:</p>\n<blockquote>\n<p>These optimizations together are worth about a 2% compile-time reduction, as measured on one core with spidermonkey.wasm as an input, using <code>hyperfine</code> on <code>wasmtime compile</code>.</p>\n<p>The changes included are:</p>\n<ul>\n<li>Some better pre-allocation (blockparams and side-effects concatenated list vecs);</li>\n<li>Avoiding the indirection of storing list-of-types for every Pure and Inst node, when almost all nodes produce only a single result; instead, store arity and single type if it exists, and allow result projection nodes to fill in types otherwise;</li>\n<li>Pack the <code>MemoryState</code> enum into one <code>u32</code> (this together with the above removal of the type slice allows <code>Node</code> to shrink from 48 bytes to 32 bytes);</li>\n<li>always-inline an accessor (<code>entry</code> on <code>CtxHash</code>) that wasn't (<code>always(inline)</code> appears to be load-bearing, rather than just <code>inline</code>);</li>\n<li>Split the update-analysis path into two hotpaths, one for the union case and one for the new-node case (and the former can avoid recomputing for the contained node when replacing a node with node-and-child eclass entry).</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 304849927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666131272
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1146631693\">PR review</a>.</p>",
        "id": 304857955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136010
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r998794520\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                        arity: {\n                            debug_assert!(results.len() &lt;= (u16::MAX as usize));\n                            results.len() as u16\n                        },\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 304857956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136011
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1146631693\">PR review</a>.</p>",
        "id": 304857957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136011
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r998794695\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto</p>\n</blockquote>",
        "id": 304857958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136011
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r998797856\">PR review comment</a>:</p>\n<blockquote>\n<p>Can't just be <code>#[inline]</code>? Needs to be inlined in non-optimized builds too?</p>\n</blockquote>",
        "id": 304857959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136011
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r998794667\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto</p>\n</blockquote>",
        "id": 304857960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136011
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r998803862\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd prefer not to affect non-optimized builds, but for whatever reason the <code>inline(always)</code> seemed to be necessary to get inlining to happen in <em>optimized</em> builds, unfortunately...</p>\n<p>(I'd really love to gain more insight into the heuristics at play here!)</p>\n</blockquote>",
        "id": 304859119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136829
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1146643945\">PR review</a>.</p>",
        "id": 304859120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666136829
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a> from <code>egraph-misc-opts</code> to <code>main</code>.</p>",
        "id": 304861786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666138810
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1146660761\">PR review</a>.</p>",
        "id": 304861819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666138836
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r998816744\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed! Actually used <code>u16::try_from(...).expect(...)</code> here but result is the same. And, factored out above if/else chain to use below as well.</p>\n</blockquote>",
        "id": 304861820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666138836
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a> from <code>egraph-misc-opts</code> to <code>main</code>.</p>",
        "id": 304862079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666139063
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a>.</p>",
        "id": 304863008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666139893
    },
    {
        "content": "<p>cfallin has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a>.</p>",
        "id": 304864794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666141373
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a> from <code>egraph-misc-opts</code> to <code>main</code>.</p>",
        "id": 304865416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666141831
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1148054825\">PR review</a>.</p>",
        "id": 305012076,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666202451
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072\">PR #5072</a>.</p>",
        "id": 305012869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666202702
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1148072110\">PR review</a>.</p>",
        "id": 305014608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666203271
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r999794869\">PR review comment</a>:</p>\n<blockquote>\n<p>Shouldn't this be <code>self.0 &amp; 3 &gt; 0</code>?</p>\n</blockquote>",
        "id": 305014609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666203271
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1148085049\">PR review</a>.</p>",
        "id": 305016336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666203888
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r999803746\">PR review comment</a>:</p>\n<blockquote>\n<p>It's an unpack method just for the tag=1 case so I think this is correct?</p>\n</blockquote>",
        "id": 305016337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666203888
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#pullrequestreview-1148108627\">PR review</a>.</p>",
        "id": 305019419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666205048
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5072#discussion_r999820348\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, ok... It seemed like it could have been for all three <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 305019420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666205048
    }
]