[
    {
        "content": "<p>dheaton-arm <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-921905221\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>Not sure what's causing the test failures as I can't seem to reproduce that locally (though that's using Ubuntu)...</p>\n</blockquote>",
        "id": 253763883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631894174
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-921923907\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>This is what I see on CI.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">Cranelift</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">Verifier</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">inst2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">b8x16</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">)</span>: <span class=\"nc\">has</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">controlling</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">b8x16</span><span class=\"w\"></span>\n</code></pre></div>\n<p>At a first glance i suspect it might be either #3306 or #3341.</p>\n<p>I can investigate this a bit better later, but if it is #3306 it might be better to just rebase, if it is #3341 its a bit more complicated, since the solution on #3341 is wrong, and I am working on the correct solution using <code>bmask</code>, but its going to take a while...</p>\n</blockquote>",
        "id": 253767882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631895781
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-921923907\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>This is what I see on CI.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">Cranelift</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">Verifier</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">inst2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">b8x16</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">)</span>: <span class=\"nc\">has</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">controlling</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">b8x16</span><span class=\"w\"></span>\n</code></pre></div>\n<p>At a first glance i suspect it might be either #3306 or #3341.</p>\n<p>I can investigate this a bit better later, but if it is #3306 we might be able to solve this with a rebase, if it is #3341 its a bit more complicated, since the solution on #3341 is wrong, and I am working on the correct solution using <code>bmask</code>, but its going to take a while...</p>\n</blockquote>",
        "id": 253768352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631895977
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-921923907\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>This is what I see on CI.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">Cranelift</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">Verifier</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">inst2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">b8x16</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">)</span>: <span class=\"nc\">has</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">invalid</span><span class=\"w\"> </span><span class=\"n\">controlling</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">b8x16</span><span class=\"w\"></span>\n</code></pre></div>\n<p>At a first glance i suspect it might be a trampoline compile failure, either #3306 or #3341.</p>\n<p>I can investigate this a bit better later, but if it is #3306 we might be able to solve this with a rebase, if it is #3341 its a bit more complicated, since the solution on #3341 is wrong, and I am working on the correct solution using <code>bmask</code>, but its going to take a while...</p>\n</blockquote>",
        "id": 253769539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631896448
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-921938939\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>Its not a trampoline compile failure. <code>%vselect_p_i8x16</code> is failing the verifier after legalization. This is what comes out after the legalization pass (but before running the verifier).</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">vselect_p_i8x16</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"p\">])</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i8x16</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">windows_fastcall</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v4</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">b8x16</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i8x16</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i8x16</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexMp3blend</span>#<span class=\"mi\">910</span><span class=\"p\">]</span><span class=\"w\">                </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vselect</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">Op1ret</span>#<span class=\"n\">c3</span><span class=\"p\">]</span><span class=\"w\">                         </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not too familiar with the legalizer to be able to tell anything else.</p>\n</blockquote>",
        "id": 253771458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631897303
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-921938939\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>Its not a trampoline compile failure. <code>%vselect_p_i8x16</code> is failing the verifier after legalization. This is what comes out after the legalization pass (but before running the verifier).</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">vselect_p_i8x16</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"p\">])</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i8x16</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">windows_fastcall</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v4</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">b8x16</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i8x16</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i8x16</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexMp3blend</span>#<span class=\"mi\">910</span><span class=\"p\">]</span><span class=\"w\">                </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vselect</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">Op1ret</span>#<span class=\"n\">c3</span><span class=\"p\">]</span><span class=\"w\">                         </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not too familiar with the legalizer to be able to tell anything else. This is weird to  me because in #3306 we have tests receiving simd bool args, which don't get turned into load's, otherwise they would fail too.</p>\n</blockquote>",
        "id": 253773249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631898075
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-921938939\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>Its not a trampoline compile failure. <code>%vselect_p_i8x16</code> is failing the verifier after legalization. This is what comes out after the legalization pass (but before running the verifier).</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">vselect_p_i8x16</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"p\">])</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i8x16</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">xmm0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">windows_fastcall</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v4</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">b8x16</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i8x16</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexOp2fld</span>#<span class=\"mi\">410</span><span class=\"p\">]</span><span class=\"w\">                  </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i8x16</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">DynRexMp3blend</span>#<span class=\"mi\">910</span><span class=\"p\">]</span><span class=\"w\">                </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vselect</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">Op1ret</span>#<span class=\"n\">c3</span><span class=\"p\">]</span><span class=\"w\">                         </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm not too familiar with the legalizer to be able to tell anything else. This is weird to  me because in #3306 we have tests receiving simd bool args, which don't get turned into load's, otherwise they would fail too. Is there something special about <code>vselect</code>?</p>\n</blockquote>",
        "id": 253773653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631898229
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-922485203\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<p>It looks like this is only failing on the legacy backend. The test files pass if we remove the <code>target x86_64 legacy haswell</code> line.</p>\n<p>Since <a href=\"https://github.com/bytecodealliance/rfcs/issues/12\">bytecodealliance/rfcs#12</a> is approved, I think it would be ok if we disabled this test file for the legacy backend. Or we could wait a few more days until the FCP window is closed. @cfallin suggestions?</p>\n</blockquote>",
        "id": 253949942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632062706
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361#issuecomment-924220241\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3361\">issue #3361</a>:</p>\n<blockquote>\n<blockquote>\n<p>Since <a href=\"https://github.com/bytecodealliance/rfcs/issues/12\">bytecodealliance/rfcs#12</a> is approved, I think it would be ok if we disabled this test file for the legacy backend. Or we could wait a few more days until the FCP window is closed. @cfallin suggestions?</p>\n</blockquote>\n<p>Yes, I agree, let's just exclude the old backend from this test.</p>\n</blockquote>",
        "id": 254249228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632246663
    }
]