[
    {
        "content": "<p><strong>dundargoc</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437106759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714911382
    },
    {
        "content": "<p><strong>dundargoc</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437106760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714911382
    },
    {
        "content": "<p>dundargoc opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a> from <code>dundargoc:build/performance</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is extremely useful for cases where the default optimizations just<br>\nare not enough.</p>\n<p>Background: <a href=\"https://github.com/neovim/neovim\">neovim</a> is interested to<br>\nadd wasmtime support in <a href=\"https://github.com/neovim/neovim/pull/28415\">https://github.com/neovim/neovim/pull/28415</a> but<br>\nwe noticed that including wasmtime, even when not using wasmtime<br>\ndirectly, heavily affects runtime performance. This is not only<br>\nreflected in the increased startuptime but affects the runtime<br>\nperformance overall.</p>\n<p>Here are the benchmarks for startuptimes for different configurations.<br>\nImportant to note is that all of runtime is affected, but the<br>\nstartuptime is a decent proxy to measure runtime performance:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">wasm</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">50.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">32.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">48.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">54.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">56</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">Wasm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"n\">thin</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:     <span class=\"mf\">104.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">3.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">86.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">99.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"mf\">111.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">Wasm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">83.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">2.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">65.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">80.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">93.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">31</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">Wasm</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">incremental</span><span class=\"o\">=</span><span class=\"kc\">false</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">=</span><span class=\"s\">\"abort\"</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">53.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">35.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">50.6</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">55.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">54</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n</code></pre></div>\n</blockquote>",
        "id": 437106761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714911382
    },
    {
        "content": "<p><strong>dundargoc</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437106762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714911382
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039681758\">PR review</a>.</p>",
        "id": 437108289,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714912902
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590301954\">PR review comment</a>:</p>\n<blockquote>\n<p>This is already the default for release mode.</p>\n</blockquote>",
        "id": 437108290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714912902
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039683629\">PR review</a>.</p>",
        "id": 437108370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714912959
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590302082\">PR review comment</a>:</p>\n<blockquote>\n<p>Why disable debuginfo stripping when you don't enable debuginfo anyway?</p>\n</blockquote>",
        "id": 437108371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714912959
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590303585\">PR review comment</a>:</p>\n<blockquote>\n<p>This can probably be enabled unconditionally for the c-api. We aren't catching panics on the C abi boundary, so they will abort anyway (or be UB until the <code>c_unwind</code> rustc feature is fully stabilized).</p>\n</blockquote>",
        "id": 437108571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913147
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039686713\">PR review</a>.</p>",
        "id": 437108572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913147
    },
    {
        "content": "<p>clason submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039686880\">PR review</a>.</p>",
        "id": 437108634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913192
    },
    {
        "content": "<p>clason created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590304190\">PR review comment</a>:</p>\n<blockquote>\n<p>This strips more, though (symbols as well). We really need all these settings to close the gap to a build without wasmtime (we tested this).</p>\n</blockquote>",
        "id": 437108635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913192
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039687089\">PR review</a>.</p>",
        "id": 437108683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913254
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590305105\">PR review comment</a>:</p>\n<blockquote>\n<p><code>strip = \"none\"</code> strips neither debuginfo, nor symbols.</p>\n</blockquote>",
        "id": 437108684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913255
    },
    {
        "content": "<p>clason submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039688479\">PR review</a>.</p>",
        "id": 437109202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913711
    },
    {
        "content": "<p>clason created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590308698\">PR review comment</a>:</p>\n<blockquote>\n<p>My mistake; I was reading this wrong (my own tests were with <code>true</code>).</p>\n</blockquote>",
        "id": 437109203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714913711
    },
    {
        "content": "<p>dundargoc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437111079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714915302
    },
    {
        "content": "<p>dundargoc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039693212\">PR review</a>.</p>",
        "id": 437111161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714915351
    },
    {
        "content": "<p>dundargoc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590313422\">PR review comment</a>:</p>\n<blockquote>\n<p>I benchmarked this and it seems strip does not seem to make difference. I'll remove it.</p>\n</blockquote>",
        "id": 437111162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714915351
    },
    {
        "content": "<p>dundargoc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437111175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714915362
    },
    {
        "content": "<p>dundargoc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039695968\">PR review</a>.</p>",
        "id": 437112229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714916174
    },
    {
        "content": "<p>dundargoc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590316269\">PR review comment</a>:</p>\n<blockquote>\n<p>I am getting the following warning</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"err\">`</span><span class=\"n\">panic</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">specified</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">package</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">profile</span>\n</code></pre></div>\n<p>It seems as though this is not possible based on the <a href=\"https://doc.rust-lang.org/cargo/reference/profiles.html#overrides\">documentation</a>:</p>\n<blockquote>\n<p>Overrides cannot specify the <code>panic</code>, <code>lto</code>, or <code>rpath</code> settings.</p>\n</blockquote>\n</blockquote>",
        "id": 437112230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714916174
    },
    {
        "content": "<p><strong>dundargoc</strong> requested <a href=\"https://github.com/bjorn3\">bjorn3</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437130019,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714921638
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039720885\">PR review</a>.</p>",
        "id": 437134177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714922653
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590339676\">PR review comment</a>:</p>\n<blockquote>\n<p>I meant setting the <code>CARGO_PROFILE_&lt;profile name&gt;_PANIC=\"abort\"</code> env var in <code>CMakeLists.txt</code> where <code>&lt;profile name&gt;</code> is either <code>DEV</code> or <code>RELEASE</code> depending on if <code>--release</code> was passed or not.</p>\n</blockquote>",
        "id": 437134178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714922653
    },
    {
        "content": "<p>dundargoc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437141181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714924628
    },
    {
        "content": "<p>dundargoc submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#pullrequestreview-2039728083\">PR review</a>.</p>",
        "id": 437141204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714924648
    },
    {
        "content": "<p>dundargoc created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#discussion_r1590346959\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed</p>\n</blockquote>",
        "id": 437141205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714924648
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096393574\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>Thanks for the PR here! Is it possible perhaps for CMake to set environment variables for other steps? That's probably the best way to do this rather than adding a static profile. That way you'd be able to set <code>CARGO_PROFILE_RELEASE_*</code> to appropriate values and it can be customized per-project. Or perhaps could knobs be added to the CMake project in Wasmtime to set the env vars?</p>\n<p>Otherwise though I also wanted to poke a bit about what the benchmark is. This is just starting a program that's not actually using Wasmtime at all? It's just changing how Wasmtime itself is linked in? If so it sounds like the main issue is that Wasmtime has lots of symbols and they may be all getting processed by the dynamic linker at startup. LTO will reduce the number of symbols, but there should be other knobs to internalize symbols in an executable or dynamic library such that LTO wouldn't be required to get the same performance benefits.</p>\n</blockquote>",
        "id": 437292959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715011281
    },
    {
        "content": "<p>clason <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096408582\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks for the PR here! Is it possible perhaps for CMake to set environment variables for other steps? That's probably the best way to do this rather than adding a static profile. That way you'd be able to set CARGO_PROFILE_RELEASE_* to appropriate values and it can be customized per-project.</p>\n</blockquote>\n<p>That's what we did before, but we thought that the preset could be used by other projects with similar needs.</p>\n<blockquote>\n<p>Otherwise though I also wanted to poke a bit about what the benchmark is. This is just starting a program that's not actually using Wasmtime at all? It's just changing how Wasmtime itself is linked in? </p>\n</blockquote>\n<p>That is correct.</p>\n<blockquote>\n<p>If so it sounds like the main issue is that Wasmtime has lots of symbols and they may be all getting processed by the dynamic linker at startup. LTO will reduce the number of symbols, but there should be other knobs to internalize symbols in an executable or dynamic library such that LTO wouldn't be required to get the same performance benefits.</p>\n</blockquote>\n<p>This is our thinking as well; if you know of such knobs, we'd be more than happy for the hint. Our own interface to wasmtime is extremely small (but we do link to tree-sitter, which uses more of it).</p>\n</blockquote>",
        "id": 437294356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715011752
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096414558\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>Ok sounds good, and a preset also sounds good to me!</p>\n<p>Is this on macOS, Linux, Windows, or all three? This would likely be flags to the linker invocation that creates the neovim executable itself which would be along the lines of \"only export this list of symbols and no more\" and that would internalize everything else. Is it possible to construct a list like that, for example is <code>main</code> the only symbol that's necessary? Or are plugins dlopen'd which need to reach into internal symbols?</p>\n</blockquote>",
        "id": 437294919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715011946
    },
    {
        "content": "<p>clason <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096429351\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>All three and more (as many as we can build on), with a wide range of compilers. We use only a very limited set (basically, <code>wasm_engine_{new,delete}</code>, but we link to tree-sitter which uses more (which I don't know off the top of my head). </p>\n</blockquote>",
        "id": 437296328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715012443
    },
    {
        "content": "<p>clason edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096429351\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>All three and more (as many as we can build on), with a wide range of compilers. We use only a very limited set (basically, <code>wasm_engine_{new,delete}</code>), but we link to tree-sitter which uses more (which I don't know off the top of my head). </p>\n</blockquote>",
        "id": 437296646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715012555
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096449766\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>Oh sorry, to clarify, is the performance regression you're seeing on all platforms? Or only some?</p>\n</blockquote>",
        "id": 437298526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715013179
    },
    {
        "content": "<p>clason <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096451933\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>So far we have mostly tested with macOS; of course the exact impact varies with platform and toolchain.</p>\n</blockquote>",
        "id": 437298769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715013262
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096629752\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>I'm trying to test my theory with a <a href=\"https://gist.github.com/alexcrichton/0e25ee8ef950bb21f61f7ff326a0fe3c\">small script</a> but it's not too successful. The big binaries are slower but they don't get faster when removing the symbols so I don't think this going to bear fruit.</p>\n<p>Regardless though I think it's fine to land this, but on reviewing it I think it might be best to call this \"lto\" in the various places instead of \"optimized\". I want to avoid confusion between \"optimized\" and <code>--release</code> builds since both are runtime-wise pretty equally optimized, and \"lto\" is the main differentiating factor here.</p>\n</blockquote>",
        "id": 437313482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715019145
    },
    {
        "content": "<p>clason <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096657976\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>I appreciate your testing! Not married to the name, of course, but note that full LTO is only half the game here -- you also need the other settings for the \"optimal\" benefit. Unless you consider codegen-units to be part of LTO? Then it'd obviously make sense. </p>\n</blockquote>",
        "id": 437315998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715020205
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096664370\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>That's true yeah. I suppose I'm mostly looking for a name that evokes something like \"pull out all the stops on optimizing this I'm willing to wait for an hour\". That typically includes lto and codegen-units=1. I personally consider \"lto\" as \"take your time please optimize this as much as you can\" but that's also just me.</p>\n<p>Also, question for y'all, does codegen-units=1 help much here in isolation? If that setting is dropped do you see a difference in perf? I ask because that should only affect generated code quality, not symbol visibility. If codegen-units=1 does help then the mystery deepens in my head for what's going on here (PR can land either way of course, I'm just curious now!)</p>\n</blockquote>",
        "id": 437316495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715020430
    },
    {
        "content": "<p>clason <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096715916\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>Yes it does! (We benchmarked each option -- @dundargoc could you edit the PR description to add the individual steps?)</p>\n<p>And it's _very_ weird -- but then I don't know any other large C project that statically links a Rust dependency (and we have been quite reticent about it im the past). </p>\n<p>If LTO has the full connotation for you, that's fine with us of course!</p>\n</blockquote>",
        "id": 437321470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715022363
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096759885\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>Odd! Well in any case happy to r+ and flag for merge with a rename.</p>\n<p>Otherwise though if y'all have a series of instructions to reproduce this slowdown I'd be happy to try to dig further in my spare time later.</p>\n</blockquote>",
        "id": 437325136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715023917
    },
    {
        "content": "<p>dundargoc <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096916766\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>This is the benchmarking we did to determine which of the flags seemed to make a difference:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:     <span class=\"mf\">132.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">3.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">114.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:   <span class=\"mf\">122.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"mf\">137.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">83.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">66.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">80.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">86.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">80.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">63.6</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">11.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">77.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">84.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">80.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">2.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">64.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">77.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">84.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">=</span><span class=\"s\">\"abort\"</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">52.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">35.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">11.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">49.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">56.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">51</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">=</span><span class=\"s\">\"abort\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">incremental</span><span class=\"o\">=</span><span class=\"kc\">false</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">52.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">35.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">50.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">54.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">52</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n</code></pre></div>\n<p>So from this we were able to see that <code>lto</code> and <code>panic</code> makes the biggest difference, and that <code>codegen-units=1</code> does make a small yet noticable difference as well. Note that @clason noticed a bigger difference for <code>codegen-units=1</code> on his intel macos, so it could be platform-dependent as well?</p>\n<hr>\n<p>As for the name, I am fine with whatever. <code>lto</code> is just fine. For reference, we got these flags from <a href=\"https://github.com/Kobzol/cargo-wizard\">cargo-wizard</a> and the configuration for this was called <code>fast-runtime</code>. So perhaps that is also a viable profile name? In any case, I'm fine with either, just lemme know what you want me to change it to.</p>\n</blockquote>",
        "id": 437337523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715029519
    },
    {
        "content": "<p>dundargoc edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096916766\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>This is the benchmarking we did to determine which of the flags seemed to make a difference:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:     <span class=\"mf\">132.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">3.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">114.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:   <span class=\"mf\">122.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"mf\">137.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">83.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">66.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">80.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">86.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">80.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">63.6</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">11.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">77.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">84.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">80.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">2.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">64.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">77.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">84.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">=</span><span class=\"s\">\"abort\"</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">52.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">35.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">11.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">49.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">56.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">51</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">=</span><span class=\"s\">\"abort\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">incremental</span><span class=\"o\">=</span><span class=\"kc\">false</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">52.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">35.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">50.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">54.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">52</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n</code></pre></div>\n<p>So from this we were able to see that <code>lto</code> and <code>panic</code> makes the biggest difference, and that <code>codegen-units=1</code> does make a small yet noticable difference as well. Note that @clason noticed a bigger difference for <code>codegen-units=1</code> on his intel macos, so it could be platform-dependent as well?</p>\n<hr>\n<p>As for the profile name, I am fine with whatever. <code>lto</code> is just fine. For reference, we got these flags from <a href=\"https://github.com/Kobzol/cargo-wizard\">cargo-wizard</a> and the configuration for this was called <code>fast-runtime</code>. So perhaps that is also a viable profile name? In any case, I'm fine with either, just lemme know what you want me to change it to.</p>\n</blockquote>",
        "id": 437337550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715029531
    },
    {
        "content": "<p>dundargoc edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096916766\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>This is the benchmarking we did to determine which of the flags seemed to make a difference:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:     <span class=\"mf\">132.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">3.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">114.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:   <span class=\"mf\">122.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"mf\">137.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">83.5</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">66.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">80.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">86.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">80.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">63.6</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">11.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">77.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">84.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">80.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">2.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">64.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">77.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">84.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">34</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">=</span><span class=\"s\">\"abort\"</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">52.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">35.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">11.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">49.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">56.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">51</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n\n<span class=\"n\">lto</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">strip</span><span class=\"o\">=</span><span class=\"s\">\"none\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"o\">=</span><span class=\"s\">\"abort\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">incremental</span><span class=\"o\">=</span><span class=\"kc\">false</span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:      <span class=\"mf\">52.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">35.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">12.0</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">50.4</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\">  </span><span class=\"mf\">54.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">52</span><span class=\"w\"> </span><span class=\"n\">runs</span>\n</code></pre></div>\n<p>So from this we were able to see that <code>lto</code> and <code>panic</code> makes the biggest difference, and that <code>codegen-units=1</code> does make a small yet noticable difference as well. Note that @clason noticed a bigger difference for <code>codegen-units=1</code> on his intel macos, so it could be platform-dependent as well.</p>\n<hr>\n<p>As for the profile name, I am fine with whatever. <code>lto</code> is just fine. For reference, we got these flags from <a href=\"https://github.com/Kobzol/cargo-wizard\">cargo-wizard</a> and the configuration for this was called <code>fast-runtime</code>. So perhaps that is also a viable profile name? In any case, I'm fine with either, just lemme know what you want me to change it to.</p>\n</blockquote>",
        "id": 437337663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715029567
    },
    {
        "content": "<p>dundargoc <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096926335\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>Oh, right. Reproduction steps. We build neovim in <a href=\"https://github.com/neovim/neovim/pull/28415\">this</a> PR with the following command:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>make<span class=\"w\"> </span>distclean<span class=\"w\"> </span><span class=\"c1\">#just to remove old builds</span>\nmake<span class=\"w\"> </span><span class=\"nv\">CMAKE_EXTRA_FLAGS</span><span class=\"o\">=</span>-DENABLE_WASMTIME<span class=\"o\">=</span>ON<span class=\"w\"> </span><span class=\"nv\">DEPS_CMAKE_FLAGS</span><span class=\"o\">=</span>-DENABLE_WASMTIME<span class=\"o\">=</span>ON<span class=\"w\"> </span><span class=\"nv\">CMAKE_BUILD_TYPE</span><span class=\"o\">=</span>Release\ncmake<span class=\"w\"> </span>--install<span class=\"w\"> </span>build<span class=\"w\"> </span>--prefix<span class=\"w\"> </span>bin\nhyperfine<span class=\"w\"> </span>--warmup<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span><span class=\"s2\">\"bin/bin/nvim +'quit'\"</span>\n</code></pre></div>\n<p>I point to a local path of wasmtime in <code>cmake.deps/deps.txt</code> so it says </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">WASMTIME_URL</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">dundargoc</span><span class=\"o\">/</span><span class=\"n\">programs</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span>\n</code></pre></div>\n<p>It's not the most graceful reproductions steps I'm afraid but that's the current tech we're working with at the moment <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n</blockquote>",
        "id": 437338488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715029888
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096963476\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>\"fast-runtime\" sounds reasonable to me, although I might bikeshed to \"fastest-runtime\" perhaps to help head off confusion between the default <code>--release</code> and \"fast-runtime\" where they're both supposed to be fast</p>\n</blockquote>",
        "id": 437342357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715031295
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554#issuecomment-2096964467\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>:</p>\n<blockquote>\n<p>And no worries! I'll try to kick the tires there and see if I can't bottom something out as to how Wasmtime is affecting things</p>\n</blockquote>",
        "id": 437342448,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715031345
    },
    {
        "content": "<p>dundargoc updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8554\">PR #8554</a>.</p>",
        "id": 437350511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715036270
    }
]