[
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1498483081\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Now that #5929 has merged, I think this is ready for review. We may want to merge #6161 first since this PR includes that one.</p>\n</blockquote>",
        "id": 347301206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680755984
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1507189257\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Hi, sorry, I haven't forgotten about this PR, I have just been focusing on getting some other stuff done this week and haven't had time to review. I have set aside some time for it tomorrow.</p>\n</blockquote>",
        "id": 349146563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681400371
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1509866853\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey no worries, I'm not in a rush.</p>\n</blockquote>",
        "id": 350178025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681571189
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1516744185\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Can this be rebased on top of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6228\">https://github.com/bytecodealliance/wasmtime/pull/6228</a> (or <code>main</code> once it lands) now?</p>\n</blockquote>",
        "id": 351396799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014084
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1516865034\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Yes, I plan to rebase this once it merges.</p>\n</blockquote>",
        "id": 351416088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682020299
    },
    {
        "content": "<p>brendandburns edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1516865034\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Yes, I plan to rebase this once #6228 merges.</p>\n<p>While we're on the topic of rebase, do you have a good strategy for rebasing this repo since we're doing squash merges? My standard flow is <code>git fetch upstream; git rebase upstream/main</code> but that seems to cause conflicts when rebasing on top of the squashed PR that has merged into main.</p>\n</blockquote>",
        "id": 351416274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682020363
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1520514393\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>I end up using <code>git rebase -i</code> and delete all the lines that correspond to the squashed PRs that already landed.</p>\n</blockquote>",
        "id": 352333188,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682355130
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1522124589\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey this is rebased and ready for initial review.<br>\n</p>\n</blockquote>",
        "id": 352594008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682441927
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1523944424\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey thanks for the review and the idiomatic suggestions. I will update this PR to reflect the async request above and fix the idiomatic bits too (and add a test)</p>\n<p>It will probably take me a few days to get enough free cycles to get it done, but should be by the end of the week.</p>\n</blockquote>",
        "id": 352932322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682537865
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1527807692\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey as I dug into this it seems that a bunch of components (e.g. the <code>Store</code>) don't implement the <code>Send</code> trait which means they can't be passed into an async function (at least as far as I can tell)</p>\n<p>Do you have a perspective on if it is ok to modify them to implement <code>Send</code> or if there is some other approach that is preferable.</p>\n</blockquote>",
        "id": 353967560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682699487
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1527910215\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Your \"context\" struct <code>WasiHttp</code> will need to impl Send in order for Store&lt;WasiHttp&gt; to be used by the async wasmtime apis.</p>\n<p>The good news is the design goal for the wasmtime async apis was to work perfectly inside a hyper service, <a href=\"https://github.com/fastly/Viceroy/blob/main/lib/src/execute.rs\">https://github.com/fastly/Viceroy/blob/main/lib/src/execute.rs</a> was the prototype where we actually fleshed all that design out a few years ago. So maybe you can crib some of the patterns there. The bad news is that async Rust has a steep learning curve, and the error messages from rustc aren't quite as brilliant as they are for the rest of the language. If you need to pair program on this for an hour sometime, my calendar next week is pretty open, but I am taking off Friday.</p>\n</blockquote>",
        "id": 354010189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682704972
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1527910215\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Your \"context\" struct <code>WasiHttp</code> will need to impl Send in order for Store&lt;WasiHttp&gt; to be used by the async wasmtime apis. If the struct is composed out of Send elements this should be automatic - if rustc is not letting you have a Send impl, don't derive an unsafe one.</p>\n<p>The good news is the design goal for the wasmtime async apis was to work perfectly inside a hyper service, <a href=\"https://github.com/fastly/Viceroy/blob/main/lib/src/execute.rs\">https://github.com/fastly/Viceroy/blob/main/lib/src/execute.rs</a> was the prototype where we actually fleshed all that design out a few years ago. So maybe you can crib some of the patterns there. The bad news is that async Rust has a steep learning curve, and the error messages from rustc aren't quite as brilliant as they are for the rest of the language. If you need to pair program on this for an hour sometime, my calendar next week is pretty open, but I am taking off Friday.</p>\n</blockquote>",
        "id": 354014971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682705658
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1527991159\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>The biggest problem that I see is that in order to make a call into the WASM module you need to pass the <code>Linker</code> and the <code>Store</code> into the async function and neither of those implement <code>Send</code></p>\n<p>The reason that I need to pass it is because the only time that you can get access to that is when the context is constructed (at least as far as I can tell). If there was a way to statically get at the <code>Linker</code> and the <code>Store</code> then it would just be a question of making my context <code>Send</code> but those other wasmtime resources need to be part of the context also.</p>\n<p>Looks like you worked around this by constructing the store and linking _inside_ each HTTP execution:</p>\n<p><a href=\"https://github.com/fastly/Viceroy/blob/main/lib/src/execute.rs#L301\">https://github.com/fastly/Viceroy/blob/main/lib/src/execute.rs#L301</a></p>\n<p>Which might be possible here, but would require some pretty significant rewiring since that is created/configured via flags etc in a different place.</p>\n</blockquote>",
        "id": 354033946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682709597
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1528114071\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>That's right - the pattern required is to construct a store inside each execution so we can give the host functions a mut ref to the Store's T, otherwise you would need to use Arc&lt;Mutex&lt;&gt;&gt; and lock every use to get something Send and Sync to communicate with outside of the execution. The context will have to be designed to take this into account. We pass in the LinkerPre structure to amortize linking, but that will be up to the embedder. Store::new and LinkerPre.instantiate_async is designed to be extremely fast when used with the memory pooling features in the Engine.</p>\n</blockquote>",
        "id": 354055416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682717358
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1528114071\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>That's right - the pattern required is to construct a store inside each execution so we can give the host functions a mut ref to the Store's T, otherwise you would need to use Arc&lt;Mutex&lt;&gt;&gt; and lock every use to get something Send and Sync to communicate with outside of the execution. The context will have to be designed to take into account that it is created from the embedder's per-http request execution, not the other way around.</p>\n<p>Viceroy passes in the LinkerPre structure to amortize linking, but that will be up to the embedder. Store::new and LinkerPre.instantiate_async is designed to be extremely fast when used with the memory pooling features in the Engine.</p>\n</blockquote>",
        "id": 354055894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682717539
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1543104432\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Just a quick update that this PR is proving to be more thorny/invasive than I thought b/c of the interplay of Store/Linker/Host.</p>\n<p>I think that there needs to be some significant refactoring of how the <code>run</code> command is written to make parts of it accessible in other parts of the code-base.</p>\n<p>I'm still working on it (slowly) but it might be a bit of time before this arrives.<br>\n</p>\n</blockquote>",
        "id": 357435313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683769296
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1546261512\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey ok, I got this working with the switch to <code>call_async</code> and <code>instantiate_async</code>.</p>\n<p>Can you take a look and see if this is what you had in mind?</p>\n<p>If it looks directionally correct, I'll work on the style and tests.</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 357981274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683923714
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1551452848\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey does your <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> mean that this looks correct? Or did it just mean \"acknowledged, I will take a look when I get a chance\"?</p>\n<p>Sorry, the meaning of response emojis are sometimes hard to parse :)</p>\n</blockquote>",
        "id": 358991608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684331995
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1552221006\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Hi, sorry, the +1 was an acknowledgement that I was going to review it, but I haven't had time to spend on it yet, this week I have been heads down trying to move all of the preview2-prototying repo into this one.</p>\n<p>Taking a brief look now, this didn't turn out exactly like I had envisioned, but I am not sure exactly what to suggest to change, I will have to play with refactoring it a bit myself to figure out the right direction. Sorry that isn't very actionable feedback. I will spend time on this next week.</p>\n</blockquote>",
        "id": 359102039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684367173
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1553394885\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey sounds good. I actually spent a bunch of time on the refactoring also, I took three different paths at it and this was the one that seemed most \"right\"</p>\n<p>But I'm definitely open to other options.</p>\n<p>The most radical one would be to make all wasmtime executions <code>async</code> instead of the current <code>sync</code> default, but I considered that to be to significant of a change to entertain.</p>\n</blockquote>",
        "id": 359458050,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684431403
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1573047395\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey this is updated with a rebase to reflect the recent wit changes.<br>\n</p>\n</blockquote>",
        "id": 362917711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685672726
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1604336981\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>@pchickey friendly ping on this, I suspect that you are busy on other things, so no rush, but wondering what the status of this is.</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 368909650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687529267
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1608111830\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Right now I am working on getting the preview 2 host streams and pollable implementation landed in #6556. That is the prerequisite for getting wasi-http integrated with the rest of the component model implementation in wasmtime.</p>\n<p>Once #6556 lands we need to do pretty hefty renovations to the wasi-http implementation to rebase it on top of that work. @dicej has successfully made a new implementation based on a somewhat similar implementation of streams and pollable <a href=\"https://github.com/fermyon/spin/blob/132a32daed6632768d52a9336125073e87fee1e8/crates/wasi-cloud/src/http.rs\">https://github.com/fermyon/spin/blob/132a32daed6632768d52a9336125073e87fee1e8/crates/wasi-cloud/src/http.rs</a>. The current consensus is that Joel will spearhead the effort to get wasmtime-wasi-http running on top of streams - we are expecting this to more or less amount to a rewrite as he ports his work from the spin repo into this crate. His upstream work also contains a (related, but again a little bit different) implementation of the server piece of this puzzle.</p>\n<p>So, I think at this point we have to set this PR aside.</p>\n</blockquote>",
        "id": 369813487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687808043
    },
    {
        "content": "<p>brendandburns <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#issuecomment-1707433789\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">issue #6091</a>:</p>\n<blockquote>\n<p>Closing as obsolete.</p>\n</blockquote>",
        "id": 389300204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693956204
    }
]