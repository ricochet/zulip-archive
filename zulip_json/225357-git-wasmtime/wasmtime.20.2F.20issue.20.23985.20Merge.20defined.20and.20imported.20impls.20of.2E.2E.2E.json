[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/985#issuecomment-867867269\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/985\">issue #985</a>:</p>\n<blockquote>\n<p>Fixed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3023\">https://github.com/bytecodealliance/wasmtime/pull/3023</a></p>\n</blockquote>",
        "id": 243828458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624559897
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/985\">issue #985</a>:</p>\n<blockquote>\n<p>We have two copies of all of our runtime functions that implement memory-related instructions (eg <code>memory.size</code>, <code>memory.grow</code>, <code>memory.init</code>, and <code>memory.copy</code>):</p>\n<ol>\n<li>A version for locally defined memories</li>\n<li>A version for imported memories</li>\n</ol>\n<p>Having two different impls isn't a speed win because the tiny bit of specialization is definitely dwarfed by the cost of an indirect library function call.</p>\n<p>We just don't currently have a nice way to get a memory regardless if it is imported or locally defined given a <code>MemoryIndex</code>. That is easy enough to do, we have <code>Instance::get_table</code> that does exactly this for tables rather than memories, and we can do a similar thing for memories.</p>\n</blockquote>",
        "id": 243828459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624559897
    }
]