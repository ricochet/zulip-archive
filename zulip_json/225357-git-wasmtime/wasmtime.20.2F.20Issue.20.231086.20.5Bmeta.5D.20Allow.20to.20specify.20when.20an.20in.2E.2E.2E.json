[
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1086#issuecomment-789058845\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1086\">Issue #1086</a>:</p>\n<blockquote>\n<p>Not needed anymore thanks to the New Backend and its load folding mecanism, closing.</p>\n</blockquote>",
        "id": 228445029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614704489
    },
    {
        "content": "<p>bnjbvr closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1086\">Issue #1086</a>:</p>\n<blockquote>\n<p>Cranelift instructions sometimes have a variant taking an immediate as one operand (e.g. <code>icmp</code> has <code>icmp_imm</code>) or a complex operand (that is, register + shifted register + offset, if I'm not mistaken; see for instance <code>load</code> which has the <code>load_complex</code> variant). These instructions are defined manually, and the <code>simple_preopt</code> pass contains a manual replacement of the normal variant by the immediate variant, for some given functions.</p>\n<p>I'd like to implement helpers in the meta-language to signal that a given instruction also has an immediate variant, or a complex one. This would automatically create the new Cranelift instructions with the suffixes, so they're just plain instructions from codegen's point of view. This should allow us to have many more complex encodings (nice for performance), but also more immediate encodings (both would be great to lower register pressure), and hopefully we can have automatically generated code to replace a given instruction by its immediate (as done in simple_preopt) or its complex (as done in postopt) counterpart.</p>\n</blockquote>",
        "id": 228445031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614704489
    },
    {
        "content": "<p>bnjbvr unassigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1086\">Issue #1086</a>:</p>\n<blockquote>\n<p>Cranelift instructions sometimes have a variant taking an immediate as one operand (e.g. <code>icmp</code> has <code>icmp_imm</code>) or a complex operand (that is, register + shifted register + offset, if I'm not mistaken; see for instance <code>load</code> which has the <code>load_complex</code> variant). These instructions are defined manually, and the <code>simple_preopt</code> pass contains a manual replacement of the normal variant by the immediate variant, for some given functions.</p>\n<p>I'd like to implement helpers in the meta-language to signal that a given instruction also has an immediate variant, or a complex one. This would automatically create the new Cranelift instructions with the suffixes, so they're just plain instructions from codegen's point of view. This should allow us to have many more complex encodings (nice for performance), but also more immediate encodings (both would be great to lower register pressure), and hopefully we can have automatically generated code to replace a given instruction by its immediate (as done in simple_preopt) or its complex (as done in postopt) counterpart.</p>\n</blockquote>",
        "id": 228445041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1614704495
    }
]