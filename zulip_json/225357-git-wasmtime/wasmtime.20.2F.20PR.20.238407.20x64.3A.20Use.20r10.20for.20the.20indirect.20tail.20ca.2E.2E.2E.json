[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a> from <code>elliottt:trevor/x64-fixed-return-call-ind-dest</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Use <code>r10</code> for the destination of indirect return calls, and indirect calls using the winch calling convention, as it is a caller-saved register.</p>\n<p>For tail calls, this ensures that we won't accidentally pick a callee-saved register for the destination, clobbering it when we restore callee-saves in the call to <code>emit_return_call_common_sequence</code>.</p>\n<p>For winch calls, using <code>r10</code> instead of <code>r15</code> means that it's still possible to use the pinned register in combination with winch.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 434256734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713484701
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>.</p>",
        "id": 434256735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713484701
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>.</p>",
        "id": 434256736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713484701
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>.</p>",
        "id": 434256781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713484744
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>.</p>",
        "id": 434256782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713484744
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#discussion_r1571536676\">PR review comment</a>:</p>\n<blockquote>\n<p>I think that we could switch back to always using <code>r11</code> for the temp, as this change means we'll no longer accidentally pick <code>r11</code> for the destination.</p>\n</blockquote>",
        "id": 434256920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713484831
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#pullrequestreview-2010151322\">PR review</a>.</p>",
        "id": 434256921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713484831
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#pullrequestreview-2010298625\">PR review</a>:</p>\n<blockquote>\n<p>I think there are a couple of x86-specific challenges we still need to work through here.</p>\n</blockquote>",
        "id": 434262055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713488373
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#pullrequestreview-2010298625\">PR review</a>:</p>\n<blockquote>\n<p>I think there are a couple of x86-specific challenges we still need to work through here.</p>\n</blockquote>",
        "id": 434262056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713488373
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#discussion_r1571573815\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think the <code>RegMem::Mem</code> case is safe here, because any registers in the address mode could themselves be callee-saved. We might need to require that <code>ReturnCallUnknown</code> is used only with a register, never a memory operand, unlike <code>CallUnknown</code>.</p>\n<p>As for using <code>r11</code> for the temporary register, I think we actually must do that. In general I'd rather let RA2 choose the temporary, but it's used after callee-saved registers are restored, so as it stands now we could clobber something we're supposed to have preserved.</p>\n</blockquote>",
        "id": 434262057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713488373
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#pullrequestreview-2010350124\">PR review</a>.</p>",
        "id": 434264300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713489905
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#discussion_r1571603255\">PR review comment</a>:</p>\n<blockquote>\n<p>I was wondering about this, especially since it's not clear to me why this is a <code>RegMem</code> and not a plain old <code>Reg</code>.</p>\n</blockquote>",
        "id": 434264302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713489906
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#discussion_r1571603255\">PR review comment</a>.</p>",
        "id": 434264658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713490169
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>.</p>",
        "id": 434264677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713490189
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>.</p>",
        "id": 434265178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713490556
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#pullrequestreview-2010361194\">PR review</a>.</p>",
        "id": 434265252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713490594
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#discussion_r1571613928\">PR review comment</a>:</p>\n<blockquote>\n<p>Actually, switching it to accepting a <code>Reg</code> was really easy, and the only place we construct this instruction we were always providing a register that we turned into a <code>RegMem</code> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 434265254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713490594
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>:</p>\n<blockquote>\n<p>Use <code>r10</code> for the destination of indirect return calls, and indirect calls using the winch calling convention, as it is a caller-saved register. Additionally, always use <code>r11</code> for the temporary that's used for moving the return address in <code>emit_return_call_common_sequence</code>, as it's also a caller-saved register.</p>\n<p>For tail calls, this ensures that we won't accidentally pick a callee-saved register for the destination, clobbering it when we restore callee-saves in the call to <code>emit_return_call_common_sequence</code>.</p>\n<p>For winch calls, using <code>r10</code> instead of <code>r15</code> means that it's still possible to use the pinned register in combination with winch.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 434265400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713490691
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>:</p>\n<blockquote>\n<p>Use <code>r10</code> for the destination of indirect return calls, and indirect calls using the winch calling convention, as it is a caller-saved register. Additionally, always use <code>r11</code> for the temporary that's used for moving the return address in <code>emit_return_call_common_sequence</code>, as it's also a caller-saved register.</p>\n<p>For tail calls, this ensures that we won't accidentally pick a callee-saved register for the destination or temporary, clobbering it when we restore callee-saves in the call to <code>emit_return_call_common_sequence</code>.</p>\n<p>For winch calls, using <code>r10</code> instead of <code>r15</code> means that it's still possible to use the pinned register in combination with winch.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 434265471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713490771
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#pullrequestreview-2010369961\">PR review</a>.</p>",
        "id": 434265887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713491081
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#discussion_r1571621703\">PR review comment</a>:</p>\n<blockquote>\n<p>In general it makes sense to me to allow an indirect call on x86 to sink a load, if that's where the callee came from.</p>\n<p>We could even hit this case from Wasmtime, where an indirect call through a table gets the callee function pointer by loading it out of a struct in memory. (I think load sinking currently fails there because there's another load in between; we might be able to micro-optimize this for x86 by swapping the two loads.)</p>\n<p>However, I think that's a code-size optimization we just can't safely support for tail calls.</p>\n</blockquote>",
        "id": 434265888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713491081
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#pullrequestreview-2010380429\">PR review</a>:</p>\n<blockquote>\n<p>I believe this is correct, though again I hope @cfallin will look at it later.</p>\n<p>I'm also noticing that our tail-call sequence, when we move the return address, is not a valid epilogue according to the Windows unwinding rules. That is probably not an issue since nothing should trigger unwinding there, but it's worth keeping in mind.</p>\n</blockquote>",
        "id": 434266985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713491937
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>.</p>",
        "id": 434392506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713542589
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407#issuecomment-2070783024\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8407\">PR #8407</a>:</p>\n<blockquote>\n<p>Likewise to the aarch64 PR, this looks right to me, and for the same reasons -- as you note in the comments, r10 is caller-saved (volatile) and it's also not used for an arg, so we're good to go!</p>\n</blockquote>",
        "id": 434831210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713814563
    }
]