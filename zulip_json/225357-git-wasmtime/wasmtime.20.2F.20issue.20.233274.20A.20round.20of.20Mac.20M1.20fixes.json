[
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-911359651\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<p>Seems that CI is running <code>cargo check</code> for 1.43 with a comment (from last year) stating it's necessary for Firefox, however Firefox has been updated to use 1.54 according to <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1723016\">https://bugzilla.mozilla.org/show_bug.cgi?id=1723016</a>. Can we remove this requirement now? (Of course can tweak the code to not use _or_ patterns.)</p>\n</blockquote>",
        "id": 251680461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630570447
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-913602258\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<p>@alexcrichton @bnjbvr I have just seen this:</p>\n<blockquote>\n<p>The pushes in wasmtime_fiber_switch start with <code>stp lr, fp, [sp, -16]!</code>, so FP was at CFA - 0x8, not CFA - 0x60. Unclear why it did work in the first place, and why it stopped working at some point; likely that something in Apple's libunwind has changed in the meanwhile.</p>\n</blockquote>\n<p>Is there any specific reason to push the registers in that order? The Procedure Call Standard actually <a href=\"https://github.com/ARM-software/abi-aa/blob/2021Q1/aapcs64/aapcs64.rst#the-frame-pointer\">specifies</a> the reverse:</p>\n<blockquote>\n<p>The lowest addressed double-word shall point to the previous frame record and the highest addressed double-word shall contain the value passed in LR on entry to the current function.</p>\n</blockquote>\n</blockquote>",
        "id": 252166663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630930541
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-913607477\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<blockquote>\n<p>Is there any specific reason to push the registers in that order? The Procedure Call Standard actually specifies the reverse:</p>\n</blockquote>\n<p>No, no particular reasons. One could easily get confused with the push order in <code>stp</code>...</p>\n</blockquote>",
        "id": 252167553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630931029
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-914231602\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<p>Perhaps that is the cause of the issue with libunwind? I.e. maybe the unwinder has been changed to have stricter frame record layout expectations?</p>\n</blockquote>",
        "id": 252290546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631014873
    },
    {
        "content": "<p>akirilov-arm edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-914231602\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<p>Perhaps that is partially the cause of the issue with libunwind? I.e. maybe the unwinder has been changed to have stricter frame record layout expectations in thee presence of incorrect CFI information?</p>\n</blockquote>",
        "id": 252290722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631014986
    },
    {
        "content": "<p>akirilov-arm edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-914231602\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<p>Perhaps that is partially the cause of the issue with libunwind? I.e. maybe the unwinder has been changed to have stricter frame record layout expectations (in the presence of incorrect CFI information)?</p>\n</blockquote>",
        "id": 252290751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631015007
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-914234243\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<blockquote>\n<p>Perhaps that is partially the cause of the issue with libunwind? I.e. maybe the unwinder has been changed to have stricter frame record layout expectations (in the presence of incorrect CFI information)?</p>\n</blockquote>\n<p>No: the change in this PR was sufficient to make the test pass, and it wouldn't have been the case if the unwinder had very precise frame record layout expectations. That being said, I'm all in favor of using the most conforming push order :-)</p>\n</blockquote>",
        "id": 252291027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631015156
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274#issuecomment-915285410\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3274\">issue #3274</a>:</p>\n<blockquote>\n<p>Nah there is no reason to push the registers in that order, only that I'd never written arm64 assembly before when I wrote this. I think it would be best to follow arm64 conventions and standards though!</p>\n</blockquote>",
        "id": 252468573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631111031
    }
]