[
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7525\">PR #7525</a>.</p>",
        "id": 401427469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699644117
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7525\">PR #7525</a>.</p>",
        "id": 401427470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699644117
    },
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7525\">PR #7525</a> from <code>saulecabrera:br_table_fuzzbug</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This patch fixes how jumps are handled in <code>br_table</code>; prior to this change, <code>br_table</code> was implemented using<br>\n<code>CodeGenContext::unconditional_jump</code>; this function ensures, among other invariants that the value stack and stack pointer must be balanced according to the expectation of the target branch. Even though in <code>br_table</code> there's branch to a potentially known location, it's impossible be certain at compile time, which branch will be taken; in that regard, <code>br_table</code> behaves more like <code>br_if</code>. Using <code>unconditional_jump</code> resulted in the stack being manipulated multiple times and breaking the other existing invariants around stack balancing.</p>\n<p>This commit makes it so that <code>br_table</code> doesn't rely on <code>unconditional_jump</code> anymore and instead it delegates control flow to the target branch, which will ensure that the value stack and stack pointer are correctly balanced when restoring reachability, very similar to what happens with <code>br_if</code>.</p>\n<p>This issue was discovered while fuzzing and a file test is included with the test case.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 401427471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699644117
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7525\">PR #7525</a>.</p>",
        "id": 401430363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699645904
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7525#pullrequestreview-1725626310\">PR review</a>.</p>",
        "id": 401437062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699649984
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7525\">PR #7525</a>.</p>",
        "id": 401440727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699652718
    }
]