[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>The x64 backend has a helper named <code>emit_cmp</code> in  <code>inst.isle</code> that is used when emitting comparisons. Currently it will always use <code>x64_cmp</code> to emit the comparison, but for cases of equality comparisons with <code>0</code>, <code>x64_test</code> would be a better choice. Additionally, the <code>select</code> lowering does not use <code>emit_cmp</code> right now, and could be refactored to do so with this change in place.</p>\n<h4>Benefit</h4>\n<p>This will generate better code for cases where <code>emit_cmp</code> is used to compile a use of <code>icmp</code> in the x64 backend.<br>\n</p>\n</blockquote>",
        "id": 329798113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677179217
    },
    {
        "content": "<p>elliottt labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>The x64 backend has a helper named <code>emit_cmp</code> in  <code>inst.isle</code> that is used when emitting comparisons. Currently it will always use <code>x64_cmp</code> to emit the comparison, but for cases of equality comparisons with <code>0</code>, <code>x64_test</code> would be a better choice. Additionally, the <code>select</code> lowering does not use <code>emit_cmp</code> right now, and could be refactored to do so with this change in place.</p>\n<h4>Benefit</h4>\n<p>This will generate better code for cases where <code>emit_cmp</code> is used to compile a use of <code>icmp</code> in the x64 backend.<br>\n</p>\n</blockquote>",
        "id": 329798115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677179217
    },
    {
        "content": "<p>elliottt labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>The x64 backend has a helper named <code>emit_cmp</code> in  <code>inst.isle</code> that is used when emitting comparisons. Currently it will always use <code>x64_cmp</code> to emit the comparison, but for cases of equality comparisons with <code>0</code>, <code>x64_test</code> would be a better choice. Additionally, the <code>select</code> lowering does not use <code>emit_cmp</code> right now, and could be refactored to do so with this change in place.</p>\n<h4>Benefit</h4>\n<p>This will generate better code for cases where <code>emit_cmp</code> is used to compile a use of <code>icmp</code> in the x64 backend.<br>\n</p>\n</blockquote>",
        "id": 329798116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677179218
    },
    {
        "content": "<p>elliottt labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>The x64 backend has a helper named <code>emit_cmp</code> in  <code>inst.isle</code> that is used when emitting comparisons. Currently it will always use <code>x64_cmp</code> to emit the comparison, but for cases of equality comparisons with <code>0</code>, <code>x64_test</code> would be a better choice. Additionally, the <code>select</code> lowering does not use <code>emit_cmp</code> right now, and could be refactored to do so with this change in place.</p>\n<h4>Benefit</h4>\n<p>This will generate better code for cases where <code>emit_cmp</code> is used to compile a use of <code>icmp</code> in the x64 backend.<br>\n</p>\n</blockquote>",
        "id": 329798118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677179218
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869#issuecomment-1511633918\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<p>The first part of this issue (using <code>test</code> for comparisons with 0) was finished in #6086, but there's still work to do with simplifying the lowering for Cranelift's <code>select</code> instruction on x86.</p>\n</blockquote>",
        "id": 350556512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681746652
    },
    {
        "content": "<p>Solo-steven <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869#issuecomment-1773756510\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<p>Hi @jameysharp  I am interested in this issue, I am a beginner to both compiler backend and isle, so I would like to discuss my solution there before I open PR ~</p>\n<p>I think the second part of the issue can be solved by adding a helper for lowering select inst. </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">lower_select_icmp</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">IcmpCondResult</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">InstOutput</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower_select_icmp</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">IcmpCondResult</span><span class=\"p\">.</span><span class=\"n\">Condition</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"w\"> </span><span class=\"n\">cc</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">with_flags</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">cmove_from_values</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">cc</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>I think we can change the existing rule to use the helper above, form existed code </p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/ed68661976554b8ea967d7d3ca2f2e0741323aad/cranelift/codegen/src/isa/x64/lower.isle#L2084\">https://github.com/bytecodealliance/wasmtime/blob/ed68661976554b8ea967d7d3ca2f2e0741323aad/cranelift/codegen/src/isa/x64/lower.isle#L2084</a></p>\n<p>to use helper above :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">has_type</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">maybe_uextend</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">cc</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">value_type</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fits_in_64</span><span class=\"w\"> </span><span class=\"n\">a_ty</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">lower_select_icmp</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">emit_cmp</span><span class=\"w\"> </span><span class=\"n\">cc</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))</span>\n</code></pre></div>\n</blockquote>",
        "id": 397839790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697886218
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869#issuecomment-1775602109\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<p>@Solo-steven your refactor looks reasonable -- we'd be happy to review a PR with this. Thanks!</p>\n</blockquote>",
        "id": 398123176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698079596
    },
    {
        "content": "<p>sudoHackIn <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869#issuecomment-2342071246\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<p>Hi, @cfallin is this issue still actual or should be closed after Solo-steven's pr is merged?</p>\n</blockquote>",
        "id": 469220857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726005094
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869#issuecomment-2342076048\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5869\">issue #5869</a>:</p>\n<blockquote>\n<p>@sudoHackIn the PR above addresed the second bit (<code>select</code> using the helper) but not the first (using <code>test</code> rather than <code>cmp</code>), so this issue should remain open, I think.</p>\n</blockquote>",
        "id": 469221403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726005318
    }
]