[
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>.</p>",
        "id": 425418705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856031
    },
    {
        "content": "<p><strong>pchickey</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a> as ready for review.</p>",
        "id": 425419412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856334
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>.</p>",
        "id": 425419413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856334
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>.</p>",
        "id": 425419415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856335
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>.</p>",
        "id": 425420174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856764
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>:</p>\n<blockquote>\n<p>This PR adds wasmtime_wasi::WasiP1Ctx, which is a WasiCtx for just using WASI P1 (and P0).</p>\n<p>This simplifies user experience for users migrating from wasi-common's P1 support - it means they dont have to know about the View traits or the WasiPreview1Adapter.</p>\n<p>The p1/p0 add_to_linker functions now take a closure that is the lens for the T in Store&lt;T&gt;, to be consistent with wasi-common and in general what wasmtime::Linker users expect.</p>\n<p>WasiCtxBuilder now has a convenient function <code>build_p1(&amp;mut self) -&gt; WasiP1Ctx</code> that can be used in the place of <code>build(&amp;mut self) -&gt; WasiCtx</code> for users targeting a P1 embedding.</p>\n<p>This PR also adds two trivial methods to WasiCtxBuilder to reflect ones that existed in wasi-common;s: <code>inherit_env</code> and <code>inherit_args</code>.</p>\n<p>Finally, this PR adds <code>AsyncStdinStream</code> and <code>AsyncStdoutStream</code> as wrappers on <code>AsyncReadStream</code> and <code>AsyncWriteStream</code> to provide implementations of <code>StdinStream</code> and <code>StdoutStream</code>. (This could be separated into a totally different PR, but it doesnt seem worth the e-paperwork overhead to bother.) These provide parity with the wasi-common affordances for piping stdio to/from files, which happen to be used in the c-api.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 425420177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856767
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>:</p>\n<blockquote>\n<p>This PR adds <code>wasmtime_wasi::WasiP1Ctx</code>, which is a <code>WasiCtx</code> for just using WASI P1 (and P0).</p>\n<p>This simplifies user experience for users migrating from wasi-common's P1 support - it means they dont have to know about the <code>*View</code> traits or the <code>WasiPreview1Adapter</code>, which are just implementation details to a P1 embedder.</p>\n<p>The p1/p0 add_to_linker functions now take a closure that is the lens for the T in Store&lt;T&gt;, to be consistent with wasi-common and in general what wasmtime::Linker users expect.</p>\n<p>WasiCtxBuilder now has a convenient function <code>build_p1(&amp;mut self) -&gt; WasiP1Ctx</code> that can be used in the place of <code>build(&amp;mut self) -&gt; WasiCtx</code> for users targeting a P1 embedding.</p>\n<p>This PR also adds two trivial methods to WasiCtxBuilder to reflect ones that existed in wasi-common;s: <code>inherit_env</code> and <code>inherit_args</code>.</p>\n<p>Finally, this PR adds <code>AsyncStdinStream</code> and <code>AsyncStdoutStream</code> as wrappers on <code>AsyncReadStream</code> and <code>AsyncWriteStream</code> to provide implementations of <code>StdinStream</code> and <code>StdoutStream</code>. (This could be separated into a totally different PR, but it doesnt seem worth the e-paperwork overhead to bother.) These provide parity with the wasi-common affordances for piping stdio to/from files, which happen to be used in the c-api.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 425420244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856804
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>:</p>\n<blockquote>\n<p>This PR adds <code>wasmtime_wasi::WasiP1Ctx</code>, which is a <code>WasiCtx</code> for just using WASI P1 (and P0).</p>\n<p>This simplifies user experience for users migrating from wasi-common's P1 support - it means they don't have to know about the <code>*View</code> traits or the <code>WasiPreview1Adapter</code>, which are just implementation details to a P1 embedder.</p>\n<p>The p1/p0 add_to_linker functions now take a closure that is the lens for the T in Store&lt;T&gt;, to be consistent with wasi-common and in general what wasmtime::Linker users expect.</p>\n<p>WasiCtxBuilder now has a convenient function <code>build_p1(&amp;mut self) -&gt; WasiP1Ctx</code> that can be used in the place of <code>build(&amp;mut self) -&gt; WasiCtx</code> for users targeting a P1 embedding.</p>\n<p>This PR also adds two trivial methods to WasiCtxBuilder to reflect ones that existed in wasi-common;s: <code>inherit_env</code> and <code>inherit_args</code>.</p>\n<p>Finally, this PR adds <code>AsyncStdinStream</code> and <code>AsyncStdoutStream</code> as wrappers on <code>AsyncReadStream</code> and <code>AsyncWriteStream</code> to provide implementations of <code>StdinStream</code> and <code>StdoutStream</code>. (This could be separated into a totally different PR, but it doesnt seem worth the e-paperwork overhead to bother.) These provide parity with the wasi-common affordances for piping stdio to/from files, which happen to be used in the c-api.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 425420263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856815
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>:</p>\n<blockquote>\n<p>This PR adds <code>wasmtime_wasi::WasiP1Ctx</code>, which is a <code>WasiCtx</code> for just using WASI P1 (and P0).</p>\n<p>This simplifies user experience for users migrating from wasi-common's P1 support - it means they don't have to know about the <code>*View</code> traits or the <code>WasiPreview1Adapter</code>, which are just implementation details to a P1 embedder.</p>\n<p>The p1/p0 <code>add_to_linker_{a?}sync</code> functions now take a closure that is the lens for the T in Store&lt;T&gt;, to be consistent with wasi-common and in general what <code>wasmtime::Linker</code> users expect.</p>\n<p>WasiCtxBuilder now has a convenient function <code>build_p1(&amp;mut self) -&gt; WasiP1Ctx</code> that can be used in the place of <code>build(&amp;mut self) -&gt; WasiCtx</code> for users targeting a P1 embedding.</p>\n<p>This PR also adds two trivial methods to WasiCtxBuilder to reflect ones that existed in wasi-common;s: <code>inherit_env</code> and <code>inherit_args</code>.</p>\n<p>Finally, this PR adds <code>AsyncStdinStream</code> and <code>AsyncStdoutStream</code> as wrappers on <code>AsyncReadStream</code> and <code>AsyncWriteStream</code> to provide implementations of <code>StdinStream</code> and <code>StdoutStream</code>. (This could be separated into a totally different PR, but it doesnt seem worth the e-paperwork overhead to bother.) These provide parity with the wasi-common affordances for piping stdio to/from files, which happen to be used in the c-api.</p>\n<p>The top-level tests and examples that were using <code>wasi-common</code> are updated to use <code>wasmtime-wasi::WasiP1Ctx</code>.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 425420432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709856896
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053#pullrequestreview-1923809455\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n</blockquote>",
        "id": 425420669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709857021
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053#issuecomment-1984825693\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>:</p>\n<blockquote>\n<p>This PR should be backported to the release-19.0.0 branch</p>\n</blockquote>",
        "id": 425420743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709857073
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8053\">PR #8053</a>.</p>",
        "id": 425425474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709859995
    }
]