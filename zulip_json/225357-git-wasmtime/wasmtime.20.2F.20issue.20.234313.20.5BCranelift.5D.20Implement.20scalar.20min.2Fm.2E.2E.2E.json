[
    {
        "content": "<p>sparker-arm opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>The CLIF operators: umin, smin, imin and imax all support scalars, as well as vectors, but AArch64 currently only implements support for vectors. The backend will panic given the scalar versions.</p>\n</blockquote>",
        "id": 287332217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656078218
    },
    {
        "content": "<p>sparker-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>The CLIF operators: umin, smin, imin and imax all support scalars, as well as vectors, but AArch64 currently only implements support for vectors. The backend will panic given the scalar versions.</p>\n</blockquote>",
        "id": 287332218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656078218
    },
    {
        "content": "<p>sparker-arm closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>The CLIF operators: umin, smin, imin and imax all support scalars, as well as vectors, but AArch64 currently only implements support for vectors. The backend will panic given the scalar versions.</p>\n</blockquote>",
        "id": 287341976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656082758
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313#issuecomment-1289031621\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>Hey, I just hit this with the fuzzer, Is there a reason as to why this is not planned?</p>\n</blockquote>",
        "id": 305818334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666617911
    },
    {
        "content": "<p>sparker-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313#issuecomment-1289040118\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>Oh... I don't remember closing this! Considering it happened on the same day, I'm assuming I did so by accident.</p>\n</blockquote>",
        "id": 305819436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666618256
    },
    {
        "content": "<p>sparker-arm reopened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>The CLIF operators: umin, smin, imin and imax all support scalars, as well as vectors, but AArch64 currently only implements support for vectors. The backend will panic given the scalar versions.</p>\n</blockquote>",
        "id": 305819438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666618256
    },
    {
        "content": "<p>sparker-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313#issuecomment-1289061816\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>Another realistic option, is that is a duplicate of another issue and I've just failed to link it.</p>\n</blockquote>",
        "id": 305822952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666619169
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313#issuecomment-1448512303\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>Fuzzgen just rediscovered this issue again on this CLIF input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">speed_and_size</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i128</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v83</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v83</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v83</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v80</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v80</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v80</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v40</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">slt</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v58</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"n\">v40</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"w\">    </span><span class=\"n\">v84</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v84</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v84</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v86</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v62</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v86</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v86</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">brif</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"n\">block1</span><span class=\"w\"> </span><span class=\"n\">cold</span>:\n    <span class=\"nc\">brif</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v58</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v17</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v18</span>: <span class=\"kt\">i128</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">cold</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v62</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This is due to the rules added in #5546</p>\n</blockquote>",
        "id": 338637679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677602936
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313#issuecomment-1448512303\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4313\">issue #4313</a>:</p>\n<blockquote>\n<p>Fuzzgen just rediscovered this issue (for i128's) again on this CLIF input:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">opt_level</span><span class=\"o\">=</span><span class=\"n\">speed_and_size</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">a</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i128</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v83</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v83</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v83</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v80</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v80</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v80</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v40</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">slt</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v58</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"n\">v40</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"w\">    </span><span class=\"n\">v84</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v84</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v84</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v86</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">v62</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i128</span><span class=\"w\"> </span><span class=\"n\">v86</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v86</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"w\">    </span><span class=\"n\">brif</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"n\">block1</span><span class=\"w\"> </span><span class=\"n\">cold</span>:\n    <span class=\"nc\">brif</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v58</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v17</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v18</span>: <span class=\"kt\">i128</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">cold</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v62</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This is due to the rules added in #5546</p>\n</blockquote>",
        "id": 338641835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677603874
    }
]