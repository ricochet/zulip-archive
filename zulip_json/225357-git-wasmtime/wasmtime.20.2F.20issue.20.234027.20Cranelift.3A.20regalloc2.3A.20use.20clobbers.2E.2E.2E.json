[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4027\">issue #4027</a>:</p>\n<blockquote>\n<p>The initial switchover to regalloc2 retains the mechanism by which calls signal clobbered physical registers, namely, via phantom defs (defs that are immediately dead and are constrained to those regs). regalloc2 has an explicit mechanism for clobbers which is a bit more precise and possibly ever-so-slightly faster (skips liveness analysis); we should use that instead. No functional correctness implications either way.</p>\n</blockquote>",
        "id": 278909715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649897176
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4027\">issue #4027</a>:</p>\n<blockquote>\n<p>The initial switchover to regalloc2 retains the mechanism by which calls signal clobbered physical registers, namely, via phantom defs (defs that are immediately dead and are constrained to those regs). regalloc2 has an explicit mechanism for clobbers which is a bit more precise and possibly ever-so-slightly faster (skips liveness analysis); we should use that instead. No functional correctness implications either way.</p>\n</blockquote>",
        "id": 281810233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652182409
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4027\">issue #4027</a>:</p>\n<blockquote>\n<p>The initial switchover to regalloc2 retains the mechanism by which calls signal clobbered physical registers, namely, via phantom defs (defs that are immediately dead and are constrained to those regs). regalloc2 has an explicit mechanism for clobbers which is a bit more precise and possibly ever-so-slightly faster (skips liveness analysis); we should use that instead. No functional correctness implications either way.</p>\n</blockquote>",
        "id": 281810234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652182410
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4027\">issue #4027</a>:</p>\n<blockquote>\n<p>The initial switchover to regalloc2 retains the mechanism by which calls signal clobbered physical registers, namely, via phantom defs (defs that are immediately dead and are constrained to those regs). regalloc2 has an explicit mechanism for clobbers which is a bit more precise and possibly ever-so-slightly faster (skips liveness analysis); we should use that instead. No functional correctness implications either way.</p>\n</blockquote>",
        "id": 281810236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652182410
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4027#issuecomment-1202978627\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4027\">issue #4027</a>:</p>\n<blockquote>\n<p>Cleaning up old issues: this was actually fixed in #4324.</p>\n</blockquote>",
        "id": 291736245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659458884
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4027\">issue #4027</a>:</p>\n<blockquote>\n<p>The initial switchover to regalloc2 retains the mechanism by which calls signal clobbered physical registers, namely, via phantom defs (defs that are immediately dead and are constrained to those regs). regalloc2 has an explicit mechanism for clobbers which is a bit more precise and possibly ever-so-slightly faster (skips liveness analysis); we should use that instead. No functional correctness implications either way.</p>\n</blockquote>",
        "id": 291736246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659458884
    }
]