[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217209266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605740903
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a>.</p>",
        "id": 217209267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605740903
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217209285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605740931
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate <code>wiggle-borrow</code> at <code>wiggle/borrow</code>. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217210617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605741961
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-534687569\">PR Review</a>.</p>",
        "id": 217304177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605807384
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527072178\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This looks like it's probably the same as <code>as_slice_mut</code> (for the most part), so could some of the internal bits be refactored into a helper called from both functions?</p>\n</blockquote>",
        "id": 217304178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605807384
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-534687569\">PR Review</a>.</p>",
        "id": 217304179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605807384
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527071303\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Perhaps eliding the <code>!</code> and switching to <code>any</code>?</p>\n</blockquote>",
        "id": 217304181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605807384
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527072366\">PR Review Comment</a>:</p>\n<blockquote>\n<p>(same thoughts as above for slices)</p>\n</blockquote>",
        "id": 217304182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605807384
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527072791\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We technically statically know whether this is a shared or mutable borrow, so could there be two unborrow methods instead of one that checks both maps?</p>\n</blockquote>",
        "id": 217304183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605807384
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527073121\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW this is excluded from publication so it's fine to avoid bumping the version here.</p>\n</blockquote>",
        "id": 217304184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605807384
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-534718901\">PR Review</a>.</p>",
        "id": 217310322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605810261
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527095582\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The comments for <code>mut_borrow</code> can now refer to <code>GuestSliceMut</code> and <code>GuestStrMut</code>. And this comment can be adapted for <code>immut_borrow</code> below to refer to <code>GuestSlice</code> and <code>GuestStr</code>, <code>&amp;</code> access, and to drop the \"at most one\" language.</p>\n</blockquote>",
        "id": 217310323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605810262
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527100149\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This <code>unsafe</code> could use a coment similar to above; <code>SAFETY: iff there are no overlapping borrows it is ok to construct a &amp;mut str</code>.</p>\n</blockquote>",
        "id": 217310324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605810262
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527099310\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Should this say \"no overlapping <em>mut</em> borrows it is ok to construct a <em>&amp;str</em>`?</p>\n</blockquote>",
        "id": 217310325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605810262
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-534718901\">PR Review</a>.</p>",
        "id": 217310327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605810262
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate <code>wiggle-borrow</code> at <code>wiggle/borrow</code>. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217344854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605828581
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527331425\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> This is a helpful change for users who may want to reuse this script to install OpenVINO; not sure why the paths seem messed up in the CI (I usually use a simpler version of \"find the directory this script lives in,\" FWIW). If you want, you could use Bash variables defaults for the version, <code>${1:-\"...\"}</code>.</p>\n</blockquote>",
        "id": 217351695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605834871
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-535003814\">PR Review</a>.</p>",
        "id": 217351696,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605834871
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-535565296\">PR Review</a>.</p>",
        "id": 217421602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605888712
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527796912\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is it possible to <code>debug_assert!</code> that this did a removal?</p>\n</blockquote>",
        "id": 217421603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605888712
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-535668656\">PR Review</a>.</p>",
        "id": 217438550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605895958
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527886371\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I don't know bash very well, this is just a copypaste of what stackoverflow says to do... I'll see what went wrong in CI</p>\n</blockquote>",
        "id": 217438551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605895958
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-535668899\">PR Review</a>.</p>",
        "id": 217438592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605895981
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527886556\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 217438593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605895981
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-535669433\">PR Review</a>.</p>",
        "id": 217438677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605896029
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527886932\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Great idea</p>\n</blockquote>",
        "id": 217438679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605896029
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-535712245\">PR Review</a>.</p>",
        "id": 217446666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605899918
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527920594\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I looked into this and because of the interleaving of the mut/shared with validation theres really only opportunity to factor out the top two statements into a func, which I don't think is worth the readability hit.</p>\n</blockquote>",
        "id": 217446667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605899918
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate <code>wiggle-borrow</code> at <code>wiggle/borrow</code>. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217446955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605900048
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate <code>wiggle-borrow</code> at <code>wiggle/borrow</code>. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217447269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605900186
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#pullrequestreview-535715274\">PR Review</a>.</p>",
        "id": 217447293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605900200
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428#discussion_r527923021\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The script error was a simple typo, should be fixed now</p>\n</blockquote>",
        "id": 217447294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605900200
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate <code>wiggle-borrow</code> at <code>wiggle/borrow</code>. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217449619,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901372
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate <code>wiggle-borrow</code> at <code>wiggle/borrow</code>. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217450048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901572
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a> from <code>pch/wiggle_immut_borrows</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR renames the existing <code>GuestSlice</code> and <code>GuestStr</code> (which impl both <code>Deref</code> and <code>DerefMut</code>) to <code>GuestSliceMut</code> and <code>GuestStrMut</code>, and makes an immutable version of each called <code>GuestSlice</code> and <code>GuestStr</code>, which only impl <code>Deref</code>.</p>\n<p>The borrow checker now distinguishes between mutable and immutable borrows, allowing overlapping immutable borrows, while still requiring mutable borrows be exclusive. Tests have been updated to exercise this, and wasi-common has been ported to borrow mutable strs and slices where necessary.</p>\n<p>This also moves the borrow checker implementation, which was duplicated under <code>wiggle/wasmtime</code> and <code>wiggle/test-helpers</code> (and additionally over in Lucet), into its own crate <code>wiggle-borrow</code> at <code>wiggle/borrow</code>. Users can still choose whether to use it to <code>impl GuestMemory</code> or not, but putting it in a crate gets rid of some code duplication, which I care about now that the code actually changed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217463842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605909364
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2428\">PR #2428</a>.</p>",
        "id": 217473642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605916685
    }
]