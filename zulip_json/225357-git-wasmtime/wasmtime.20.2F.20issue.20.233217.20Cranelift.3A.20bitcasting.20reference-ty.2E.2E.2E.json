[
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<p>For the below <code>.clif</code> code Cranelift appears to pass unsolvable input to regalloc. This was previously investigated as <a href=\"https://github.com/bytecodealliance/regalloc.rs/issues/124\">an issue with regalloc</a>, but after some investigation @cfallin suggested moving it here.</p>\n<p>This has been observed to cause failures when using regalloc and the upcoming regalloc2. </p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">sig1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">sig2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">sig3</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">func_addr</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">fn1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bor_imm</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">band_imm</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v10</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn2</span><span class=\"p\">(</span><span class=\"n\">v12</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v14</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v15</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">band_imm</span><span class=\"w\"> </span><span class=\"n\">v14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v15</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v18</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v19</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v18</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v21</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn3</span><span class=\"p\">(</span><span class=\"n\">v20</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v22</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v23</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v22</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">v23</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v21</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v24</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">(</span><span class=\"n\">v16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v19</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v21</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">v24</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v25</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v9</span><span class=\"p\">(</span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v25</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ol>\n<li>Place <code>.clif</code> test case above in a file <code>fn.clif</code></li>\n<li>Run <code>cargo run -p cranelift-tools -- compile --target x86_64 -D fn.clif</code> and observe a panic.</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">vlr_env</span><span class=\"p\">[</span><span class=\"n\">cand_vlrix</span><span class=\"p\">].</span><span class=\"n\">is_ref</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">is_ref</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">zekemedley</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">regalloc</span><span class=\"o\">-</span><span class=\"mf\">0.0.31</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bt_spillslot_allocator</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">298</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Reproduction with regalloc2</h3>\n<ol>\n<li>Place <code>.clif</code> test case above in a file <code>fn.clif</code></li>\n<li>Follow the insutructions <a href=\"https://github.com/bytecodealliance/regalloc.rs/issues/124#issuecomment-871731448\">here</a> for compiling Cranelift with regalloc2.</li>\n<li>Run <code>cargo run -p cranelift-tools -- compile --target x86_64 -D fn.clif</code> and observe a panic.</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">Minimal</span><span class=\"w\"> </span><span class=\"n\">bundle</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">conflict</span><span class=\"o\">!'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">zekemedley</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">lust</span><span class=\"o\">/</span><span class=\"n\">regalloc</span><span class=\"o\">-</span><span class=\"n\">bug</span><span class=\"o\">/</span><span class=\"n\">regalloc2</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ion</span><span class=\"o\">/</span><span class=\"n\">process</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">763</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 250071819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629427674
    },
    {
        "content": "<p>cfallin labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<p>For the below <code>.clif</code> code Cranelift appears to pass unsolvable input to regalloc. This was previously investigated as <a href=\"https://github.com/bytecodealliance/regalloc.rs/issues/124\">an issue with regalloc</a>, but after some investigation @cfallin suggested moving it here.</p>\n<p>This has been observed to cause failures when using regalloc and the upcoming regalloc2. </p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">r64</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">sig1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">sig2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fn3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">colocated</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">sig3</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">func_addr</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">fn1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bor_imm</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">band_imm</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v10</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn2</span><span class=\"p\">(</span><span class=\"n\">v12</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v14</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v15</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">band_imm</span><span class=\"w\"> </span><span class=\"n\">v14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v15</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v18</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v19</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v18</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v21</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn3</span><span class=\"p\">(</span><span class=\"n\">v20</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v22</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v23</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">raw_bitcast</span><span class=\"p\">.</span><span class=\"n\">r64</span><span class=\"w\"> </span><span class=\"n\">v22</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">v23</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v21</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v24</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">(</span><span class=\"n\">v16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v19</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v21</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">v24</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v25</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v9</span><span class=\"p\">(</span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v25</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ol>\n<li>Place <code>.clif</code> test case above in a file <code>fn.clif</code></li>\n<li>Run <code>cargo run -p cranelift-tools -- compile --target x86_64 -D fn.clif</code> and observe a panic.</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">vlr_env</span><span class=\"p\">[</span><span class=\"n\">cand_vlrix</span><span class=\"p\">].</span><span class=\"n\">is_ref</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">is_ref</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">zekemedley</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">regalloc</span><span class=\"o\">-</span><span class=\"mf\">0.0.31</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">bt_spillslot_allocator</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">298</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Reproduction with regalloc2</h3>\n<ol>\n<li>Place <code>.clif</code> test case above in a file <code>fn.clif</code></li>\n<li>Follow the insutructions <a href=\"https://github.com/bytecodealliance/regalloc.rs/issues/124#issuecomment-871731448\">here</a> for compiling Cranelift with regalloc2.</li>\n<li>Run <code>cargo run -p cranelift-tools -- compile --target x86_64 -D fn.clif</code> and observe a panic.</li>\n</ol>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">Minimal</span><span class=\"w\"> </span><span class=\"n\">bundle</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">conflict</span><span class=\"o\">!'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">zekemedley</span><span class=\"o\">/</span><span class=\"n\">Desktop</span><span class=\"o\">/</span><span class=\"n\">projects</span><span class=\"o\">/</span><span class=\"n\">lust</span><span class=\"o\">/</span><span class=\"n\">regalloc</span><span class=\"o\">-</span><span class=\"n\">bug</span><span class=\"o\">/</span><span class=\"n\">regalloc2</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ion</span><span class=\"o\">/</span><span class=\"n\">process</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">763</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 250071869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629427695
    },
    {
        "content": "<p>wrbs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217#issuecomment-919502921\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<p>I ran in to this too for my  projeect which similarly used bitcasting to turn r64 &lt;-&gt; i64`. I ended up vendoring regalloc and commenting out the assert to not be there. I did not attempt to understand why this worked.</p>\n<p>It was a JIT backend to OCaml which has a precise GC which needs to know <em>every</em> root's location otherwise things will very quickly break (as I encountered many times).</p>\n<p>Thanks to implementing all of OCaml I had a very large 20-year-old test suite to check against. I also had long-running benchmarks doing <em>lots</em> of garbage collections and no odd breakages due to miscompiles.</p>\n</blockquote>",
        "id": 253321859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631652651
    },
    {
        "content": "<p>wrbs edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217#issuecomment-919502921\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<p>I ran in to this too for my  project which similarly used bitcasting to turn r64 &lt;-&gt; i64`. I ended up vendoring regalloc and commenting out the assert to not be there. I did not attempt to understand why this worked.</p>\n<p>It was a JIT backend to OCaml which has a precise GC which needs to know <em>every</em> root's location otherwise things will very quickly break (as I encountered many times).</p>\n<p>Thanks to implementing all of OCaml I had a very large 20-year-old test suite to check against. I also had long-running benchmarks doing <em>lots</em> of garbage collections and no odd breakages due to miscompiles.</p>\n</blockquote>",
        "id": 253322074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631652729
    },
    {
        "content": "<p>wrbs edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217#issuecomment-919502921\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<p>I ran in to this too for my  project which similarly used bitcasting to turn r64 &lt;-&gt; i64`. I ended up vendoring regalloc and commenting out the assert to not be there. I did not attempt to understand why this worked (or rather, I did and very quickly realised I would not have the week required to get my head around how everything worked.) When I brought it up I think I remember @cfallin saying to wait for the rewrite of regalloc which seems to have happened now?</p>\n<p>It was a JIT backend to OCaml which has a precise GC which needs to know <em>every</em> root's location otherwise things will very quickly break (as I encountered many times).</p>\n<p>Thanks to implementing all of OCaml I had a very large 20-year-old test suite to check against. I also had long-running benchmarks doing <em>lots</em> of garbage collections and no odd breakages due to miscompiles.</p>\n</blockquote>",
        "id": 253322314,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631652833
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217#issuecomment-919525427\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<blockquote>\n<p>I did not attempt to understand why this worked</p>\n</blockquote>\n<p>I am fairly certain it doesn't actually fix the problem, but instead allows a silent miscompilation where the stackmap may be missing entries.</p>\n</blockquote>",
        "id": 253326833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631654805
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217#issuecomment-919525427\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<blockquote>\n<p>I did not attempt to understand why this worked</p>\n</blockquote>\n<p>I am fairly certain it doesn't actually fix the problem, but instead allows a silent miscompilation where the stackmap may be missing entries or have erroneous entries.</p>\n</blockquote>",
        "id": 253326893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631654839
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217#issuecomment-919528115\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<p>In general, I think we should be adding support for using <code>r{32,64}</code> anywhere that <code>i{32,64}</code> can be used (e.g. in loads/stores/etc) this way we can always generate correct stack maps, and users don't have to do unsafe bitcasts that can result in missing stack map entries, as @bjorn3 points out.</p>\n</blockquote>",
        "id": 253327450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631655110
    },
    {
        "content": "<p>wrbs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217#issuecomment-923090367\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3217\">issue #3217</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I did not attempt to understand why this worked</p>\n</blockquote>\n<p>I am fairly certain it doesn't actually fix the problem, but instead allows a silent miscompilation where the stackmap may be missing entries or have erroneous entries.</p>\n</blockquote>\n<p>Actually thinking back a little bit more this checks out - there was one error I didn't track down, but only for one benchmark just after a GC run. I I suspected at the time it might have been due to this</p>\n</blockquote>",
        "id": 254078899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632155747
    }
]