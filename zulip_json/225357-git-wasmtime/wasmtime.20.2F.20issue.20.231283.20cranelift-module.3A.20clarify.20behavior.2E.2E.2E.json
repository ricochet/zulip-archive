[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283#issuecomment-1118001273\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283\">issue #1283</a>:</p>\n<blockquote>\n<p>This is an old issue referring to Lucet, which has been end-of-lifed; and it looks like the initial question had been somewhat clarified in any case. I will go ahead and close but please feel free to open new related issues as necessary.</p>\n</blockquote>",
        "id": 281230391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651704200
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283\">issue #1283</a>:</p>\n<blockquote>\n<p>While trying to update lucet to the most recent cranelift, I ran into some issues that stemmed from <a href=\"https://github.com/bytecodealliance/cranelift/issues/1209\">bytecodealliance/cranelift#1209</a> changing the semantics of what zero-initialized data did.  Previously, zero-initialized data was essentially just like normal data, except that cranelift-module took care of generating the initial vector of zeros to modify.  After that PR, zero-initialized data now had special semantics of not actually existing in the generated object, but living in <code>.bss</code> (or similar) and being zero-initialized by the runtime loader.</p>\n<p>This was an excellent change!  However, <code>lucetc</code> depended on the old behavior, in particular the application of relocations to the declared data.  I think <code>lucetc</code>'s behavior is wrong, and I intend to write up a PR for that.</p>\n<p>I don't think relocations (<code>declare_func_in_data</code>, etc.) should actually apply to zero-initialized data...but cranelift-module happily lets you declare zero-initialized data and also declare that there should be various relocations applied to said data, which I don't think is going to translate well.  (If it is supposed to translate well, faerie, at least, currently has bugs in that area.)</p>\n<p>Is that line of thinking correct, i.e. there should be some additional checks around:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f76b36f73720508caa1a50ce4cf388b42855789a/cranelift/module/src/module.rs#L646-L652\">https://github.com/bytecodealliance/wasmtime/blob/f76b36f73720508caa1a50ce4cf388b42855789a/cranelift/module/src/module.rs#L646-L652</a></p>\n<p>regarding zero-initialized data prior to handing things off to the backend?</p>\n</blockquote>",
        "id": 281230392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651704200
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283#issuecomment-1118533707\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283\">issue #1283</a>:</p>\n<blockquote>\n<p>This doesn't just affect lucet. It affects anyone trying to use <code>define_zeroinit</code> in combination with relocations. This is neither implemented correctly as using the <code>.data.rel.ro</code> section, nor as giving an error. Instead it either gives a linker error, a runtime error or silently goes wrong I think.</p>\n</blockquote>",
        "id": 281297059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651756425
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283#issuecomment-1120185756\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283\">issue #1283</a>:</p>\n<blockquote>\n<p>@cfallin could you reopen this?</p>\n</blockquote>",
        "id": 281533691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651920505
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283#issuecomment-1120224844\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283\">issue #1283</a>:</p>\n<blockquote>\n<p>Yep, sorry, re-opening!</p>\n</blockquote>",
        "id": 281544729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651935968
    },
    {
        "content": "<p>cfallin reopened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1283\">issue #1283</a>:</p>\n<blockquote>\n<p>While trying to update lucet to the most recent cranelift, I ran into some issues that stemmed from <a href=\"https://github.com/bytecodealliance/cranelift/issues/1209\">bytecodealliance/cranelift#1209</a> changing the semantics of what zero-initialized data did.  Previously, zero-initialized data was essentially just like normal data, except that cranelift-module took care of generating the initial vector of zeros to modify.  After that PR, zero-initialized data now had special semantics of not actually existing in the generated object, but living in <code>.bss</code> (or similar) and being zero-initialized by the runtime loader.</p>\n<p>This was an excellent change!  However, <code>lucetc</code> depended on the old behavior, in particular the application of relocations to the declared data.  I think <code>lucetc</code>'s behavior is wrong, and I intend to write up a PR for that.</p>\n<p>I don't think relocations (<code>declare_func_in_data</code>, etc.) should actually apply to zero-initialized data...but cranelift-module happily lets you declare zero-initialized data and also declare that there should be various relocations applied to said data, which I don't think is going to translate well.  (If it is supposed to translate well, faerie, at least, currently has bugs in that area.)</p>\n<p>Is that line of thinking correct, i.e. there should be some additional checks around:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f76b36f73720508caa1a50ce4cf388b42855789a/cranelift/module/src/module.rs#L646-L652\">https://github.com/bytecodealliance/wasmtime/blob/f76b36f73720508caa1a50ce4cf388b42855789a/cranelift/module/src/module.rs#L646-L652</a></p>\n<p>regarding zero-initialized data prior to handing things off to the backend?</p>\n</blockquote>",
        "id": 281544730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651935968
    }
]