[
    {
        "content": "<p>athei opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995\">issue #2995</a>:</p>\n<blockquote>\n<p>I don't see any possibility to de-allocate memory that was created using the <code>MemoryCreator</code> / <code>LinearMemory</code> interface. Shouldn't it be freed when the <code>Store</code> is dropped?</p>\n<p>I am asking because I implemented <code>MemoryCreator</code> in order to make use of a low level macOS feature (purgable memory). In order to do so I need to allocate the 6GB virtual space as two consecutive memory mappings. I run out of virtual space to do so pretty quickly to fit those next to each other (rust runs tests all run in the same process). Or at least  the mach kernel sees no way to fit them next to each other once enough tests where run.</p>\n</blockquote>",
        "id": 243005938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623930725
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995#issuecomment-863298545\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995\">issue #2995</a>:</p>\n<blockquote>\n<p>I believe for your type that implements <code>LinearMemory</code> if you implement <code>Drop</code> that should be a hook to deallocate memory? Nothing will get dropped until the <code>Store</code> is dropped, but otherwise we should still run the destructors of all memories when the store is dropped.</p>\n</blockquote>",
        "id": 243027666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623940821
    },
    {
        "content": "<p>athei edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995\">issue #2995</a>:</p>\n<blockquote>\n<p>I don't see any possibility to de-allocate memory that was created using the <code>MemoryCreator</code> / <code>LinearMemory</code> interface. Shouldn't it be freed when the <code>Store</code> is dropped?</p>\n<p>I am asking because I implemented <code>MemoryCreator</code> in order to make use of a low level macOS feature (purgable memory). In order to do so I need to allocate the 6GB virtual space as two consecutive memory mappings. I run out of virtual space to do so pretty quickly to fit those next to each other (rust runs tests all run in the same process). Or at least  the mach kernel sees no way to fit them next to each other once enough tests were run.</p>\n</blockquote>",
        "id": 243059674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623953337
    },
    {
        "content": "<p>athei <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995#issuecomment-863453679\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995\">issue #2995</a>:</p>\n<blockquote>\n<blockquote>\n<p>I believe for your type that implements LinearMemory if you implement Drop that should be a hook to deallocate memory? </p>\n</blockquote>\n<p>Now I feel stupid. I will test that.</p>\n</blockquote>",
        "id": 243059802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623953390
    },
    {
        "content": "<p>athei <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995#issuecomment-863771447\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995\">issue #2995</a>:</p>\n<blockquote>\n<p>Yes that did work. The <code>Drop</code> implementation is called. Thanks a lot.</p>\n</blockquote>",
        "id": 243118427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623994833
    },
    {
        "content": "<p>athei closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2995\">issue #2995</a>:</p>\n<blockquote>\n<p>I don't see any possibility to de-allocate memory that was created using the <code>MemoryCreator</code> / <code>LinearMemory</code> interface. Shouldn't it be freed when the <code>Store</code> is dropped?</p>\n<p>I am asking because I implemented <code>MemoryCreator</code> in order to make use of a low level macOS feature (purgable memory). In order to do so I need to allocate the 6GB virtual space as two consecutive memory mappings. I run out of virtual space to do so pretty quickly to fit those next to each other (rust runs tests all run in the same process). Or at least  the mach kernel sees no way to fit them next to each other once enough tests were run.</p>\n</blockquote>",
        "id": 243118428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623994833
    }
]