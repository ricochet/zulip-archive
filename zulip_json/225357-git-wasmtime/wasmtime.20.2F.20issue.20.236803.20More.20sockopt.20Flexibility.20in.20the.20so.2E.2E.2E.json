[
    {
        "content": "<p>keithmattix edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803\">issue #6803</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>üèæ Hello! For the purposes of building something service mesh-esque using wasm, more flexible SOCK_OPT functionality in the socket interface would be extremely beneficial. The big one we use in mesh world is <code>SO_ORIGINAL_DST</code>, but there are others. How would I go about passing ~arbitrary socket options to the underlying host?</p>\n<h4>Benefit</h4>\n<p>Service mesh and other networking applications can have access to more complex socket functionality on the host.</p>\n<h4>Implementation</h4>\n<p>TBD<br>\n</p>\n</blockquote>",
        "id": 381900366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691164289
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803#issuecomment-1668628382\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803\">issue #6803</a>:</p>\n<blockquote>\n<p>I'm not sure the context of this request. We have a rudimentary sockets implementation as part of WASI preview 1, but it doesn't have any spec written down nor any tests in our tree, and we aren't looking to spend any additional effort on that spec or implementation (and in fact may delete it - see <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\">https://github.com/bytecodealliance/wasmtime/issues/6370</a> - are you a user? if so, can you help contribute compatibility support?). We are planning to implement <a href=\"https://github.com/WebAssembly/wasi-sockets\">https://github.com/WebAssembly/wasi-sockets</a> very soon, which we feel is a much better spec for both users and implementors. </p>\n</blockquote>",
        "id": 382766896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691445366
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803#issuecomment-1668628382\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803\">issue #6803</a>:</p>\n<blockquote>\n<p>I'm not sure the context of this request. We have a rudimentary sockets implementation as part of WASI preview 1, but it doesn't have any spec written down nor any tests in our tree, and we aren't looking to spend any additional effort on that spec or implementation (and in fact may delete it - see <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\">https://github.com/bytecodealliance/wasmtime/issues/6370</a> - are you a user? if so, can you help contribute compatibility support?).</p>\n<p>We are planning to implement <a href=\"https://github.com/WebAssembly/wasi-sockets\">https://github.com/WebAssembly/wasi-sockets</a> very soon, which we feel is a much better spec for both users and implementors. Does that spec have the options you need? If not, lets please discuss it in that spec repo.</p>\n</blockquote>",
        "id": 382766971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691445416
    },
    {
        "content": "<p>keithmattix <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803#issuecomment-1668652980\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803\">issue #6803</a>:</p>\n<blockquote>\n<p>Ah I wasn't aware of that other repo; I still don't see the options there, so I'll create an issue in that repo</p>\n</blockquote>",
        "id": 382770405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691447054
    },
    {
        "content": "<p>keithmattix closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803\">issue #6803</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>üèæ Hello! For the purposes of building something service mesh-esque using wasm, more flexible SOCK_OPT functionality in the socket interface would be extremely beneficial. The big one we use in mesh world is <code>SO_ORIGINAL_DST</code>, but there are others. How would I go about passing ~arbitrary socket options to the underlying host?</p>\n<h4>Benefit</h4>\n<p>Service mesh and other networking applications can have access to more complex socket functionality on the host.</p>\n<h4>Implementation</h4>\n<p>TBD<br>\n</p>\n</blockquote>",
        "id": 382770409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691447057
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803#issuecomment-1668683271\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803\">issue #6803</a>:</p>\n<blockquote>\n<p>Ok. Just to confirm, you're not using any existing sockets functionality in the wasi-common preview 1 implementation, so you won't be affected if it gets deleted without a direct replacement, and instead have to adopt wasi-sockets in preview 2 instead?</p>\n</blockquote>",
        "id": 382775275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691449465
    },
    {
        "content": "<p>keithmattix <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803#issuecomment-1669861661\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6803\">issue #6803</a>:</p>\n<blockquote>\n<p>Yes! I explained more in <a href=\"https://github.com/webassembly/wasi-sockets/issues/45\">webassembly/wasi-sockets#45</a></p>\n</blockquote>",
        "id": 383002258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691509341
    }
]