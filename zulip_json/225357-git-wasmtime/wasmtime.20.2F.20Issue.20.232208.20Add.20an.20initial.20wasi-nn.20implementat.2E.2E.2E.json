[
    {
        "content": "<p>leonwanghui <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-695158375\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<p>Hi @abrown, I think it's a great idea to add neural network module in WASI and Wasmtime, and I'm also interested in expanding other inference frameworks into wasi-nn backend plugin. Could u give some guidelines to develop a new backend plugin? Thanks!</p>\n</blockquote>",
        "id": 210595293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600486727
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-696254609\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<blockquote>\n<p>Could u give some guidelines to develop a new backend plugin? Thanks!</p>\n</blockquote>\n<p>I think the process currently looks like this (at a very high level):</p>\n<ol>\n<li>create a specification (e.g. [wasi-nn]) and present it to the the WASI subgroup (see their [meetings]); you might even want to discuss the idea in the subgroup before creating the specification in case others have had similar ideas</li>\n<li>use the specification to generate a Rust trait using <code>wiggle</code> as in [witx.rs], implement the generated trait as in [impl.rs], and then create a way to link in the module [lib.rs]. You will need a way to contain the module state as well: [ctx.rs].</li>\n<li>The next part is still TBD since wasi-nn is the first attempt to add a WASI module that is not wasi-common: you probably need a way to conditionally compile the module if it is something like wasi-nn that users will want to opt in to and, once this is figured out, the Wasmtime linker should be modified in several places to include the new functionality (see an example [here]).</li>\n</ol>\n<p>[wasi-nn]: <a href=\"https://github.com/WebAssembly/wasi-nn/blob/master/phases/ephemeral/witx/wasi_ephemeral_nn.witx\">https://github.com/WebAssembly/wasi-nn/blob/master/phases/ephemeral/witx/wasi_ephemeral_nn.witx</a><br>\n[meetings]: <a href=\"https://github.com/WebAssembly/WASI/tree/master/meetings\">https://github.com/WebAssembly/WASI/tree/master/meetings</a><br>\n[witx.rs]: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-7abb5603a8f446a51587db17dac65700R6-R10\">https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-7abb5603a8f446a51587db17dac65700R6-R10</a><br>\n[impl.rs]: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-fd07edcd1266d1aaf710f2a69417536dR1\">https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-fd07edcd1266d1aaf710f2a69417536dR1</a><br>\n[lib.rs]: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-47c18b15fc3a3e243ac2c78b6015c1adR9\">https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-47c18b15fc3a3e243ac2c78b6015c1adR9</a><br>\n[ctx.rs]: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-c6a6bf4e536c9922b150db4d6591dc23R108\">https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-c6a6bf4e536c9922b150db4d6591dc23R108</a><br>\n[here]: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-8b7c97769c6a414d67e8b9a22992a91bR28-R29\">https://github.com/bytecodealliance/wasmtime/pull/2208/files#diff-8b7c97769c6a414d67e8b9a22992a91bR28-R29</a></p>\n<p>Hopefully that covers the basics but as you might guess there are details that could bear more documentation.</p>\n</blockquote>",
        "id": 210772526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600708875
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-702300863\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<p>Tagging a few people as reviewers to solicit some early feedback on this approach to adding optional WASI modules to Wasmtime.</p>\n</blockquote>",
        "id": 211948903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601575008
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-713164384\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<blockquote>\n<p>That way, wasi-nn would be in control of when it sees Wasmtime API changes. That would also avoid the 95 MB file in the Wasmtime repo. Thoughts?</p>\n</blockquote>\n<p>Belatedly, but this sounds good to me!</p>\n</blockquote>",
        "id": 213984888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603231164
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-715469844\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 214340728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603473497
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-715642895\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<p>@pchickey, @sunfishcode, @alexcrichton: I think this is ready for an official review (pending any crazy CI failures... I think I've seen the majority of them already). What you will see with the current state of this PR is two commits:</p>\n<ul>\n<li>one to add the wasi-nn module hidden behind a Cargo feature; when enabled, the <code>Linker</code> will be informed of the new function names--this is the approach we discussed in the last Wasmtime meeting</li>\n<li>another to add a script, <code>ci/run-wasi-nn-example.sh</code>, that will build and run an example using wasi-nn without any of the large test fixtures (these have been moved to a Gist and are retrieved by the script)</li>\n</ul>\n</blockquote>",
        "id": 214399901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603499386
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-716669559\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<p>Seems reasonable to me, but are you thinking we should land all the support in this repository? I may have misunderstood but it sounded like we were shooting instead for landing this as a separate repository with integration hooks provided here.</p>\n</blockquote>",
        "id": 214598585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603730029
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208#issuecomment-717504983\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2208\">Issue #2208</a>:</p>\n<blockquote>\n<p>@sunfishcode and @abrown what do y'all think of making a wasmtime-nn (or similar) repository in the bytecodealliance org to house this integration?</p>\n</blockquote>",
        "id": 214755896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603828872
    }
]