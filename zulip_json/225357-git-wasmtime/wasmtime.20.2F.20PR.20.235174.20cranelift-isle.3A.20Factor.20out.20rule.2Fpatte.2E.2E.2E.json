[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174\">PR #5174</a>.</p>",
        "id": 307437911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667354272
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174\">PR #5174</a> from <code>rule-visitor</code> to <code>main</code>:</p>\n<blockquote>\n<p>This shouldn't change behavior at all, but makes some rather tricky analysis available to other users besides the current IR.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 307437913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667354272
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174\">PR #5174</a> from <code>rule-visitor</code> to <code>main</code>.</p>",
        "id": 307601904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667416897
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174#pullrequestreview-1166068164\">PR review</a>.</p>",
        "id": 307627254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667427288
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174#discussion_r1012337926\">PR review comment</a>:</p>\n<blockquote>\n<p>Why have the <code>RuleVisitor</code> extend <code>PatternVisitor</code> but have a <code>ExprVisitor</code> associated type? Would it be reasonable to have a <code>PatternVisitor</code> associated type here instead?</p>\n<p>Having both types be associated types would I think force the interface used in <code>lower_rule</code> to be a bit more consistent -- right now the expression sequence is returned while the pattern sequence is an in/out param.</p>\n</blockquote>",
        "id": 307627255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667427288
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174#pullrequestreview-1166068164\">PR review</a>.</p>",
        "id": 307627256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667427288
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174\">PR #5174</a> from <code>rule-visitor</code> to <code>main</code>.</p>",
        "id": 307638040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667433948
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174#pullrequestreview-1166148030\">PR review</a>.</p>",
        "id": 307638447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667434224
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174#discussion_r1012397182\">PR review comment</a>:</p>\n<blockquote>\n<p>My simplest answer is \"because I needed <code>ExprVisitor</code> to be a different type from <code>RuleVisitor</code> but I didn't need <code>PatternVisitor</code> to be a different type.\" In fact for the new IR I'm building that I want to use this in, all three types are the same, because expressions are de-duplicated across <code>if-let</code>s and even across separate rules in the same term.</p>\n<p>That's a pretty weak justification though. There's certainly a nice symmetry argument for making both be associated types, and it could support more general usage. It also gives <code>RuleVisitor</code>s the opportunity to ignore patterns, like they currently could ignore expressions.</p>\n<p>But making <code>PatternVisitor</code> an associated type doesn't change <code>lower_rule</code> at all, or <code>Rule::visit</code> significantly. The fundamental reason those look weird is because visiting a pattern returns nothing, while visiting an expression returns some result. I think that distinction is inherent. <code>PatternId</code>s name the inside of a pattern, top-down, so a <code>PatternVisitor</code> can record anything it might need as it goes. <code>ExprId</code>s name the outside of an expression, bottom-up, so there's a final result that the visitor might need to do something with.</p>\n<p>It looks especially weird with the current IR because <code>PatternSequence::add_expr</code> returns ownership of an entire heap-allocated <code>ExprSequence</code>. My new IR just has to return an array index there, so I think that'll be a little less confusing.</p>\n<p>Anyway, I've implemented this because the symmetry really is nice. It makes the <code>RuleVisitor</code> trait definition noisy with <code>&lt;Self::PatternVisitor as PatternVisitor&gt;::PatternId</code> but so it goes.</p>\n</blockquote>",
        "id": 307638448,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667434224
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174\">PR #5174</a>.</p>",
        "id": 307638966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667434601
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5174\">PR #5174</a>.</p>",
        "id": 307643371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667438331
    }
]