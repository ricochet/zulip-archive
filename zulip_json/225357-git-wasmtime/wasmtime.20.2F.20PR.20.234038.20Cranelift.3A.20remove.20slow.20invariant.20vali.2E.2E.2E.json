[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4038\">PR #4038</a>.</p>",
        "id": 279055503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650006485
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4038\">PR #4038</a>.</p>",
        "id": 279055504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650006485
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4038\">PR #4038</a> from <code>machbuffer-remove-slow-validation</code> to <code>main</code>:</p>\n<blockquote>\n<p>Following the merge of regalloc2 support, this became slower because we<br>\nare stricter about the critical-edge invariant, generating a separate<br>\nedge block for every out-edge even if two or more out-edges go to the<br>\nsame successor (this is significant in cases of <code>br_table</code> with many<br>\nentries having the same target block, for example).</p>\n<p>Many of those edge blocks are empty and end up collapsed by the<br>\nMachBuffer, which leads to a large set of aliased labels.</p>\n<p>The invariant validation will dutifully iterate over all the data<br>\nstructures at every step, validating all of our conditions. But this<br>\ngets way slower in the new context, to the point that we'll probably<br>\nhave some fuzz timeouts.</p>\n<p>This was pointed out in [1] but I missed removing this in #3989. Given<br>\nthat <code>MachBuffer</code> has been around for nearly two years now, has been<br>\nfuzzed continuously with the invariant validation for that time, and<br>\nalso has a correctness proof in the comments, it's probably reasonable<br>\nto remove this high (recently increased) cost from the fuzzing-specific<br>\ncompilation configuration.</p>\n<p>[1]<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/3989#discussion_r847712263\">https://github.com/bytecodealliance/wasmtime/pull/3989#discussion_r847712263</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 279055505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650006485
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4038#pullrequestreview-943441056\">PR review</a>.</p>",
        "id": 279082747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650031438
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4038\">PR #4038</a>.</p>",
        "id": 279082786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650031443
    }
]