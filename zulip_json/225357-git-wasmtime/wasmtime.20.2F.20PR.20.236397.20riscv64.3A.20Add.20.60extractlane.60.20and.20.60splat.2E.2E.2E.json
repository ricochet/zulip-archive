[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397\">PR #6397</a> from <code>afonso360:riscv-extract-splat</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR implements both <code>extractlane</code> and <code>splat</code>. </p>\n<p><code>splat</code> is fairly simple in that we have a bunch of move instructions that by default splat the source X or F register into the vector register. These are <code>vmv.v.x</code>, <code>vfmv.v.f</code> and <code>vmv.v.i</code>, for X, F and immediate sources. The only noteworthy thing about these instructions is that they have weird encodings, and I've added two new instruction formats to deal with this. <code>vmv.v.i</code> has no source operands, only a destination register. And the other ones could maybe be encoded using the existing Imm5 instruction format it was becoming a bit weird keeping all of the variations together.</p>\n<p>For <code>extractlane</code> we have two additional move instructions <code>vfmv.f.s</code> and <code>vmv.x.s</code> these move element 0 of the source vector into the appropriate X or F register. Additionally for extracting other elements we use <code>vslidedown</code> that moves all elements of a vector down by n positions and then emit the appropriate move into the destination register.<br>\n</p>\n</blockquote>",
        "id": 358972161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684327040
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397\">PR #6397</a>.</p>",
        "id": 358972167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684327040
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397\">PR #6397</a>.</p>",
        "id": 358972171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684327040
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397\">PR #6397</a>.</p>",
        "id": 358972172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684327041
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#pullrequestreview-1430838475\">PR review</a>:</p>\n<blockquote>\n<p>Nice!</p>\n</blockquote>",
        "id": 358998972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684333684
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#pullrequestreview-1430838475\">PR review</a>:</p>\n<blockquote>\n<p>Nice!</p>\n</blockquote>",
        "id": 358998973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684333684
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196610774\">PR review comment</a>:</p>\n<blockquote>\n<p>IIRC the aarch64 backend does some trickery along these lines where it iteratively halves the size of a constant if it's splatted, which may serve as good inspiration for supporting this.</p>\n</blockquote>",
        "id": 358998975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684333685
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196609366\">PR review comment</a>:</p>\n<blockquote>\n<p>Out of curiosity, is there a particular motivation for having this helper here vs inlining it into the lowering of <code>extractlane</code>?</p>\n</blockquote>",
        "id": 358998976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684333685
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196642397\">PR review comment</a>:</p>\n<blockquote>\n<p>Mostly to avoid having two rules for float and integer in the slide down cases. <code>vslidedown</code> is generic across integer and float elements, but <code>vmv</code> is not, so we recursively call this rule to decide the correct <code>vmv</code> instruction to use.</p>\n<p>That being said, we can probably inline the <code>vslidedown</code> rules and have just a generic <code>vmv</code> that decides the correct instruction based on the type.</p>\n</blockquote>",
        "id": 359004144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684334912
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196781963\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh sorry to clarify I mean that you've got 4 cases of <code>gen_extractlane</code> here, but why not have those 4 cases be cases on <code>lower (extractlane ..)</code>?</p>\n</blockquote>",
        "id": 359026421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684340665
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196791290\">PR review comment</a>:</p>\n<blockquote>\n<p>If I inline it directly into <code>(lower (extractlane ..))</code> then it would become, 6 rules, right? Since I would have to duplicate <code>vslidedown.vi+vmv</code>, <code>vslidedown.vi+vfm</code>, <code>vslidedown.vx+vmv</code> and <code>vslidedown.vx+vfm</code>,  which are currently just 2 rules.</p>\n<p>Or can I then recursively call the lower instructions directly?</p>\n</blockquote>",
        "id": 359028344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684341196
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196791290\">PR review comment</a>.</p>",
        "id": 359028555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684341251
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196793579\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah I apologize I missed that crucial bit of this being a recursive rule! In that case yeah definitely makes sense as a standalone decl.</p>\n</blockquote>",
        "id": 359028790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684341322
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397#discussion_r1196791290\">PR review comment</a>.</p>",
        "id": 359031710,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684342094
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397\">PR #6397</a>.</p>",
        "id": 359054859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684348422
    },
    {
        "content": "<p>afonso360 has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397\">PR #6397</a>.</p>",
        "id": 359054892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684348435
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6397\">PR #6397</a>.</p>",
        "id": 359070411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684353377
    }
]