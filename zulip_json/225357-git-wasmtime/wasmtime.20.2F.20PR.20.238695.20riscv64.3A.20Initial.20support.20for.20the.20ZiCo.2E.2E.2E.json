[
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695\">PR #8695</a>.</p>",
        "id": 440831131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716808165
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695\">PR #8695</a>.</p>",
        "id": 440832530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716808685
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#issuecomment-2133418003\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695\">PR #8695</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:riscv64\", \"cranelift:meta\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 440848179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716814207
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695\">PR #8695</a>.</p>",
        "id": 440854334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716816126
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#pullrequestreview-2083087490\">PR review</a>.</p>",
        "id": 441059399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716908471
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#pullrequestreview-2083087490\">PR review</a>.</p>",
        "id": 441059400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716908471
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617419452\">PR review comment</a>:</p>\n<blockquote>\n<p>Should these two rules perhaps be gated by <code>zicond</code> being available?</p>\n</blockquote>",
        "id": 441059401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716908471
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617417798\">PR review comment</a>:</p>\n<blockquote>\n<p>I remember running into this historically as well, you wouldn't happen to know off-hand if there's an issue for this or if you've bottomed it out before perhaps? This isn't the first time that it's been useful to pattern-match on <code>(zero_reg)</code> and generating the zero register directly I think also results in better codegen in situations as well (as it avoids a move-of-zero into a register)</p>\n</blockquote>",
        "id": 441059402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716908471
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617414643\">PR review comment</a>:</p>\n<blockquote>\n<p>Should there perhaps be one more fully-general rule for <code>has_zicond</code> which performs the compare given arbitrary values in the condition and then does the two <code>czero.*</code> instructions? That might be more optimal than falling back to the full <code>Select</code> instruction which is pretty branch-y.</p>\n</blockquote>",
        "id": 441059403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716908471
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#pullrequestreview-2083505646\">PR review</a>.</p>",
        "id": 441086193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716918264
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617683069\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I just double checked and that's also what <a href=\"https://godbolt.org/z/1h3bK8ssj\">LLVM emits</a>. I'll add that.</p>\n<p>I'm pretty surprised that this is better than the optimal sequence of 2 <code>mv</code>'s and a conditional branch over one of them. But hey, it is what it is.</p>\n</blockquote>",
        "id": 441086194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716918264
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#pullrequestreview-2083509524\">PR review</a>.</p>",
        "id": 441086507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716918387
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617685123\">PR review comment</a>:</p>\n<blockquote>\n<p>I've definitely run into it in the past. And IIRC it was something to do with regalloc, but I don't remember what exactly. I tried to search around the existing issues / PR's and I couldn't find a direct reference to any of it, but I'm fairly sure we've talked about it.</p>\n<p>I'll create an issue and then we can have that centralized in a single place.</p>\n</blockquote>",
        "id": 441086509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716918387
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#pullrequestreview-2083597844\">PR review</a>.</p>",
        "id": 441093789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716921187
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617737103\">PR review comment</a>:</p>\n<blockquote>\n<p>I found it! <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7162\">https://github.com/bytecodealliance/wasmtime/pull/7162</a> It looks like there's a pretty big incompatibility with RA2.</p>\n<p>I wonder if we could just check all of the register uses when collecting the operands, and using <code>[Operand::fixed_nonallocatable()](https://docs.rs/regalloc2/latest/regalloc2/struct.Operand.html#method.fixed_nonallocatable)</code> as suggested if we do find the zero register. Might be worth trying.</p>\n</blockquote>",
        "id": 441093790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716921187
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617737103\">PR review comment</a>.</p>",
        "id": 441093820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716921201
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617737103\">PR review comment</a>.</p>",
        "id": 441093878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716921224
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617737103\">PR review comment</a>.</p>",
        "id": 441095260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716921777
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#pullrequestreview-2083617190\">PR review</a>.</p>",
        "id": 441095531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716921896
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617749311\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately yeah the issue is that we don't do rematerialization, and so we need to distinguish between \"zero for this operand that can accept a special reg\" and \"zero in an arbitrary lowered-from-SSA reg\" which fundamentally needs participation from the lowering logic; operand kinds can't patch the hole.</p>\n<p>(Remat would be great to have! It's also a giant lift in complexity...)</p>\n</blockquote>",
        "id": 441095532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716921896
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#pullrequestreview-2083670716\">PR review</a>.</p>",
        "id": 441100001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716923841
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#discussion_r1617782208\">PR review comment</a>:</p>\n<blockquote>\n<p>Nothing like routinely forgetting PRs I myself made...</p>\n<p>In any case thanks for digging that up! In the meantime I would definitely agree that the implemented solution in this PR, pattern matching <code>iconst 0</code>, is the way to go. </p>\n</blockquote>",
        "id": 441100002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716923842
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695\">PR #8695</a>.</p>",
        "id": 441226553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716984552
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695#issuecomment-2137285718\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695\">PR #8695</a>:</p>\n<blockquote>\n<p>It looks like one of the <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/9285793354/job/25551152490?pr=8695\">CI jobs was canceled</a> part way through. I wonder if this is also related to the issues in #8701</p>\n</blockquote>",
        "id": 441229025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716985493
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8695\">PR #8695</a>.</p>",
        "id": 441542677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717098998
    }
]