[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351\">PR #3351</a> from <code>parser-i128</code> to <code>main</code>:</p>\n<blockquote>\n<p>Hey,</p>\n<p>This PR adds support for parsing <code>i128</code> data values, it also cleans up the <code>i128</code> test suite to pass those values directly to the functions. (We previously passed the bottom and top half in <code>i64</code>'s and <code>iconcat</code> them together)</p>\n<p>This causes a bunch of noise in the diff (sorry!). I've separated this into two commits, the first one with the parser changes, and the second one with test suite changes. It might be easier to review it that way.</p>\n<p>Since we now pass i128's directly we need to enable the <code>enable_llvm_abi_extensions</code> flag. This is because the <code>windows_fastcall</code> ABI does not specify how to pass <code>i128</code> values to functions. This is only necessary for the tests to pass on x86_64 windows.</p>\n<p>It doesn't add support for <code>iconst.i128</code> since its instruction format (<code>UnaryImm</code>) doesen't allow us to include a 128 bit value. We would need to change it to <code>UnaryConst</code> for that.</p>\n</blockquote>",
        "id": 253425434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631716821
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351\">PR #3351</a> from <code>parser-i128</code> to <code>main</code>.</p>",
        "id": 253430851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631718759
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#pullrequestreview-757804962\">PR review</a>.</p>",
        "id": 253797713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631907978
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#pullrequestreview-757804962\">PR review</a>.</p>",
        "id": 253797715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631907978
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#discussion_r711309048\">PR review comment</a>:</p>\n<blockquote>\n<p>Why is this different (<code>ne</code> rather than <code>le</code>)? It would be useful to have a comment here explaining why we need to use native endian rather than explicit little endian as in the other cases.</p>\n</blockquote>",
        "id": 253797716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631907978
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#discussion_r711310364\">PR review comment</a>:</p>\n<blockquote>\n<p>I see the duplication is pre-existing, but it's also unfortunate to continue it here. While it may expand the scope of this PR a bit, I wonder if there's a way to write a single polymorphic implementation? Maybe it can take the signed/unsigned types and require <code>FromStr</code> / <code>FromHex</code> / whatever encapsulates <code>wrapping_neg</code>?</p>\n</blockquote>",
        "id": 253797717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631907978
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#pullrequestreview-757861379\">PR review</a>.</p>",
        "id": 253807987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631913021
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#discussion_r711352894\">PR review comment</a>:</p>\n<blockquote>\n<p>We actually do need <code>ne</code> in the other ones (for big endian systems), however changing <code>le</code> -&gt; <code>ne</code> is already in a separate PR (#3329).</p>\n</blockquote>",
        "id": 253807988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631913021
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#pullrequestreview-757892312\">PR review</a>.</p>",
        "id": 253814915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631916940
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#discussion_r711378582\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yes, this makes sense. Thanks for the nudge -- I re-read the issue and decided to merge #3329 to resolve the immediate regression on s390x (so this line now matches what's on <code>main</code>), and created a new issue to track the broader question of endianness in the interpreter.</p>\n</blockquote>",
        "id": 253814916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631916940
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351\">PR #3351</a> from <code>parser-i128</code> to <code>main</code>.</p>",
        "id": 253947339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632060140
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351\">PR #3351</a> from <code>parser-i128</code> to <code>main</code>.</p>",
        "id": 253947410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632060240
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#pullrequestreview-758153710\">PR review</a>.</p>",
        "id": 253947734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632060537
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#discussion_r711750619\">PR review comment</a>:</p>\n<blockquote>\n<p>I tried doing this as a generic function, but it was proving to be somewhat difficult, most of the functions that we need / could use are not in separate traits, but as functions associated with the primitive types. <code>FromStr</code> works, but <code>FromHex</code> doesen't exist. Casting between signed and unsigned types in a generic function, as far as I can tell  is a no go.</p>\n<p>We could solve pretty much all of these problems by adding a dependency on the num crate, but I don't think this justifies it.</p>\n<p>I've implemented this as a macro, hope that is ok.</p>\n</blockquote>",
        "id": 253947735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632060537
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351\">PR #3351</a>.</p>",
        "id": 254189455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632222741
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#pullrequestreview-760026630\">PR review</a>.</p>",
        "id": 254242503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632243860
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#pullrequestreview-760026630\">PR review</a>.</p>",
        "id": 254242505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632243860
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351#discussion_r713246236\">PR review comment</a>:</p>\n<blockquote>\n<p>Perfect, thank you!</p>\n</blockquote>",
        "id": 254242507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632243860
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3351\">PR #3351</a>.</p>",
        "id": 254242527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632243868
    }
]