[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1172979212\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\", \"wasmtime:docs\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 288295786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656805295
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1172983000\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p><code>error: failed to open: /home/runner/work/wasmtime/wasmtime/target/release/.cargo-lock</code> This PR couldn't have caused that CI error</p>\n</blockquote>",
        "id": 288297137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656807505
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1172988682\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p><code>error occurred: Failed to find tool. Is </code>aarch64-linux-gnu-gcc<code> installed?</code> how should I go about fixing this?</p>\n</blockquote>",
        "id": 288299574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656811347
    },
    {
        "content": "<p>TheGreatRambler edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1172988682\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p><code>error occurred: Failed to find tool. Is aarch64-linux-gnu-gcc installed?</code> how should I go about fixing this?</p>\n</blockquote>",
        "id": 288370381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656915347
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1175214289\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Thanks for this! This seems reasonable enough to me. Could this be used to replace and/or modify the existing <code>run-examples</code> crate run on CI? Additionally we ideally wouldn't add any more time to CI since building, especially in release mode, is a bit hefty. Could this ensure that the crates are only built in CI once?</p>\n</blockquote>",
        "id": 288549476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657036081
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1175337410\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>I've moved compilation to the <code>run-examples</code> crate and verified it worked, the CI seems stuck on my end so not sure how well it will work here</p>\n</blockquote>",
        "id": 288570552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657043648
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1175753438\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>CI failed due to a lack of disk space. If it becomes a problem in the future I found <a href=\"https://github.com/apache/flink/blob/master/tools/azure-pipelines/free_disk_space.sh\">this script from Apache</a> that could help, it just removes unnecessary packages from the runner.</p>\n</blockquote>",
        "id": 288620597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657079895
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1176404228\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>I don't even know what to do to fix this CI error. I'm just going to give it a break for now</p>\n</blockquote>",
        "id": 288692444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657123331
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1179464927\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Can anyone provide any tips for why the externref example works perfectly fine on my machine but fails in the CI? I clean the build folder to save disk space, but that should only impact the <code>examples/build</code> folder, <code>externref.wat</code> isn't stored there</p>\n</blockquote>",
        "id": 289013598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657334692
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1180079264\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Still running out of storage? I... I don't even know, I'm going to revert the tests and test from there</p>\n</blockquote>",
        "id": 289156099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657525980
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1188739698\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Could someone (if this is possible) manually restart the CI and/or give any tips on how to fix this final issue? It has to do with <code>CI / Test (windows-2019)</code> in particular taking too long or hanging.</p>\n</blockquote>",
        "id": 290066446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658218331
    },
    {
        "content": "<p>TheGreatRambler edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1188739698\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Could someone (if this is possible) manually restart the CI and/or give any tips on how to fix this final issue? It has to do with <code>CI / Test (windows-2019)</code> in particular hanging on linking.</p>\n</blockquote>",
        "id": 290067009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658218772
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1189344239\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>I don't know CMake on Windows really at all, but that looks like some form of a legitimate loop of some kind.</p>\n</blockquote>",
        "id": 290131228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658250522
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1191661659\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>A little over 2 minutes of that difference was the <code>free-disk-space</code> action, which makes sense to me. But the biggest difference was an extra 4+ minutes in <code>run-tests.sh</code>, which I really think shouldn't have been affected by this PR at all. Other steps were also a little longer, so I think that particular CI job runner was just more heavily loaded.</p>\n<p>That said, I would also like to know if removing the <code>free-disk-space</code> action passes CI now. I didn't get a look at the failure mode before you added it so I'm not sure what to expect. But given that the Windows tests seem to have magically fixed themselves (right? you didn't change anything that should explain that?) I'm wondering if this PR just got extraordinarily unlucky with its CI runs.</p>\n</blockquote>",
        "id": 290394790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658418972
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1191870122\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p><code>free-disk-space</code> was an unneccesary action I pulled in when I kept running out of space during tests. Turns out it was because I was pulling in the full rust toolchain rather than the minimal one, so it should be unneccesary.</p>\n</blockquote>",
        "id": 290425086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658432904
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1191871961\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>As for the Windows builds passing this time, it could be dumb luck but I actually reduced the warnings msvc reports to <code>/W3</code> (the default) just in case, it may have helped by reducing stdout.</p>\n</blockquote>",
        "id": 290425320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658433039
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192047970\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>The new problem seems to be that the examples which rely on wasm blobs can't find them when run under CTest. The macos build is the one that failed but I think it just got to that point before any of the other job runners did, since I don't see any reason why it should be Mac-specific. Do you need to change how you set the current working directory for each test, perhaps?</p>\n</blockquote>",
        "id": 290450253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658448701
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192063205\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>It has to do with the order in which I build the tests, since wasm modules are built for some c tests to run. Now the new problem is msbuild not taking the ctest arguments, and it sort of needs to accept them, without <code>--output-on-failure</code> you can't diagnose issues.</p>\n</blockquote>",
        "id": 290451956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658450428
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192123625\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Of COURSE it got stuck again</p>\n</blockquote>",
        "id": 290458297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658458007
    },
    {
        "content": "<p>TheGreatRambler edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192123625\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Of COURSE it got stuck again, this PR is taking so much of my time lol</p>\n</blockquote>",
        "id": 290458310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658458048
    },
    {
        "content": "<p>TheGreatRambler edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192123625\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Of COURSE it got stuck again, this PR is taking so much of my time lol (I wish Github let me see the command line output so I can debug better)</p>\n</blockquote>",
        "id": 290459229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658459128
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192254525\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>I've cancelled and restarted the windows-2019 job; 4+ hours in, it clearly wasn't going to work. I wish I had any good guesses about what's going on; I'd assumed there might be something weird in the run-examples crate, but that's gone now and we're still seeing this hang in CI. You have my sympathy for how painful this has been!</p>\n<p>I don't know much about cmake but I see there's a <a href=\"https://cmake.org/cmake/help/latest/prop_test/TIMEOUT.html\">TIMEOUT property</a> that you can set on a test. Maybe you can set a timeout on all the tests and at least get it to fail faster? I think 30 seconds ought to be more than enough time when things are working okay.</p>\n<p>Ooh, I see you have a new patch on the branch while I was typing this. I'll be curious to see if that fixes things.</p>\n</blockquote>",
        "id": 290472333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658473550
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192265212\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Hey, windows-2019 got past the point where it had been stuck! Although I see my suggestion of a 30-second timeout would have been too short for <code>epochs-rust</code> and <code>tokio-rust</code>, which took closer to 120 seconds on Windows and 70 seconds on Ubuntu. So I guess 300 seconds might be a better choice, if you should decide to set timeouts.</p>\n</blockquote>",
        "id": 290473298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658474434
    },
    {
        "content": "<p>TheGreatRambler <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192304810\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>It was getting stuck because both <code>memory.c</code> and <code>multimemory.c</code> read 8 bytes into a variable on the stack rather than 4, which I guess the old testing didn't catch. Cmake catches exceptions and return codes, so it just got silently stuck. Ideally everything is fine now</p>\n</blockquote>",
        "id": 290477106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658477477
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369#issuecomment-1192785728\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4369\">issue #4369</a>:</p>\n<blockquote>\n<p>Alex and I are dismayed that our CI didn't catch that bug sooner; apparently we should start using <code>-Werror</code> in CI or something. That's not a problem for this PR though, which I'm merging now. Thank you for all your effort getting this through!</p>\n</blockquote>",
        "id": 290541585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658510519
    }
]