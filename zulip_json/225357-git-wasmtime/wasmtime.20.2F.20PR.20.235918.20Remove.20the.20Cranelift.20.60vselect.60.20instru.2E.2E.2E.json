[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a> from <code>remove-vselect</code> to <code>main</code>:</p>\n<blockquote>\n<p>This instruction is documented as selecting lanes based on the \"truthy\" value of the condition lane, but the current status of the implementation of this instruction is:</p>\n<ul>\n<li>\n<p>x64 - uses the high bit for <code>f32x4</code> and <code>f64x2</code> and otherwise uses the high bit of each byte doing a byte-wise lane select rather than whatever the controlling type is.</p>\n</li>\n<li>\n<p>AArch64 - this is the same as <code>bitselect</code> which is a bit-wise selection rather than a lane-wise selection.</p>\n</li>\n<li>\n<p>s390x - this is the same as AArch64, a bit-wise selection rather than lane-wise.</p>\n</li>\n<li>\n<p>interpreter - the interpreter implements the documented semantics of selecting based on \"truthy\" values.</p>\n</li>\n</ul>\n<p>Coupled with the status of the implementation is the fact that this instruction is not used by WebAssembly SIMD today either. The only use of this instruction in Cranelift is the nan-canonicalization pass. By moving nan-canonicalization to <code>bitselect</code>, since that has the desired semantics, there's no longer any need for <code>vselect</code>.</p>\n<p>Given this situation this commit subsqeuently removes <code>vselect</code> and all usage of it throughout Cranelift.</p>\n<p>Closes #5917</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 339222607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677798728
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1322855751\">PR review</a>.</p>",
        "id": 339224121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677799439
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1322855751\">PR review</a>.</p>",
        "id": 339224122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677799439
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1123854432\">PR review comment</a>:</p>\n<blockquote>\n<p>Same here?</p>\n</blockquote>",
        "id": 339224123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677799439
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1123854326\">PR review comment</a>:</p>\n<blockquote>\n<p>I think these were removed by mistake right?</p>\n</blockquote>",
        "id": 339224124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677799439
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a> from <code>remove-vselect</code> to <code>main</code>.</p>",
        "id": 339225869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677800517
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1322882705\">PR review</a>.</p>",
        "id": 339225920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677800534
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1123871026\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh dear now I'm not sure how these leaked in...</p>\n</blockquote>",
        "id": 339225921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677800534
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a> from <code>remove-vselect</code> to <code>main</code>.</p>",
        "id": 340157775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678207311
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1329120335\">PR review</a>.</p>",
        "id": 340208840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221690
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1329120335\">PR review</a>.</p>",
        "id": 340208841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221691
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128271816\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe some additional documentation along these lines:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        This instruction selects whole values. Use `bitselect` to choose each bit according to a mask.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 340208843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221691
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128248685\">PR review comment</a>:</p>\n<blockquote>\n<p>Might as well fix the rest of the comment while we're here I guess.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>;; we can use x64_blend.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 340208844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221691
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128275092\">PR review comment</a>:</p>\n<blockquote>\n<p>I think all of these <code>vselect</code>/<code>icmp</code> rewrites are still valid if we match on <code>bitselect</code> instead, right? <code>as_bool</code> on a typeset containing vectors of integers produces the same typeset, so the result of <code>icmp</code> should be the same as its arguments on vectors, I think.</p>\n</blockquote>",
        "id": 340208846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221691
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128278958\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm hoping we can replace <code>vselect</code> with <code>bitselect</code> in this file (and rename it) and have all these tests still pass.</p>\n</blockquote>",
        "id": 340208847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221691
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128496120\">PR review comment</a>:</p>\n<blockquote>\n<p>I think replacing <code>vselect</code> with <code>bitselect</code> almost works for <code>fcmp</code> as well, except that typesets containing vectors of floats turn into vectors of ints of the same size, but <code>bitselect</code> requires all the types to be the same.</p>\n<p>Maybe we should extend <code>bitselect</code> to accept int vectors of the right width even for selecting between float vectors? I think that would remove the need for this PR's changes to NaN canonicalization, and probably be more useful in general.</p>\n</blockquote>",
        "id": 340208849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221691
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128558789\">PR review comment</a>:</p>\n<blockquote>\n<p>I see the remaining uses of this <code>vselect</code> helper are always fed by the result of <code>icmp</code>, to implement the min and max instructions. It'd be nice to clean that up. Opening a \"good first issue\" as a followup for this PR would be fine though.</p>\n</blockquote>",
        "id": 340208851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678221691
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a> from <code>remove-vselect</code> to <code>main</code>.</p>",
        "id": 340227932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678228667
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a> from <code>remove-vselect</code> to <code>main</code>.</p>",
        "id": 340228508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678228901
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1329668323\">PR review</a>.</p>",
        "id": 340228632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678228956
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128693447\">PR review comment</a>:</p>\n<blockquote>\n<p>Would you be ok with a follow-up issue for this?</p>\n</blockquote>",
        "id": 340228633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678228956
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1329676181\">PR review</a>.</p>",
        "id": 340232282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678230488
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1329676181\">PR review</a>.</p>",
        "id": 340232283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678230489
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128705382\">PR review comment</a>:</p>\n<blockquote>\n<p>I'll feel a little better about adding this <code>bitcast</code> if it's only done right next to the <code>bitselect</code> call that it feeds into. I hope that'll make it easier to spot for somebody cleaning up the types of <code>bitselect</code> later. Also it reduces the diff in this file to pretty much just this closure.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    let vector_select = |pos: &amp;mut FuncCursor, canon_nan: Value| {\n        let is_nan = pos.ins().bitcast(val_type, MemFlags::new(), is_nan);\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 340232284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678230489
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128702158\">PR review comment</a>:</p>\n<blockquote>\n<p>Since <code>scalar_select</code> is only called with the <code>is_nan</code> value from the outer scope, can you revert adding this argument?</p>\n</blockquote>",
        "id": 340232285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678230489
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128716419\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, assuming the changes I've just suggested to NaN canonicalization seem reasonable to you, we can think about <code>bitselect</code> semantics in more detail later. If we see a lot more cases of <code>fcmp</code>-&gt;<code>bitcast</code>-&gt;<code>bitselect</code> I might prioritize it higher.</p>\n<p>For the record, I'm not concerned about losing these two specific optimization rules, since they weren't motivated by seeing this pattern in any benchmarks; we just added them because we could. But it'd be nice if you'd leave a comment behind mentioning something like \"TODO: this optimization also applies to vectors but the pattern to match is more complicated\".</p>\n</blockquote>",
        "id": 340232286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678230489
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a> from <code>remove-vselect</code> to <code>main</code>.</p>",
        "id": 340237486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678233203
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a> from <code>remove-vselect</code> to <code>main</code>.</p>",
        "id": 340237937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678233425
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1329752078\">PR review</a>.</p>",
        "id": 340238228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678233570
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128765924\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok sounds good. I mostly want to not pile up too much on this PR and I'm not too familiar with cranelift's instruction format builde, so I'd prefer to set that aside for another time rather than doing it here-and-now. I do think it makes sense, though that <code>bitselect</code> always takes an integer mask. Most of these optimizations probably won't fire from wasm code though since wasm <code>v128.bitselect</code> forces everything through <code>i8x16</code> which loses most of the type information. That being said these optimizations aren't all that important for wasm probably since if you're using SIMD you're probably using LLVM which would already have done optimizations like this ideally.</p>\n</blockquote>",
        "id": 340238230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678233570
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a>.</p>",
        "id": 340241589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678235108
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918\">PR #5918</a>.</p>",
        "id": 340247862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678238674
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#pullrequestreview-1329925244\">PR review</a>.</p>",
        "id": 340260831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678246060
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5918#discussion_r1128938130\">PR review comment</a>:</p>\n<blockquote>\n<p>I've opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5962\">https://github.com/bytecodealliance/wasmtime/issues/5962</a> for this</p>\n</blockquote>",
        "id": 340260832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678246061
    }
]