[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492#issuecomment-852104802\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492\">issue #2492</a>:</p>\n<blockquote>\n<p>This doesn't actually implement handling different endianness in the backends.</p>\n</blockquote>",
        "id": 240937374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622552444
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492#issuecomment-852112194\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492\">issue #2492</a>:</p>\n<blockquote>\n<blockquote>\n<p>This doesn't actually implement handling different endianness in the backends.</p>\n</blockquote>\n<p>You can look at the new s390x backend, which does implement both native (big-endian) and little-endian accesses.  On little-endian platforms there is normally no need to implement big-endian access.</p>\n</blockquote>",
        "id": 240938828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622553082
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492#issuecomment-852115141\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492\">issue #2492</a>:</p>\n<blockquote>\n<p>Big-endian access would be useful for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#issuecomment-851651077\">https://github.com/bytecodealliance/wasmtime/pull/2953#issuecomment-851651077</a> There is currently no <code>bswap</code> instruction and even if there was, explicitly marking the load as little-endian and then doing a bswap would be slower on big-endian systems than directly doing a big-endian load.</p>\n</blockquote>",
        "id": 240939476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622553341
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492#issuecomment-852125006\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2492\">issue #2492</a>:</p>\n<blockquote>\n<blockquote>\n<p>Big-endian access would be useful for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#issuecomment-851651077\">#2953 (comment)</a> There is currently no <code>bswap</code> instruction and even if there was, explicitly marking the load as little-endian and then doing a bswap would be slower on big-endian systems than directly doing a big-endian load.</p>\n</blockquote>\n<p>Well, I guess someone familiar with the other platforms could implement big-endian memory access support for the other back-ends.   I'm not sure if there are direct big-endian load/store instructions on all other platforms cranelift supports; where there are none, the back-end would have to fall back to bswap or equivalent to implement the IR semantics.</p>\n</blockquote>",
        "id": 240941325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622554140
    }
]