[
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716#issuecomment-1233616782\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716\">issue #2716</a>:</p>\n<blockquote>\n<p>Now that the x64 backend is migrated to ISLE, is it time to re-visit this optimization? cc: @elliottt</p>\n</blockquote>",
        "id": 296502540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661994676
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716#issuecomment-1233865228\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716\">issue #2716</a>:</p>\n<blockquote>\n<p>This is only allowed for aligned pointers, right? Can you check the aligned memflag?</p>\n</blockquote>",
        "id": 296531133,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662017477
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716#issuecomment-1423423357\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716\">issue #2716</a>:</p>\n<blockquote>\n<p>@abrown are you interested in pursuing this further? (Going through old PRs and cleaning up...) I agree with @bjorn3 that the alignment issue is the critical question here, and so I suspect there won't be major opportunity coming from Wasm-SIMD (given that loads/stores only have alignment hints, not hard-enforced requirements), but we can still think about it further if there's some other aspect where it could help...</p>\n</blockquote>",
        "id": 326711386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675902515
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716#issuecomment-1426203988\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716\">issue #2716</a>:</p>\n<blockquote>\n<p>I had to refresh my mental cache for this issue quite a bit (it's been a while for this issue!). I don't know why I didn't originally respond, but as I dug into this, I didn't immediately find any requirement for these instructions to use aligned addresses. [searches more...] In fact, I do see the following in section 12.10.7 of the Intel manuals:</p>\n</blockquote>",
        "id": 327123462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676054983
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716#issuecomment-1426203988\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2716\">issue #2716</a>:</p>\n<blockquote>\n<p>I had to refresh my mental cache for this issue quite a bit (it's been a while for this issue!). I don't know why I didn't originally respond, but as I dug into this, I didn't immediately find any requirement for these instructions to use aligned addresses. [searches more...] In fact, I do see the following in section 12.10.7 of the Intel manuals:</p>\n<blockquote>\n<p>SSE4.1 adds 7 instructions (corresponding to 9 assembly instruction mnemonics) that simplify data insertion and extraction between general-purpose register (GPR) and XMM registers (EXTRACTPS, INSERTPS, PINSRB, PINSRD, PINSRQ, PEXTRB, PEXTRW, PEXTRD, and PEXTRQ). When accessing memory, no alignment is required for any of these instructions (unless alignment checking is enabled).</p>\n</blockquote>\n<p>I think we could proceed with adding these tests?</p>\n</blockquote>",
        "id": 327123606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676055029
    }
]