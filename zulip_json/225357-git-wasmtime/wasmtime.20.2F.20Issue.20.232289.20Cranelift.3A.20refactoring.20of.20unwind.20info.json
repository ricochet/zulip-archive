[
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2289#issuecomment-708427540\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2289\">Issue #2289</a>:</p>\n<blockquote>\n<blockquote>\n<p>I do have a concern about the performance of this change, primarily for Windows. The Windows x64 ABI only needs to look at the entry block to fully describe the unwind information because epilogues are not described for Windows x64. </p>\n</blockquote>\n<p>I improved performance of <code>isa::x86::create_unwind_info</code> by scanning only prologue and epilogue blocks, and better <code>epilogues_start</code> check. That's something between windows x64 and systemv unwind info performance speeds. Assuming that a majority of function will not have long entry and epilogue block, that shall be fine.</p>\n<p>Nature of our generated code (even in systemv) does not require to have epilogues -- it is just correct to have them for e.g. step-by-step debugging. If the performance will be the issue, their generation can be removed without effect on <code>backtrace</code>  logic.</p>\n<p>I expect that new backends will allow us to know exact ranges of prologue/epilogue instructions.</p>\n</blockquote>",
        "id": 213293120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602684462
    }
]