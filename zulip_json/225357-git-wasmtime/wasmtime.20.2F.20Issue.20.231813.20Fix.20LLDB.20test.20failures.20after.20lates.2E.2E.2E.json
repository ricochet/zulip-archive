[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>After #1805, we're seeing test failures like the following in <code>debug::lldb::test_debug_dwarf_ptr</code>:</p>\n<p>&lt;details&gt;</p>\n<div class=\"codehilite\"><pre><span></span><code>test debug::lldb::test_debug_dwarf_ptr ... FAILED\n\nfailures:\n\n---- debug::lldb::test_debug_dwarf_ptr stdout ----\nthread &#39;main&#39; panicked at &#39;didn&#39;t pass check &gt; (lldb) target create &quot;/home/runner/work/wasmtime/wasmtime/target/debug/wasmtime&quot;\n&gt; Current executable set to &#39;/home/runner/work/wasmtime/wasmtime/target/debug/wasmtime&#39; (x86_64).\n&gt; (lldb) settings set -- target.run-args  &quot;-g&quot; &quot;--opt-level&quot; &quot;0&quot; &quot;tests/all/debug/testsuite/reverse-str.wasm&quot;\n&gt; (lldb) command source -s 0 &#39;/tmp/.tmpmh81yA&#39;\n&gt; Executing commands in &#39;/tmp/.tmpmh81yA&#39;.\n&gt; (lldb) b reverse-str.c:9\n&gt; Breakpoint 1: no locations (pending).\n  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nMatched #0: \\bBreakpoint 1: no locations \\(pending\\)\n&gt; WARNING:  Unable to resolve breakpoint to any actual locations.\n&gt; (lldb) r\n&gt; 1 location added to breakpoint 1\n&gt; Process 14667 stopped\n&gt; * thread #1, name = &#39;wasmtime&#39;, stop reason = breakpoint 1.1\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nMatched #1: \\bstop reason = breakpoint 1\\.1\\b\n&gt;     frame #0: 0x00007ffff7fcf053 JIT(0x5555571bdd70)`reverse(s=(__ptr = 66562), len=13) at reverse-str.c:9:12\n      ^~~~~~~~\nMatched #2: \\bframe \\#0\\b\n                                                       ^~~~~~~~~~~~~~~~~~\nMatched #3: \\breverse\\(s=\\(__ptr =\nMissed #4: &quot;Hello, world\\.&quot;\n&gt;\n&gt; Process 14667 launched: &#39;/home/runner/work/wasmtime/wasmtime/target/debug/wasmtime&#39; (x86_64)\n&gt; (lldb) p __vmctx-&gt;set(),&amp;*s\n&#39;, tests/all/debug/lldb.rs:52:5\n</code></pre></div>\n\n\n<p>&lt;/details&gt;</p>\n<p>We suspect the version-bump of some dependency caused this, though we aren't yet sure why (and we cannot reproduce locally). We will disable the test for now but we need to investigate and re-enable.</p>\n</blockquote>",
        "id": 199661901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591211012
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638443681\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>We're temporarily avoiding CI failures by pinning versions in <code>Cargo.lock</code> in #1811, but we should resolve the underlying issue and the update the lock file to the latest versions.</p>\n</blockquote>",
        "id": 199672450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591216075
    },
    {
        "content": "<p>cfallin labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>After #1805, we're seeing test failures like the following in <code>debug::lldb::test_debug_dwarf_ptr</code>:</p>\n<p>&lt;details&gt;</p>\n<div class=\"codehilite\"><pre><span></span><code>test debug::lldb::test_debug_dwarf_ptr ... FAILED\n\nfailures:\n\n---- debug::lldb::test_debug_dwarf_ptr stdout ----\nthread &#39;main&#39; panicked at &#39;didn&#39;t pass check &gt; (lldb) target create &quot;/home/runner/work/wasmtime/wasmtime/target/debug/wasmtime&quot;\n&gt; Current executable set to &#39;/home/runner/work/wasmtime/wasmtime/target/debug/wasmtime&#39; (x86_64).\n&gt; (lldb) settings set -- target.run-args  &quot;-g&quot; &quot;--opt-level&quot; &quot;0&quot; &quot;tests/all/debug/testsuite/reverse-str.wasm&quot;\n&gt; (lldb) command source -s 0 &#39;/tmp/.tmpmh81yA&#39;\n&gt; Executing commands in &#39;/tmp/.tmpmh81yA&#39;.\n&gt; (lldb) b reverse-str.c:9\n&gt; Breakpoint 1: no locations (pending).\n  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nMatched #0: \\bBreakpoint 1: no locations \\(pending\\)\n&gt; WARNING:  Unable to resolve breakpoint to any actual locations.\n&gt; (lldb) r\n&gt; 1 location added to breakpoint 1\n&gt; Process 14667 stopped\n&gt; * thread #1, name = &#39;wasmtime&#39;, stop reason = breakpoint 1.1\n                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nMatched #1: \\bstop reason = breakpoint 1\\.1\\b\n&gt;     frame #0: 0x00007ffff7fcf053 JIT(0x5555571bdd70)`reverse(s=(__ptr = 66562), len=13) at reverse-str.c:9:12\n      ^~~~~~~~\nMatched #2: \\bframe \\#0\\b\n                                                       ^~~~~~~~~~~~~~~~~~\nMatched #3: \\breverse\\(s=\\(__ptr =\nMissed #4: &quot;Hello, world\\.&quot;\n&gt;\n&gt; Process 14667 launched: &#39;/home/runner/work/wasmtime/wasmtime/target/debug/wasmtime&#39; (x86_64)\n&gt; (lldb) p __vmctx-&gt;set(),&amp;*s\n&#39;, tests/all/debug/lldb.rs:52:5\n</code></pre></div>\n\n\n<p>&lt;/details&gt;</p>\n<p>We suspect the version-bump of some dependency caused this, though we aren't yet sure why (and we cannot reproduce locally). We will disable the test for now but we need to investigate and re-enable.</p>\n</blockquote>",
        "id": 199672522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591216106
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638444024\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>cc @yurydelendik </p>\n</blockquote>",
        "id": 199672542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591216116
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638466419\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>With a green master it's clear that <code>cargo update -p backtrace</code> is causing the regression here. I can reproduce this locally, and the problem is that LLDB prints:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: Can&#39;t run the expression locally: Interpreter doesn&#39;t handle one of the expression&#39;s opcodes\n</code></pre></div>\n\n\n<p>when we try to execute</p>\n<div class=\"codehilite\"><pre><span></span><code>p __vmctx-&gt;set(),&amp;*s\n</code></pre></div>\n\n\n<p>I'm not really sure how the backtrace crate is related to this. Even the gimli/addr2line/object/etc updates don't seem to affect wasmtime since they're all on versions that wasmtime itself isn't using, only the backtrace crate is using them.</p>\n<p>@yurydelendik do you know where that error message may be coming from?</p>\n</blockquote>",
        "id": 199677747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591218966
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638471653\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>@alexcrichton \"backtrace\" now indirectly depends on \"gimli 0.21\", I'm thinking it is what is giving an issue. I'm working on upgrading our \"gimli 0.20\" atm, though not sure why it is giving \"Interpreter doesn't handle one of the expression's opcodes\".</p>\n</blockquote>",
        "id": 199679109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591219698
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638473204\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>I'm not sure why the gimli 0.21 dep would cause any issues though? That's exclusively used by the <code>backtrace</code> crate (everything else in wasmtime is using 0.20), so is it like it's mere presence is causing issues?</p>\n</blockquote>",
        "id": 199679564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591219928
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638474459\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm not sure why the gimli 0.21 dep would cause any issues though? </p>\n</blockquote>\n<p>Me neither. But I would like to upgrade it anyway, but it is not easy. Too much API refactoring happened between 0.20 -&gt; 0.21 .</p>\n</blockquote>",
        "id": 199679892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591220118
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638475878\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<blockquote>\n<p>do you know where that error message may be coming from?</p>\n</blockquote>\n<p>It is likely <a href=\"https://github.com/llvm/llvm-project/blob/7c1b060c3c65cac50edec5cceb6653957c344d96/lldb/source/Expression/IRInterpreter.cpp#L433\">LLDB</a> -- it cannot decode generated by wasmtime DWARF expression</p>\n</blockquote>",
        "id": 199680312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591220332
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-638475878\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<blockquote>\n<p>do you know where that error message may be coming from?</p>\n</blockquote>\n<p>It is likely <a href=\"https://github.com/llvm/llvm-project/blob/7c1b060c3c65cac50edec5cceb6653957c344d96/lldb/source/Expression/IRInterpreter.cpp#L433\">LLDB</a> -- it cannot decode generated by wasmtime DWARF expression</p>\n<p>P.S. it is reason I'm connecting it with gimli</p>\n</blockquote>",
        "id": 199680599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591220493
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639081475\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>It is limited to Linux platforms. Bisect points for <a href=\"https://github.com/rust-lang/backtrace-rs/commit/5ad0b762eb84de27ee2917b61356786f3ee8260b\">https://github.com/rust-lang/backtrace-rs/commit/5ad0b762eb84de27ee2917b61356786f3ee8260b</a></p>\n</blockquote>",
        "id": 199800572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591300465
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639112871\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>At this point it sounds like this is exposing a preexisting bug. The only real change in that commit which would affect this is that libbacktrace's C code is gone, and some new Rust code is pulled in. For these tests and LLDB I don't think any of that code is executed, but presumably the DWARF for wasmtime has changed, perhaps significantly, as a result.</p>\n<p>Would it make sense to try to track this down not as a regression in the <code>backtrace</code> crate but instead as a possible bug in wasmtime's emission of dwarf information? (or LLDB's interpretation of it?)</p>\n</blockquote>",
        "id": 199807647,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591304310
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639115657\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>@alexcrichton the problem is related to LLDB only (works on GDB). Running any <code>p any_call()</code> inside wasmtime debug session, without even JIT code, causes that too:</p>\n<div class=\"codehilite\"><pre><span></span><code>(lldb) b wasmtime.rs:63\n(lldb) r\n(lldb) p set_vmctx_memory(0)\n</code></pre></div>\n\n\n<p>Which fails with the same error.</p>\n<p>Maybe one of the new modules contains unsupported DWARF data?</p>\n</blockquote>",
        "id": 199808323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591304688
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639115657\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>@alexcrichton the problem is related to LLDB only (works on GDB). Running any <code>p any_call()</code> inside wasmtime debug session, without even JIT code, causes that too:</p>\n<div class=\"codehilite\"><pre><span></span><code>(lldb) b wasmtime.rs:63\n(lldb) r\n(lldb) p set_vmctx_memory(0)\n</code></pre></div>\n\n\n<p>Which fails with the same error.</p>\n<p>Maybe one of the new modules contains unsupported DWARF data?</p>\n<p>P.S. also works in release mode, e.g. <code>cargo test --release test_debug_dwarf_ptr -- --ignored</code></p>\n</blockquote>",
        "id": 199808901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591305069
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639141700\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>Adding to Cargo.toml:</p>\n<div class=\"codehilite\"><pre><span></span><code>[profile.dev.package.backtrace]\ndebug = 0\n</code></pre></div>\n\n\n<p>allows test to past.</p>\n<p>Tested with lldb-10 for Ubuntu -- it works there too. (It was working for lldb-9 on MacOSX, not on Ubunty)</p>\n<p>If CI will start using lldb-10, the problem will go away.</p>\n</blockquote>",
        "id": 199814024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591308055
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639143109\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>Nice find! I'd be fine taking care of the CI bits if you want to check in that fix to Cargo.toml?</p>\n</blockquote>",
        "id": 199814414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591308289
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639143922\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<blockquote>\n<p>if you want to check in that fix to Cargo.toml?</p>\n</blockquote>\n<p>Sorry, there are two solutions above: fix in Cargo.toml or lldb-10. Moving CI to lldb-10 will completely fix the issue.</p>\n</blockquote>",
        "id": 199814594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591308425
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639143922\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<blockquote>\n<p>if you want to check in that fix to Cargo.toml?</p>\n</blockquote>\n<p>Sorry, there are two solutions above: fix in Cargo.toml or lldb-10. Moving CI to lldb-10 will completely fix the issue (without Cargo.toml change).</p>\n</blockquote>",
        "id": 199814620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591308446
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-639141700\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>Adding to Cargo.toml:</p>\n<div class=\"codehilite\"><pre><span></span><code>[profile.dev.package.backtrace]\ndebug = 0\n</code></pre></div>\n\n\n<p>allows test to past.</p>\n<hr>\n<p>Tested with lldb-10 for Ubuntu -- it works there too. (It was working for lldb-9 on MacOSX, not on Ubunty)</p>\n<p>If CI will start using lldb-10, the problem will go away.</p>\n</blockquote>",
        "id": 199814742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591308515
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-643407687\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>So I thought LLDB 10 would be pretty easy to install from <a href=\"https://github.com/llvm/llvm-project/releases/tag/llvmorg-10.0.0\">https://github.com/llvm/llvm-project/releases/tag/llvmorg-10.0.0</a>, but unfortunately those tarballs don't contain lldb at all. They did for LLVM 9 though (?)</p>\n</blockquote>",
        "id": 200702282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591984364
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813#issuecomment-644426207\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1813\">Issue #1813</a>:</p>\n<blockquote>\n<p>Note that <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1832\">https://github.com/bytecodealliance/wasmtime/pull/1832</a> is going to update <code>backtrace</code>, but is adding</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># Cargo.toml</span>\n<span class=\"k\">[profile.dev.package.backtrace]</span>\n<span class=\"n\">debug</span> <span class=\"o\">=</span> <span class=\"n\">false</span> <span class=\"c1\"># FIXME(#1813)</span>\n</code></pre></div>\n\n\n<p>to temporarily work around these failures.</p>\n<p>We should remove that when properly fixing this bug.</p>\n</blockquote>",
        "id": 200954581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592260863
    }
]