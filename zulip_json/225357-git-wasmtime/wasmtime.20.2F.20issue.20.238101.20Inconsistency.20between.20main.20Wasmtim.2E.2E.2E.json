[
    {
        "content": "<p>rikhuijzer opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101\">issue #8101</a>:</p>\n<blockquote>\n<p>I've been reading a bit about the Bytecode Alliance and Wasmtime and I am currently somewhat confused.</p>\n<p>My confusion comes from the fact that I started learning about Wasmtime from <a href=\"https://wasmtime.dev\">https://wasmtime.dev</a>. This example is positioned clearly on the front page:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>rustup<span class=\"w\"> </span>target<span class=\"w\"> </span>add<span class=\"w\"> </span>wasm32-wasi\n$<span class=\"w\"> </span>rustc<span class=\"w\"> </span>hello.rs<span class=\"w\"> </span>--target<span class=\"w\"> </span>wasm32-wasi\n$<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>hello.wasm\nHello,<span class=\"w\"> </span>world!\n</code></pre></div>\n<p>So from that my main take away was that Wasmtime can be used to run Rust code in a secure sandbox.</p>\n<p>However, when I actually go into the codebase and the docs at <a href=\"https://docs.wasmtime.dev/\">https://docs.wasmtime.dev/</a>, then the example from the front page isn't even mentioned, but instead it is mostly about how to use the Wasmtime API (not CLI) to run programs which now suddenly require <code>wat</code> files too.</p>\n<p>So my question is: how should I mentally connect these two concepts? Why did the first example not require a <code>wat</code> file while the <a href=\"https://docs.wasmtime.dev/examples-rust-hello-world.html\">Hello, world!</a> example does?</p>\n<p>If someone could provide me some quick and high level overview, then I'll do my best to update the documentation based on that (with the caveat that I'm AFK the next week and the week after).</p>\n</blockquote>",
        "id": 426175201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710263434
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101#issuecomment-1992294522\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101\">issue #8101</a>:</p>\n<blockquote>\n<p><code>*.wasm</code> and <code>*.wat</code> files are equivalent: <code>*.wasm</code> is the binary encoding while <code>*.wat</code> is the (somewhat) human-readable textual representation. Does that help?</p>\n</blockquote>",
        "id": 426188700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710268023
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101#issuecomment-1992698013\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101\">issue #8101</a>:</p>\n<blockquote>\n<p>If you're up for it, assistance in updating documentation is always appreciated! We've got a number of ways that Wasmtime can be used and it's hard to keep them all updated and in-sync and generalized for any target audience.</p>\n</blockquote>",
        "id": 426224540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710283356
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101\">issue #8101</a>:</p>\n<blockquote>\n<p>I've been reading a bit about the Bytecode Alliance and Wasmtime and I am currently somewhat confused.</p>\n<p>My confusion comes from the fact that I started learning about Wasmtime from <a href=\"https://wasmtime.dev\">https://wasmtime.dev</a>. This example is positioned clearly on the front page:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$<span class=\"w\"> </span>rustup<span class=\"w\"> </span>target<span class=\"w\"> </span>add<span class=\"w\"> </span>wasm32-wasi\n$<span class=\"w\"> </span>rustc<span class=\"w\"> </span>hello.rs<span class=\"w\"> </span>--target<span class=\"w\"> </span>wasm32-wasi\n$<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>hello.wasm\nHello,<span class=\"w\"> </span>world!\n</code></pre></div>\n<p>So from that my main take away was that Wasmtime can be used to run Rust code in a secure sandbox.</p>\n<p>However, when I actually go into the codebase and the docs at <a href=\"https://docs.wasmtime.dev/\">https://docs.wasmtime.dev/</a>, then the example from the front page isn't even mentioned, but instead it is mostly about how to use the Wasmtime API (not CLI) to run programs which now suddenly require <code>wat</code> files too.</p>\n<p>So my question is: how should I mentally connect these two concepts? Why did the first example not require a <code>wat</code> file while the <a href=\"https://docs.wasmtime.dev/examples-rust-hello-world.html\">Hello, world!</a> example does?</p>\n<p>If someone could provide me some quick and high level overview, then I'll do my best to update the documentation based on that (with the caveat that I'm AFK the next week and the week after).</p>\n</blockquote>",
        "id": 426350706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710339618
    },
    {
        "content": "<p>rikhuijzer <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101#issuecomment-1994956646\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101\">issue #8101</a>:</p>\n<blockquote>\n<blockquote>\n<p>If you're up for it, assistance in updating documentation is always appreciated! We've got a number of ways that Wasmtime can be used and it's hard to keep them all updated and in-sync and generalized for any target audience.</p>\n</blockquote>\n<p>@alexcrichton good to know! When updating the docs, is it important to try to not conflict with <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7987\">https://github.com/bytecodealliance/wasmtime/pull/7987</a>?</p>\n</blockquote>",
        "id": 426383985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710348479
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101#issuecomment-1995300890\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8101\">issue #8101</a>:</p>\n<blockquote>\n<p>Oh no don't worry about that, I need to spend time on that at some point but I haven't gotten to it. Feel free to change whatever you'd like and I'm happy to work around any merge conflicts.</p>\n</blockquote>",
        "id": 426403225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710354606
    }
]