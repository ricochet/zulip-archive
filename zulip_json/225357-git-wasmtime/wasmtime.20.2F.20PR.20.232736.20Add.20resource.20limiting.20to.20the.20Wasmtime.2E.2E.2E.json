[
    {
        "content": "<p>peterhuene opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR adds a <code>ResourceLimiter</code> trait to the Wasmtime API.</p>\n<p>When used in conjunction with <code>Store::new_with_limiter</code>, this can be used to<br>\nmonitor and prevent WebAssembly code from growing linear memories and tables.</p>\n<p>This is particularly useful when hosts need to take into account host resource<br>\nusage to determine if WebAssembly code can consume more resources.</p>\n<p>A simple <code>StaticResourceLimiter</code> is also included with these changes that will<br>\nsimply limit the size of linear memories or tables for all instances created in<br>\nthe store based on static values.</p>\n</blockquote>",
        "id": 230788303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616025172
    },
    {
        "content": "<p><strong>peterhuene</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a>.</p>",
        "id": 230788424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616025247
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 230793376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616028713
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 230793481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616028803
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 230926609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616096821
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 230934580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616100290
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616537489\">PR Review</a>.</p>",
        "id": 231044734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597780585\">PR Review Comment</a>:</p>\n<blockquote>\n<p>If this ends up being stored in individual tables/memories then this could probably turn into <code>&amp;'a Arc&lt;dyn ...&gt;</code></p>\n</blockquote>",
        "id": 231044736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597784015\">PR Review Comment</a>:</p>\n<blockquote>\n<p>To make sure I understand this right, if any <code>maximum</code> is in play then this field is set to the minimum of all those maximums? The sources of <code>maximum</code> are:</p>\n<ul>\n<li>The actual wasm type itself</li>\n<li>The pooling allocator's configured maximum</li>\n<li>A custom implementation of <code>RuntimeMemory</code> has a configured maximum</li>\n</ul>\n<p>If my understanding is right, could this be clarified a bit? Basically <code>None</code> is only returned if literally nothing is limiting the memory growth, but otherwise <code>Some</code> doesn't imply that the wasm type itself had a maximum listed, just that something else somewhere is placing a constraint.</p>\n<p>Also, presumably, this function isn't called unless <code>desired</code> is already known to be less than <code>maximum</code>, right? (or is it called even in those cases?)</p>\n</blockquote>",
        "id": 231044737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597780082\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Would it be possible to store the <code>limiter</code> into the <code>Memory</code> itself rather than in the <code>Instance</code>?</p>\n</blockquote>",
        "id": 231044738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597781510\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the  docs here clarify that this is about the runtime limit maximum of the memory, not the maximum size as prescribed by the type in wasm?</p>\n</blockquote>",
        "id": 231044739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616537489\">PR Review</a>.</p>",
        "id": 231044740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597784513\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This structure looks ripe for expansion to limiting other resources in the future, so perhaps this could use a builder-api pattern to avoid future API breakage?</p>\n</blockquote>",
        "id": 231044741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597787499\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this needs to be specified? Otherwise are memories created via <code>Memory::new</code> (or tables) limited via the limiter?</p>\n</blockquote>",
        "id": 231044742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597786430\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It looks like this value doesn't change over time, so I don't think it needs to be backed by a <code>RefCell</code>?</p>\n</blockquote>",
        "id": 231044743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597785831\">PR Review Comment</a>:</p>\n<blockquote>\n<p>To avoid double-allocations and double-indirection could <code>ResourceLimiterProxy</code> have a type variable perhaps?</p>\n</blockquote>",
        "id": 231044744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616169052
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616681573\">PR Review</a>.</p>",
        "id": 231067753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616177915
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597888253\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Your understanding is correct and I can expand upon it in the docs for clarity.</p>\n<p>The function is called even when desired exceeds the maximum as some implementers will want to know when the maximum was reached even if it was not directly limited by the limiter.</p>\n<p>If that feels a little strange, perhaps a different function with the intention that it is only called when the memory couldn't grow due to it exceeding the maximum (from wasm / pooling allocator / custom runtime memory)?</p>\n</blockquote>",
        "id": 231067754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616177915
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616681836\">PR Review</a>.</p>",
        "id": 231067800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616177936
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597888508\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Good idea.  I'll implement a builder.</p>\n</blockquote>",
        "id": 231067803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616177937
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616683023\">PR Review</a>.</p>",
        "id": 231068069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178029
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597889476\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Good point.  I'll fix.</p>\n</blockquote>",
        "id": 231068070,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178029
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616683945\">PR Review</a>.</p>",
        "id": 231068272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178102
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597890189\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It currently does as it needs to sit on <code>inner</code> which is behind <code>Rc</code> and there's a circular reference between the proxy and the <code>Store</code>, which is why there is ugliness in <code>Store::new_with_limiter</code> to set this thing.</p>\n<p>I'm not happy about it at all, so if there's a better way to do this such that the limiter can pass the store along in the callbacks, I'm definitely open to it.</p>\n</blockquote>",
        "id": 231068273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178102
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597890189\">PR Review Comment</a>.</p>",
        "id": 231068637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178244
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616686529\">PR Review</a>.</p>",
        "id": 231068764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178313
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597892138\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I will expand these docs.</p>\n</blockquote>",
        "id": 231068765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178313
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616688391\">PR Review</a>.</p>",
        "id": 231069054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178453
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597893512\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can do.</p>\n</blockquote>",
        "id": 231069055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178453
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-616688904\">PR Review</a>.</p>",
        "id": 231069152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178493
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r597893891\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'll change this, no reason to clone it for the request until a memory / table needs it.</p>\n</blockquote>",
        "id": 231069156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616178494
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-617604137\">PR Review</a>.</p>",
        "id": 231320849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616424030
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r598776407\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah ok nah I think for now this is fine. It runs a possible risk of making it difficult to optimize <code>memory.grow</code> or <code>table.grow</code> in the future but I don't think that's going to be the bottleneck of anything for a long time.</p>\n</blockquote>",
        "id": 231320851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616424030
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR adds a <code>ResourceLimiter</code> trait to the Wasmtime API.</p>\n<p>When used in conjunction with <code>Store::new_with_limiter</code>, this can be used to<br>\nmonitor and prevent WebAssembly code from growing linear memories and tables.</p>\n<p>This is particularly useful when hosts need to take into account host resource<br>\nusage to determine if WebAssembly code can consume more resources.</p>\n<p>A simple <code>Limiter</code> is also included with these changes that will<br>\nsimply limit the size of linear memories or tables for all instances created in<br>\nthe store based on static values.</p>\n</blockquote>",
        "id": 231410487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616463432
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 231544880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616534030
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 231546480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616534774
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 232935898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617388619
    },
    {
        "content": "<p><strong>peterhuene</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> as ready for review.</p>",
        "id": 232936149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617388764
    },
    {
        "content": "<p><strong>peterhuene</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a>.</p>",
        "id": 232961594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617404415
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-627936983\">PR Review</a>.</p>",
        "id": 233191167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617637975
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r607159556\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>Arc</code> is used here but I think <code>Rc</code> may suffice? (I didn't see any location that seemed to require thread-safety here)</p>\n</blockquote>",
        "id": 233191168,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617637975
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r607160422\">PR Review Comment</a>:</p>\n<blockquote>\n<p>One alternative design perhaps is that the <code>Store</code> isn't passed as an argument here and users manually <code>RefCell</code> and <code>Weak</code> themselves with the <code>Store</code>. Do you think, though, that this will be commonly desired such that we may as well go ahead and expose it?</p>\n</blockquote>",
        "id": 233191169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617637975
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-627936983\">PR Review</a>.</p>",
        "id": 233191170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617637976
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r607165720\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm ok, I had a question above about the <code>Store</code> argument and whether we can possibly remove that, but also here do you think it would make sense to remove the <code>Option</code> to effectively always have a limiting strategy?</p>\n</blockquote>",
        "id": 233191171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617637976
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r607164946\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the tests here be expanded with tests where the initial memory/table size exceed the maximum? Additionally API requests like <code>Memory::new</code> and <code>Table::new</code> should fail as well if they exceed the maximum? (ideally also tests where API-created objects will also fail to <code>grow</code> past the maximum)</p>\n</blockquote>",
        "id": 233191172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617637976
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-631883886\">PR Review</a>.</p>",
        "id": 233739486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617920286
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r610155050\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Okay, getting back to this PR: I guess we don't have to expose the <code>Store</code> and let them capture whatever context they want since it's a custom implementation anyway.</p>\n<p>I'll remove the <code>Store</code> parameter and that'll simplify things a bit.</p>\n</blockquote>",
        "id": 233739487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617920286
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-631973856\">PR Review</a>.</p>",
        "id": 233756495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617932959
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r610273926\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The limiter needs to be an <code>Option</code> in the runtime for both table and memory so that the pooling allocator is able to \"take\" the memory/table when deallocating the instance (swaps in <code>None</code>).</p>\n<p>I don't think having it also <code>Option</code> in <code>Store</code> makes it that much worse and it does have the benefit of not boxing a new trait object every time a <code>Store</code> is created just to return <code>true</code> on memory/table grow operations.</p>\n<p>If you're okay with it, I'd like to leave this one as-is.</p>\n</blockquote>",
        "id": 233756496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617932960
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r610273926\">PR Review Comment</a>.</p>",
        "id": 233756505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617932976
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 233757625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617933866
    },
    {
        "content": "<p><strong>peterhuene</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a>.</p>",
        "id": 233757637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617933878
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 233758574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1617934593
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-636735649\">PR Review</a>.</p>",
        "id": 234683756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496305
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-636735649\">PR Review</a>.</p>",
        "id": 234683757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496305
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r614104834\">PR Review Comment</a>:</p>\n<blockquote>\n<p>To confirm, are there tests for this? It seems a bit fishy that we're  deallocating a half-initialized instance without many modifications below. I'd expect, for example <code>decommit_memory_pages</code> to fail one one way or another if called on an othewise unmapped region?</p>\n</blockquote>",
        "id": 234683758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496306
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r614107281\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I suppose one other possible option is to store <code>*mut dyn ResourceLimiter</code> in the <code>*mut VMContext</code> so we can use <code>Box</code> here instead of <code>Rc</code>, but let's only do that if the need actually arises.</p>\n</blockquote>",
        "id": 234683759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496306
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r614108212\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the documentation here be expanded to indicate that the created <code>Store</code> has no limits on usage of memory and such in wasm modules?</p>\n</blockquote>",
        "id": 234683760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496306
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r614109776\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could this link to the <code>new_with_limits</code> API?</p>\n</blockquote>",
        "id": 234683761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496306
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r614107937\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the documentation here link to the <code>ResourceLimiter</code> trait which discussed which limits can be configured?</p>\n</blockquote>",
        "id": 234683762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496306
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r614109466\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh also, could this link to <code>StoreLimits</code> and <code>StoreLimitsBuilder</code> for a built-in way to limit resources?</p>\n</blockquote>",
        "id": 234683763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618496306
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-638056087\">PR Review</a>.</p>",
        "id": 234914262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618604223
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r615100661\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The <code>test_pooling_allocator_initial_limits_exceeded</code> test does cover this, albeit with empty memory/table lists on <code>deallocate</code>, as that test is what caught the problem: with an instance limit of 1, it failed to allocate any more instances because it wasn't being added back to the free list.  I will add another memory to the module definition such that the list of initialized memories isn't empty, just in case.</p>\n<p>While the instance isn't completely initialized, it should be safe to call <code>deallocate</code> on it as we iterate back through only initialized <code>Memory</code> and <code>Table</code> to call <code>decommit_memory_pages</code> on pages that were either made accessible (for <code>Memory</code>) or explicitly committed (for <code>Table</code>) prior to inserting into those lists.</p>\n</blockquote>",
        "id": 234914263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618604223
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a> from <code>limiter</code> to <code>main</code>.</p>",
        "id": 234933003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618613819
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-638129233\">PR Review</a>.</p>",
        "id": 234933062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618613872
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#discussion_r615159285\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> I'm going to leave this as-is and we can revisit in the the future if needed.</p>\n</blockquote>",
        "id": 234933063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618613872
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736#pullrequestreview-638926289\">PR Review</a>.</p>",
        "id": 235187990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618841954
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2736\">PR #2736</a>.</p>",
        "id": 235188002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618841962
    }
]