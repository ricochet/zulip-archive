[
    {
        "content": "<p>whitequark opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740\">PR #1740</a> from <code>x32-windows-traps</code> to <code>master</code>:</p>\n<blockquote>\n<p>This PR is a small incremental step towards a working Windows x32 backend. It implements what I believe is the correct approach to handling traps on x86_32 Windows, which is based on my understanding of x32 SEH: there is no global unwind registry at all, and instead SEH frames are pushed onto stack. Therefore no registration is needed. However I am by no means a Windows expert and my understanding might be incorrect.</p>\n<p>There is no way to actually run code on Windows x32 yet because the fastcall ABI isn't implemented. I'll add that in a follow-up PR. I have a working prototype that can print <code>Hello, World</code> but it has some missing parts and requires major cleanup to be upstreamed.</p>\n</blockquote>",
        "id": 198359551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590086534
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740#pullrequestreview-416404685\">PR Review</a>.</p>",
        "id": 198360724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087131
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740#pullrequestreview-416404685\">PR Review</a>.</p>",
        "id": 198360725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087131
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740#discussion_r428847024\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm not entirely certain where this ends up being used elsewhere, but should this presumably return an error? We could then specifically ignore the error somewhere else or have some form of error handling?</p>\n<p>(I'm not sure where errors here end up)</p>\n</blockquote>",
        "id": 198360726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087131
    },
    {
        "content": "<p>whitequark submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740#pullrequestreview-416407398\">PR Review</a>.</p>",
        "id": 198361162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087349
    },
    {
        "content": "<p>whitequark created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740#discussion_r428849192\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The error would end up here: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/68f0d2f6d0c84c090b590d3bda60369e7e45eac7/crates/jit/src/code_memory.rs#L210-L214\">https://github.com/bytecodealliance/wasmtime/blob/68f0d2f6d0c84c090b590d3bda60369e7e45eac7/crates/jit/src/code_memory.rs#L210-L214</a></p>\n<p>I think you're right and we should return an error here, since in that function <code>func.unwind_info == None</code> on x32 and this function would end up being never called at all.</p>\n</blockquote>",
        "id": 198361163,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087349
    },
    {
        "content": "<p>whitequark updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740\">PR #1740</a> from <code>x32-windows-traps</code> to <code>master</code>:</p>\n<blockquote>\n<p>This PR is a small incremental step towards a working Windows x32 backend. It implements what I believe is the correct approach to handling traps on x86_32 Windows, which is based on my understanding of x32 SEH: there is no global unwind registry at all, and instead SEH frames are pushed onto stack. Therefore no registration is needed. However I am by no means a Windows expert and my understanding might be incorrect.</p>\n<p>There is no way to actually run code on Windows x32 yet because the fastcall ABI isn't implemented. I'll add that in a follow-up PR. I have a working prototype that can print <code>Hello, World</code> but it has some missing parts and requires major cleanup to be upstreamed.</p>\n</blockquote>",
        "id": 198361600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087548
    },
    {
        "content": "<p>whitequark submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740#pullrequestreview-416409716\">PR Review</a>.</p>",
        "id": 198361616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087557
    },
    {
        "content": "<p>whitequark created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740#discussion_r428851046\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Fixed</p>\n</blockquote>",
        "id": 198361617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590087557
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1740\">PR #1740</a>.</p>",
        "id": 198370043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590091627
    }
]