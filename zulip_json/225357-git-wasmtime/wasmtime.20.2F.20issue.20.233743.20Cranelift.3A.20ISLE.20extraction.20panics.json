[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743\">issue #3743</a>:</p>\n<blockquote>\n<p>When I create a new extractor, one to extract the comparison flag from a comparison referenced by <code>select</code>, ISLE panics.</p>\n<h3>Steps to Reproduce</h3>\n<p>Add:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">FloatCC</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Inst</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">def_inst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fcmp</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then run:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">rebuild</span><span class=\"o\">-</span><span class=\"n\">isle</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The ISLE code to generate without failure.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"o\">!</span><span class=\"n\">tyenv</span><span class=\"p\">.</span><span class=\"n\">errors</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">sema</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1055</span>:<span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: latest <code>HEAD</code><br>\n</p>\n</blockquote>",
        "id": 269821530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643414830
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743\">issue #3743</a>:</p>\n<blockquote>\n<p>When I create a new extractor, one to extract the comparison flag from a comparison referenced by <code>select</code>, ISLE panics.</p>\n<h3>Steps to Reproduce</h3>\n<p>Add:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">FloatCC</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Inst</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">def_inst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fcmp</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then run:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">rebuild</span><span class=\"o\">-</span><span class=\"n\">isle</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The ISLE code to generate without failure.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"o\">!</span><span class=\"n\">tyenv</span><span class=\"p\">.</span><span class=\"n\">errors</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">sema</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1055</span>:<span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: latest <code>HEAD</code><br>\n</p>\n</blockquote>",
        "id": 269821531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643414830
    },
    {
        "content": "<p>abrown labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743\">issue #3743</a>:</p>\n<blockquote>\n<p>When I create a new extractor, one to extract the comparison flag from a comparison referenced by <code>select</code>, ISLE panics.</p>\n<h3>Steps to Reproduce</h3>\n<p>Add:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">FloatCC</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Inst</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">def_inst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fcmp</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then run:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">rebuild</span><span class=\"o\">-</span><span class=\"n\">isle</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The ISLE code to generate without failure.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"o\">!</span><span class=\"n\">tyenv</span><span class=\"p\">.</span><span class=\"n\">errors</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">sema</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1055</span>:<span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: latest <code>HEAD</code><br>\n</p>\n</blockquote>",
        "id": 269821532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643414830
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743#issuecomment-1024759782\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743\">issue #3743</a>:</p>\n<blockquote>\n<p>cc: @fitzgen </p>\n</blockquote>",
        "id": 269821542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643414839
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743#issuecomment-1026072789\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743\">issue #3743</a>:</p>\n<blockquote>\n<p>Standalone reproducer test case:</p>\n<p><div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">FloatCC</span> <span class=\"p\">(</span><span class=\"nv\">enum</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">Inst</span> <span class=\"p\">(</span><span class=\"nv\">enum</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">Value</span> <span class=\"p\">(</span><span class=\"nv\">enum</span><span class=\"p\">))</span>\n\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">ValueArray2</span> <span class=\"p\">(</span><span class=\"nv\">enum</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"nv\">decl</span> <span class=\"nv\">value_array_2</span> <span class=\"p\">(</span><span class=\"nv\">Value</span> <span class=\"nv\">Value</span><span class=\"p\">)</span> <span class=\"nv\">ValueArray2</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extern</span> <span class=\"nv\">constructor</span> <span class=\"nv\">value_array_2</span> <span class=\"nv\">pack_value_array_2</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extern</span> <span class=\"nv\">extractor</span> <span class=\"nv\">infallible</span> <span class=\"nv\">value_array_2</span> <span class=\"nv\">unpack_value_array_2</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">ValueArray3</span> <span class=\"p\">(</span><span class=\"nv\">enum</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"nv\">decl</span> <span class=\"nv\">value_array_3</span> <span class=\"p\">(</span><span class=\"nv\">Value</span> <span class=\"nv\">Value</span> <span class=\"nv\">Value</span><span class=\"p\">)</span> <span class=\"nv\">ValueArray3</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extern</span> <span class=\"nv\">constructor</span> <span class=\"nv\">value_array_3</span> <span class=\"nv\">pack_value_array_3</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extern</span> <span class=\"nv\">extractor</span> <span class=\"nv\">infallible</span> <span class=\"nv\">value_array_3</span> <span class=\"nv\">unpack_value_array_3</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"nv\">decl</span> <span class=\"nv\">inst_data</span> <span class=\"p\">(</span><span class=\"nv\">InstructionData</span><span class=\"p\">)</span> <span class=\"nv\">Inst</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extern</span> <span class=\"nv\">extractor</span> <span class=\"nv\">infallible</span> <span class=\"nv\">inst_data</span> <span class=\"nv\">inst_data</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">Opcode</span> <span class=\"nv\">extern</span> <span class=\"p\">(</span><span class=\"nv\">enum</span> <span class=\"nv\">Fcmp</span> <span class=\"nv\">Select</span><span class=\"p\">))</span>\n\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nv\">InstructionData</span> <span class=\"p\">(</span><span class=\"nv\">enum</span> <span class=\"p\">(</span><span class=\"nv\">FloatCompare</span> <span class=\"p\">(</span><span class=\"nv\">opcode</span> <span class=\"nv\">Opcode</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nv\">args</span> <span class=\"nv\">ValueArray2</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nb\">cond</span> <span class=\"nv\">FloatCC</span><span class=\"p\">))</span>\n                            <span class=\"p\">(</span><span class=\"nv\">Ternary</span> <span class=\"p\">(</span><span class=\"nv\">opcode</span> <span class=\"nv\">Opcode</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nv\">args</span> <span class=\"nv\">ValueArray3</span><span class=\"p\">))))</span>\n\n<span class=\"p\">(</span><span class=\"nv\">decl</span> <span class=\"nv\">def_inst</span> <span class=\"p\">(</span><span class=\"nv\">Inst</span><span class=\"p\">)</span> <span class=\"nv\">Value</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extern</span> <span class=\"nv\">extractor</span> <span class=\"nv\">def_inst</span> <span class=\"nv\">def_inst</span><span class=\"p\">)</span>\n\n<span class=\"p\">(</span><span class=\"nv\">decl</span> <span class=\"nv\">fcmp</span> <span class=\"p\">(</span><span class=\"nv\">FloatCC</span> <span class=\"nv\">Value</span> <span class=\"nv\">Value</span><span class=\"p\">)</span> <span class=\"nv\">Inst</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extractor</span>\n <span class=\"p\">(</span><span class=\"nv\">fcmp</span> <span class=\"nv\">Cond</span> <span class=\"nv\">x</span> <span class=\"nv\">y</span><span class=\"p\">)</span>\n <span class=\"p\">(</span><span class=\"nv\">inst_data</span> <span class=\"p\">(</span><span class=\"nv\">InstructionData.FloatCompare</span> <span class=\"p\">(</span><span class=\"nv\">Opcode.Fcmp</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nv\">value_array_2</span> <span class=\"nv\">x</span> <span class=\"nv\">y</span><span class=\"p\">)</span> <span class=\"nv\">Cond</span><span class=\"p\">)))</span>\n\n<span class=\"p\">(</span><span class=\"nv\">decl</span> <span class=\"nv\">select</span> <span class=\"p\">(</span><span class=\"nv\">Value</span> <span class=\"nv\">Value</span> <span class=\"nv\">Value</span><span class=\"p\">)</span> <span class=\"nv\">Inst</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extractor</span>\n <span class=\"p\">(</span><span class=\"nv\">select</span> <span class=\"nv\">c</span> <span class=\"nv\">x</span> <span class=\"nv\">y</span><span class=\"p\">)</span>\n <span class=\"p\">(</span><span class=\"nv\">inst_data</span> <span class=\"p\">(</span><span class=\"nv\">InstructionData.Ternary</span> <span class=\"p\">(</span><span class=\"nv\">Opcode.Select</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"nv\">value_array_3</span> <span class=\"nv\">c</span> <span class=\"nv\">x</span> <span class=\"nv\">y</span><span class=\"p\">))))</span>\n\n<span class=\"p\">(</span><span class=\"nv\">decl</span> <span class=\"nv\">select_fcmp_flag</span> <span class=\"p\">(</span><span class=\"nv\">FloatCC</span><span class=\"p\">)</span> <span class=\"nv\">Inst</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extractor</span> <span class=\"p\">(</span><span class=\"nv\">select_fcmp_flag</span> <span class=\"nv\">comparison_flag</span><span class=\"p\">)</span>\n           <span class=\"p\">(</span><span class=\"nv\">select</span> <span class=\"p\">(</span><span class=\"nv\">def_inst</span> <span class=\"p\">(</span><span class=\"nv\">fcmp</span> <span class=\"nv\">comparison_flag</span> <span class=\"nv\">a</span> <span class=\"nv\">b</span><span class=\"p\">))</span> <span class=\"nv\">x</span> <span class=\"nv\">y</span><span class=\"p\">))</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 270079122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643653213
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743\">issue #3743</a>:</p>\n<blockquote>\n<p>When I create a new extractor, one to extract the comparison flag from a comparison referenced by <code>select</code>, ISLE panics.</p>\n<h3>Steps to Reproduce</h3>\n<p>Add:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">FloatCC</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Inst</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">select_fcmp_flag</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">def_inst</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fcmp</span><span class=\"w\"> </span><span class=\"n\">comparison_flag</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then run:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">rebuild</span><span class=\"o\">-</span><span class=\"n\">isle</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The ISLE code to generate without failure.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">stderr</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"o\">!</span><span class=\"n\">tyenv</span><span class=\"p\">.</span><span class=\"n\">errors</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">sema</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1055</span>:<span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: latest <code>HEAD</code><br>\n</p>\n</blockquote>",
        "id": 271875392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644866544
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743#issuecomment-1039466640\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3743\">issue #3743</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 271875765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644866704
    }
]