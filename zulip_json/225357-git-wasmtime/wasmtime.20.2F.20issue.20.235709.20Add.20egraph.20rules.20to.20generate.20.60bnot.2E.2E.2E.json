[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5709#issuecomment-1416588195\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5709\">issue #5709</a>:</p>\n<blockquote>\n<p>Alternatively instead of modifying clif one possibility would be to split apart band_not during either legalization or during egraph optimizations and then have the backend pattern match both band_not and (band (bnot ..))</p>\n</blockquote>",
        "id": 325753145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675473779
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5709#issuecomment-1416591678\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5709\">issue #5709</a>:</p>\n<blockquote>\n<p>The general tack we've taken is to decompose ops, so yes, removing the <code>_not</code> variants and making backends match when able to use <code>andn</code> instructions seems like the better approach here. In general the more \"normalized\" our IR is, the easier it'll be to write rules that apply appropriately. cc @elliottt -- something we can think about next week...</p>\n</blockquote>",
        "id": 325753519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675474081
    }
]