[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a> from <code>parse-run-commands</code> to <code>master</code>:</p>\n<blockquote>\n<p>This PR adds the ability to parse CLIF run commands like <code>run: %fn0(42, 4.2) == true</code>. It seems like a good first step towards closing out <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>; it also factors out some of the functionality that was implemented separately in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1223\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1223\">https://github.com/bytecodealliance/wasmtime/pull/1223</a> and incorporates it into cranelift-reader.</p>\n<p>My plan is to use this parsing in <code>FunctionRunner</code> to:</p>\n<ul>\n<li>compare the results of running CLIF functions to values other than <code>true</code> (the current hard-coded behavior); this would be useful in testing</li>\n<li>print the results of running a function in <code>FunctionRunner</code> with, e.g.,  <code>print: %fn(42)</code> (this was the original point of <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>)</li>\n<li>allow running CLIF functions with varied signatures; currently <code>FunctionRunner</code> can only run functions of <code>() -&gt; b*</code>. To do this, I think I need to do something along the lines of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\"><code>WasmTy</code></a> or <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\"><code>Val</code></a> in wasmtime-api. @alexcrichton, what do you think? <code>ValueData</code> is a bit like <code>Val</code> and I will need to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\">cast the function compiled by <code>FunctionRunner</code></a> to types known at runtime.</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 192309757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585598390
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/nbp\" title=\"https://github.com/nbp\">nbp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a>.</p>",
        "id": 192309772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585598398
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\" title=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/nbp\" title=\"https://github.com/nbp\">nbp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a>.</p>",
        "id": 192309839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585598409
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a> from <code>parse-run-commands</code> to <code>master</code>:</p>\n<blockquote>\n<p>This PR adds the ability to parse CLIF run commands like <code>run: %fn0(42, 4.2) == true</code>. It seems like a good first step towards closing out <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>; it also factors out some of the functionality that was implemented separately in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1223\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1223\">https://github.com/bytecodealliance/wasmtime/pull/1223</a> and incorporates it into cranelift-reader.</p>\n<p>My plan is to use this parsing in <code>FunctionRunner</code> to:</p>\n<ul>\n<li>compare the results of running CLIF functions to values other than <code>true</code> (the current hard-coded behavior); this would be useful in testing</li>\n<li>print the results of running a function in <code>FunctionRunner</code> with, e.g.,  <code>print: %fn(42)</code> (this was the original point of <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>)</li>\n<li>allow running CLIF functions with varied signatures; currently <code>FunctionRunner</code> can only run functions of <code>() -&gt; b*</code>. To do this, I think I need to do something along the lines of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\"><code>WasmTy</code></a> or <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\"><code>Val</code></a> in wasmtime-api. @alexcrichton, what do you think? <code>ValueData</code> is a bit like <code>Val</code> and I will need to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\">cast the function compiled by <code>FunctionRunner</code></a> to types known at runtime.</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 192314249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585600756
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a> from <code>parse-run-commands</code> to <code>master</code>:</p>\n<blockquote>\n<p>This PR adds the ability to parse CLIF run commands like <code>run: %fn0(42, 4.2) == true</code>. It seems like a good first step towards closing out <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>; it also factors out some of the functionality that was implemented separately in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1223\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1223\">https://github.com/bytecodealliance/wasmtime/pull/1223</a> and incorporates it into cranelift-reader.</p>\n<p>My plan is to use this parsing in <code>FunctionRunner</code> to:</p>\n<ul>\n<li>compare the results of running CLIF functions to values other than <code>true</code> (the current hard-coded behavior); this would be useful in testing</li>\n<li>print the results of running a function in <code>FunctionRunner</code> with, e.g.,  <code>print: %fn(42)</code> (this was the original point of <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>)</li>\n<li>allow running CLIF functions with varied signatures; currently <code>FunctionRunner</code> can only run functions of <code>() -&gt; b*</code>. To do this, I think I need to do something along the lines of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\"><code>WasmTy</code></a> or <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\"><code>Val</code></a> in wasmtime-api. @alexcrichton, what do you think? <code>ValueData</code> is a bit like <code>Val</code> and I will need to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\">cast the function compiled by <code>FunctionRunner</code></a> to types known at runtime.</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 192321731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585604928
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\" title=\"https://github.com/alexcrichton\">alexcrichton</a>, <a href=\"https://github.com/nbp\" title=\"https://github.com/nbp\">nbp</a> and <a href=\"https://github.com/bnjbvr\" title=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a>.</p>",
        "id": 192427852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585678182
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387394334\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387394334\">PR Review</a>.</p>",
        "id": 192837373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585934566
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387394334\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387394334\">PR Review</a>.</p>",
        "id": 192837374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585934566
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403114616\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403114616\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The 8 should be a 16 here, since we want to parse as hexadecimal, right? (if i'm correct, can you add a test case for this, please?)</p>\n<p>Also, why do we parse it as a u16? Would this allow numbers above the imm8 range?</p>\n</blockquote>",
        "id": 192837375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585934566
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403115157\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403115157\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: can you do <code>let value = if text.starts_with... {} else {};</code> instead? (avoids the mut qualifier on value)</p>\n</blockquote>",
        "id": 192837376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585934566
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403167421\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403167421\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Isn't this possibly inferred by the compiler for Vec&lt;T&gt; when T implements Display? Or can we use <code>{:?}</code> for the Vec&lt;T&gt; type and it'll do the right thing here?</p>\n</blockquote>",
        "id": 192837377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585934566
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403116241\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403116241\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: I think you can remove both the Ok and ? here, right?</p>\n</blockquote>",
        "id": 192837378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585934566
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387501115\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387501115\">PR Review</a>.</p>",
        "id": 192848500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585939760
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403241319\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403241319\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, good point!</p>\n</blockquote>",
        "id": 192848503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585939760
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387512980\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387512980\">PR Review</a>.</p>",
        "id": 192850841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585940908
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403253508\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403253508\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this was introduced in 2300eec8 so I went ahead and took the same <code>let value = ...</code> approach for <code>i16</code> and <code>i32</code>.</p>\n</blockquote>",
        "id": 192850842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585940908
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387513240\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387513240\">PR Review</a>.</p>",
        "id": 192850900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585940933
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403253712\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403253712\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, and similarly removed this in <code>i16</code> and <code>i32</code>.</p>\n</blockquote>",
        "id": 192850902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585940933
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a> from <code>parse-run-commands</code> to <code>master</code>:</p>\n<blockquote>\n<p>This PR adds the ability to parse CLIF run commands like <code>run: %fn0(42, 4.2) == true</code>. It seems like a good first step towards closing out <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>; it also factors out some of the functionality that was implemented separately in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1223\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1223\">https://github.com/bytecodealliance/wasmtime/pull/1223</a> and incorporates it into cranelift-reader.</p>\n<p>My plan is to use this parsing in <code>FunctionRunner</code> to:</p>\n<ul>\n<li>compare the results of running CLIF functions to values other than <code>true</code> (the current hard-coded behavior); this would be useful in testing</li>\n<li>print the results of running a function in <code>FunctionRunner</code> with, e.g.,  <code>print: %fn(42)</code> (this was the original point of <a href=\"https://github.com/bytecodealliance/cranelift/pull/1231\" title=\"https://github.com/bytecodealliance/cranelift/pull/1231\">https://github.com/bytecodealliance/cranelift/pull/1231</a>)</li>\n<li>allow running CLIF functions with varied signatures; currently <code>FunctionRunner</code> can only run functions of <code>() -&gt; b*</code>. To do this, I think I need to do something along the lines of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/func.rs#L734\"><code>WasmTy</code></a> or <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/crates/api/src/values.rs#L9\"><code>Val</code></a> in wasmtime-api. @alexcrichton, what do you think? <code>ValueData</code> is a bit like <code>Val</code> and I will need to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/filetests/src/function_runner.rs#L79\">cast the function compiled by <code>FunctionRunner</code></a> to types known at runtime.</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 192851556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585941249
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387516798\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387516798\">PR Review</a>.</p>",
        "id": 192851640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585941292
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403256652\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403256652\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is fixed: <code>u8::from_str_radix(&amp;text[2..], 16)</code></p>\n</blockquote>",
        "id": 192851642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585941292
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387525045\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387525045\">PR Review</a>.</p>",
        "id": 192853098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585942113
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403263596\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403263596\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It complained that I hadn't implemented <code>Debug</code> for <code>T</code>, IIRC. I think this boils down to: how do I use the <code>Display</code> of <code>T</code> as a <code>Debug</code> so that I can use the <code>Debug</code> of <code>Vec&lt;T&gt;</code>? Preferably without adding <code>Debug</code> to the whole type hierarchy of <code>T</code>... I don't yet see a good Rust-y way of doing this.</p>\n</blockquote>",
        "id": 192853099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585942113
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387557467\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#pullrequestreview-387557467\">PR Review</a>.</p>",
        "id": 192859308,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585945486
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403306471\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436#discussion_r403306471\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@alexcrichton suggested I use <code>impl Display</code> instead of <code>DataValue</code>, which is a good solution to avoid this function; but I remembered that I made this because sometimes I need the data values enclosed in parentheses and sometimes in brackets. E.g. <code>%fn() = [1, 2, 3]</code> vs <code>%fn(1, 2, 3) == 42</code>. I'm going to leave this function in for that reason.</p>\n</blockquote>",
        "id": 192859309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585945486
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1436\">PR #1436</a>.</p>",
        "id": 192859359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585945512
    }
]