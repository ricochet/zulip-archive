[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a>.</p>",
        "id": 438601155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715700503
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a>.</p>",
        "id": 438601156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715700503
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a> from <code>alexcrichton:remove-another-page-based-variable</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit changes the wasm-page-sized <code>static_memory_bound</code> field to instead being a byte-defined unit rather than a page-defined unit. To accomplish this the field is renamed to <code>static_memory_reservation</code> and all references are updated. This builds on the support from #8608 to remove another page-based variable from the internals of Wasmtime.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 438601158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715700503
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a>.</p>",
        "id": 438606288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715702216
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616#pullrequestreview-2055878385\">PR review</a>:</p>\n<blockquote>\n<p>Looks good to me! I think consistently using bytes is just better; when I was mucking around in the pooling allocator it was always tricky to understand whether variables were page-based or byte-based. I remember having to handle a lot of overflow conditions which I found by <code>proptest</code>-ing... I assume that was handled somewhere else?</p>\n</blockquote>",
        "id": 438611178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715703731
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616#issuecomment-2110648818\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a>:</p>\n<blockquote>\n<p>Yeah I think most of those were handled in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8608\">https://github.com/bytecodealliance/wasmtime/pull/8608</a> although there's still <code>memory_pages</code> in the pooling allocator which I'd like to remove as well and is probably also a large source of overflow checks.</p>\n</blockquote>",
        "id": 438611921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715703982
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616#issuecomment-2110666606\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think consistently using bytes is just better</p>\n</blockquote>\n<p>Agreed, especially since it is effectively necessary to support the custom-page-sizes proposal.</p>\n<blockquote>\n<p>when I was mucking around in the pooling allocator it was always tricky to understand whether variables were page-based or byte-based</p>\n</blockquote>\n<p>I think we should probably start newtyping our units. Way back when I wrote some stuff like this for <code>wee_alloc</code> and then someone pulled it out into a crate: <a href=\"https://docs.rs/memory_units\">https://docs.rs/memory_units</a></p>\n<p>Don't think we want to use exactly that, but more that kind of thing.</p>\n</blockquote>",
        "id": 438613610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715704533
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616#issuecomment-2110676034\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a>:</p>\n<blockquote>\n<blockquote>\n<p>Don't think we want to use exactly that, but more that kind of thing.</p>\n</blockquote>\n<p>I agree. That's inside the code base, but even from a CLI perspective I found it useful to use <code>bytesize</code> in the <code>mpk.rs</code> example to more easily just pass in strings like \"4KiB\" or whatever instead of having to do mental math.</p>\n</blockquote>",
        "id": 438614616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715704865
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8616\">PR #8616</a>.</p>",
        "id": 438615974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715705365
    }
]