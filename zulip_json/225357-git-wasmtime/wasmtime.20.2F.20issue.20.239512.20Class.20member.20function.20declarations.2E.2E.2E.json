[
    {
        "content": "<p>SingleAccretion opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9512\">issue #9512</a>:</p>\n<blockquote>\n<p>Reproduction:</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">Main</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">someclass</span><span class=\"p\">.</span><span class=\"n\">h</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">SomeClass</span>\n<span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">Main</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeFunc</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SomeFunc</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"p\">};</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">SeparateFunction</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">SomeClass</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"cp\">$env</span><span class=\"p\">:</span><span class=\"nc\">WASI_SDK_PATH</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">g3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">wasip2</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ddebug</span><span class=\"o\">-</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">r</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">While</span><span class=\"w\"> </span><span class=\"n\">broken</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">c</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n</code></pre></div>\n<p>Expected result: evaluation succeeds.</p>\n<p>Actual result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"mh\">0x1550de50e60</span><span class=\"p\">)(</span><span class=\"mh\">0x000001550de50e60</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"mh\">0x000002a4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">DW_AT_specification</span><span class=\"p\">(</span><span class=\"mh\">0x0000000000000291</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">decl</span>\n\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wrapper</span><span class=\"w\"> </span><span class=\"n\">prefix</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">45</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"cp\">$__lldb_local_vars</span><span class=\"o\">'</span>\n<span class=\"w\">   </span><span class=\"mi\">45</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"cp\">$__lldb_local_vars</span><span class=\"p\">::</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">^</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"sc\">'x'</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">^</span>\n</code></pre></div>\n<p>The tentative root case of this is that debug info translation discards <code>DW_AT_declaration</code> DIEs for the member functions, leading to the two CUs (that both have <code>SomeClass</code> type DIEs) diverging (and LLDB ultimately ultimately caching information from the one first accessed, here <code>main.cpp</code>).</p>\n</blockquote>",
        "id": 478769065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729791784
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9512\">issue #9512</a>:</p>\n<blockquote>\n<p>Reproduction:</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">Main</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">someclass</span><span class=\"p\">.</span><span class=\"n\">h</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">SomeClass</span>\n<span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">Main</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeFunc</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SomeFunc</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"p\">};</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">SeparateFunction</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">SomeClass</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"cp\">$env</span><span class=\"p\">:</span><span class=\"nc\">WASI_SDK_PATH</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">g3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">wasip2</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ddebug</span><span class=\"o\">-</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">r</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">While</span><span class=\"w\"> </span><span class=\"n\">broken</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">c</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n</code></pre></div>\n<p>Expected result: evaluation succeeds.</p>\n<p>Actual result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"mh\">0x1550de50e60</span><span class=\"p\">)(</span><span class=\"mh\">0x000001550de50e60</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"mh\">0x000002a4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">DW_AT_specification</span><span class=\"p\">(</span><span class=\"mh\">0x0000000000000291</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">decl</span>\n\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wrapper</span><span class=\"w\"> </span><span class=\"n\">prefix</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">45</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"cp\">$__lldb_local_vars</span><span class=\"o\">'</span>\n<span class=\"w\">   </span><span class=\"mi\">45</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"cp\">$__lldb_local_vars</span><span class=\"p\">::</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">^</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"sc\">'x'</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">^</span>\n</code></pre></div>\n<p>The tentative root case of this is that debug info translation discards <code>DW_AT_declaration</code> DIEs for the member functions, leading to the two CUs (that both have <code>SomeClass</code> type DIEs) diverging (and LLDB ultimately ultimately caching information from the one first accessed, here <code>main.cpp</code>).</p>\n</blockquote>",
        "id": 478769157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729791830
    },
    {
        "content": "<p>SingleAccretion edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9512\">issue #9512</a>:</p>\n<blockquote>\n<p>Reproduction:</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">Main</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">someclass</span><span class=\"p\">.</span><span class=\"n\">h</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">SomeClass</span>\n<span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">Main</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeFunc</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SomeFunc</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"p\">};</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">SeparateFunction</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">SomeClass</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"cp\">$env</span><span class=\"p\">:</span><span class=\"nc\">WASI_SDK_PATH</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">g3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">wasip2</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ddebug</span><span class=\"o\">-</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">r</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">While</span><span class=\"w\"> </span><span class=\"n\">broken</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">c</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n</code></pre></div>\n<p>Expected result: evaluation succeeds.</p>\n<p>Actual result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"mh\">0x1550de50e60</span><span class=\"p\">)(</span><span class=\"mh\">0x000001550de50e60</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"mh\">0x000002a4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">DW_AT_specification</span><span class=\"p\">(</span><span class=\"mh\">0x0000000000000291</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">decl</span>\n\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wrapper</span><span class=\"w\"> </span><span class=\"n\">prefix</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">45</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"cp\">$__lldb_local_vars</span><span class=\"o\">'</span>\n<span class=\"w\">   </span><span class=\"mi\">45</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"cp\">$__lldb_local_vars</span><span class=\"p\">::</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">^</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"sc\">'x'</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">^</span>\n</code></pre></div>\n<p>The tentative root case of this is that debug info translation discards <code>DW_AT_declaration</code> DIEs for the member functions, leading to the two CUs (that both have <code>SomeClass</code> type DIEs) diverging (and LLDB ultimately caching information from the one first accessed, here <code>main.cpp</code>).</p>\n</blockquote>",
        "id": 478769615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729792018
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasmtime:debugging label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9512\">Issue #9512</a>.</p>",
        "id": 478777049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729795028
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9512\">issue #9512</a>:</p>\n<blockquote>\n<p>Reproduction:</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">Main</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">someclass</span><span class=\"p\">.</span><span class=\"n\">h</span>\n<span class=\"k\">class</span><span class=\"w\"> </span><span class=\"nc\">SomeClass</span>\n<span class=\"p\">{</span>\n<span class=\"k\">public</span><span class=\"o\">:</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">Main</span><span class=\"p\">()</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeFunc</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SomeFunc</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">z</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">SeparateFunction</span><span class=\"p\">();</span>\n<span class=\"p\">};</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">\"someclass.h\"</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"o\">::</span><span class=\"n\">SeparateFunction</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">SomeClass</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">SomeClass</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"cp\">$env</span><span class=\"p\">:</span><span class=\"nc\">WASI_SDK_PATH</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"n\">satellite</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">g3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">wasip2</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ccache</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Ddebug</span><span class=\"o\">-</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Oopt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">SeparateFunction</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">r</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">While</span><span class=\"w\"> </span><span class=\"n\">broken</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">c</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n</code></pre></div>\n<p>Expected result: evaluation succeeds.</p>\n<p>Actual result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"n\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">JIT</span><span class=\"p\">(</span><span class=\"mh\">0x1550de50e60</span><span class=\"p\">)(</span><span class=\"mh\">0x000001550de50e60</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"mh\">0x000002a4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">DW_AT_specification</span><span class=\"p\">(</span><span class=\"mh\">0x0000000000000291</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">decl</span>\n\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wrapper</span><span class=\"w\"> </span><span class=\"n\">prefix</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">45</span><span class=\"p\">:</span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"cp\">$__lldb_local_vars</span><span class=\"o\">'</span>\n<span class=\"w\">   </span><span class=\"mi\">45</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"cp\">$__lldb_local_vars</span><span class=\"p\">::</span><span class=\"n\">x</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">^</span>\n<span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"w\"> </span><span class=\"sc\">'x'</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">SomeMemberVariable</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"o\">^</span>\n</code></pre></div>\n<p>The tentative root case of this is that debug info translation discards <code>DW_AT_declaration</code> DIEs for the member functions, leading to the two CUs (that both have <code>SomeClass</code> type DIEs) diverging (and LLDB ultimately caching information from the one first accessed, here <code>main.cpp</code>).</p>\n</blockquote>",
        "id": 481015962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1730934816
    }
]