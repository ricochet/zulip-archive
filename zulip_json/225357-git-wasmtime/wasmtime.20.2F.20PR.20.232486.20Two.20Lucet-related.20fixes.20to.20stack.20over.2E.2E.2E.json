[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486\">PR #2486</a>.</p>",
        "id": 219152663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607383425
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486\">PR #2486</a> from <code>fix-probestack</code> to <code>main</code>:</p>\n<blockquote>\n<p>Lucet uses stack probes rather than explicit stack limit checks as<br>\nWasmtime does. In <a href=\"https://github.com/bytecodealliance/lucet/issues/616\">bytecodealliance/lucet#616</a>, I have discovered that I<br>\npreviously was not running some Lucet runtime tests with the new<br>\nbackend, so was missing some test failures due to missing pieces in the<br>\nnew backend.</p>\n<p>This PR adds (i) calls to probestack, when enabled, in the prologue of<br>\nevery function with a stack frame larger than one page (configurable via<br>\nflags); and (ii) trap metadata for every instruction on x86-64 that can<br>\naccess the stack, hence be the first point at which a stack overflow is<br>\ndetected when the stack pointer is decremented.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 219152664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607383425
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486\">PR #2486</a>.</p>",
        "id": 219152665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607383425
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486#pullrequestreview-546630572\">PR Review</a>.</p>",
        "id": 219153666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607384222
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486#discussion_r537917118\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could these <code>add_trap</code> be conditional only if probestack is enabled? Otherwise for a scheme like wasmtime uses I don't think these instructions can trap</p>\n</blockquote>",
        "id": 219153667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607384222
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486#pullrequestreview-546630572\">PR Review</a>.</p>",
        "id": 219153668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607384222
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486#discussion_r537917188\">PR Review Comment</a>:</p>\n<blockquote>\n<p>(ditto for the other <code>add_trap</code> here as well)</p>\n</blockquote>",
        "id": 219153669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607384222
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486#pullrequestreview-546644448\">PR Review</a>.</p>",
        "id": 219156126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607386162
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486#discussion_r537930978\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Indeed, good point!</p>\n</blockquote>",
        "id": 219156127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607386162
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486\">PR #2486</a> from <code>fix-probestack</code> to <code>main</code>:</p>\n<blockquote>\n<p>Lucet uses stack probes rather than explicit stack limit checks as<br>\nWasmtime does. In <a href=\"https://github.com/bytecodealliance/lucet/issues/616\">bytecodealliance/lucet#616</a>, I have discovered that I<br>\npreviously was not running some Lucet runtime tests with the new<br>\nbackend, so was missing some test failures due to missing pieces in the<br>\nnew backend.</p>\n<p>This PR adds (i) calls to probestack, when enabled, in the prologue of<br>\nevery function with a stack frame larger than one page (configurable via<br>\nflags); and (ii) trap metadata for every instruction on x86-64 that can<br>\naccess the stack, hence be the first point at which a stack overflow is<br>\ndetected when the stack pointer is decremented.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 219156135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607386176
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2486\">PR #2486</a>.</p>",
        "id": 219158693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607388460
    }
]