[
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7471\">PR #7471</a>.</p>",
        "id": 400132463,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699017596
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7471\">PR #7471</a>.</p>",
        "id": 400132464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699017596
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7471\">PR #7471</a> from <code>afonso360:riscv64-compress-adjust-sp</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is a small RISC-V specific follow up to #7470. I noticed that we don't always compress the adjust sp instruction when we could do so.</p>\n<p>In the cases where we have build a constant in a temporary register and then <code>add</code> it to the <code>sp</code>, we encode the registers in a way that was preventing the compressed instruction from being emitted. Currently we only compress an <code>add</code> if the destination register is the same as the first source register. This is the canonical expansion of <code>c.add</code>.</p>\n<p>This PR does two things. </p>\n<ul>\n<li>I've switched the add instruction to have the stack pointer as the first register. i.e. <code>add sp, t?, sp</code> -&gt; <code>add sp, sp, t?</code>. This allows us to compress that instruction with the current emit code.</li>\n<li>I've updated the emit code to recognize this pattern and flip the source register when emitting the compressed add. This in theory should allow us to emit this instruction more frequently.</li>\n</ul>\n<p>Theoretically we only need the second step to solve this, but I've decided to also change <code>adjust_sp</code> since its the canonical representation, and at least to me is visually neater having sp as the first source register.</p>\n<p>This is built on top of #7470, but only the last two commits belong to this PR.</p>\n</blockquote>",
        "id": 400132466,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699017596
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7471#pullrequestreview-1712880250\">PR review</a>.</p>",
        "id": 400148090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699022843
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7471\">PR #7471</a>.</p>",
        "id": 400206424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699046320
    },
    {
        "content": "<p>afonso360 has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7471\">PR #7471</a>.</p>",
        "id": 400206506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699046398
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7471\">PR #7471</a>.</p>",
        "id": 400214757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699051511
    }
]