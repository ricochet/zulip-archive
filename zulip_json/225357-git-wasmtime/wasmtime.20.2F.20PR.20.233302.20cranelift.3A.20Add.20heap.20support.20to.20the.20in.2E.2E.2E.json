[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302\">PR #3302</a> from <code>interp-heap</code> to <code>main</code>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>This PR adds heap support to the interpreter and support for heap tests for <code>test interpret</code>.</p>\n</blockquote>",
        "id": 252021848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630784778
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-746592014\">PR review</a>.</p>",
        "id": 252022290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630785255
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r702322139\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not entirely sure this belongs here.</p>\n<p>I had this separately in <code>InterpreterState::get_heap_address</code>, but I didn't want to duplicate the bounds checking done on this function.</p>\n<p>Since bounds checking is only required as part of the runtime guarantees (for <code>heap_address</code> in addressable memory), I think it would make sense to put this back in <code>get_heap_address</code>, but also means we then have <code>InterpreterState::get_heap_address</code> and <code>InterpreterState::heap_address</code> which do something different.</p>\n</blockquote>",
        "id": 252022291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630785255
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-746592583\">PR review</a>.</p>",
        "id": 252022814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630785808
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r702323004\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not too happy with this interface as a way to register a VMContext struct.</p>\n<p>We need to have a way to address this struct, and currently we only have Stack and Heap addresses. Adding a whole new region just for VMContext structs seems a bit much, but this is also not very clear.</p>\n</blockquote>",
        "id": 252022815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630785808
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r702322139\">PR review comment</a>.</p>",
        "id": 252022920,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630785933
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r702323004\">PR review comment</a>.</p>",
        "id": 252023192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630786216
    },
    {
        "content": "<p>afonso360 deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r702323004\">PR review comment</a>.</p>",
        "id": 252047058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630813983
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r702322139\">PR review comment</a>.</p>",
        "id": 252069522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630840595
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302\">PR #3302</a> from <code>interp-heap</code> to <code>main</code>.</p>",
        "id": 252938082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631397301
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-774245721\">PR review</a>.</p>",
        "id": 256633675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633634048
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r724460344\">PR review comment</a>:</p>\n<blockquote>\n<p>At a high level, I'm not sure I fully grok what's going on here: the heap base is itself an address with a heap and offset component? In other words, do heaps resolve into regions within other heaps? If so, could you add a comment here (or a toplevel one somewhere) describing how the resolution works?</p>\n</blockquote>",
        "id": 256633676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633634049
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r724458458\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this be <code>!= 0</code>? (I haven't fully internalized the interpreter state data structures so I could be misunderstanding what <code>frame_stack</code> actually means.)</p>\n</blockquote>",
        "id": 256633677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633634049
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-774245721\">PR review</a>.</p>",
        "id": 256633678,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633634049
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r724423566\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there a reason for the trailing underscore here? Otherwise <code>static_heap_i64</code> seems fine to me.</p>\n</blockquote>",
        "id": 256633679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633634049
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r724424624\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah -- does this have to do with the maximum test identifier length? If so, just choosing shorter names (rather than truncating them) seems like a good solution. </p>\n</blockquote>",
        "id": 256633680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633634049
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-1019461624\">PR review</a>.</p>",
        "id": 287505310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656265555
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r906851238\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh wow, yes it should. And the branches in the if are also swapped. <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n</blockquote>",
        "id": 287505311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656265555
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302\">PR #3302</a> from <code>interp-heap</code> to <code>main</code>.</p>",
        "id": 287573848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656334826
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302\">PR #3302</a> from <code>interp-heap</code> to <code>main</code>.</p>",
        "id": 287574137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656334941
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-1020172003\">PR review</a>.</p>",
        "id": 287575113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656335397
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r907371365\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>the heap base is itself an address with a heap and offset component?<br>\nWell, yes it could be. Resolving global values means that that address could be anywhere in memory, even in the stack. </p>\n</blockquote>\n<blockquote>\n<p>In other words, do heaps resolve into regions within other heaps?<br>\nYes, we can have multiple CLIF Heaps that resolve to the same heap in the interpreter.</p>\n</blockquote>\n<p>This function was quite a bit confusing because we used the same <code>Heap</code> type to mean both a CLIF Heap and a Interpreter Heap. I've now separated those two into separate types, and the function now<br>\nonly does CLIF Heap resolution.</p>\n</blockquote>",
        "id": 287575114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656335397
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r907371365\">PR review comment</a>.</p>",
        "id": 287575220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656335453
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r907371365\">PR review comment</a>.</p>",
        "id": 287575232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656335460
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r907371365\">PR review comment</a>.</p>",
        "id": 287575249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656335468
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912099781\">PR review comment</a>:</p>\n<blockquote>\n<p>If I understand this right, it is building a vmctx out of a linear layout of (base, length) tuples, but don't the heap directives at least for the runtests allow us to put the base and length pointers at arbitrary vmctx offsets? Do we need to consider that here? (If not, a comment would help!)</p>\n</blockquote>",
        "id": 288195531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656693368
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912102990\">PR review comment</a>:</p>\n<blockquote>\n<p>Do we need to check here that the length of the backing vec is at least as large as the size that was claimed in the <code>; heap: ...</code> directives, or somehow connect to that? Or is there an invariant that we will extend it if needed?</p>\n</blockquote>",
        "id": 288195532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656693368
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912101950\">PR review comment</a>:</p>\n<blockquote>\n<p>s/its/it's/</p>\n</blockquote>",
        "id": 288195533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656693368
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912101652\">PR review comment</a>:</p>\n<blockquote>\n<p>s/essential/essentially/</p>\n</blockquote>",
        "id": 288195534,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656693368
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-1026425171\">PR review</a>.</p>",
        "id": 288195535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656693368
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912104103\">PR review comment</a>:</p>\n<blockquote>\n<p>stray type annotation in comment -- remove?</p>\n</blockquote>",
        "id": 288195536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656693368
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-1026425171\">PR review</a>.</p>",
        "id": 288195537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656693368
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-1026762226\">PR review</a>.</p>",
        "id": 288272653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656771503
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912367304\">PR review comment</a>:</p>\n<blockquote>\n<p>We had that design at the beginning but eventually settled on having the annotations in the <code>; heap</code> directive but forcing them to a linear layout of tuples. This is enforced when parsing the heap directives.</p>\n<p>I've added a comment clarifying this.<br>\n</p>\n</blockquote>",
        "id": 288272654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656771503
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-1026763553\">PR review</a>.</p>",
        "id": 288273581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656772612
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912368933\">PR review comment</a>:</p>\n<blockquote>\n<p>This function here is somewhat independent of the testing infrastructure. And the interpreter doesn't really care about the size of the backing memory, since out of bounds writes/reads generate a trap.</p>\n<p>The memory is allocated by the <code>RuntestEnvironment</code> struct which is the same struct that parses the <code>heap</code> directives. From there we just pass that memory directly into the interpreter, this happens in <code>test_interpret.rs</code> that's where we enforce that the heaps have the same size as the directives.</p>\n</blockquote>",
        "id": 288273582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656772613
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#discussion_r912368933\">PR review comment</a>.</p>",
        "id": 288273589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656772628
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302\">PR #3302</a> from <code>interp-heap</code> to <code>main</code>.</p>",
        "id": 288273674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656772741
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302#pullrequestreview-1028878904\">PR review</a>.</p>",
        "id": 288552036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657037119
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3302\">PR #3302</a>.</p>",
        "id": 288552056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657037129
    }
]