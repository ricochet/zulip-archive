[
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360792921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684935528
    },
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a> from <code>saulecabrera:winch-drop-func-env</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is a small cleanup to drop the usage of the <code>FuncEnv</code> trait.</p>\n<p>In <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6358\">https://github.com/bytecodealliance/wasmtime/pull/6358</a>, we agreed on making <code>winch-codegen</code> directly depend on <code>wasmtime-environ</code>.</p>\n<p>Introducing a direct relatioship between <code>winch-codegen</code> and <code>wasmtime-environ</code> means that the <code>FuncEnv</code> trait is no longer serving its original purpose, and we can drop the usage of the trait and use the types exposed from <code>winch-codegen</code> directly instead.</p>\n<p>Even though this change drops the <code>FuncEnv</code> trait, it still keeps a <code>FuncEnv</code> struct, which is used during code generation.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 360792922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684935528
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360792928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684935529
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360792929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684935529
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360792931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684935529
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360792932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684935529
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360796774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684936379
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443#pullrequestreview-1442110260\">PR review</a>.</p>",
        "id": 360814590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684940088
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443#pullrequestreview-1442110260\">PR review</a>.</p>",
        "id": 360814592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684940088
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443#discussion_r1204315672\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not all that familiar with the design of these generics, but I would naively expect that a choice of either <code>MacroAssembler</code> or <code>ABI</code> would imply <code>PtrSize</code>. If that's the case would it perhaps be possible to have <code>P</code> be an associated type of either prior trait?</p>\n<p>Or would it, for example, make sense to put both <code>ABI</code> and <code>PtrSize</code> inside of the <code>MacroAssembler</code> trait as an associated type?</p>\n</blockquote>",
        "id": 360814593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684940088
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443#discussion_r1204357383\">PR review comment</a>:</p>\n<blockquote>\n<p>That makes sense. Taking a closer look, I'm leaning towards having the <code>PtrSize</code> as an associated type inside the <code>ABI</code> trait, which already provides similar information (e.g. <code>word_bytes</code>).</p>\n</blockquote>",
        "id": 360819748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684941169
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443#discussion_r1204487626\">PR review comment</a>:</p>\n<blockquote>\n<p>Upon a second look, having both of these as associated types in the <code>MacroAssembler</code> makes more sense I think, and it's going to result in quite a decent cut in boilerplate. I started working on the change, but I'm anticipating that it's going to be a decent amount of changes unrelated to this PR, so I think I prefer landing this and putting the refactor once this lands. </p>\n</blockquote>",
        "id": 360840763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684946154
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443#discussion_r1204489442\">PR review comment</a>:</p>\n<blockquote>\n<p>It's also in my todo to standardize the signatures in the <code>ABI</code> trait (e.g. there's no reason to have them borrow <code>&amp;self</code>), so I'm thinking I'll bundle those improvements in the refactoring too. </p>\n</blockquote>",
        "id": 360841212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684946267
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360848406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684948090
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6443\">PR #6443</a>.</p>",
        "id": 360863729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684952190
    }
]