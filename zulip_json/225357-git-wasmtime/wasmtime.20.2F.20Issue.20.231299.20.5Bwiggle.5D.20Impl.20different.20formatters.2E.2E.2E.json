[
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598239663\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598239663\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>I'd like to suggest a different possible approach here: instead of different way to represent flags as integers, we format flags with human-readable names.</p>\n<p>For example, instead of an <code>fdflags</code> value being '0b10001<code> or </code>0x11<code> or </code>041<code>, we print it as </code>append|sync (0x11)`. Then most people will just read the names, and we can just have one formatting method.</p>\n<p>That will get pretty verbose with big flag words that frequently have many flags set, like <code>rights</code>, but I propose as a first iteration, being overly verbose with flag names is still better than numbers that I have to mentally map to flag names :-). And as a second iteration, perhaps we could declare <code>RIGHTS_REGULAR_FILE_BASE</code> etc. in witx somehow (which we should probably do anyway), and then formatting code could compute which <code>*_BASE</code> xor'd with the given flags word has the least hamming distance and print the base with difference, eg. <code>tty&amp;!write|tell</code> or so.</p>\n<p>Thoughts?</p>\n</blockquote>",
        "id": 190400226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584025595
    },
    {
        "content": "<p>sunfishcode edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598239663\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598239663\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>I'd like to suggest a different possible approach here: instead of different way to represent flags as integers, we format flags with human-readable names.</p>\n<p>For example, instead of an <code>fdflags</code> value being <code>0b10001</code> or <code>0x11</code> or <code>041</code>, we print it as <code>append|sync (0x11)</code>. Then most people will just read the names, and we can just have one formatting method.</p>\n<p>That will get pretty verbose with big flag words that frequently have many flags set, like <code>rights</code>, but I propose as a first iteration, being overly verbose with flag names is still better than numbers that I have to mentally map to flag names :-). And as a second iteration, perhaps we could declare <code>RIGHTS_REGULAR_FILE_BASE</code> etc. in witx somehow (which we should probably do anyway), and then formatting code could compute which <code>*_BASE</code> xor'd with the given flags word has the least hamming distance and print the base with difference, eg. <code>tty&amp;!write|tell</code> or so.</p>\n<p>Thoughts?</p>\n</blockquote>",
        "id": 190400282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584025622
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598253760\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598253760\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>Oh, sounds intriguing! I like it! I'm not sure how easy it would be but I reckon it's worth a try!</p>\n</blockquote>",
        "id": 190403565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584027159
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598310180\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598310180\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"w\", \"a\", \"s\", \"i\"</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" target=\"_blank\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 190417392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584033474
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598381261\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598381261\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>FWIW I think the <code>bitflags</code> crate in Rust does what @sunfishcode is mentioning, and it's pretty slick and would recommend having that here as well for the default.</p>\n</blockquote>",
        "id": 190435866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584042373
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598383615\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598383615\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>So I thought about using <code>bitflags</code> crate originally but it requires another dependency and it was awkward to work with previously, as the user of <code>wiggle</code> would effectively be forced to include <code>bitflags</code> as a dependency in the crate they’d use <code>wiggle</code> in. Now, I haven’t checked if that’s still the case. If it’s not, than I’m all for using it as it would drastically simplify generation of a couple of data types (flags and ints in particular).</p>\n</blockquote>",
        "id": 190436589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584042745
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598389963\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598389963\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>Oh sure yeah to be clear I don't think we should use the <code>bitflags</code> crate directly, but just wanted to point out some prior art if it's helpful.</p>\n</blockquote>",
        "id": 190438418,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584043708
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598398239\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598398239\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>Ah, gotcha! :-)</p>\n</blockquote>",
        "id": 190439370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584044144
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598464024\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598464024\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<p>@sunfishcode @alexcrichton Flags is now by default formatted similarly to how <code>bitflags</code> crate does it, namely, <code>dsync|append (0x11)</code>. In case we're dealing with an empty set, we get <code>empty (0x0)</code>. Because of this, any <code>Octal</code>, <code>LowerHex</code>, etc., formatters are redundant now.</p>\n<p>Furthermore, while here, I've rewritten <code>EMPTY_FLAGS</code> and <code>ALL_FLAGS</code> (where the former means <code>0x0</code> and the latter is the union of all possible values) to be <code>const fn empty()</code> and <code>const fn all()</code> where the latter is an expanded union of primitive representation values out of a macro. This is again largely inspired by the <code>bitflags</code> crate.</p>\n</blockquote>",
        "id": 190453630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584052914
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598625179\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299#issuecomment-598625179\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1299\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1299\">Issue #1299</a>:</p>\n<blockquote>\n<blockquote>\n<p>\\o/</p>\n<p>Can you add a test in tests/flags.rs which does <code>.to_string()</code> on some flags values and asserts that it produces the strings expected?</p>\n</blockquote>\n<p>Excellent suggestion, I've added a testcase for this just now :-)</p>\n</blockquote>",
        "id": 190483864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584091015
    }
]