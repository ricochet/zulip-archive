[
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523#issuecomment-918134209\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523\">issue #1523</a>:</p>\n<blockquote>\n<p>@cfallin What is the status of this issue? Unwinding works now, but what about some of the other functionality you mention (e.g. map Wasm locals to registers/stack slots)? I suppose the latter would not be implemented in AArch64-specific code anyway, so we should probably rephrase the issue a bit.</p>\n</blockquote>",
        "id": 253079433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631535496
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523#issuecomment-918140634\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523\">issue #1523</a>:</p>\n<blockquote>\n<blockquote>\n<p>I suppose the latter would not be implemented in AArch64-specific code anyway</p>\n</blockquote>\n<p>All debuginfo generation requires code in the backend for the respective architecture to keep the mapping between the clif level input and the machine code level output for the respective debuginfo constructs. At least for value debuginfo the backend part is already implemented for AArch64 though I think.</p>\n</blockquote>",
        "id": 253080428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631535985
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523#issuecomment-918374972\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523\">issue #1523</a>:</p>\n<blockquote>\n<p>The general debuginfo support -- passing the correspondences through to the codegen and then computing the metadata -- works for new backends generally, as I had built that out and tested it on x86-64. However, IIRC, there are some x86-isms in the DWARF support code in the debug crate and so it probably needs a bit more work to fully connect the dots on aarch64. I don't have time to look into this at the moment, but would be happy to review PRs if someone else does.</p>\n</blockquote>",
        "id": 253121280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631551289
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523#issuecomment-933411209\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523\">issue #1523</a>:</p>\n<blockquote>\n<p>I just noticed that some of the issues had been mentioned in issue #2856.</p>\n</blockquote>",
        "id": 256045771,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633348648
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523#issuecomment-1117995374\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523\">issue #1523</a>:</p>\n<blockquote>\n<p>I'm doing some issue gardening and I will go ahead and close this in favor of #2856, which subsumes this (the issue is really that some of the DWARF-handling is x86-specific).</p>\n</blockquote>",
        "id": 281229466,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651703617
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1523\">issue #1523</a>:</p>\n<blockquote>\n<p>We need to propagate debug information through the new compilation pipeline in order to support several use-cases. For example, <code>wasmtime</code> needs this information to build a map from machine-code offsets to wasm bytecode offsets. Other use-cases may want to e.g. emit DWARF debug info in an AOT-compiled object output file.</p>\n<p>Issue raised by @alexcrichton in the wasmtime context</p>\n<p>cc @julian-seward1, @bnjbvr</p>\n</blockquote>",
        "id": 281229467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651703618
    }
]