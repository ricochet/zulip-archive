[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>This test case, produced by <code>wasm-opt -ttf</code>, produces different results for function 5 when compiled with speed-and-size optimizations vs without any optimizations:</p>\n<p>&lt;details&gt;&lt;summary&gt;WAT test case&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>(module\n      (type (;0;) (func))\n      (type (;1;) (func (param i32)))\n      (type (;2;) (func (param i64)))\n      (type (;3;) (func (param f32)))\n      (type (;4;) (func (param f64)))\n      (type (;5;) (func (result i32)))\n      (type (;6;) (func (param f64 i64 i32 i64 f32) (result f64)))\n      (import &quot;fuzzing-support&quot; &quot;log-i32&quot; (func (;0;) (type 1)))\n      (import &quot;fuzzing-support&quot; &quot;log-i64&quot; (func (;1;) (type 2)))\n      (import &quot;fuzzing-support&quot; &quot;log-f32&quot; (func (;2;) (type 3)))\n      (import &quot;fuzzing-support&quot; &quot;log-f64&quot; (func (;3;) (type 4)))\n      (func (;4;) (type 5) (result i32)\n        (local i32)\n        i32.const 5381\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=1\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=2\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=3\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=4\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=5\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=6\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=7\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=8\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=9\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=10\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=11\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=12\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=13\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=14\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=15\n        i32.xor\n        local.set 0\n        local.get 0)\n      (func (;5;) (type 6) (param f64 i64 i32 i64 f32) (result f64)\n        (local i32 i64 i64 f32 f64 f64)\n        block  ;; label = @1\n          global.get 4\n          i32.eqz\n          if  ;; label = @2\n            f64.const 0x1.00000002p+31 (;=2147483649;)\n            return\n          end\n          global.get 4\n          i32.const 1\n          i32.sub\n          global.set 4\n        end\n        block  ;; label = @1\n          loop  ;; label = @2\n            block  ;; label = @3\n              global.get 4\n              i32.eqz\n              if  ;; label = @4\n                f64.const 0x1.dcp+6 (;=119;)\n                return\n              end\n              global.get 4\n              i32.const 1\n              i32.sub\n              global.set 4\n            end\n            block  ;; label = @3\n              block  ;; label = @4\n                loop  ;; label = @5\n                  block  ;; label = @6\n                    global.get 4\n                    i32.eqz\n                    if  ;; label = @7\n                      local.get 9\n                      return\n                    end\n                    global.get 4\n                    i32.const 1\n                    i32.sub\n                    global.set 4\n                  end\n                  block  ;; label = @6\n                    block  ;; label = @7\n                      local.get 5\n                      local.tee 2\n                      local.tee 2\n                      local.tee 5\n                      local.tee 2\n                      local.tee 5\n                      local.tee 5\n                      local.tee 2\n                      local.tee 2\n                      local.set 5\n                      loop (result f32)  ;; label = @8\n                        block  ;; label = @9\n                          global.get 4\n                          i32.eqz\n                          if  ;; label = @10\n                            f64.const -nan:0xfffffffffcf41 (;=NaN;)\n                            return\n                          end\n                          global.get 4\n                          i32.const 1\n                          i32.sub\n                          global.set 4\n                        end\n                        block (result f32)  ;; label = @9\n                          block  ;; label = @10\n                            loop (result f32)  ;; label = @11\n                              block  ;; label = @12\n                                global.get 4\n                                i32.eqz\n                                if  ;; label = @13\n                                  local.get 0\n                                  return\n                                end\n                                global.get 4\n                                i32.const 1\n                                i32.sub\n                                global.set 4\n                              end\n                              block (result f32)  ;; label = @12\n                                block  ;; label = @13\n                                  local.get 2\n                                  i32.const 15\n                                  i32.and\n                                  local.get 7\n                                  i64.store offset=22 align=2\n                                  i64.const -2\n                                  local.set 6\n                                end\n                                loop (result i32)  ;; label = @13\n                                  block  ;; label = @14\n                                    global.get 4\n                                    i32.eqz\n                                    if  ;; label = @15\n                                      f64.const 0x1.060606060606p+519 (;=1756580577739303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)\n                                      return\n                                    end\n                                    global.get 4\n                                    i32.const 1\n                                    i32.sub\n                                    global.set 4\n                                  end\n                                  block (result i32)  ;; label = @14\n                                    local.get 5\n                                    i32.const 141\n                                    local.tee 5\n                                    br_if 0 (;@14;)\n                                    if (result i32)  ;; label = @15\n                                      local.get 5\n                                    else\n                                      i32.const 2097152\n                                    end\n                                    if  ;; label = @15\n                                      i32.const 2048\n                                      i32.eqz\n                                      if  ;; label = @16\n                                        local.get 0\n                                        local.set 0\n                                      else\n                                        f64.const 0x1p+41 (;=2199023255552;)\n                                        local.set 10\n                                      end\n                                      local.get 8\n                                      local.set 4\n                                    else\n                                      i32.const 1381126738\n                                      local.set 2\n                                      local.get 1\n                                      local.set 6\n                                    end\n                                    loop (result i32)  ;; label = @15\n                                      block  ;; label = @16\n                                        global.get 4\n                                        i32\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190787646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584397497
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>This test case, produced by <code>wasm-opt -ttf</code>, produces different results for function 5 when compiled with speed-and-size optimizations vs without any optimizations:</p>\n<p>&lt;details&gt;&lt;summary&gt;WAT test case&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>(module\n      (type (;0;) (func))\n      (type (;1;) (func (param i32)))\n      (type (;2;) (func (param i64)))\n      (type (;3;) (func (param f32)))\n      (type (;4;) (func (param f64)))\n      (type (;5;) (func (result i32)))\n      (type (;6;) (func (param f64 i64 i32 i64 f32) (result f64)))\n      (import &quot;fuzzing-support&quot; &quot;log-i32&quot; (func (;0;) (type 1)))\n      (import &quot;fuzzing-support&quot; &quot;log-i64&quot; (func (;1;) (type 2)))\n      (import &quot;fuzzing-support&quot; &quot;log-f32&quot; (func (;2;) (type 3)))\n      (import &quot;fuzzing-support&quot; &quot;log-f64&quot; (func (;3;) (type 4)))\n      (func (;4;) (type 5) (result i32)\n        (local i32)\n        i32.const 5381\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=1\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=2\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=3\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=4\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=5\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=6\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=7\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=8\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=9\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=10\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=11\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=12\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=13\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=14\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=15\n        i32.xor\n        local.set 0\n        local.get 0)\n      (func (;5;) (type 6) (param f64 i64 i32 i64 f32) (result f64)\n        (local i32 i64 i64 f32 f64 f64)\n        block  ;; label = @1\n          global.get 4\n          i32.eqz\n          if  ;; label = @2\n            f64.const 0x1.00000002p+31 (;=2147483649;)\n            return\n          end\n          global.get 4\n          i32.const 1\n          i32.sub\n          global.set 4\n        end\n        block  ;; label = @1\n          loop  ;; label = @2\n            block  ;; label = @3\n              global.get 4\n              i32.eqz\n              if  ;; label = @4\n                f64.const 0x1.dcp+6 (;=119;)\n                return\n              end\n              global.get 4\n              i32.const 1\n              i32.sub\n              global.set 4\n            end\n            block  ;; label = @3\n              block  ;; label = @4\n                loop  ;; label = @5\n                  block  ;; label = @6\n                    global.get 4\n                    i32.eqz\n                    if  ;; label = @7\n                      local.get 9\n                      return\n                    end\n                    global.get 4\n                    i32.const 1\n                    i32.sub\n                    global.set 4\n                  end\n                  block  ;; label = @6\n                    block  ;; label = @7\n                      local.get 5\n                      local.tee 2\n                      local.tee 2\n                      local.tee 5\n                      local.tee 2\n                      local.tee 5\n                      local.tee 5\n                      local.tee 2\n                      local.tee 2\n                      local.set 5\n                      loop (result f32)  ;; label = @8\n                        block  ;; label = @9\n                          global.get 4\n                          i32.eqz\n                          if  ;; label = @10\n                            f64.const -nan:0xfffffffffcf41 (;=NaN;)\n                            return\n                          end\n                          global.get 4\n                          i32.const 1\n                          i32.sub\n                          global.set 4\n                        end\n                        block (result f32)  ;; label = @9\n                          block  ;; label = @10\n                            loop (result f32)  ;; label = @11\n                              block  ;; label = @12\n                                global.get 4\n                                i32.eqz\n                                if  ;; label = @13\n                                  local.get 0\n                                  return\n                                end\n                                global.get 4\n                                i32.const 1\n                                i32.sub\n                                global.set 4\n                              end\n                              block (result f32)  ;; label = @12\n                                block  ;; label = @13\n                                  local.get 2\n                                  i32.const 15\n                                  i32.and\n                                  local.get 7\n                                  i64.store offset=22 align=2\n                                  i64.const -2\n                                  local.set 6\n                                end\n                                loop (result i32)  ;; label = @13\n                                  block  ;; label = @14\n                                    global.get 4\n                                    i32.eqz\n                                    if  ;; label = @15\n                                      f64.const 0x1.060606060606p+519 (;=1756580577739303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)\n                                      return\n                                    end\n                                    global.get 4\n                                    i32.const 1\n                                    i32.sub\n                                    global.set 4\n                                  end\n                                  block (result i32)  ;; label = @14\n                                    local.get 5\n                                    i32.const 141\n                                    local.tee 5\n                                    br_if 0 (;@14;)\n                                    if (result i32)  ;; label = @15\n                                      local.get 5\n                                    else\n                                      i32.const 2097152\n                                    end\n                                    if  ;; label = @15\n                                      i32.const 2048\n                                      i32.eqz\n                                      if  ;; label = @16\n                                        local.get 0\n                                        local.set 0\n                                      else\n                                        f64.const 0x1p+41 (;=2199023255552;)\n                                        local.set 10\n                                      end\n                                      local.get 8\n                                      local.set 4\n                                    else\n                                      i32.const 1381126738\n                                      local.set 2\n                                      local.get 1\n                                      local.set 6\n                                    end\n                                    loop (result i32)  ;; label = @15\n                                      block  ;; label = @16\n                                        global.get 4\n                                        i3\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190787647,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584397497
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>This test case, produced by <code>wasm-opt -ttf</code>, produces different results for function 5 when compiled with speed-and-size optimizations vs without any optimizations:</p>\n<p>&lt;details&gt;&lt;summary&gt;WAT test case&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>(module\n      (type (;0;) (func))\n      (type (;1;) (func (param i32)))\n      (type (;2;) (func (param i64)))\n      (type (;3;) (func (param f32)))\n      (type (;4;) (func (param f64)))\n      (type (;5;) (func (result i32)))\n      (type (;6;) (func (param f64 i64 i32 i64 f32) (result f64)))\n      (import &quot;fuzzing-support&quot; &quot;log-i32&quot; (func (;0;) (type 1)))\n      (import &quot;fuzzing-support&quot; &quot;log-i64&quot; (func (;1;) (type 2)))\n      (import &quot;fuzzing-support&quot; &quot;log-f32&quot; (func (;2;) (type 3)))\n      (import &quot;fuzzing-support&quot; &quot;log-f64&quot; (func (;3;) (type 4)))\n      (func (;4;) (type 5) (result i32)\n        (local i32)\n        i32.const 5381\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=1\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=2\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=3\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=4\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=5\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=6\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=7\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=8\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=9\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=10\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=11\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=12\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=13\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=14\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=15\n        i32.xor\n        local.set 0\n        local.get 0)\n      (func (;5;) (type 6) (param f64 i64 i32 i64 f32) (result f64)\n        (local i32 i64 i64 f32 f64 f64)\n        block  ;; label = @1\n          global.get 4\n          i32.eqz\n          if  ;; label = @2\n            f64.const 0x1.00000002p+31 (;=2147483649;)\n            return\n          end\n          global.get 4\n          i32.const 1\n          i32.sub\n          global.set 4\n        end\n        block  ;; label = @1\n          loop  ;; label = @2\n            block  ;; label = @3\n              global.get 4\n              i32.eqz\n              if  ;; label = @4\n                f64.const 0x1.dcp+6 (;=119;)\n                return\n              end\n              global.get 4\n              i32.const 1\n              i32.sub\n              global.set 4\n            end\n            block  ;; label = @3\n              block  ;; label = @4\n                loop  ;; label = @5\n                  block  ;; label = @6\n                    global.get 4\n                    i32.eqz\n                    if  ;; label = @7\n                      local.get 9\n                      return\n                    end\n                    global.get 4\n                    i32.const 1\n                    i32.sub\n                    global.set 4\n                  end\n                  block  ;; label = @6\n                    block  ;; label = @7\n                      local.get 5\n                      local.tee 2\n                      local.tee 2\n                      local.tee 5\n                      local.tee 2\n                      local.tee 5\n                      local.tee 5\n                      local.tee 2\n                      local.tee 2\n                      local.set 5\n                      loop (result f32)  ;; label = @8\n                        block  ;; label = @9\n                          global.get 4\n                          i32.eqz\n                          if  ;; label = @10\n                            f64.const -nan:0xfffffffffcf41 (;=NaN;)\n                            return\n                          end\n                          global.get 4\n                          i32.const 1\n                          i32.sub\n                          global.set 4\n                        end\n                        block (result f32)  ;; label = @9\n                          block  ;; label = @10\n                            loop (result f32)  ;; label = @11\n                              block  ;; label = @12\n                                global.get 4\n                                i32.eqz\n                                if  ;; label = @13\n                                  local.get 0\n                                  return\n                                end\n                                global.get 4\n                                i32.const 1\n                                i32.sub\n                                global.set 4\n                              end\n                              block (result f32)  ;; label = @12\n                                block  ;; label = @13\n                                  local.get 2\n                                  i32.const 15\n                                  i32.and\n                                  local.get 7\n                                  i64.store offset=22 align=2\n                                  i64.const -2\n                                  local.set 6\n                                end\n                                loop (result i32)  ;; label = @13\n                                  block  ;; label = @14\n                                    global.get 4\n                                    i32.eqz\n                                    if  ;; label = @15\n                                      f64.const 0x1.060606060606p+519 (;=1756580577739303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)\n                                      return\n                                    end\n                                    global.get 4\n                                    i32.const 1\n                                    i32.sub\n                                    global.set 4\n                                  end\n                                  block (result i32)  ;; label = @14\n                                    local.get 5\n                                    i32.const 141\n                                    local.tee 5\n                                    br_if 0 (;@14;)\n                                    if (result i32)  ;; label = @15\n                                      local.get 5\n                                    else\n                                      i32.const 2097152\n                                    end\n                                    if  ;; label = @15\n                                      i32.const 2048\n                                      i32.eqz\n                                      if  ;; label = @16\n                                        local.get 0\n                                        local.set 0\n                                      else\n                                        f64.const 0x1p+41 (;=2199023255552;)\n                                        local.set 10\n                                      end\n                                      local.get 8\n                                      local.set 4\n                                    else\n                                      i32.const 1381126738\n                                      local.set 2\n                                      local.get 1\n                                      local.set 6\n                                    end\n                                    loop (result i32)  ;; label = @15\n                                      block  ;; label = @16\n                                        global.get 4\n                                        i3\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190787648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584397497
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>This test case, produced by <code>wasm-opt -ttf</code>, produces different results for function 5 when compiled with speed-and-size optimizations vs without any optimizations:</p>\n<p>&lt;details&gt;&lt;summary&gt;WAT test case&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>(module\n      (type (;0;) (func))\n      (type (;1;) (func (param i32)))\n      (type (;2;) (func (param i64)))\n      (type (;3;) (func (param f32)))\n      (type (;4;) (func (param f64)))\n      (type (;5;) (func (result i32)))\n      (type (;6;) (func (param f64 i64 i32 i64 f32) (result f64)))\n      (import &quot;fuzzing-support&quot; &quot;log-i32&quot; (func (;0;) (type 1)))\n      (import &quot;fuzzing-support&quot; &quot;log-i64&quot; (func (;1;) (type 2)))\n      (import &quot;fuzzing-support&quot; &quot;log-f32&quot; (func (;2;) (type 3)))\n      (import &quot;fuzzing-support&quot; &quot;log-f64&quot; (func (;3;) (type 4)))\n      (func (;4;) (type 5) (result i32)\n        (local i32)\n        i32.const 5381\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=1\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=2\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=3\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=4\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=5\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=6\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=7\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=8\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=9\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=10\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=11\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=12\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=13\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=14\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=15\n        i32.xor\n        local.set 0\n        local.get 0)\n      (func (;5;) (type 6) (param f64 i64 i32 i64 f32) (result f64)\n        (local i32 i64 i64 f32 f64 f64)\n        block  ;; label = @1\n          global.get 4\n          i32.eqz\n          if  ;; label = @2\n            f64.const 0x1.00000002p+31 (;=2147483649;)\n            return\n          end\n          global.get 4\n          i32.const 1\n          i32.sub\n          global.set 4\n        end\n        block  ;; label = @1\n          loop  ;; label = @2\n            block  ;; label = @3\n              global.get 4\n              i32.eqz\n              if  ;; label = @4\n                f64.const 0x1.dcp+6 (;=119;)\n                return\n              end\n              global.get 4\n              i32.const 1\n              i32.sub\n              global.set 4\n            end\n            block  ;; label = @3\n              block  ;; label = @4\n                loop  ;; label = @5\n                  block  ;; label = @6\n                    global.get 4\n                    i32.eqz\n                    if  ;; label = @7\n                      local.get 9\n                      return\n                    end\n                    global.get 4\n                    i32.const 1\n                    i32.sub\n                    global.set 4\n                  end\n                  block  ;; label = @6\n                    block  ;; label = @7\n                      local.get 5\n                      local.tee 2\n                      local.tee 2\n                      local.tee 5\n                      local.tee 2\n                      local.tee 5\n                      local.tee 5\n                      local.tee 2\n                      local.tee 2\n                      local.set 5\n                      loop (result f32)  ;; label = @8\n                        block  ;; label = @9\n                          global.get 4\n                          i32.eqz\n                          if  ;; label = @10\n                            f64.const -nan:0xfffffffffcf41 (;=NaN;)\n                            return\n                          end\n                          global.get 4\n                          i32.const 1\n                          i32.sub\n                          global.set 4\n                        end\n                        block (result f32)  ;; label = @9\n                          block  ;; label = @10\n                            loop (result f32)  ;; label = @11\n                              block  ;; label = @12\n                                global.get 4\n                                i32.eqz\n                                if  ;; label = @13\n                                  local.get 0\n                                  return\n                                end\n                                global.get 4\n                                i32.const 1\n                                i32.sub\n                                global.set 4\n                              end\n                              block (result f32)  ;; label = @12\n                                block  ;; label = @13\n                                  local.get 2\n                                  i32.const 15\n                                  i32.and\n                                  local.get 7\n                                  i64.store offset=22 align=2\n                                  i64.const -2\n                                  local.set 6\n                                end\n                                loop (result i32)  ;; label = @13\n                                  block  ;; label = @14\n                                    global.get 4\n                                    i32.eqz\n                                    if  ;; label = @15\n                                      f64.const 0x1.060606060606p+519 (;=1756580577739303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)\n                                      return\n                                    end\n                                    global.get 4\n                                    i32.const 1\n                                    i32.sub\n                                    global.set 4\n                                  end\n                                  block (result i32)  ;; label = @14\n                                    local.get 5\n                                    i32.const 141\n                                    local.tee 5\n                                    br_if 0 (;@14;)\n                                    if (result i32)  ;; label = @15\n                                      local.get 5\n                                    else\n                                      i32.const 2097152\n                                    end\n                                    if  ;; label = @15\n                                      i32.const 2048\n                                      i32.eqz\n                                      if  ;; label = @16\n                                        local.get 0\n                                        local.set 0\n                                      else\n                                        f64.const 0x1p+41 (;=2199023255552;)\n                                        local.set 10\n                                      end\n                                      local.get 8\n                                      local.set 4\n                                    else\n                                      i32.const 1381126738\n                                      local.set 2\n                                      local.get 1\n                                      local.set 6\n                                    end\n                                    loop (result i32)  ;; label = @15\n                                      block  ;; label = @16\n                                        global.get 4\n                                        i3\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190787649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584397497
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599800109\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599800109\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>Interesting, when run via <code>wasmtime --invoke func_5 test-case.wasm</code>, we see a verifier error:</p>\n<p>&lt;details&gt;&lt;summary&gt;verifier error&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>Error: failed to run main module `testcase0.wasm`\n\nCaused by:\n    0: WebAssembly failed to compile\n    1: Compilation error: function u0:5(i64 vmctx [%rdi], i64 [%rsi], f64 [%xmm0], i64 [%rdx], i32 [%rcx], i64 [%r8], f32 [%xmm1]) -&gt; f64 [%xmm0] system_v {\n           ss0 = spill_slot 8\n           ss1 = spill_slot 8\n           ss2 = spill_slot 8\n           ss3 = spill_slot 4\n           ss4 = spill_slot 8\n           ss5 = spill_slot 8\n           ss6 = spill_slot 4\n           ss7 = spill_slot 4\n           ss8 = spill_slot 4\n           ss9 = spill_slot 4\n           ss10 = spill_slot 4\n           ss11 = spill_slot 4\n           ss12 = spill_slot 4\n           ss13 = spill_slot 4\n           ss14 = spill_slot 4\n           ss15 = spill_slot 4\n           ss16 = spill_slot 4\n           ss17 = spill_slot 4\n           ss18 = spill_slot 8\n           ss19 = spill_slot 8\n           ss20 = spill_slot 4\n           ss21 = spill_slot 4\n           ss22 = spill_slot 4\n           ss23 = spill_slot 4\n           ss24 = spill_slot 4\n           ss25 = spill_slot 4\n           ss26 = spill_slot 8\n           ss27 = spill_slot 4\n           ss28 = spill_slot 4\n           ss29 = spill_slot 8\n           ss30 = spill_slot 4\n           ss31 = spill_slot 4\n           ss32 = spill_slot 4\n           ss33 = spill_slot 4\n           ss34 = spill_slot 4\n           ss35 = emergency_slot 4\n           gv0 = vmctx\n           gv1 = load.i64 notrap aligned readonly gv0+108\n           heap0 = static gv1, min 0, bound 0x0001_0000_0000, offset_guard 0x8000_0000, index_type i32\n\n                                       block0(v1075: i64 [%rdi], v1: i64 [%rsi], v2: f64 [%xmm0], v1076: i64 [%rdx], v4: i32 [%rcx], v1077: i64 [%r8], v6: f32 [%xmm1]):\n       [RexOp1spillSib32#8089,ss0]         v0 = spill v1075\n                                           v12 -&gt; v0\n                                           v17 -&gt; v0\n                                           v21 -&gt; v0\n                                           v22 -&gt; v0\n                                           v27 -&gt; v0\n                                           v31 -&gt; v0\n                                           v32 -&gt; v0\n                                           v37 -&gt; v0\n                                           v41 -&gt; v0\n                                           v44 -&gt; v0\n                                           v49 -&gt; v0\n                                           v53 -&gt; v0\n                                           v56 -&gt; v0\n                                           v61 -&gt; v0\n                                           v65 -&gt; v0\n                                           v74 -&gt; v0\n                                           v79 -&gt; v0\n                                           v83 -&gt; v0\n                                           v102 -&gt; v0\n                                           v107 -&gt; v0\n                                           v111 -&gt; v0\n                                           v150 -&gt; v0\n                                           v155 -&gt; v0\n                                           v159 -&gt; v0\n                                           v168 -&gt; v0\n                                           v176 -&gt; v0\n                                           v210 -&gt; v0\n                                           v215 -&gt; v0\n                                           v219 -&gt; v0\n                                           v243 -&gt; v0\n                                           v248 -&gt; v0\n                                           v252 -&gt; v0\n                                           v289 -&gt; v0\n                                           v294 -&gt; v0\n                                           v298 -&gt; v0\n                                           v325 -&gt; v0\n                                           v330 -&gt; v0\n                                           v334 -&gt; v0\n                                           v364 -&gt; v0\n                                           v369 -&gt; v0\n                                           v373 -&gt; v0\n                                           v396 -&gt; v0\n                                           v401 -&gt; v0\n                                           v405 -&gt; v0\n                                           v420 -&gt; v0\n                                           v425 -&gt; v0\n                                           v429 -&gt; v0\n                                           v504 -&gt; v0\n                                           v509 -&gt; v0\n                                           v513 -&gt; v0\n                                           v515 -&gt; v0\n                                           v520 -&gt; v0\n                                           v524 -&gt; v0\n                                           v540 -&gt; v0\n                                           v545 -&gt; v0\n                                           v549 -&gt; v0\n                                           v588 -&gt; v0\n                                           v593 -&gt; v0\n                                           v597 -&gt; v0\n                                           v605 -&gt; v0\n                                           v610 -&gt; v0\n                                           v614 -&gt; v0\n                                           v627 -&gt; v0\n                                           v632 -&gt; v0\n                                           v636 -&gt; v0\n                                           v638 -&gt; v0\n                                           v643 -&gt; v0\n                                           v647 -&gt; v0\n                                           v655 -&gt; v0\n                                           v660 -&gt; v0\n                                           v664 -&gt; v0\n       [RexOp1spillSib32#8089,ss1]         v3 = spill v1076\n       [RexOp1spillSib32#8089,ss2]         v5 = spill v1077\n       @022d [RexOp1pu_id#b8,%rax]         v1078 = iconst.i32 0\n       @022d [RexOp1spillSib32#89,ss3]     v8 = spill v1078\n       @022f [RexOp1pu_id#b8,%rax]         v1079 = iconst.i64 0\n       @022f [RexOp1spillSib32#8089,ss4]   v9 = spill v1079\n       @0231 [RexOp2f32imm_z#457,%xmm2]    v10 = f32const 0.0\n       @0233 [RexMp2f64imm_z#557,%xmm3]    v11 = f64const 0.0\n       @0237 [RexOp1fillSib32#808b,%r15]   v1080 = fill v0\n       @0237 [RexOp1ldDisp32#8b,%rax]      v13 = load.i32 notrap aligned v1080+192\n       @023a [RexOp1tjccb#75]              brnz v13, block3\n       @023a [Op1jmpb#eb]                  jump block4\n\n                                       block4:\n       @023c [RexOp1pu_iq#80b8,%rax]       v852 = iconst.i64 0x41e0_0000_0020_0000\n       @023c [RexMp2frurm#856e,%xmm0]      v16 = bitcast.f64 v852\n       @0245 [Op1ret#c3]                   return v16\n\n                                       block3:\n       @0247 [RexOp1fillSib32#808b,%r15]   v1081 = fill.i64 v0\n       @0247 [RexOp1ldDisp32#8b,%rax]      v18 = load.i32 notrap aligned v1081+192\n       @024b [DynRexOp1r_ib#83,%rax]       v20 = iadd_imm v18, -1\n       @024c [RexOp1fillSib32#808b,%r15]   v1082 = fill.i64 v0\n       @024c [RexOp1stDisp32#89]           store notrap aligned v20, v1082+192\n       @024e [Op1jmpb#eb]                  jump block2\n\n                                       block2:\n       @02de [RexOp1fillSib32#808b,%r15]   v1083 = fill.i64 v0\n       @02de [RexOp1ldDisp8#808b,%rax]     v1084 = load.i64 notrap aligned readonly v1083+108\n       @02de [RexOp1spillSib32#8089,ss5]   v856 = spill v1084\n                                           v864 -&gt; v856\n                                           v874 -&gt; v856\n                                           v882 -&gt; v856\n       @0306 [RexOp1pu_id#b8,%rax]         v1085 = iconst.i32 141\n       @0306 [RexOp1spillSib32#89,ss6]     v86 = spill v1085\n                                           v140 -&gt; v86\n                                           v141 -&gt; v86\n       @0312 [RexOp1pu_id#b8,%rax]         v1086 = iconst.i32 0x0020_0000\n       @0312 [RexOp1spillSib32#89,ss7]     v88 = spill v1086\n       @031a [RexOp1pu_id#b8,%rax]         v1087 = iconst.i32 2048\n       @031a [RexOp1spillSib32#89,ss8]     v89 = spill v1087\n       @0325 [RexOp1pu_iq#80b8,%rax]       v858 = iconst.i64 0x4280_0000_0000_0000\n       @0325 [RexMp2frurm#856e,%xmm4]      v94 = bitcast.f64 v858\n       @0336 [RexOp1pu_id#b8,%rax]         v1088 = iconst.i32 0x5252_5252\n       @0336 [RexOp1spillSib32#89,ss9]     v98 = spill v1088\n       @038c [RexOp1pu_id#b8,%rax]         v1089 = iconst.i32 255\n       @038c [RexOp1spillSib32#89,ss10]    v167 = spill v1089\n       @03a7 [RexOp1pu_id#b8,%rax]         v1090 = iconst.i32 -126\n       @03a7 [RexOp1spillSib32#89,ss11]    v177 = spill v1090\n                                           v227 -&gt; v177\n                                           v532 -&gt; v177\n                                           v622 -&gt; v177\n       @03c1 [RexOp1pu_id#b8,%rax]         v1091 = iconst.i32 -70\n       @03c1 [RexOp1spillSib32#89,ss12]    v185 = spill v1091\n       @03df [RexOp1pu_id#b8,%rax]         v199 = iconst.i32 0x6464_6464\n       @03e5 [RexMp2urm#6bd,%rax]          v1092 = clz v199\n       @03e5 [RexOp1spillSib32#89,ss13]    v200 = spill v1092\n       @0417 [RexOp1pu_iq#80b8,%rax]       v861 = iconst.i64 0x41c7_9797_9780_0000\n                                           v871 -&gt; v861\n                                           v879 -&gt; v861\n       @0417 [RexMp2frurm#856e,%xmm5]      v221 = bitcast.f64 v861\n                                           v287 -&gt; v221\n                                           v526 -&gt; v221\n\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190791870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584400645
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599801119\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599801119\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>Ah its just for <code>DifferentialConfig::to_wasmtime_config</code> that we don't enable the verifier!</p>\n</blockquote>",
        "id": 190792126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584400852
    },
    {
        "content": "<p>fitzgen edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599800109\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599800109\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>Interesting, when run via <code>wasmtime --invoke func_5 test-case.wasm</code>, we see a verifier error:</p>\n<p>&lt;details&gt;&lt;summary&gt;verifier error&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>Error: failed to run main module `testcase0.wasm`\n\nCaused by:\n    0: WebAssembly failed to compile\n    1: Compilation error: function u0:5(i64 vmctx [%rdi], i64 [%rsi], f64 [%xmm0], i64 [%rdx], i32 [%rcx], i64 [%r8], f32 [%xmm1]) -&gt; f64 [%xmm0] system_v {\n           ss0 = spill_slot 8\n           ss1 = spill_slot 8\n           ss2 = spill_slot 8\n           ss3 = spill_slot 4\n           ss4 = spill_slot 8\n           ss5 = spill_slot 8\n           ss6 = spill_slot 4\n           ss7 = spill_slot 4\n           ss8 = spill_slot 4\n           ss9 = spill_slot 4\n           ss10 = spill_slot 4\n           ss11 = spill_slot 4\n           ss12 = spill_slot 4\n           ss13 = spill_slot 4\n           ss14 = spill_slot 4\n           ss15 = spill_slot 4\n           ss16 = spill_slot 4\n           ss17 = spill_slot 4\n           ss18 = spill_slot 8\n           ss19 = spill_slot 8\n           ss20 = spill_slot 4\n           ss21 = spill_slot 4\n           ss22 = spill_slot 4\n           ss23 = spill_slot 4\n           ss24 = spill_slot 4\n           ss25 = spill_slot 4\n           ss26 = spill_slot 8\n           ss27 = spill_slot 4\n           ss28 = spill_slot 4\n           ss29 = spill_slot 8\n           ss30 = spill_slot 4\n           ss31 = spill_slot 4\n           ss32 = spill_slot 4\n           ss33 = spill_slot 4\n           ss34 = spill_slot 4\n           ss35 = emergency_slot 4\n           gv0 = vmctx\n           gv1 = load.i64 notrap aligned readonly gv0+108\n           heap0 = static gv1, min 0, bound 0x0001_0000_0000, offset_guard 0x8000_0000, index_type i32\n\n                                       block0(v1075: i64 [%rdi], v1: i64 [%rsi], v2: f64 [%xmm0], v1076: i64 [%rdx], v4: i32 [%rcx], v1077: i64 [%r8], v6: f32 [%xmm1]):\n       [RexOp1spillSib32#8089,ss0]         v0 = spill v1075\n                                           v12 -&gt; v0\n                                           v17 -&gt; v0\n                                           v21 -&gt; v0\n                                           v22 -&gt; v0\n                                           v27 -&gt; v0\n                                           v31 -&gt; v0\n                                           v32 -&gt; v0\n                                           v37 -&gt; v0\n                                           v41 -&gt; v0\n                                           v44 -&gt; v0\n                                           v49 -&gt; v0\n                                           v53 -&gt; v0\n                                           v56 -&gt; v0\n                                           v61 -&gt; v0\n                                           v65 -&gt; v0\n                                           v74 -&gt; v0\n                                           v79 -&gt; v0\n                                           v83 -&gt; v0\n                                           v102 -&gt; v0\n                                           v107 -&gt; v0\n                                           v111 -&gt; v0\n                                           v150 -&gt; v0\n                                           v155 -&gt; v0\n                                           v159 -&gt; v0\n                                           v168 -&gt; v0\n                                           v176 -&gt; v0\n                                           v210 -&gt; v0\n                                           v215 -&gt; v0\n                                           v219 -&gt; v0\n                                           v243 -&gt; v0\n                                           v248 -&gt; v0\n                                           v252 -&gt; v0\n                                           v289 -&gt; v0\n                                           v294 -&gt; v0\n                                           v298 -&gt; v0\n                                           v325 -&gt; v0\n                                           v330 -&gt; v0\n                                           v334 -&gt; v0\n                                           v364 -&gt; v0\n                                           v369 -&gt; v0\n                                           v373 -&gt; v0\n                                           v396 -&gt; v0\n                                           v401 -&gt; v0\n                                           v405 -&gt; v0\n                                           v420 -&gt; v0\n                                           v425 -&gt; v0\n                                           v429 -&gt; v0\n                                           v504 -&gt; v0\n                                           v509 -&gt; v0\n                                           v513 -&gt; v0\n                                           v515 -&gt; v0\n                                           v520 -&gt; v0\n                                           v524 -&gt; v0\n                                           v540 -&gt; v0\n                                           v545 -&gt; v0\n                                           v549 -&gt; v0\n                                           v588 -&gt; v0\n                                           v593 -&gt; v0\n                                           v597 -&gt; v0\n                                           v605 -&gt; v0\n                                           v610 -&gt; v0\n                                           v614 -&gt; v0\n                                           v627 -&gt; v0\n                                           v632 -&gt; v0\n                                           v636 -&gt; v0\n                                           v638 -&gt; v0\n                                           v643 -&gt; v0\n                                           v647 -&gt; v0\n                                           v655 -&gt; v0\n                                           v660 -&gt; v0\n                                           v664 -&gt; v0\n       [RexOp1spillSib32#8089,ss1]         v3 = spill v1076\n       [RexOp1spillSib32#8089,ss2]         v5 = spill v1077\n       @022d [RexOp1pu_id#b8,%rax]         v1078 = iconst.i32 0\n       @022d [RexOp1spillSib32#89,ss3]     v8 = spill v1078\n       @022f [RexOp1pu_id#b8,%rax]         v1079 = iconst.i64 0\n       @022f [RexOp1spillSib32#8089,ss4]   v9 = spill v1079\n       @0231 [RexOp2f32imm_z#457,%xmm2]    v10 = f32const 0.0\n       @0233 [RexMp2f64imm_z#557,%xmm3]    v11 = f64const 0.0\n       @0237 [RexOp1fillSib32#808b,%r15]   v1080 = fill v0\n       @0237 [RexOp1ldDisp32#8b,%rax]      v13 = load.i32 notrap aligned v1080+192\n       @023a [RexOp1tjccb#75]              brnz v13, block3\n       @023a [Op1jmpb#eb]                  jump block4\n\n                                       block4:\n       @023c [RexOp1pu_iq#80b8,%rax]       v852 = iconst.i64 0x41e0_0000_0020_0000\n       @023c [RexMp2frurm#856e,%xmm0]      v16 = bitcast.f64 v852\n       @0245 [Op1ret#c3]                   return v16\n\n                                       block3:\n       @0247 [RexOp1fillSib32#808b,%r15]   v1081 = fill.i64 v0\n       @0247 [RexOp1ldDisp32#8b,%rax]      v18 = load.i32 notrap aligned v1081+192\n       @024b [DynRexOp1r_ib#83,%rax]       v20 = iadd_imm v18, -1\n       @024c [RexOp1fillSib32#808b,%r15]   v1082 = fill.i64 v0\n       @024c [RexOp1stDisp32#89]           store notrap aligned v20, v1082+192\n       @024e [Op1jmpb#eb]                  jump block2\n\n                                       block2:\n       @02de [RexOp1fillSib32#808b,%r15]   v1083 = fill.i64 v0\n       @02de [RexOp1ldDisp8#808b,%rax]     v1084 = load.i64 notrap aligned readonly v1083+108\n       @02de [RexOp1spillSib32#8089,ss5]   v856 = spill v1084\n                                           v864 -&gt; v856\n                                           v874 -&gt; v856\n                                           v882 -&gt; v856\n       @0306 [RexOp1pu_id#b8,%rax]         v1085 = iconst.i32 141\n       @0306 [RexOp1spillSib32#89,ss6]     v86 = spill v1085\n                                           v140 -&gt; v86\n                                           v141 -&gt; v86\n       @0312 [RexOp1pu_id#b8,%rax]         v1086 = iconst.i32 0x0020_0000\n       @0312 [RexOp1spillSib32#89,ss7]     v88 = spill v1086\n       @031a [RexOp1pu_id#b8,%rax]         v1087 = iconst.i32 2048\n       @031a [RexOp1spillSib32#89,ss8]     v89 = spill v1087\n       @0325 [RexOp1pu_iq#80b8,%rax]       v858 = iconst.i64 0x4280_0000_0000_0000\n       @0325 [RexMp2frurm#856e,%xmm4]      v94 = bitcast.f64 v858\n       @0336 [RexOp1pu_id#b8,%rax]         v1088 = iconst.i32 0x5252_5252\n       @0336 [RexOp1spillSib32#89,ss9]     v98 = spill v1088\n       @038c [RexOp1pu_id#b8,%rax]         v1089 = iconst.i32 255\n       @038c [RexOp1spillSib32#89,ss10]    v167 = spill v1089\n       @03a7 [RexOp1pu_id#b8,%rax]         v1090 = iconst.i32 -126\n       @03a7 [RexOp1spillSib32#89,ss11]    v177 = spill v1090\n                                           v227 -&gt; v177\n                                           v532 -&gt; v177\n                                           v622 -&gt; v177\n       @03c1 [RexOp1pu_id#b8,%rax]         v1091 = iconst.i32 -70\n       @03c1 [RexOp1spillSib32#89,ss12]    v185 = spill v1091\n       @03df [RexOp1pu_id#b8,%rax]         v199 = iconst.i32 0x6464_6464\n       @03e5 [RexMp2urm#6bd,%rax]          v1092 = clz v199\n       @03e5 [RexOp1spillSib32#89,ss13]    v200 = spill v1092\n       @0417 [RexOp1pu_iq#80b8,%rax]       v861 = iconst.i64 0x41c7_9797_9780_0000\n                                           v871 -&gt; v861\n                                           v879 -&gt; v861\n       @0417 [RexMp2frurm#856e,%xmm5]      v221 = bitcast.f64 v861\n                                           v287 -&gt; v221\n                                           v526 -&gt; v221\n\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190792689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584401340
    }
]