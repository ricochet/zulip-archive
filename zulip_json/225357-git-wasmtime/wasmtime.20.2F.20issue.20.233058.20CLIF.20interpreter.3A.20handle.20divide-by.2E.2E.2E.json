[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3058\">issue #3058</a>:</p>\n<blockquote>\n<p>We received an oss-fuzz bug report yesterday with a very simple test case:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i8</span><span class=\"p\">)</span>:\n        <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">udiv</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>with <code>v0 = 0</code> as input.</p>\n<p>We don't yet handle traps in the differential fuzzing (one step in the checklist in #3050) so this might be an easy starting-point for that issue: we should refactor the interpreter to carry through a <code>Result</code> of some sort such that traps propagate upward, and then reject inputs that trap.</p>\n<p>cc @afonso360 @abrown </p>\n</blockquote>",
        "id": 244819497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625338852
    },
    {
        "content": "<p>abrown closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3058\">issue #3058</a>:</p>\n<blockquote>\n<p>We received an oss-fuzz bug report yesterday with a very simple test case:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i8</span><span class=\"p\">)</span>:\n        <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">udiv</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>with <code>v0 = 0</code> as input.</p>\n<p>We don't yet handle traps in the differential fuzzing (one step in the checklist in #3050) so this might be an easy starting-point for that issue: we should refactor the interpreter to carry through a <code>Result</code> of some sort such that traps propagate upward, and then reject inputs that trap.</p>\n<p>cc @afonso360 @abrown </p>\n</blockquote>",
        "id": 246881410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626975835
    }
]