[
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-597831470\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-597831470\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>The CI failure is due to tripping <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-890393297114ccac3e3873180274f04aR349\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-890393297114ccac3e3873180274f04aR349\">this check</a> that we wouldn't misreport unwind information in cases where we have callee-save floating-point registers. I tried reproducing this locally by building the module in <code>multi_func_value/func.wast</code> by <code>clif-util wasm funct_module.wast --target x86_64-windows -D</code>, but for some reason that seems to build fine, using a significantly smaller amount of stack space? I ran <code>clif-util</code> from Linux, but the only thing that should be a factor here is the target specification. I'm not sure why it doesn't reproduce this way. Is there a flag I should set that influences lowering to clif as well?</p>\n<p>Anyway, I printed the faulting prologue in CI to double-check that the panic is correctly hit, and indeed a function in the module uses well over the 240-byte limit I've noted above:</p>\n<div class=\"codehilite\"><pre><span></span>x86_push.i64 v105\noffset 2: copy_special %rsp -&gt; %rbp\noffset 5: x86_push.i64 v106\noffset 7: x86_push.i64 v107\noffset 9: x86_push.i64 v108\noffset 11: x86_push.i64 v109\noffset 13: x86_push.i64 v110\noffset 15: x86_push.i64 v111\noffset 17: adjust_sp_down_imm 336\noffset 24: v112 = stack_addr.i64 ss18\noffset 32: store.f64 notrap aligned v113, v112\noffset 37: store.f64 notrap aligned v114, v112+16\noffset 43: store.f64 notrap aligned v115, v112+32\n</pre></div>\n\n\n<p>Since this function uses callee-save floats, we miscompile it on Windows today. Should I disable this test on Windows? (not sure if there's a mechanism for this in spectests, honestly) It would be fixed in the same PR that adjusts stack layout to not be constrained to 240 byte frames when using callee-save xmm registers.</p>\n</blockquote>",
        "id": 190322974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583955814
    },
    {
        "content": "<p>iximeow edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-597831470\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-597831470\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>The CI failure is due to tripping <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-890393297114ccac3e3873180274f04aR349\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-890393297114ccac3e3873180274f04aR349\">this check</a> that we wouldn't misreport unwind information in cases where we have callee-save floating-point registers. I tried reproducing this locally by building the module in <code>multi_func_value/func.wast</code> by <code>clif-util wasm funct_module.wast --target x86_64-windows -D</code>, but for some reason that seems to build fine, using a significantly smaller amount of stack space? I ran <code>clif-util</code> from Linux, but the only thing that should be a factor here is the target specification. I'm not sure why it doesn't reproduce this way. Is there a flag I should set that influences lowering to clif as well?</p>\n<p>Anyway, I printed the faulting prologue in CI to double-check that the panic is correctly hit, and indeed a function in the module uses well over the 240-byte limit I've noted above:</p>\n<div class=\"codehilite\"><pre><span></span>x86_push.i64 v105\noffset 2: copy_special %rsp -&gt; %rbp\noffset 5: x86_push.i64 v106\noffset 7: x86_push.i64 v107\noffset 9: x86_push.i64 v108\noffset 11: x86_push.i64 v109\noffset 13: x86_push.i64 v110\noffset 15: x86_push.i64 v111\noffset 17: adjust_sp_down_imm 336\noffset 24: v112 = stack_addr.i64 ss18\noffset 32: store.f64 notrap aligned v113, v112\noffset 37: store.f64 notrap aligned v114, v112+16\noffset 43: store.f64 notrap aligned v115, v112+32\n</pre></div>\n\n\n<p>Since this function uses callee-save floats, we miscompile it on Windows today. Should I disable this test on Windows? (not sure if there's a mechanism for this in spectests, honestly) It would be fixed in the same PR that adjusts stack layout to not be constrained to 240 byte frames when using callee-save xmm registers.</p>\n<p>Edit: this panic is only reached if you want a fastcall function with all of:</p>\n<ul>\n<li>a &gt;240 byte stack frame</li>\n<li>callee-save floats</li>\n<li>unwind information</li>\n</ul>\n<p>This PR fixes callee-save float preservation in fastcall functions generally. Asking for unwind information causes the panic. I'm not sure how easily Windows targets can get the former without the latter.</p>\n</blockquote>",
        "id": 190323210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583955961
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598306921\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598306921\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"c\", \"r\", \"a\", \"n\", \"e\", \"l\", \"i\", \"f\", \"t\"</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" target=\"_blank\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 190416718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584033090
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598310226\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598310226\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"c\", \"r\", \"a\", \"n\", \"e\", \"l\", \"i\", \"f\", \"t\"</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" target=\"_blank\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 190417414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584033477
    },
    {
        "content": "<p>peterhuene deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598306921\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598306921\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"c\", \"r\", \"a\", \"n\", \"e\", \"l\", \"i\", \"f\", \"t\"</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" target=\"_blank\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 190432415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584040566
    },
    {
        "content": "<p>peterhuene deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598310226\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598310226\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"c\", \"r\", \"a\", \"n\", \"e\", \"l\", \"i\", \"f\", \"t\"</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" target=\"_blank\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 190432421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584040570
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>Nudging this again as I think this is as good as this fix can get without getting into the weeds on stack layout details.</p>\n<p>I have three(ish) issues to open assuming a <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> :</p>\n<ul>\n<li>[ ] Use of an <code>F64</code> type instead of the more accurate <code>F64x2</code> for callee-save FPRs, which _works_ but just isn't fully expressive of intent. See <a href=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\">here</a></li>\n<li>[ ] Fix how Cranelift lays out Fastcall stacks to avoid the 240-byte stack frame limit when using unwind information and callee-save XMM registers. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\">here</a> for conversation and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\">here</a> for a test I've had to disable as a consequence.</li>\n<li>[ ] Might not be worth a tracking issue, but there are two TODO's contingent on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\">an encoding existing</a> that would result in changes here after this lands.</li>\n</ul>\n</blockquote>",
        "id": 190568875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584144488
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-600004726\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-600004726\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"cranelift\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"cranelift\"&lt;/summary&gt;</p>\n<ul>\n<li>@bnjbvr</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" target=\"_blank\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 190832085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584442326
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-604684561\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-604684561\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>Pardon the rebase, just want to get this on a more recent <code>master</code> so as to pick up a fix for nightly builds failing in CI.</p>\n</blockquote>",
        "id": 191948472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585256591
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-604921488\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-604921488\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>@iximeow I think you forgot to push :)</p>\n</blockquote>",
        "id": 191997458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585304230
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-605166714\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-605166714\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>@bjorn3 even worse, I'd pushed to the wrong remote. Thanks for the heads up!</p>\n</blockquote>",
        "id": 192056474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585331934
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-606356267\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-606356267\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>It looks like there's at least a few more tests to disable due to the frame size limitation this adds to functions using Windows x64 calling convention.</p>\n</blockquote>",
        "id": 192339386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585620855
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-608576352\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-608576352\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>it passes <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>\n<p>GitHub appears to believe that <code>3be2d1c</code> doesn't exist, so I pushed an empty commit (<code>ea9f77a</code>) to fool CI into running after yesterday's availability issues. After ignoring more tests, it's green again 🥴</p>\n</blockquote>",
        "id": 192840868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585936229
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-608705730\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-608705730\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>@iximeow I'll review this soon and if everyone signs off, I think we should merge this before my unwind refactoring changes.  I can easily update that PR to integrate this PR's changes to save  the FPRs in the windows unwind info.</p>\n</blockquote>",
        "id": 192868569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585950960
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-609971813\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-609971813\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<blockquote>\n<p>We probably want @bjorn3 or another core cranelift maintainer to sign off as well.</p>\n</blockquote>\n<p>I am actually not a maintainer. :)</p>\n</blockquote>",
        "id": 193084583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586198879
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-609981468\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-609981468\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p><span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span> my apologies, although your review is obviously always appreciated :) I'm not actually a core cranelift maintainer either, so I'm more comfortable when others sign off on bits I haven't been directly involved in.</p>\n</blockquote>",
        "id": 193087215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586200065
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-609987256\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-609987256\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<blockquote>\n<p><span aria-label=\"scream\" class=\"emoji emoji-1f631\" role=\"img\" title=\"scream\">:scream:</span> my apologies, although your review is obviously always appreciated :)</p>\n</blockquote>\n<p>You are not the first to think I am a maintainer of a project. :) I often review PR's on projects I am (slightly) interested in. And sometimes the PR author assumes I am a maintainer.</p>\n</blockquote>",
        "id": 193088539,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586200806
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-610004450\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-610004450\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>I'll ping @bnjbvr for the core maintainer sign-off, then.</p>\n</blockquote>",
        "id": 193092825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586202969
    },
    {
        "content": "<p>iximeow edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>Nudging this again as I think this is as good as this fix can get without getting into the weeds on stack layout details.</p>\n<p>I have three(ish) issues to open assuming a <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> :</p>\n<ul>\n<li>[ ] Use of an <code>F64</code> type instead of the more accurate <code>F64x2</code> for callee-save FPRs, which _works_ but just isn't fully expressive of intent. See <a href=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\" title=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\">here</a></li>\n<li>[x] Fix how Cranelift lays out Fastcall stacks to avoid the 240-byte stack frame limit when using unwind information and callee-save XMM registers. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\">here</a> for conversation and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\">here</a> for a test I've had to disable as a consequence.</li>\n<li>[ ] Might not be worth a tracking issue, but there are two TODO's contingent on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\">an encoding existing</a> that would result in changes here after this lands.</li>\n</ul>\n</blockquote>",
        "id": 193116482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586216571
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-611749700\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-611749700\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"wasmtime:api\"&lt;/summary&gt;</p>\n<ul>\n<li>@peterhuene</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 193508501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586465976
    },
    {
        "content": "<p>iximeow <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-612117385\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-612117385\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>I had to force push to rebase and fix a merge conflict that crept in. Unwind-producing functions are <code>Result</code>-y, which of course resulted in some Wasmtime changes as well. Given the wider scope, I'd like one last +1 before clicking the tempting green button :)</p>\n</blockquote>",
        "id": 193590662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586537423
    },
    {
        "content": "<p>iximeow edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>Nudging this again as I think this is as good as this fix can get without getting into the weeds on stack layout details.</p>\n<p>I have three(ish) issues to open assuming a <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> :</p>\n<ul>\n<li>[x] Use of an <code>F64</code> type instead of the more accurate <code>F64x2</code> for callee-save FPRs, which _works_ but just isn't fully expressive of intent. See <a href=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\" title=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\">here</a></li>\n<li>[x] Fix how Cranelift lays out Fastcall stacks to avoid the 240-byte stack frame limit when using unwind information and callee-save XMM registers. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\">here</a> for conversation and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\">here</a> for a test I've had to disable as a consequence.</li>\n<li>[ ] Might not be worth a tracking issue, but there are two TODO's contingent on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\">an encoding existing</a> that would result in changes here after this lands.</li>\n</ul>\n</blockquote>",
        "id": 193615772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586551520
    },
    {
        "content": "<p>iximeow edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-598978800\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>Nudging this again as I think this is as good as this fix can get without getting into the weeds on stack layout details.</p>\n<p>I have three(ish) issues to open assuming a <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> :</p>\n<ul>\n<li>[x] Use of an <code>F64</code> type instead of the more accurate <code>F64x2</code> for callee-save FPRs, which _works_ but just isn't fully expressive of intent. See <a href=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\" title=\"https://github.com/bytecodealliance/cranelift/pull/1378#discussion_r382268121\">here</a></li>\n<li>[x] Fix how Cranelift lays out Fastcall stacks to avoid the 240-byte stack frame limit when using unwind information and callee-save XMM registers. See <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#discussion_r390593267\">here</a> for conversation and <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-a7b0a2dee0126cddf994326e705a91eaR199-R206\">here</a> for a test I've had to disable as a consequence.</li>\n<li>[x] Might not be worth a tracking issue, but there are two TODO's contingent on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216/files#diff-63eb2d3a8c23f2a0199e4161f983d29dR892-R895\">an encoding existing</a> that would result in changes here after this lands.</li>\n</ul>\n</blockquote>",
        "id": 193616861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586552233
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-612260747\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-612260747\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> thanks for fixing this @iximeow! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  I realize it was a slog of a PR.</p>\n<p>Now I get to merge these changes in to my refactoring PR and we'll see about prioritizing the fixing of the stack layout of the register saves <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>\n</blockquote>",
        "id": 193628637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586560492
    },
    {
        "content": "<p>hrydgard <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-613866149\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216#issuecomment-613866149\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1216\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1216\">Issue #1216</a>:</p>\n<blockquote>\n<p>Awesome, thanks for getting this done!</p>\n</blockquote>",
        "id": 193992935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586935602
    }
]