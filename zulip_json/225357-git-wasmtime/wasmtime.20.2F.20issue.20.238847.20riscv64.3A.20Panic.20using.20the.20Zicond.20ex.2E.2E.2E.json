[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8847\">Issue #8847</a>.</p>",
        "id": 445868691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718894652
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the cranelift:area:riscv64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8847\">Issue #8847</a>.</p>",
        "id": 445868692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718894652
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8847\">issue #8847</a>:</p>\n<blockquote>\n<p>This input CLIF:</p>\n<p>&lt;details&gt;</p>\n<p><div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>;; Compile test case\n\ntest compile\nset bb_padding_log2_minus_one=4\nset enable_alias_analysis=false\nset enable_llvm_abi_extensions=true\nset machine_code_cfg_info=true\nset enable_jump_tables=false\nset enable_heap_access_spectre_mitigation=false\ntarget riscv64 has_zcd has_zbkb has_zbc has_zbs has_zicond has_zvl32b has_zvl64b has_zvl128b has_zvl1024b has_zvl2048b has_zvl4096b has_zvl8192b has_zvl16384b has_zvl32768b\n\nfunction u1:0() tail {\n    ss0 = explicit_slot 50, align = 512\n    ss1 = explicit_slot 47, align = 4\n    ss2 = explicit_slot 34, align = 32\n    ss3 = explicit_slot 103, align = 1024\n    ss4 = explicit_slot 110, align = 512\n    ss5 = explicit_slot 126, align = 512\n    sig0 = (f32, f64, f64, f32, i8 uext, i128, i8 uext, i32, i16 sext, i64, i64 sext, i128, i8 sext, i8, i64, i64 sext) -&gt; i16 sext, i64 sext, f64, i32 sext, f64, i8 sext, i64 sext, f32\n    sig1 = () system_v\n    sig2 = (i128, i16 sext, i128 sext, i32 sext, i16, i64 uext, f32, i8 sext, f32, i8, i64, i64, i64, i64 uext, f64) -&gt; f64, i8 uext, f32, i128, i64 uext, i8, i16 sext, i64 sext tail\n    sig3 = () -&gt; i8 sext, f32, i128, i32, f32, i128 uext, i8, i8 uext, f64, i8 sext, f32 system_v\n    sig4 = (i8, i16, i64 sext, i64 sext, i128 uext, i8, i32, f64, i32, f32, i128 uext, i8, i8 uext, f64, f64) -&gt; i8 uext system_v\n    sig5 = (i8 sext, i64 uext, i16 sext, i64 sext, i128 uext, i128 sext, f32, i16 uext, i64 sext, i32 sext, i64, i64 uext, f64, f64, i16 sext) -&gt; f32 tail\n    sig6 = (i64 sext, i64 sext, i64 sext, i64 sext, i64 sext, i64 sext, i64 sext, i8 uext, i16 uext, i16, i64 sext, i64 sext, i128 uext, i8 sext, f32) tail\n    sig7 = (f32) -&gt; f32 system_v\n    sig8 = (f64) -&gt; f64 system_v\n    sig9 = (f32) -&gt; f32 system_v\n    sig10 = (f64) -&gt; f64 system_v\n    sig11 = (f32) -&gt; f32 system_v\n    sig12 = (f64) -&gt; f64 system_v\n    sig13 = (f32) -&gt; f32 system_v\n    sig14 = (f64) -&gt; f64 system_v\n    sig15 = (f32, f32, f32) -&gt; f32 system_v\n    sig16 = (f64, f64, f64) -&gt; f64 system_v\n    fn0 = colocated u2:0 sig0\n    fn1 = colocated u2:1 sig1\n    fn2 = colocated u2:2 sig2\n    fn3 = colocated u2:3 sig3\n    fn4 = colocated u2:4 sig4\n    fn5 = colocated u2:5 sig5\n    fn6 = colocated u2:6 sig6\n    fn7 = %CeilF32 sig7\n    fn8 = %CeilF64 sig8\n    fn9 = %FloorF32 sig9\n    fn10 = %FloorF64 sig10\n    fn11 = colocated %TruncF32 sig11\n    fn12 = %TruncF64 sig12\n    fn13 = colocated %NearestF32 sig13\n    fn14 = %NearestF64 sig14\n    fn15 = %FmaF32 sig15\n    fn16 = %FmaF64 sig16\n\nblock0:\n    v0 = iconst.i64 0xef31_de2a_2352_79ff\n    v158 -&gt; v0\n    v1 = iconst.i64 0x2231_ffd1_ff29_ff26\n    v2 = f64const 0x1.8ff2320672823p-225\n    v3 = iconst.i16 0xffef\n    v160 -&gt; v3\n    v4 = iconst.i64 0xddde_2a23_52f9_ffff\n    v5 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v6 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v7 = iconcat v6, v5  ; v6 = 0xc8c8_c8c8_c8c8_c8c8, v5 = 0xc8c8_c8c8_c8c8_c8c8\n    v161 -&gt; v7\n    v8 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v9 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v10 = iconcat v9, v8  ; v9 = 0xc8c8_c8c8_c8c8_c8c8, v8 = 0xc8c8_c8c8_c8c8_c8c8\n    v11 = iconst.i64 0xcbcb_cbcb_cbc8_c8c8\n    v12 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v13 = iconcat v12, v11  ; v12 = 0xc8c8_c8c8_c8c8_c8c8, v11 = 0xcbcb_cbcb_cbc8_c8c8\n    v14 = iconst.i8 203\n    v159 -&gt; v14\n    v15 = f32const -0x1.979796p24\n    v162 -&gt; v15\n    v16 = iconst.i64 0x0031_2222_2a2f\n    v17 = iconst.i64 0xcbcb_2adc_9e98_d7d4\n    v18 = iconcat v17, v16  ; v17 = 0xcbcb_2adc_9e98_d7d4, v16 = 0x0031_2222_2a2f\n    v19 = iconst.i8 0\n    v20 = iconst.i16 0\n    v21 = iconst.i32 0\n    v22 = iconst.i64 0\n    v23 = uextend.i128 v22  ; v22 = 0\n    v24 = stack_addr.i64 ss2\n    store notrap table v23, v24\n    v25 = stack_addr.i64 ss2+16\n    store notrap table v23, v25\n    v26 = stack_addr.i64 ss2+32\n    store notrap table v20, v26  ; v20 = 0\n    v27 = stack_addr.i64 ss1\n    store notrap table v23, v27\n    v28 = stack_addr.i64 ss1+16\n    store notrap table v23, v28\n    v29 = stack_addr.i64 ss1+32\n    store notrap table v22, v29  ; v22 = 0\n    v30 = stack_addr.i64 ss1+40\n    store notrap table v21, v30  ; v21 = 0\n    v31 = stack_addr.i64 ss1+44\n    store notrap table v20, v31  ; v20 = 0\n    v32 = stack_addr.i64 ss1+46\n    store notrap table v19, v32  ; v19 = 0\n    v33 = stack_addr.i64 ss0\n    store notrap table v23, v33\n    v34 = stack_addr.i64 ss0+16\n    store notrap table v23, v34\n    v35 = stack_addr.i64 ss0+32\n    store notrap table v23, v35\n    v36 = stack_addr.i64 ss0+48\n    store notrap table v20, v36  ; v20 = 0\n    v37 = stack_addr.i64 ss3\n    store notrap vmctx v23, v37\n    v38 = stack_addr.i64 ss3+16\n    store notrap vmctx v23, v38\n    v39 = stack_addr.i64 ss3+32\n    store notrap vmctx v23, v39\n    v40 = stack_addr.i64 ss3+48\n    store notrap vmctx v23, v40\n    v41 = stack_addr.i64 ss3+64\n    store notrap vmctx v23, v41\n    v42 = stack_addr.i64 ss3+80\n    store notrap vmctx v23, v42\n    v43 = stack_addr.i64 ss3+96\n    store notrap vmctx v21, v43  ; v21 = 0\n    v44 = stack_addr.i64 ss3+100\n    store notrap vmctx v20, v44  ; v20 = 0\n    v45 = stack_addr.i64 ss3+102\n    store notrap vmctx v19, v45  ; v19 = 0\n    v46 = stack_addr.i64 ss4\n    store notrap heap v23, v46\n    v47 = stack_addr.i64 ss4+16\n    store notrap heap v23, v47\n    v48 = stack_addr.i64 ss4+32\n    store notrap heap v23, v48\n    v49 = stack_addr.i64 ss4+48\n    store notrap heap v23, v49\n    v50 = stack_addr.i64 ss4+64\n    store notrap heap v23, v50\n    v51 = stack_addr.i64 ss4+80\n    store notrap heap v23, v51\n    v52 = stack_addr.i64 ss4+96\n    store notrap heap v22, v52  ; v22 = 0\n    v53 = stack_addr.i64 ss4+104\n    store notrap heap v21, v53  ; v21 = 0\n    v54 = stack_addr.i64 ss4+108\n    store notrap heap v20, v54  ; v20 = 0\n    v55 = stack_addr.i64 ss5\n    store notrap vmctx v23, v55\n    v56 = stack_addr.i64 ss5+16\n    store notrap vmctx v23, v56\n    v57 = stack_addr.i64 ss5+32\n    store notrap vmctx v23, v57\n    v58 = stack_addr.i64 ss5+48\n    store notrap vmctx v23, v58\n    v59 = stack_addr.i64 ss5+64\n    store notrap vmctx v23, v59\n    v60 = stack_addr.i64 ss5+80\n    store notrap vmctx v23, v60\n    v61 = stack_addr.i64 ss5+96\n    store notrap vmctx v23, v61\n    v62 = stack_addr.i64 ss5+112\n    store notrap vmctx v22, v62  ; v22 = 0\n    v63 = stack_addr.i64 ss5+120\n    store notrap vmctx v21, v63  ; v21 = 0\n    v64 = stack_addr.i64 ss5+124\n    store notrap vmctx v20, v64  ; v20 = 0\n    v65 = icmp_imm uge v3, 0x5123  ; v3 = 0xffef\n    brif v65, block3, block2\n\nblock3:\n    v66 = icmp_imm.i16 uge v3, 0xd5d7  ; v3 = 0xffef\n    brif v66, block5, block4\n\nblock5:\n    v67 = icmp_imm.i16 uge v3, 0xf6ff  ; v3 = 0xffef\n    brif v67, block7, block6\n\nblock7:\n    v68 = icmp_imm.i16 uge v3, 0xff22  ; v3 = 0xffef\n    brif v68, block9, block8\n\nblock9:\n    v69 = icmp_imm.i16 eq v3, 0xffdd  ; v3 = 0xffef\n    brif v69, block1, block10\n\nblock10:\n    v70 = icmp_imm.i16 uge v3, 0xff79  ; v3 = 0xffef\n    brif v70, block12, block11\n\nblock12:\n    v71 = iadd_imm.i16 v3, 0xffff_ffff_ffff_0087  ; v3 = 0xffef\n    v72 = uextend.i32 v71\n    br_table v72, block1, [block1, block1, block1, block1, block1, block1]\n\nblock11:\n    v73 = icmp_imm.i16 uge v3, 0xff22  ; v3 = 0xffef\n    brif v73, block13, block1\n\nblock13:\n    v74 = iadd_imm.i16 v3, 0xffff_ffff_ffff_00de  ; v3 = 0xffef\n    v75 = uextend.i32 v74\n    br_table v75, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock8:\n    v76 = icmp_imm.i16 eq v3, 0xf951  ; v3 = 0xffef\n    brif v76, block1, block14\n\nblock14:\n    v77 = icmp_imm.i16 uge v3, 0xf6ff  ; v3 = 0xffef\n    brif v77, block15, block1\n\nblock15:\n    v78 = iadd_imm.i16 v3, 0xffff_ffff_ffff_0901  ; v3 = 0xffef\n    v79 = uextend.i32 v78\n    br_table v79, block1, [block1, block1, block1, block1, block1, block1, block1]\n\nblock6:\n    v80 = icmp_imm.i16 uge v3, 0xef2a  ; v3 = 0xffef\n    brif v80, block17, block16\n\nblock17:\n    v81 = icmp_imm.i16 eq v3, 0xf426  ; v3 = 0xffef\n    brif v81, block1, block18\n\nblock18:\n    v82 = icmp_imm.i16 uge v3, 0xefff  ; v3 = 0xffef\n    brif v82, block20, block19\n\nblock20:\n    v83 = iadd_imm.i16 v3, 0xffff_ffff_ffff_1001  ; v3 = 0xffef\n    v84 = uextend.i32 v83\n    br_table v84, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock19:\n    v85 = icmp_imm.i16 uge v3, 0xef2a  ; v3 = 0xffef\n    brif v85, block21, block1\n\nblock21:\n    v86 = iadd_imm.i16 v3, 0xffff_ffff_ffff_10d6  ; v3 = 0xffef\n    v87 = uextend.i32 v86\n    br_table v87, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock16:\n    v88 = icmp_imm.i16 eq v3, 0xdc2a  ; v3 = 0xffef\n    brif v88, block1, block22\n\nblock22:\n    v89 = icmp_imm.i16 uge v3, 0xd5d7  ; v3 = 0xffef\n    brif v89, block23, block1\n\nblock23:\n    v90 = iadd_imm.i16 v3, 0xffff_ffff_ffff_2a29  ; v3 = 0xffef\n    v91 = uextend.i32 v90\n    br_table v91, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock4:\n    v92 = icmp_imm.i16 uge v3, 0x7363  ; v3 = 0xffef\n    brif v92, block25, block24\n\nblock25:\n    v93 = icmp_imm.i16 uge v3, 0x9f22  ; v3 = 0xffef\n    brif v93, block27, block26\n\nblock27:\n    v94 = icmp_imm.i16 uge v3, 0\n[message truncated]\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 445868694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718894652
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8847\">issue #8847</a>:</p>\n<blockquote>\n<p>This input CLIF:</p>\n<p>&lt;details&gt;</p>\n<p><div class=\"codehilite\" data-code-language=\"clif\"><pre><span></span><code>;; Compile test case\n\ntest compile\nset bb_padding_log2_minus_one=4\nset enable_alias_analysis=false\nset enable_llvm_abi_extensions=true\nset machine_code_cfg_info=true\nset enable_jump_tables=false\nset enable_heap_access_spectre_mitigation=false\ntarget riscv64 has_zcd has_zbkb has_zbc has_zbs has_zicond has_zvl32b has_zvl64b has_zvl128b has_zvl1024b has_zvl2048b has_zvl4096b has_zvl8192b has_zvl16384b has_zvl32768b\n\nfunction u1:0() tail {\n    ss0 = explicit_slot 50, align = 512\n    ss1 = explicit_slot 47, align = 4\n    ss2 = explicit_slot 34, align = 32\n    ss3 = explicit_slot 103, align = 1024\n    ss4 = explicit_slot 110, align = 512\n    ss5 = explicit_slot 126, align = 512\n    sig0 = (f32, f64, f64, f32, i8 uext, i128, i8 uext, i32, i16 sext, i64, i64 sext, i128, i8 sext, i8, i64, i64 sext) -&gt; i16 sext, i64 sext, f64, i32 sext, f64, i8 sext, i64 sext, f32\n    sig1 = () system_v\n    sig2 = (i128, i16 sext, i128 sext, i32 sext, i16, i64 uext, f32, i8 sext, f32, i8, i64, i64, i64, i64 uext, f64) -&gt; f64, i8 uext, f32, i128, i64 uext, i8, i16 sext, i64 sext tail\n    sig3 = () -&gt; i8 sext, f32, i128, i32, f32, i128 uext, i8, i8 uext, f64, i8 sext, f32 system_v\n    sig4 = (i8, i16, i64 sext, i64 sext, i128 uext, i8, i32, f64, i32, f32, i128 uext, i8, i8 uext, f64, f64) -&gt; i8 uext system_v\n    sig5 = (i8 sext, i64 uext, i16 sext, i64 sext, i128 uext, i128 sext, f32, i16 uext, i64 sext, i32 sext, i64, i64 uext, f64, f64, i16 sext) -&gt; f32 tail\n    sig6 = (i64 sext, i64 sext, i64 sext, i64 sext, i64 sext, i64 sext, i64 sext, i8 uext, i16 uext, i16, i64 sext, i64 sext, i128 uext, i8 sext, f32) tail\n    sig7 = (f32) -&gt; f32 system_v\n    sig8 = (f64) -&gt; f64 system_v\n    sig9 = (f32) -&gt; f32 system_v\n    sig10 = (f64) -&gt; f64 system_v\n    sig11 = (f32) -&gt; f32 system_v\n    sig12 = (f64) -&gt; f64 system_v\n    sig13 = (f32) -&gt; f32 system_v\n    sig14 = (f64) -&gt; f64 system_v\n    sig15 = (f32, f32, f32) -&gt; f32 system_v\n    sig16 = (f64, f64, f64) -&gt; f64 system_v\n    fn0 = colocated u2:0 sig0\n    fn1 = colocated u2:1 sig1\n    fn2 = colocated u2:2 sig2\n    fn3 = colocated u2:3 sig3\n    fn4 = colocated u2:4 sig4\n    fn5 = colocated u2:5 sig5\n    fn6 = colocated u2:6 sig6\n    fn7 = %CeilF32 sig7\n    fn8 = %CeilF64 sig8\n    fn9 = %FloorF32 sig9\n    fn10 = %FloorF64 sig10\n    fn11 = colocated %TruncF32 sig11\n    fn12 = %TruncF64 sig12\n    fn13 = colocated %NearestF32 sig13\n    fn14 = %NearestF64 sig14\n    fn15 = %FmaF32 sig15\n    fn16 = %FmaF64 sig16\n\nblock0:\n    v0 = iconst.i64 0xef31_de2a_2352_79ff\n    v158 -&gt; v0\n    v1 = iconst.i64 0x2231_ffd1_ff29_ff26\n    v2 = f64const 0x1.8ff2320672823p-225\n    v3 = iconst.i16 0xffef\n    v160 -&gt; v3\n    v4 = iconst.i64 0xddde_2a23_52f9_ffff\n    v5 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v6 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v7 = iconcat v6, v5  ; v6 = 0xc8c8_c8c8_c8c8_c8c8, v5 = 0xc8c8_c8c8_c8c8_c8c8\n    v161 -&gt; v7\n    v8 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v9 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v10 = iconcat v9, v8  ; v9 = 0xc8c8_c8c8_c8c8_c8c8, v8 = 0xc8c8_c8c8_c8c8_c8c8\n    v11 = iconst.i64 0xcbcb_cbcb_cbc8_c8c8\n    v12 = iconst.i64 0xc8c8_c8c8_c8c8_c8c8\n    v13 = iconcat v12, v11  ; v12 = 0xc8c8_c8c8_c8c8_c8c8, v11 = 0xcbcb_cbcb_cbc8_c8c8\n    v14 = iconst.i8 203\n    v159 -&gt; v14\n    v15 = f32const -0x1.979796p24\n    v162 -&gt; v15\n    v16 = iconst.i64 0x0031_2222_2a2f\n    v17 = iconst.i64 0xcbcb_2adc_9e98_d7d4\n    v18 = iconcat v17, v16  ; v17 = 0xcbcb_2adc_9e98_d7d4, v16 = 0x0031_2222_2a2f\n    v19 = iconst.i8 0\n    v20 = iconst.i16 0\n    v21 = iconst.i32 0\n    v22 = iconst.i64 0\n    v23 = uextend.i128 v22  ; v22 = 0\n    v24 = stack_addr.i64 ss2\n    store notrap table v23, v24\n    v25 = stack_addr.i64 ss2+16\n    store notrap table v23, v25\n    v26 = stack_addr.i64 ss2+32\n    store notrap table v20, v26  ; v20 = 0\n    v27 = stack_addr.i64 ss1\n    store notrap table v23, v27\n    v28 = stack_addr.i64 ss1+16\n    store notrap table v23, v28\n    v29 = stack_addr.i64 ss1+32\n    store notrap table v22, v29  ; v22 = 0\n    v30 = stack_addr.i64 ss1+40\n    store notrap table v21, v30  ; v21 = 0\n    v31 = stack_addr.i64 ss1+44\n    store notrap table v20, v31  ; v20 = 0\n    v32 = stack_addr.i64 ss1+46\n    store notrap table v19, v32  ; v19 = 0\n    v33 = stack_addr.i64 ss0\n    store notrap table v23, v33\n    v34 = stack_addr.i64 ss0+16\n    store notrap table v23, v34\n    v35 = stack_addr.i64 ss0+32\n    store notrap table v23, v35\n    v36 = stack_addr.i64 ss0+48\n    store notrap table v20, v36  ; v20 = 0\n    v37 = stack_addr.i64 ss3\n    store notrap vmctx v23, v37\n    v38 = stack_addr.i64 ss3+16\n    store notrap vmctx v23, v38\n    v39 = stack_addr.i64 ss3+32\n    store notrap vmctx v23, v39\n    v40 = stack_addr.i64 ss3+48\n    store notrap vmctx v23, v40\n    v41 = stack_addr.i64 ss3+64\n    store notrap vmctx v23, v41\n    v42 = stack_addr.i64 ss3+80\n    store notrap vmctx v23, v42\n    v43 = stack_addr.i64 ss3+96\n    store notrap vmctx v21, v43  ; v21 = 0\n    v44 = stack_addr.i64 ss3+100\n    store notrap vmctx v20, v44  ; v20 = 0\n    v45 = stack_addr.i64 ss3+102\n    store notrap vmctx v19, v45  ; v19 = 0\n    v46 = stack_addr.i64 ss4\n    store notrap heap v23, v46\n    v47 = stack_addr.i64 ss4+16\n    store notrap heap v23, v47\n    v48 = stack_addr.i64 ss4+32\n    store notrap heap v23, v48\n    v49 = stack_addr.i64 ss4+48\n    store notrap heap v23, v49\n    v50 = stack_addr.i64 ss4+64\n    store notrap heap v23, v50\n    v51 = stack_addr.i64 ss4+80\n    store notrap heap v23, v51\n    v52 = stack_addr.i64 ss4+96\n    store notrap heap v22, v52  ; v22 = 0\n    v53 = stack_addr.i64 ss4+104\n    store notrap heap v21, v53  ; v21 = 0\n    v54 = stack_addr.i64 ss4+108\n    store notrap heap v20, v54  ; v20 = 0\n    v55 = stack_addr.i64 ss5\n    store notrap vmctx v23, v55\n    v56 = stack_addr.i64 ss5+16\n    store notrap vmctx v23, v56\n    v57 = stack_addr.i64 ss5+32\n    store notrap vmctx v23, v57\n    v58 = stack_addr.i64 ss5+48\n    store notrap vmctx v23, v58\n    v59 = stack_addr.i64 ss5+64\n    store notrap vmctx v23, v59\n    v60 = stack_addr.i64 ss5+80\n    store notrap vmctx v23, v60\n    v61 = stack_addr.i64 ss5+96\n    store notrap vmctx v23, v61\n    v62 = stack_addr.i64 ss5+112\n    store notrap vmctx v22, v62  ; v22 = 0\n    v63 = stack_addr.i64 ss5+120\n    store notrap vmctx v21, v63  ; v21 = 0\n    v64 = stack_addr.i64 ss5+124\n    store notrap vmctx v20, v64  ; v20 = 0\n    v65 = icmp_imm uge v3, 0x5123  ; v3 = 0xffef\n    brif v65, block3, block2\n\nblock3:\n    v66 = icmp_imm.i16 uge v3, 0xd5d7  ; v3 = 0xffef\n    brif v66, block5, block4\n\nblock5:\n    v67 = icmp_imm.i16 uge v3, 0xf6ff  ; v3 = 0xffef\n    brif v67, block7, block6\n\nblock7:\n    v68 = icmp_imm.i16 uge v3, 0xff22  ; v3 = 0xffef\n    brif v68, block9, block8\n\nblock9:\n    v69 = icmp_imm.i16 eq v3, 0xffdd  ; v3 = 0xffef\n    brif v69, block1, block10\n\nblock10:\n    v70 = icmp_imm.i16 uge v3, 0xff79  ; v3 = 0xffef\n    brif v70, block12, block11\n\nblock12:\n    v71 = iadd_imm.i16 v3, 0xffff_ffff_ffff_0087  ; v3 = 0xffef\n    v72 = uextend.i32 v71\n    br_table v72, block1, [block1, block1, block1, block1, block1, block1]\n\nblock11:\n    v73 = icmp_imm.i16 uge v3, 0xff22  ; v3 = 0xffef\n    brif v73, block13, block1\n\nblock13:\n    v74 = iadd_imm.i16 v3, 0xffff_ffff_ffff_00de  ; v3 = 0xffef\n    v75 = uextend.i32 v74\n    br_table v75, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock8:\n    v76 = icmp_imm.i16 eq v3, 0xf951  ; v3 = 0xffef\n    brif v76, block1, block14\n\nblock14:\n    v77 = icmp_imm.i16 uge v3, 0xf6ff  ; v3 = 0xffef\n    brif v77, block15, block1\n\nblock15:\n    v78 = iadd_imm.i16 v3, 0xffff_ffff_ffff_0901  ; v3 = 0xffef\n    v79 = uextend.i32 v78\n    br_table v79, block1, [block1, block1, block1, block1, block1, block1, block1]\n\nblock6:\n    v80 = icmp_imm.i16 uge v3, 0xef2a  ; v3 = 0xffef\n    brif v80, block17, block16\n\nblock17:\n    v81 = icmp_imm.i16 eq v3, 0xf426  ; v3 = 0xffef\n    brif v81, block1, block18\n\nblock18:\n    v82 = icmp_imm.i16 uge v3, 0xefff  ; v3 = 0xffef\n    brif v82, block20, block19\n\nblock20:\n    v83 = iadd_imm.i16 v3, 0xffff_ffff_ffff_1001  ; v3 = 0xffef\n    v84 = uextend.i32 v83\n    br_table v84, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock19:\n    v85 = icmp_imm.i16 uge v3, 0xef2a  ; v3 = 0xffef\n    brif v85, block21, block1\n\nblock21:\n    v86 = iadd_imm.i16 v3, 0xffff_ffff_ffff_10d6  ; v3 = 0xffef\n    v87 = uextend.i32 v86\n    br_table v87, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock16:\n    v88 = icmp_imm.i16 eq v3, 0xdc2a  ; v3 = 0xffef\n    brif v88, block1, block22\n\nblock22:\n    v89 = icmp_imm.i16 uge v3, 0xd5d7  ; v3 = 0xffef\n    brif v89, block23, block1\n\nblock23:\n    v90 = iadd_imm.i16 v3, 0xffff_ffff_ffff_2a29  ; v3 = 0xffef\n    v91 = uextend.i32 v90\n    br_table v91, block1, [block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1, block1]\n\nblock4:\n    v92 = icmp_imm.i16 uge v3, 0x7363  ; v3 = 0xffef\n    brif v92, block25, block24\n\nblock25:\n    v93 = icmp_imm.i16 uge v3, 0x9f22  ; v3 = 0xffef\n    brif v93, block27, block26\n\nblock27:\n    v94 = icmp_imm.i16 uge v3, 0xbf\n[message truncated]\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 445953399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718917436
    }
]