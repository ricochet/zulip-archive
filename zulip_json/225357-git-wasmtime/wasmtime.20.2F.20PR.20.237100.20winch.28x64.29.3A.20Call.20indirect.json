[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a> from <code>saulecabrera:winch-call-indirect</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change adds support for the <code>call_indirect</code> instruction to Winch.</p>\n<p>Libcalls are a pre-requisite for supporting <code>call_indirect</code> in order to lazily initialy funcrefs. This change adds support for libcalls to Winch by introducing a <code>BuiltinFunctions</code> struct similar to Cranelift's <code>BuiltinFunctionSignatures</code> struct.</p>\n<p>In general, libcalls are handled like any other function call, with the only difference that given that not all the information to fulfill the function call might be known up-front, control is given to the caller for finalizing the call.</p>\n<p>The introduction of function references also involves dealing with pointer-sized loads and stores, so this change also adds the required functionality to <code>FuncEnv</code> and <code>MacroAssembler</code> to be pointer aware, making it straight forward to derive an <code>OperandSize</code> or <code>WasmType</code> from the target's pointer size.</p>\n<p>Finally, given the complexity of the call_indirect instrunction, this change bundles an improvement to the register allocator, allowing it to track the allocatable vs non-allocatable registers, this is done to avoid any mistakes when allocating/de-allocating registers that are not alloctable.</p>\n<p>--<br>\nprtest:full</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 393596024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695864564
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393596025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695864564
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>:</p>\n<blockquote>\n<p>This change adds support for the <code>call_indirect</code> instruction to Winch.</p>\n<p>Libcalls are a pre-requisite for supporting <code>call_indirect</code> in order to lazily initialy funcrefs. This change adds support for libcalls to Winch by introducing a <code>BuiltinFunctions</code> struct similar to Cranelift's <code>BuiltinFunctionSignatures</code> struct.</p>\n<p>In general, libcalls are handled like any other function call, with the only difference that given that not all the information to fulfill the function call might be known up-front, control is given to the caller for finalizing the call.</p>\n<p>The introduction of function references also involves dealing with pointer-sized loads and stores, so this change also adds the required functionality to <code>FuncEnv</code> and <code>MacroAssembler</code> to be pointer aware, making it straight forward to derive an <code>OperandSize</code> or <code>WasmType</code> from the target's pointer size.</p>\n<p>Finally, given the complexity of the call_indirect instrunction, this change bundles an improvement to the register allocator, allowing it to track the allocatable vs non-allocatable registers, this is done to avoid any mistakes when allocating/de-allocating registers that are intended to be non-allocatable.</p>\n<p>--<br>\nprtest:full</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 393596238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695864687
    },
    {
        "content": "<p><strong>saulecabrera</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a> as ready for review.</p>",
        "id": 393680799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695898773
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393680808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695898774
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393680811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695898775
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393680812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695898775
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393680814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695898775
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393680817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695898775
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1649505209\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! A little confusion below for me but the overall shape looks good.</p>\n</blockquote>",
        "id": 393787970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927518
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1649505209\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! A little confusion below for me but the overall shape looks good.</p>\n</blockquote>",
        "id": 393787971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927518
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340543479\">PR review comment</a>:</p>\n<blockquote>\n<p>s/siganture/signature/</p>\n</blockquote>",
        "id": 393787972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927518
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340551919\">PR review comment</a>:</p>\n<blockquote>\n<p>It's probably a good idea to future-proof this a bit by using <code>u64</code>s; all ISAs we support today have 32 GPRs or less but this would be a surprising footgun if we ever exceeded that.</p>\n</blockquote>",
        "id": 393787973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927519
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340544857\">PR review comment</a>:</p>\n<blockquote>\n<p>s/calcualte/calculate/</p>\n</blockquote>",
        "id": 393787974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927519
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340553892\">PR review comment</a>:</p>\n<blockquote>\n<p>Along with the above comment, let's assert that <code>index</code> is in range here rather than silently truncating (the <code>as u32</code> cast) and then left-shifting off the end (<code>1 &lt;&lt; index</code>) -- perhaps <code>assert!(reg.hw_enc() &lt; MAX_REGS);</code> and define <code>MAX_REGS</code> near where we would use <code>u32</code> (or <code>u64</code> as per other comment) for the bitfield above.</p>\n</blockquote>",
        "id": 393787976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927519
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340557837\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not quite understanding the \"unchecked\" mechanism here, or the need to defer calculation of stack size needed, etc. -- don't we know the signatures for all our builtins? Could you add a comment describing why this needs to be unchecked?</p>\n</blockquote>",
        "id": 393787977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927519
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340554358\">PR review comment</a>:</p>\n<blockquote>\n<p>s/Calcualte/Calculate/</p>\n</blockquote>",
        "id": 393787978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695927519
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393805375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935320
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1649716042\">PR review</a>.</p>",
        "id": 393805544,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935404
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340671777\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, good call, I've made this a <code>u64</code> and introduced a concept of <code>max</code> in the <code>RegBitSet</code>. </p>\n</blockquote>",
        "id": 393805547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935404
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393805613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935451
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1649718188\">PR review</a>.</p>",
        "id": 393805722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935521
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340673219\">PR review comment</a>:</p>\n<blockquote>\n<p>I've added more documentation in the function definition, hope this clarifies things. </p>\n</blockquote>",
        "id": 393805724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935521
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393805783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935541
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393806476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695935953
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1649735005\">PR review</a>.</p>",
        "id": 393807205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695936346
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1649735005\">PR review</a>.</p>",
        "id": 393807206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695936346
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340684006\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, OK, I understand better now, I think: this is avoiding the special \"constructor but also has side-effects on <code>masm</code>\" behavior of <code>new</code> above. In that case, I think my feedback is that this feels a bit like a potential footgun, in that it puts the side-effect in an odd, implicit place: I think it'd be better to have a more functional approach here where the constructor allocates a struct of info, and then we have methods on that struct to carry out its effects. So rather than take <code>masm</code> in <code>new</code> (and <code>context</code>), I think it would make sense to explicitly call the register-save method from callsites. It also makes the sequence clearer and more explicit (\"save registers, set up args, call\") rather than hiding part of that inside what looks like just a constructor.</p>\n</blockquote>",
        "id": 393807207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695936346
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1649748609\">PR review</a>.</p>",
        "id": 393808826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695937163
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1340692495\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for that suggestion, yeah I agree that this is going to potentially make things clearer, and with this approach we might end up with a more uniform approach to calls. I'll try something along these lines!</p>\n</blockquote>",
        "id": 393808827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695937164
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393917734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695989026
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393929256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695993437
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393933541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695994975
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1650810506\">PR review</a>.</p>",
        "id": 393933749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695995047
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1341383656\">PR review comment</a>:</p>\n<blockquote>\n<p>I've addressed the your review in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100/commits/57cc5dba5f4bf63ec652383b662537cd5868fcf0\">https://github.com/bytecodealliance/wasmtime/pull/7100/commits/57cc5dba5f4bf63ec652383b662537cd5868fcf0</a>, your suggestion definitely made things clearer IMO; we can now easily know what's going on at callsites. </p>\n</blockquote>",
        "id": 393933752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695995048
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#discussion_r1341383656\">PR review comment</a>.</p>",
        "id": 393941261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695997399
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100#pullrequestreview-1651172095\">PR review</a>:</p>\n<blockquote>\n<p>Looks great, thanks!</p>\n</blockquote>",
        "id": 393971679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696006775
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7100\">PR #7100</a>.</p>",
        "id": 393978099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696009488
    }
]