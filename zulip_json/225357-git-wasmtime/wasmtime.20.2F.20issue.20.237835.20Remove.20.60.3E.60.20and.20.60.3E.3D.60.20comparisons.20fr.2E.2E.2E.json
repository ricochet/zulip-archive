[
    {
        "content": "<p>Kmeakin opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">issue #7835</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>The condition codes for performing the <code>&gt;</code> and <code>&gt;=</code> comparisons on integers should be removed from the Cranelift IR </p>\n<h4>Benefit</h4>\n<p>Makes the IR more strongly normalizing. At the moment, there are two equivalent ways of specifying the same computation: <code>x &gt; y</code> and <code>y &lt; x</code> are semantically equivalent but have different representations in the IR.</p>\n<p>Having only one possible representation would mean fewer cases to consider when writing lowering/optimization code, and fewer tests have to be performed at runtime when legalizing/optimizing programs.</p>\n<h4>Implementation</h4>\n<p>Continue to accept the <code>sgt</code>, <code>sge, </code>ugt<code> and </code>uge<code> condition codes when consuming textual IR, but convert them to their swapped forms and swap the arguments to </code>icmp` during parsing. Update legalization/optimization code to fix any codegen regressions.</p>\n<h4>Alternatives</h4>\n<p>Do nothing<br>\n</p>\n</blockquote>",
        "id": 418447945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706391148
    },
    {
        "content": "<p>Kmeakin edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">issue #7835</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>The condition codes for performing the <code>&gt;</code> and <code>&gt;=</code> comparisons on integers should be removed from the Cranelift IR </p>\n<h4>Benefit</h4>\n<p>Makes the IR more strongly normalizing. At the moment, there are two equivalent ways of specifying the same computation: <code>x &gt; y</code> and <code>y &lt; x</code> are semantically equivalent but have different representations in the IR.</p>\n<p>Having only one possible representation would mean fewer cases to consider when writing lowering/optimization code, and fewer tests have to be performed at runtime when legalizing/optimizing programs.</p>\n<h4>Implementation</h4>\n<p>Continue to accept the <code>sgt</code>, <code>sge</code>, <code>ugt</code> and <code>uge</code> condition codes when consuming textual IR, but convert them to their swapped forms and swap the arguments to <code>icmp</code> during parsing. Update legalization/optimization code to fix any codegen regressions.</p>\n<h4>Alternatives</h4>\n<p>Do nothing<br>\n</p>\n</blockquote>",
        "id": 418447961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706391166
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835#issuecomment-1914972109\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">issue #7835</a>:</p>\n<blockquote>\n<p>I think this is a good idea, however we will want to additionally make sure that the <code>InstBuilder</code> trait continues to have <code>&gt;</code>/<code>&gt;=</code> methods, but just swaps operands and emits <code>&lt;</code>/<code>&lt;=</code> instructions. This is the kind of thing we've talked about before in other contexts around simplifying the IR, but also not losing ergonomics for frontends or saddling them with undue breaking changes.</p>\n</blockquote>",
        "id": 418665316,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706543114
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">Issue #7835</a>.</p>",
        "id": 418665411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706543140
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the cranelift:area:clif label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">Issue #7835</a>.</p>",
        "id": 418665413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706543140
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835#issuecomment-1915010924\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">issue #7835</a>:</p>\n<blockquote>\n<p>For <code>icmp_imm</code> <code>IntCC</code> will have to preserve them or we would need to add <code>ircmp_imm</code> like we have <code>irsub_imm</code>.</p>\n</blockquote>",
        "id": 418668320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706543955
    },
    {
        "content": "<p>Kmeakin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835#issuecomment-1915642092\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">issue #7835</a>:</p>\n<blockquote>\n<p>I can work on an implementation from this, but I will need to get permission from my employer before I can submit a PR</p>\n</blockquote>",
        "id": 418727947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706565332
    },
    {
        "content": "<p>Solo-steven <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835#issuecomment-2254407467\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7835\">issue #7835</a>:</p>\n<blockquote>\n<p>Hi I would like to take this issue if possible, but I am beginner of wasmtime, so might take a while to fix it !</p>\n</blockquote>",
        "id": 454588654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722157827
    }
]