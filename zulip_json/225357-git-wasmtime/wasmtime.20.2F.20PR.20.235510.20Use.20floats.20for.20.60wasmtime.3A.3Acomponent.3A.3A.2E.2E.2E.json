[
    {
        "content": "<p>lann opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5510\">PR #5510</a> from <code>component-val-use-native-floats</code> to <code>main</code>:</p>\n<blockquote>\n<p>The definitions of <code>wasmtime::component::Val::Float{32,64}</code> mirrored <code>wasmtime::Val::F{32,64}</code> by using integers as their wrapped types, storing the bit representation of their floating point values. This was necessary for the core Wasm <code>f32</code>/<code>f64</code> types because Rust floats don't have guaranteed NaN bit representations.</p>\n<p>The component model <code>float32</code>/<code>float64</code> types require NaN canonicalization, so we can use normal Rust <code>f{32,64}</code> instead.</p>\n<p>Closes #5480</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 319263770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672773491
    },
    {
        "content": "<p>lann edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5510\">PR #5510</a> from <code>component-val-use-native-floats</code> to <code>main</code>:</p>\n<blockquote>\n<p>The definitions of <code>wasmtime::component::Val::Float{32,64}</code> mirrored <code>wasmtime::Val::F{32,64}</code> by using integers as their wrapped types, storing the bit representation of their floating point values. This was necessary for the core Wasm <code>f32</code>/<code>f64</code> types because Rust floats don't have guaranteed NaN bit representations.</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/5480#issuecomment-1359712605\">https://github.com/bytecodealliance/wasmtime/issues/5480#issuecomment-1359712605</a> @jameysharp:<br>\nWe do this in Cranelift too. I don't know if it's for the same reason that Wasmtime's API works this way, but Cranelift's reason was discussed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2251#discussion_r498508646\">https://github.com/bytecodealliance/wasmtime/pull/2251#discussion_r498508646</a>. In short, Rust doesn't make any guarantees about the bit-representation of NaN values being preserved in floating-point types. So if you care about that, you need to keep the raw bits in an integer type until the time when you want to do actual floating-point operations on them.</p>\n</blockquote>\n<p>The component model <code>float32</code>/<code>float64</code> types require NaN canonicalization, so we can use normal Rust <code>f{32,64}</code> instead.</p>\n<p>Closes #5480</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 319263988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672773586
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5510#pullrequestreview-1235004849\">PR review</a>.</p>",
        "id": 319264181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672773658
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5510\">PR #5510</a>.</p>",
        "id": 319264194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672773664
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5510\">PR #5510</a>.</p>",
        "id": 319273859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672777419
    }
]