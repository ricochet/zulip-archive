[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902\">PR #6902</a> from <code>alexcrichton:update-fixups</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is a follow-up to #6804 with the discussion on #6818. This undoes some of the changes from #6804, such as bringing a size parameter back to <code>emit_island</code>, and implements the changes discussed in #6818. Namely fixups are now tracked in a <code>pending_fixups</code> list for editing and modification and then during island emission they're flushed into a <code>BinaryHeap</code> tracked as <code>fixup_records</code>. Additionally calculation of the size of the pending island is now done as a single calculation rather than updating metadata as we go along. This is required because fixups are no longer entirely cleared during island emission so the previous logic of \"reset the island size to zero\" and have it get recalculated as the island is emitted is no longer applicable. I opted to go with a simplistic version of this for now which assumes that all veneers are the worst case size, but if necessary I think this could be more optimal by tracking each veneer in a counter.</p>\n<p>Closes #6818</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 387122840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692895551
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902\">PR #6902</a>.</p>",
        "id": 387122842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692895551
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902\">PR #6902</a>.</p>",
        "id": 387122846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692895552
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902\">PR #6902</a>.</p>",
        "id": 387138344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692900592
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902#pullrequestreview-1594193747\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for taking this on!</p>\n<p>The new version looks correct; I have some thoughts on performance below. </p>\n</blockquote>",
        "id": 387140164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692901225
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902#pullrequestreview-1594193747\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for taking this on!</p>\n<p>The new version looks correct; I have some thoughts on performance below. </p>\n</blockquote>",
        "id": 387140165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692901225
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902#discussion_r1304702834\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm worried this will lead to a new kind of quadratic behavior: we're iterating over all pending fixups every time we check whether an island is needed, which happens (at least) once per basic block. In the common case (no islands) <code>pending_fixup_records</code> will contain all fixups in the function -- every block-label reference in branches, every constant-label reference.</p>\n<p>Perhaps we could keep a running deadline for <code>pending_fixup_records</code> that is updated as we push new ones and cleared (set to max distance) at island emission time? It's a pessimization compared to this code because it doesn't allow loosening the deadline if we chomp a branch; but in practice that's unlikely to make any difference because the branch kind that we chomp (common conditional branches) will occur frequently and we do keep many/most of them.</p>\n</blockquote>",
        "id": 387140167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692901226
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902#discussion_r1304704408\">PR review comment</a>:</p>\n<blockquote>\n<p>Rather than populate the fixup-records heap and then drain it in order, could we do a two-stage thing where we process all pending fixups, push those that are still pending (not resolvable) into the heap, and then iterate over those?</p>\n<p>I'm worried that this will somewhat noticeably pessimize the common case: one run of this algorithm at the end of a function that had no islands otherwise, where everything can be resolved. In that case, we shouldn't pay the cost to work out deadlines and sort by them.</p>\n</blockquote>",
        "id": 387140168,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692901226
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902\">PR #6902</a>.</p>",
        "id": 387170879,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692916258
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902#pullrequestreview-1594558079\">PR review</a>.</p>",
        "id": 387170911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692916286
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902#discussion_r1304935902\">PR review comment</a>:</p>\n<blockquote>\n<p>Sounds good to me! That was actually preexisting as well that if we chomp things we don't update the deadline, and that seems fine to me yeah</p>\n</blockquote>",
        "id": 387170912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692916286
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902#pullrequestreview-1594615834\">PR review</a>:</p>\n<blockquote>\n<p>LGTM!</p>\n</blockquote>",
        "id": 387177573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692920973
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6902\">PR #6902</a>.</p>",
        "id": 387182483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692923832
    }
]