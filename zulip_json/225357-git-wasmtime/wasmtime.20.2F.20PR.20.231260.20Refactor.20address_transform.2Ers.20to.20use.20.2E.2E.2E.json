[
    {
        "content": "<p>yurydelendik opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a> from <code>refactor-addr-transform</code> to <code>master</code>:</p>\n<blockquote>\n<p>The crates/debug/src/transform/address_transform.rs is unoptimized in terms of data structures. This PR refactors this file to remove creation of intermediate in-heap structures, thus improves overall performance of the DWARF transformation.</p>\n</blockquote>",
        "id": 190071474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583762593
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a> from <code>refactor-addr-transform</code> to <code>master</code>:</p>\n<blockquote>\n<p>The crates/debug/src/transform/address_transform.rs is unoptimized in terms of data structures. This PR refactors this file to remove creation of intermediate in-heap structures, thus improves overall performance of the DWARF transformation.</p>\n</blockquote>",
        "id": 190328454,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583958919
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a> from <code>refactor-addr-transform</code> to <code>master</code>:</p>\n<blockquote>\n<p>The crates/debug/src/transform/address_transform.rs is unoptimized in terms of data structures. This PR refactors this file to remove creation of intermediate in-heap structures, thus improves overall performance of the DWARF transformation.</p>\n</blockquote>",
        "id": 190598744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584194861
    },
    {
        "content": "<p><strong>yurydelendik</strong> requested <a href=\"https://github.com/fitzgen\" target=\"_blank\" title=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a>.</p>",
        "id": 190598786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584194906
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260#pullrequestreview-375429191\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260#pullrequestreview-375429191\">PR Review</a>.</p>",
        "id": 190757193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584380568
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393189567\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393189567\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I wonder if we could make this a <code>u32</code> in practice? Do we ever have to process Wasm files larger than 4GiB?</p>\n<p>This would let us shave off half the overhead on 64-bit platforms.</p>\n</blockquote>",
        "id": 190757194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584380568
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393196988\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393196988\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Rather than having our index be a <code>BTreeMap&lt;WasmAddress, Box&lt;[RangeIndex]&gt;</code>, which implies a bunch of allocated boxed slices that are all relatively small and potentially contribute to internal and/or external memory fragmentation, we should be able to save some memory by doing:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">index_ranges</span>: <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"n\">RangeIndex</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"c1\">// A map from the wasm address to the range within `index_ranges` for the associated wasm address.</span>\n<span class=\"n\">index</span>: <span class=\"nc\">BTreeMap</span><span class=\"o\">&lt;</span><span class=\"n\">WasmAddress</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">ops</span>::<span class=\"n\">Range</span><span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>Also if we can get away with it, we could make it a <code>Range&lt;u32&gt;</code> for extra savings.</p>\n<p>To do this, rather than inserting <code>sorted_ranges</code> into the <code>index</code> here, we would do something like:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">all_ranges</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">sorted_ranges</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"n\">index_ranges</span><span class=\"p\">.</span><span class=\"n\">extend</span><span class=\"p\">(</span><span class=\"n\">sorted_ranges</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">position</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">..</span><span class=\"n\">end</span><span class=\"p\">);</span><span class=\"w\"></span>\n</pre></div>\n\n\n</blockquote>",
        "id": 190757195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584380568
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393198589\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393198589\">PR Review Comment</a>:</p>\n<blockquote>\n<p>And the same here?</p>\n</blockquote>",
        "id": 190757196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584380568
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393198421\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260#discussion_r393198421\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Should this be <code>(WasmAddress, RangeIndex)</code>?</p>\n</blockquote>",
        "id": 190757197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584380568
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260#pullrequestreview-375429191\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260#pullrequestreview-375429191\">PR Review</a>.</p>",
        "id": 190757198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584380568
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a> from <code>refactor-addr-transform</code> to <code>master</code>:</p>\n<blockquote>\n<p>The crates/debug/src/transform/address_transform.rs is unoptimized in terms of data structures. This PR refactors this file to remove creation of intermediate in-heap structures, thus improves overall performance of the DWARF transformation.</p>\n</blockquote>",
        "id": 191493488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584978703
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a> from <code>refactor-addr-transform</code> to <code>master</code>:</p>\n<blockquote>\n<p>The crates/debug/src/transform/address_transform.rs is unoptimized in terms of data structures. This PR refactors this file to remove creation of intermediate in-heap structures, thus improves overall performance of the DWARF transformation.</p>\n</blockquote>",
        "id": 191511337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584985912
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a> from <code>refactor-addr-transform</code> to <code>master</code>:</p>\n<blockquote>\n<p>The crates/debug/src/transform/address_transform.rs is unoptimized in terms of data structures. This PR refactors this file to remove creation of intermediate in-heap structures, thus improves overall performance of the DWARF transformation.</p>\n</blockquote>",
        "id": 191532431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584995641
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a> from <code>refactor-addr-transform</code> to <code>master</code>:</p>\n<blockquote>\n<p>The crates/debug/src/transform/address_transform.rs is unoptimized in terms of data structures. This PR refactors this file to remove creation of intermediate in-heap structures, thus improves overall performance of the DWARF transformation.</p>\n</blockquote>",
        "id": 191532819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584995854
    },
    {
        "content": "<p>yurydelendik merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1260\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1260\">PR #1260</a>.</p>",
        "id": 191540105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584999391
    }
]