[
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5534#issuecomment-1372908282\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5534\">issue #5534</a>:</p>\n<blockquote>\n<blockquote>\n<p>Makes sense to me! I missed the introduction of <code>side_effects_idempotent</code> so I'm not sure if the egraph case handles it too or if it's only simple-gvn. But I think this should be safe to merge either way.</p>\n</blockquote>\n<p>It is just <code>simple_gvn</code> for now, but shouldn't be hard to introduce to the egraphs stuff since it's just a predicate on the opcode, and not some deep logic that needs to be copied over. I didn't implement it just because I don't know exactly where that would go yet. Maybe you do?</p>\n</blockquote>",
        "id": 319689661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672960081
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5534#issuecomment-1373041991\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5534\">issue #5534</a>:</p>\n<blockquote>\n<p>I think the place to use <code>side_effects_idempotent</code> for egraph optimization is in <code>is_pure_for_egraph</code>, defined in <code>cranelift/codegen/src/inst_predicates.rs</code>. I'm not absolutely sure though.</p>\n</blockquote>",
        "id": 319707295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672970580
    }
]