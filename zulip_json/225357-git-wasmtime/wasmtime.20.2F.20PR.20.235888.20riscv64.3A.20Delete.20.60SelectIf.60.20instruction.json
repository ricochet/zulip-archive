[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a> from <code>riscv64-remove-selectif</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR deletes the <code>Inst::SelectIf</code> pseudo instruction from the RISC-V backend. This instruction was only used when lowering the <code>select_spectre_guard</code> clif instruction in a specific case of the input being preceded by an <code>icmp</code>. That being said, the instruction doesn't really do anything different from the regular select.</p>\n<p>This PR removes the instruction and defaults to the regular <code>Inst::Select</code>. We get pretty much exactly the same codegen, with the exception that an additional <code>andi</code> is now added into the generated code. That doesn't seem to be to bad, and we can probably remove it with some additional effort if needed.</p>\n</blockquote>",
        "id": 338351116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677510050
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1315781454\">PR review</a>.</p>",
        "id": 338352188,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677510276
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118872670\">PR review comment</a>:</p>\n<blockquote>\n<p><code>select_spectre_guard</code> shouldn't emit any branches. While the old code here is wrong, fixing it will require the split between <code>select</code> and <code>select_spectre_guard</code> again.</p>\n</blockquote>",
        "id": 338352189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677510276
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118881188\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think we have a way of doing that with the base ISA on RISC-V. Do you know how other compilers handle this?</p>\n</blockquote>",
        "id": 338353827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677510660
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1315794202\">PR review</a>.</p>",
        "id": 338353832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677510662
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1315812913\">PR review</a>.</p>",
        "id": 338356259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511176
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118893599\">PR review comment</a>:</p>\n<blockquote>\n<p>You can use bit masking: <a href=\"https://github.com/RustCrypto/utils/blob/0256fff4d67edb4956f5200b877f41038c4ef7e7/cmov/src/portable.rs#L46-L47\">https://github.com/RustCrypto/utils/blob/0256fff4d67edb4956f5200b877f41038c4ef7e7/cmov/src/portable.rs#L46-L47</a></p>\n</blockquote>",
        "id": 338356261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511176
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1315826309\">PR review</a>.</p>",
        "id": 338358060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511573
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118902607\">PR review comment</a>:</p>\n<blockquote>\n<p>Right, but I think that can still be speculated on right? My understanding is that we used <code>cmov</code> on x64 and <code>csel</code> on AArch64 because we had architectural guarantees that they wouldn't be speculated on?</p>\n<p>I'm up for rewriting this if it does prevent speculation though.</p>\n</blockquote>",
        "id": 338358068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511574
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118902607\">PR review comment</a>.</p>",
        "id": 338358386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511640
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118902607\">PR review comment</a>.</p>",
        "id": 338358468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511662
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1315838651\">PR review</a>.</p>",
        "id": 338359600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511937
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118910811\">PR review comment</a>:</p>\n<blockquote>\n<p>While it is technically possible, I don't think any cpu would see a benefit in pattern matching this pattern and turning it back into a conditional branch that the branch predictor can speculate.</p>\n</blockquote>",
        "id": 338359608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511939
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1118902607\">PR review comment</a>.</p>",
        "id": 338359711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677511970
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1320950929\">PR review</a>.</p>",
        "id": 338992506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677724470
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1122538710\">PR review comment</a>:</p>\n<blockquote>\n<p>What do you two think is the current state of this PR? I'm not sure what conclusions you've come to from this conversation.</p>\n</blockquote>",
        "id": 338992507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677724470
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1321395283\">PR review</a>.</p>",
        "id": 339047673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677750176
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1122832092\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess this PR is fine for now, but I did like to see a proper implementation of select_spectre_guard in the future.</p>\n</blockquote>",
        "id": 339047675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677750176
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1122903717\">PR review comment</a>:</p>\n<blockquote>\n<p>I have a version of this pretty much ready to go, but got distracted by the fuzzer SIMD stuff! I'll clean it up a little bit and push those commits.</p>\n</blockquote>",
        "id": 339061889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677753856
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1321547748\">PR review</a>.</p>",
        "id": 339061890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677753856
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a> from <code>riscv64-remove-selectif</code> to <code>main</code>.</p>",
        "id": 339071783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677756532
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a> from <code>riscv64-remove-selectif</code> to <code>main</code>.</p>",
        "id": 339072381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677756683
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a> from <code>riscv64-remove-selectif</code> to <code>main</code>.</p>",
        "id": 339073923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677757112
    },
    {
        "content": "<p><strong>afonso360</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a> as ready for review.</p>",
        "id": 339074611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677757292
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a>.</p>",
        "id": 347664122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680873883
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a>.</p>",
        "id": 347664125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680873884
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a>.</p>",
        "id": 347664126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680873884
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1377834476\">PR review</a>.</p>",
        "id": 348266220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681146934
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1377834476\">PR review</a>.</p>",
        "id": 348266221,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681146934
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1161902682\">PR review comment</a>:</p>\n<blockquote>\n<p>Is the reason we can't use <code>lower_bmask</code> here its ultimate use of <code>gen_select_reg</code>? Would it be bad to rework the lowering of <code>SelectReg</code> to take this approach instead?</p>\n</blockquote>",
        "id": 348266224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681146934
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1161899654\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        ;; non_zero = ((normalized | ((!normalized) + 1)) &gt;&gt; 63) &amp; 1\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 348266228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681146935
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a>.</p>",
        "id": 348300731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681159242
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1378124154\">PR review</a>.</p>",
        "id": 348302826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681160153
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1162081158\">PR review comment</a>:</p>\n<blockquote>\n<p>I hadn't even considered that this was a <code>bmask</code> operation! And yeah, I think this is a better lowering than what we currently have. However I check what <a href=\"https://godbolt.org/z/dcqq34d3d\">LLVM produces for <code>bmask</code></a> and It's slightly better, so I'm going to rework <code>bmask</code> to use that and use that here.</p>\n</blockquote>",
        "id": 348302827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681160153
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a>.</p>",
        "id": 348307764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681162407
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1378170705\">PR review</a>.</p>",
        "id": 348308928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681162984
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1162112439\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm much happier with the output of this now, Thanks!</p>\n<hr>\n<p>I'm now re-reading your comment, and realizing there was a second part about <code>SelectReg</code> that I missed. </p>\n<p>I have somewhat mixed feelings about making <code>Inst::SelectReg</code> do something like this, It would be quite a bit longer (~4 instructions I think?). But it would be really nice since we could move it entirely into ISLE. However I don't think that justifies it, it's a really common operation in the backend. </p>\n<p>I'm willing to be persuaded otherwise though!</p>\n</blockquote>",
        "id": 348308929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681162984
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1378187701\">PR review</a>.</p>",
        "id": 348311645,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681164184
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1162123863\">PR review comment</a>:</p>\n<blockquote>\n<p>My worry with recommending <code>lower_bmask</code> was that it used <code>gen_select_reg</code> internally, which will produce jumps to select the result. Since <code>lower_bmask</code> no longer relies on <code>gen_select_reg</code>, I don't see any reason to rework the <code>SelectReg</code> emit code :)</p>\n</blockquote>",
        "id": 348311646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681164184
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1378241560\">PR review</a>.</p>",
        "id": 348321232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681168695
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1162160991\">PR review comment</a>:</p>\n<blockquote>\n<p>Since <code>lower_bmask</code> can already produce an <code>I128</code> result, I think the following should be equivalent:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        (wide_mask Reg (lower_bmask ty cmp_ty cmp))\n        ;; Using the mask above we can select either `x` or `y` by\n        ;; performing a bitwise `and` on both sides and then merging them\n        ;; together. We know that only the bits of one of the sides will be selected.\n        ;; TODO: We can use `andn` here if we have `Zbb`\n        (lhs ValueRegs (gen_and arg_ty x wide_mask))\n        (rhs ValueRegs (gen_and arg_ty y (gen_bnot arg_ty wide_mask))))\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 348321233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681168695
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1162160991\">PR review comment</a>.</p>",
        "id": 348322340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681169364
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1162160991\">PR review comment</a>.</p>",
        "id": 348322525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681169477
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a>.</p>",
        "id": 348395629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681202952
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1379678441\">PR review</a>.</p>",
        "id": 348511966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681231044
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#pullrequestreview-1379678441\">PR review</a>.</p>",
        "id": 348511967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681231044
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888#discussion_r1163069326\">PR review comment</a>:</p>\n<blockquote>\n<p>It would be nice if <code>normalize_cmp_value</code> didn't normalize constants whose value already fit in the target type, but there's no need to fix that on this PR.</p>\n</blockquote>",
        "id": 348511970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681231045
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5888\">PR #5888</a>.</p>",
        "id": 348533008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681236933
    }
]