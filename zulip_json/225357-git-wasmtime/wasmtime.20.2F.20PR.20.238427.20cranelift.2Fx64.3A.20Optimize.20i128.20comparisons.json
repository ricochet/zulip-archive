[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8427\">PR #8427</a> from <code>jameysharp:simplify-x64-i128</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Inequality comparisons between i128 values were previously eight instructions and this reduces them to two, plus one move if one of the inputs is still live afterward.</p>\n<p>Equality comparisons were six instructions and are now three, plus up to two moves if both inputs are still live afterward.</p>\n<p>This removes 45 instructions from the test in x64/i128.clif that generates all possible i128 comparisons. In addition to using fewer instructions for each comparison, it also reduces register pressure enough that the function no longer spills.</p>\n<p>Conditional branches on i128 values are a special case but similar optimizations shrink them from six instructions to two.</p>\n<p>This brings Cranelift in line with what rustc+LLVM generates for equivalent 128-bit comparisons.</p>\n<p>This PR probably conflicts with #8421 in the filetest output; I'll rebase whichever one doesn't land first.</p>\n</blockquote>",
        "id": 434635357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713750339
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8427\">PR #8427</a>.</p>",
        "id": 434635358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713750339
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8427\">PR #8427</a>.</p>",
        "id": 434635359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713750339
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8427#pullrequestreview-2015631354\">PR review</a>:</p>\n<blockquote>\n<p>Do we cover this in run tests and/or the fuzzer? Seems like a good time to double check that we do.</p>\n</blockquote>",
        "id": 434828893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713813797
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8427#issuecomment-2070820114\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8427\">PR #8427</a>:</p>\n<blockquote>\n<p>We do cover this in runtests, and I know this because I got it wrong several times in ways that the runtests caught. :grin: </p>\n<p>I think we also cover it in the Cranelift fuzz targets but I don't remember for sure.</p>\n</blockquote>",
        "id": 434833295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713815263
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8427\">PR #8427</a>.</p>",
        "id": 434839165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713817506
    }
]