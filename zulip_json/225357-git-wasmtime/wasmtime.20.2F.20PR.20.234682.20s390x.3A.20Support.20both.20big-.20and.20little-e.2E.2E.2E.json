[
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4682\">PR #4682</a> from <code>s390x-lane-order</code> to <code>main</code>:</p>\n<blockquote>\n<p>This implements the s390x back-end portion of the solution for<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/4566\">https://github.com/bytecodealliance/wasmtime/issues/4566</a></p>\n<p>We now support both big- and little-endian vector lane order<br>\nin code generation.  The order used for a function is determined<br>\nby the function's ABI: if it uses a Wasmtime ABI, it will use<br>\nlittle-endian lane order, and big-endian lane order otherwise.<br>\n(This ensures that all raw_bitcast instructions generated by<br>\nboth wasmtime and other cranelift frontends can always be<br>\nimplemented as a no-op.)</p>\n<p>Lane order affects the implementation of a number of operations:</p>\n<ul>\n<li>Vector immediates</li>\n<li>Vector memory load / store (in big- and little-endian variants)</li>\n<li>\n<p>Operations explicitly using lane numbers<br>\n  (insertlane, extractlane, shuffle, swizzle)</p>\n</li>\n<li>\n<p>Operations implicitly using lane numbers<br>\n  (iadd_pairwise, narrow/widen, promote/demote, fcvt_low, vhigh_bits)</p>\n</li>\n</ul>\n<p>In addition, when calling a function using a different lane order,<br>\nwe need to lane-swap all vector values passed or returned in registers.</p>\n<p>A small number of changes to common code were also needed:</p>\n<ul>\n<li>\n<p>Ensure we always select a Wasmtime calling convention on s390x<br>\n  in crates/cranelift (func_signature).</p>\n</li>\n<li>\n<p>Fix vector immediates for filetests/runtests.  In PR #4427,<br>\n  I attempted to fix this by byte-swapping the V128 value, but<br>\n  with the new scheme, we'd instead need to perform a per-lane<br>\n  byte swap.  Since we do not know the actual type in write_to_slice<br>\n  and read_from_slice, this isn't easily possible.</p>\n<p>Revert this part of PR #4427 again, and instead just mark the<br>\nmemory buffer as little-endian when emitting the trampoline;<br>\nthe back-end will then emit correct code to load the constant.</p>\n</li>\n<li>\n<p>Change a runtest in simd-bitselect-to-vselect.clif to no longer<br>\n  make little-endian lane order assumptions.</p>\n</li>\n<li>\n<p>Remove runtests in simd-swizzle.clif that make little-endian<br>\n  lane order assumptions by relying on implicit type conversion<br>\n  when using a non-i16x8 swizzle result type (this feature should<br>\n  probably be removed anyway).</p>\n</li>\n</ul>\n<p>Tested with both wasmtime and cg_clif.</p>\n<p>FYI - @cfallin </p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 292819805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660160116
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4682\">PR #4682</a> from <code>s390x-lane-order</code> to <code>main</code>.</p>",
        "id": 292826402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660162763
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4682\">PR #4682</a> from <code>s390x-lane-order</code> to <code>main</code>.</p>",
        "id": 292839403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660168723
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4682#pullrequestreview-1070222430\">PR review</a>.</p>",
        "id": 292990934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660245041
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4682\">PR #4682</a>.</p>",
        "id": 292990951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660245048
    }
]