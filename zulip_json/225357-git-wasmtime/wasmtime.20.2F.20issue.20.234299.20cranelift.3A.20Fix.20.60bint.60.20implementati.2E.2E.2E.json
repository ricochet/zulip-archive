[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299#issuecomment-1164214405\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299\">issue #4299</a>:</p>\n<blockquote>\n<p>The <code>bint</code> instruction returns 0 or 1. The <code>bmask</code> instruction returns all zeros or all ones. #3205 is about the actual representation in registers and memory, not about the result of <code>bint</code>/<code>bmask</code>, right?</p>\n</blockquote>",
        "id": 287167277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655978355
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299#issuecomment-1164241028\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299\">issue #4299</a>:</p>\n<blockquote>\n<p>I didn't realize <code>bint</code> was also a vector instruction. I'm up for clarifying the docs and implementing it for vectors or just restricting vectors from this instruction. </p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/3205\">https://github.com/bytecodealliance/wasmtime/issues/3205</a> is about the actual representation in registers and memory, not about the result of bint/bmask, right?</p>\n</blockquote>\n<p>That is my understanding of it as well.</p>\n<blockquote>\n<p>Also, as a side note, could this PR close <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2237\">https://github.com/bytecodealliance/wasmtime/issues/2237</a>? Or is that issue already effectively done?</p>\n</blockquote>\n<p>No, that issue I think is mostly related to the trampoline generating the wrong code when loading / storing booleans, and its why I had to do duplicate some code in this PR in order to not have boolean arguments to the test cases.</p>\n</blockquote>",
        "id": 287170194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655980030
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299#issuecomment-1164241028\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299\">issue #4299</a>:</p>\n<blockquote>\n<p>I didn't realize <code>bint</code> was also a vector instruction. I'm up for clarifying the docs and implementing it for vectors or just restricting vectors from this instruction. Let me know what you would like me to do.</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/3205\">https://github.com/bytecodealliance/wasmtime/issues/3205</a> is about the actual representation in registers and memory, not about the result of bint/bmask, right?</p>\n</blockquote>\n<p>That is my understanding of it as well.</p>\n<blockquote>\n<p>Also, as a side note, could this PR close <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2237\">https://github.com/bytecodealliance/wasmtime/issues/2237</a>? Or is that issue already effectively done?</p>\n</blockquote>\n<p>No, that issue I think is mostly related to the trampoline generating the wrong code when loading / storing booleans, and its why I had to do duplicate some code in this PR in order to not have boolean arguments to the test cases.</p>\n</blockquote>",
        "id": 287170508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655980230
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299#issuecomment-1164241028\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299\">issue #4299</a>:</p>\n<blockquote>\n<p>I didn't realize <code>bint</code> was also a vector instruction. I'm up for implementing it for vectors or restricting vectors from this instruction. Let me know what you would like me to do.</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/3205\">https://github.com/bytecodealliance/wasmtime/issues/3205</a> is about the actual representation in registers and memory, not about the result of bint/bmask, right?</p>\n</blockquote>\n<p>That is my understanding of it as well.</p>\n<blockquote>\n<p>Also, as a side note, could this PR close <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2237\">https://github.com/bytecodealliance/wasmtime/issues/2237</a>? Or is that issue already effectively done?</p>\n</blockquote>\n<p>No, that issue I think is mostly related to the trampoline generating the wrong code when loading / storing booleans, and its why I had to do duplicate some code in this PR in order to not have boolean arguments to the test cases.</p>\n</blockquote>",
        "id": 287175318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655983392
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299#issuecomment-1164643870\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299\">issue #4299</a>:</p>\n<blockquote>\n<blockquote>\n<p>I didn't realize <code>bint</code> was also a vector instruction. I'm up for implementing it for vectors or restricting vectors from this instruction. Let me know what you would like me to do.</p>\n</blockquote>\n<p>I think restricting vectors from this instruction is the easiest path for now.</p>\n<blockquote>\n<blockquote>\n<p>#3205 is about the actual representation in registers and memory, not about the result of bint/bmask, right?</p>\n</blockquote>\n<p>That is my understanding of it as well.</p>\n</blockquote>\n<p>Yes, primarily it is about representations, but @cfallin mentions <code>bint</code> in the description and I bring up an <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3205#issuecomment-901478585\">all ones/all zeroes comment</a> ater. The main reason for me mentioning it here is that I want GitHub to keep track of all the cross-links between related issues (and semi-related issues, in this case) so that it is easier to investigate later.</p>\n<blockquote>\n<blockquote>\n<p>Also, as a side note, could this PR close #2237? Or is that issue already effectively done?</p>\n</blockquote>\n<p>No, that issue I think is mostly related to the trampoline generating the wrong code when loading / storing booleans, and its why I had to do duplicate some code in this PR in order to not have boolean arguments to the test cases.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 287217864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656002888
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299#issuecomment-1164643870\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4299\">issue #4299</a>:</p>\n<blockquote>\n<blockquote>\n<p>I didn't realize <code>bint</code> was also a vector instruction. I'm up for implementing it for vectors or restricting vectors from this instruction. Let me know what you would like me to do.</p>\n</blockquote>\n<p>I think restricting vectors from this instruction is the easiest path for now.</p>\n<blockquote>\n<blockquote>\n<p>#3205 is about the actual representation in registers and memory, not about the result of bint/bmask, right?</p>\n</blockquote>\n<p>That is my understanding of it as well.</p>\n</blockquote>\n<p>Yes, primarily it is about representations, but @cfallin mentions <code>bint</code> in the description and I bring up an <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3205#issuecomment-901478585\">all ones/all zeroes comment</a> later. The main reason for me mentioning it here is that I want GitHub to keep track of all the cross-links between related issues (and semi-related issues, in this case) so that it is easier to investigate later.</p>\n<blockquote>\n<blockquote>\n<p>Also, as a side note, could this PR close #2237? Or is that issue already effectively done?</p>\n</blockquote>\n<p>No, that issue I think is mostly related to the trampoline generating the wrong code when loading / storing booleans, and its why I had to do duplicate some code in this PR in order to not have boolean arguments to the test cases.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 287246514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656017002
    }
]