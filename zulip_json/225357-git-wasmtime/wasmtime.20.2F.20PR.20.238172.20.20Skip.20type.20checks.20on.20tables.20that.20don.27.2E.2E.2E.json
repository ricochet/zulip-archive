[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172\">PR #8172</a>.</p>",
        "id": 427568346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710793415
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172\">PR #8172</a>.</p>",
        "id": 427568348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710793415
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172\">PR #8172</a> from <code>alexcrichton:remove-call-indirect-typecheck</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit implements an optimization to skip type checks in<br>\n<code>call_indirect</code> for tables that don't require it. With the<br>\nfunction-references proposal it's possible to have tables of a single<br>\ntype of function as opposed to today's default <code>funcref</code> which is a<br>\nheterogenous set of functions. In this situation it's possible that a<br>\n<code>call_indirect</code>'s type tag matches the type tag of a<br>\n<code>table</code>-of-typed-<code>funcref</code>-values, meaning that it's impossible for the<br>\ntype check to fail.</p>\n<p>The type check of a function pointer in <code>call_indirect</code> is refactored<br>\nhere to take the table's type into account. Various things are shuffled<br>\naround to ensure that the right traps still show up in the right places<br>\nbut the important part is that, when possible, the type check is omitted<br>\nentirely.</p>\n</blockquote>",
        "id": 427568349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710793415
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172\">PR #8172</a>.</p>",
        "id": 427568350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710793416
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#pullrequestreview-1944131959\">PR review</a>:</p>\n<blockquote>\n<p>This makes sense to me! I really like the way you've restructured things with the <code>CheckIndirectCallTypeSignature</code> enum.</p>\n</blockquote>",
        "id": 427577948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710797331
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#pullrequestreview-1944131959\">PR review</a>:</p>\n<blockquote>\n<p>This makes sense to me! I really like the way you've restructured things with the <code>CheckIndirectCallTypeSignature</code> enum.</p>\n</blockquote>",
        "id": 427577949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710797332
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#discussion_r1529235474\">PR review comment</a>:</p>\n<blockquote>\n<p>Extreme nit-pick:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                // succeeds then we know it won't match, so trap anyway.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 427577950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710797332
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172\">PR #8172</a>.</p>",
        "id": 427578488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710797556
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172\">PR #8172</a>.</p>",
        "id": 427578497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710797560
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#pullrequestreview-1944299981\">PR review</a>.</p>",
        "id": 427583456,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710799690
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#pullrequestreview-1944299981\">PR review</a>.</p>",
        "id": 427583457,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710799691
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#discussion_r1529345284\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW, when the GC proposal is enabled, the static immediate type on the <code>call_indirect</code> will be allowed to be a subtype of the actual function's type.</p>\n<p>We don't implement this yet, but will need to.</p>\n<p><a href=\"https://webassembly.github.io/gc/core/exec/instructions.html#exec-call-indirect\">https://webassembly.github.io/gc/core/exec/instructions.html#exec-call-indirect</a></p>\n</blockquote>",
        "id": 427583458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710799691
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172\">PR #8172</a>.</p>",
        "id": 427584543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710800155
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#pullrequestreview-1945086748\">PR review</a>.</p>",
        "id": 427612966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710818187
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#discussion_r1529631934\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh good point! I keep consistently forgetting that contra/covariance applies to params/results...</p>\n<p>This makes me think we should remove the <code>PartialEq</code> implementation for types in wasmtime-types like we did in the embedder API as well</p>\n</blockquote>",
        "id": 427612967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710818187
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#pullrequestreview-1946691562\">PR review</a>.</p>",
        "id": 427756316,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710863642
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8172#discussion_r1530660793\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah that wouldn't be a bad idea.</p>\n</blockquote>",
        "id": 427756321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710863643
    }
]