[
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446#issuecomment-1184717992\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446\">issue #4446</a>:</p>\n<blockquote>\n<blockquote>\n<p>I expected to see fdiv tests for the case of a non-zero value divided by zero, which I assumed would return NaN, but I didn't see such tests in that section. Did I miss something?</p>\n</blockquote>\n<p>You're absolutely right, we are missing those cases. Ill add them.</p>\n<blockquote>\n<p>In the implementation of the interpreter, would it make sense to have all integer values be represented using <a href=\"https://doc.rust-lang.org/std/num/struct.Wrapping.html\">std::num::Wrapping</a>? Then I think all the uses of binary_match! that you updated here could just use e.g. +(self, other) for both integer and floating point types, and you wouldn't need an is_float function.</p>\n</blockquote>\n<p>That sounds like a good idea for the interpreter. However <code>DataValue</code> is shared with the rest of the compiler and I think that will have some knock on effects which I'm not quite sure of the implications that would bring.</p>\n<p>I'm willing to try and make that change if you think its worth it.</p>\n</blockquote>",
        "id": 289623357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657819870
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446#issuecomment-1184717992\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446\">issue #4446</a>:</p>\n<blockquote>\n<blockquote>\n<p>I expected to see fdiv tests for the case of a non-zero value divided by zero, which I assumed would return NaN, but I didn't see such tests in that section. Did I miss something?</p>\n</blockquote>\n<p>You're absolutely right, we are missing those cases. Ill add them. However those cases return +/-Inf and not NaN.</p>\n<p>Looking at the WASM spec for <a href=\"https://webassembly.github.io/spec/core/exec/numerics.html#op-fdiv\">fdiv</a> I think there might be some other corner cases that I also missed in these tests.</p>\n<blockquote>\n<p>In the implementation of the interpreter, would it make sense to have all integer values be represented using <a href=\"https://doc.rust-lang.org/std/num/struct.Wrapping.html\">std::num::Wrapping</a>? Then I think all the uses of binary_match! that you updated here could just use e.g. +(self, other) for both integer and floating point types, and you wouldn't need an is_float function.</p>\n</blockquote>\n<p>That sounds like a good idea for the interpreter. However <code>DataValue</code> is shared with the rest of the compiler and I think that will have some knock on effects which I'm not quite sure of the implications that would bring.</p>\n<p>I'm willing to try and make that change if you think its worth it.</p>\n</blockquote>",
        "id": 289625421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657820874
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446#issuecomment-1184735744\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446\">issue #4446</a>:</p>\n<blockquote>\n<p>I'm interested in finding out if using <code>Wrapping</code> everywhere would clean things up, but let's merge this PR without waiting for that investigation. I hoped it might be a quick clean-up, but it sounds like it isn't, and it's not important.</p>\n<p>Let me know when you're done with the fdiv tests and I'm happy to merge this!</p>\n</blockquote>",
        "id": 289625928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657821118
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446#issuecomment-1184754010\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446\">issue #4446</a>:</p>\n<blockquote>\n<p>I think we have them all now. Thanks for reviewing this!</p>\n</blockquote>",
        "id": 289628623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657822383
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446#issuecomment-1184761923\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446\">issue #4446</a>:</p>\n<blockquote>\n<p>You're welcome! Code review is good for me, I learn things. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n<p>Did you mean to comment out <code>test interpret</code> in that last force-push, or was that an accident?</p>\n</blockquote>",
        "id": 289629813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657822906
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446#issuecomment-1184906084\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4446\">issue #4446</a>:</p>\n<blockquote>\n<p>Oops, should be fixed now.</p>\n</blockquote>",
        "id": 289651176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657833580
    }
]