[
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1708#issuecomment-974306118\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1708\">issue #1708</a>:</p>\n<blockquote>\n<p>Peepmatic was removed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3543\">https://github.com/bytecodealliance/wasmtime/pull/3543</a></p>\n</blockquote>",
        "id": 262107899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637346376
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1708\">issue #1708</a>:</p>\n<blockquote>\n<p>Consider the following optimizations:</p>\n<div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nv\">ishl</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl_imm</span> <span class=\"nv\">$C</span> <span class=\"nv\">$x</span><span class=\"p\">))</span>\n\n<span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nv\">imul</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n          <span class=\"p\">(</span><span class=\"nv\">is-power-of-two</span> <span class=\"nv\">$C</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl</span> <span class=\"nv\">$x</span> <span class=\"nv\">$</span><span class=\"p\">(</span><span class=\"nv\">log2</span> <span class=\"nv\">$C</span><span class=\"p\">)))</span>\n</code></pre></div>\n<p>After applying the second optimization to some instruction sequence, then the first optimization can be applied to the result.</p>\n<p>But it would be more efficient if we folded the second optimization into the first optimizations RHS:</p>\n<div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nv\">imul</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n          <span class=\"p\">(</span><span class=\"nv\">is-power-of-two</span> <span class=\"nv\">$C</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl_imm</span> <span class=\"nv\">$</span><span class=\"p\">(</span><span class=\"nv\">log2</span> <span class=\"nv\">$C</span><span class=\"p\">)</span> <span class=\"nv\">$x</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>We should make a pass in peepmatic to do this mechanically whenever possible.</p>\n</blockquote>",
        "id": 262107901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637346377
    }
]