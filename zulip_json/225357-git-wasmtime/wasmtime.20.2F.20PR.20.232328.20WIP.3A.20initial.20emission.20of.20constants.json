[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328\">PR #2328</a> from <code>constants</code> to <code>main</code>:</p>\n<blockquote>\n<p>@cfallin, based on what we discussed in Zulip and #1385, here's a first pass on a way to emit constants using <code>MachBuffer::defer_constant</code>. Note that I had to do two mappings--one from <code>Constant</code> to <code>UsedConstant</code> and another from <code>UsedConstant</code> to <code>MachLabel</code>--in order to make this work (\"work\" is too strong--\"compile\"). I'm interested in your feedback before I fix this up and improve <code>gen_constant</code>.</p>\n</blockquote>",
        "id": 214747404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603825061
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328\">PR #2328</a>.</p>",
        "id": 214747405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603825061
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#pullrequestreview-518205996\">PR Review</a>.</p>",
        "id": 214774150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603838685
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#pullrequestreview-520145103\">PR Review</a>.</p>",
        "id": 215039241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604012341
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#pullrequestreview-520145103\">PR Review</a>.</p>",
        "id": 215039243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604012341
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#discussion_r514613405\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is actually inside the per-block loop body, so this would emit one copy of each (function-wide) constant per basic block. I don't think this is what was intended :-)</p>\n</blockquote>",
        "id": 215039244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604012341
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#discussion_r514613727\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Would it be sufficient in all cases to align to the size (so e.g. 8-byte constants are 8-byte-aligned, ...)? Or are there cases where we need more than that?</p>\n</blockquote>",
        "id": 215039245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604012341
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#discussion_r514614184\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm trying to think of a better name for this -- would just <code>VCodeConstant</code> be more fitting, do you think, since they live in the <code>VCode</code>?</p>\n</blockquote>",
        "id": 215039246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604012341
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328\">PR #2328</a> from <code>constants</code> to <code>main</code>:</p>\n<blockquote>\n<p>@cfallin, based on what we discussed in Zulip and #1385, here's a first pass on a way to emit constants using <code>MachBuffer::defer_constant</code>. Note that I had to do two mappings--one from <code>Constant</code> to <code>UsedConstant</code> and another from <code>UsedConstant</code> to <code>MachLabel</code>--in order to make this work (\"work\" is too strong--\"compile\"). I'm interested in your feedback before I fix this up and improve <code>gen_constant</code>.</p>\n</blockquote>",
        "id": 215138400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604085096
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328\">PR #2328</a> from <code>constants</code> to <code>main</code>:</p>\n<blockquote>\n<p>@cfallin, based on what we discussed in Zulip and #1385, here's a first pass on a way to emit constants using <code>MachBuffer::defer_constant</code>. Note that I had to do two mappings--one from <code>Constant</code> to <code>UsedConstant</code> and another from <code>UsedConstant</code> to <code>MachLabel</code>--in order to make this work (\"work\" is too strong--\"compile\"). I'm interested in your feedback before I fix this up and improve <code>gen_constant</code>.</p>\n</blockquote>",
        "id": 215498658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604431038
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#pullrequestreview-522807491\">PR Review</a>.</p>",
        "id": 215499139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604431309
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#discussion_r516901907\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Check out the new <code>VCodeConstantData::alignment</code> and let me know what you think.</p>\n</blockquote>",
        "id": 215499140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604431310
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328\">PR #2328</a> from <code>constants</code> to <code>main</code>:</p>\n<blockquote>\n<p>@cfallin, based on what we discussed in Zulip and #1385, here's a first pass on a way to emit constants using <code>MachBuffer::defer_constant</code>. Note that I had to do two mappings--one from <code>Constant</code> to <code>UsedConstant</code> and another from <code>UsedConstant</code> to <code>MachLabel</code>--in order to make this work (\"work\" is too strong--\"compile\"). I'm interested in your feedback before I fix this up and improve <code>gen_constant</code>.</p>\n</blockquote>",
        "id": 215500741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432260
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328\">PR #2328</a> from <code>constants</code> to <code>main</code>:</p>\n<blockquote>\n<p>@cfallin, based on what we discussed in Zulip and #1385, here's a first pass on a way to emit constants using <code>MachBuffer::defer_constant</code>. Note that I had to do two mappings--one from <code>Constant</code> to <code>UsedConstant</code> and another from <code>UsedConstant</code> to <code>MachLabel</code>--in order to make this work (\"work\" is too strong--\"compile\"). I'm interested in your feedback before I fix this up and improve <code>gen_constant</code>.</p>\n</blockquote>",
        "id": 215500852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432319
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#pullrequestreview-522823329\">PR Review</a>.</p>",
        "id": 215501487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432722
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#discussion_r516914712\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We could make this more granular but I am guessing this is good enough for now?</p>\n</blockquote>",
        "id": 215501488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432723
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#pullrequestreview-522823564\">PR Review</a>.</p>",
        "id": 215501521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432743
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#discussion_r516914886\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@cfallin, take a look at this. The compile-time memory usage will definitely be higher if we de-duplicate constants. As you know, there's quite the trade-off here:</p>\n<ul>\n<li>either we pay for these structures in compile-time memory</li>\n<li>we pay for de-duplication with compile-time CPU usage (compare new constant values byte-by-byte with every other previously-inserted constant value)</li>\n<li>or we pay with additional code-size in the emitted binary</li>\n</ul>\n<p>The way it is written now we can safely rip out the two <code>HashMap</code>s and all of this will still work.</p>\n</blockquote>",
        "id": 215501522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432743
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#pullrequestreview-522825258\">PR Review</a>.</p>",
        "id": 215501842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432907
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2328#discussion_r516916248\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@cfallin, I tried adding a <code>WellKnown</code> enum to <code>Amode</code> but I realized that this way is better: 1) if we want to de-duplicate we can, and 2) all of this constant code is co-located, which makes it a little more comprehensible for other developers (a little of it ends up affecting <code>MachBuffer</code> but that is just the easiest way to do things)</p>\n</blockquote>",
        "id": 215501843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604432907
    }
]