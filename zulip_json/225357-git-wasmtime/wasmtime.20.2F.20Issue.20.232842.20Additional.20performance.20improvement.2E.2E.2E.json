[
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-819920122\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>@alexcrichton Hopefully this didn't step on the work you were in the middle of for the feedback on #2820 (<span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span> that you hadn't started work on it before going on vacation).  As I needed to refactor <code>StoreFrameInfo</code> into a more general \"module registry\" for the signature registry changes anyway, it was pretty simple to remove <code>StackMapRegistry</code> entirely at that point.</p>\n</blockquote>",
        "id": 234594196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618443964
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-819920122\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>@alexcrichton Hopefully this didn't step on the work you were in the middle of for the <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2820#discussion_r610105761\">feedback on #2820</a> (<span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span> that you hadn't started work on it before going on vacation).  As I needed to refactor <code>StoreFrameInfo</code> into a more general \"module registry\" for the signature registry changes anyway, it was pretty simple to remove <code>StackMapRegistry</code> entirely at that point.</p>\n</blockquote>",
        "id": 234594273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618444014
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-819930192\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 234596922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618445757
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-821369489\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>That push of the latest commit broke the build in a really strange way (as if the CI wasn't building all the changes) <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span>.</p>\n</blockquote>",
        "id": 234896889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618596171
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-821369489\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>That push of the latest commit broke the build in a really strange way (as if the CI wasn't building all the changes) <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span>.</p>\n<p>Oh, upstream just added a new call to initialize trap handling, noticed it on a rebase.  Will fix.</p>\n</blockquote>",
        "id": 234897618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618596452
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-821369489\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>That push of the latest commit broke the build in a really strange way (as if the CI wasn't building all the changes) <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span>.</p>\n<p>Oh, upstream just added a new call to initialize trap handling, noticed it on a rebase (weird that GitHub is reporting no merge conflicts though).  Will fix.</p>\n</blockquote>",
        "id": 234897946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618596589
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-821369489\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>That push of the latest commit broke the build in a really strange way (as if the CI wasn't building all the changes) <span aria-label=\"oh no\" class=\"emoji emoji-1f615\" role=\"img\" title=\"oh no\">:oh_no:</span>.</p>\n<p>Oh, upstream just added a new call to initialize trap handling, noticed it on a rebase (weird that GitHub is reporting no merge conflicts though as I had one on the rebase).  Will fix.</p>\n</blockquote>",
        "id": 234898023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618596613
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-821403816\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>Wouldn't the two-stage lookup suffer the same problem as we're borrowing from an interior reference of a <code>RefCell</code> _optionally_, regardless of returning the module to look up the stack map for or the stack map itself?</p>\n</blockquote>",
        "id": 234899315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618597169
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-821414954\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>Oh I guess if it's <code>Arc</code> that's fine (no more borrow); I see how to implement this, so I'll make that change.</p>\n</blockquote>",
        "id": 234900076,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618597495
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842#issuecomment-821516750\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2842\">Issue #2842</a>:</p>\n<blockquote>\n<p>@alexcrichton all feedback should now be addressed.</p>\n</blockquote>",
        "id": 234908569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618601522
    }
]