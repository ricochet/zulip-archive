[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a> from <code>jameysharp:fix-retcall-indirect</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>x64 now uses a dedicated codegen strategy for tail-calls which writes the callee's stack arguments directly into their final location, but aarch64 and riscv64 still use our previous strategy of setting up for a normal function call and then moving the new stack frame up to overwrite the old one. In order to emit correct code for a normal function call, we need to fake a normal Call/CallIndirect opcode rather than ReturnCall/ReturnCallIndirect.</p>\n<p>The new tests are a combination of x64's compile-tests for return-call-indirect.clif, plus a large-stack-frame test from aarch64/riscv64's return-call.clif modified to do an indirect call.</p>\n</blockquote>",
        "id": 430552955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711954847
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>.</p>",
        "id": 430552956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711954847
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>.</p>",
        "id": 430552958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711954848
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275#issuecomment-2029328075\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 430556711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711957469
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275#pullrequestreview-1971542503\">PR review</a>:</p>\n<blockquote>\n<p>Can we have some runtests exercising this stuff as well?</p>\n</blockquote>",
        "id": 430615390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711986643
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275#issuecomment-2030076298\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>:</p>\n<blockquote>\n<blockquote>\n<p>Can we have some runtests exercising this stuff as well?</p>\n</blockquote>\n<p>We do have <code>cranelift/filetests/filetests/runtests/return-call-indirect.clif</code>, we just didn't have the indirect case tested in compile-tests for aarch64 and riscv64. Do you want me to just add a similar stack-arguments test there? It wouldn't have caught this bug because we have <code>preserve_frame_pointers=true</code> in that test, since x64 currently requires it, but there's no harm adding it. I could do the same in the x64 compile tests for that matter.</p>\n</blockquote>",
        "id": 430620130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711988054
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275#issuecomment-2030099355\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>:</p>\n<blockquote>\n<p>I think it would be good to have, yeah</p>\n</blockquote>",
        "id": 430622392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711988723
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>.</p>",
        "id": 430640383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711995140
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>.</p>",
        "id": 430640402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711995148
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8275\">PR #8275</a>.</p>",
        "id": 430650458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711999126
    }
]