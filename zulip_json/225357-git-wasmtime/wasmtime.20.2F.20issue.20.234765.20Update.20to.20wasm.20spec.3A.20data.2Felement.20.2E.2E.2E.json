[
    {
        "content": "<p>binji opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765\">issue #4765</a>:</p>\n<blockquote>\n<p>See <a href=\"https://github.com/WebAssembly/spec/issues/1522\">https://github.com/WebAssembly/spec/issues/1522</a>. It seems that there wasn't an explicit test for this case, and wasmtime's current behavior will be incorrect.</p>\n<p>e.g.</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">global</span> <span class=\"kt\">i32</span> <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">data</span> <span class=\"p\">(</span><span class=\"nb\">global.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>should be invalid, because a data segment initializer can't reference a non-imported global.</p>\n</blockquote>",
        "id": 294964045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661300134
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765#issuecomment-1225022851\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765\">issue #4765</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! However, this is already being rejected when I test locally:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ wasmtime test.wat\nError: failed to run main module <span class=\"sb\">`</span>test.wat<span class=\"sb\">`</span>\n\nCaused by:\n    <span class=\"m\">0</span>: failed to parse WebAssembly module\n    <span class=\"m\">1</span>: Invalid input WebAssembly code at offset <span class=\"m\">25</span>: constant expression required: global.get of locally defined global\n</code></pre></div>\n<p>where <code>test.wat</code> is</p>\n<p><div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n <span class=\"p\">(</span><span class=\"k\">global</span> <span class=\"kt\">i32</span> <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n <span class=\"p\">(</span><span class=\"k\">data</span> <span class=\"p\">(</span><span class=\"nb\">global.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"s2\">\"\"</span><span class=\"p\">))</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 294964929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661300892
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765#issuecomment-1225034733\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765\">issue #4765</a>:</p>\n<blockquote>\n<p>It is properly rejected all the way back to Wasmtime version 0.34.0, at least (released March of this year, at which point I stopped checking).</p>\n<p>I think this can safely be closed as resolved.</p>\n<p>Thanks again!</p>\n</blockquote>",
        "id": 294966156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661301957
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765\">issue #4765</a>:</p>\n<blockquote>\n<p>See <a href=\"https://github.com/WebAssembly/spec/issues/1522\">https://github.com/WebAssembly/spec/issues/1522</a>. It seems that there wasn't an explicit test for this case, and wasmtime's current behavior will be incorrect.</p>\n<p>e.g.</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">global</span> <span class=\"kt\">i32</span> <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"k\">data</span> <span class=\"p\">(</span><span class=\"nb\">global.get</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>should be invalid, because a data segment initializer can't reference a non-imported global.</p>\n</blockquote>",
        "id": 294966157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661301957
    },
    {
        "content": "<p>Cyborus04 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765#issuecomment-1225059404\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765\">issue #4765</a>:</p>\n<blockquote>\n<p>Whoops that's my bad, I guess my version of wasmtime wasn't as up-to-date as I thought! Could've sworn I updated it recently, sorry.</p>\n</blockquote>",
        "id": 294968109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661303915
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765#issuecomment-1225961176\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4765\">issue #4765</a>:</p>\n<blockquote>\n<p>No worries! Better safe than sorry :)</p>\n</blockquote>",
        "id": 295082280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661358651
    }
]