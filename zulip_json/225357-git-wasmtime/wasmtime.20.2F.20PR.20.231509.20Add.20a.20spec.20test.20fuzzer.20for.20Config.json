[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509\">PR #1509</a> from <code>spectests-fuzzer</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit adds a new fuzzer which is intended to run on oss-fuzz. This<br>\nfuzzer creates and arbitrary <code>Config</code> which <em>should</em> pass spec tests and<br>\nthen asserts that it does so. The goal here is to weed out any<br>\naccidental bugs in global configuration which could cause<br>\nnon-spec-compliant behavior.</p>\n</blockquote>",
        "id": 193949965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586894583
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\" title=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509\">PR #1509</a>.</p>",
        "id": 193949966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586894583
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509#pullrequestreview-393306549\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509#pullrequestreview-393306549\">PR Review</a>.</p>",
        "id": 193960124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586900222
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408444613\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408444613\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Let's move the body of this into a function in <code>wasmtime/crates/fuzzing/src/oracles.rs</code> so that it could (theoretically) be reused with other fuzzer engines, and is consistent with how our other fuzz targets are defined.</p>\n</blockquote>",
        "id": 193960126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586900222
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509#pullrequestreview-393306549\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509#pullrequestreview-393306549\">PR Review</a>.</p>",
        "id": 193960127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586900222
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408448817\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408448817\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Taking the mod won't result in a uniform distribution. Instead, this should be part of the <code>Arbitrary</code> impls:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">struct</span> <span class=\"nc\">SpecFile</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">file</span>: <span class=\"kp\">&amp;</span><span class=\"nb\">&#39;static</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">contents</span>: <span class=\"kp\">&amp;</span><span class=\"nb\">&#39;static</span><span class=\"w\"> </span><span class=\"kt\">str</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Arbitrary</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">SpecFile</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">arbitrary</span><span class=\"p\">(</span><span class=\"n\">u</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">Unstructured</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">arbitrary</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">Self</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">// NB: this does get a uniform value in the provided range.</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">.</span><span class=\"n\">int_in_range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">FILES</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">contents</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FILES</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">SpecFile</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">contents</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">size_hint</span><span class=\"p\">(</span><span class=\"n\">_depth</span>: <span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">(</span><span class=\"kt\">usize</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">std</span>::<span class=\"n\">mem</span>::<span class=\"n\">size_of</span>::<span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">()))</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre></div>\n\n\n</blockquote>",
        "id": 193960128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586900222
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408449697\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408449697\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This should be in <code>wasmtime/crates/fuzzing/src/generators.rs</code> with the rest of the test case generators. This allows us to reuse the concept \"a spec compliant config\" across different oracles, and is consistent with the rest of the infra.</p>\n</blockquote>",
        "id": 193960129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586900222
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408450790\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509#discussion_r408450790\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This should be a <code>log::debug!</code> so that it doesn't print except when we're debugging the test case and actually looking at the output. This should allow the fuzz target to run faster under oss-fuzz.</p>\n</blockquote>",
        "id": 193960131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586900222
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509\">PR #1509</a> from <code>spectests-fuzzer</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit adds a new fuzzer which is intended to run on oss-fuzz. This<br>\nfuzzer creates and arbitrary <code>Config</code> which <em>should</em> pass spec tests and<br>\nthen asserts that it does so. The goal here is to weed out any<br>\naccidental bugs in global configuration which could cause<br>\nnon-spec-compliant behavior.</p>\n</blockquote>",
        "id": 194024292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586955150
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509\">PR #1509</a> from <code>spectests-fuzzer</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit adds a new fuzzer which is intended to run on oss-fuzz. This<br>\nfuzzer creates and arbitrary <code>Config</code> which <em>should</em> pass spec tests and<br>\nthen asserts that it does so. The goal here is to weed out any<br>\naccidental bugs in global configuration which could cause<br>\nnon-spec-compliant behavior.</p>\n</blockquote>",
        "id": 194024432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586955222
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1509\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1509\">PR #1509</a>.</p>",
        "id": 194029807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586957354
    }
]