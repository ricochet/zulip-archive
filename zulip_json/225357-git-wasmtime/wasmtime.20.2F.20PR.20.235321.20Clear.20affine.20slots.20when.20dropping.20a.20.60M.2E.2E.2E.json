[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321\">PR #5321</a> from <code>clear-affine-memories</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit implements a resource usage optimization for Wasmtime with the pooling instance allocator by ensuring that when a <code>Module</code> is dropped its backing virtual memory mappings are all removed. Currently when a <code>Module</code> is dropped it releases a strong reference to its internal memory image but the memory image may stick around in individual pooling instance allocator slots. When using the <code>Random</code> allocation strategy, for example, this means that the memory images could stick around for a long time.</p>\n<p>While not a pressing issue this has resource usage implications for Wasmtime. Namely removing a <code>Module</code> does not guarantee the memfd, if in use for a memory image, is closed and deallocated within the kernel. Unfortunately simply closing the memfd is not sufficient as well as the mappings into the address space additionally all need to be removed for the kernel to release the resources for the memfd. This means that to release all kernel-level resources for a <code>Module</code> all slots which have the memory image mapped in must have the slot reset.</p>\n<p>This problem isn't particularly present when using the <code>NextAvailable</code> allocation strategy since the number of lingering memfds is proportional to the maximum concurrent size of wasm instances. With the <code>Random</code> and <code>ReuseAffinity</code> strategies, however, it's much more prominent because the number of lingering memfds can reach the total number of slots available. This can appear as a leak of kernel-level memory which can cause other system instability.</p>\n<p>To fix this issue this commit adds necessary instrumentation to <code>Drop for Module</code> to purge all references to the module in the pooling instance allocator. All index allocation strategies now maintain affinity tracking to ensure that regardless of the strategy in use a module that is dropped will remove all its memory mappings. A new allocation method was added to the index allocator for allocating an index without setting affinity and only allocating affine slots. This is used to iterate over all the affine slots without holding the global index lock for an unnecessarily long time while mappings are removed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 311906409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669237029
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321#pullrequestreview-1192320444\">PR review</a>.</p>",
        "id": 311916701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669242717
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321#pullrequestreview-1192320444\">PR review</a>.</p>",
        "id": 311916702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669242717
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321#discussion_r1030910738\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we make this a little indicator enum, e.g. <code>enum AllocMode { ForceAffineAndClear, AnySlot }</code> or somesuch?</p>\n</blockquote>",
        "id": 311916703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669242717
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321#discussion_r1030911926\">PR review comment</a>:</p>\n<blockquote>\n<p>pre-existing but can we rename this to <code>module_id</code> for clarity in the below?</p>\n</blockquote>",
        "id": 311916704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669242717
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321#discussion_r1030911129\">PR review comment</a>:</p>\n<blockquote>\n<p>s/bout/about/ ?</p>\n</blockquote>",
        "id": 311916705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669242718
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321#discussion_r1030913080\">PR review comment</a>:</p>\n<blockquote>\n<p>something about these two lines together feels confusing to me (though they are correct): the NextAvailable case picks but does not remove the index we're going to allocate, while <code>alloc_random</code> sounds like it allocates (i.e. removes from freelist).</p>\n<p>Perhaps can we (i) add a comment before these two that we're going to remove from the freelist below, and (ii) rename the <code>alloc_*</code> helpers to <code>pick_*</code>, and (iii) use a helper for the first case here too?</p>\n</blockquote>",
        "id": 311916707,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669242718
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321\">PR #5321</a> from <code>clear-affine-memories</code> to <code>main</code>.</p>",
        "id": 311924134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669248130
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5321\">PR #5321</a>.</p>",
        "id": 312646826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669647484
    }
]