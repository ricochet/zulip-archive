[
    {
        "content": "<p>calebschoepp opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12566544/the-actual-one.wasm.zip\">problematic.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"s\">\"&lt;p&gt;Random HTML&lt;/p&gt;\"</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">RUST_LOG</span><span class=\"o\">=</span><span class=\"n\">wasmtime_wasi</span><span class=\"o\">=</span><span class=\"n\">trace</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">problematic</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span>\n</code></pre></div>\n<p>Observe that component just hangs waiting for STDIN to close.</p>\n<h3>Expected Results</h3>\n<p>I expect the component to detect that STDIN has closed and print out the HTML converted to markdown.</p>\n<h3>Actual Results</h3>\n<p>Program hangs waiting for STDIN to close. Excerpt of traces:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview</span><span class=\"o\">^</span><span class=\"n\">C2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 181d005c4</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: M2</p>\n<h3>Extra Info</h3>\n<p>Nope<br>\n</p>\n</blockquote>",
        "id": 390059614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694288260
    },
    {
        "content": "<p><a href=\"https://github.com/calebschoepp\">calebschoepp</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">Issue #6986</a>.</p>",
        "id": 390059615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694288260
    },
    {
        "content": "<p>pchickey assigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a> to pchickey.</p>",
        "id": 390092056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694315760
    },
    {
        "content": "<p>calebschoepp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986#issuecomment-1712976388\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>I spent some time trying to create a wasi integration test that reproduces this issue and was unsuccessful.</p>\n<p>I modified the test <code>/crates/test-programs/command-tests/src/bin/stdin.rs</code> to use the input after reading from it just like I do in the component that is failing. I even added a sleep like I used in my component but I was unable to repro the issue in a test. I'm still very new to Wasmtime so I'm not sure what I'm doing wrong.</p>\n</blockquote>",
        "id": 390200403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694390111
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986#issuecomment-1714313780\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>For tests they're using a different stdin than the CLI uses by default since it's an in-memory version, which may explain the difference between tests and the CLI. If the fix is to the actual stdin reading implementation then there won't be an easy way to test this right now since it would require spawning a subprocess which while we do that in <code>tests/all/cli_tests.rs</code> it's always done with handwritten <code>*.wat</code> which may be difficult to do in this case. If that's the case though it's probably ok to skip the test here.</p>\n<p>Otherwise though a lot of I/O stuff is changing in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6877\">https://github.com/bytecodealliance/wasmtime/pull/6877</a> so it might be good to test on that branch or test it after that lands to see if this still reproduces.</p>\n</blockquote>",
        "id": 390359125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694453842
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986#issuecomment-1714340495\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>We have tests that use <code>fork(2)</code> to test child process stdin behavior in <a href=\"https://github.com/bytecodealliance/wasmtime/blob/pch/backpressure_2/crates/wasi/src/preview2/stdio.rs#L157\">https://github.com/bytecodealliance/wasmtime/blob/pch/backpressure_2/crates/wasi/src/preview2/stdio.rs#L157</a></p>\n</blockquote>",
        "id": 390362016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694455062
    },
    {
        "content": "<p>pchickey closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12566544/the-actual-one.wasm.zip\">problematic.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"s\">\"&lt;p&gt;Random HTML&lt;/p&gt;\"</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">RUST_LOG</span><span class=\"o\">=</span><span class=\"n\">wasmtime_wasi</span><span class=\"o\">=</span><span class=\"n\">trace</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">problematic</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span>\n</code></pre></div>\n<p>Observe that component just hangs waiting for STDIN to close.</p>\n<h3>Expected Results</h3>\n<p>I expect the component to detect that STDIN has closed and print out the HTML converted to markdown.</p>\n<h3>Actual Results</h3>\n<p>Program hangs waiting for STDIN to close. Excerpt of traces:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview</span><span class=\"o\">^</span><span class=\"n\">C2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 181d005c4</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: M2</p>\n<h3>Extra Info</h3>\n<p>Nope<br>\n</p>\n</blockquote>",
        "id": 390362034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694455070
    },
    {
        "content": "<p>pchickey reopened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12566544/the-actual-one.wasm.zip\">problematic.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"s\">\"&lt;p&gt;Random HTML&lt;/p&gt;\"</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">RUST_LOG</span><span class=\"o\">=</span><span class=\"n\">wasmtime_wasi</span><span class=\"o\">=</span><span class=\"n\">trace</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">problematic</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span>\n</code></pre></div>\n<p>Observe that component just hangs waiting for STDIN to close.</p>\n<h3>Expected Results</h3>\n<p>I expect the component to detect that STDIN has closed and print out the HTML converted to markdown.</p>\n<h3>Actual Results</h3>\n<p>Program hangs waiting for STDIN to close. Excerpt of traces:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview</span><span class=\"o\">^</span><span class=\"n\">C2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 181d005c4</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: M2</p>\n<h3>Extra Info</h3>\n<p>Nope<br>\n</p>\n</blockquote>",
        "id": 390362056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694455081
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986#issuecomment-1714341106\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>Fat finger!</p>\n</blockquote>",
        "id": 390362102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694455087
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986#issuecomment-1726407531\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>Got around to looking at this after #6877 landed and there were still remaining issues which I think I've fixed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7063\">https://github.com/bytecodealliance/wasmtime/pull/7063</a></p>\n</blockquote>",
        "id": 391988294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695154515
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6986\">issue #6986</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/12566544/the-actual-one.wasm.zip\">problematic.wasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"s\">\"&lt;p&gt;Random HTML&lt;/p&gt;\"</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">RUST_LOG</span><span class=\"o\">=</span><span class=\"n\">wasmtime_wasi</span><span class=\"o\">=</span><span class=\"n\">trace</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">problematic</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"o\">-</span><span class=\"n\">model</span>\n</code></pre></div>\n<p>Observe that component just hangs waiting for STDIN to close.</p>\n<h3>Expected Results</h3>\n<p>I expect the component to detect that STDIN has closed and print out the HTML converted to markdown.</p>\n<h3>Actual Results</h3>\n<p>Program hangs waiting for STDIN to close. Excerpt of traces:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"nb\">Ok</span><span class=\"p\">(([],</span><span class=\"w\"> </span><span class=\"n\">StreamStatus</span>::<span class=\"n\">Open</span><span class=\"p\">)))</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"o\">-</span><span class=\"n\">bindgen</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"streams\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"read\"</span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">preview</span><span class=\"o\">^</span><span class=\"n\">C2</span>::<span class=\"n\">bindings</span>::<span class=\"n\">sync_io</span>::<span class=\"n\">_internal</span>::<span class=\"n\">wasi</span>::<span class=\"n\">io</span>::<span class=\"n\">streams</span><span class=\"w\">      </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">=</span><span class=\"mi\">32</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 181d005c4</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: M2</p>\n<h3>Extra Info</h3>\n<p>Nope<br>\n</p>\n</blockquote>",
        "id": 392022356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695172794
    }
]