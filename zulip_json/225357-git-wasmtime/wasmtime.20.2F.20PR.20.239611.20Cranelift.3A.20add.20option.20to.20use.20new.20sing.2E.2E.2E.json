[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a> from <code>cfallin:single-pass-regalloc</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/bytecodealliance/regalloc2/issues/181\">bytecodealliance/regalloc2#181</a>, @d-sonuga added a fast single-pass algorithm option to regalloc2, in addition to its existing backtracking allocator. This produces code much more quickly, at the expense of code quality. Sometimes this tradeoff is desirable (e.g. when performing a debug build in a fast-iteration development situation, or in an initial JIT tier).</p>\n<p>This PR adds a Cranelift option to select the RA2 algorithm, plumbs it through to a Wasmtime option, and adds the option to Wasmtime fuzzing as well.</p>\n<p>An initial compile-time measurement in Wasmtime: <code>spidermonkey.wasm</code> builds in 1.383s with backtracking (existing algorithm), and 1.065s with single-pass. The resulting binary runs a simple Fibonacci benchmark in 2.060s with backtracking vs. 3.455s with single-pass.</p>\n<p>Hence, the single-pass algorithm yields a 23% compile-time reduction, at the cost of a 67% runtime increase.</p>\n<p>Fixes #9596.</p>\n<p>Depends on <a href=\"https://github.com/bytecodealliance/regalloc2/issues/201\">bytecodealliance/regalloc2#201</a> and the corresponding RA2 release; this PR has a local<br>\npath-override and so will fail to build in CI until I update it post-RA2-release.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 482548943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731656460
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482548944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731656460
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482548945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731656460
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482548946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731656460
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482548947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731656460
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482548948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731656460
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482548949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731656461
    },
    {
        "content": "<p>Amanieu <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611#issuecomment-2478252593\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>:</p>\n<blockquote>\n<p>Should this selection be automatic with <code>opt_level=none</code>?</p>\n</blockquote>",
        "id": 482559893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731660421
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611#issuecomment-2478253083\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:machinst\", \"cranelift:meta\", \"fuzzing\", \"wasmtime:api\", \"wasmtime:config\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 482559950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731660438
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611#issuecomment-2478263546\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>:</p>\n<blockquote>\n<p>In that case we should probably get an opt level between none and speed which uses the better regalloc but keeps egraph optimizations disabled given that the better regalloc has a significantly higher improvement to runtime performance than egraph optimizations.</p>\n</blockquote>",
        "id": 482561109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731660814
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611#issuecomment-2478377256\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 482570878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731663900
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611#pullrequestreview-2439059762\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> nice!</p>\n<p>I'm ambivalent myself on the defaults for O0 and could go either way.</p>\n</blockquote>",
        "id": 482646478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731687035
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482659954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731691384
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>:</p>\n<blockquote>\n<p>In <a href=\"https://github.com/bytecodealliance/regalloc2/issues/181\">bytecodealliance/regalloc2#181</a>, @d-sonuga added a fast single-pass algorithm option to regalloc2, in addition to its existing backtracking allocator. This produces code much more quickly, at the expense of code quality. Sometimes this tradeoff is desirable (e.g. when performing a debug build in a fast-iteration development situation, or in an initial JIT tier).</p>\n<p>This PR adds a Cranelift option to select the RA2 algorithm, plumbs it through to a Wasmtime option, and adds the option to Wasmtime fuzzing as well.</p>\n<p>An initial compile-time measurement in Wasmtime: <code>spidermonkey.wasm</code> builds in 1.383s with backtracking (existing algorithm), and 1.065s with single-pass. The resulting binary runs a simple Fibonacci benchmark in 2.060s with backtracking vs. 3.455s with single-pass.</p>\n<p>Hence, the single-pass algorithm yields a 23% compile-time reduction, at the cost of a 67% runtime increase.</p>\n<p>Fixes #9596.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 482660109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731691440
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482662054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731692056
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482662849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731692323
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611#issuecomment-2479561632\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>:</p>\n<blockquote>\n<p>For now at least, I think I'd prefer to keep it an opt-in default -- let's let it bake in wasmtime's continuous fuzzing for a little longer. We can always switch the default later.</p>\n<p>@alexcrichton updated to add cargo-vet, could you rubber-stamp the new commit? Also fixed silly issues in fuzz build (which I never test beforehand because Ocaml; I should fix my setup!).</p>\n</blockquote>",
        "id": 482663126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731692419
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482664505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731692840
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611#pullrequestreview-2439296845\">PR review</a>:</p>\n<blockquote>\n<p>Looks good!</p>\n<p>For fuzzing you can also build the fuzzers with <code>--no-default-features</code> to turn off the ocaml integration.</p>\n</blockquote>",
        "id": 482666039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731693359
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9611\">PR #9611</a>.</p>",
        "id": 482669417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1731694537
    }
]