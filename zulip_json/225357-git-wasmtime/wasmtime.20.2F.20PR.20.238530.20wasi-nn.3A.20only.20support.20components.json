[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530\">PR #8530</a> from <code>abrown:wasi-nn-only-wit</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This is a relatively drastic change to remove all the preview1, WITX-based support from Wasmtime's wasi-nn implementation. This has ramifications:</p>\n<ul>\n<li>Wasmtime will not be able to run core modules that target wasi-nn, either through the CLI or the embedding API</li>\n<li>Sightglass will not be able to benchmark wasi-nn-using code until the <code>bench-api</code> learns how to handle components</li>\n<li>the [<code>wasi-nn</code>] bindings crate is no longer usable with Wasmtime (it only understands the preview1 ABI)</li>\n<li>all wasi-nn testing in Wasmtime will now use components (the <code>examples</code> are left for a later refactor)</li>\n</ul>\n<p>Why this change, then? The WebAssembly [specification] has pushed ahead, defining new functionality that depends on component model features (e.g., resources). So far, the <code>wasmtime-wasi-nn</code> has had its preview1- and preview2-ABI implementations coexisting side by side, <code>wit.rs</code> and <code>witx.rs</code>. This was only possible because the WIT and WITX definitions were roughly similar. But I plan to update the Wasmtime implementation to support the new spec changes, which means the older preview1-ABI WITX code would immediately be out of date. And the differences between the updated WIT code and the old WITX code would only grow over time.</p>\n<p>[<code>wasi-nn</code>]: <a href=\"https://crates.io/crates/wasi-nn\">https://crates.io/crates/wasi-nn</a><br>\n[specification]: <a href=\"https://github.com/WebAssembly/wasi-nn\">https://github.com/WebAssembly/wasi-nn</a></p>\n</blockquote>",
        "id": 436786137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714688644
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530\">PR #8530</a>.</p>",
        "id": 436786177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714688678
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530\">PR #8530</a>.</p>",
        "id": 436790150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714691067
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530#issuecomment-2093475390\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530\">PR #8530</a>:</p>\n<blockquote>\n<p>From a technical perspective this all looks fine to me, thanks! For a \"is this the time to do this or not\" I'd defer to the wasi-nn subgroup, which I know you're intimately tied into as well and likely have a consensus before making this PR</p>\n</blockquote>",
        "id": 436929208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714757764
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530\">PR #8530</a>.</p>",
        "id": 436965478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714773744
    },
    {
        "content": "<p>abrown closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530\">PR #8530</a>.</p>",
        "id": 449971364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720469317
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530#issuecomment-2215151644\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8530\">PR #8530</a>:</p>\n<blockquote>\n<p>Superseded by #8873.</p>\n</blockquote>",
        "id": 449971371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720469318
    }
]