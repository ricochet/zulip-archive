[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4769\">issue #4769</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>bugpoint is a really interesting tool if some clif code is failing to compile. Some of outputs reported by the clif differential fuzzer don't fail to compile, but predictably crash during execution. We could expand bugpoint to iterate while the run keeps crashing.</p>\n<h4>Benefit</h4>\n<p>This would help a lot minimizing the test cases dumped by the clif fuzzer.</p>\n<h4>Implementation</h4>\n<p>I'm not too familiar with bugpoint, but I guess we can add a mode that besides compiling does something similar to what <code>clif-util test</code> does. We would have to catch panics and exceptions thrown during execution and probably ensure that they don't change while iterating.</p>\n<h4>Alternatives</h4>\n<p>Minimizing by hand is kinda painful but we can keep doing it.<br>\n</p>\n</blockquote>",
        "id": 295036998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661344465
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4769\">issue #4769</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>bugpoint is a really interesting tool if some clif code is failing to compile. Some of outputs reported by the clif differential fuzzer don't fail to compile, but predictably crash during execution. We could expand bugpoint to iterate while the run keeps crashing.</p>\n<h4>Benefit</h4>\n<p>This would help a lot minimizing the test cases dumped by the clif fuzzer. The fuzzing engine isn't very good at minimizing those cases.</p>\n<h4>Implementation</h4>\n<p>I'm not too familiar with bugpoint, but I guess we can add a mode that besides compiling does something similar to what <code>clif-util test</code> does. We would have to catch panics and exceptions thrown during execution and probably ensure that they don't change while iterating.</p>\n<h4>Alternatives</h4>\n<p>Minimizing by hand is kinda painful but we can keep doing it.<br>\n</p>\n</blockquote>",
        "id": 295037447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661344590
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4769#issuecomment-1225802324\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4769\">issue #4769</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/9cb987c678f93e7d30fb702aece7dad641a0f007/cranelift/src/bugpoint.rs#L986-L1041\">https://github.com/bytecodealliance/wasmtime/blob/9cb987c678f93e7d30fb702aece7dad641a0f007/cranelift/src/bugpoint.rs#L986-L1041</a> is where we determine if it is still considered a crash. If first checks for verifier errors and if so considers the crash to have gone away (so we don't try to compile functions that are invalid) and then check that compilation didn't panic at <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9cb987c678f93e7d30fb702aece7dad641a0f007/cranelift/src/bugpoint.rs#L1029-L1036\">https://github.com/bytecodealliance/wasmtime/blob/9cb987c678f93e7d30fb702aece7dad641a0f007/cranelift/src/bugpoint.rs#L1029-L1036</a>. This last block could be changed to test if repros still crash at runtime.</p>\n</blockquote>",
        "id": 295058235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661351240
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4769\">issue #4769</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>bugpoint is a really interesting tool if some clif code is failing to compile. Some of outputs reported by the clif differential fuzzer don't fail to compile, but predictably crash during execution. We could expand bugpoint to iterate while the run keeps crashing.</p>\n<h4>Benefit</h4>\n<p>This would help a lot minimizing the test cases dumped by the clif fuzzer. The fuzzing engine isn't very good at minimizing those cases.</p>\n<h4>Implementation</h4>\n<p>I'm not too familiar with bugpoint, but I guess we can add a mode that besides compiling does something similar to what <code>clif-util test</code> does. We would have to catch panics and exceptions thrown during execution and probably ensure that they don't change while iterating.</p>\n<h4>Alternatives</h4>\n<p>Minimizing by hand is kinda painful but we can keep doing it.<br>\n</p>\n</blockquote>",
        "id": 296847480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133778
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4769\">issue #4769</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>bugpoint is a really interesting tool if some clif code is failing to compile. Some of outputs reported by the clif differential fuzzer don't fail to compile, but predictably crash during execution. We could expand bugpoint to iterate while the run keeps crashing.</p>\n<h4>Benefit</h4>\n<p>This would help a lot minimizing the test cases dumped by the clif fuzzer. The fuzzing engine isn't very good at minimizing those cases.</p>\n<h4>Implementation</h4>\n<p>I'm not too familiar with bugpoint, but I guess we can add a mode that besides compiling does something similar to what <code>clif-util test</code> does. We would have to catch panics and exceptions thrown during execution and probably ensure that they don't change while iterating.</p>\n<h4>Alternatives</h4>\n<p>Minimizing by hand is kinda painful but we can keep doing it.<br>\n</p>\n</blockquote>",
        "id": 296847481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133778
    }
]