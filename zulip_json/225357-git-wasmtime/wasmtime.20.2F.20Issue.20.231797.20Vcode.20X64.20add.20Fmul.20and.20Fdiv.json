[
    {
        "content": "<p>jlb6740 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797#issuecomment-644585821\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797\">Issue #1797</a>:</p>\n<blockquote>\n<p>Can close this PR as it is now obsolete. I've pushed a new PR #1884 that I originally intended as an update to this PR. </p>\n</blockquote>",
        "id": 200980798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592292473
    },
    {
        "content": "<p>jlb6740 deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797#issuecomment-644585821\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797\">Issue #1797</a>:</p>\n<blockquote>\n<p>Can close this PR as it is now obsolete. I've pushed a new PR #1884 that I originally intended as an update to this PR. </p>\n</blockquote>",
        "id": 200981063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592292631
    },
    {
        "content": "<p>jlb6740 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797#issuecomment-644587956\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797\">Issue #1797</a>:</p>\n<blockquote>\n<p>@bnjbvr For the change request, I simply removed the min/max lower and will update in a future patch. </p>\n</blockquote>",
        "id": 200981200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592292734
    },
    {
        "content": "<p>julian-seward1 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797#issuecomment-645436672\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797\">Issue #1797</a>:</p>\n<blockquote>\n<p>As a totally drive-by comment on test cases, I saw this frag in email ..</p>\n<div class=\"codehilite\"><pre><span></span><code>         &quot;F3450F5C94C241010000&quot;,\n         &quot;subss   321(%r10,%rax,8), %xmm10&quot;,\n</code></pre></div>\n\n\n<p>If I could suggest .. for future tests ..</p>\n<p>(1) Don't use the same register number twice in an example.  This test case won't be able to distinguish an error where the encodings for <code>%r10</code> and <code>%xmm10</code> are accidentally swapped (so to speak) both registers have the same encoding (10 !)</p>\n<p>(2) Not such a problem here, but .. try to have some registers with encoding 8 and above and some with encoding 7 or below.  If regs are all above or all below the 7/8 boundary, it means that bit 3 of their encodings will be the same, so the test will be unable to detect confusion in the construction of bits 2:0 of the REX prefix.</p>\n<p>I think these and other suggestions are documented in comments at the start of the x64 encoding tests.</p>\n</blockquote>",
        "id": 201155576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592406798
    },
    {
        "content": "<p>julian-seward1 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797#issuecomment-645436672\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1797\">Issue #1797</a>:</p>\n<blockquote>\n<p>As a totally drive-by comment on test cases, I saw this frag in email ..</p>\n<div class=\"codehilite\"><pre><span></span><code>         &quot;F3450F5C94C241010000&quot;,\n         &quot;subss   321(%r10,%rax,8), %xmm10&quot;,\n</code></pre></div>\n\n\n<p>If I could suggest .. for future tests ..</p>\n<p>(1) Don't use the same register number twice in an example.  This test case won't be able to distinguish an error where the encodings for <code>%r10</code> and <code>%xmm10</code> are accidentally swapped (so to speak) since both registers have the same encoding (10 !)</p>\n<p>(2) Not such a problem here, but .. try to have some registers with encoding 8 and above and some with encoding 7 or below.  If regs are all above or all below the 7/8 boundary, it means that bit 3 of their encodings will be the same, so the test will be unable to detect confusion in the construction of bits 2:0 of the REX prefix.</p>\n<p>I think these and other suggestions are documented in comments at the start of the x64 encoding tests.</p>\n</blockquote>",
        "id": 201155819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592406890
    }
]