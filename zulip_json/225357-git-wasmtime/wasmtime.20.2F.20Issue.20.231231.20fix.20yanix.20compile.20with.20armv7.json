[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-595299149\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-595299149\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231\">Issue #1231</a>:</p>\n<blockquote>\n<p>Could the <code>.into()</code> and the <code>: i64</code> annotations both be removed? It doesn't seem like there should be any reason to explicitly require <code>i64</code> when there's a <code>try_into</code> to <code>u64</code> afterwards which should handle any type conversion.</p>\n<p>Additionally, if the goal is to compile yanix on a few platforms, it seems like we should consider adding CI to verify that yanix compiles correctly for other platforms.</p>\n</blockquote>",
        "id": 189804854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583423260
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-595795294\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-595795294\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231\">Issue #1231</a>:</p>\n<blockquote>\n<p>I think @alexcrichton is right that the <code>.into()</code> here is unnecessary to begin with, and simply removal of <code>i64</code> annotation should fix the issue.</p>\n<p>@alexcrichton about verifying builds on additional platforms, I totally agree! We should definitely start putting out some sort of coverage and not only for <code>yanix</code> but for <code>wasi-common</code> and perhaps <code>wasmtime</code> as a whole. Do you have some ideas for this BTW? The only thing that I can think that should work in Actions would be downloading the target and cross-compiling to it. This however, will generate a handful of linker errors, unless you know of a way to stop at the compilation stage?</p>\n</blockquote>",
        "id": 189898442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583505359
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-595919594\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-595919594\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231\">Issue #1231</a>:</p>\n<blockquote>\n<p>I think it should be easy enough in CI to do something like:</p>\n<div class=\"codehilite\"><pre><span></span>$ rustup target add armv7-unknown-linux-gnueabihf\n$ cargo check -p wasi-common --target armv7-unknown-linux-gnueabihf\n</pre></div>\n\n\n<p>and that should be good enough for ensuring things keep compiling.</p>\n</blockquote>",
        "id": 189925271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583522286
    },
    {
        "content": "<p>stefson <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-596209899\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231#issuecomment-596209899\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1231\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1231\">Issue #1231</a>:</p>\n<blockquote>\n<p>the <code>E0308</code> type of error has been fixed in the meantime, so I'm going to close this and ask for some help with the other error. </p>\n</blockquote>",
        "id": 190015184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583676713
    }
]