[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248#issuecomment-701566200\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248\">Issue #2248</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:x64\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 211801460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601490615
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248#issuecomment-702366244\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248\">Issue #2248</a>:</p>\n<blockquote>\n<blockquote>\n<p>Not a huge fan of this; instead could we just xorps the destination register, in the place where it's used? (There's already special handling of xorps X X in regalloc.) The slow down caused by the additional instruction in the pipeline may be recouped by the speedup caused by the lane dependency clearing.</p>\n</blockquote>\n<p>@bnjbvr, me neither really. I didn't like the idea of adding extra instructions either without data on the performance impact so I left it in and moved it to the bottom of the <code>Inst</code> enum. Maybe there is something that can be done to the context that will provide an escape hatch? E.g. some way to \"unsafely\" mess with the use/defs?</p>\n</blockquote>",
        "id": 211966192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601582494
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248#issuecomment-702627995\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248\">Issue #2248</a>:</p>\n<blockquote>\n<blockquote>\n<p>without data on the performance impact</p>\n</blockquote>\n<p>Could we make a tiny benchmark out of this to compare the two variants?</p>\n</blockquote>",
        "id": 212052436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601631299
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248#issuecomment-702806961\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2248\">Issue #2248</a>:</p>\n<blockquote>\n<p>@bnjbvr, created <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2256\">https://github.com/bytecodealliance/wasmtime/issues/2256</a> to try to get rid of <code>XmmUninitializedValue</code>.</p>\n</blockquote>",
        "id": 212091753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601653305
    }
]