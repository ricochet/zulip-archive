[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605300604\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605300604\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424\">Issue #1424</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605295620\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605295620\">https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605295620</a></p>\n<blockquote>\n<p>Could you add an x86_pextr binemit test</p>\n</blockquote>\n<p>Is the last commit ok, or do you want to test more cases?</p>\n</blockquote>",
        "id": 192075405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585340880
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605308286\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605308286\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424\">Issue #1424</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"cranelift\", \"cranelift:meta\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"cranelift\"&lt;/summary&gt;</p>\n<ul>\n<li>@bnjbvr</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 192077626,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585342070
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605449355\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605449355\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424\">Issue #1424</a>:</p>\n<blockquote>\n<p>With this I can finally store SIMD vectors in SSA values, rather than memory. This improves performance for tokei from ~50% overhead compared to cg_llvm to ~30% overhead.</p>\n</blockquote>",
        "id": 192123731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585403127
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605519945\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605519945\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424\">Issue #1424</a>:</p>\n<blockquote>\n<p>I don't know if this will give you more flexibility, but note that in #1377 I have added support for declaring constants in the function preamble instead of only through <code>vconst</code>. This also should make it easier to use constants of sizes other than 128-bit. Take a look at <br>\n64c8cbf and let me know if you can think of any changes to that that would help cg_clif.</p>\n</blockquote>",
        "id": 192141728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585429811
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605519945\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605519945\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424\">Issue #1424</a>:</p>\n<blockquote>\n<p>I don't know if this will give you more flexibility, but note that in #1377 I have added support for declaring constants in the function preamble instead of only through <code>vconst</code>. This also should make it easier to use constants of sizes other than 128-bit. Take a look at 64c8cbf and let me know if you can think of any changes to that that would help cg_clif.</p>\n</blockquote>",
        "id": 192141731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585429825
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605522867\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424#issuecomment-605522867\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1424\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1424\">Issue #1424</a>:</p>\n<blockquote>\n<p>I don't think any of that PR will help me. At least for now. Creating SIMD values is currently very slow anyway as at MIR level all lanes get assigned separately, meaning that I have to use <code>vconst 0</code> + <code>insertlane</code>. I will obviously need to optimize this :)</p>\n</blockquote>",
        "id": 192142662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585431469
    }
]