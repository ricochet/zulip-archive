[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4951\">PR #4951</a>.</p>",
        "id": 300454844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663969096
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4951\">PR #4951</a> from <code>shrink-abiarg</code> to <code>main</code>:</p>\n<blockquote>\n<p>We weren't using the \"union\" cargo feature for the smallvec crate, which reduces the size of a SmallVec by one machine word. This feature requires Rust 1.49 but we already require much newer versions.</p>\n<p>I also reduced ABIArgSlot::Stack::offset from i64 to i32, so it fits in the same space as ABIArgSlot::Reg::reg. This eliminates all padding from ABIArgSlot, saving 8 bytes there. Without that change, ABIArg wouldn't shrink even though it contains a SmallVec.</p>\n<p>When using Wasmtime to compile pulldown-cmark from Sightglass, this saves a decent amount of memory allocations and writes. According to <code>valgrind --tool=dhat</code>:</p>\n<ul>\n<li>6.3MiB (3.78%) less memory allocated over the program's lifetime</li>\n<li>0.5MiB (4.16%) less memory allocated at maximum heap size</li>\n<li>5.6MiB (1.94%) fewer bytes written to</li>\n<li>0.5% fewer instructions executed</li>\n</ul>\n<p>Reducing the size of SmallVecs also shrinks other types by varying amounts. Here are some types that shrink by quite a bit but aren't allocated often:</p>\n<ul>\n<li>264 bytes: cranelift_codegen::machinst::buffer::MachBuffer</li>\n<li>112 bytes: cranelift_codegen::machinst::abi::SigData</li>\n<li>64 bytes: wasmtime_cranelift::compiler::CompilerContext</li>\n<li>56 bytes: cranelift_codegen::context::Context</li>\n</ul>\n<p>Here are some types which don't shrink by a lot, but are allocated very often:</p>\n<ul>\n<li>16 bytes: cranelift_codegen::isa::x64::inst::CallInfo</li>\n<li>16 bytes: cranelift_codegen::machinst::abi::Caller</li>\n<li>8 bytes: cranelift_codegen::machinst::buffer::MachBranch</li>\n<li>8 bytes: cranelift_frontend::ssa::SSABlockData</li>\n<li>8 bytes: regalloc2::ion::data_structures::LiveBundle</li>\n<li>8 bytes: regalloc2::ion::data_structures::LiveRange</li>\n<li>8 bytes: regalloc2::ion::data_structures::SpillSet</li>\n<li>8 bytes: regalloc2::ion::data_structures::SpillSlotList</li>\n<li>8 bytes: regalloc2::ion::data_structures::VRegData</li>\n<li>8 bytes: regalloc2::ion::process::AllocRegResult</li>\n<li>8 bytes: regalloc2::moves::MoveVecWithScratch</li>\n<li>8 bytes: regalloc2::moves::ParallelMoves</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 300454845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663969096
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4951\">PR #4951</a>.</p>",
        "id": 300454846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663969096
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4951#pullrequestreview-1119064883\">PR review</a>.</p>",
        "id": 300455080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663969230
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4951\">PR #4951</a> from <code>shrink-abiarg</code> to <code>main</code>.</p>",
        "id": 300462344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663973373
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4951\">PR #4951</a>.</p>",
        "id": 300465818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663975935
    }
]