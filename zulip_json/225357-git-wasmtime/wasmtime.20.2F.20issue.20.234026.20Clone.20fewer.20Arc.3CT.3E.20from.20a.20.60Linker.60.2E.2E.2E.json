[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4026\">issue #4026</a>:</p>\n<blockquote>\n<p>Currently when a <code>Linker&lt;T&gt;</code> is used to instantate a module within a <code>Store</code> we'll use <code>HostFunc::to_func</code> to convert the linker-defined function into a function that lives within the <code>Store</code>. This operation, however, is somewhat costly where it will clone an <code>Arc</code> for the <code>Store</code> to hold onto. This means that when the <code>Store</code> is dropped that <code>Arc</code> is also dropped. This happens once-per-function-import in a <code>Store</code> which when modules import dozens of functions this ends up being a very hotly-contended <code>Arc</code> when instantiation is happening on multiple threads simultaneously.</p>\n</blockquote>",
        "id": 278893792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649885514
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4026\">issue #4026</a>:</p>\n<blockquote>\n<p>Currently when a <code>Linker&lt;T&gt;</code> is used to instantate a module within a <code>Store</code> we'll use <code>HostFunc::to_func</code> to convert the linker-defined function into a function that lives within the <code>Store</code>. This operation, however, is somewhat costly where it will clone an <code>Arc</code> for the <code>Store</code> to hold onto. This means that when the <code>Store</code> is dropped that <code>Arc</code> is also dropped. This happens once-per-function-import in a <code>Store</code> which when modules import dozens of functions this ends up being a very hotly-contended <code>Arc</code> when instantiation is happening on multiple threads simultaneously.</p>\n</blockquote>",
        "id": 278895580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649886564
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4026#issuecomment-1111111510\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4026\">issue #4026</a>:</p>\n<blockquote>\n<p>Fixed during <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4051\">https://github.com/bytecodealliance/wasmtime/pull/4051</a></p>\n</blockquote>",
        "id": 280362372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651071691
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4026\">issue #4026</a>:</p>\n<blockquote>\n<p>Currently when a <code>Linker&lt;T&gt;</code> is used to instantate a module within a <code>Store</code> we'll use <code>HostFunc::to_func</code> to convert the linker-defined function into a function that lives within the <code>Store</code>. This operation, however, is somewhat costly where it will clone an <code>Arc</code> for the <code>Store</code> to hold onto. This means that when the <code>Store</code> is dropped that <code>Arc</code> is also dropped. This happens once-per-function-import in a <code>Store</code> which when modules import dozens of functions this ends up being a very hotly-contended <code>Arc</code> when instantiation is happening on multiple threads simultaneously.</p>\n</blockquote>",
        "id": 280362375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651071691
    }
]