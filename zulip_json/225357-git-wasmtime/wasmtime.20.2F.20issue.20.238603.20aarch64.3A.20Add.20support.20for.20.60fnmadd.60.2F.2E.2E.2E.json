[
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:E-easy label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">Issue #8603</a>.</p>",
        "id": 438213407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715549320
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:area:aarch64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">Issue #8603</a>.</p>",
        "id": 438213408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715549320
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:E-compiler-easy label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">Issue #8603</a>.</p>",
        "id": 438213409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715549320
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">issue #8603</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>Add support for the <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FNMADD--Floating-point-Negated-fused-Multiply-Add--scalar--\"><code>fnmadd</code></a> / <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FMSUB--Floating-point-Fused-Multiply-Subtract--scalar--\"><code>fmsub</code></a> / <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FNMSUB--Floating-point-Negated-fused-Multiply-Subtract--scalar--\"><code>fnmsub</code></a> instructions in the aarch64 backend.</p>\n<h4>Benefit</h4>\n<p>This improves instruction selection quality for a few special fma cases.</p>\n<h4>Implementation</h4>\n<p>We already have support for the scalar <code>fmadd</code> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e6f9ca5efa0c4bf59c9cf133d9abeaab63ec07bb/cranelift/codegen/src/isa/aarch64/lower.isle#L516-L517\">here</a>. So we adding support for these instructions should be a matter of introducing the new opcodes and implementing lowering rules similar to what already exists today.</p>\n<p>Something similar was done in #8588 for the RISC-V backend.</p>\n</blockquote>",
        "id": 438213410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715549321
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">issue #8603</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>Add support for the <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FNMADD--Floating-point-Negated-fused-Multiply-Add--scalar--\"><code>fnmadd</code></a> / <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FMSUB--Floating-point-Fused-Multiply-Subtract--scalar--\"><code>fmsub</code></a> / <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FNMSUB--Floating-point-Negated-fused-Multiply-Subtract--scalar--\"><code>fnmsub</code></a> instructions in the aarch64 backend.</p>\n<h4>Benefit</h4>\n<p>This improves instruction selection quality for a few special fma cases.</p>\n<h4>Implementation</h4>\n<p>We already have support for the scalar <code>fmadd</code> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e6f9ca5efa0c4bf59c9cf133d9abeaab63ec07bb/cranelift/codegen/src/isa/aarch64/lower.isle#L516-L517\">here</a>. So we adding support for these instructions should be a matter of introducing the new opcodes and implementing lowering rules similar to what already exists today.</p>\n<p>Something similar was done in #8588 for the RISC-V backend. If anyone needs help implementing this, let me know!</p>\n</blockquote>",
        "id": 438213433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715549362
    },
    {
        "content": "<p>aidenfoxivey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603#issuecomment-2395163728\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">issue #8603</a>:</p>\n<blockquote>\n<p>@afonso360 Seems like this issue is solved.</p>\n</blockquote>",
        "id": 475011181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728155924
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">issue #8603</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>Add support for the <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FNMADD--Floating-point-Negated-fused-Multiply-Add--scalar--\"><code>fnmadd</code></a> / <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FMSUB--Floating-point-Fused-Multiply-Subtract--scalar--\"><code>fmsub</code></a> / <a href=\"https://developer.arm.com/documentation/ddi0602/2024-03/SIMD-FP-Instructions/FNMSUB--Floating-point-Negated-fused-Multiply-Subtract--scalar--\"><code>fnmsub</code></a> instructions in the aarch64 backend.</p>\n<h4>Benefit</h4>\n<p>This improves instruction selection quality for a few special fma cases.</p>\n<h4>Implementation</h4>\n<p>We already have support for the scalar <code>fmadd</code> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/e6f9ca5efa0c4bf59c9cf133d9abeaab63ec07bb/cranelift/codegen/src/isa/aarch64/lower.isle#L516-L517\">here</a>. So we adding support for these instructions should be a matter of introducing the new opcodes and implementing lowering rules similar to what already exists today.</p>\n<p>Something similar was done in #8588 for the RISC-V backend. If anyone needs help implementing this, let me know!</p>\n</blockquote>",
        "id": 475012802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728156704
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603#issuecomment-2395167259\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8603\">issue #8603</a>:</p>\n<blockquote>\n<p>That's right, thanks for letting me know!</p>\n</blockquote>",
        "id": 475012804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728156705
    }
]