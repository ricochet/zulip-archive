[
    {
        "content": "<p>InfRandomness opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4063\">issue #4063</a>:</p>\n<blockquote>\n<p>Thanks for filing a feature request! Please fill out the TODOs below.</p>\n<h4>Feature</h4>\n<p>TODO: Brief description of the feature/improvement you'd like to see in<br>\nCranelift/Wasmtime.</p>\n<p>I would like to see in cranelift-object (<a href=\"https://docs.rs/cranelift-object/0.82.3/cranelift_object/struct.ObjectProduct.html#method.emit\">https://docs.rs/cranelift-object/0.82.3/cranelift_object/struct.ObjectProduct.html#method.emit</a>), where we would create a new function called emit_to_file, essentially passing in a <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\">File</a>, and that function would then call <a href=\"https://docs.rs/object/0.27.1/object/write/struct.Object.html#method.emit\">https://docs.rs/object/0.27.1/object/write/struct.Object.html#method.emit</a> with the File's buffer.</p>\n<p>I think this would be nice instead of having to call <code>ObjectProduct.emit()</code>, and then having to transform the <code>Vec&lt;u8&gt;</code> into a slice to be written into a file;</p>\n<p>This may very feel redundant, too</p>\n<h4>Implementation</h4>\n<p>TODO: Do you have an implementation plan, and/or ideas for data structures or<br>\nalgorithms to use? Yes</p>\n<h4>Alternatives</h4>\n<p>TODO: What are the alternative implementation approaches or alternative ways to<br>\nsolve the problem that this feature would solve? How do these alternatives<br>\ncompare to this proposal?<br>\nTransform the <code>Vec&lt;u8&gt;</code> returned by <code>ObjectProduct.emit()</code> into a slice and write it to a file<br>\n</p>\n</blockquote>",
        "id": 279725869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650568277
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4063#issuecomment-1105739505\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4063\">issue #4063</a>:</p>\n<blockquote>\n<p>You can call both product.object.emit() and product.object.write_stream() already.</p>\n</blockquote>",
        "id": 279737229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650573761
    },
    {
        "content": "<p>InfRandomness closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4063\">issue #4063</a>:</p>\n<blockquote>\n<p>Thanks for filing a feature request! Please fill out the TODOs below.</p>\n<h4>Feature</h4>\n<p>TODO: Brief description of the feature/improvement you'd like to see in<br>\nCranelift/Wasmtime.</p>\n<p>I would like to see in cranelift-object (<a href=\"https://docs.rs/cranelift-object/0.82.3/cranelift_object/struct.ObjectProduct.html#method.emit\">https://docs.rs/cranelift-object/0.82.3/cranelift_object/struct.ObjectProduct.html#method.emit</a>), where we would create a new function called emit_to_file, essentially passing in a <a href=\"https://doc.rust-lang.org/std/fs/struct.File.html\">File</a>, and that function would then call <a href=\"https://docs.rs/object/0.27.1/object/write/struct.Object.html#method.emit\">https://docs.rs/object/0.27.1/object/write/struct.Object.html#method.emit</a> with the File's buffer.</p>\n<p>I think this would be nice instead of having to call <code>ObjectProduct.emit()</code>, and then having to transform the <code>Vec&lt;u8&gt;</code> into a slice to be written into a file;</p>\n<p>This may very feel redundant, too</p>\n<h4>Implementation</h4>\n<p>TODO: Do you have an implementation plan, and/or ideas for data structures or<br>\nalgorithms to use? Yes</p>\n<h4>Alternatives</h4>\n<p>TODO: What are the alternative implementation approaches or alternative ways to<br>\nsolve the problem that this feature would solve? How do these alternatives<br>\ncompare to this proposal?<br>\nTransform the <code>Vec&lt;u8&gt;</code> returned by <code>ObjectProduct.emit()</code> into a slice and write it to a file<br>\n</p>\n</blockquote>",
        "id": 279779196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650603214
    }
]