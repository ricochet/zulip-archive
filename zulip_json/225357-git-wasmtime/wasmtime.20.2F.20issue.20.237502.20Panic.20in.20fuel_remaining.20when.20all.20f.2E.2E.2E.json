[
    {
        "content": "<p><a href=\"https://github.com/coolreader18\">coolreader18</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7502\">Issue #7502</a>.</p>",
        "id": 401009845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699471747
    },
    {
        "content": "<p>coolreader18 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7502\">issue #7502</a>:</p>\n<blockquote>\n<h3>Test Case / Reproduction</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">consume_fuel</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">r#\"</span>\n<span class=\"s\">(module</span>\n<span class=\"s\">  (func $add2 (export \"add2\") (param $n i32) (result i32)</span>\n<span class=\"s\">    (i32.add (local.get $n) (i32.const 2))</span>\n<span class=\"s\">  )</span>\n<span class=\"s\">)</span>\n<span class=\"s\">        \"#</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span>::<span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"add2\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">add_fuel</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">fuel_remaining</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// fuel_remaining = 6</span>\n<span class=\"w\">    </span><span class=\"n\">add2</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"c1\">// succeeds</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">fuel_remaining</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// fuel_remaining = 2</span>\n<span class=\"w\">    </span><span class=\"n\">add2</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"c1\">// succeeds</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">fuel_remaining</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// panicked at wasmtime-14.0.4/src/store.rs:1456:39:</span>\n<span class=\"w\">                                  </span><span class=\"c1\">// called `Result::unwrap()` on an `Err` value: TryFromIntError(())</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>store.fuel_remaining() = Some(0)</code> </p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">coolreader18</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"mf\">14.0.4</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1456</span>:<span class=\"mi\">39</span>:\n<span class=\"nc\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 14.0.4</p>\n<p>Operating system: Arch Linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Obviously I know this'll be fixed in 15.0.0 anyway since the fuel apis will be totally different and afaict they don't have this unwrap, but this is really unintuitive behavior that means that any interaction with the fuel apis could possibly lead to a panic. This bug isn't really a huge issue for me personally - I _have_ seen at least one instance of this in production logs, but the system was resilient enough to handle the panic fine - but I just figured it might be something you guys might want to consider putting out a patch release about. I think the solution would be probably to just <code>.unwrap_or(0)</code> instead of <code>.unwrap()</code>.</p>\n</blockquote>",
        "id": 401009847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699471748
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7502#issuecomment-1802693912\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7502\">issue #7502</a>:</p>\n<blockquote>\n<p>Thanks for the report! If you'd like we can certainly do a 14.0.5 release for this, it's pretty low-effort on our part. Even if this is already fixed on 15.0.x I'll take your test and add it to our test suite to make sure we don't regress in the future.</p>\n</blockquote>",
        "id": 401024593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699478217
    },
    {
        "content": "<p>coolreader18 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7502\">issue #7502</a>:</p>\n<blockquote>\n<h3>Test Case / Reproduction</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">consume_fuel</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"s\">r#\"</span>\n<span class=\"s\">(module</span>\n<span class=\"s\">  (func $add2 (export \"add2\") (param $n i32) (result i32)</span>\n<span class=\"s\">    (i32.add (local.get $n) (i32.const 2))</span>\n<span class=\"s\">  )</span>\n<span class=\"s\">)</span>\n<span class=\"s\">        \"#</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_typed_func</span>::<span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"add2\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">add_fuel</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">fuel_remaining</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// fuel_remaining = 6</span>\n<span class=\"w\">    </span><span class=\"n\">add2</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"c1\">// succeeds</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">fuel_remaining</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// fuel_remaining = 2</span>\n<span class=\"w\">    </span><span class=\"n\">add2</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\">   </span><span class=\"c1\">// succeeds</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">fuel_remaining</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">// panicked at wasmtime-14.0.4/src/store.rs:1456:39:</span>\n<span class=\"w\">                                  </span><span class=\"c1\">// called `Result::unwrap()` on an `Err` value: TryFromIntError(())</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>store.fuel_remaining() = Some(0)</code> </p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">coolreader18</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"mf\">14.0.4</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">store</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">1456</span>:<span class=\"mi\">39</span>:\n<span class=\"nc\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 14.0.4</p>\n<p>Operating system: Arch Linux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Obviously I know this'll be fixed in 15.0.0 anyway since the fuel apis will be totally different and afaict they don't have this unwrap, but this is really unintuitive behavior that means that any interaction with the fuel apis could possibly lead to a panic. This bug isn't really a huge issue for me personally - I _have_ seen at least one instance of this in production logs, but the system was resilient enough to handle the panic fine - but I just figured it might be something you guys might want to consider putting out a patch release about. I think the solution would be probably to just <code>.unwrap_or(0)</code> instead of <code>.unwrap()</code>.</p>\n</blockquote>",
        "id": 403220448,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700503564
    },
    {
        "content": "<p>coolreader18 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7502#issuecomment-1819562469\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7502\">issue #7502</a>:</p>\n<blockquote>\n<p>Oh, meant to respond earlier, but 15.0 is out now, so I'll just use that. Thanks for adding the test for this!</p>\n</blockquote>",
        "id": 403220462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700503565
    }
]