[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647\">PR #5647</a> from <code>mul-pow-2</code> to <code>main</code>:</p>\n<blockquote>\n<p>Draft because this is hitting an ISLE codegen bug where the generated Rust code doesn't pass the borrow checker:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0382</span><span class=\"p\">]</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"err\">`</span><span class=\"n\">v26</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt;\n    <span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">577</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                             </span><span class=\"o\">-------</span><span class=\"w\">   </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">reinitialization</span><span class=\"w\"> </span><span class=\"n\">might</span><span class=\"w\"> </span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">skipped</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                             </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                             </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">occurs</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">v26</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"o\">&lt;</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">opts</span>::<span class=\"n\">generated_code</span>::<span class=\"n\">Context</span><span class=\"o\">&gt;</span>::<span class=\"n\">inst_data_etor_iter</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">does</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">implement</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Copy</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">598</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">v35</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">v34</span><span class=\"p\">.</span><span class=\"n\">next</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"o\">-----------------------------------</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"n\">inside</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"n\">inside</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">606</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                                             </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                       </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">iteration</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">679</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                                                 </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                           </span><span class=\"o\">---</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">moved</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">iteration</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">723</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                         </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">v26</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                   </span><span class=\"o\">^^^</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">here</span><span class=\"w\"> </span><span class=\"n\">after</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"></span>\n\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0382</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 324155504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674854226
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647\">PR #5647</a> from <code>mul-pow-2</code> to <code>main</code>.</p>",
        "id": 324774905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675112096
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647\">PR #5647</a>.</p>",
        "id": 324774957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675112123
    },
    {
        "content": "<p><strong>fitzgen</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647\">PR #5647</a> as ready for review.</p>",
        "id": 324774971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675112128
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#pullrequestreview-1276065472\">PR review</a>.</p>",
        "id": 324780502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675114210
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#pullrequestreview-1276065472\">PR review</a>.</p>",
        "id": 324780504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675114210
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#discussion_r1091178301\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd be inclined to return <code>x.trailing_zeros()</code> here instead of just <code>x</code>, and remove the <code>u64_log2</code> extractor. When you're asking whether something's a power of two, it's natural to wonder which power of two it is. On the flip side, using <code>trailing_zeros</code> to implement <code>ilog2</code> is safe _iff_ <code>x.is_power_of_two()</code> is true. So I think it makes the most sense to couple these two queries together pretty tightly. If somebody really just wants the original value after checking that it's a power of two, they can use at-patterns to bind the input instead of the result.</p>\n<p>I also wonder, should this extractor take <code>u64</code> as input instead of <code>Imm64</code>? We have extractors for converting in either direction so I guess it doesn't matter too much which way we pick here.</p>\n</blockquote>",
        "id": 324780505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675114210
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#discussion_r1091179727\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this debug log message generally useful, or a leftover?</p>\n</blockquote>",
        "id": 324780506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675114210
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#pullrequestreview-1276195543\">PR review</a>.</p>",
        "id": 324799864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675122233
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#discussion_r1091280633\">PR review comment</a>:</p>\n<blockquote>\n<p>It is generally useful. So hard to get the input that the patterns are being filechecked against, now we can always see it via <code>RUST_LOG=debug</code>.</p>\n</blockquote>",
        "id": 324799866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675122234
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#pullrequestreview-1276196858\">PR review</a>.</p>",
        "id": 324800040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675122345
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#discussion_r1091281679\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I like that!</p>\n<blockquote>\n<p>I also wonder, should this extractor take u64 as input instead of Imm64? We have extractors for converting in either direction so I guess it doesn't matter too much which way we pick here.</p>\n</blockquote>\n<p>Its just more wordy since we don't have automatic conversions between the two.</p>\n</blockquote>",
        "id": 324800041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675122345
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#pullrequestreview-1276197316\">PR review</a>.</p>",
        "id": 324800145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675122386
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647#discussion_r1091282026\">PR review comment</a>:</p>\n<blockquote>\n<p>(And I don't think we necessarily should since <code>Imm64</code> is \"signed\" but also it kind of depends on how the value ends up being used.)</p>\n</blockquote>",
        "id": 324800147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675122386
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647\">PR #5647</a> from <code>mul-pow-2</code> to <code>main</code>.</p>",
        "id": 324967476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675184995
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647\">PR #5647</a>.</p>",
        "id": 324967641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675185029
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5647\">PR #5647</a>.</p>",
        "id": 324980010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675188259
    }
]