[
    {
        "content": "<p>alexthomas1 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>I have a WASM file that calls a function in the host, but the name of the label becomes env::_Z5hellov.</p>\n<p>How do I register the binding in C++? Thank you!</p>\n</blockquote>",
        "id": 309440434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668337152
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312708747\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>You have to put the function prototype in a <code>extern \"C\" { ... }</code> block to disable name mangling.</p>\n</blockquote>",
        "id": 309443950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668339416
    },
    {
        "content": "<p>alexthomas1 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312784991\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>Thank you, I did that and I get</p>\n<p>(import \"env\" \"_Z5hellov\" (func $hello__ (type 2)))</p>\n<p>and </p>\n<p>unknown import: <code>env::_Z5hellov</code> has not been defined</p>\n<p>when I put the function prototype in the extern block. </p>\n</blockquote>",
        "id": 309482323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668361731
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312785270\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>What is the exact code you used?</p>\n</blockquote>",
        "id": 309482484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668361824
    },
    {
        "content": "<p>alexthomas1 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312785498\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>I have been trying to modify the example: third_party/wasmtime/examples/hello.c, to load the binary directly (instead of using the wat representation). </p>\n<p>`#include &lt;stdio.h&gt;</p>\n<p>extern \"C\" {<br>\n    void hello();<br>\n}</p>\n<p>int main(int argc, char **argv){<br>\n    hello();<br>\n}`</p>\n<p>This is what my <a href=\"http://hello.cc\">hello.cc</a> looks like.</p>\n</blockquote>",
        "id": 309482609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668361922
    },
    {
        "content": "<p>alexthomas1 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312785498\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>I have been trying to modify the example: third_party/wasmtime/examples/hello.c, to load the binary directly (instead of using the wat representation). </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">`</span>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n\n<span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"s\">\"C\"</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">hello</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">**</span><span class=\"n\">argv</span><span class=\"p\">){</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">hello</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This is what my <a href=\"http://hello.cc\">hello.cc</a> looks like.</p>\n</blockquote>",
        "id": 309483868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668362632
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312790058\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>It works for me: <a href=\"https://godbolt.org/z/YGccKMhWY\">https://godbolt.org/z/YGccKMhWY</a></p>\n<p><div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>__main_argc_argv:                       # @__main_argc_argv\n        call    hello\n        i32.const       0\n        end_function\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 309485150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668363321
    },
    {
        "content": "<p>alexthomas1 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312800038\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>On the host-side, in third_party/wasmtime/examples/hello.c, how does wasmtime know the correct symbol to use (i.e. hello)?</p>\n</blockquote>",
        "id": 309490199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668366629
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312800652\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>I think it sets hello_callback as the first import, not for the import named \"hello\".</p>\n</blockquote>",
        "id": 309490491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668366823
    },
    {
        "content": "<p>alexthomas1 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312802055\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>So when I have multiple imports, how does that work? Are there any examples of this?</p>\n<p>I also still get: </p>\n<p><code>unknown import: </code>env::_Z5hellov<code> has not been defined</code></p>\n</blockquote>",
        "id": 309491258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668367326
    },
    {
        "content": "<p>alexthomas1 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260#issuecomment-1312802055\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>So when I have multiple imports, how does that work? Are there any examples of this?</p>\n<p>I also still get: </p>\n<p><code>unknown import: </code>env::hello<code> has not been defined</code></p>\n</blockquote>",
        "id": 309499463,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668373425
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5260\">issue #5260</a>:</p>\n<blockquote>\n<p>I have a WASM file that calls a function in the host, but the name of the label becomes env::_Z5hellov.</p>\n<p>How do I register the binding in C++? Thank you!</p>\n</blockquote>",
        "id": 309625998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668439047
    }
]