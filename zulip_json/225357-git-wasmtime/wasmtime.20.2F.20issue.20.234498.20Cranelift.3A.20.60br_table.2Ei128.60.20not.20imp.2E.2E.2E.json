[
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>  Hey,</p>\n<p>Fuzzgen found this when I added i128 support.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i128</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Run <code>cargo run -- compile -D --set enable_llvm_abi_extensions  --target x86_64 .\\the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The code to compile</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">BrTable</span><span class=\"w\"> </span><span class=\"n\">unimplemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">I128</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"err\">\\</span><span class=\"n\">codegen</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">isa</span><span class=\"err\">\\</span><span class=\"n\">x64</span><span class=\"err\">\\</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">3248</span>:<span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">process</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">successfully</span>: <span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mi\">101</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code><br>\nOperating system: Windows<br>\nArchitecture: x86_64</p>\n<p>cc @abrown @jlb6740</p>\n</blockquote>",
        "id": 290397412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658419999
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>  Hey,</p>\n<p>Fuzzgen found this when I added i128 support.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i128</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Run <code>cargo run -- compile -D --set enable_llvm_abi_extensions  --target x86_64 .\\the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The code to compile</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">BrTable</span><span class=\"w\"> </span><span class=\"n\">unimplemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">I128</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"err\">\\</span><span class=\"n\">codegen</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">isa</span><span class=\"err\">\\</span><span class=\"n\">x64</span><span class=\"err\">\\</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">3248</span>:<span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">process</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">successfully</span>: <span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mi\">101</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code><br>\nOperating system: Windows<br>\nArchitecture: x86_64</p>\n<p>cc @abrown @jlb6740</p>\n</blockquote>",
        "id": 290397413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658419999
    },
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>  Hey,</p>\n<p>Fuzzgen found this when I added i128 support.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i128</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Run <code>cargo run -- compile -D --set enable_llvm_abi_extensions  --target x86_64 .\\the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The code to compile</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">BrTable</span><span class=\"w\"> </span><span class=\"n\">unimplemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">I128</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"err\">\\</span><span class=\"n\">codegen</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">isa</span><span class=\"err\">\\</span><span class=\"n\">x64</span><span class=\"err\">\\</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">3248</span>:<span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">process</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">successfully</span>: <span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mi\">101</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code><br>\nOperating system: Windows<br>\nArchitecture: x86_64</p>\n<p>cc @abrown @jlb6740</p>\n</blockquote>",
        "id": 290397415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658419999
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191774677\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p><code>cranelift_frontend::Switch</code> has a workaround for this in place already: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/6e05b646a32fe00c390cc2322b1d7d3571526a9a/cranelift/frontend/src/switch.rs#L267-L280\">https://github.com/bytecodealliance/wasmtime/blob/6e05b646a32fe00c390cc2322b1d7d3571526a9a/cranelift/frontend/src/switch.rs#L267-L280</a></p>\n</blockquote>",
        "id": 290410700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658426067
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191796443\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p>That just reminded me that we had a similar issue previously #3100.</p>\n<p>I tried to add a panic to that branch and it isn't being triggered, ill investigate further.</p>\n</blockquote>",
        "id": 290413708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658427527
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191796443\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p>That just reminded me that we had a similar issue previously #3100.</p>\n<p>I tried to add a panic to that branch and it isn't being triggered, ill investigate further.</p>\n<p>Edit: I suspect that patch only applies to the <code>Switch</code> interface of the frontend, and not when building jump tables manually and then inserting <code>br_tables</code><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/6e05b646a32fe00c390cc2322b1d7d3571526a9a/cranelift/frontend/src/switch.rs#L10-L41\">https://github.com/bytecodealliance/wasmtime/blob/6e05b646a32fe00c390cc2322b1d7d3571526a9a/cranelift/frontend/src/switch.rs#L10-L41</a></p>\n</blockquote>",
        "id": 290414182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658427766
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191796443\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p>That just reminded me that we had a similar issue previously #3100.</p>\n<p>I tried to add a panic to that branch and it isn't being triggered, ill investigate further.</p>\n<p>Edit: I suspect that workaround only applies to the <code>Switch</code> interface of the frontend, and not when building jump tables manually and then inserting <code>br_tables</code><br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/6e05b646a32fe00c390cc2322b1d7d3571526a9a/cranelift/frontend/src/switch.rs#L10-L41\">https://github.com/bytecodealliance/wasmtime/blob/6e05b646a32fe00c390cc2322b1d7d3571526a9a/cranelift/frontend/src/switch.rs#L10-L41</a></p>\n</blockquote>",
        "id": 290414220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658427787
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191806928\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<blockquote>\n<p>Edit: I suspect that workaround only applies to the Switch interface of the frontend, and not when building jump tables manually and then inserting br_tables</p>\n</blockquote>\n<p>Indeed. Should have been clearer.</p>\n</blockquote>",
        "id": 290415251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658428297
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191814006\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p>I guess <code>br_table</code> on an <code>i128</code> is useless, right? It's going to be a while before anyone has enough memory for a table that big. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n<p>For the purposes of cranelift-fuzzgen it'd be nice to have all operations support all types, but I imagine implementing this in each target backend requires extra code that isn't going to be exercised any other way. So I'm thinking it'd be better to just declare that <code>br_table</code> doesn't support <code>i128</code> (or <code>i64</code> either?) and avoid trying to generate such cases.</p>\n<p>@cfallin, what's your take?</p>\n</blockquote>",
        "id": 290416180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658428738
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191819339\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p>Yeah, we don't even support tables larger than u32, so...</p>\n<blockquote>\n<p>For the purposes of cranelift-fuzzgen it'd be nice to have all operations support all types</p>\n</blockquote>\n<p>We special case emissions of <code>br_table</code>'s in fuzzgen, so we can disable it quite easly.</p>\n<blockquote>\n<p>So I'm thinking it'd be better to just declare that br_table doesn't support i128 (or i64 either?) </p>\n</blockquote>\n<p>I think this is probably a good idea. Or we can do what we do in the <code>Switch</code> interface (patch it down to a i32) in some place that also targets <code>br_table</code>, that way we don't get the hole in the api.</p>\n</blockquote>",
        "id": 290417120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658429130
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191819550\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<blockquote>\n<p>I guess br_table on an i128 is useless, right? It's going to be a while before anyone has enough memory for a table that big. laughing</p>\n</blockquote>\n<p>Rustc allows matching on 128bit integers and enums. That is why <code>cranelift_frontend::Switch</code> has a workaround for this. I'm lowering the MIR <code>SwitchInt</code> terminator using <code>cranelift_frontend::Switch</code>.</p>\n</blockquote>",
        "id": 290417157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658429146
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191833495\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<blockquote>\n<p>I guess <code>br_table</code> on an <code>i128</code> is useless, right? It's going to be a while before anyone has enough memory for a table that big. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n<p>For the purposes of cranelift-fuzzgen it'd be nice to have all operations support all types, but I imagine implementing this in each target backend requires extra code that isn't going to be exercised any other way. So I'm thinking it'd be better to just declare that <code>br_table</code> doesn't support <code>i128</code> (or <code>i64</code> either?) and avoid trying to generate such cases.</p>\n<p>@cfallin, what's your take?</p>\n</blockquote>\n<p>In general I'm in favor of more completeness, or at least symmetry -- the more our \"supported instruction/operand space\" looks like a high-dimensional rectangular prism, rather than a weird shape with lots of divots, the easier for our users. But I think that impulse should also be tempered by practicalities so we don't have blowup in the backends' pattern-matching, as that can lead to issues (copy/paste typos, difficulty of maintenance) as well.</p>\n<p>I might actually propose a slightly different approach: could <code>br_table</code> take <code>i32</code> <em>only</em>? My path to thinking that is that being polymorphic except for one unsupported type (<code>i128</code>) is actually leading users into a false sense of flexibility. And supporting narrow values has potential pitfalls too (I believe it works correctly now but rare cases are a risk both for new backends and during ongoing refactoring/improvements). A consistent mental model that supports this view (IMHO) is to think of the selector index as morally equivalent to a jump address, kind of. Addresses have a fixed width (64 bits on all our current platforms); so why not br_table indices (hereby declared to be 32 bits), as well?</p>\n</blockquote>",
        "id": 290419756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658430181
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191840080\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p>For <code>br_table.i8</code> I think that would lead to a pessimization. For example if there are 256 entries, it wouldn't need to check if the input value is larger than 255 to jump to the default branch when using <code>br_table.i8</code>, but it would need to be for <code>br_table.i32</code>.</p>\n</blockquote>",
        "id": 290420754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658430665
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498#issuecomment-1191873911\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p>That's true, but we don't currently do such an optimization; and in the future, we could in a more general way by doing an integer range analysis. Such an analysis would have a rule that a uextend from an <code>i8</code> gives a result in range 0..256. I suspect that's a more general approach than a special case of range analysis based on types.</p>\n</blockquote>",
        "id": 290425589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658433189
    },
    {
        "content": "<p>jameysharp closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4498\">issue #4498</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>  Hey,</p>\n<p>Fuzzgen found this when I added i128 support.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i128</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">f32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i128</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Run <code>cargo run -- compile -D --set enable_llvm_abi_extensions  --target x86_64 .\\the-above.clif</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>The code to compile</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">BrTable</span><span class=\"w\"> </span><span class=\"n\">unimplemented</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">I128</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"err\">\\</span><span class=\"n\">codegen</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">isa</span><span class=\"err\">\\</span><span class=\"n\">x64</span><span class=\"err\">\\</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">3248</span>:<span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">process</span><span class=\"w\"> </span><span class=\"n\">didn</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">successfully</span>: <span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">set</span><span class=\"w\"> </span><span class=\"n\">enable_llvm_abi_extensions</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mi\">101</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <code>main</code><br>\nOperating system: Windows<br>\nArchitecture: x86_64</p>\n<p>cc @abrown @jlb6740</p>\n</blockquote>",
        "id": 290578953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658532762
    }
]