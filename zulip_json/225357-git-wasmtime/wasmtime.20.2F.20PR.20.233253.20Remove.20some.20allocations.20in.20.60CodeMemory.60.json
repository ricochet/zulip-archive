[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit removes the <code>FinishedFunctions</code> type as well as allocations<br>\nassociated with trampolines when allocating inside of a <code>CodeMemory</code>.<br>\nThe main goal of this commit is to improve the time spent in<br>\n<code>CodeMemory</code> where currently today a good portion of time is spent<br>\nsimply parsing symbol names and trying to extract function indices from<br>\nthem. Instead this commit implements a new strategy (different from #3236)<br>\nwhere compilation records offset/length information for all<br>\nfunctions/trampolines so this doesn't need to be re-learned from the<br>\nobject file later.</p>\n<p>A consequence of this commit is that this offset information will be<br>\ndecoded/encoded through <code>bincode</code> unconditionally, but we can also<br>\noptimize that later if necessary as well.</p>\n<p>Internally this involved quite a bit of refactoring since the previous<br>\nmap for <code>FinishedFunctions</code> was relatively heavily relied upon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 250845709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630014642
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a>.</p>",
        "id": 250845719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630014649
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 250848996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630016162
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 250856759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630020533
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 250872489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630031020
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 250886735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630043610
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 250886860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630043722
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 250887961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630044698
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253#pullrequestreview-741198146\">PR review</a>.</p>",
        "id": 251175739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630290094
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253#pullrequestreview-741198146\">PR review</a>.</p>",
        "id": 251175740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630290094
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253#discussion_r698119323\">PR review comment</a>:</p>\n<blockquote>\n<p>Doc comment on this function indicating what the return-tuple is? I have to look at the body right now to see -- something like \"Returns the trampoline in each direction: (host_to_wasm, wasm_to_host)\" would help a lot.</p>\n</blockquote>",
        "id": 251175741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630290094
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 251237491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630333546
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>.</p>",
        "id": 251237623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630333599
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253#pullrequestreview-741712930\">PR review</a>.</p>",
        "id": 251237651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630333612
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253#discussion_r698535443\">PR review comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> I added this to the trait documentation in <code>wasmtime-environ</code></p>\n</blockquote>",
        "id": 251237652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630333612
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a> from <code>less-alloc-in-code-memory</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit removes the <code>FinishedFunctions</code> type as well as allocations<br>\nassociated with trampolines when allocating inside of a <code>CodeMemory</code>.<br>\nThe main goal of this commit is to improve the time spent in<br>\n<code>CodeMemory</code> where currently today a good portion of time is spent<br>\nsimply parsing symbol names and trying to extract function indices from<br>\nthem. Instead this commit implements a new strategy (different from #3236)<br>\nwhere compilation records offset/length information for all<br>\nfunctions/trampolines so this doesn't need to be re-learned from the<br>\nobject file later.</p>\n<p>A consequence of this commit is that this offset information will be<br>\ndecoded/encoded through <code>bincode</code> unconditionally, but we can also<br>\noptimize that later if necessary as well.</p>\n<p>Internally this involved quite a bit of refactoring since the previous<br>\nmap for <code>FinishedFunctions</code> was relatively heavily relied upon.</p>\n<p>cc #3230</p>\n</blockquote>",
        "id": 251245884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630336953
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3253\">PR #3253</a>.</p>",
        "id": 251247935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630337718
    }
]