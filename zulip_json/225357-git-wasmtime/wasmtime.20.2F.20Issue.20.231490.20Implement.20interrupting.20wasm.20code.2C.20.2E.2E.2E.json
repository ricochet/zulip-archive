[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611713740\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611713740\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"cranelift\", \"fuzzing\", \"wasmtime:api\", \"wasmtime:c-api\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"cranelift\"&lt;/summary&gt;</p>\n<ul>\n<li>@bnjbvr</li>\n</ul>\n<p>&lt;/details&gt;<br>\n&lt;details&gt; &lt;summary&gt;Users Subscribed to \"fuzzing\"&lt;/summary&gt;</p>\n<ul>\n<li>@fitzgen</li>\n</ul>\n<p>&lt;/details&gt;<br>\n&lt;details&gt; &lt;summary&gt;Users Subscribed to \"wasmtime:api\"&lt;/summary&gt;</p>\n<ul>\n<li>@peterhuene</li>\n</ul>\n<p>&lt;/details&gt;<br>\n&lt;details&gt; &lt;summary&gt;Users Subscribed to \"wasmtime:c-api\"&lt;/summary&gt;</p>\n<ul>\n<li>@peterhuene</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 193498830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586460758
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611719230\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611719230\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Haven't looked at the code yet, but I have a question:</p>\n<blockquote>\n<p>The <code>wasmtime::Store</code> type has a<br>\nmethod to acquire an <code>InterruptHandle</code>,</p>\n</blockquote>\n<p>Does this mean that the finest granularity of interrupt is a store?</p>\n<p>That seems fine for now, in the single-threaded wasm world, but will likely need reworking to be finer grained when we support threads. Do you have an idea how much more work it would be to make this per-instance?</p>\n</blockquote>",
        "id": 193500290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586461564
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611719698\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611719698\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>@fitzgen yeah adapting this shouldn't be too hard at all, it's just a shared <code>Arc</code> data structure and it would be easy to arrange all instances linked together to have access to that <code>Arc</code></p>\n</blockquote>",
        "id": 193500405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586461636
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611727280\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-611727280\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"wasi\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"wasi\"&lt;/summary&gt;</p>\n<ul>\n<li>@kubkon</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 193502405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586462712
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-615484586\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-615484586\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Ok I've pushed up a commit which uses a <code>GlobalValue</code> for the stack limit instead of a closure, and there's a \"mini interpreter\" of this <code>GlobalValue</code> since <code>ins().global_value(...)</code> can't be used this late after legalization. It's hopefully sufficient enough for now but also with better future-compatibility.</p>\n<p>I'm not really sure how to serialize this out or parse it in the text format. If that's required can folks point me in the right direction of how to do that?</p>\n</blockquote>",
        "id": 194506059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587161107
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-615485617\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-615485617\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>You should serialize it in <code>write_function</code> and then parse it in <code>cranelift-reader</code>.</p>\n</blockquote>",
        "id": 194506315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587161305
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616616848\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616616848\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Ok @sunfishcode, should be updated!</p>\n</blockquote>",
        "id": 194688486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587395467
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616641597\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616641597\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Ok after some discussion with @sunfishcode I brought back the <code>SA_ONSTACK</code> flag so we can be sure to still execute the fallback to libstd's segfault handler on the sigaltstack. We already have the code to make the sigaltstack bigger, so that should cover our own purposes for now as well. This means that all signals still go through the sigaltstack.</p>\n</blockquote>",
        "id": 194694791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587397857
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616803186\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616803186\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Ok the last commit should be the stack limit parsing via the syntax you suggested</p>\n</blockquote>",
        "id": 194731788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587416017
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616936154\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-616936154\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Looks good! There's now just the two CI failures. One is an easy fix I just commented on above.</p>\n<p>There other is a failure in <a href=\"http://host_segfault.rs\" title=\"http://host_segfault.rs\">host_segfault.rs</a> on macos-latest CI:</p>\n<div class=\"codehilite\"><pre><span></span>     Running target/release/deps/host_segfault-de61d05b549d9afb\n\nthread &#39;main&#39; panicked at &#39;assertion failed: stderr.contains(&quot;thread &#39;main&#39; has overflowed its stack&quot;)&#39;, tests/host_segfault.rs:95:9\nstack backtrace:\n   0: &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt\n   1: core::fmt::write\n   2: std::io::Write::write_fmt\n   3: std::panicking::default_hook::{{closure}}\n   4: std::panicking::default_hook\n   5: std::panicking::rust_panic_with_hook\n   6: std::panicking::begin_panic\n   7: host_segfault::main\n   8: std::rt::lang_start::{{closure}}\n   9: std::panicking::try::do_call\n  10: __rust_maybe_catch_panic\n  11: std::rt::lang_start_internal\n  12: main\n</pre></div>\n\n\n</blockquote>",
        "id": 194758708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587441296
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-617312290\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-617312290\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Ok all green now!</p>\n</blockquote>",
        "id": 194837484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587490998
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-617323177\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490#issuecomment-617323177\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1490\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1490\">Issue #1490</a>:</p>\n<blockquote>\n<p>Great!</p>\n</blockquote>",
        "id": 194840074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587492205
    }
]