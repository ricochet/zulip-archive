[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a> from <code>cfallin:fix-pcc-insertlane</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Fixes <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=67538\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=67538</a>.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 428161416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711036133
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428161421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711036134
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428161422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711036134
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428161423,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711036134
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207#issuecomment-2012805244\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>:</p>\n<blockquote>\n<p>Mind adding more variants for loading floats, in addition to the variants for storing everything?</p>\n<p><div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (memory 1)\n  (func (param v128 i32) (result v128)\n      local.get 0\n      local.get 1\n      f32.load\n      f32x4.replace_lane 0)\n\n  (func (param v128 i32) (result v128)\n      local.get 0\n      local.get 1\n      f64.load\n      f64x2.replace_lane 1)\n\n  (func (param v128 i32) (result v128)\n      local.get 0\n      local.get 1\n      f64.load\n      f64x2.replace_lane 0)\n\n  (func (param v128 i32)\n      local.get 1\n      local.get 0\n      f64x2.extract_lane 1\n      f64.store)\n\n  (func (param v128 i32)\n      local.get 1\n      local.get 0\n      f32x4.extract_lane 1\n      f32.store)\n\n  (func (param v128 i32)\n      local.get 1\n      local.get 0\n      i8x16.extract_lane_s 1\n      i32.store8)\n\n  (func (param v128 i32)\n      local.get 1\n      local.get 0\n      i16x8.extract_lane_s 1\n      i32.store16)\n\n  (func (param v128 i32)\n      local.get 1\n      local.get 0\n      i32x4.extract_lane 1\n      i32.store)\n\n  (func (param v128 i32)\n      local.get 1\n      local.get 0\n      i64x2.extract_lane 1\n      i64.store)\n)\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 428165547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711037217
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207#issuecomment-2012806891\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>:</p>\n<blockquote>\n<p>Also I'd recommend running the test with/without AVX to confirm that that all works too</p>\n</blockquote>",
        "id": 428165642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711037241
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428172214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711039060
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207#issuecomment-2012935458\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>:</p>\n<blockquote>\n<p>Sure, added additional cases, thanks! This surfaced another issue with the range-fact clamping on 128-bit values, now fixed.</p>\n<p>The test cases already had distinct AVX and non-AVX variants; added your new cases to both.</p>\n</blockquote>",
        "id": 428172406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711039117
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207#pullrequestreview-1952786584\">PR review</a>:</p>\n<blockquote>\n<p>r=me with Alex's suggestion</p>\n</blockquote>",
        "id": 428172502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711039148
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207#issuecomment-2012938411\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>:</p>\n<blockquote>\n<p>race</p>\n</blockquote>",
        "id": 428172546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711039162
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207#issuecomment-2012942795\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>:</p>\n<blockquote>\n<p>Yep, I imagine you'll want to review the new changes just pushed, sorry!</p>\n</blockquote>",
        "id": 428172776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711039229
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207#pullrequestreview-1952793139\">PR review</a>.</p>",
        "id": 428173020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711039304
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428173083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711039313
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428194373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711046421
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428194401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711046436
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8207\">PR #8207</a>.</p>",
        "id": 428201639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711049260
    }
]