[
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970#issuecomment-1708847846\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970\">issue #6970</a>:</p>\n<blockquote>\n<p>FYI @cfallin @fitzgen </p>\n</blockquote>",
        "id": 389490972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694023133
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970#issuecomment-1709091140\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970\">issue #6970</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"cranelift:area:machinst\", \"cranelift:area:x64\", \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 389513508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694033081
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970#issuecomment-1716181721\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970\">issue #6970</a>:</p>\n<blockquote>\n<p>@uweigand it looks like this hit some exhaustiveness-check compile errors in CI under some configuration...</p>\n</blockquote>",
        "id": 390569687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694541409
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970#issuecomment-1716214862\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970\">issue #6970</a>:</p>\n<blockquote>\n<blockquote>\n<p>I was curious initially why we couldn't just have one \"pre\" hook and one \"post\" hook -- i.e., why we need to separate the clobber-save/restore step -- but at least for the prologue, I guess the answer is that we insert the stack-check beforehand. For the epilogue the ABI code really does just invoke one hook then the other; but for symmetry it's kind of nice to keep the hooks paired. Does that match your thinking?</p>\n</blockquote>\n<p>Yes, exactly.</p>\n<blockquote>\n<p>@uweigand it looks like this hit some exhaustiveness-check compile errors in CI under some configuration...</p>\n</blockquote>\n<p>Looks like this was an issue with a change to the riscv64 back-end that happened in the meantime.  I've rebased this PR now.</p>\n</blockquote>",
        "id": 390573828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694542950
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970#issuecomment-1718080257\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6970\">issue #6970</a>:</p>\n<blockquote>\n<p>Been at WasmCon and on PTO so I'm just seeing this now, but I wanted to say that this is a great refactoring! Thanks @uweigand!!</p>\n</blockquote>",
        "id": 390774559,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694627960
    }
]