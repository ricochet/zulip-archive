[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770\">PR #7770</a> from <code>bjorn3:fix_x64_option_i128_abi</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>LLVM passes the tag in rax and the u128 val in rdx/rcx. Before this change Cranelift would pass the first half of the value in rdx and the second half using an implicit return value pointer.</p>\n<p>Fixes <a href=\"https://github.com/rust-lang/rustc_codegen_cranelift/issues/1449\">https://github.com/rust-lang/rustc_codegen_cranelift/issues/1449</a></p>\n</blockquote>",
        "id": 412376074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704989628
    },
    {
        "content": "<p><strong>bjorn3</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770\">PR #7770</a>.</p>",
        "id": 412376077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704989628
    },
    {
        "content": "<p><strong>bjorn3</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770\">PR #7770</a>.</p>",
        "id": 412376078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704989628
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770\">PR #7770</a>.</p>",
        "id": 412379650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704990750
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770#pullrequestreview-1816147726\">PR review</a>:</p>\n<blockquote>\n<p>Makes sense to me.</p>\n</blockquote>",
        "id": 412392861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704995203
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770#issuecomment-1887673417\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770\">PR #7770</a>:</p>\n<blockquote>\n<p>@bjorn3, I tried to look this up in the LLVM documentation but all I can find is a mention of RCX in the swiftcc calling convention <a href=\"https://llvm.org/docs/LangRef.html#calling-conventions\">here</a>. Where do you see it?</p>\n</blockquote>",
        "id": 412393345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704995403
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770#issuecomment-1887706423\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770\">PR #7770</a>:</p>\n<blockquote>\n<p>See eg <a href=\"https://rust.godbolt.org/z/fTM6o84xq\">https://rust.godbolt.org/z/fTM6o84xq</a> Fair chance it isn't documented anywhere, this requires the enable_llvm_abi_extensions flag in Cranelift for a reason.</p>\n</blockquote>",
        "id": 412396699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704996770
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7770\">PR #7770</a>.</p>",
        "id": 412408396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705001734
    }
]