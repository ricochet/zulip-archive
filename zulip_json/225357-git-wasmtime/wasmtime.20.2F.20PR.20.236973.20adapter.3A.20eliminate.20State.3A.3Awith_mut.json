[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6973\">PR #6973</a> from <code>bytecodealliance:pch/adapter_eliminate_state_with_mut</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>There is no need to get exclusive access to State:</p>\n<ul>\n<li>All mutation of State and Descriptors is handled internally with cells. <code>descriptors_mut</code> does not need exclusive access to State, and eliminating that constraint means we can trivially shorten all uses of <code>with_mut</code> to <code>with</code>.</li>\n<li>recursive access to State is required for implementing the cabi_realloc functions. These functions do not need exclusive access to State, but if another call has already taken an exclusive borrow, realloc will trap.</li>\n</ul>\n<p>I recently found a bug that would occur if <code>path_open</code> is the first call into the adapter, the State will be borrowed exclusively and <code>descriptors_mut</code> will initialize the descriptors by calling out to get the preopens. Because preopens are a list, the runtime needs to call cabi_realloc to return them, and that call will fail where cabi_import_realloc tries to borrow the exclusively- borrowed State.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 389520618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694036727
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6973\">PR #6973</a>.</p>",
        "id": 389520630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694036730
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6973\">PR #6973</a>.</p>",
        "id": 389520641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694036731
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6973\">PR #6973</a>:</p>\n<blockquote>\n<p>There is no need to get exclusive access to State:</p>\n<ul>\n<li>All mutation of State and Descriptors is handled internally with cells. <code>descriptors_mut</code> does not need exclusive access to State, and eliminating that constraint means we can trivially shorten all uses of <code>with_mut</code> to <code>with</code>.</li>\n<li>recursive access to State is required for implementing the cabi_realloc functions. These functions do not need exclusive access to State, but if another call has already taken an exclusive borrow, realloc will trap.</li>\n</ul>\n<p>This changes fixes a bug that would occur if <code>path_open</code> is the first call into the adapter, the State will be borrowed exclusively and <code>descriptors_mut</code> will initialize the descriptors by calling out to get the preopens. Because preopens are a list, the runtime needs to call cabi_realloc to return them, and that call will fail where cabi_import_realloc tries to borrow the exclusively- borrowed State.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 389520682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694036737
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6973#pullrequestreview-1614271935\">PR review</a>.</p>",
        "id": 389521262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694036951
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6973\">PR #6973</a>.</p>",
        "id": 389536120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694045837
    }
]