[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>:</p>\n<blockquote>\n<p>Hey, branches were causing the interpreter to crash.</p>\n</blockquote>",
        "id": 244875867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625430231
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-698707151\">PR review</a>.</p>",
        "id": 244876895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625431779
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r663555044\">PR review comment</a>:</p>\n<blockquote>\n<p>Fallthrough will likely be removed together with the old backend framework.</p>\n</blockquote>",
        "id": 244876896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625431779
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 244878792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625434715
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 244908404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625474101
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 245099729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625606155
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 245102416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625607715
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 245102886,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625608017
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 245105464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625609722
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701201575\">PR review</a>.</p>",
        "id": 245206832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701201575\">PR review</a>.</p>",
        "id": 245206833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665519389\">PR review comment</a>:</p>\n<blockquote>\n<p>(But also looking at that issue, I must have thought when I wrote it that we could at least pass <code>b1</code> and <code>b8</code>? Is that not the case anymore?)</p>\n</blockquote>",
        "id": 245206834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665526128\">PR review comment</a>:</p>\n<blockquote>\n<p>Hm, not totally sure about how to go about this; seems like there are a few options:</p>\n<ul>\n<li>keep this as you implemented it, which is a bit more verbose</li>\n<li>implement <code>into_bool</code> for integer types, but this may be a bit confusing because for other <code>into_*</code> functions we error when the type doesn't match</li>\n<li>implement a <code>ValueConversionKind::ToBoolean</code> and just use <code>arg(0)?.convert(ValueConversionKind::ToBoolean)</code> here; I would probably lean this direction</li>\n</ul>\n<p>Thoughts?</p>\n</blockquote>",
        "id": 245206835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665528642\">PR review comment</a>:</p>\n<blockquote>\n<p>@akirilov-arm, could you take a look at this? I think everything else makes sense but I don't know enough about the aarch64 backend to approve this part.</p>\n</blockquote>",
        "id": 245206836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665518651\">PR review comment</a>:</p>\n<blockquote>\n<p>For reference, the issue that fixes this is #2237.</p>\n</blockquote>",
        "id": 245206837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665527703\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I see... I thought this meant \"of\" as in \"a value of...\" but I think it is an abbreviation of \"overflows,\" right? Let's just go with the longer version to avoid confusion.</p>\n</blockquote>",
        "id": 245206838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665520218\">PR review comment</a>:</p>\n<blockquote>\n<p>BTW, I really appreciate you adding a bunch more CLIF tests!</p>\n</blockquote>",
        "id": 245206839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625675257
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701246703\">PR review</a>.</p>",
        "id": 245211231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625677240
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665553380\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you add some more explanation of this sequence?</p>\n<p>I think I understand what's going on here -- we have a 0/1 flag generated by <code>cset</code> that is the actual overflow indicator, then we cause the main compare instruction to subtract that value from <code>INT32_MIN</code>, so we get an overflow (or underflow actually) on the subtract-as-compare. But it's somewhat difficult to work out!</p>\n</blockquote>",
        "id": 245211234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625677240
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701331892\">PR review</a>.</p>",
        "id": 245223893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625683071
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665618700\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>implement into_bool for integer types, but this may be a bit confusing because for other into_* functions we error when the type doesn't match</p>\n</blockquote>\n<p>I actually started by doing this, but it didn't feel \"right\" so I changed it.</p>\n<p>Yeah, I think the <code>ValueConversionKind</code> is a good way to go, I'll update the PR</p>\n</blockquote>",
        "id": 245223894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625683071
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665632585\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes,</p>\n<p>The \"main\" overflow check is the <code>sub</code> and <code>cmp</code> with the extends, however this produces the result as a <code>ne</code> flag.</p>\n<p>However the main issue is that the caller of this function is expecting to use the <code>vs</code> flag, and we (currently) don't have a way to tell it to use another flag. So we set the overflow flag by subtracting either 1 / 0 from INT32_MIN.</p>\n<p>I'll update the comments to reflect this.</p>\n</blockquote>",
        "id": 245226910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625684370
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701349706\">PR review</a>.</p>",
        "id": 245226912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625684370
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701355951\">PR review</a>.</p>",
        "id": 245227846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625684814
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665637115\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW, that sounds like a reasonable refactor, if you'd prefer to go that way: return the (possibly modified) condition flag and use that in the caller. I think that at every place where we use <code>lower_icmp</code>, we have full control over what condition code we actually use, so this should be pretty reasonable, and would improve the generated code.</p>\n</blockquote>",
        "id": 245227848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625684814
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701371797\">PR review</a>.</p>",
        "id": 245230230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625686018
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665648964\">PR review comment</a>:</p>\n<blockquote>\n<p>... and would also simplify the explanation that @cfallin has asked for :-). My vote would go towards refactoring as well.</p>\n</blockquote>",
        "id": 245230231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625686018
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701382562\">PR review</a>.</p>",
        "id": 245232073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625686879
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665657148\">PR review comment</a>:</p>\n<blockquote>\n<p>Tested this again now, curiously, it works if we enable just the <code>interpret</code> test, but stops working with the <code>run</code> test.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">interpret</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">brnz_b1</span><span class=\"p\">(</span><span class=\"n\">b1</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v1</span>: <span class=\"nc\">b1</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brnz</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">brnz_b1</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">brnz_b1</span><span class=\"p\">(</span><span class=\"kc\">false</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n</code></pre></div>\n<p>We get:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Afonso</span><span class=\"err\">\\</span><span class=\"n\">CLionProjects</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">target</span><span class=\"err\">\\</span><span class=\"n\">debug</span><span class=\"err\">\\</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">argument</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">mismatch</span>: <span class=\"nc\">b8</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">b1</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"err\">\\</span><span class=\"n\">filetests</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">function_runner</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">200</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"nc\">argument</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">mismatch</span>: <span class=\"nc\">b8</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">b1</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 245232074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625686879
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-701383641\">PR review</a>.</p>",
        "id": 245232268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625686970
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r665657985\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok, I'll update into that model instead.</p>\n</blockquote>",
        "id": 245232269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625686970
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 245331186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625758575
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-702243029\">PR review</a>.</p>",
        "id": 245334034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625759906
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r666324630\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not 100% happy with how this turned out.</p>\n<p>My issue is that this signature implies that we can change the output register, despite us never doing that. However changing <code>IcmpResult</code> into something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">enum</span> <span class=\"nc\">IcmpResult</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Flag</span><span class=\"p\">(</span><span class=\"n\">IntCC</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Register</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Also doesn't seem great, because now the output is inconsistent: if you request flag outputs you have to check the result and if you request register outputs you can ignore the result.</p>\n<p>Do you guys have any suggestion on how to improve this?</p>\n<p>This PR is also getting pretty big on the AArch64 side, if you would like me to separate it into 2 PR's let me know!<br>\n</p>\n</blockquote>",
        "id": 245334035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625759906
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 245364419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625774633
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a>.</p>",
        "id": 245498362,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625864694
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a>.</p>",
        "id": 245498401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625864704
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-703431270\">PR review</a>.</p>",
        "id": 245514116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625870643
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r667243294\">PR review comment</a>:</p>\n<blockquote>\n<p>Well, I guess we'll just have to fix it all in #2237 <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> </p>\n</blockquote>",
        "id": 245514117,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625870643
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-703431557\">PR review</a>.</p>",
        "id": 245514190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625870707
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 245801579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626170132
    },
    {
        "content": "<p>afonso360 deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r666324630\">PR review comment</a>.</p>",
        "id": 245801603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626170154
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-705712961\">PR review</a>.</p>",
        "id": 245901353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626217841
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-705712961\">PR review</a>.</p>",
        "id": 245901354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626217841
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r669164152\">PR review comment</a>:</p>\n<blockquote>\n<p>At this point we should operate on <code>Cond</code>, not <code>IntCC</code>. Also, let's call this <code>Condcode</code> instead of <code>Flag</code>.</p>\n</blockquote>",
        "id": 245901355,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626217841
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r669167043\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we add an assertion that we have not asked for <code>IcmpOutput::Flags</code> in this case?</p>\n</blockquote>",
        "id": 245901356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626217841
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-705722379\">PR review</a>.</p>",
        "id": 245902027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626218385
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r669172059\">PR review comment</a>:</p>\n<blockquote>\n<p>Nit - the code structure looks like this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"n\">cond</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Since you are changing the surrounding code significantly, could you also transform this, so that it does not use a negated condition:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">cond</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 245902028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626218385
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-705723484\">PR review</a>.</p>",
        "id": 245902215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626218536
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r669173100\">PR review comment</a>:</p>\n<blockquote>\n<p>I think that there should be just a single block like this one, right before the function returns.</p>\n</blockquote>",
        "id": 245902216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626218537
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-705728601\">PR review</a>.</p>",
        "id": 245903073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626219266
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r669177656\">PR review comment</a>:</p>\n<blockquote>\n<p><code>comparison</code></p>\n<p>Also, there is no <code>NE</code> flag - it is called <code>Z</code>. However, a better way to phrase this is to say <code>The result of this comparison is either the EQ or NE condition code ...</code>.</p>\n</blockquote>",
        "id": 245903074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626219266
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-707830068\">PR review</a>.</p>",
        "id": 246158151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626384051
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670813090\">PR review comment</a>:</p>\n<blockquote>\n<p>We should emit the correct results if the caller asked for flags, we emit a <code>subs</code>.</p>\n<p>Although, looking at this again, we can probably improve codegen by emitting a <code>sub</code> instead if the caller requested <code>Registers</code>.</p>\n<p>I'll change that as well</p>\n</blockquote>",
        "id": 246158152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626384051
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670813090\">PR review comment</a>.</p>",
        "id": 246158362,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626384177
    },
    {
        "content": "<p>afonso360 deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670813090\">PR review comment</a>.</p>",
        "id": 246158524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626384254
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 246168514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626391527
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-707893359\">PR review</a>.</p>",
        "id": 246168518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626391531
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670866092\">PR review comment</a>:</p>\n<blockquote>\n<p>We don't do this everywhere, namely I128 gt/lt/etc and vector icmps, so I don't know how well this ends up being in practice. But I pushed a commit with this at the end, let me know which way you prefer it.</p>\n</blockquote>",
        "id": 246168519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626391531
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 246168676,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626391683
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-707901122\">PR review</a>.</p>",
        "id": 246169854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626392761
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670873050\">PR review comment</a>:</p>\n<blockquote>\n<p>Are you saying that there are cases in which we pass <code>IcmpOutput::Flags</code>, but we return the result in a register (or vice versa)?</p>\n</blockquote>",
        "id": 246169855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626392761
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-707904245\">PR review</a>.</p>",
        "id": 246173213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626395949
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670886335\">PR review comment</a>:</p>\n<blockquote>\n<p>This should be <code>CondCode</code> as well, for consistency with <code>IcmpResult</code>.</p>\n</blockquote>",
        "id": 246173214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626395949
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-707904245\">PR review</a>.</p>",
        "id": 246173215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626395949
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670875932\">PR review comment</a>:</p>\n<blockquote>\n<p>Actually they are not - there is a very small number of optional instructions that perform partial NZCV updates, but they are quite specialized, so I do not anticipate that we are ever going to need them in Cranelift.</p>\n<p>That's why I also suggested the term \"condition code\" instead of \"flag\".</p>\n</blockquote>",
        "id": 246173216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626395949
    },
    {
        "content": "<p>akirilov-arm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r670873050\">PR review comment</a>.</p>",
        "id": 246174091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626396846
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-708147052\">PR review</a>.</p>",
        "id": 246198624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626425214
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671076737\">PR review comment</a>:</p>\n<blockquote>\n<p>This is here to sort of warn callers that we may set flags that they do not expect, not that we really don't know what they are.</p>\n<p>An example of this is the I128 EQ/NE implementation, we end that by emitting a <code>CMN</code> on the XOR of the inputs, this works for EQ/NE but if the caller tried to use any other cond code would result in wrong behaviour.</p>\n<p>But I think we can clarify this by saying that callers can check the output <code>cond</code> and its negative.</p>\n</blockquote>",
        "id": 246198625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626425214
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671076737\">PR review comment</a>.</p>",
        "id": 246198772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626425309
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671076737\">PR review comment</a>.</p>",
        "id": 246199087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626425548
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-708152781\">PR review</a>.</p>",
        "id": 246199156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626425614
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671081251\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks, that is much better!</p>\n</blockquote>",
        "id": 246199157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626425614
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 246209087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626433051
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671081251\">PR review comment</a>.</p>",
        "id": 246209187,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626433108
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/akirilov-arm\">akirilov-arm</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a>.</p>",
        "id": 246209391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626433250
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-708632781\">PR review</a>.</p>",
        "id": 246259411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459053
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-708632781\">PR review</a>.</p>",
        "id": 246259412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459053
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671437940\">PR review comment</a>:</p>\n<blockquote>\n<p>Typo - <code>comparison</code>.</p>\n</blockquote>",
        "id": 246259413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459053
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671436171\">PR review comment</a>:</p>\n<blockquote>\n<p>I just realized that this could be simplified further:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">should_materialize</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">output</span><span class=\"p\">.</span><span class=\"n\">reg</span><span class=\"p\">().</span><span class=\"n\">is_some</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 246259414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459053
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671438757\">PR review comment</a>:</p>\n<blockquote>\n<p>Typo - <code>comparisons</code>.</p>\n</blockquote>",
        "id": 246259415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459053
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a> from <code>interpreter-branches</code> to <code>main</code>.</p>",
        "id": 246259717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459242
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-708643583\">PR review</a>.</p>",
        "id": 246260157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459475
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#discussion_r671444423\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh, right, a bit of tunnel vision on my side - I was absolutely concentrating on the flags case.</p>\n</blockquote>",
        "id": 246260158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626459475
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062#pullrequestreview-708753693\">PR review</a>.</p>",
        "id": 246281222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626470169
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3062\">PR #3062</a>.</p>",
        "id": 246478247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626712275
    }
]