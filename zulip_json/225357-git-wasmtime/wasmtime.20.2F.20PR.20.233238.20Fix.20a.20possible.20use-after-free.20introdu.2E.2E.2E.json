[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3238\">PR #3238</a> from <code>fix-uaf</code> to <code>main</code>:</p>\n<blockquote>\n<p>In #3231 the wasm data sections were moved from the<br>\n<code>wasmtime_environ::Module</code> structure into the <code>CompilationArtifacts</code>.<br>\nEach <code>wasmtime_runtime::Instance</code> holds raw pointers into the data<br>\nsection owned by the compilation artifacts under the assumption that the<br>\nruntime keeps the artifacts alive while the module is in use. Data is<br>\nneeded beyond original initialization for <code>memory.init</code> instructions as<br>\nwell as lazy-initialization with the <code>uffd</code> feature.</p>\n<p>The intention of #3231 was that all <code>CompiledModule</code> structures, which<br>\nown <code>CompilationArtifacts</code> were owned by a store's <code>ModuleRegistry</code>, so<br>\nthis was already taken care of. It turns out, however, that empty<br>\nmodules which contain no functions are not held within a<br>\n<code>ModuleRegistry</code> since there was no need prior to retain them. This<br>\ncommit remedies this mistake by retaining the <code>CompiledModule</code><br>\nstructure, even if there aren't any functions compiled in.</p>\n<p>This should unblock #3235 and fixes the spurious error found there. The<br>\ntest here, at least on Linux, will deterministically reproduce the error<br>\nbefore this commit since <code>uffd</code> was initializing wasm memory with free'd<br>\nhost memory.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 250573883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629858234
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/peterhuene\">peterhuene</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3238\">PR #3238</a>.</p>",
        "id": 250573884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629858235
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3238#pullrequestreview-738614256\">PR review</a>.</p>",
        "id": 250649403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629911422
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3238\">PR #3238</a>.</p>",
        "id": 250649973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629911654
    }
]