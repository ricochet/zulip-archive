[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249\">PR #2249</a> from <code>module_rework</code> to <code>main</code>:</p>\n<blockquote>\n<p>The old design has a <code>Module</code> struct that wraps around a <code>Backend</code> implementation. Because the <code>Backend</code> is not exposed it is not possible to export extra methods to do things like deallocating specific functions or adding new predefined imports for the jit. It is also not possible to customise the behavior of existing methods to for example allow replacing an already defined function for hot code swapping. It was also not possible to create a module with a non-static lifetime (required for headcrab-inject) In the new design <code>Module</code> is instead a trait with <code>ModuleDeclarations</code> being a struct for some shared behavior regarding how declarations are handled. As the <code>Module</code> is fully exposed, it is possible to add new methlds to the api of every module and customize the behavior of existing methods. None of the previously mentioned use cases are implemented yet. I will leave that for a future PR.</p>\n<p>Also fixes #1691</p>\n</blockquote>",
        "id": 211804401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601492056
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249\">PR #2249</a>.</p>",
        "id": 211804963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601492350
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249#pullrequestreview-499880193\">PR Review</a>.</p>",
        "id": 211852668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601508573
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249#discussion_r497856048\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Please document whether this is in bytes or in log2(bytes).</p>\n</blockquote>",
        "id": 211852669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601508573
    },
    {
        "content": "<p>sunfishcode edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249#discussion_r497856048\">PR Review Comment</a>.</p>",
        "id": 211852740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601508614
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249\">PR #2249</a> from <code>module_rework</code> to <code>main</code>:</p>\n<blockquote>\n<p>The old design has a <code>Module</code> struct that wraps around a <code>Backend</code> implementation. Because the <code>Backend</code> is not exposed it is not possible to export extra methods to do things like deallocating specific functions or adding new predefined imports for the jit. It is also not possible to customise the behavior of existing methods to for example allow replacing an already defined function for hot code swapping. It was also not possible to create a module with a non-static lifetime (required for headcrab-inject) In the new design <code>Module</code> is instead a trait with <code>ModuleDeclarations</code> being a struct for some shared behavior regarding how declarations are handled. As the <code>Module</code> is fully exposed, it is possible to add new methlds to the api of every module and customize the behavior of existing methods. None of the previously mentioned use cases are implemented yet. I will leave that for a future PR.</p>\n<p>Also fixes #1691</p>\n</blockquote>",
        "id": 211878488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601538811
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249#pullrequestreview-500091930\">PR Review</a>.</p>",
        "id": 211878498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601538820
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249#discussion_r498051120\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 211878499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601538820
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249\">PR #2249</a> from <code>module_rework</code> to <code>main</code>:</p>\n<blockquote>\n<p>The old design has a <code>Module</code> struct that wraps around a <code>Backend</code> implementation. Because the <code>Backend</code> is not exposed it is not possible to export extra methods to do things like deallocating specific functions or adding new predefined imports for the jit. It is also not possible to customise the behavior of existing methods to for example allow replacing an already defined function for hot code swapping. It was also not possible to create a module with a non-static lifetime (required for headcrab-inject) In the new design <code>Module</code> is instead a trait with <code>ModuleDeclarations</code> being a struct for some shared behavior regarding how declarations are handled. As the <code>Module</code> is fully exposed, it is possible to add new methlds to the api of every module and customize the behavior of existing methods. None of the previously mentioned use cases are implemented yet. I will leave that for a future PR.</p>\n<p>Also fixes #1691</p>\n</blockquote>",
        "id": 212657789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602144260
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249#pullrequestreview-504969964\">PR Review</a>.</p>",
        "id": 212717212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602175222
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2249\">PR #2249</a>.</p>",
        "id": 212718907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602175952
    }
]