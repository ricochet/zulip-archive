[
    {
        "content": "<p>conrad-watt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4113\">PR #4113</a> from <code>main</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit of the interpreter introduces a new strategy for handling bitwise ops, which fixes the performance of <code>popcnt</code>, <code>reinterpret</code>, and signed integer comparison, and should result in fewer fuzzing timeouts (see <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4059\">https://github.com/bytecodealliance/wasmtime/issues/4059</a>).</p>\n<p>For reference, similar performance issues still exist for the integer operations <code>clz</code>, <code>ctz</code>, <code>rem_s</code>, <code>rotl</code>, <code>rotr</code>, <code>wrap</code>, <code>extend_u</code>, and <code>extend_s</code> - my current plan is to address these in a follow-up, so long as this current fix causes no issues.</p>\n</blockquote>",
        "id": 281702080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652110410
    },
    {
        "content": "<p>conrad-watt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4113\">PR #4113</a> from <code>main</code> to <code>main</code>:</p>\n<blockquote>\n<p>This <a href=\"https://github.com/conrad-watt/spec/compare/conrad-new-interpreter...conrad-watt:wasmtime_fuzzing\">commit of the interpreter</a> introduces a new strategy for handling bitwise ops, which fixes the performance of <code>popcnt</code>, <code>reinterpret</code>, and signed integer comparison, and should result in fewer fuzzing timeouts (see <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4059\">https://github.com/bytecodealliance/wasmtime/issues/4059</a>).</p>\n<p>For reference, similar performance issues still exist for the integer operations <code>clz</code>, <code>ctz</code>, <code>rem_s</code>, <code>rotl</code>, <code>rotr</code>, <code>wrap</code>, <code>extend_u</code>, and <code>extend_s</code> - my current plan is to address these in a follow-up, so long as this current fix causes no issues.</p>\n</blockquote>",
        "id": 281702683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652110652
    },
    {
        "content": "<p>conrad-watt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4113\">PR #4113</a> from <code>main</code> to <code>main</code>:</p>\n<blockquote>\n<p>This <a href=\"https://github.com/conrad-watt/spec/compare/conrad-new-interpreter...conrad-watt:wasmtime_fuzzing\">commit of the interpreter</a> introduces a new strategy for handling bitwise ops, which fixes the performance of <code>popcnt</code>, <code>reinterpret</code>, and signed integer comparison, and should result in fewer fuzzing timeouts (see <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4059\">https://github.com/bytecodealliance/wasmtime/issues/4059</a>).</p>\n<p>For reference, similar performance issues still exist for the integer operations <code>clz</code>, <code>ctz</code>, <code>rem_s</code>, <code>rotl</code>, <code>rotr</code>, <code>wrap</code>, <code>extend_u</code>, and <code>extend_s</code> - my current plan is to address these in a follow-up, so long as this current fix causes no issues.</p>\n<p>EDIT: currently fuzzing locally with no issues found so far</p>\n</blockquote>",
        "id": 281702860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652110711
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4113#pullrequestreview-966400168\">PR review</a>.</p>",
        "id": 281704981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652111627
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4113\">PR #4113</a>.</p>",
        "id": 281707378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652112583
    }
]