[
    {
        "content": "<p>fitzgen assigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a>:</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[ ] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [ ] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [ ] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n</ul>\n</blockquote>",
        "id": 197303471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589301636
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [ ] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [ ] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n</ul>\n</blockquote>",
        "id": 197303524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589301656
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929#issuecomment-637676331\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a>:</p>\n<blockquote>\n<p>fyi, enough to get an <code>externref -&gt; externref</code> identity function working just landed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1781\">https://github.com/bytecodealliance/wasmtime/pull/1781</a></p>\n</blockquote>",
        "id": 199520776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591116547
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [ ] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [ ] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n</ul>\n</blockquote>",
        "id": 199521097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591116712
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [ ] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [ ] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[ ] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n</ul>\n</blockquote>",
        "id": 199521671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591116970
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [ ] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [ ] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[ ] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n</ul>\n</blockquote>",
        "id": 200615592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591914652
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [ ] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [ ] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 201049719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592329206
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [ ] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 201306313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592504232
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [ ] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 201881328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593021236
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [ ] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643559
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [ ] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632626,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643566
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [ ] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643570
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [ ] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643600
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [ ] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643608
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [ ] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643618
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [ ] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632681,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643623
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [ ] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643628
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [ ] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[ ] Finalize associated host info when externref is finalized: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1803\">https://github.com/bytecodealliance/wasmtime/issues/1803</a></li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202632689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593643631
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [ ] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202742252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593722581
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [ ] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202745556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593724527
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [ ] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202745557,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593724529
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [ ] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202745562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593724532
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n</blockquote>",
        "id": 202745565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593724534
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [ ] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[ ] Ensure that the API supports reference types and new reference types operations</li>\n</ul>\n</blockquote>",
        "id": 202751259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593728827
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[ ] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[ ] Ensure that the API supports reference types and new reference types operations</li>\n</ul>\n</blockquote>",
        "id": 203009243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594051968
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[ ] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[ ] Ensure that the API supports reference types and new reference types operations</li>\n</ul>\n</blockquote>",
        "id": 203009251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594051970
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929#issuecomment-654353797\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a>:</p>\n<blockquote>\n<p>All spec tests are now passing on <code>main</code>.</p>\n</blockquote>",
        "id": 203014227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594054581
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[ ] Ensure that the API supports reference types and new reference types operations</li>\n</ul>\n</blockquote>",
        "id": 203020785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594058196
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[ ] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[ ] Expose reference types in the C API</li>\n</ul>\n</blockquote>",
        "id": 203036283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594066937
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[ ] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[ ] Expose reference types in the C API</li>\n</ul>\n</blockquote>",
        "id": 203047496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594073927
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[ ] Expose reference types in the C API</li>\n</ul>\n</blockquote>",
        "id": 203205520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594157319
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[x] Expose reference types in the C API</li>\n</ul>\n</blockquote>",
        "id": 203748050,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594663222
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n<h4>Support Reference Types in Language Embedding APIs</h4>\n<ul>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[x] Expose reference types in the C API</li>\n<li>[ ] Support reference types in the go API</li>\n<li>[ ] Support reference types in the .NET API</li>\n<li>[ ] Support reference types in the Python API</li>\n</ul>\n</blockquote>",
        "id": 203748600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594663432
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n<h4>Support Reference Types in Language Embedding APIs</h4>\n<ul>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[x] Expose reference types in the C API</li>\n<li>[ ] Support reference types in the Go API</li>\n<li>[ ] Support reference types in the .NET API</li>\n<li>[ ] Support reference types in the Python API</li>\n</ul>\n</blockquote>",
        "id": 203749097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594663607
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n<h4>Support Reference Types in Language Embedding APIs</h4>\n<ul>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[x] Expose reference types in the C API</li>\n<li>[ ] Support reference types in the Go API</li>\n<li>[ ] Support reference types in the .NET API</li>\n<li>[x] Support reference types in the Python API</li>\n</ul>\n</blockquote>",
        "id": 205137520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595866721
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n<h4>Support Reference Types in Language Embedding APIs</h4>\n<ul>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[x] Expose reference types in the C API</li>\n<li>[ ] Support reference types in the Go API</li>\n<li>[x] Support reference types in the .NET API</li>\n<li>[x] Support reference types in the Python API</li>\n</ul>\n</blockquote>",
        "id": 205137524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595866723
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n</ul>\n<h4>Support Reference Types in Language Embedding APIs</h4>\n<ul>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[x] Expose reference types in the C API</li>\n<li>[x] Support reference types in the Go API</li>\n<li>[x] Support reference types in the .NET API</li>\n<li>[x] Support reference types in the Python API</li>\n</ul>\n</blockquote>",
        "id": 206202790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596751663
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/929\">Issue #929</a> (assigned to fitzgen):</p>\n<blockquote>\n<p>This is a tracking issue for <a href=\"https://github.com/WebAssembly/reference-types\">the reference types proposal</a>.</p>\n<h3>TODO</h3>\n<ul>\n<li>[x] Depends on bulk memory: #928</li>\n<li>[x] Enable the reference types proposal's test suite<br>\n    * [x] <code>binary.wast</code><br>\n    * [x] <code>br_table.wast</code><br>\n    * [x] <code>exports.wast</code><br>\n    * [x] <code>globals.wast</code><br>\n    * [x] <code>imports.wast</code><br>\n    * [x] <code>linking.wast</code><br>\n    * [x] <code>memory_grow.wast</code><br>\n    * [x] <code>ref_func.wast</code><br>\n    * [x] <code>ref_is_null.wast</code><br>\n    * [x] <code>ref_null.wast</code><br>\n    * [x] <code>select.wast</code><br>\n    * [x] <code>table_fill.wast</code><br>\n    * [x] <code>table_get.wast</code><br>\n    * [x] <code>table_grow.wast</code><br>\n    * [x] <code>table_set.wast</code><br>\n    * [x] <code>table_size.wast</code><br>\n    * [x] <code>unreached_invalid.wast</code></li>\n<li>[x] Enable reference types in the fuzzers</li>\n<li>[x] Do not leak <code>externref</code>s passed into Wasm: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1804\">https://github.com/bytecodealliance/wasmtime/issues/1804</a></li>\n<li>[x] Enable <code>Func::wrap</code> support for functions using reference types: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1868\">https://github.com/bytecodealliance/wasmtime/issues/1868</a></li>\n<li>[ ] Support reference types on aarch64: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1886\">https://github.com/bytecodealliance/wasmtime/issues/1886</a></li>\n<li>[ ] Enable reference types by default</li>\n</ul>\n<h4>Support Reference Types in Language Embedding APIs</h4>\n<ul>\n<li>[x] Ensure that the Rust API supports reference types and new reference types operations</li>\n<li>[x] Expose reference types in the C API</li>\n<li>[x] Support reference types in the Go API</li>\n<li>[x] Support reference types in the .NET API</li>\n<li>[x] Support reference types in the Python API</li>\n</ul>\n</blockquote>",
        "id": 206202874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596751699
    }
]