[
    {
        "content": "<p>adampetro opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a> from <code>adampetro:versioned-exports</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<p>issue #6660</p>\n<p>This change enables support for including multiple versions of <code>wasmtime</code> in a crate by adding suffixes to the symbols produced to assembly that currently produce <code>multiple definition</code> errors when attempting to use multiple <code>wasmtime</code> versions.</p>\n<p>Starting this in draft to get feedback on the general approach before adding tests, tackling removing <code>links</code> from the <code>fiber</code> crate, and other refinements.<br>\n</p>\n</blockquote>",
        "id": 370849786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688056532
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#pullrequestreview-1505748123\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for working on this!</p>\n<p>One suggestion I might have though is that instead of changing the literal identifier used in Rust code to one with a version appended I think this would be a good use for <code>#[export_name = \"foo\"]</code> or <code>#[link_name = \"foo\"]</code> (depending on context). That way the symbol in Rust wouldn't change, but only the symbol at the binary level (which is what we care about the most here)</p>\n</blockquote>",
        "id": 370860336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688058496
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#pullrequestreview-1505748123\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for working on this!</p>\n<p>One suggestion I might have though is that instead of changing the literal identifier used in Rust code to one with a version appended I think this would be a good use for <code>#[export_name = \"foo\"]</code> or <code>#[link_name = \"foo\"]</code> (depending on context). That way the symbol in Rust wouldn't change, but only the symbol at the binary level (which is what we care about the most here)</p>\n</blockquote>",
        "id": 370860337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688058497
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1246910562\">PR review comment</a>:</p>\n<blockquote>\n<p>If possible I think it'd be best to avoid the macro here and instead apply it on usages. For example when the <code>impl_*</code> symbols are defined they'd have <code>#[versioned_fn]</code>, but otherwise this macro wouldn't be tampered with and the normal identifiers would be used everywhere.</p>\n</blockquote>",
        "id": 370860339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688058497
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1246909651\">PR review comment</a>:</p>\n<blockquote>\n<p>Ideally this could always be enabled and handled internally, so could the goal for the end state of this PR be to remove this as an option?</p>\n<p>If this is only an issue on s390x I think that's a targeted problem which can be fixed in isolation in the build script for the outlined assembly files.</p>\n</blockquote>",
        "id": 370860340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688058497
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1246911458\">PR review comment</a>:</p>\n<blockquote>\n<p>One idea for handling this is to use preprocessor magic on s390x which supports I think <code>foo ## bar</code> to create the symbol <code>foobar</code> so Wasmtime could invoke the C compiler with something like <code>-DSYMBOL_APPEND=10_0_0</code> or something like that.</p>\n</blockquote>",
        "id": 370860342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688058497
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1246911895\">PR review comment</a>:</p>\n<blockquote>\n<p>This is one location where I think it'd be good to avoid this attribute because these are normal Rust functions whose symbols don't matter, so ideally versioning shouldn't come into play here.</p>\n</blockquote>",
        "id": 370860343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688058497
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 370953404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688084165
    },
    {
        "content": "<p>adampetro created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247278186\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it could makes sense not to use a feature for this. That being said, in discussion with @saulecabrera he mentioned that we likely want to support <a href=\"https://docs.rs/wasmtime/latest/wasmtime/enum.ModuleVersionStrategy.html\"><code>ModuleVersionStrategy::Custom</code></a> and also <code>ModuleVersionStrategy::None</code>, and having this enabled by default would, from my understanding, break those two settings. Should it be opt-in, such as enabled with a <code>WASMTIME_VERSIONED_EXPORTS</code> environment variable to use the version-based suffix and <code>WASMTIME_EXPORT_SUFFIX</code> for a custom suffix?</p>\n</blockquote>",
        "id": 370954582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688084654
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247300317\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh? In my mind this setting is purely about how we need some unmangled symbol names for things written in assembly and we need to be able to have \"mangled\" symbols per-wasmtime-version. That I would not expect to be related to the <code>ModuleVersionStrategy</code> which is only about what compiled artifacts look like, and as long as the right artifact is paired with the right wasmtime everything should work there as expected.</p>\n</blockquote>",
        "id": 370961269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688087275
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#pullrequestreview-1506309650\">PR review</a>:</p>\n<blockquote>\n<p>Nice! I like how this simplified things well. If you're up for it as well it'd be awesome to include this dependency in the <code>wasmtime-fiber</code> crate as well which would allow removing the <code>links</code> attribute there and enable multi-version linkage.</p>\n</blockquote>",
        "id": 370961883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688087528
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#pullrequestreview-1506309650\">PR review</a>:</p>\n<blockquote>\n<p>Nice! I like how this simplified things well. If you're up for it as well it'd be awesome to include this dependency in the <code>wasmtime-fiber</code> crate as well which would allow removing the <code>links</code> attribute there and enable multi-version linkage.</p>\n</blockquote>",
        "id": 370961884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688087528
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247300954\">PR review comment</a>:</p>\n<blockquote>\n<p>I think technically this <code>versioned_export</code> is only required on s390x?</p>\n</blockquote>",
        "id": 370961885,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688087528
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247301944\">PR review comment</a>:</p>\n<blockquote>\n<p>I also think this may be causing the segfault on CI since the \"mangled\" symbols here should be the inline-assembly-generated trampolines, not the Rust-defined functions  (e.g. the functions generated in the <code>wasm_to_libcall_trampoline</code> macro invocation)</p>\n</blockquote>",
        "id": 370961887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688087528
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247301151\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this (and others on the top-level functions in this file) can be removed because these symbols aren't exported from the wasmtime library</p>\n</blockquote>",
        "id": 370961889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688087529
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 370973338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688092256
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247756586\">PR review comment</a>:</p>\n<blockquote>\n<p>My line of thought here was mostly around verifying if the usage of <code>ModuleVersionStrategy</code> would be in conflict with versioning the symbols with the crate's version. But I don't necessarily have a particular use-case that demonstrates such conflict, I mostly wanted to make sure that we're all aligned that this is not a concern, which I think @alexcrichton has clarified in the previous comment. </p>\n</blockquote>",
        "id": 371108116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688124241
    },
    {
        "content": "<p>adampetro created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247859086\">PR review comment</a>:</p>\n<blockquote>\n<p>Sounds good, I removed these and instead did the renaming inside of the <code>wasmtime_asm_macros::asm_func!</code> calls</p>\n</blockquote>",
        "id": 371148992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688131274
    },
    {
        "content": "<p>adampetro created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247859417\">PR review comment</a>:</p>\n<blockquote>\n<p>Got it, sounds good. Thanks!</p>\n</blockquote>",
        "id": 371149107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688131297
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1247988516\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yeah I think we're all good then because the names of symbols in Wasmtime doesn't actually end up relating to compiled artifacts at all, so these end up being orthogonal knobs.</p>\n</blockquote>",
        "id": 371203794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688138362
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 371317550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688164017
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 371319098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688164668
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372407809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688501112
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372410474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688502279
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1253175565\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh this is actually the one symbol which needs to not be versioned since IIRC gdb sets a breakpoint on this or something like that. That's ok though due to the <code>weak</code> linkage which should enable this to exist with other definitions ok.</p>\n</blockquote>",
        "id": 372607501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688566417
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372620155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688568702
    },
    {
        "content": "<p>adampetro created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#discussion_r1253234581\">PR review comment</a>:</p>\n<blockquote>\n<p>Makes sense, removed, thanks!</p>\n</blockquote>",
        "id": 372620665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688568801
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#pullrequestreview-1514739017\">PR review</a>.</p>",
        "id": 372622464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688569156
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372626838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688569985
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372632598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688570961
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372636063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688571585
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372703789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688587825
    },
    {
        "content": "<p>github-merge-queue[bot] updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372714890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688591569
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372714893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688591570
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 372983368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688666804
    },
    {
        "content": "<p><strong>adampetro</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a> as ready for review.</p>",
        "id": 373016138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688676096
    },
    {
        "content": "<p><strong>adampetro</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373016143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688676097
    },
    {
        "content": "<p><strong>adampetro</strong> requested <a href=\"https://github.com/itsrainy\">itsrainy</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373016144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688676097
    },
    {
        "content": "<p><strong>adampetro</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373016146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688676098
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673#pullrequestreview-1517282880\">PR review</a>.</p>",
        "id": 373016859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688676306
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373026597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688679706
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373027190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688679928
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373039503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688685146
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373041991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688686345
    },
    {
        "content": "<p>adampetro updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373043057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688686917
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6673\">PR #6673</a>.</p>",
        "id": 373241360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688742259
    }
]