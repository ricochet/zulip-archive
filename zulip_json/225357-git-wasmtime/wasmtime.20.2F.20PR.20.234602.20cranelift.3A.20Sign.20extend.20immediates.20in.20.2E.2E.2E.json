[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a> from <code>iadd_imm_fix_sext</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR alters the behaviour of <code>*_imm</code> instructions to sign extend their immediate argument when the control type is <code>i128</code>.</p>\n<p>This comes from a fuzzer issue where the interpreter was sign extending the immediates but the legalizations were not.</p>\n<p>Fixes: #4568</p>\n</blockquote>",
        "id": 291926666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659564301
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a> from <code>iadd_imm_fix_sext</code> to <code>main</code>.</p>",
        "id": 291926871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659564439
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a> from <code>iadd_imm_fix_sext</code> to <code>main</code>.</p>",
        "id": 291973317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659597391
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a> from <code>iadd_imm_fix_sext</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR alters the behaviour of <code>*_imm</code> instructions to sign extend their immediate argument when the control type is <code>i128</code>.</p>\n<p>This comes from a fuzzer issue where the interpreter was sign extending the immediates but the legalizations were not.</p>\n<p>Fixes: #4568<br>\nFixes: #4641</p>\n</blockquote>",
        "id": 292641127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660072532
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a> from <code>iadd_imm_fix_sext</code> to <code>main</code>.</p>",
        "id": 292642703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660073174
    },
    {
        "content": "<p><strong>afonso360</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a> as ready for review.</p>",
        "id": 292642928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660073261
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1067326627\">PR review</a>.</p>",
        "id": 292651434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660076580
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r941761563\">PR review comment</a>:</p>\n<blockquote>\n<p>It looks like it's a behavioral change if we panic here. The outer match just skips the instruction if it doesn't have an expansion for it. Maybe that's why the previous implementation duplicated so much code? I think @cfallin probably needs to weigh in on how this case should be handled.</p>\n<p>Gotta say, though, I _really_ like how much shorter your version is. I hope we can preserve that clarity even if this bit has to change.</p>\n<p>It might help to introduce a function that's something like this (but I haven't tested this code, let alone compiled it):</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">imm_const</span><span class=\"p\">(</span><span class=\"n\">pos</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">FuncCursor</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">arg</span>: <span class=\"nc\">Value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">imm</span>: <span class=\"nc\">Imm64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Value</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">.</span><span class=\"n\">dfg</span><span class=\"p\">.</span><span class=\"n\">value_type</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">ins</span><span class=\"p\">().</span><span class=\"n\">iconst</span><span class=\"p\">(</span><span class=\"n\">ty</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">I128</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">ins</span><span class=\"p\">().</span><span class=\"n\">iconst</span><span class=\"p\">(</span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">ins</span><span class=\"p\">().</span><span class=\"n\">sextend</span><span class=\"p\">(</span><span class=\"n\">I128</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">pos</span><span class=\"p\">.</span><span class=\"n\">ins</span><span class=\"p\">().</span><span class=\"n\">iconst</span><span class=\"p\">(</span><span class=\"n\">ty</span><span class=\"p\">.</span><span class=\"n\">lane_type</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"n\">imm</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 292651435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660076580
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1067326627\">PR review</a>.</p>",
        "id": 292651436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660076580
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1067429722\">PR review</a>.</p>",
        "id": 292664393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660082266
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r941837397\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, we don't want to hit an <code>unimplemented!()</code> here; I think we just want an empty match-arm body (<code>_ =&gt; {}</code>) instead. That way we still construct the <code>imm</code> but we just don't do anything with it.</p>\n</blockquote>",
        "id": 292664394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660082266
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1067429722\">PR review</a>.</p>",
        "id": 292664395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660082266
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r941844731\">PR review comment</a>:</p>\n<blockquote>\n<p>Wouldn't an empty match-arm body there cause <code>simple_legalize</code> to loop, trying to legalize the same instruction repeatedly?</p>\n</blockquote>",
        "id": 292665960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660083013
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1067439863\">PR review</a>.</p>",
        "id": 292665961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660083013
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r941846540\">PR review comment</a>:</p>\n<blockquote>\n<p>The toplevel loop is a <code>while let Some(inst) = pos.next_inst()</code>, so it's stepping through insts with no action taken in the loop body. Though actually the more precise thing to do is to replicate the fallback <code>_ =&gt; { ... }</code> below, which sets <code>prev_pos</code> first then continues, I think.</p>\n</blockquote>",
        "id": 292666249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660083216
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1067442111\">PR review</a>.</p>",
        "id": 292666250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660083216
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1067450850\">PR review</a>.</p>",
        "id": 292667660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660084028
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r941853307\">PR review comment</a>:</p>\n<blockquote>\n<p>The statement after the <code>match</code> is <code>pos.set_position(prev_pos);</code> and the intent appears to be to re-examine the result of every legalization. So it looks to me like termination of this function relies on every match arm replacing the instruction that it originally matched on. But yes, copying the <code>prev_pos</code> assignment from the fallback case should work, I think.</p>\n</blockquote>",
        "id": 292667662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660084028
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1068156853\">PR review</a>.</p>",
        "id": 292741904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660133205
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1068156853\">PR review</a>.</p>",
        "id": 292741905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660133205
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r942365954\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't have an opinion myself yet, but is sign-extending the best approach in this case?</p>\n</blockquote>",
        "id": 292741906,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660133205
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r942367642\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto for all logical operations and rotations.</p>\n</blockquote>",
        "id": 292741907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660133205
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#discussion_r942366444\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto.</p>\n</blockquote>",
        "id": 292741909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660133205
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a> from <code>iadd_imm_fix_sext</code> to <code>main</code>.</p>",
        "id": 293586885,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660583785
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a>.</p>",
        "id": 293587480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660584048
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602#pullrequestreview-1072981817\">PR review</a>.</p>",
        "id": 293589634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660584865
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a>.</p>",
        "id": 293589661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660584875
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4602\">PR #4602</a>.</p>",
        "id": 293595333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660586901
    }
]