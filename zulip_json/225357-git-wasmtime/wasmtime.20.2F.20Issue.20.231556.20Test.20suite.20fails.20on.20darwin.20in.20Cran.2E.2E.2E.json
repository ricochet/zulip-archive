[
    {
        "content": "<p>nomeata opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>Trying to upgrade <code>wasmtime</code> in nixpks via <a href=\"https://github.com/NixOS/nixpkgs/pull/85602\" title=\"https://github.com/NixOS/nixpkgs/pull/85602\">https://github.com/NixOS/nixpkgs/pull/85602</a><br>\n I get the following build error</p>\n<div class=\"codehilite\"><pre><span></span>thread &#39;Cranelift::spec::skip_stack_guard_page&#39; has overflowed its stack\nfatal runtime error: stack overflow\nerror: test failed, to rerun pass &#39;--test wast_testsuites&#39;\nCaused by:\n  process didn&#39;t exit successfully: `/private/tmp/nix-build-wasmtime-0.15.0.drv-0/source/target/debug/deps/wast_testsuites-eaac573cefb8aa83` (signal: 6, SIGABRT: process abort signal)\n</pre></div>\n\n\n<p>Full log at <a href=\"https://logs.nix.ci/?key=nixos/nixpkgs.85602&amp;attempt_id=83a9c69d-7d43-491e-959c-9d974a859018\" title=\"https://logs.nix.ci/?key=nixos/nixpkgs.85602&amp;attempt_id=83a9c69d-7d43-491e-959c-9d974a859018\">https://logs.nix.ci/?key=nixos/nixpkgs.85602&amp;attempt_id=83a9c69d-7d43-491e-959c-9d974a859018</a></p>\n</blockquote>",
        "id": 194666025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587384899
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616585519\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616585519\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>Is it possible to debug the builders and get perhaps a full stack trace and/or more info for the fault here?</p>\n</blockquote>",
        "id": 194681088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587392420
    },
    {
        "content": "<p>nomeata <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616600133\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616600133\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>I’ll try to reproduce it locally and see if I can get something</p>\n</blockquote>",
        "id": 194684801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587393865
    },
    {
        "content": "<p>Mic92 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616604056\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616604056\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>Maybe you can do something like</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"ss\">preCheck =</span> <span class=\"s1\">&#39;&#39;</span>\n<span class=\"s1\">    export RUST_BACKTRACE=1</span>\n<span class=\"s1\">  &#39;&#39;</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>and re-run ofborg.</p>\n</blockquote>",
        "id": 194685632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587394238
    },
    {
        "content": "<p>nomeata <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616611441\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-616611441\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>Tried that locally, but it didn’t produce any new output</p>\n</blockquote>",
        "id": 194687315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587394948
    },
    {
        "content": "<p>nomeata <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-622989264\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-622989264\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>Just for the record: I failed to debug this, and don’t expect I will be able to, it’s out of my expertise.</p>\n</blockquote>",
        "id": 196062335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588441292
    },
    {
        "content": "<p>jyn514 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-623187502\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-623187502\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<blockquote>\n<p>Is it possible to debug the builders and get perhaps a full stack trace and/or more info for the fault here?</p>\n</blockquote>\n<p>In general, Rust does not generate backtraces for stack overflows. You would have to use <code>gdb</code> on the process, something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ gdb /home/joshua/.local/lib/cargo/target/debug/rcc\nReading symbols from /home/joshua/.local/lib/cargo/target/debug/rcc...done.\nwarning: Missing auto-load script at offset 0 in section .debug_gdb_scripts\nof file /home/joshua/.local/lib/cargo/target/debug/rcc.\nUse `info auto-load python-scripts [REGEXP]&#39; to list them.\n(gdb) run crash.c\nStarting program: /home/joshua/.local/lib/cargo/target/debug/rcc crash.c\n[Thread debugging using libthread_db enabled]\nUsing host libthread_db library &quot;/lib/x86_64-linux-gnu/libthread_db.so.1&quot;.\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x0000555555e4754b in core::ptr::const_ptr::&lt;impl *const T&gt;::offset (\n    self=0x7fffff7ff2a4 &quot;\\017\\000&quot;, count=0)\n    at /rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libcore/ptr/const_ptr.rs:160\n160 /rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libcore/ptr/const_ptr.rs: No such file or directory.\n(gdb) where\n#0  0x0000555555e4754b in core::ptr::const_ptr::&lt;impl *const T&gt;::offset (\n    self=0x7fffff7ff2a4 &quot;\\017\\000&quot;, count=0)\n    at /rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libcore/ptr/const_ptr.rs:160\n#1  0x0000555555e47514 in core::ptr::const_ptr::&lt;impl *const T&gt;::add (\n    self=0x7fffff7ff2a4 &quot;\\017\\000&quot;, count=0)\n    at /rustc/4fb7144ed159f94491249e86d5bbd033b5d60550/src/libcore/ptr/const_ptr.rs:399\n... etc ...\n</code></pre></div>\n\n\n<p>Since it's in the test suite, you'll use the binary that <code>cargo test</code> generates, something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo test --lib noop\n    Finished test [unoptimized + debuginfo] target(s) in 0.08s\n     Running /home/joshua/.local/lib/cargo/target/debug/deps/rcc-d000a597a330c054\n\nrunning 0 tests\n\ntest result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 117 filtered out\n\n$ gdb /home/joshua/.local/lib/cargo/target/debug/deps/rcc-d000a597a330c054\nReading symbols from /home/joshua/.local/lib/cargo/target/debug/deps/rcc-d000a597a330c054...done.\n(gdb)\n</code></pre></div>\n\n\n</blockquote>",
        "id": 196124970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588542389
    },
    {
        "content": "<p>nomeata <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556#issuecomment-629617328\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>Reportedly fixed in 0.16, according to <a href=\"https://github.com/ggreif/nixpkgs/commit/d89ae377d4b57415b1b00f2aa8e5a1655a1724b9\">https://github.com/ggreif/nixpkgs/commit/d89ae377d4b57415b1b00f2aa8e5a1655a1724b9</a></p>\n</blockquote>",
        "id": 197786875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589621682
    },
    {
        "content": "<p>nomeata closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1556\">Issue #1556</a>:</p>\n<blockquote>\n<p>Trying to upgrade <code>wasmtime</code> in nixpks via <a href=\"https://github.com/NixOS/nixpkgs/pull/85602\">https://github.com/NixOS/nixpkgs/pull/85602</a><br>\n I get the following build error</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;Cranelift::spec::skip_stack_guard_page&#39; has overflowed its stack\nfatal runtime error: stack overflow\nerror: test failed, to rerun pass &#39;--test wast_testsuites&#39;\nCaused by:\n  process didn&#39;t exit successfully: `/private/tmp/nix-build-wasmtime-0.15.0.drv-0/source/target/debug/deps/wast_testsuites-eaac573cefb8aa83` (signal: 6, SIGABRT: process abort signal)\n</code></pre></div>\n\n\n<p>Full log at <a href=\"https://logs.nix.ci/?key=nixos/nixpkgs.85602&amp;attempt_id=83a9c69d-7d43-491e-959c-9d974a859018\">https://logs.nix.ci/?key=nixos/nixpkgs.85602&amp;attempt_id=83a9c69d-7d43-491e-959c-9d974a859018</a></p>\n</blockquote>",
        "id": 197786876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589621682
    }
]