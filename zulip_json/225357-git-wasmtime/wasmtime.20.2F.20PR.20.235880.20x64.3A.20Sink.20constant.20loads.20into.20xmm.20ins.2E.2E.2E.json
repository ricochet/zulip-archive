[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5880\">PR #5880</a> from <code>sink-const-loads-in-sse-insts</code> to <code>main</code>:</p>\n<blockquote>\n<p>A number of places in the x64 backend make use of 128-bit constants for various wasm SIMD-related instructions although most of them currently use the <code>x64_xmm_load_const</code> helper to load the constant into a register. Almost all xmm instructions, however, enable using a memory operand which means that these loads can be folded into instructions to help reduce register pressure. Automatic conversions were added for a <code>VCodeConstant</code> into an <code>XmmMem</code> value and then explicit loads were all removed in favor of forwarding the <code>XmmMem</code> value directly to the underlying instruction. Note that some instances of <code>x64_xmm_load_const</code> remain since they're used in contexts where load sinking won't work (e.g. they're the first operand, not the second for non-commutative instructions).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 337889616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677274132
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5880#pullrequestreview-1314429364\">PR review</a>.</p>",
        "id": 337921641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677289794
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5880\">PR #5880</a>.</p>",
        "id": 338421658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677523468
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5880#pullrequestreview-1316486336\">PR review</a>.</p>",
        "id": 338456843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677534540
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5880\">PR #5880</a>.</p>",
        "id": 338464520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677537700
    }
]