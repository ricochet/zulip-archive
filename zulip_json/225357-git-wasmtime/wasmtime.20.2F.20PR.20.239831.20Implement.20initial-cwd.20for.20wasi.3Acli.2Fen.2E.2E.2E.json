[
    {
        "content": "<p>stephenmuss opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831\">PR #9831</a> from <code>stephenmuss:initial-cwd</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nThis implements initial-cwd for wasi:cli/environment.</p>\n<p>My biggest struggle was finding the appropriate places to add tests. Any guidance would be appreciated. Thank you.</p>\n<p>Closes #9695 </p>\n</blockquote>",
        "id": 489204667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734346585
    },
    {
        "content": "<p><strong>stephenmuss</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831\">PR #9831</a>.</p>",
        "id": 489204670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734346585
    },
    {
        "content": "<p><strong>stephenmuss</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831\">PR #9831</a>.</p>",
        "id": 489204671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734346585
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831#issuecomment-2546004349\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831\">PR #9831</a>:</p>\n<blockquote>\n<p>Thanks! I'd recommend adding a test to <code>crates/test-programs/bin/*.rs</code> and there's a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/test-programs/README.md\">small README</a> about the tests in that directory.</p>\n</blockquote>",
        "id": 489273724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734364551
    },
    {
        "content": "<p>stephenmuss <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831#issuecomment-2547210830\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831\">PR #9831</a>:</p>\n<blockquote>\n<p>I assume I should be able to use something like this in <code>crates/test-programs/bin/*.rs</code> to test</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">std</span><span class=\"p\">::</span><span class=\"n\">io</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">cwd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">env</span><span class=\"p\">::</span><span class=\"n\">current_dir</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">cwd</span><span class=\"p\">.</span><span class=\"n\">to_str</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"s\">\"/tmp\"</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>and run with <code>-S cwd=/tmp</code>.</p>\n<p>Is that understanding correct? </p>\n<p>However, I always get <code>Some(\"/\")</code> indicating that I still need to set the path somewhere I've missed, presumably in <code>src/commands/run.rs</code> and <code>src/commands/serve.rs</code> etc.</p>\n</blockquote>",
        "id": 489373138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734394527
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831#issuecomment-2548751814\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9831\">PR #9831</a>:</p>\n<blockquote>\n<p>Ah you'll probably need to use the WASI API directly rather than the standard library because the standard library isn't hooked up to this API yet.</p>\n</blockquote>",
        "id": 489511940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734449131
    }
]