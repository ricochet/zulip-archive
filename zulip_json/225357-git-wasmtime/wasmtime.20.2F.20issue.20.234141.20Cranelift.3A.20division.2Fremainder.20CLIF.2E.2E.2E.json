[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4141#issuecomment-1124134476\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4141\">issue #4141</a>:</p>\n<blockquote>\n<p>Cranelift not supporting them means cg_clif has to polyfill them even if the backend could technically support them: <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/blob/343c532f4f8bda436bf75250f9eb06d5aee245b4/src/intrinsics/simd.rs#L276\">https://github.com/bjorn3/rustc_codegen_cranelift/blob/343c532f4f8bda436bf75250f9eb06d5aee245b4/src/intrinsics/simd.rs#L276</a></p>\n</blockquote>",
        "id": 282006637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652292920
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4141#issuecomment-1124170644\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4141\">issue #4141</a>:</p>\n<blockquote>\n<p>@bjorn3 you're welcome to contribute implementations to the backends, as always! Sometimes decisions like this have to be made on the basis of how much work something would take, and the folks available to do it; Cranelift cannot always achieve \"every possible feature is supported\" even if it would be nice. I'd be happy to review PRs from anyone who wants to fill this gap.</p>\n</blockquote>",
        "id": 282010708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652294745
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4141#issuecomment-1124175883\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4141\">issue #4141</a>:</p>\n<blockquote>\n<p>I guess so. Maybe I will open a PR once I actually start to use vector instructions everywhere in cg_clif.</p>\n</blockquote>",
        "id": 282011436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652295121
    }
]