[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5895\">PR #5895</a> from <code>fmls</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds lowerings to the AArch64 backend for the <code>fmls</code> instruction which is intended to be leveraged in the relaxed-simd proposal for WebAssembly. This should hopefully allow for a teeny-bit-more efficient codegen for this operator instead of using the <code>fmla</code> instruction plus a negation instruction.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 338707645,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677624586
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5895#pullrequestreview-1320945531\">PR review</a>.</p>",
        "id": 338991999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677724016
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5895#pullrequestreview-1320945531\">PR review</a>.</p>",
        "id": 338992000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677724017
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5895#discussion_r1122534712\">PR review comment</a>:</p>\n<blockquote>\n<p>I suppose if both <code>x</code> and <code>y</code> are <code>fneg</code> then this can emit <code>fmla</code> instead of <code>fneg</code>+<code>fmls</code>, right? But I guess that's a rewrite we ought to do in the egraph optimizations instead.</p>\n</blockquote>",
        "id": 338992002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677724017
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5895#pullrequestreview-1321067756\">PR review</a>.</p>",
        "id": 339008449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677735941
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5895#discussion_r1122622018\">PR review comment</a>:</p>\n<blockquote>\n<p>Indeed! The x64 rules actually end up implementing that (they enable sort of switching back and forth given their structure) but it wasn't as obvious to do here - x64 uses a  helper that manages sinking a load as well which adds a fair number of permutations.</p>\n<p>I'll send a follow-up which implements the egraph optimization.</p>\n</blockquote>",
        "id": 339008450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677735942
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5895\">PR #5895</a>.</p>",
        "id": 339016140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677739886
    }
]