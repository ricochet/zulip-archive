[
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829\">PR #4829</a>.</p>",
        "id": 296243537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661908786
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829\">PR #4829</a> from <code>dedupe-abi-signatures</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit creates the <code>SigSet</code> type which interns and deduplicates the ABI<br>\nsignatures that we create from <code>ir::Signature</code>s. The ABI signatures are now<br>\nreferred to indirectly via a <code>Sig</code> (which is a <code>cranelift_entity</code> ID), and we<br>\npass around a <code>SigSet</code> to anything that needs to access the actual underlying<br>\n<code>SigData</code> (which is what <code>ABISig</code> used to be).</p>\n<p>I had to change a couple methods to return a <code>SmallInstVec</code> instead of emitting<br>\ndirectly to work around what would otherwise be shared and exclusive borrows of<br>\nthe lowering context overlapping. I don't expect any of these to heap allocate<br>\nin practice.</p>\n<p>This does not remove the often-unnecessary allocations caused by<br>\n<code>ensure_struct_return_ptr_is_returned</code>. That is left for follow up work.</p>\n<p>This also opens the door for further shuffling of signature data into more<br>\nefficient representations in the future, now that we have <code>SigSet</code> to store it<br>\nall in one place and it is threaded through all the code. We could potentially<br>\nmove each signature's parameter and return vectors into one big vector shared<br>\nbetween all signatures, for example, which could cut down on allocations and<br>\nshrink the size of <code>SigData</code> since those <code>SmallVec</code>s have pretty large inline<br>\ncapacity.</p>\n<p>Overall, this refactoring gives a 1-7% speedup for compilation on<br>\n<code>pulldown-cmark</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">8754213.66</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">7526266.23</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">dedupe</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.01</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.07</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">191003295</span><span class=\"w\"> </span><span class=\"mf\">234620642.20</span><span class=\"w\"> </span><span class=\"mi\">280597986</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">dedupe</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">197626699</span><span class=\"w\"> </span><span class=\"mf\">243374855.86</span><span class=\"w\"> </span><span class=\"mi\">321816763</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">170406200</span><span class=\"w\"> </span><span class=\"mf\">194299792.68</span><span class=\"w\"> </span><span class=\"mi\">253001201</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">dedupe</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">172071888</span><span class=\"w\"> </span><span class=\"mf\">193230743.11</span><span class=\"w\"> </span><span class=\"mi\">223608329</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">3870997347</span><span class=\"w\"> </span><span class=\"mf\">4437735062.59</span><span class=\"w\"> </span><span class=\"mi\">5216007266</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">dedupe</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">4019924063</span><span class=\"w\"> </span><span class=\"mf\">4424595349.24</span><span class=\"w\"> </span><span class=\"mi\">4965088931</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 296243538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661908786
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829\">PR #4829</a> from <code>dedupe-abi-signatures</code> to <code>main</code>.</p>",
        "id": 296403333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661963796
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829#pullrequestreview-1092307061\">PR review</a>.</p>",
        "id": 296421872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661969592
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829#pullrequestreview-1092307061\">PR review</a>.</p>",
        "id": 296421873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661969592
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829#discussion_r959881058\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there any way that we can stuff the <code>SigSet</code> into the <code>VCode</code>? It seems like maybe it is held separately here because of borrow-checker issues but maybe we can work around that if so.</p>\n</blockquote>",
        "id": 296421875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661969592
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829\">PR #4829</a> from <code>dedupe-abi-signatures</code> to <code>main</code>.</p>",
        "id": 296427086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971341
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829#pullrequestreview-1092344036\">PR review</a>.</p>",
        "id": 296427235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971403
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829#discussion_r959907011\">PR review comment</a>:</p>\n<blockquote>\n<p>Done! Required a little bit of plumbing accessors through so things that have a <code>Lower</code> could access the <code>Lower</code>'s <code>VCodeBuilder</code>'s <code>VCode</code>'s <code>SigSet</code> but it was ultimately a nice clean up.</p>\n</blockquote>",
        "id": 296427236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971403
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829\">PR #4829</a>.</p>",
        "id": 296427271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971413
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829\">PR #4829</a> from <code>dedupe-abi-signatures</code> to <code>main</code>.</p>",
        "id": 296433789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973785
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4829\">PR #4829</a>.</p>",
        "id": 296445812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661978374
    }
]