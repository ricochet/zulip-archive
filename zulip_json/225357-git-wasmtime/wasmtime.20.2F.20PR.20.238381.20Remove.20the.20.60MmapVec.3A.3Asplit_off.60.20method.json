[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8381\">PR #8381</a>.</p>",
        "id": 433536656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713278025
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8381\">PR #8381</a>.</p>",
        "id": 433536658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713278025
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8381\">PR #8381</a> from <code>alexcrichton:remove-mmap-vec-split-off</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This method isn't actually correct if <code>split_off</code> is used on the returned values again as it's missing some extra indexing processing. That being said nothing in Wasmtime currently uses it, so remove it entirely instead of keeping it around.</p>\n<p>found by @FrankReh, thanks!</p>\n</blockquote>",
        "id": 433536659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713278025
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8381#issuecomment-2059248187\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8381\">PR #8381</a>:</p>\n<blockquote>\n<p>Notably @FrankReh recommended replacing with this:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">split_off</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">at</span>: <span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">MmapVec</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"fm\">assert!</span><span class=\"p\">(</span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">range</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Adjust the start of the range for the new part</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">new_start</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">range</span><span class=\"p\">.</span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Create a new `MmapVec` which refers to the same underlying mmap, but</span>\n<span class=\"w\">    </span><span class=\"c1\">// has a disjoint range from ours. Our own range is adjusted to be</span>\n<span class=\"w\">    </span><span class=\"c1\">// disjoint just after `ret` is created.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MmapVec</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">mmap</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">mmap</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">(),</span>\n<span class=\"w\">        </span><span class=\"n\">range</span>: <span class=\"nc\">new_start</span><span class=\"o\">..</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">range</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">range</span><span class=\"p\">.</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">new_start</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>which I believe is correct, but also given that we don't need this it seems best to remove for now.</p>\n</blockquote>",
        "id": 433536877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713278081
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8381#pullrequestreview-2003935592\">PR review</a>.</p>",
        "id": 433545101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713280242
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8381\">PR #8381</a>.</p>",
        "id": 433583749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713292821
    }
]