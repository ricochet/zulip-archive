[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011#issuecomment-865241401\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011\">issue #3011</a>:</p>\n<blockquote>\n<p>Also, a quick note on impact: wider-than-1-bit bools are not used by <code>cranelift-wasm</code>, so we expect this not to impact Wasmtime or Lucet; only embedders that generate CLIF directly (e.g. <code>cg_clif</code>) should see this change. cc @bjorn3</p>\n</blockquote>",
        "id": 243421183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624299052
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011#issuecomment-865277998\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011\">issue #3011</a>:</p>\n<blockquote>\n<p>cg_clif doesn't use wider than b1 bools either. In fact it doesn't even store clif bools anywhere. It is always the result of a icmp and passed either to bint.i8 to store in memory or brz/brnz to branch. I don't see much value in wider than b1 bools. Bools can't really be directly stored in memory except for spill slots AFAIK, so the width shouldn't matter to the user, right?</p>\n</blockquote>",
        "id": 243428914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624302619
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011#issuecomment-865283277\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011\">issue #3011</a>:</p>\n<blockquote>\n<p>The intent of wider bools is to potentially act as masks for SIMD operations, if I understand correctly, though I haven't personally seen code that does that. Since they're defined and have well-defined behavior according to the instruction docs, I think it's probably best to keep them for now; we can certain think more about simplification in a separate issue if folks think it would make sense.</p>\n</blockquote>",
        "id": 243429845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624303142
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011#issuecomment-866148126\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011\">issue #3011</a>:</p>\n<blockquote>\n<blockquote>\n<p>Do we have a place where this invariant is documented, e.g. in the meta crate?</p>\n</blockquote>\n<p>Maybe close to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/docs/ir.md#boolean-types\">this documentation</a>? It's in need of some updating...</p>\n</blockquote>",
        "id": 243543260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624379828
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011#issuecomment-866205533\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3011\">issue #3011</a>:</p>\n<blockquote>\n<blockquote>\n<p>It's in need of some updating...</p>\n</blockquote>\n<p>Agreed; at some point (soon?) we need to make a pass through all the docs and fix outdated things. I don't think we've had significant updates since the new backends came into existence. But definitely out of scope for this PR as long as this specific invariant is there :-)</p>\n</blockquote>",
        "id": 243554927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624384696
    }
]