[
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1255#issuecomment-596191164\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1255#issuecomment-596191164\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1255\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1255\">Issue #1255</a>:</p>\n<blockquote>\n<blockquote>\n<p>Big picture: Moving code like this into Yanix is great, because that makes it easy to share between WASI snapshot versions.</p>\n</blockquote>\n<p>My thinking exactly!</p>\n<blockquote>\n<p>Is it possible to remove the <code>filetime</code> dependency from wasi-common's Cargo.toml with this?</p>\n</blockquote>\n<p>I thought about this exact thing and the answer is unfortunately no since <code>filetime</code> is a cross-platform crate (it's got bindings for Windows as well). We actually make use of <code>filetime</code> crate in cross-platform syscall implementation in <code>wasi-common</code>, whereas <code>yanix</code> provides only convenience wrappers for emulated <code>utimensat</code> syscall on platforms/kernels that don't support it. So long story short, no, we have to keep the dependency for now. The good news is, when I finally get round to backporting our modifications to the upstream <code>filetime</code> crate, we'll only be left with <code>filetime</code> as a dependency in <code>wasi-common</code>.</p>\n</blockquote>",
        "id": 190009327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583664285
    }
]