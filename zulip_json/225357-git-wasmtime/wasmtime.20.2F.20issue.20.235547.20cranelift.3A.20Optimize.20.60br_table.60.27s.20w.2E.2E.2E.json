[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547\">issue #5547</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>I had this idea when looking into #5508.</p>\n<p>We can optimize <code>br_table</code> with 0 targets in the JumpTable into a single jump into the default block.<br>\nWe can also optimize JumpTables with 1 target into a <code>brz</code> + <code>jump</code> which should still provide code size benefits.</p>\n<h4>Benefit</h4>\n<p>Generated code size improvements.</p>\n<p>Here's an example for the x86 backend.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;<code>br_table</code> with 1 target&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br_table_with_1_targets</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block2</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jae</span><span class=\"w\">     </span><span class=\"mh\">0x2d</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">d</span>:   <span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">d7</span><span class=\"w\">                   </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">             </span><span class=\"n\">cmovae</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">18</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">lea</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mh\">0xa</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"n\">f</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"> </span><span class=\"mi\">54</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">movsxd</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rcx</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">24</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">27</span>:   <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">                   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">29</span>:   <span class=\"mi\">09</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">or</span><span class=\"w\">      </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">b</span>:   <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">al</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">d</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">30</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">31</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">32</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">35</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">36</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Equivalent <code>brz</code>+<code>jump</code>&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">brz</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brz</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">bytes</span>:\n   <span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                   </span><span class=\"n\">test</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"mi\">05</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">     </span><span class=\"mh\">0x11</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">c</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">15</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>Here are the savings (in bytes) for the various backends:</p>\n<ul>\n<li>x86: 33 bytes</li>\n<li>aarch64: 28 bytes</li>\n<li>s390x: 30 bytes</li>\n<li>riscv: 32 bytes</li>\n</ul>\n<h4>Implementation</h4>\n<p>Can we write this as an egraph rule? Otherwise we probably need to use a custom pass.</p>\n<h4>Alternatives</h4>\n<p>We can always not do this optimization, I'm not sure how common these two kinds of <code>br_tables</code> are. We can also perform these optimizations in each backend, but that seems to be duplicating some effort.<br>\n</p>\n</blockquote>",
        "id": 319975472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673105493
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547\">issue #5547</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>I had this idea when looking into #5508.</p>\n<p>We can optimize <code>br_table</code> with 0 targets in the JumpTable into a single jump into the default block.<br>\nWe can also optimize JumpTables with 1 target into a <code>brz</code> + <code>jump</code> which should still provide code size benefits.</p>\n<h4>Benefit</h4>\n<p>Generated code size improvements. Even a small <code>br_table</code> is huge in terms of code size.</p>\n<p>Here's an example for the x86 backend.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;<code>br_table</code> with 1 target&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br_table_with_1_targets</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block2</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jae</span><span class=\"w\">     </span><span class=\"mh\">0x2d</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">d</span>:   <span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">d7</span><span class=\"w\">                   </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">             </span><span class=\"n\">cmovae</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">18</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">lea</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mh\">0xa</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"n\">f</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"> </span><span class=\"mi\">54</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">movsxd</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rcx</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">24</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">27</span>:   <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">                   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">29</span>:   <span class=\"mi\">09</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">or</span><span class=\"w\">      </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">b</span>:   <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">al</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">d</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">30</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">31</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">32</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">35</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">36</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Equivalent <code>brz</code>+<code>jump</code>&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">brz</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brz</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">bytes</span>:\n   <span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                   </span><span class=\"n\">test</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"mi\">05</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">     </span><span class=\"mh\">0x11</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">c</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">15</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>Here are the savings (in bytes) for the various backends:</p>\n<ul>\n<li>x86: 33 bytes</li>\n<li>aarch64: 28 bytes</li>\n<li>s390x: 30 bytes</li>\n<li>riscv: 32 bytes</li>\n</ul>\n<h4>Implementation</h4>\n<p>Can we write this as an egraph rule? Otherwise we probably need to use a custom pass.</p>\n<h4>Alternatives</h4>\n<p>We can always not do this optimization, I'm not sure how common these two kinds of <code>br_tables</code> are. We can also perform these optimizations in each backend, but that seems to be duplicating some effort.<br>\n</p>\n</blockquote>",
        "id": 319975600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673105553
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547\">issue #5547</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>I had this idea when looking into #5508.</p>\n<p>We can optimize a <code>br_table</code> with 0 targets in the JumpTable into a single jump into the default block.<br>\nWe can also optimize <code>br_table</code>'s with 1 target into a <code>brz</code> + <code>jump</code> which should still provide code size benefits.</p>\n<h4>Benefit</h4>\n<p>Generated code size improvements. Even a small <code>br_table</code> is huge in terms of code size.</p>\n<p>Here's an example for the x86 backend.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;<code>br_table</code> with 1 target&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br_table_with_1_targets</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block2</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jae</span><span class=\"w\">     </span><span class=\"mh\">0x2d</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">d</span>:   <span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">d7</span><span class=\"w\">                   </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">             </span><span class=\"n\">cmovae</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">18</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">lea</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mh\">0xa</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"n\">f</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"> </span><span class=\"mi\">54</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">movsxd</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rcx</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">24</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">27</span>:   <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">                   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">29</span>:   <span class=\"mi\">09</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">or</span><span class=\"w\">      </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">b</span>:   <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">al</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">d</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">30</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">31</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">32</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">35</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">36</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Equivalent <code>brz</code>+<code>jump</code>&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">brz</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brz</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">bytes</span>:\n   <span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                   </span><span class=\"n\">test</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"mi\">05</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">     </span><span class=\"mh\">0x11</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">c</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">15</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>Here are the savings (in bytes) for the various backends:</p>\n<ul>\n<li>x86: 33 bytes</li>\n<li>aarch64: 28 bytes</li>\n<li>s390x: 30 bytes</li>\n<li>riscv: 32 bytes</li>\n</ul>\n<h4>Implementation</h4>\n<p>Can we write this as an egraph rule? Otherwise we probably need to use a custom pass.</p>\n<h4>Alternatives</h4>\n<p>We can always not do this optimization, I'm not sure how common these two kinds of <code>br_tables</code> are. We can also perform these optimizations in each backend, but that seems to be duplicating some effort.<br>\n</p>\n</blockquote>",
        "id": 319975691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673105611
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547#issuecomment-1374517769\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547\">issue #5547</a>:</p>\n<blockquote>\n<p>For cg_clif br_table with less than 3 targets doesn't happen. It uses <code>cranelift_frontend::Switch</code>, which uses brz/brnz in case of two or less targets (excluding the default target)</p>\n</blockquote>",
        "id": 319975796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673105647
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547\">issue #5547</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>I had this idea when looking into #5508.</p>\n<p>We can optimize a <code>br_table</code> with 0 targets in the JumpTable into a single jump into the default block.<br>\nWe can also optimize <code>br_table</code>'s with 1 target into a <code>brz</code> + <code>jump</code> which should still provide code size benefits.</p>\n<h4>Benefit</h4>\n<p>Generated code size improvements. Even a small <code>br_table</code> is huge in terms of code size.</p>\n<p>Here's an example for the x86 backend.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;<code>br_table</code> with 1 target&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br_table_with_1_targets</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block2</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jae</span><span class=\"w\">     </span><span class=\"mh\">0x2d</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">d</span>:   <span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">d7</span><span class=\"w\">                   </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">             </span><span class=\"n\">cmovae</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">18</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">lea</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mh\">0xa</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"n\">f</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"> </span><span class=\"mi\">54</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">movsxd</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rcx</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">24</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">27</span>:   <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">                   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">29</span>:   <span class=\"mi\">09</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">or</span><span class=\"w\">      </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">b</span>:   <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">al</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">d</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">30</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">31</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">32</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">35</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">36</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Equivalent <code>brz</code>+<code>jump</code>&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">brz</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brz</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">bytes</span>:\n   <span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                   </span><span class=\"n\">test</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"mi\">05</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">     </span><span class=\"mh\">0x11</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">c</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">15</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>Here are the savings (in bytes) for the various backends:</p>\n<ul>\n<li>x86: 33 bytes</li>\n<li>aarch64: 28 bytes</li>\n<li>s390x: 30 bytes</li>\n<li>riscv: 32 bytes</li>\n</ul>\n<h4>Implementation</h4>\n<p>Can we write this as an egraph rule? Otherwise we probably need to use a custom pass.</p>\n<h4>Alternatives</h4>\n<p>We can always not do this optimization, I'm not sure how common these two kinds of <code>br_tables</code> are. We can also perform these optimizations in each backend, but that seems to be duplicating some effort.<br>\n</p>\n</blockquote>",
        "id": 319979579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673107630
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547#issuecomment-1374527370\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547\">issue #5547</a>:</p>\n<blockquote>\n<p>Right, we have the Switch interface that does a bunch of those optimizations. I've also disassembled a few of the sightglass benchmarks and none of them have a <code>br_table</code> with fewer than 3 targets, so its probably not worth pursuing this optimization.</p>\n</blockquote>",
        "id": 319979580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673107630
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5547\">issue #5547</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>I had this idea when looking into #5508.</p>\n<p>We can optimize a <code>br_table</code> with 0 targets in the JumpTable into a single jump into the default block.<br>\nWe can also optimize <code>br_table</code>'s with 1 target into a <code>brz</code> + <code>jump</code> which should still provide code size benefits.</p>\n<h4>Benefit</h4>\n<p>Generated code size improvements. Even a small <code>br_table</code> is huge in terms of code size.</p>\n<p>Here's an example for the x86 backend.</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;<code>br_table</code> with 1 target&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">br_table_with_1_targets</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block2</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_table</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">                </span><span class=\"n\">cmp</span><span class=\"w\">     </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jae</span><span class=\"w\">     </span><span class=\"mh\">0x2d</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">d</span>:   <span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">d7</span><span class=\"w\">                   </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">             </span><span class=\"n\">cmovae</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">18</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">    </span><span class=\"n\">lea</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rip</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mh\">0xa</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"n\">f</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"> </span><span class=\"mi\">54</span><span class=\"w\"> </span><span class=\"mi\">91</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">movsxd</span><span class=\"w\">  </span><span class=\"n\">rdx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rcx</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"o\">*</span><span class=\"mi\">4</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">24</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">d1</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rdx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">27</span>:   <span class=\"nc\">ff</span><span class=\"w\"> </span><span class=\"n\">e1</span><span class=\"w\">                   </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">rcx</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">29</span>:   <span class=\"mi\">09</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">or</span><span class=\"w\">      </span><span class=\"n\">dword</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">eax</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">b</span>:   <span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">     </span><span class=\"n\">byte</span><span class=\"w\"> </span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">al</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"n\">d</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">30</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">31</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">32</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">35</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">36</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>&lt;details&gt;<br>\n&lt;summary&gt;Equivalent <code>brz</code>+<code>jump</code>&lt;/summary&gt;</p>\n<p>clif:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">brz</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brz</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Assembly:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">22</span><span class=\"w\"> </span><span class=\"n\">bytes</span>:\n   <span class=\"mi\">0</span>:   <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">    </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rsp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">                   </span><span class=\"n\">test</span><span class=\"w\">    </span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">edi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>:   <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"mi\">05</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">     </span><span class=\"mh\">0x11</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">c</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">f</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>:   <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">     </span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">14</span>:   <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">     </span><span class=\"n\">rbp</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">15</span>:   <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">ret</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>Here are the savings (in bytes) for the various backends:</p>\n<ul>\n<li>x86: 33 bytes</li>\n<li>aarch64: 28 bytes</li>\n<li>s390x: 30 bytes</li>\n<li>riscv: 32 bytes</li>\n</ul>\n<h4>Implementation</h4>\n<p>Can we write this as an egraph rule? Otherwise we probably need to use a custom pass.</p>\n<h4>Alternatives</h4>\n<p>We can always not do this optimization, I'm not sure how common these two kinds of <code>br_tables</code> are. We can also perform these optimizations in each backend, but that seems to be duplicating some effort.<br>\n</p>\n</blockquote>",
        "id": 319979600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673107645
    }
]