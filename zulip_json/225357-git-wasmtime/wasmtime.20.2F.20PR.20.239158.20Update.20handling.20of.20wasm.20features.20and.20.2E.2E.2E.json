[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>.</p>",
        "id": 463799470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724184190
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>.</p>",
        "id": 463799474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724184190
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a> from <code>alexcrichton:improve-wast-testing-and-features</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is an attempt at making it easier to manage the set of variables we have in play with <code>*.wast</code> testing and wasm features. The Cranelift and Winch backends support different sets of wasm features at this time and historically Cranelift has also had architecture-specific support for wasm features. This is hoped to help simplify management of all of this in the future in addition to making <code>*.wast</code> testing more robust. Notable changes here are:</p>\n<ul>\n<li>A <code>Config</code> no longer tracks a <code>WasmFeatures</code> but instead only tracks explicitly disabled/enabled features. The final <code>WasmFeatures</code> is then computed given the result of compiler configuration.</li>\n<li>Default-enabled features now start from nothing instead of <code>wasmparser</code>'s defaults to avoid future breakage there.</li>\n<li>Each compiler configuration and/or backend now has a listed set of \"this feature may panic\" wasm features. These are all disabled by default and if explicitly enabled a <code>Config::validate</code> error is returned.</li>\n<li>All <code>*.wast</code> tests are now run through both Cranelift and Winch. Tests are now asserted to either fail or pass depending on configuration and the whole test will fail if the result doesn't match the expectation.</li>\n<li>Many <code>gc</code> proposal tests which are now passing are flagged as passing now. Failing <code>winch</code> tests are now explicitly listed instead of using a litany of patterns.</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 463799475,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724184190
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>.</p>",
        "id": 463799479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724184190
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>.</p>",
        "id": 463799480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724184190
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158#pullrequestreview-2248996794\">PR review</a>.</p>",
        "id": 463800320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724184328
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158#discussion_r1723917083\">PR review comment</a>:</p>\n<blockquote>\n<p>cc @saulecabrera I added some bare-bones pieces for <code>Extern</code> in a few places in this PR to get winch as \"supporting\" reference-types. Flagging Winch as not supporting reference types ended up being particularly difficult because it ends up disabling nearly all tests one way or another. The goal here was to just not panic on the existence of <code>externref</code>, but if you prefer I can try to figure out how to detect this elsewhere and reject it while keeping these panics.</p>\n</blockquote>",
        "id": 463800322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724184328
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>.</p>",
        "id": 463807167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724186017
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>.</p>",
        "id": 463807799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724186257
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158#issuecomment-2299884580\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:wasm\", \"wasmtime:api\", \"wasmtime:config\", \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 463885156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724193880
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158#issuecomment-2299884868\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 463885182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724193897
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158#pullrequestreview-2250550790\">PR review</a>.</p>",
        "id": 464024522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724240110
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158#discussion_r1724899028\">PR review comment</a>:</p>\n<blockquote>\n<p>This looks good to me, thanks!</p>\n</blockquote>",
        "id": 464024523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724240110
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158#pullrequestreview-2252264828\">PR review</a>:</p>\n<blockquote>\n<p>Awesome!</p>\n</blockquote>",
        "id": 464190292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724281678
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9158\">PR #9158</a>.</p>",
        "id": 464406365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724339844
    }
]