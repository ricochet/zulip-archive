[
    {
        "content": "<p>serprex opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<p>Is printing the JITModule's context's func the clif result? If so that's included at the end of the stdout output. Can look into narrowing down test case with some guidance about clif-util &amp; how to get clif output (<code>cargo install clif-util</code> doesn't seem to be  a thing)</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>git clone <a href=\"https://github.com/serprex/Befunge\">https://github.com/serprex/Befunge</a></li>\n<li>cd to barfs directory</li>\n<li><code>cargo run [mandel.bf](https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf)</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Receive an error probably, or do whatever it is my code generator is doing (it's WIP, so still buggy itself)</p>\n<h3>Actual Results</h3>\n<p><code>thread 'main' panicked at 'assertion failed: num_args == self.f.dfg.inst_variable_args(inst).len()', .../cranelift-codegen-0.77.0/src/machinst/lower.rs:529:9</code></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.77</p>\n<p>Operating system: Archlinux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>barfs stdout on <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">mandel.bf</a>: <a href=\"https://pastebin.com/4fLDcktw\">https://pastebin.com/4fLDcktw</a></p>\n<p>Also unrelated but doc for <a href=\"https://docs.rs/cranelift/0.77.0/cranelift/prelude/trait.InstBuilder.html#method.icmp\">icmp</a> is missing info on output type, \"A boolean type with 1 bits.\"</p>\n</blockquote>",
        "id": 257874055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431118
    },
    {
        "content": "<p>serprex labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<p>Is printing the JITModule's context's func the clif result? If so that's included at the end of the stdout output. Can look into narrowing down test case with some guidance about clif-util &amp; how to get clif output (<code>cargo install clif-util</code> doesn't seem to be  a thing)</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>git clone <a href=\"https://github.com/serprex/Befunge\">https://github.com/serprex/Befunge</a></li>\n<li>cd to barfs directory</li>\n<li><code>cargo run [mandel.bf](https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf)</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Receive an error probably, or do whatever it is my code generator is doing (it's WIP, so still buggy itself)</p>\n<h3>Actual Results</h3>\n<p><code>thread 'main' panicked at 'assertion failed: num_args == self.f.dfg.inst_variable_args(inst).len()', .../cranelift-codegen-0.77.0/src/machinst/lower.rs:529:9</code></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.77</p>\n<p>Operating system: Archlinux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>barfs stdout on <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">mandel.bf</a>: <a href=\"https://pastebin.com/4fLDcktw\">https://pastebin.com/4fLDcktw</a></p>\n<p>Also unrelated but doc for <a href=\"https://docs.rs/cranelift/0.77.0/cranelift/prelude/trait.InstBuilder.html#method.icmp\">icmp</a> is missing info on output type, \"A boolean type with 1 bits.\"</p>\n</blockquote>",
        "id": 257874056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431118
    },
    {
        "content": "<p>serprex labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<p>Is printing the JITModule's context's func the clif result? If so that's included at the end of the stdout output. Can look into narrowing down test case with some guidance about clif-util &amp; how to get clif output (<code>cargo install clif-util</code> doesn't seem to be  a thing)</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>git clone <a href=\"https://github.com/serprex/Befunge\">https://github.com/serprex/Befunge</a></li>\n<li>cd to barfs directory</li>\n<li><code>cargo run [mandel.bf](https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf)</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Receive an error probably, or do whatever it is my code generator is doing (it's WIP, so still buggy itself)</p>\n<h3>Actual Results</h3>\n<p><code>thread 'main' panicked at 'assertion failed: num_args == self.f.dfg.inst_variable_args(inst).len()', .../cranelift-codegen-0.77.0/src/machinst/lower.rs:529:9</code></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.77</p>\n<p>Operating system: Archlinux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>barfs stdout on <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">mandel.bf</a>: <a href=\"https://pastebin.com/4fLDcktw\">https://pastebin.com/4fLDcktw</a></p>\n<p>Also unrelated but doc for <a href=\"https://docs.rs/cranelift/0.77.0/cranelift/prelude/trait.InstBuilder.html#method.icmp\">icmp</a> is missing info on output type, \"A boolean type with 1 bits.\"</p>\n</blockquote>",
        "id": 257874057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431118
    },
    {
        "content": "<p>serprex edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<p>Is printing the JITModule's context's func the clif result? If so that's included at the end of the stdout output. Can look into narrowing down test case with some guidance about clif-util &amp; how to get clif output (<code>cargo install clif-util</code> doesn't seem to be  a thing)</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>git clone <a href=\"https://github.com/serprex/Befunge\">https://github.com/serprex/Befunge</a></li>\n<li>cd to barfs directory</li>\n<li>download <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf</a></li>\n<li><code>cargo run </code>mandel.bf`</li>\n</ul>\n<h3>Expected Results</h3>\n<p>Receive an error probably, or do whatever it is my code generator is doing (it's WIP, so still buggy itself)</p>\n<h3>Actual Results</h3>\n<p><code>thread 'main' panicked at 'assertion failed: num_args == self.f.dfg.inst_variable_args(inst).len()', .../cranelift-codegen-0.77.0/src/machinst/lower.rs:529:9</code></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.77</p>\n<p>Operating system: Archlinux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>barfs stdout on <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">mandel.bf</a>: <a href=\"https://pastebin.com/4fLDcktw\">https://pastebin.com/4fLDcktw</a></p>\n<p>Also unrelated but doc for <a href=\"https://docs.rs/cranelift/0.77.0/cranelift/prelude/trait.InstBuilder.html#method.icmp\">icmp</a> is missing info on output type, \"A boolean type with 1 bits.\"</p>\n</blockquote>",
        "id": 257874082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431158
    },
    {
        "content": "<p>serprex edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<p>Is printing the JITModule's context's func the clif result? If so that's included at the end of the stdout output. Can look into narrowing down test case with some guidance about clif-util &amp; how to get clif output (<code>cargo install clif-util</code> doesn't seem to be  a thing)</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>git clone <a href=\"https://github.com/serprex/Befunge\">https://github.com/serprex/Befunge</a></li>\n<li>cd to barfs directory</li>\n<li>download <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf</a></li>\n<li><code>cargo run mandel.bf</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Receive an error probably, or do whatever it is my code generator is doing (it's WIP, so still buggy itself)</p>\n<h3>Actual Results</h3>\n<p><code>thread 'main' panicked at 'assertion failed: num_args == self.f.dfg.inst_variable_args(inst).len()', .../cranelift-codegen-0.77.0/src/machinst/lower.rs:529:9</code></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.77</p>\n<p>Operating system: Archlinux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>barfs stdout on <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">mandel.bf</a>: <a href=\"https://pastebin.com/4fLDcktw\">https://pastebin.com/4fLDcktw</a></p>\n<p>Also unrelated but doc for <a href=\"https://docs.rs/cranelift/0.77.0/cranelift/prelude/trait.InstBuilder.html#method.icmp\">icmp</a> is missing info on output type, \"A boolean type with 1 bits.\"</p>\n</blockquote>",
        "id": 257874094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431176
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945028676\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>That assert is testing that the number of args on a branch instruction matches the number of block parameters on the destination block. Can you verify that these match in your test case for all the branches?</p>\n<blockquote>\n<p><code>cargo install clif-util</code> doesn't seem to be a thing</p>\n</blockquote>\n<p>I'm not sure if we provide a <code>cargo</code> install<code>-able crate with </code>clif-util<code>, but you can get it by checkout out the repo then </code>cargo build --release -p cranelift-tools`. (Sorry this isn't more convenient!)</p>\n</blockquote>",
        "id": 257874633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431777
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945028676\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>That assert is testing that the number of args on a branch instruction matches the number of block parameters on the destination block. Can you verify that these match in your test case for all the branches?</p>\n<blockquote>\n<p><code>cargo install clif-util</code> doesn't seem to be a thing</p>\n</blockquote>\n<p>I'm not sure if we provide a <code>cargo install</code>-able crate with <code>clif-util</code>, but you can get it by checkout out the repo then <code>cargo build --release -p cranelift-tools</code>. (Sorry this isn't more convenient!)</p>\n</blockquote>",
        "id": 257874646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431797
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945028676\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>That assert is testing that the number of args on a branch instruction matches the number of block parameters on the destination block. Can you verify that these match in your test case for all the branches?</p>\n<blockquote>\n<p><code>cargo install clif-util</code> doesn't seem to be a thing</p>\n</blockquote>\n<p>I'm not sure if we provide a <code>cargo install</code>-able crate with <code>clif-util</code>, but you can get it by cloning the repo then <code>cargo build --release -p cranelift-tools</code>. (Sorry this isn't more convenient!)</p>\n</blockquote>",
        "id": 257874706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634431822
    },
    {
        "content": "<p>serprex <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945032956\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>The cargo build command fails with</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">member</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">bench</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">cap</span><span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">-</span><span class=\"n\">sync</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">common</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"kr\">macro</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"n\">generate</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">witx</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">No</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>cargo version</code> outputs <code>cargo 1.55.0 (32da73ab1 2021-08-23)</code> while <code>rustc -V</code> outputs <code>rustc 1.55.0 (c8dfcfe04 2021-09-06)</code></p>\n</blockquote>",
        "id": 257877069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634434362
    },
    {
        "content": "<p>serprex edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945032956\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>I don't think I'm mismatching parameter counts: the generator only creates parameter taking blocks at 2 points in the code (both cases taking 1 parameter)</p>\n<p>The cargo build command fails with</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">member</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">bench</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">cap</span><span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">-</span><span class=\"n\">sync</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">common</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"kr\">macro</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"n\">generate</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">witx</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">No</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>cargo version</code> outputs <code>cargo 1.55.0 (32da73ab1 2021-08-23)</code> while <code>rustc -V</code> outputs <code>rustc 1.55.0 (c8dfcfe04 2021-09-06)</code></p>\n</blockquote>",
        "id": 257877104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634434414
    },
    {
        "content": "<p>serprex edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945032956\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>I don't think I'm mismatching parameter counts: the compiler only creates parameter taking blocks at 2 points in the code (both cases taking 1 parameter)</p>\n<p>The cargo build command fails with</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">member</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">bench</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">cap</span><span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">-</span><span class=\"n\">sync</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">common</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"kr\">macro</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"n\">generate</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">witx</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">No</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>cargo version</code> outputs <code>cargo 1.55.0 (32da73ab1 2021-08-23)</code> while <code>rustc -V</code> outputs <code>rustc 1.55.0 (c8dfcfe04 2021-09-06)</code></p>\n</blockquote>",
        "id": 257877122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634434438
    },
    {
        "content": "<p>serprex edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945032956\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>I don't think I'm mismatching parameter counts: the compiler only creates parameter taking blocks at 2 points in the code (both cases taking 1 parameter)</p>\n<p>The cargo build command fails with</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"n\">member</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">bench</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">cap</span><span class=\"o\">-</span><span class=\"n\">std</span><span class=\"o\">-</span><span class=\"n\">sync</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">common</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"kr\">macro</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wiggle</span><span class=\"o\">-</span><span class=\"n\">generate</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"w\"> </span><span class=\"n\">manifest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">dependency</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">witx</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n  <span class=\"nc\">No</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>cargo version</code> outputs <code>cargo 1.55.0 (32da73ab1 2021-08-23)</code> while <code>rustc -V</code> outputs <code>rustc 1.55.0 (c8dfcfe04 2021-09-06)</code></p>\n<p>Also silly me didn't include <code>RUST_BACKTRACE=1</code> output</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">num_args</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">f</span><span class=\"p\">.</span><span class=\"n\">dfg</span><span class=\"p\">.</span><span class=\"n\">inst_variable_args</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">).</span><span class=\"n\">len</span><span class=\"p\">()</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">529</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n   <span class=\"mi\">0</span>: <span class=\"nc\">rust_begin_unwind</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"n\">c8dfcfe046a7680554bf4eb612bad840e7631c4b</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">std</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">515</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>: <span class=\"nc\">core</span>::<span class=\"n\">panicking</span>::<span class=\"n\">panic_fmt</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"n\">c8dfcfe046a7680554bf4eb612bad840e7631c4b</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">92</span>:<span class=\"mi\">14</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">2</span>: <span class=\"nc\">core</span>::<span class=\"n\">panicking</span>::<span class=\"n\">panic</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"n\">c8dfcfe046a7680554bf4eb612bad840e7631c4b</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">50</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">3</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">lower</span>::<span class=\"n\">Lower</span><span class=\"o\">&lt;</span><span class=\"n\">I</span><span class=\"o\">&gt;</span>::<span class=\"n\">lower_edge</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">529</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">lower</span>::<span class=\"n\">Lower</span><span class=\"o\">&lt;</span><span class=\"n\">I</span><span class=\"o\">&gt;</span>::<span class=\"n\">lower</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">974</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">5</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">compile</span>::<span class=\"n\">compile</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">compile</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">29</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">X64Backend</span>::<span class=\"n\">compile_vcode</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">54</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>: <span class=\"o\">&lt;</span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">X64Backend</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">MachBackend</span><span class=\"o\">&gt;</span>::<span class=\"n\">compile_function</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">x64</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">65</span>:<span class=\"mi\">21</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">8</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">context</span>::<span class=\"n\">Context</span>::<span class=\"n\">compile</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">context</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">196</span>:<span class=\"mi\">26</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">9</span>: <span class=\"o\">&lt;</span><span class=\"n\">cranelift_jit</span>::<span class=\"n\">backend</span>::<span class=\"n\">JITModule</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">cranelift_module</span>::<span class=\"n\">module</span>::<span class=\"n\">Module</span><span class=\"o\">&gt;</span>::<span class=\"n\">define_function</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">erpre</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.77.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">641</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>: <span class=\"nc\">barfs</span>::<span class=\"n\">jit</span>::<span class=\"n\">execute</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">jit</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">318</span>:<span class=\"mi\">2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>: <span class=\"nc\">barfs</span>::<span class=\"n\">main</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">43</span>:<span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">12</span>: <span class=\"nc\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span>::<span class=\"n\">call_once</span><span class=\"w\"></span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"n\">c8dfcfe046a7680554bf4eb612bad840e7631c4b</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ops</span><span class=\"o\">/</span><span class=\"n\">function</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">227</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 257878024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634435387
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945034819\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>That cargo build failure indicates the git submodules are missing -- try <code>git submodule update --init</code>? (This is possibly git's least intuitive feature ever; sorry and thanks for the patience!).</p>\n<blockquote>\n<p>I don't think I'm mismatching parameter counts: the compiler only creates parameter taking blocks at 2 points in the code (both cases taking 1 parameter)</p>\n</blockquote>\n<p>Interesting; nevertheless, the assert is checking exactly this condition; so either it's hiding somewhere in the input, or being introduced somewhere along the way. A minimized test case input would be very helpful (as a <code>.clif</code> that we can compile without needing your infrastructure), if you're able!</p>\n</blockquote>",
        "id": 257878243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634435616
    },
    {
        "content": "<p>serprex <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945038531\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Running clif-util bugpoint found nothing. Was able to compile to x86_64 assembly. Also checked out a1f4b46f64e7c8526dc37bbe220043dff050bf3e (0.77 release commit) &amp; it doesn't raise an error either</p>\n<p>I created a clif file by taking the ir output from the pastebin I linked, only clif-util complained about fallthrough not being understood, but it worked once I replaced <code>fallthrough</code> with <code>jump</code>. As an experiment I converted parameterized <code>ins().fallthrough</code> calls in my code to <code>ins().jump</code> but the panic remains</p>\n</blockquote>",
        "id": 257880807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634438290
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945119776\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>572fbc8c5 (the commit tagged as wasmtime v0.30.0, so cranelift version 0.77) does return an error for me. The main branch gives <code>signal SIGFPE: integer divide by zero</code> after replacing all <code>fallthrough</code> with <code>jump</code> as <code>fallthrough</code> is removed on the main branch.</p>\n<p><div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/barfs/src/jit.rs b/barfs/src/jit.rs</span>\n<span class=\"gh\">index a88cd46..d313de4 100644</span>\n<span class=\"gd\">--- a/barfs/src/jit.rs</span>\n<span class=\"gi\">+++ b/barfs/src/jit.rs</span>\n<span class=\"gu\">@@ -103,7 +103,7 @@ pub fn execute(</span>\n                        let stidx = builder.use_var(vsidx);\n                        let zerocc = builder.ins().iconst(ti64, 0);\n                        builder.ins().br_icmp(IntCC::SignedLessThan, stidx, zerocc, zbb, &amp;[]);\n<span class=\"gd\">-                       builder.ins().fallthrough(bbpop, &amp;[]);</span>\n<span class=\"gi\">+                       builder.ins().jump(bbpop, &amp;[]);</span>\n                        builder.switch_to_block(bbpop);\n                        let four = builder.ins().iconst(ti64, 4);\n                        let newstidx = builder.ins().isub(stidx, four);\n<span class=\"gu\">@@ -114,7 +114,7 @@ pub fn execute(</span>\n                        builder.ins().jump(bb, &amp;[loadres]);\n                        builder.switch_to_block(zbb);\n                        let zero = builder.ins().iconst(ti32, 0);\n<span class=\"gd\">-                       builder.ins().fallthrough(bb, &amp;[zero]);</span>\n<span class=\"gi\">+                       builder.ins().jump(bb, &amp;[zero]);</span>\n                        builder.switch_to_block(bb);\n                        builder.def_var(var, builder.block_params(bb)[0]);\n                };\n<span class=\"gu\">@@ -138,7 +138,7 @@ pub fn execute(</span>\n\n                                let newbb = builder.create_block();\n                                if !builder.is_filled() {\n<span class=\"gd\">-                                       builder.ins().fallthrough(newbb, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(newbb, &amp;[]);</span>\n                                }\n                                builder.switch_to_block(newbb);\n                                bbmap.insert(n, newbb);\n<span class=\"gu\">@@ -225,13 +225,13 @@ pub fn execute(</span>\n                                        builder.append_block_param(bb, ti32);\n                                        let zero = builder.ins().iconst(ti32, 0);\n                                        builder.ins().br_icmp(IntCC::UnsignedLessThan, ab, twofivesixzero, bb, &amp;[zero]);\n<span class=\"gd\">-                                       builder.ins().fallthrough(idxbb, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(idxbb, &amp;[]);</span>\n                                        builder.switch_to_block(idxbb);\n                                        let ab = builder.ins().uextend(ti64, ab);\n                                        let vcode = builder.ins().iconst(tptr, code.as_ptr() as i64);\n                                        let vcodeab = builder.ins().iadd(vcode, ab);\n                                        let result = builder.ins().load(ti32, aligned, vcodeab, 0);\n<span class=\"gd\">-                                       builder.ins().fallthrough(bb, &amp;[result]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(bb, &amp;[result]);</span>\n                                        builder.switch_to_block(bb);\n                                        let val = builder.block_params(bb)[0];\n                                        clpush(&amp;mut builder, val);\n<span class=\"gu\">@@ -248,7 +248,7 @@ pub fn execute(</span>\n                                        let b25 = builder.ins().icmp_imm(IntCC::UnsignedLessThan, b, 25);\n                                        let ab8025 = builder.ins().band(a80, b25);\n                                        builder.ins().brz(ab8025, bb, &amp;[]);\n<span class=\"gd\">-                                       builder.ins().fallthrough(bbwrite, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(bbwrite, &amp;[]);</span>\n                                        builder.switch_to_block(bbwrite);\n                                        let five = builder.ins().iconst(ti32, 5);\n                                        let a5 = builder.ins().ishl(a, five);\n<span class=\"gu\">@@ -258,7 +258,7 @@ pub fn execute(</span>\n                                        let vcodeab = builder.ins().iadd(vcode, ab);\n                                        let c = builder.use_var(tc);\n                                        builder.ins().store(aligned, c, vcodeab, 0);\n<span class=\"gd\">-                                       builder.ins().fallthrough(bb, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(bb, &amp;[]);</span>\n                                        builder.switch_to_block(bb);\n                                }\n                                Op::Jr(r0, r1, r2) =&gt; {\n<span class=\"gu\">@@ -272,7 +272,7 @@ pub fn execute(</span>\n                                        let j = builder.ins().brz(a, Block::from_u32(0), &amp;[]);\n                                        jumpmap.push((j, rz));\n                                        compstack.push(rz);\n<span class=\"gd\">-                                       let j = builder.ins().fallthrough(Block::from_u32(0), &amp;[]);</span>\n<span class=\"gi\">+                                       let j = builder.ins().jump(Block::from_u32(0), &amp;[]);</span>\n                                        jumpmap.push((j, op.n));\n                                }\n                                Op::Ret =&gt; {\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 257917966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634476364
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945119776\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>572fbc8c5 (the commit tagged as wasmtime v0.30.0, so cranelift version 0.77) does return an error for me. The main branch gives <code>signal SIGFPE: integer divide by zero</code> after replacing all <code>fallthrough</code> with <code>jump</code> as <code>fallthrough</code> is removed on the main branch.</p>\n<p>&lt;details&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/barfs/src/jit.rs b/barfs/src/jit.rs</span>\n<span class=\"gh\">index a88cd46..d313de4 100644</span>\n<span class=\"gd\">--- a/barfs/src/jit.rs</span>\n<span class=\"gi\">+++ b/barfs/src/jit.rs</span>\n<span class=\"gu\">@@ -103,7 +103,7 @@ pub fn execute(</span>\n                        let stidx = builder.use_var(vsidx);\n                        let zerocc = builder.ins().iconst(ti64, 0);\n                        builder.ins().br_icmp(IntCC::SignedLessThan, stidx, zerocc, zbb, &amp;[]);\n<span class=\"gd\">-                       builder.ins().fallthrough(bbpop, &amp;[]);</span>\n<span class=\"gi\">+                       builder.ins().jump(bbpop, &amp;[]);</span>\n                        builder.switch_to_block(bbpop);\n                        let four = builder.ins().iconst(ti64, 4);\n                        let newstidx = builder.ins().isub(stidx, four);\n<span class=\"gu\">@@ -114,7 +114,7 @@ pub fn execute(</span>\n                        builder.ins().jump(bb, &amp;[loadres]);\n                        builder.switch_to_block(zbb);\n                        let zero = builder.ins().iconst(ti32, 0);\n<span class=\"gd\">-                       builder.ins().fallthrough(bb, &amp;[zero]);</span>\n<span class=\"gi\">+                       builder.ins().jump(bb, &amp;[zero]);</span>\n                        builder.switch_to_block(bb);\n                        builder.def_var(var, builder.block_params(bb)[0]);\n                };\n<span class=\"gu\">@@ -138,7 +138,7 @@ pub fn execute(</span>\n\n                                let newbb = builder.create_block();\n                                if !builder.is_filled() {\n<span class=\"gd\">-                                       builder.ins().fallthrough(newbb, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(newbb, &amp;[]);</span>\n                                }\n                                builder.switch_to_block(newbb);\n                                bbmap.insert(n, newbb);\n<span class=\"gu\">@@ -225,13 +225,13 @@ pub fn execute(</span>\n                                        builder.append_block_param(bb, ti32);\n                                        let zero = builder.ins().iconst(ti32, 0);\n                                        builder.ins().br_icmp(IntCC::UnsignedLessThan, ab, twofivesixzero, bb, &amp;[zero]);\n<span class=\"gd\">-                                       builder.ins().fallthrough(idxbb, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(idxbb, &amp;[]);</span>\n                                        builder.switch_to_block(idxbb);\n                                        let ab = builder.ins().uextend(ti64, ab);\n                                        let vcode = builder.ins().iconst(tptr, code.as_ptr() as i64);\n                                        let vcodeab = builder.ins().iadd(vcode, ab);\n                                        let result = builder.ins().load(ti32, aligned, vcodeab, 0);\n<span class=\"gd\">-                                       builder.ins().fallthrough(bb, &amp;[result]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(bb, &amp;[result]);</span>\n                                        builder.switch_to_block(bb);\n                                        let val = builder.block_params(bb)[0];\n                                        clpush(&amp;mut builder, val);\n<span class=\"gu\">@@ -248,7 +248,7 @@ pub fn execute(</span>\n                                        let b25 = builder.ins().icmp_imm(IntCC::UnsignedLessThan, b, 25);\n                                        let ab8025 = builder.ins().band(a80, b25);\n                                        builder.ins().brz(ab8025, bb, &amp;[]);\n<span class=\"gd\">-                                       builder.ins().fallthrough(bbwrite, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(bbwrite, &amp;[]);</span>\n                                        builder.switch_to_block(bbwrite);\n                                        let five = builder.ins().iconst(ti32, 5);\n                                        let a5 = builder.ins().ishl(a, five);\n<span class=\"gu\">@@ -258,7 +258,7 @@ pub fn execute(</span>\n                                        let vcodeab = builder.ins().iadd(vcode, ab);\n                                        let c = builder.use_var(tc);\n                                        builder.ins().store(aligned, c, vcodeab, 0);\n<span class=\"gd\">-                                       builder.ins().fallthrough(bb, &amp;[]);</span>\n<span class=\"gi\">+                                       builder.ins().jump(bb, &amp;[]);</span>\n                                        builder.switch_to_block(bb);\n                                }\n                                Op::Jr(r0, r1, r2) =&gt; {\n<span class=\"gu\">@@ -272,7 +272,7 @@ pub fn execute(</span>\n                                        let j = builder.ins().brz(a, Block::from_u32(0), &amp;[]);\n                                        jumpmap.push((j, rz));\n                                        compstack.push(rz);\n<span class=\"gd\">-                                       let j = builder.ins().fallthrough(Block::from_u32(0), &amp;[]);</span>\n<span class=\"gi\">+                                       let j = builder.ins().jump(Block::from_u32(0), &amp;[]);</span>\n                                        jumpmap.push((j, op.n));\n                                }\n                                Op::Ret =&gt; {\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 257918004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634476393
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945121136\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Replacing all <code>fallthrough</code> with <code>jump</code> also fixes the issue for cranelift 0.77. The issue is that a <code>fallthrough</code> instruction actually specifies a destination that doesn't come directly after the <code>fallthrough</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">block1035</span><span class=\"p\">(</span><span class=\"n\">v4902</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4950</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v4911</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v4950</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">brz</span><span class=\"w\"> </span><span class=\"n\">v4902</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1036</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fallthrough</span><span class=\"w\"> </span><span class=\"n\">block266</span><span class=\"p\">(</span><span class=\"n\">v4950</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"n\">block1036</span>:\n    <span class=\"nc\">v4910</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">35</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4912</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4913</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v4911</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4912</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4914</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mh\">0x7fff_ffff_9698</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4915</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v4914</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4913</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v4910</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4915</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4917</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">br_icmp</span><span class=\"w\"> </span><span class=\"n\">slt</span><span class=\"w\"> </span><span class=\"n\">v4913</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4917</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1038</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fallthrough</span><span class=\"w\"> </span><span class=\"n\">block1037</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>block266</code> doesn't follow <code>block1035</code>.</p>\n</blockquote>",
        "id": 257918298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634476648
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945121136\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Replacing all <code>fallthrough</code> with <code>jump</code> also fixes the issue for cranelift 0.77. The issue is that a <code>fallthrough</code> instruction actually specifies a destination that doesn't come directly after the <code>fallthrough</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">block1035</span><span class=\"p\">(</span><span class=\"n\">v4902</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4950</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v4911</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v4950</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">brz</span><span class=\"w\"> </span><span class=\"n\">v4902</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1036</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fallthrough</span><span class=\"w\"> </span><span class=\"n\">block266</span><span class=\"p\">(</span><span class=\"n\">v4950</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"n\">block1036</span>:\n    <span class=\"nc\">v4910</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">35</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4912</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4913</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v4911</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4912</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4914</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mh\">0x7fff_ffff_9698</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4915</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v4914</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4913</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v4910</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4915</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4917</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">br_icmp</span><span class=\"w\"> </span><span class=\"n\">slt</span><span class=\"w\"> </span><span class=\"n\">v4913</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4917</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1038</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">fallthrough</span><span class=\"w\"> </span><span class=\"n\">block1037</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>block266</code> doesn't follow <code>block1035</code>. If it weren't for the fact that <code>falthrough</code> has been removed anyway it would be nice to have a verifier error for this.</p>\n</blockquote>",
        "id": 257918339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634476683
    },
    {
        "content": "<p>serprex closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<p>Is printing the JITModule's context's func the clif result? If so that's included at the end of the stdout output. Can look into narrowing down test case with some guidance about clif-util &amp; how to get clif output (<code>cargo install clif-util</code> doesn't seem to be  a thing)</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>git clone <a href=\"https://github.com/serprex/Befunge\">https://github.com/serprex/Befunge</a></li>\n<li>cd to barfs directory</li>\n<li>download <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf</a></li>\n<li><code>cargo run mandel.bf</code></li>\n</ul>\n<h3>Expected Results</h3>\n<p>Receive an error probably, or do whatever it is my code generator is doing (it's WIP, so still buggy itself)</p>\n<h3>Actual Results</h3>\n<p><code>thread 'main' panicked at 'assertion failed: num_args == self.f.dfg.inst_variable_args(inst).len()', .../cranelift-codegen-0.77.0/src/machinst/lower.rs:529:9</code></p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: 0.77</p>\n<p>Operating system: Archlinux</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?</p>\n<p>barfs stdout on <a href=\"https://github.com/catseye/Befunge-93/blob/master/eg/mandel.bf\">mandel.bf</a>: <a href=\"https://pastebin.com/4fLDcktw\">https://pastebin.com/4fLDcktw</a></p>\n<p>Also unrelated but doc for <a href=\"https://docs.rs/cranelift/0.77.0/cranelift/prelude/trait.InstBuilder.html#method.icmp\">icmp</a> is missing info on output type, \"A boolean type with 1 bits.\"</p>\n</blockquote>",
        "id": 257922530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634480522
    },
    {
        "content": "<p>serprex <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945134031\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>The floating point error is likely a division by zero in my buggy generated code. Looks like this is effectively fixed in master</p>\n<p>Thanks</p>\n</blockquote>",
        "id": 257922531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634480522
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457#issuecomment-945185315\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3457\">issue #3457</a>:</p>\n<blockquote>\n<p>Ah, thank you for finding the issue, @bjorn3! In hindsight I also should have suggested enabling the CLIF verifier -- this should have also found the issue with the erroneous <code>fallthrough</code>. Possibly a useful tip for any future issues with your generated CLIF :-)</p>\n</blockquote>",
        "id": 257944010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634500625
    }
]