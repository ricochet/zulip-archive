[
    {
        "content": "<p>sunfishcode opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191311589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584743990
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191311706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584744065
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191498024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584980482
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191498481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584980650
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191499328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584980990
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191500508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584981393
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191505377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584983345
    },
    {
        "content": "<p>kubkon updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a> from <code>pass-handle-by-ref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This is a draft PR partially illustrating the idea mentioned in #1202 for passing <code>Fd</code> handles by reference.</p>\n<p>This provides I/O safety within the WASI implementation code, though it depends on being careful around calling the <code>Fd::from_raw</code> function. It also simplifies the <code>FdPool</code>, by taking advantage of the new <code>EntryTable</code>.</p>\n<p>This doesn't build at the moment, because it doesn't change the wiggle code, but it shows how the rest of the code would look.</p>\n<ul>\n<li><code>Fd</code> is passed by reference when it's an argument in host code.</li>\n<li><code>Fd</code> no longer needs to implement <code>Copy</code> or <code>Clone</code>.</li>\n<li>File descriptors within structs -- <code>types::SubscriptionU::FdRead</code> and <code>types::SubscriptionU::FdWrite</code> still need to be stored as <code>u32</code>; it can be converted to an <code>Fd</code> by calling the <code>unsafe</code> <code>from_raw</code></li>\n</ul>\n<p>In Wiggle, would it be better to special-case Handle to implement pass-by-reference behavior, or add a new <code>TypePassedBy</code> kind in <code>witx</code>?</p>\n</blockquote>",
        "id": 191511328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584985908
    },
    {
        "content": "<p>sunfishcode closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1375\">PR #1375</a>.</p>",
        "id": 197490078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589412368
    }
]