[
    {
        "content": "<p>Stebalien labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4350\">issue #4350</a>:</p>\n<blockquote>\n<ul>\n<li>In wasmtime 0.38.1, disabling stack tracing results in a <code>setting \"unwind_info\" is configured to Bool(false) which is not supported</code> due to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9e2adfb34531610d691f74dd3f559bc5b800eb02/crates/wasmtime/src/engine.rs#L325\">https://github.com/bytecodealliance/wasmtime/blob/9e2adfb34531610d691f74dd3f559bc5b800eb02/crates/wasmtime/src/engine.rs#L325</a>.</li>\n<li>On master, backtraces can be disabled, but cranelift's \"unwind_info\" isn't set to false (it just isn't set). This is making one of our tests 1000x slower (0.12 seconds to 120 seconds).</li>\n</ul>\n<p>I can fix this with:</p>\n<div class=\"codehilite\" data-code-language=\"patch\"><pre><span></span><code>diff --git a/crates/wasmtime/src/config.rs b/crates/wasmtime/src/config.rs\nindex b41ae9396..256009a0a 100644\n--- a/crates/wasmtime/src/config.rs\n+++ b/crates/wasmtime/src/config.rs\n@@ -1423,6 +1423,10 @@ impl Config {\n             {\n                 bail!(\"compiler option 'unwind_info' must be enabled when either 'backtraces' or 'reference types' are enabled\");\n             }\n+        } else {\n+            unsafe {\n+                self.cranelift_flag_set(\"unwind_info\", \"false\");\n+            }\n         }\n         if self.features.reference_types {\n             if !self\ndiff --git a/crates/wasmtime/src/engine.rs b/crates/wasmtime/src/engine.rs\nindex 9dd637e71..83514d72c 100644\n--- a/crates/wasmtime/src/engine.rs\n+++ b/crates/wasmtime/src/engine.rs\n@@ -345,7 +345,7 @@ impl Engine {\n             // can affect the way the generated code performs or behaves at\n             // runtime.\n             \"avoid_div_traps\" =&gt; *value == FlagValue::Bool(true),\n-            \"unwind_info\" =&gt; *value == FlagValue::Bool(true),\n+            \"unwind_info\" =&gt; true,\n             \"libcall_call_conv\" =&gt; *value == FlagValue::Enum(\"isa_default\".into()),\n\n             // Features wasmtime doesn't use should all be disabled, since\n</code></pre></div>\n<p>But I'm wondering if:</p>\n<ol>\n<li>The other settings (reference types, simd) need to be explicitly set as well.</li>\n<li>There's a bad default somewhere. Should <code>unwind_info</code> be disabled by default in cranelift?</li>\n</ol>\n</blockquote>",
        "id": 287786942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656456761
    },
    {
        "content": "<p>Stebalien opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4350\">issue #4350</a>:</p>\n<blockquote>\n<ul>\n<li>In wasmtime 0.38.1, disabling stack tracing results in a <code>setting \"unwind_info\" is configured to Bool(false) which is not supported</code> due to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9e2adfb34531610d691f74dd3f559bc5b800eb02/crates/wasmtime/src/engine.rs#L325\">https://github.com/bytecodealliance/wasmtime/blob/9e2adfb34531610d691f74dd3f559bc5b800eb02/crates/wasmtime/src/engine.rs#L325</a>.</li>\n<li>On master, backtraces can be disabled, but cranelift's \"unwind_info\" isn't set to false (it just isn't set). This is making one of our tests 1000x slower (0.12 seconds to 120 seconds).</li>\n</ul>\n<p>I can fix this with:</p>\n<div class=\"codehilite\" data-code-language=\"patch\"><pre><span></span><code>diff --git a/crates/wasmtime/src/config.rs b/crates/wasmtime/src/config.rs\nindex b41ae9396..256009a0a 100644\n--- a/crates/wasmtime/src/config.rs\n+++ b/crates/wasmtime/src/config.rs\n@@ -1423,6 +1423,10 @@ impl Config {\n             {\n                 bail!(\"compiler option 'unwind_info' must be enabled when either 'backtraces' or 'reference types' are enabled\");\n             }\n+        } else {\n+            unsafe {\n+                self.cranelift_flag_set(\"unwind_info\", \"false\");\n+            }\n         }\n         if self.features.reference_types {\n             if !self\ndiff --git a/crates/wasmtime/src/engine.rs b/crates/wasmtime/src/engine.rs\nindex 9dd637e71..83514d72c 100644\n--- a/crates/wasmtime/src/engine.rs\n+++ b/crates/wasmtime/src/engine.rs\n@@ -345,7 +345,7 @@ impl Engine {\n             // can affect the way the generated code performs or behaves at\n             // runtime.\n             \"avoid_div_traps\" =&gt; *value == FlagValue::Bool(true),\n-            \"unwind_info\" =&gt; *value == FlagValue::Bool(true),\n+            \"unwind_info\" =&gt; true,\n             \"libcall_call_conv\" =&gt; *value == FlagValue::Enum(\"isa_default\".into()),\n\n             // Features wasmtime doesn't use should all be disabled, since\n</code></pre></div>\n<p>But I'm wondering if:</p>\n<ol>\n<li>The other settings (reference types, simd) need to be explicitly set as well.</li>\n<li>There's a bad default somewhere. Should <code>unwind_info</code> be disabled by default in cranelift?</li>\n</ol>\n</blockquote>",
        "id": 287786944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656456762
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4350#issuecomment-1169393151\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4350\">issue #4350</a>:</p>\n<blockquote>\n<p>Thanks for the bug report, please send a PR and we'll merge the fix. The diff in <a href=\"http://engine.rs\">engine.rs</a> should be moving the <code>\"unwind_info\"</code> case down to the section starting at line 375.</p>\n</blockquote>",
        "id": 287791517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656460071
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4350\">issue #4350</a>:</p>\n<blockquote>\n<ul>\n<li>In wasmtime 0.38.1, disabling stack tracing results in a <code>setting \"unwind_info\" is configured to Bool(false) which is not supported</code> due to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9e2adfb34531610d691f74dd3f559bc5b800eb02/crates/wasmtime/src/engine.rs#L325\">https://github.com/bytecodealliance/wasmtime/blob/9e2adfb34531610d691f74dd3f559bc5b800eb02/crates/wasmtime/src/engine.rs#L325</a>.</li>\n<li>On master, backtraces can be disabled, but cranelift's \"unwind_info\" isn't set to false (it just isn't set). This is making one of our tests 1000x slower (0.12 seconds to 120 seconds).</li>\n</ul>\n<p>I can fix this with:</p>\n<div class=\"codehilite\" data-code-language=\"patch\"><pre><span></span><code>diff --git a/crates/wasmtime/src/config.rs b/crates/wasmtime/src/config.rs\nindex b41ae9396..256009a0a 100644\n--- a/crates/wasmtime/src/config.rs\n+++ b/crates/wasmtime/src/config.rs\n@@ -1423,6 +1423,10 @@ impl Config {\n             {\n                 bail!(\"compiler option 'unwind_info' must be enabled when either 'backtraces' or 'reference types' are enabled\");\n             }\n+        } else {\n+            unsafe {\n+                self.cranelift_flag_set(\"unwind_info\", \"false\");\n+            }\n         }\n         if self.features.reference_types {\n             if !self\ndiff --git a/crates/wasmtime/src/engine.rs b/crates/wasmtime/src/engine.rs\nindex 9dd637e71..83514d72c 100644\n--- a/crates/wasmtime/src/engine.rs\n+++ b/crates/wasmtime/src/engine.rs\n@@ -345,7 +345,7 @@ impl Engine {\n             // can affect the way the generated code performs or behaves at\n             // runtime.\n             \"avoid_div_traps\" =&gt; *value == FlagValue::Bool(true),\n-            \"unwind_info\" =&gt; *value == FlagValue::Bool(true),\n+            \"unwind_info\" =&gt; true,\n             \"libcall_call_conv\" =&gt; *value == FlagValue::Enum(\"isa_default\".into()),\n\n             // Features wasmtime doesn't use should all be disabled, since\n</code></pre></div>\n<p>But I'm wondering if:</p>\n<ol>\n<li>The other settings (reference types, simd) need to be explicitly set as well.</li>\n<li>There's a bad default somewhere. Should <code>unwind_info</code> be disabled by default in cranelift?</li>\n</ol>\n</blockquote>",
        "id": 288043339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656602025
    }
]