[
    {
        "content": "<p>jlb6740 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302\">PR #2302</a> from <code>packed-convert-unsigned-int2</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 213747910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603089752
    },
    {
        "content": "<p><strong>jlb6740</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a>, <a href=\"https://github.com/abrown\">abrown</a>, <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302\">PR #2302</a>.</p>",
        "id": 214089577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603302969
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#pullrequestreview-518314872\">PR Review</a>.</p>",
        "id": 214795825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603860135
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#pullrequestreview-518314872\">PR Review</a>.</p>",
        "id": 214795826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603860135
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#discussion_r513172760\">PR Review Comment</a>:</p>\n<blockquote>\n<p>s/converted/converting/</p>\n</blockquote>",
        "id": 214795827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603860135
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#discussion_r513176908\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is quite clever! A few questions:</p>\n<ul>\n<li>\n<p>This all assumes 32x4, right? Do we also need to support 64x2 (converting into doubles rather than floats)? If not, can we add an assert (not just a debug assert; we should check in release too)?</p>\n</li>\n<li>\n<p>I was quite confused at first as I had thought (from this comment) that this was somehow using a 16-bit conversion rather than a 32-bit conversion with either the upper or lower 16 bits zeroed. I think it would be helpful to add some pseudocode or even ASCII art or something to illustrate what's going on -- for each lane, we basically have:</p>\n</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">upper</span><span class=\"w\"> </span>:<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"mh\">0xffff0000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"n\">lower</span><span class=\"w\"> </span>:<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"mh\">0x0000ffff</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"n\">dst</span><span class=\"w\"> </span>:<span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">upper</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">float</span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n\n<p>which makes it a little easier to see the equivalence.</p>\n</blockquote>",
        "id": 214795828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603860135
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#pullrequestreview-520163561\">PR Review</a>.</p>",
        "id": 215042702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604015141
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#discussion_r514629804\">PR Review Comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>This all assumes 32x4, right? Do we also need to support 64x2 (converting into doubles rather than floats)? If not, can we add an assert (not just a debug assert; we should check in release too)?</p>\n</blockquote>\n<p>Yes, unsigned into float is only 32x4 for WASM. I can add a guard. Also I can add some additional comment/illustration to explain the algorithm better.  <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 215042703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604015142
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#pullrequestreview-520164238\">PR Review</a>.</p>",
        "id": 215042820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604015269
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#discussion_r514630431\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@cfallin Also, this patch submitted as part of different patch set (branch) without realizing the impact. So patch merged yesterday so I'll address the comments in a separate patch from this one. </p>\n</blockquote>",
        "id": 215042822,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604015269
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#pullrequestreview-520205160\">PR Review</a>.</p>",
        "id": 215044791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604017292
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302#discussion_r514639736\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, OK, no worries and thanks!</p>\n</blockquote>",
        "id": 215044792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604017292
    },
    {
        "content": "<p>jlb6740 closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2302\">PR #2302</a>.</p>",
        "id": 215137866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604084830
    }
]