[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148\">PR #2148</a> from <code>aarch64_fix_put_input_in_rsa</code> to <code>main</code>:</p>\n<blockquote>\n<p>Fixes #2147</p>\n</blockquote>",
        "id": 207434804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597856849
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148\">PR #2148</a> from <code>aarch64_fix_put_input_in_rsa</code> to <code>main</code>:</p>\n<blockquote>\n<p>Fixes #2147</p>\n</blockquote>",
        "id": 207438514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597858737
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#pullrequestreview-470719556\">PR Review</a>.</p>",
        "id": 207442814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597860999
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#pullrequestreview-470719556\">PR Review</a>.</p>",
        "id": 207442815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597860999
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#discussion_r473228235\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, this isn't quite right: we should be able to rely directly on the <code>sxtb</code> extend-mode below; the separate instruction is redundant.</p>\n</blockquote>",
        "id": 207442817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597860999
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#discussion_r473230769\">PR Review Comment</a>:</p>\n<blockquote>\n<p>So I think the fix is much simpler, actually:</p>\n<p>The issue here is that we catch the \"output smaller than 32 bits\" case before we catch the \"op is a uextend/sextend\" case, so we end up redundantly generating an extend instruction and then using the extend mode as well.</p>\n<p>The solution to the smaller-than-32-bits case is to realize that we actually can \"over-extend\" to a 32- or 64-bit result and this is still correct. E.g., a caller asking for an <code>i8</code> arg to be zero-extended will be satisfied by a value that is extended to 32 or 64 bits.</p>\n<p>So I think we can simply remove this whole if-statement (pre-diff lines 354 to 383), and the <code>out_bits</code> assert below on line 387, and things <em>should</em> work. This should get rid of the redundant extend instructions you had to add to tests below.</p>\n</blockquote>",
        "id": 207442818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597860999
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#pullrequestreview-470765227\">PR Review</a>.</p>",
        "id": 207450172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597864743
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#discussion_r473263691\">PR Review Comment</a>:</p>\n<blockquote>\n<p>When you have a non-uextend/sextend instruction outputing a small integer and <code>narrow_mode</code> is not <code>None</code>, you still need to perform the extension I think. By removing the smaller-than-32-bits case, that would always result in a <code>ResultRSE::Reg</code> instead of a <code>ResultRSE::RegExtend</code>.</p>\n</blockquote>",
        "id": 207450173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597864743
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#pullrequestreview-471053547\">PR Review</a>.</p>",
        "id": 207478073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597883991
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#discussion_r473479503\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh, that's true, my suggestion would be suboptimal in that case -- the <code>narrow_mode</code> would make it all the way to <code>put_input_in_reg()</code> and would force an explicit <code>Inst::Extend</code>.</p>\n<p>So perhaps the best heuristic is to swap the extend-from-narrower-than-32-bits case (this if-block) and the explicit uextend/sextend match (line 386), so that we always eat the extend instruction (this handles the original case you raised in #2147); then make another attempt to use an extend-op to handle the <code>NarrowValueMode</code> itself; then fall back to reg/shift cases. Thoughts?</p>\n</blockquote>",
        "id": 207478074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597883991
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148\">PR #2148</a> from <code>aarch64_fix_put_input_in_rsa</code> to <code>main</code>:</p>\n<blockquote>\n<p>Fixes #2147</p>\n</blockquote>",
        "id": 207498897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597911459
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#discussion_r473750290\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I dropped these, as there is no <code>i1</code> type and extension of <code>b1</code> should use <code>bextend</code> and not <code>uextend</code> or <code>sextend</code>.</p>\n</blockquote>",
        "id": 207499005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597911530
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#pullrequestreview-471367860\">PR Review</a>.</p>",
        "id": 207499008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597911532
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#pullrequestreview-471368773\">PR Review</a>.</p>",
        "id": 207499110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597911607
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#discussion_r473751365\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done. Also checked that both the <code>uextend</code>/<code>sextend</code> and the <code>narrow_mode</code> have an equal sign. The diff on the other tests is gone.</p>\n</blockquote>",
        "id": 207499111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597911607
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148#pullrequestreview-471885629\">PR Review</a>.</p>",
        "id": 207558611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597948878
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2148\">PR #2148</a>.</p>",
        "id": 207558633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597948897
    }
]