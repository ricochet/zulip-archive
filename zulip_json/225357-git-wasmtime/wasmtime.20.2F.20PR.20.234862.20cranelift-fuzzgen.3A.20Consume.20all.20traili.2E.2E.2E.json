[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862\">PR #4862</a>.</p>",
        "id": 296930967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662169730
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862\">PR #4862</a> from <code>test-inputs-length</code> to <code>main</code>:</p>\n<blockquote>\n<p>But don't keep going once we've consumed it all.</p>\n<p>I got tired of having a bunch of copies of the same all-zeros test inputs at the end. This version always produces exactly one all-zeros test input at the end, which I feel okay about. I could remove that by explicitly checking for <code>self.u.is_empty()</code> but, eh, testing an all-zeros input could be useful.</p>\n<p>This uses less of the fuzz input too since it doesn't need to come up with a count of how many test inputs to generate.</p>\n<p>This changes the input format for this fuzz target, so I figure I'll bundle it together with #4824 and merge both sometime next week.</p>\n<p>cc: @afonso360 </p>\n</blockquote>",
        "id": 296930968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662169731
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#pullrequestreview-1096062351\">PR review</a>.</p>",
        "id": 297184767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662366363
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#pullrequestreview-1098045371\">PR review</a>.</p>",
        "id": 297460002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662487830
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#pullrequestreview-1098045371\">PR review</a>.</p>",
        "id": 297460003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662487830
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#discussion_r964025109\">PR review comment</a>:</p>\n<blockquote>\n<p>Might be simpler as</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">inputs</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"fm\">todo!</span><span class=\"p\">(</span><span class=\"s\">\"generate one input\"</span><span class=\"p\">));</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">u</span><span class=\"p\">.</span><span class=\"n\">is_empty</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">break</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>which avoids the semi-subtle use of <code>usize::MAX</code> here.</p>\n</blockquote>",
        "id": 297460004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662487830
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#discussion_r964077786\">PR review comment</a>:</p>\n<blockquote>\n<p>That's how I wrote it first, actually! I could go back to <code>loop</code> plus a conditional <code>break</code> at the end if you want. But just testing <code>u.is_empty</code> doesn't work if generating an input doesn't consume any of <code>u</code>: it loops forever then. The usual way that would happen is if the generated function doesn't take any parameters, but I haven't ruled out the possibility that a parameter could only have one legal value and therefore consume no input. So instead I check that the loop makes some progress on every iteration, and stop after the first iteration where it doesn't make progress.</p>\n<p>I agree that using <code>usize::MAX</code> here is subtle. We'd get nearly the same result from initializing <code>last_len</code> to <code>self.u.len() + 1</code>, if that would make you feel better?</p>\n</blockquote>",
        "id": 297469437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662491282
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#pullrequestreview-1098118774\">PR review</a>.</p>",
        "id": 297469439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662491282
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#pullrequestreview-1098351497\">PR review</a>.</p>",
        "id": 297502006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662506413
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#discussion_r964250512\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess we could also have a maximum length on <code>inputs</code> as well.</p>\n<p>Otherwise I guess I would prefer making <code>last_len</code> an option and doing something like</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">last_len</span><span class=\"p\">.</span><span class=\"n\">map_or</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">last_len</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">u</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">last_len</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 297502007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662506413
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#pullrequestreview-1098364711\">PR review</a>.</p>",
        "id": 297504055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662507876
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862#discussion_r964260659\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm definitely not a fan of that alternative <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> but I can still move the test to the end of the loop, if that works for you.</p>\n</blockquote>",
        "id": 297504056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662507876
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862\">PR #4862</a> from <code>test-inputs-length</code> to <code>main</code>.</p>",
        "id": 297511555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662514646
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4862\">PR #4862</a>.</p>",
        "id": 297617532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662565601
    }
]