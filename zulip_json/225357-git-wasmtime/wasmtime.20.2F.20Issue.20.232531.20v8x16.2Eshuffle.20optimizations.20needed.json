[
    {
        "content": "<p>yurydelendik opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p>I translated the IDCT <a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/blob/master/simd/x86_64/jidctint-sse2.asm\">SSE code</a> into Wasm. The algorithm uses lots of varies <code>punpckxxxx</code> instructions, though WebAssembly has v8x16.shuffle. The <a href=\"https://github.com/v8/v8/blob/dc712da548c7fb433caed56af9a021d964952728/src/compiler/backend/x64/instruction-selector-x64.cc#L3297\">v8 lowers</a> into native SSE2 equivalents by matching immediate argument. I cannot find if we do it for any of the cranelift backends.</p>\n<p>STR:</p>\n<ol>\n<li>Use test case at <a href=\"https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm\">https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm</a></li>\n<li>Run <code>time wasmtime run --enable-simd test.wasm --invoke test500</code></li>\n</ol>\n<p>Observe the time; it is about 15 sec here. Node runs test.wasm (<code>_initialize</code> + <code>test500</code>) in about 11 sec here.</p>\n<p>It is expected that wasmtime/cranelift will improve the performance by using specialized SSE2 instructions by 40-50%.<br>\n</p>\n</blockquote>",
        "id": 220872830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608820091
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p>I translated the IDCT <a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/blob/master/simd/x86_64/jidctint-sse2.asm\">SSE code</a> into Wasm. The algorithm uses lots of various <code>punpckxxxx</code> instructions, though WebAssembly has v8x16.shuffle. The <a href=\"https://github.com/v8/v8/blob/dc712da548c7fb433caed56af9a021d964952728/src/compiler/backend/x64/instruction-selector-x64.cc#L3297\">v8 lowers</a> into native SSE2 equivalents by matching immediate argument. I cannot find if we do it for any of the cranelift backends.</p>\n<p>STR:</p>\n<ol>\n<li>Use test case at <a href=\"https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm\">https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm</a></li>\n<li>Run <code>time wasmtime run --enable-simd test.wasm --invoke test500</code></li>\n</ol>\n<p>Observe the time; it is about 15 sec here. Node runs test.wasm (<code>_initialize</code> + <code>test500</code>) in about 11 sec here.</p>\n<p>It is expected that wasmtime/cranelift will improve the performance by using specialized SSE2 instructions by 40-50%.<br>\n</p>\n</blockquote>",
        "id": 221063023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609164705
    },
    {
        "content": "<p>yurydelendik labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p>I translated the IDCT <a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/blob/master/simd/x86_64/jidctint-sse2.asm\">SSE code</a> into Wasm. The algorithm uses lots of various <code>punpckxxxx</code> instructions, though WebAssembly has v8x16.shuffle. The <a href=\"https://github.com/v8/v8/blob/dc712da548c7fb433caed56af9a021d964952728/src/compiler/backend/x64/instruction-selector-x64.cc#L3297\">v8 lowers</a> into native SSE2 equivalents by matching immediate argument. I cannot find if we do it for any of the cranelift backends.</p>\n<p>STR:</p>\n<ol>\n<li>Use test case at <a href=\"https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm\">https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm</a></li>\n<li>Run <code>time wasmtime run --enable-simd test.wasm --invoke test500</code></li>\n</ol>\n<p>Observe the time; it is about 15 sec here. Node runs test.wasm (<code>_initialize</code> + <code>test500</code>) in about 11 sec here.</p>\n<p>It is expected that wasmtime/cranelift will improve the performance by using specialized SSE2 instructions by 40-50%.<br>\n</p>\n</blockquote>",
        "id": 221063146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609164817
    },
    {
        "content": "<p>yurydelendik labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p>I translated the IDCT <a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/blob/master/simd/x86_64/jidctint-sse2.asm\">SSE code</a> into Wasm. The algorithm uses lots of various <code>punpckxxxx</code> instructions, though WebAssembly has v8x16.shuffle. The <a href=\"https://github.com/v8/v8/blob/dc712da548c7fb433caed56af9a021d964952728/src/compiler/backend/x64/instruction-selector-x64.cc#L3297\">v8 lowers</a> into native SSE2 equivalents by matching immediate argument. I cannot find if we do it for any of the cranelift backends.</p>\n<p>STR:</p>\n<ol>\n<li>Use test case at <a href=\"https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm\">https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm</a></li>\n<li>Run <code>time wasmtime run --enable-simd test.wasm --invoke test500</code></li>\n</ol>\n<p>Observe the time; it is about 15 sec here. Node runs test.wasm (<code>_initialize</code> + <code>test500</code>) in about 11 sec here.</p>\n<p>It is expected that wasmtime/cranelift will improve the performance by using specialized SSE2 instructions by 40-50%.<br>\n</p>\n</blockquote>",
        "id": 221063147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609164817
    },
    {
        "content": "<p>yurydelendik labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p>I translated the IDCT <a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/blob/master/simd/x86_64/jidctint-sse2.asm\">SSE code</a> into Wasm. The algorithm uses lots of various <code>punpckxxxx</code> instructions, though WebAssembly has v8x16.shuffle. The <a href=\"https://github.com/v8/v8/blob/dc712da548c7fb433caed56af9a021d964952728/src/compiler/backend/x64/instruction-selector-x64.cc#L3297\">v8 lowers</a> into native SSE2 equivalents by matching immediate argument. I cannot find if we do it for any of the cranelift backends.</p>\n<p>STR:</p>\n<ol>\n<li>Use test case at <a href=\"https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm\">https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm</a></li>\n<li>Run <code>time wasmtime run --enable-simd test.wasm --invoke test500</code></li>\n</ol>\n<p>Observe the time; it is about 15 sec here. Node runs test.wasm (<code>_initialize</code> + <code>test500</code>) in about 11 sec here.</p>\n<p>It is expected that wasmtime/cranelift will improve the performance by using specialized SSE2 instructions by 40-50%.<br>\n</p>\n</blockquote>",
        "id": 221063148,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609164817
    },
    {
        "content": "<p>yurydelendik labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p>I translated the IDCT <a href=\"https://github.com/libjpeg-turbo/libjpeg-turbo/blob/master/simd/x86_64/jidctint-sse2.asm\">SSE code</a> into Wasm. The algorithm uses lots of various <code>punpckxxxx</code> instructions, though WebAssembly has v8x16.shuffle. The <a href=\"https://github.com/v8/v8/blob/dc712da548c7fb433caed56af9a021d964952728/src/compiler/backend/x64/instruction-selector-x64.cc#L3297\">v8 lowers</a> into native SSE2 equivalents by matching immediate argument. I cannot find if we do it for any of the cranelift backends.</p>\n<p>STR:</p>\n<ol>\n<li>Use test case at <a href=\"https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm\">https://github.com/yurydelendik/zbar-wasm/raw/0083a9a48c8c06e5555424d85f71ce5a4b560145/zbar_jpeg/test.wasm</a></li>\n<li>Run <code>time wasmtime run --enable-simd test.wasm --invoke test500</code></li>\n</ol>\n<p>Observe the time; it is about 15 sec here. Node runs test.wasm (<code>_initialize</code> + <code>test500</code>) in about 11 sec here.</p>\n<p>It is expected that wasmtime/cranelift will improve the performance by using specialized SSE2 instructions by 40-50%.<br>\n</p>\n</blockquote>",
        "id": 221063149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609164817
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531#issuecomment-752282946\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p>I agree; perhaps this benchmark could be adapted for sightglass?</p>\n</blockquote>",
        "id": 221178858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609287236
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531#issuecomment-752292610\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<blockquote>\n<p>perhaps this benchmark could be adapted for sightglass?</p>\n</blockquote>\n<p>Not familiar with the sightglass. Can you sketch what needs to be done?</p>\n</blockquote>",
        "id": 221181615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609290447
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531#issuecomment-752782360\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2531\">Issue #2531</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/sightglass/blob/main/docs/next.md\">Here</a> is a high-level document describing the basic idea and <a href=\"https://github.com/bytecodealliance/sightglass/tree/main/benchmarks-next/shootout-ackermann\">here is an example</a>. </p>\n</blockquote>",
        "id": 221253387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609368804
    }
]