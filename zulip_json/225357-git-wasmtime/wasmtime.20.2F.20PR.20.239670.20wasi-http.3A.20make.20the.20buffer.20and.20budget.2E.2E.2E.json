[
    {
        "content": "<p>iawia002 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a> from <code>iawia002:wasi-http-writer-buffer</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Please refer to issue #9653 for the background and reasons for the changes.</p>\n<p>fix #9653</p>\n<p>cc @alexcrichton @pchickey </p>\n</blockquote>",
        "id": 484216234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732514418
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>.</p>",
        "id": 484216235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732514418
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>.</p>",
        "id": 484216236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732514418
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#pullrequestreview-2465891158\">PR review</a>:</p>\n<blockquote>\n<p>Thanks, we never got back to making these buffer depths configurable in WasiHttpView but this is the right path.</p>\n<p>Some style notes:</p>\n<p>Ideally we'd rewrite the internals to just give the user a single bound on the amount buffered, rather than a combination of number of chunks and chunk size. If you are up for doing that, I believe its the best path forward, but it is trickier than what we have. (Wanting that ideal implementation is mostly why we didn't make this configurable yet.)</p>\n<p>Instead of calling it <code>writer_buffer</code> call it <code>outgoing_body_buffer_chunks</code>, described as the number of distinct write calls to the outgoing body's output-stream that the implementation will buffer. <code>write_budget</code> should be <code>outgoing_body_chunk_size</code>, the maximum size allowed in a write call to the outgoing body's output-stream.</p>\n<p>The minimum of 2 chunks is an implementation detail related to the way channel reservations work, lets make the default configuration <code>1</code>,  assert! that any value given is greater than 1, and then always add 1 when creating the channel because one empty slot is required by the way this implementation uses the channel.</p>\n</blockquote>",
        "id": 484792878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732738713
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#pullrequestreview-2465891158\">PR review</a>:</p>\n<blockquote>\n<p>Thanks, we never got back to making these buffer depths configurable in WasiHttpView but this is the right path.</p>\n<p>Some style notes:</p>\n<p>Ideally we'd rewrite the internals to just give the user a single bound on the amount buffered, rather than a combination of number of chunks and chunk size. If you are up for doing that, I believe its the best path forward, but it is trickier than what we have. (Wanting that ideal implementation is mostly why we didn't make this configurable yet.)</p>\n<p>Instead of calling it <code>writer_buffer</code> call it <code>outgoing_body_buffer_chunks</code>, described as the number of distinct write calls to the outgoing body's output-stream that the implementation will buffer. <code>write_budget</code> should be <code>outgoing_body_chunk_size</code>, the maximum size allowed in a write call to the outgoing body's output-stream.</p>\n<p>The minimum of 2 chunks is an implementation detail related to the way channel reservations work, lets make the default configuration <code>1</code>,  assert! that any value given is greater than 1, and then always add 1 when creating the channel because one empty slot is required by the way this implementation uses the channel.</p>\n<p>Also, I don't think we should change the configuration in <code>wasi-http/tests/all/main.rs</code>, but instead fix the implementation of <code>test_programs::http::request</code> which has the exact same bug I pointed out in your guest in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9653#issuecomment-2504699703\">https://github.com/bytecodealliance/wasmtime/issues/9653#issuecomment-2504699703</a>.</p>\n</blockquote>",
        "id": 484793165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732738865
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#pullrequestreview-2465891158\">PR review</a>:</p>\n<blockquote>\n<p>Thanks, we never got back to making these buffer depths configurable in WasiHttpView but this is the right path.</p>\n<p>Some style notes:</p>\n<p>Ideally we'd rewrite the internals to just give the user a single bound on the amount buffered, rather than a combination of number of chunks and chunk size. If you are up for doing that, I believe its the best path forward, but it is trickier than what we have. (Wanting that ideal implementation is mostly why we didn't make this configurable yet.)</p>\n<p>Instead of calling it <code>writer_buffer</code> call it <code>outgoing_body_buffer_chunks</code>, described as the number of distinct write calls to the outgoing body's output-stream that the implementation will buffer. <code>write_budget</code> should be <code>outgoing_body_chunk_size</code>, the maximum size allowed in a write call to the outgoing body's output-stream.</p>\n<p>The minimum of 2 chunks is an implementation detail related to the way channel reservations work, lets make the default configuration <code>1</code>,  assert! that any value given is greater than 1, and then always add 1 when creating the channel because one empty slot is required by the way this implementation uses the channel.</p>\n<p>Also, I don't think we should change the configuration in <code>wasi-http/tests/all/main.rs</code>, but instead fix the implementation of <code>test_programs::http::request</code> which has the exact same bug I pointed out in your guest in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9653#issuecomment-2504699703\">https://github.com/bytecodealliance/wasmtime/issues/9653#issuecomment-2504699703</a>. We should make sure that we have a tests that send a body exceeding the limits on both chunk size and buffer chunks.</p>\n</blockquote>",
        "id": 484793479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732739023
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>.</p>",
        "id": 484828046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732760681
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#issuecomment-2505143131\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>:</p>\n<blockquote>\n<p>Hi @pchickey, thanks for the detailed explanation and guidance, I think all comments addressed, PTAL</p>\n</blockquote>",
        "id": 484828411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732760976
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>.</p>",
        "id": 484867978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732784028
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#issuecomment-2506497985\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>:</p>\n<blockquote>\n<p>Thanks! Its a holiday weekend here and Iâ€™ll review this next week.</p>\n</blockquote>",
        "id": 484957778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732812310
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#pullrequestreview-2479957262\">PR review</a>:</p>\n<blockquote>\n<p>Looks reasonable to me, thanks! (Pat's taking a break for a bit)</p>\n<p>I think this is reasonable enough that we can follow-up with further iterations if necessary.</p>\n</blockquote>",
        "id": 486183337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733348195
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>.</p>",
        "id": 486183348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733348200
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#pullrequestreview-2465891158\">PR review</a>:</p>\n<blockquote>\n<p>Thanks, we never got back to making these buffer depths configurable in WasiHttpView but this is the right path.</p>\n<p>Some style notes:</p>\n<p>Ideally we'd rewrite the internals to just give the user a single bound on the amount buffered, rather than a combination of number of chunks and chunk size. If you are up for doing that, I believe its the best path forward, but it is trickier than what we have. (Wanting that ideal implementation is mostly why we didn't make this configurable yet.)</p>\n<p>Instead of calling it <code>writer_buffer</code> call it <code>outgoing_body_buffer_chunks</code>, described as the number of distinct write calls to the outgoing body's output-stream that the implementation will buffer. <code>write_budget</code> should be <code>outgoing_body_chunk_size</code>, the maximum size allowed in a write call to the outgoing body's output-stream.</p>\n<p>The minimum of 2 chunks is an implementation detail related to the way channel reservations work, lets make the default configuration <code>1</code>,  assert! that any value given is greater than 1, and then always add 1 when creating the channel because one empty slot is required by the way this implementation uses the channel.</p>\n<p>Also, I don't think we should change the configuration in <code>wasi-http/tests/all/main.rs</code>, but instead fix the implementation of <code>test_programs::http::request</code> which has the exact same bug I pointed out in your guest in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9653#issuecomment-2504699703\">https://github.com/bytecodealliance/wasmtime/issues/9653#issuecomment-2504699703</a>. We should make sure that we have a tests that send a body exceeding the limits on both chunk size and buffer chunks.</p>\n</blockquote>",
        "id": 486183413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733348230
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>.</p>",
        "id": 486185531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733349209
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#issuecomment-2518706143\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>:</p>\n<blockquote>\n<p>Thanks for the review, Iâ€™m currently on vacation, I will intergrate</p>\n</blockquote>",
        "id": 486191379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733352097
    },
    {
        "content": "<p>iawia002 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670#issuecomment-2518706143\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9670\">PR #9670</a>:</p>\n<blockquote>\n<p>Thanks for the review, Iâ€™m currently on vacation, I will integrate this into wasmtime cli on a few days.</p>\n</blockquote>",
        "id": 486191549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733352192
    }
]