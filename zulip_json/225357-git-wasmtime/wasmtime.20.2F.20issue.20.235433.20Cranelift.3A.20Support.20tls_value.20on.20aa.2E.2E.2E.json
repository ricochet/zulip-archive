[
    {
        "content": "<p>nathanwhit opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5433\">issue #5433</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Support the <code>tls_value</code> instruction on aarch64 Mach-O (darwin)</p>\n<h4>Benefit</h4>\n<p>Needed for cg_clif to support TLS on Apple silicon</p>\n<h4>Implementation</h4>\n<p>The instruction sequence emitted for this is <a href=\"https://github.com/llvm/llvm-project/blob/ad68586a37e8e23eeb269d03bd28eb46e16bf48c/llvm/test/CodeGen/AArch64/GlobalISel/darwin-tls-call-clobber.ll#L33-L36\">https://github.com/llvm/llvm-project/blob/ad68586a37e8e23eeb269d03bd28eb46e16bf48c/llvm/test/CodeGen/AArch64/GlobalISel/darwin-tls-call-clobber.ll#L33-L36</a> (That link is a little confusing because it's a test, but couldn't immediately find a better example).</p>\n<p>The x86_64 implementation and aarch64 ELF implementation should provide some guidance as well. </p>\n<h4>Alternatives</h4>\n<p>None<br>\n</p>\n</blockquote>",
        "id": 315724711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670984541
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5433#issuecomment-1350282601\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5433\">issue #5433</a>:</p>\n<blockquote>\n<p>This would be great to have; would you be willing to try putting together a PR? The existing implementation for TLS on ELF aarch64 platforms (see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/aarch64/inst/mod.rs\">this file</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f0af622208bc09a4985382a63f1e1ebc13a8d89b/cranelift/codegen/src/isa/aarch64/inst.isle\">this file</a>, grep for <code>ElfTlsGetAddr</code> in both; and see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f0af622208bc09a4985382a63f1e1ebc13a8d89b/cranelift/codegen/src/isa/aarch64/lower.isle#L2400\">this lowering rule</a>) should be a reasonable guide. Happy to answer further questions if you (or anyone) wants to attempt this!</p>\n</blockquote>",
        "id": 315725776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670985393
    },
    {
        "content": "<p>nathanwhit <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5433#issuecomment-1350300263\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5433\">issue #5433</a>:</p>\n<blockquote>\n<p>@cfallin Not sure if you saw, but I actually just posted a PR (#5434)!</p>\n<p>(I was preparing the PR when I realized there wasn't an issue for it yet)</p>\n</blockquote>",
        "id": 315726826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670986280
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5433\">issue #5433</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Support the <code>tls_value</code> instruction on aarch64 Mach-O (darwin)</p>\n<h4>Benefit</h4>\n<p>Needed for cg_clif to support TLS on Apple silicon</p>\n<h4>Implementation</h4>\n<p>The instruction sequence emitted for this is <a href=\"https://github.com/llvm/llvm-project/blob/ad68586a37e8e23eeb269d03bd28eb46e16bf48c/llvm/test/CodeGen/AArch64/GlobalISel/darwin-tls-call-clobber.ll#L33-L36\">https://github.com/llvm/llvm-project/blob/ad68586a37e8e23eeb269d03bd28eb46e16bf48c/llvm/test/CodeGen/AArch64/GlobalISel/darwin-tls-call-clobber.ll#L33-L36</a> (That link is a little confusing because it's a test, but couldn't immediately find a better example).</p>\n<p>The x86_64 implementation and aarch64 ELF implementation should provide some guidance as well. </p>\n<h4>Alternatives</h4>\n<p>None<br>\n</p>\n</blockquote>",
        "id": 344341559,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679682474
    }
]