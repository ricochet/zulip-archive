[
    {
        "content": "<p><a href=\"https://github.com/cryarchy\">cryarchy</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985\">Issue #8985</a>.</p>",
        "id": 453188970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721658372
    },
    {
        "content": "<p>cryarchy opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985\">issue #8985</a>:</p>\n<blockquote>\n<p>I have provided <a href=\"https://github.com/bytecodealliance/cargo-component\">an example to reproduce the bug</a>.</p>\n<p>To run the example:</p>\n<ul>\n<li>\n<p>Run the following command from the add folder:<br>\n<code>cargo component build --release</code></p>\n</li>\n<li>\n<p>Run the following command from the calculator folder:<br>\n<code>cargo component build --release</code></p>\n</li>\n<li>\n<p>From the workspace root folder run:<br>\n<code>cargo run --bin runner</code></p>\n</li>\n</ul>\n<h3>Steps to Reproduce</h3>\n<p>To reproduce the bug, uncomment <a href=\"https://github.com/cryarchy/calculator-workspace/blob/a8f9550725ae19d156adc6c2881b8d0b08a0ca4c/runner/src/main.rs#L35\">the commented-out code</a> and run:</p>\n<p><code>cargo run --bin runner</code></p>\n<h3>Expected Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n<span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">30</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x12b2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">calculator</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">calculator</span><span class=\"o\">/</span><span class=\"n\">calculate</span><span class=\"p\">#</span><span class=\"n\">eval</span><span class=\"o\">-</span><span class=\"n\">expression</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">instance</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>rustc version: rustc 1.79.0 (129f3b996 2024-06-10)<br>\nwasmtime = {version = \"22.0\", features = [\"runtime\", \"component-model\"]}<br>\nwasmtime-wasi = \"22.0.0\"<br>\noperating system: Linux Mint 21.3 Cinnamon<br>\nlinux kernel version: 6.5.0-44-generic<br>\nx86_64 bits: 64</p>\n<h3>Extra Info</h3>\n<p>The runner code causing the error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">anyhow</span><span class=\"p\">::</span><span class=\"n\">Context</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">path</span><span class=\"p\">::</span><span class=\"n\">PathBuf</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::{</span><span class=\"n\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"p\">};</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">add_path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">PathBuf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">PathBuf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"n\">ServerWasiView</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::</span><span class=\"n\">add_to_linker_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi_view</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ServerWasiView</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">wasi</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_view</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add_component</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">Component</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">add_path</span><span class=\"p\">).</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"s\">\"Add component file not found\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_component</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">Component</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"p\">).</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"s\">\"Calculator component file not found\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add_instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">add_component</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">add_instance</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span><span class=\"s\">\"docs:adder/add\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"instance 'docs:adder/add' not found\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"s\">\"add\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"add function not found\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n\n<span class=\"w\">    </span><span class=\"n\">add</span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)],</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">panic!</span><span class=\"p\">(</span><span class=\"s\">\"Unexpected result type\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"5 + 3 = {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span><span class=\"s\">\"docs:adder/add\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"n\">func_wrap_async</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"s\">\"add\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nb\">Box</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">                </span><span class=\"n\">add</span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span>\n<span class=\"w\">                    </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">                    </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">)],</span>\n<span class=\"w\">                    </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"n\">result</span><span class=\"p\">,))</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">anyhow</span><span class=\"p\">::</span><span class=\"n\">anyhow</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"Unexpected result type\"</span><span class=\"p\">))</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">})</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">calc_component</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_fn</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">calc_instance</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span><span class=\"s\">\"component:calculator/calculate\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"instance 'component:calculator/calculate' not found\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"s\">\"eval-expression\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"eval-expression function not found\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"n\">calc_fn</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"{} + {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))],</span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">panic!</span><span class=\"p\">(</span><span class=\"s\">\"Unexpected result type\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">ServerWasiView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResourceTable</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">ctx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">ServerWasiView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">WasiCtx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"bp\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">ServerWasiView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">table</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">ctx</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">anyhow</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">PathBuf</span><span class=\"p\">::</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"target/wasm32-wasip1/release/add.wasm\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">PathBuf</span><span class=\"p\">::</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"target/wasm32-wasip1/release/calculator.wasm\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">add_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{} + {} = {sum}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</blockquote>",
        "id": 453188976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721658373
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985#issuecomment-2243468892\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985\">issue #8985</a>:</p>\n<blockquote>\n<p>You'll want to take a look at the <a href=\"https://docs.rs/wasmtime/latest/wasmtime/component/struct.Func.html#method.call\">documentation of <code>Func::call</code></a> and to fix this you'll need to call <a href=\"https://docs.rs/wasmtime/latest/wasmtime/component/struct.Func.html#method.post_return\"><code>Func::post_return</code></a> after you <code>call_async</code> (or <code>post_return_async</code>)</p>\n</blockquote>",
        "id": 453236293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721669517
    },
    {
        "content": "<p>cryarchy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985#issuecomment-2243626088\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985\">issue #8985</a>:</p>\n<blockquote>\n<p>Thank you, @alexcrichton.</p>\n<p>I added the code <code>add.post_return_async(&amp;mut store).await?;</code> after the invocation of the <code>add</code> function and that solved the problem.</p>\n<p>Do you know if it is possible to call the <code>add</code> function from the calculator wasm component without wrapping it in a host function? What is required to do so?</p>\n</blockquote>",
        "id": 453255198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721675016
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985#issuecomment-2243633899\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985\">issue #8985</a>:</p>\n<blockquote>\n<p>You can use a tool such as <code>wac</code> to compose the component together and hook things up, although that's a bit advanced I believe at this time. Otherwise purely with the Wasmtime API at this time there's no way to do this without the wrapper host function.</p>\n</blockquote>",
        "id": 453256330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721675305
    },
    {
        "content": "<p>cryarchy closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985\">issue #8985</a>:</p>\n<blockquote>\n<p>I have provided <a href=\"https://github.com/bytecodealliance/cargo-component\">an example to reproduce the bug</a>.</p>\n<p>To run the example:</p>\n<ul>\n<li>\n<p>Run the following command from the add folder:<br>\n<code>cargo component build --release</code></p>\n</li>\n<li>\n<p>Run the following command from the calculator folder:<br>\n<code>cargo component build --release</code></p>\n</li>\n<li>\n<p>From the workspace root folder run:<br>\n<code>cargo run --bin runner</code></p>\n</li>\n</ul>\n<h3>Steps to Reproduce</h3>\n<p>To reproduce the bug, uncomment <a href=\"https://github.com/cryarchy/calculator-workspace/blob/a8f9550725ae19d156adc6c2881b8d0b08a0ca4c/runner/src/main.rs#L35\">the commented-out code</a> and run:</p>\n<p><code>cargo run --bin runner</code></p>\n<h3>Expected Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n<span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">30</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">8</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x12b2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">calculator</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">component</span><span class=\"p\">:</span><span class=\"nc\">calculator</span><span class=\"o\">/</span><span class=\"n\">calculate</span><span class=\"p\">#</span><span class=\"n\">eval</span><span class=\"o\">-</span><span class=\"n\">expression</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"n\">instance</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>rustc version: rustc 1.79.0 (129f3b996 2024-06-10)<br>\nwasmtime = {version = \"22.0\", features = [\"runtime\", \"component-model\"]}<br>\nwasmtime-wasi = \"22.0.0\"<br>\noperating system: Linux Mint 21.3 Cinnamon<br>\nlinux kernel version: 6.5.0-44-generic<br>\nx86_64 bits: 64</p>\n<h3>Extra Info</h3>\n<p>The runner code causing the error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">anyhow</span><span class=\"p\">::</span><span class=\"n\">Context</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span><span class=\"p\">::</span><span class=\"n\">path</span><span class=\"p\">::</span><span class=\"n\">PathBuf</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::</span><span class=\"n\">component</span><span class=\"p\">::{</span><span class=\"n\">Component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">::{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::{</span><span class=\"n\">WasiCtx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"p\">};</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">add_path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">PathBuf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">PathBuf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">wasmtime</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">().</span><span class=\"n\">inherit_stdio</span><span class=\"p\">().</span><span class=\"n\">build</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"n\">ServerWasiView</span><span class=\"o\">&gt;</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::</span><span class=\"n\">add_to_linker_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi_view</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ServerWasiView</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">wasi</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_view</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add_component</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">Component</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">add_path</span><span class=\"p\">).</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"s\">\"Add component file not found\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_component</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">        </span><span class=\"n\">Component</span><span class=\"p\">::</span><span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"p\">).</span><span class=\"n\">context</span><span class=\"p\">(</span><span class=\"s\">\"Calculator component file not found\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add_instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">add_component</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">add_instance</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span><span class=\"s\">\"docs:adder/add\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"instance 'docs:adder/add' not found\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"s\">\"add\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"add function not found\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n\n<span class=\"w\">    </span><span class=\"n\">add</span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)],</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">panic!</span><span class=\"p\">(</span><span class=\"s\">\"Unexpected result type\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"5 + 3 = {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">linker</span><span class=\"p\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span><span class=\"s\">\"docs:adder/add\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">.</span><span class=\"n\">func_wrap_async</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"s\">\"add\"</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"nb\">Box</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">                </span><span class=\"n\">add</span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span>\n<span class=\"w\">                    </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">                    </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">)],</span>\n<span class=\"w\">                    </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">                </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"n\">result</span><span class=\"p\">,))</span>\n<span class=\"w\">                </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">anyhow</span><span class=\"p\">::</span><span class=\"n\">anyhow</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"Unexpected result type\"</span><span class=\"p\">))</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">})</span>\n<span class=\"w\">        </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">instantiate_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">calc_component</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_fn</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">calc_instance</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">instance</span><span class=\"p\">(</span><span class=\"s\">\"component:calculator/calculate\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"instance 'component:calculator/calculate' not found\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">(</span><span class=\"s\">\"eval-expression\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"eval-expression function not found\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"n\">calc_fn</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"fm\">format!</span><span class=\"p\">(</span><span class=\"s\">\"{} + {}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))],</span>\n<span class=\"w\">            </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">Val</span><span class=\"p\">::</span><span class=\"n\">S32</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">panic!</span><span class=\"p\">(</span><span class=\"s\">\"Unexpected result type\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">};</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">ServerWasiView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">table</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ResourceTable</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">ctx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">WasiCtx</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">ServerWasiView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">WasiCtx</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"bp\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ctx</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">WasiView</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">ServerWasiView</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">table</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">ResourceTable</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">table</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">ctx</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">WasiCtx</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">ctx</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">anyhow</span><span class=\"p\">::</span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">add_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">PathBuf</span><span class=\"p\">::</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"target/wasm32-wasip1/release/add.wasm\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">PathBuf</span><span class=\"p\">::</span><span class=\"n\">from</span><span class=\"p\">(</span><span class=\"s\">\"target/wasm32-wasip1/release/calculator.wasm\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">20</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">sum</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">add_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">calc_path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{} + {} = {sum}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lhs</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">rhs</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n</blockquote>",
        "id": 453256795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721675455
    },
    {
        "content": "<p>cryarchy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985#issuecomment-2243637893\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8985\">issue #8985</a>:</p>\n<blockquote>\n<p>Thank you, @alexcrichton.</p>\n</blockquote>",
        "id": 453256796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721675455
    }
]