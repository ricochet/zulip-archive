[
    {
        "content": "<p><a href=\"https://github.com/jameysharp\">jameysharp</a> added the good first issue label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">Issue #7954</a>.</p>",
        "id": 421955060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708126504
    },
    {
        "content": "<p><a href=\"https://github.com/jameysharp\">jameysharp</a> added the cranelift:E-easy label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">Issue #7954</a>.</p>",
        "id": 421955061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708126504
    },
    {
        "content": "<p><a href=\"https://github.com/jameysharp\">jameysharp</a> added the cranelift:mid-end label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">Issue #7954</a>.</p>",
        "id": 421955062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708126504
    },
    {
        "content": "<p><a href=\"https://github.com/jameysharp\">jameysharp</a> added the cranelift<span aria-label=\"goal\" class=\"emoji emoji-1f945\" role=\"img\" title=\"goal\">:goal:</span>compile-time label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">Issue #7954</a>.</p>",
        "id": 421955063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708126504
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">issue #7954</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>We have two interfaces in Cranelift for navigating <a href=\"https://en.wikipedia.org/wiki/Dominator_(graph_theory)\">dominator</a> trees, both defined in the <code>cranelift_codegen::dominator_tree</code> module: <code>DominatorTree</code> and <code>DominatorTreePreorder</code>. But we weren't using the latter outside of tests after #3434 landed in 2021, until I switched the egraph pass over to using it in #7948 today.</p>\n<ol>\n<li>We should audit all uses of <code>DominatorTree</code> to see if they would be better served by using <code>DominatorTreePreorder</code> instead.</li>\n<li>If we end up using <code>DominatorTreePreorder</code> in more places than just the egraph pass, then we should compute it once and share it.</li>\n<li>If it turns out that we always need a <code>DominatorTreePreorder</code> when compiling any function, then we should fold the two types into one and always compute the preorder when we're computing the dominator tree.</li>\n</ol>\n<h4>Benefit</h4>\n<p>These two interfaces both provide a method named <code>dominates</code> which checks whether one basic block dominates another. However, <code>DominatorTree</code> does this in time proportional to the length of the path from one block to the other within the dominator tree. Thanks to a linear-time preprocessing step performed once, <code>DominatorTreePreorder</code> can answer this question in constant time.</p>\n<p>So if we're using the <code>DominatorTree::dominates</code> method anywhere that's performance-critical, switching to <code>DominatorTreePreorder</code> could provide an asymptotic-complexity improvement.</p>\n<p>On top of that, sharing a precomputed preorder across multiple uses saves time redoing the preprocessing step and also may allow us to reuse a heap allocation for the temporary storage used during that preprocessing step.</p>\n<h4>Implementation</h4>\n<p>To start with, search for all uses of <code>DominatorTree::dominates</code>. For each one, see if we can just replace it with <code>DominatorTreePreorder::dominates</code>.</p>\n<p>This is easy if both arguments are <code>Block</code> IDs, but either one is currently also allowed to be an instruction ID (<code>Inst</code>) or a <code>ProgramPoint</code>. If we're relying on that feature somewhere, it's only slightly more complicated: If two instructions are in the same block then the earlier instruction dominates the later instruction; otherwise we can go back to the easy case and compare the blocks they're in to see if one block dominates the other.</p>\n<p>If some instances of <code>DominatorTree</code> are only being used to call <code>dominates</code>, then removing that structure from those instances in favor of <code>DominatorTreePreorder</code> is the next step. However, some cases may also be using other methods such as <code>cfg_postorder</code> or <code>idom</code>, which are not available on <code>DominatorTreePreorder</code>.</p>\n<h4>Alternatives</h4>\n<p>We can always leave this alone, but I think it's a good source of small changes that may give us performance improvements during compilation.</p>\n</blockquote>",
        "id": 421955065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708126504
    },
    {
        "content": "<p>MuhtasimTanmoy <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954#issuecomment-1950968765\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">issue #7954</a>:</p>\n<blockquote>\n<p>Would like to take this one<br>\n</p>\n</blockquote>",
        "id": 422069008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708234520
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954#issuecomment-1954774080\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">issue #7954</a>:</p>\n<blockquote>\n<p>Great, please do! If you have any questions, let us know. We're happy to help!</p>\n</blockquote>",
        "id": 422472230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708451942
    },
    {
        "content": "<p>badumbatish <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954#issuecomment-2323222426\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">issue #7954</a>:</p>\n<blockquote>\n<p>hi there! is this issue still on going?</p>\n</blockquote>",
        "id": 466661648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725177968
    },
    {
        "content": "<p>badumbatish <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954#issuecomment-2333302149\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7954\">issue #7954</a>:</p>\n<blockquote>\n<p>i'll give this one a try if nobody's doing this</p>\n</blockquote>",
        "id": 468076689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1725602313
    }
]