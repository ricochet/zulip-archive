[
    {
        "content": "<p>froydnj opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1389\">PR #1389</a> from <code>define-function-trap-sink</code> to <code>master</code>:</p>\n<blockquote>\n<p>Experience with the <code>define_function</code> API has shown that returning borrowed slices of <code>TrapSite</code> is not ideal: the returned slice represents a borrow on the entire <code>Module</code>, which makes calling back into methods taking <code>&amp;mut self</code> a bit tricky.</p>\n<p>To eliminate the problem, let's require the callers of <code>define_function</code> to provide <code>TrapSink</code> instances.  This style of API enables them to control when and how traps are collected, and makes the <code>object</code> and <code>faerie</code> backends simpler/more efficient by not having to worry about trap collection.</p>\n<p>This has been discussed in #1184 and #1214.  I opted not to go this route because I thought the <code>&amp;[TrapSite]</code> version was easier.  Experience has shown that was a mistake.</p>\n</blockquote>",
        "id": 191612903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585058370
    },
    {
        "content": "<p><strong>froydnj</strong> requested <a href=\"https://github.com/pchickey\" target=\"_blank\" title=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1389\">PR #1389</a>.</p>",
        "id": 191612904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585058370
    },
    {
        "content": "<p>froydnj updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1389\">PR #1389</a> from <code>define-function-trap-sink</code> to <code>master</code>:</p>\n<blockquote>\n<p>Experience with the <code>define_function</code> API has shown that returning borrowed slices of <code>TrapSite</code> is not ideal: the returned slice represents a borrow on the entire <code>Module</code>, which makes calling back into methods taking <code>&amp;mut self</code> a bit tricky.</p>\n<p>To eliminate the problem, let's require the callers of <code>define_function</code> to provide <code>TrapSink</code> instances.  This style of API enables them to control when and how traps are collected, and makes the <code>object</code> and <code>faerie</code> backends simpler/more efficient by not having to worry about trap collection.</p>\n<p>This has been discussed in #1184 and #1214.  I opted not to go this route because I thought the <code>&amp;[TrapSite]</code> version was easier.  Experience has shown that was a mistake.</p>\n</blockquote>",
        "id": 191623705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585062602
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1389#pullrequestreview-380540142\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1389#pullrequestreview-380540142\">PR Review</a>.</p>",
        "id": 191645614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585070938
    },
    {
        "content": "<p>froydnj closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1389\">PR #1389</a>.</p>",
        "id": 191646650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585071350
    },
    {
        "content": "<p>froydnj reopened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1389\">PR #1389</a> from <code>define-function-trap-sink</code> to <code>master</code>:</p>\n<blockquote>\n<p>Experience with the <code>define_function</code> API has shown that returning borrowed slices of <code>TrapSite</code> is not ideal: the returned slice represents a borrow on the entire <code>Module</code>, which makes calling back into methods taking <code>&amp;mut self</code> a bit tricky.</p>\n<p>To eliminate the problem, let's require the callers of <code>define_function</code> to provide <code>TrapSink</code> instances.  This style of API enables them to control when and how traps are collected, and makes the <code>object</code> and <code>faerie</code> backends simpler/more efficient by not having to worry about trap collection.</p>\n<p>This has been discussed in #1184 and #1214.  I opted not to go this route because I thought the <code>&amp;[TrapSite]</code> version was easier.  Experience has shown that was a mistake.</p>\n</blockquote>",
        "id": 191646656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585071353
    },
    {
        "content": "<p>froydnj merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1389\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1389\">PR #1389</a>.</p>",
        "id": 191646715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585071363
    }
]