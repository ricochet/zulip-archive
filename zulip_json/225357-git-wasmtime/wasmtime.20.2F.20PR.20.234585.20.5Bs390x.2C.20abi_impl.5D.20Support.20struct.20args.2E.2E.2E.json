[
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585\">PR #4585</a> from <code>s390x-struct-arg</code> to <code>main</code>:</p>\n<blockquote>\n<p>This adds support for StructArgument on s390x.  The ABI for this<br>\nplatform requires that the address of the buffer holding the copy<br>\nof the struct argument is passed from caller to callee as hidden<br>\npointer, using a register or overflow stack slot.</p>\n<p>To implement this, I've added an optional \"pointer\" filed to<br>\nABIArg::StructArg, and code to handle the pointer both in common<br>\nabi_impl code and the s390x back-end.</p>\n<p>One notable change necessary to make this work involved the<br>\n\"copy_to_arg_order\" mechanism.  Currently, for struct args<br>\nwe only need to copy the data (and that need to happen before<br>\nsetting up any other args), while for non-struct args we only<br>\nneed to set up the appropriate registers or stack slots.<br>\nThis order is ensured by sorting the arguments appropriately<br>\ninto a \"copy_to_arg_order\" list.</p>\n<p>However, for struct args with explicit pointers we need to <em>both</em><br>\ncopy the data (again, before everything else), <em>and</em> set up a<br>\nregister or stack slot.  Since we now need to touch the argument<br>\ntwice, we cannot solve the ordering problem by a simple sort.<br>\nInstead, the abi_impl common code now provided <em>two</em> callbacks,<br>\nemit_copy_regs_to_buffer and emit_copy_regs_to_arg, and expects<br>\nthe back end to first call copy..to_buffer for all args, and<br>\nthen call copy.._to_arg for all args.  This required updates<br>\nto all back ends.</p>\n<p>In the s390x back end, in addition to the new ABI code, I'm now<br>\nadding code to actually copy the struct data, using the MVC<br>\ninstruction (for small buffers) or a memcpy libcall (for larger<br>\nbuffers).  This also requires a bit of new infrastructure:</p>\n<ul>\n<li>\n<p>MVC is the first memory-to-memory instruction we use, which<br>\n  needed a bit of memory argument tweaking</p>\n</li>\n<li>\n<p>We also need to set up the infrastructure to emit libcalls.</p>\n</li>\n</ul>\n<p>(FYI @cfallin - This implements the first half of issue #4565.)</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 291777561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659479523
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585#pullrequestreview-1060769966\">PR review</a>.</p>",
        "id": 291887114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659549118
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585#pullrequestreview-1060769966\">PR review</a>.</p>",
        "id": 291887115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659549118
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585#discussion_r936970429\">PR review comment</a>:</p>\n<blockquote>\n<p>This will either need a rebase over @fitzgen's conversion of <code>slots</code> to <code>smallvec</code> or, if I'm misremembering what became a <code>smallvec</code>, this should become a <code>smallvec</code> :-)</p>\n</blockquote>",
        "id": 291887116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659549118
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585\">PR #4585</a> from <code>s390x-struct-arg</code> to <code>main</code>.</p>",
        "id": 291900498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659551064
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585#pullrequestreview-1060834473\">PR review</a>.</p>",
        "id": 291902474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659551982
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585\">PR #4585</a>.</p>",
        "id": 291902483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659551988
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585#discussion_r937024662\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, had to become a <code>smallvec</code>.   Rebased now, thanks!</p>\n</blockquote>",
        "id": 291903765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659552614
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585#pullrequestreview-1060846224\">PR review</a>.</p>",
        "id": 291903766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659552614
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4585\">PR #4585</a>.</p>",
        "id": 291904947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659553208
    }
]