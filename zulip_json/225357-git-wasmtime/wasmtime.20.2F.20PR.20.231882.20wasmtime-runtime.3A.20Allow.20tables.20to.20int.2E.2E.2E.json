[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882\">PR #1882</a> from <code>tables-can-hold-externref</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enables <code>wasmtime_runtime::Table</code> to internally hold elements of<br>\neither <code>funcref</code> (all that is currently supported) or <code>externref</code> (newly<br>\nintroduced in this commit).</p>\n<p>This commit updates <code>Table</code>'s API, but does NOT generally propagate those<br>\nchanges outwards all the way through the Wasmtime embedding API. It only does<br>\nenough to get everything compiling and the current test suite passing. It is<br>\nexpected that as we implement more of the reference types spec, we will bubble<br>\nthese changes out and expose them to the embedding API.</p>\n<p>cc #929</p>\n</blockquote>",
        "id": 200928998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592246495
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/yurydelendik\">yurydelendik</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882\">PR #1882</a>.</p>",
        "id": 200928999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592246495
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882\">PR #1882</a>.</p>",
        "id": 200950957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592258125
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882#pullrequestreview-431021695\">PR Review</a>.</p>",
        "id": 200951264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592258306
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882#discussion_r440469495\">PR Review Comment</a>:</p>\n<blockquote>\n<p>We are exposing <code>Option&lt;VMExternRef&gt;</code> elements to the CL or other low level compiler. It is hard to guess what type of binary representation we will be dealing with here. For comparison, I see <code>#[repr(C)]</code> near <code>VMCallerCheckedAnyfunc</code>. </p>\n</blockquote>",
        "id": 200951265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592258306
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882#pullrequestreview-431021695\">PR Review</a>.</p>",
        "id": 200951266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592258306
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882#pullrequestreview-431023997\">PR Review</a>.</p>",
        "id": 200951503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592258487
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1882#discussion_r440471385\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>VMExternRef</code> is <code>repr(transparent)</code> around a <code>NonNull</code> which is <code>repr(transparent)</code> around a pointer. Additionally, <code>Option&lt;NonNull&lt;...&gt;&gt;</code> is guaranteed to have the same representation as a pointer. So we should be good as far as binary representation goes.</p>\n</blockquote>",
        "id": 200951505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592258487
    }
]