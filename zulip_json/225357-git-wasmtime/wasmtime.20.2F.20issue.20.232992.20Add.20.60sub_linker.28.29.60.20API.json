[
    {
        "content": "<p>bkolobara opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992\">issue #2992</a>:</p>\n<blockquote>\n<p>The <a href=\"https://github.com/bytecodealliance/rfcs/pull/11\">RFC 11</a> mentions an addition of <code>sub_linker </code>.</p>\n<blockquote>\n<p>Note that a new API is also provided, <code>sub_linker()</code>. This method allows creating a \"child\" linker which inherits all of the previous values set by the parent but also allows defining new values in the returned value for instantiation.</p>\n</blockquote>\n<p>It was not added yet, but it would be nice to have for my use case. I define a lot of host functions in the <code>Linker</code>, but then for each <code>Store</code> <a href=\"https://docs.rs/wasmtime/0.28.0/wasmtime/struct.Linker.html#method.module\">add a different module as an import</a>. This immediately \"poisons\" the Linker with a particular <code>Store</code> and I need to re-add all the host functions again to a new <code>Linker</code> for other <code>Store</code>s.</p>\n<p>Maybe, just having <code>Clone</code> on the <code>Linker</code> would be enough here.</p>\n</blockquote>",
        "id": 242908325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623861937
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992#issuecomment-862576438\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992\">issue #2992</a>:</p>\n<blockquote>\n<p>Oh wow I completely forgot that <code>Clone</code> was a possibility here! I added that in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2993\">https://github.com/bytecodealliance/wasmtime/pull/2993</a> because it seems pretty reasonable to me. The runtime of that will be slower than the <code>sub_linker</code> idea because things need cloning, but is that ok for your use case?</p>\n</blockquote>",
        "id": 242915611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623865093
    },
    {
        "content": "<p>bkolobara <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992#issuecomment-862614636\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992\">issue #2992</a>:</p>\n<blockquote>\n<p>I always assumed that the most expensive part of adding host functions was the trampoline creation, and this would be faster with cloning, instead of recreating <code>Linker</code>s?</p>\n<p>The previous api <code>Config::wrap_host_func</code> was a perfect fit for my use case, but I think that <code>Clone</code> should also be fine.</p>\n<p>Thanks for the super fast response!</p>\n</blockquote>",
        "id": 242922584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623868261
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992#issuecomment-862727488\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992\">issue #2992</a>:</p>\n<blockquote>\n<p>Whether or not it's fast sort of depends on your use case and which part you're stressing. Want to try out the <code>Clone</code> impl though and see if it works for you?</p>\n</blockquote>",
        "id": 242943401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623877646
    },
    {
        "content": "<p>bkolobara <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992#issuecomment-863298675\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2992\">issue #2992</a>:</p>\n<blockquote>\n<p>I ran some benchmarks with the <code>Clone</code> implementation. It takes around +35% more time per request in our current system, compared to an implementation that doesn't clone the <code>Linker</code>.</p>\n<p>This is still significantly better than what we do right now, re-creating the Linker from scratch (15x slower), because we need to use different <code>Stores</code> with each.</p>\n<p>The only issues is that it keeps getting worse if I artificially increase the number of host functions (with 200 the throughput decreases 50%). I expect the number of host functions to further grow in our system.</p>\n<p>I would still love to see a <code>sub_linker()</code> API in the future, that doesn't decrease performance with more host functions.</p>\n</blockquote>",
        "id": 243027708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623940830
    }
]