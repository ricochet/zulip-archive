[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-843249757\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>@peterhuene if you're up for it, mind reviewing the bits here ranging from the runtime internals, the <code>wasmtime</code> crate itself, and the C API? If that's too much though let me know! (I see you already assigned yourself as a reviewer but wanted to write something down too)</p>\n<p>@pchickey would you be up for reviewing the wasi-common/wiggle/macro/etc bits?</p>\n</blockquote>",
        "id": 239269340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621350277
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-843369332\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>Yes, I will review everything in that category, and I am also going to port a private repo to use this branch as well.</p>\n</blockquote>",
        "id": 239290144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621357738
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-843559609\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>Ok all documentation should now be included, so I think that this is in theory good to land, pending review/RFC of course.</p>\n</blockquote>",
        "id": 239325166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621371607
    },
    {
        "content": "<p>TerrorJack <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-843632517\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>I reran the haskell bindgen and found the following symbols don't exist:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasm_frame_copy</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_trap</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_trap_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_delete</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_copy</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_same</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_get_host_info</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_set_host_info</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_set_host_info_with_finalizer</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_as_ref</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_foreign</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_as_ref_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_foreign_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_foreign_new</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_module</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_module_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_func</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_func_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_global</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_global_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_table</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_table_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_memory</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_memory_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_extern</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_extern_const</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_instance</span><span class=\"w\"></span>\n<span class=\"n\">wasm_ref_as_instance_const</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Some of those were documented as \"Unimplemented in Wasmtime, aborts the process if called.\", which is incorrect. I recommend a consistent handling of unimplemented C API functions: either don't implement at all and be clear about that in the documentation, or always add a stub which panics.</p>\n</blockquote>",
        "id": 239341302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621380445
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-844174564\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>@TerrorJack oh thanks for the reminder! I've gone through and implemented aborting stubs for those symbols.</p>\n</blockquote>",
        "id": 239436635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621435456
    },
    {
        "content": "<p>TerrorJack <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-846034243\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>We have distinct <code>wasmtime_valkind_t</code> and <code>wasm_valkind_t</code>, but there is no separate <code>wasmtime_func_t</code> as opposed to existing <code>wasm_func_t</code>. So it seems I can't call <code>wasmtime_func_new</code> to create a function which operates on the SIMD types.</p>\n</blockquote>",
        "id": 239768826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621610882
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-846055289\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>@TerrorJack ah good point! I haven't done a ton of testing of the simd proposal in other bindings yet. I added in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897/commits/7f4b340d69db55fbbb3bf91aca6669e14087a0d7\">https://github.com/bytecodealliance/wasmtime/pull/2897/commits/7f4b340d69db55fbbb3bf91aca6669e14087a0d7</a> to recognize <code>WASMTIME_V128</code> as a <code>wasm_valkind_t</code></p>\n</blockquote>",
        "id": 239772928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1621612464
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897#issuecomment-853899319\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">issue #2897</a>:</p>\n<blockquote>\n<p>The RFC has been merged and this has been reviewed (thanks all!) so I'm going to merge.</p>\n</blockquote>",
        "id": 241395603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622729388
    }
]