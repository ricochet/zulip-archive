[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR builds on several other under-review PRs to demonstrate a working wasi-threads implementation in Wasmtime. The first three commits are cherry-picked from the following PRs:</p>\n<ul>\n<li>#5326 </li>\n<li>#5471</li>\n<li>#5475 </li>\n</ul>\n<p>The last two commits build on these to expose the wasi-threads API to WebAssembly modules. Upon building and running Wasmtime with the right flags, one can then run multi-threaded WebAssembly programs:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>cargo run --features wasi-threads -- <span class=\"se\">\\</span>\n    --wasm-features threads --wasi-modules experimental-wasi-threads <span class=\"se\">\\</span>\n    &lt;a threads-enabled module&gt;\n</code></pre></div>\n<p>Due to Cargo feature issues in 05020d4, this PR is not yet expected to compile but, perhaps more interestingly, one can use these changes to run some simple pthread tests over in the wasi-libc repository: <a href=\"https://github.com/WebAssembly/wasi-libc/pull/369\">https://github.com/WebAssembly/wasi-libc/pull/369</a>.</p>\n</blockquote>",
        "id": 317061285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671580179
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR builds on several other under-review PRs to demonstrate a working wasi-threads implementation in Wasmtime. The first three commits are cherry-picked from the following PRs:</p>\n<ul>\n<li>#5326 </li>\n<li>#5471</li>\n<li>#5475 </li>\n</ul>\n<p>The last two commits build on these to expose the wasi-threads API to WebAssembly modules. Upon building and running Wasmtime with the right flags, one can then run multi-threaded WebAssembly programs:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$ </span>cargo run --features wasi-threads -- <span class=\"se\">\\</span>\n    --wasm-features threads --wasi-modules experimental-wasi-threads <span class=\"se\">\\</span>\n    &lt;a threads-enabled module&gt;\n</code></pre></div>\n<p>Due to Cargo feature issues in 05020d4, this PR is not yet expected to pass all CI tasks but, perhaps more interestingly, one can use these changes to run some simple pthread tests over in the wasi-libc repository: <a href=\"https://github.com/WebAssembly/wasi-libc/pull/369\">https://github.com/WebAssembly/wasi-libc/pull/369</a>.</p>\n</blockquote>",
        "id": 317061372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671580212
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1234780101\">PR review</a>.</p>",
        "id": 319231073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763060
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1234780101\">PR review</a>.</p>",
        "id": 319231074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763060
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1060736262\">PR review comment</a>:</p>\n<blockquote>\n<p>It's ok to leave this file out</p>\n</blockquote>",
        "id": 319231078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763060
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1060742240\">PR review comment</a>:</p>\n<blockquote>\n<p>If possible I think this would be best avoided because a <code>Linker&lt;T&gt;</code> is a costly thing to clone.</p>\n<p>One option is to wrap it up in an <code>Arc</code>, and another would be to thread the <code>get_cx</code> callback through to <code>spawn</code> so the <code>host</code> argument could be projected into a <code>&amp;WasiThreadsCtx&lt;T&gt;</code></p>\n</blockquote>",
        "id": 319231079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763060
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1060735492\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you file an issue and list a TODO here for \"we shouldn't serialize calls to <code>random_get</code>\"?</p>\n</blockquote>",
        "id": 319231080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763060
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1060746323\">PR review comment</a>:</p>\n<blockquote>\n<p>I feel like this is a little tricky. Panicking on errors here doesn't feel like the right thing to do since these panics can theoreteically get triggered. In that sense I think that the errors need to be handled here. As you've probably noticed, however, there's nowhere to communicate the error to. One option would be to move the initialization here to the thread calling spawn, but that feels sort of wrong since it sort of belongs in the child thread.</p>\n<p>Overall I think this might be best left as an issue on the <code>wasi-threads</code> repository. Basically how would a thread spawn operation get notified that the thread was spawned but something else failed? Or otherwise how are traps handled and/or other fatal errors in the threads proposal? (that is the <code>panic!</code> below also needs better handling I think)</p>\n</blockquote>",
        "id": 319231081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763060
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1060740086\">PR review comment</a>:</p>\n<blockquote>\n<p>Technically this can be done today, but I think this might be best done as some sort of \"join\" API from the host which isn't currently specified for <code>wasi-threads</code>, so while wait/notify could be added here there's no way to actually wait until all the child threads have exited.</p>\n</blockquote>",
        "id": 319231082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763061
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1060736499\">PR review comment</a>:</p>\n<blockquote>\n<p>If possible I think we're omitting LICENSE files except for the one at the top of the repo</p>\n</blockquote>",
        "id": 319231083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672763061
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 319882657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673048812
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1239537904\">PR review</a>.</p>",
        "id": 319883294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673049201
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1063889895\">PR review comment</a>:</p>\n<blockquote>\n<p>It felt strange to create an issue for yet-to-be-merged code; I will do this as a follow-up.</p>\n</blockquote>",
        "id": 319883295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673049201
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1063892181\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I've looked into this more since you reviewed this. There has been some discussion <a href=\"https://github.com/WebAssembly/wasi-threads/pull/17/files\">in a wasi-threads issue</a> which boils down to \"any <code>proc_exit</code> or trap in any thread exits the program.\" I was looking at <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/src/commands/run.rs#L215-L246\">what <code>run.rs</code> does</a> for traps and I think we would want to do something similar here--essentially call <code>std::process::exit</code>. The problem is that calling <code>std::process::exit</code> is likely not what one wants to do in an embedding scenario. I would suggest we do implement wasi-threads to initially <code>std::process::exit</code> and then open an issue to think about this for the embedding scenario: I suspect users here would want a trap or <code>proc_exit</code> to kill all the threads but not kill the original program calling Wasmtime but, with no great way to cancel threads in Rust, I think this might be kind of difficult.</p>\n</blockquote>",
        "id": 319883918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673049632
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1239540807\">PR review</a>.</p>",
        "id": 319883919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673049632
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1240621012\">PR review</a>.</p>",
        "id": 320245461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673275848
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1064724423\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm ok with this all being a TODO and not necessarily covered here. At the very least this PR is a good step forward to being able to spawn threads.</p>\n<p>I do think these issues need to be resolved before stabilization, but perhaps it's best to track these sorts of things in the wasi-threads repository?</p>\n</blockquote>",
        "id": 320245463,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673275848
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 320320187,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673294585
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1241143703\">PR review</a>.</p>",
        "id": 320322892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673295387
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1065068600\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok, to resolve this I rebased again on <code>main</code> and applied <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484/commits/2ba9f11b56adaef32f5bc2596cafab8328e52ae4\">2ba9f11</a>.</p>\n</blockquote>",
        "id": 320322895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673295387
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1272011242\">PR review</a>.</p>",
        "id": 323943199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674783831
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1088507665\">PR review comment</a>:</p>\n<blockquote>\n<p>Looking at this again, I think I can rewrite this with a \"join\" loop after the spawn calls: each thread will atomically increment a memory location and notify the main thread; the main thread waits in a loop and only exits once the read memory equals the number of threads we are waiting for. This fixup could come after this PR merges?</p>\n</blockquote>",
        "id": 323943200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674783831
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 323943247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674783844
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 323944573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674784815
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 323944807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674784994
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 323957295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674790991
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 323958265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674791909
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1273076070\">PR review</a>.</p>",
        "id": 324128390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844753
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1273076070\">PR review</a>.</p>",
        "id": 324128392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1089204556\">PR review comment</a>:</p>\n<blockquote>\n<p>It's ok to not add this since it's implicit from the dependency</p>\n</blockquote>",
        "id": 324128393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1089284916\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh I had forgotten to mention this earlier, but now that other bits and pieces are cleaned up I think most of these changes should no longer be necessary? I think the <code>BorrowedFile</code> type should be able to be removed now along with all other changes necessary for this.</p>\n</blockquote>",
        "id": 324128395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1089294658\">PR review comment</a>:</p>\n<blockquote>\n<p>There are two unwraps below during the <code>spawn</code> operation's closure: </p>\n<ul>\n<li>Using <code>Linker::instantiate</code></li>\n<li>The call to <code>get_typed_func</code></li>\n</ul>\n<p>Both of these, however, can be type-checked ahead of time at this location I believe by inspecting <code>Module</code> and <code>Linker&lt;T&gt;</code>. Could you either add a TODO to perform such type-checking here or implement it in this PR?</p>\n</blockquote>",
        "id": 324128396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1089288218\">PR review comment</a>:</p>\n<blockquote>\n<p>Like with files I think this can all go away now</p>\n</blockquote>",
        "id": 324128397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1089291471\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you add a <code>TODO</code> here that the <code>Mutex</code> here shouldn't be necessary? Something along the lines that this forces threads to serialize on their acquisition of randomness but there's need for such serialization.</p>\n</blockquote>",
        "id": 324128398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1089286415\">PR review comment</a>:</p>\n<blockquote>\n<p>Similar to above I think many of these changes can go away now too</p>\n</blockquote>",
        "id": 324128399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1089296337\">PR review comment</a>:</p>\n<blockquote>\n<p>One possibility that isn't caught by this is the <code>.call(..)</code> function panicking, such as trying to use wasi-nn in a threaded context. If a panic happens that leaves all other threads alive and running and just this thread exits. For that it may be worthwhile, for now at least, to catch panics here as well and abort the whole process if one is caught.</p>\n</blockquote>",
        "id": 324128400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674844754
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 324797196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675120712
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 324810248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675127706
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 324811719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675128772
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325021462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675201180
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325021852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675201298
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1278128391\">PR review</a>.</p>",
        "id": 325031555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675204752
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1092556310\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this type can be dropped as well? (a cursory look and I'm not seeing anywhere else it's used at least)</p>\n</blockquote>",
        "id": 325031557,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675204752
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1278128947\">PR review</a>.</p>",
        "id": 325031627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675204789
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1092556720\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this perhaps <code>s/Error/thread panicked/</code> to clearly indicate a panic happen?</p>\n</blockquote>",
        "id": 325031628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675204789
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325053556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675215390
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325062182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675221842
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325192473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675266057
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> as ready for review.</p>",
        "id": 325205562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675269359
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1279475529\">PR review</a>.</p>",
        "id": 325206085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675269495
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1279475529\">PR review</a>.</p>",
        "id": 325206086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675269495
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093468136\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this be <code>module</code> with something like this in the body of the function:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// silence unused warning as it's only used with wasi-threads</span>\n<span class=\"nb\">drop</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 325206087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675269495
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093470276\">PR review comment</a>:</p>\n<blockquote>\n<p>Could the <code>Arc</code> type be imported into this module? (it's used in a number of places and should avoid the <code>std::sync::...</code> prefix)</p>\n<p>Additionally can you leave some comments here for what's going on? Basically something along the lines of how <code>wasi-crypto</code> the implementation is not ready for threads yet so the <code>get_mut</code> implementation here will succeed only if a thread hasn't been spawned. If a thread is spawned, however, this will panic and indicate to the user that work needs to happen to integrate wasi-crypto and threads.</p>\n<p>(and then a comment on <code>wasi-nn</code> below referring to this comment as well)</p>\n</blockquote>",
        "id": 325206088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675269495
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325223320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675272675
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325236880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675276199
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325250434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675279889
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325286351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675292620
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280037803\">PR review</a>.</p>",
        "id": 325289306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294055
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093846444\">PR review comment</a>:</p>\n<blockquote>\n<p>bikeshed, but I think NOTSUP is a more appropriate error code for this</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            Err(Error::not_supported())\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 325289307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294056
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280038951\">PR review</a>.</p>",
        "id": 325290621,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294716
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093847695\">PR review comment</a>:</p>\n<blockquote>\n<p>Same</p>\n</blockquote>",
        "id": 325290622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294716
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280038951\">PR review</a>.</p>",
        "id": 325290623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294716
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093847496\">PR review comment</a>:</p>\n<blockquote>\n<p>Could we return an error instead of panic if for some reason this lock is poisoned? </p>\n</blockquote>",
        "id": 325290624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294716
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093852130\">PR review comment</a>:</p>\n<blockquote>\n<p>Terminating the parent process is a really heavy hammer and makes this whole crate unsuitable for use in multi-tenant embeddings. It would be helpful to understand exactly why this crate had to make that design choice, and to please note it somewhere high level, like in a crate-level README</p>\n</blockquote>",
        "id": 325290626,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294716
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093851340\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd reword \"CLI usage\" to something like its \"for usage where it is acceptable for wasmtime failures to terminate the parent process, such as in the wasmtime CLI\", and say something like \"not suitable for use in multi-tenant embeddings\" as a more obvious warning? Could we hide the presence of this function behind an off-by-default cargo feature, to give more assurance to multi-tenant embeddings that they are safe from this?</p>\n</blockquote>",
        "id": 325290628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675294716
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325297440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675298575
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280101882\">PR review</a>.</p>",
        "id": 325297495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675298613
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093891273\">PR review comment</a>:</p>\n<blockquote>\n<p>Ended up doing this anyways in this PR to try to get CI to go green.</p>\n</blockquote>",
        "id": 325297496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675298613
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280110351\">PR review</a>.</p>",
        "id": 325298758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675299368
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093897679\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, but which: <code>perm</code>? <code>invalid_argument</code>? <code>not_supported</code>? I don't know if any fit well.</p>\n</blockquote>",
        "id": 325298759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675299368
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280115266\">PR review</a>.</p>",
        "id": 325299062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675299570
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093899843\">PR review comment</a>:</p>\n<blockquote>\n<p>Also, if the <code>Mutex</code> ever does get poisoned (which doesn't seem likely to happen?) wouldn't we want to crash Wasmtime to figure out what is going on rather than letting the Wasm module proceed?</p>\n</blockquote>",
        "id": 325299063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675299571
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 325300636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675300771
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280139053\">PR review</a>.</p>",
        "id": 325300873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675300961
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093915837\">PR review comment</a>:</p>\n<blockquote>\n<p>Hopefully this hammer is only temporary; @alexcrichton and I had discussed some early thoughts on how we might shut down all of the threads when necessary. It is complex to do so, though, so providing experimental wasi-threads access sooner for some users seemed more valuable than solving the problem and waiting longer.</p>\n</blockquote>",
        "id": 325300874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675300961
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280150579\">PR review</a>.</p>",
        "id": 325302277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675302130
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1093925602\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, nevermind, I guess I didn't think this through - this is a per-ctx mutex so it would only get poisoned if another thread panicked already, so panicking more in the same store is fine.</p>\n</blockquote>",
        "id": 325302279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675302130
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1280155245\">PR review</a>.</p>",
        "id": 325302723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675302596
    },
    {
        "content": "<p>tschneidereit submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1287807514\">PR review</a>.</p>",
        "id": 326435929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675796506
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a> from <code>wasi-threads-revisited</code> to <code>main</code>.</p>",
        "id": 326448334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675800641
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484\">PR #5484</a>.</p>",
        "id": 326463938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675806186
    },
    {
        "content": "<p>yamt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1290746559\">PR review</a>.</p>",
        "id": 326769114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675935943
    },
    {
        "content": "<p>yamt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1290746559\">PR review</a>.</p>",
        "id": 326769115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675935943
    },
    {
        "content": "<p>yamt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1101200012\">PR review comment</a>:</p>\n<blockquote>\n<p>if i read this correctly, this <code>wait</code> would always return 1 immediately without sleeping.</p>\n</blockquote>",
        "id": 326769116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675935943
    },
    {
        "content": "<p>yamt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1101198113\">PR review comment</a>:</p>\n<blockquote>\n<p>unused local</p>\n</blockquote>",
        "id": 326769117,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675935943
    },
    {
        "content": "<p>yamt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1101201739\">PR review comment</a>:</p>\n<blockquote>\n<p>this function doesn't seem thread-safe.</p>\n</blockquote>",
        "id": 326769118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675935943
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1293823116\">PR review</a>.</p>",
        "id": 327125438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676055634
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1103123333\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yeah, this is a mistake due to a refactoring: originally I intended the <code>i</code> local (unused now) to keep track of the expected values but that was lost as I changed things. I'll add a note to fix this...</p>\n</blockquote>",
        "id": 327125439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676055635
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1293825808\">PR review</a>.</p>",
        "id": 327125870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676055756
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1103125091\">PR review comment</a>:</p>\n<blockquote>\n<p>Are you thinking about atomic stores or a lock around the <code>$__wasi_fd_write</code> call? (Recall that <code>wasi-common</code> has some internal locking).</p>\n</blockquote>",
        "id": 327125871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676055756
    },
    {
        "content": "<p>yamt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1294428725\">PR review</a>.</p>",
        "id": 327191127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676093273
    },
    {
        "content": "<p>yamt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1103529651\">PR review comment</a>:</p>\n<blockquote>\n<p>no. it's about the linear memory used for iovec.</p>\n</blockquote>",
        "id": 327191129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676093273
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#pullrequestreview-1312293273\">PR review</a>.</p>",
        "id": 336362969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677194907
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5484#discussion_r1116352591\">PR review comment</a>:</p>\n<blockquote>\n<p>Fixed in #5858</p>\n</blockquote>",
        "id": 336362970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677194907
    }
]