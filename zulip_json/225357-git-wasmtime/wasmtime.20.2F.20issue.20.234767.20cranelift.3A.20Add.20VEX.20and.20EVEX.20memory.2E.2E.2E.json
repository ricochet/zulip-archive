[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>We should add the memory encodings for VEX and EVEX instructions.</p>\n<h4>Benefit</h4>\n<p>Better codegen.</p>\n<h4>Implementation</h4>\n<ul>\n<li>Add the encodings in the VEX and EVEX encoders</li>\n<li>Fix lower.isle as needed to produce the new instructions</li>\n</ul>\n<h4>Alternatives</h4>\n<p>We could keep doing what we do now and have worse codegen.</p>\n<p>cc: @abrown </p>\n</blockquote>",
        "id": 295024658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661340068
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>We should add the memory encodings for VEX and EVEX instructions.</p>\n<h4>Benefit</h4>\n<p>Better codegen.</p>\n<h4>Implementation</h4>\n<ul>\n<li>Add the encodings in the VEX and EVEX encoders</li>\n<li>Fix lower.isle as needed to produce the new instructions</li>\n</ul>\n<h4>Alternatives</h4>\n<p>We could keep doing what we do now and have worse codegen.</p>\n<p>cc: @abrown </p>\n</blockquote>",
        "id": 296847562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133803
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>We should add the memory encodings for VEX and EVEX instructions.</p>\n<h4>Benefit</h4>\n<p>Better codegen.</p>\n<h4>Implementation</h4>\n<ul>\n<li>Add the encodings in the VEX and EVEX encoders</li>\n<li>Fix lower.isle as needed to produce the new instructions</li>\n</ul>\n<h4>Alternatives</h4>\n<p>We could keep doing what we do now and have worse codegen.</p>\n<p>cc: @abrown </p>\n</blockquote>",
        "id": 296847563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133803
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>We should add the memory encodings for VEX and EVEX instructions.</p>\n<h4>Benefit</h4>\n<p>Better codegen.</p>\n<h4>Implementation</h4>\n<ul>\n<li>Add the encodings in the VEX and EVEX encoders</li>\n<li>Fix lower.isle as needed to produce the new instructions</li>\n</ul>\n<h4>Alternatives</h4>\n<p>We could keep doing what we do now and have worse codegen.</p>\n<p>cc: @abrown </p>\n</blockquote>",
        "id": 296847565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662133803
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767#issuecomment-1431758415\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p>We discussed this a little bit in today's cranelift meeting. While it would be nice for cranelift, @cfallin pointed out that it would be slightly less relevant for wasmtime since the instructions that use these memory encodings have alignment restrictions, and WebAssembly has alignment <em>hints</em> but no guarantees, so we can't use it there.</p>\n</blockquote>",
        "id": 328069660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676482868
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767#issuecomment-1432149408\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p>I discussed this with @cfallin a bit and wanted to correct some misconceptions. As I did some digging in the x86 manual, the SSE documentation (section 10.3) does indicate that memory operands must be aligned:</p>\n<blockquote>\n<p>The address of a 128-bit packed memory operand must be aligned on a 16-byte boundary, except in the following<br>\ncases:<br>\n• The MOVUPS instruction supports unaligned accesses.<br>\n• Scalar instructions that use a 4-byte memory operand that is not subject to alignment requirements.</p>\n</blockquote>\n<p>But the same restriction does not apply for VEX (read AVX) and EVEX (AVX-512) instructions:</p>\n<blockquote>\n<p>Memory alignment requirements on EVEX-encoded SIMD instructions are similar to VEX-encoded SIMD instructions. Memory alignment applies to EVEX-encoded SIMD instructions in three categories:<br>\n• Explicitly-aligned SIMD load and store instructions accessing 64 bytes of memory with EVEX prefix encoded<br>\nvector length of 512 bits (e.g., VMOVAPD, VMOVAPS, VMOVDQA, etc.). These instructions always require the<br>\nmemory address to be aligned on a 64-byte boundary.15-14 Vol. 1<br>\nPROGRAMMING WITH INTEL® AVX-512<br>\n• Explicitly-unaligned SIMD load and store instructions accessing 64 bytes or less of data from memory (e.g.,<br>\nVMOVUPD, VMOVUPS, VMOVDQU, VMOVQ, VMOVD, etc.). These instructions do not require the memory<br>\naddress to be aligned on a natural vector-length byte boundary.<br>\n• Most arithmetic and data processing instructions encoded using EVEX support memory access semantics.<br>\nWhen these instructions access from memory, there are no alignment restrictions.</p>\n</blockquote>\n<p>There are additional benefits to using VEX and EVEX encodings (e.g., using 3 registers) that @cfallin pointed out so I think this issue should still be considered. In fact, this is something I would be interested in helping out with (cc: @alexcrichton, who may have something already in progress).</p>\n</blockquote>",
        "id": 328120315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676500147
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767#issuecomment-1432270031\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p>I ended up giving this a stab in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5795\">https://github.com/bytecodealliance/wasmtime/pull/5795</a>, but it could very well be wrong! (I also didn't handle EVEX yet)</p>\n</blockquote>",
        "id": 328132754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676506421
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767#issuecomment-1602803193\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p>The final bit of EVEX was done in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6416\">https://github.com/bytecodealliance/wasmtime/pull/6416</a>, so I think this is done now.</p>\n</blockquote>",
        "id": 368595164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687446239
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4767\">issue #4767</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<h4>Feature</h4>\n<p>We should add the memory encodings for VEX and EVEX instructions.</p>\n<h4>Benefit</h4>\n<p>Better codegen.</p>\n<h4>Implementation</h4>\n<ul>\n<li>Add the encodings in the VEX and EVEX encoders</li>\n<li>Fix lower.isle as needed to produce the new instructions</li>\n</ul>\n<h4>Alternatives</h4>\n<p>We could keep doing what we do now and have worse codegen.</p>\n<p>cc: @abrown </p>\n</blockquote>",
        "id": 368595174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687446240
    }
]