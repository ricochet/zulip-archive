[
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1603\">issue #1603</a>:</p>\n<blockquote>\n<p>This is an issue specific for this repository spawned from <a href=\"https://github.com/bytecodealliance/wasmtime-py/issues/2\">https://github.com/bytecodealliance/wasmtime-py/issues/2</a>. Unfortunately it is not possible to virtualize WASI imports and functionality today where the virtualization may eventually delegate to the original implementations. The reason for this has to do with how the original module's linear memory makes its way to the wasi instance. Today this is done via the <code>Caller</code> structure, but this is brittle because once virtualized your <code>Caller</code> is different.</p>\n<p>AFAIK we don't have a great answer for this today until we can figure out how to create a WASI instance with a memory or something like that.</p>\n</blockquote>",
        "id": 437914690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715307793
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1603#issuecomment-2103739969\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1603\">issue #1603</a>:</p>\n<blockquote>\n<p>This was a major design decision for the component model, so closing.</p>\n</blockquote>",
        "id": 437914691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715307794
    }
]