[
    {
        "content": "<p><a href=\"https://github.com/candymate\">candymate</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145\">Issue #8145</a>.</p>",
        "id": 426675863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710479511
    },
    {
        "content": "<p><a href=\"https://github.com/candymate\">candymate</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145\">Issue #8145</a>.</p>",
        "id": 426675864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710479511
    },
    {
        "content": "<p>candymate opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145\">issue #8145</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_nan_canonicalization</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// doesn't matter: both options show the same result</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">r#\"</span>\n<span class=\"s\">    (module</span>\n<span class=\"s\">        (type (;0;) (func (param i64) (result i32)))</span>\n<span class=\"s\">        (import \"mem\" \"mem\" (memory (;0;) 1))</span>\n<span class=\"s\">        (func (;0;) (type 0) (param i64) (result i32)</span>\n<span class=\"s\">          local.get 0</span>\n<span class=\"s\">          f64.reinterpret_i64</span>\n<span class=\"s\">          f32.demote_f64                ;; &lt;---- only this is needed to trigger the bug!</span>\n<span class=\"s\">          i32.reinterpret_f32)</span>\n<span class=\"s\">        (export \"main\" (func 0)))</span>\n<span class=\"s\">    \"#</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MemoryType</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mh\">0xfffefdfccccdcecf</span><span class=\"k\">u64</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">F32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level None: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-wrapper\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n#<span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">keys</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">their</span><span class=\"w\"> </span><span class=\"n\">definitions</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n#<span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"18.0.3\"</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"../wasmtime/crates/wasmtime\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span>#<span class=\"w\"> </span><span class=\"n\">commit</span>: <span class=\"mi\">5</span><span class=\"n\">b576da4235e3df1bc4385644644157f720e5f21</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">latest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Date</span>: <span class=\"nc\">Thu</span><span class=\"w\"> </span><span class=\"n\">Mar</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"mi\">21</span>:<span class=\"mi\">34</span>:<span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">0500</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to reproduce</h3>\n<p>Compare the following executions:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n<span class=\"o\">-----</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">riscv64gc</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n</code></pre></div>\n<p>QEMU run options I'm currently using are the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n<span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n<span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">riscv64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"n\">rv64</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">vlen</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">,</span><span class=\"n\">vext_spec</span><span class=\"o\">=</span><span class=\"n\">v1</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">zba</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbb</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbs</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbc</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbkb</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zcb</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zicond</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">riscv64gc</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Results from x64, aarch64, and s390x should be the value <code>0x7fc00000</code> (or <code>0xffc00000</code>) due to NaN canonicalization</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">(</span><span class=\"mi\">2143289344</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>Execution results in a wrong value <code>-528410</code>, which is <code>0xfff7efe6</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">528410</span><span class=\"p\">)]</span>\n</code></pre></div>\n<p>However, RISC-V64 shows the correct result <code>0x7fc00000</code>, which is a canonicalized NaN value:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">(</span><span class=\"mi\">2143289344</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<ul>\n<li>wasmtime version<ul>\n<li>commit: 5b576da4235e3df1bc4385644644157f720e5f21(current latest, Date: Thu Mar 14 21:34:04 2024 -0500)</li>\n<li>However, also checked on v18.0.3</li>\n</ul>\n</li>\n<li>Operating system &amp; architecture: Ubuntu 22.04.3 LTS, Arch: x86_64</li>\n<li>QEMU version: all architectures (aarch64, s390x, riscv64) in <code>version 8.2.1 (v8.2.1)</code></li>\n</ul>\n<h3>Extra Info</h3>\n<ul>\n<li>Having only <code>f32.demote_f64</code> is enough to expose the semantic difference</li>\n<li><code>cranelift_nan_canonicalization</code> option doesn't change the result</li>\n<li>Uploading as public (not a security vuln.) since the bug only exhibits a semantic difference and I don't think this can cause a security impact. Also, this is related to <code>cranelift_nan_canonicalization</code> flag, which is <code>false</code> by default.<br>\n</li>\n</ul>\n</blockquote>",
        "id": 426675865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710479512
    },
    {
        "content": "<p>candymate <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145#issuecomment-1998953282\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145\">issue #8145</a>:</p>\n<blockquote>\n<p>I'm not sure which side contains the problem. (RISC-V <em>vs.</em> all the other architectures). According to the WebAssembly specifications, both results look fine. However, I expected <code>cranelift_nan_canonicalization</code> flag to canonicalize the NaN value computed from <code>f32.demote_f64</code>.</p>\n<p>Specifications:</p>\n<ul>\n<li><a href=\"https://webassembly.github.io/spec/core/exec/numerics.html#xref-exec-numerics-op-demote-mathrm-demote-m-n-z\">https://webassembly.github.io/spec/core/exec/numerics.html#xref-exec-numerics-op-demote-mathrm-demote-m-n-z</a></li>\n<li><a href=\"https://webassembly.github.io/spec/core/exec/numerics.html#nan-propagation\">https://webassembly.github.io/spec/core/exec/numerics.html#nan-propagation</a></li>\n</ul>\n</blockquote>",
        "id": 426676329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710479910
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145#issuecomment-1999885216\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145\">issue #8145</a>:</p>\n<blockquote>\n<p>Thanks, as always, for the report!</p>\n<p>The NaN canonicalization pass in cranelift has an <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5b576da4235e3df1bc4385644644157f720e5f21/cranelift/codegen/src/nan_canonicalization.rs#L33-L53\">allow-listed set of opcodes</a> which get a canonicalization sequence inserted and demotion is not one of those. I believe the correct answer pops out on risc-v because <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7322\">risc-v doesn't need nan canonicalization as it natively does it</a>, but that explains why the other platforms are in error here.</p>\n<p>Looks like we need to add another opcode to that list...</p>\n</blockquote>",
        "id": 426764711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710515740
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8145\">issue #8145</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_nan_canonicalization</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// doesn't matter: both options show the same result</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">r#\"</span>\n<span class=\"s\">    (module</span>\n<span class=\"s\">        (type (;0;) (func (param i64) (result i32)))</span>\n<span class=\"s\">        (import \"mem\" \"mem\" (memory (;0;) 1))</span>\n<span class=\"s\">        (func (;0;) (type 0) (param i64) (result i32)</span>\n<span class=\"s\">          local.get 0</span>\n<span class=\"s\">          f64.reinterpret_i64</span>\n<span class=\"s\">          f32.demote_f64                ;; &lt;---- only this is needed to trigger the bug!</span>\n<span class=\"s\">          i32.reinterpret_f32)</span>\n<span class=\"s\">        (export \"main\" (func 0)))</span>\n<span class=\"s\">    \"#</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MemoryType</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mh\">0xfffefdfccccdcecf</span><span class=\"k\">u64</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">F32</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level None: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-wrapper\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n#<span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">keys</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">their</span><span class=\"w\"> </span><span class=\"n\">definitions</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n#<span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"18.0.3\"</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"../wasmtime/crates/wasmtime\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span>#<span class=\"w\"> </span><span class=\"n\">commit</span>: <span class=\"mi\">5</span><span class=\"n\">b576da4235e3df1bc4385644644157f720e5f21</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">latest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Date</span>: <span class=\"nc\">Thu</span><span class=\"w\"> </span><span class=\"n\">Mar</span><span class=\"w\"> </span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"mi\">21</span>:<span class=\"mi\">34</span>:<span class=\"mi\">04</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">0500</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to reproduce</h3>\n<p>Compare the following executions:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n<span class=\"o\">-----</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">riscv64gc</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n</code></pre></div>\n<p>QEMU run options I'm currently using are the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n<span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n<span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">riscv64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"n\">rv64</span><span class=\"p\">,</span><span class=\"n\">v</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">vlen</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">,</span><span class=\"n\">vext_spec</span><span class=\"o\">=</span><span class=\"n\">v1</span><span class=\"p\">.</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">zba</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbb</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbs</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbc</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zbkb</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zcb</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"p\">,</span><span class=\"n\">zicond</span><span class=\"o\">=</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">riscv64gc</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Results from x64, aarch64, and s390x should be the value <code>0x7fc00000</code> (or <code>0xffc00000</code>) due to NaN canonicalization</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">(</span><span class=\"mi\">2143289344</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>Execution results in a wrong value <code>-528410</code>, which is <code>0xfff7efe6</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">528410</span><span class=\"p\">)]</span>\n</code></pre></div>\n<p>However, RISC-V64 shows the correct result <code>0x7fc00000</code>, which is a canonicalized NaN value:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">(</span><span class=\"mi\">2143289344</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<ul>\n<li>wasmtime version<ul>\n<li>commit: 5b576da4235e3df1bc4385644644157f720e5f21(current latest, Date: Thu Mar 14 21:34:04 2024 -0500)</li>\n<li>However, also checked on v18.0.3</li>\n</ul>\n</li>\n<li>Operating system &amp; architecture: Ubuntu 22.04.3 LTS, Arch: x86_64</li>\n<li>QEMU version: all architectures (aarch64, s390x, riscv64) in <code>version 8.2.1 (v8.2.1)</code></li>\n</ul>\n<h3>Extra Info</h3>\n<ul>\n<li>Having only <code>f32.demote_f64</code> is enough to expose the semantic difference</li>\n<li><code>cranelift_nan_canonicalization</code> option doesn't change the result</li>\n<li>Uploading as public (not a security vuln.) since the bug only exhibits a semantic difference and I don't think this can cause a security impact. Also, this is related to <code>cranelift_nan_canonicalization</code> flag, which is <code>false</code> by default.<br>\n</li>\n</ul>\n</blockquote>",
        "id": 426778083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710519628
    }
]