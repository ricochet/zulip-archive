[
    {
        "content": "<p>sunfishcode opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">PR #4967</a> from <code>sunfishcode/open-dir-or-not</code> to <code>main</code>:</p>\n<blockquote>\n<p><code>O_DIRECTORY</code> says that a directory is required, but <code>O_DIRECTORY</code> is not required for opening directories. To implement this on top of the current APIs, use <code>open_dir</code> to try to open a directory first, and then fall back to trying to open it as a file if that fails.</p>\n<p>In the future, we may be able to simplify this code even more, using [<code>maybe_dir</code>], which is needed to allow Windows to be able to open a directory, though it needs <a href=\"https://github.com/bytecodealliance/cap-std/issues/277\">bytecodealliance/cap-std#277</a> for Windows.</p>\n<p>The testcase here is the testcase from #4947.</p>\n<p>[<code>maybe_dir</code>]: <a href=\"https://docs.rs/cap-fs-ext/latest/cap_fs_ext/struct.OpenOptions.html#method.maybe_dir`\">https://docs.rs/cap-fs-ext/latest/cap_fs_ext/struct.OpenOptions.html#method.maybe_dir`</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 300925467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664242491
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">PR #4967</a> from <code>sunfishcode/open-dir-or-not</code> to <code>main</code>.</p>",
        "id": 301061817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664297769
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1122698528\">PR review</a>.</p>",
        "id": 301118032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664312999
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1122698528\">PR review</a>.</p>",
        "id": 301118033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664312999
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r981716035\">PR review comment</a>:</p>\n<blockquote>\n<p>It looks like the error handling in this crate can benefit from quite some refactoring as this does not look like a maintainable way to match on errors.</p>\n<p>Note, that this gets much worse for external users of this crate providing e.g. multiple <code>WasiFile</code> or <code>WasiDir</code> implementations, since users must return <code>wasi-common::Error</code> constructed internally from an <code>ErrorKind</code> in custom implementations or a few other special cases, e.g. from <a href=\"https://github.com/bytecodealliance/wasmtime/blob/29c7de73401347af6d8c7111bdb7a11f1b04c3b7/crates/wasi-common/src/snapshots/preview_1.rs#L48-L64\">https://github.com/bytecodealliance/wasmtime/blob/29c7de73401347af6d8c7111bdb7a11f1b04c3b7/crates/wasi-common/src/snapshots/preview_1.rs#L48-L64</a>, anything else results in a trap and terminates execution.<br>\nEvery assertion on the error kind now requires a downcast and this runtime reflection step can fail if e.g. the <code>wasi-common</code> crate changes the set of specific error types returned <em>or</em> downcasted internally on update.</p>\n<p>So perhaps these utilities should actually be public to expose them to users who may need to match on the error kind from outside this crate?</p>\n</blockquote>",
        "id": 301118034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664312999
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1122698528\">PR review</a>.</p>",
        "id": 301118485,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664313204
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1122780550\">PR review</a>.</p>",
        "id": 301127786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664317416
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r981773375\">PR review comment</a>:</p>\n<blockquote>\n<p>I agree that the current code is not great. It sounds like another way to approach this would be to get rid of the <code>anyhow</code> and downcasting altogether and just use an enum. I may be up for doing the work for this refactoring, but in this PR I'd like to focus on just fixing the underlying bug first, and we can figure out refactoring separately.<br>\n</p>\n</blockquote>",
        "id": 301127787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664317416
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">PR #4967</a> from <code>sunfishcode/open-dir-or-not</code> to <code>main</code>.</p>",
        "id": 301127931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664317469
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1122792471\">PR review</a>.</p>",
        "id": 301128880,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664317928
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r981781905\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, I agree that does not belong in this PR :)<br>\nAnother option could be an associated <code>type Error: AsRef&lt;ErrorKind&gt;</code> or <code>type Error: AsRef&lt;Errno&gt;</code>, whichever is the most applicable.</p>\n</blockquote>",
        "id": 301128881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664317928
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1123466648\">PR review</a>.</p>",
        "id": 301204226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664362744
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1123466648\">PR review</a>.</p>",
        "id": 301204227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664362744
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r982252792\">PR review comment</a>:</p>\n<blockquote>\n<p>(nit, I suppose?) I think this if statement is way too complex and hard to read, which is exactly why I introduced <a href=\"https://github.com/rvolosatovs/wasmtime/blob/5ffb7f8990d1562bf9a1b6b29e3faadc934d024f/crates/wasi-common/src/snapshots/preview_1.rs#L895-L898\">https://github.com/rvolosatovs/wasmtime/blob/5ffb7f8990d1562bf9a1b6b29e3faadc934d024f/crates/wasi-common/src/snapshots/preview_1.rs#L895-L898</a> in #4947 </p>\n</blockquote>",
        "id": 301204228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664362744
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r982253400\">PR review comment</a>:</p>\n<blockquote>\n<p>this is very difficult to read and comprehend especially due to the nesting</p>\n</blockquote>",
        "id": 301204229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664362744
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r982256350\">PR review comment</a>:</p>\n<blockquote>\n<p>You mentioned a race condition in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4947/files#r980506965\">https://github.com/bytecodealliance/wasmtime/pull/4947/files#r980506965</a> as reasoning for this PR, where the underlying filetype stored under a path could change between the calls, but doesn't this suffer from exact same race condition, where:</p>\n<ol>\n<li>initial <code>open_dir</code> fails on path <code>A</code> with <code>ENOTDIR</code></li>\n<li>in the meantime, <code>A</code> is replaced by a directory</li>\n<li><code>open_file</code> fails, because <code>A</code> is now a directory<br>\n?</li>\n</ol>\n</blockquote>",
        "id": 301204231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664362745
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">PR #4967</a> from <code>sunfishcode/open-dir-or-not</code> to <code>main</code>.</p>",
        "id": 301544218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664491520
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r984119384\">PR review comment</a>:</p>\n<blockquote>\n<p>That's a good point. I need to look at this more closely.</p>\n</blockquote>",
        "id": 301554848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664498386
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1126130456\">PR review</a>.</p>",
        "id": 301554849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664498386
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r989046674\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        let non_dir_oflags = oflags.intersects(OFlags::CREATE | OFlags::EXCLUSIVE | OFlags::TRUNCATE);\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 302651410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665062779
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1132999613\">PR review</a>.</p>",
        "id": 302651413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665062779
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#pullrequestreview-1132999613\">PR review</a>.</p>",
        "id": 302651416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665062781
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#discussion_r989045492\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        let write = file_caps\n            .intersects(FileCaps::WRITE | FileCaps::ALLOCATE | FileCaps::FILESTAT_SET_SIZE);\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 302651417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665062781
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">PR #4967</a> from <code>sunfishcode/open-dir-or-not</code> to <code>main</code>.</p>",
        "id": 323092745,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674499680
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">PR #4967</a> from <code>sunfishcode/open-dir-or-not</code> to <code>main</code>.</p>",
        "id": 323111478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1674505561
    },
    {
        "content": "<p>pchickey closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">PR #4967</a>.</p>",
        "id": 351692862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682098437
    }
]