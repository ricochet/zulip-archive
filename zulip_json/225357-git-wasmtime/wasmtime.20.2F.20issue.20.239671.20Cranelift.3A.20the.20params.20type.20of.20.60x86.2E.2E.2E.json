[
    {
        "content": "<p>abc767234318 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671\">issue #9671</a>:</p>\n<blockquote>\n<p>I constructed a clif file.<br>\n<a href=\"https://github.com/user-attachments/files/17899651/multi_func155.zip\">multi_func155.zip</a><br>\nI used the following command to run it.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">multi_func155</span><span class=\"p\">.</span><span class=\"n\">clif</span>\n</code></pre></div>\n<p>But I got the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cases</span><span class=\"o\">/</span><span class=\"n\">multi_func155</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Compilation</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">should</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">v20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x86_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">I16X8</span><span class=\"p\">)</span><span class=\"err\">`</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">file</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<p>The definition of <code>x86_pmaddubsw</code> is as following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// An instruction with equivalent semantics to `pmaddubsw` on x86.</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// This instruction will take signed bytes from the first argument and</span>\n<span class=\"sd\">/// multiply them against unsigned bytes in the second argument. Adjacent</span>\n<span class=\"sd\">/// pairs are then added, with saturating, to a 16-bit value and are packed</span>\n<span class=\"sd\">/// into the result.</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// Inputs:</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// - x: A SIMD vector type consisting of 16 lanes of 8-bit integers</span>\n<span class=\"sd\">/// - y: A SIMD vector type consisting of 16 lanes of 8-bit integers</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// Outputs:</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// - a: A SIMD vector with exactly 8 lanes of 16-bit values</span>\n<span class=\"cp\">#[allow(non_snake_case)]</span>\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">x86_pmaddubsw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ir</span><span class=\"p\">::</span><span class=\"n\">Value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ir</span><span class=\"p\">::</span><span class=\"n\">Value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Value</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dfg</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">(</span><span class=\"n\">Opcode</span><span class=\"p\">::</span><span class=\"n\">X86Pmaddubsw</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">INVALID</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">dfg</span><span class=\"p\">.</span><span class=\"n\">first_result</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And lower rule of <code>x86_pmaddubsw</code> is as following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Rules</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">x86_pmaddubsw</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">has_type</span><span class=\"w\"> </span><span class=\"cp\">$I16X8</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">use_ssse3</span><span class=\"p\">))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">x64_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">))</span>\n</code></pre></div>\n</blockquote>",
        "id": 484234231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732523329
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671#issuecomment-2497304417\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671\">issue #9671</a>:</p>\n<blockquote>\n<p>You likely need to enable <code>use_ssse3</code>: as you've shown in the lowering rule, we only have a lowering if that instruction set extension is enabled.</p>\n<p>I'm not sure if <code>clif-util run</code> has a way to set these options, but at least <code>clif-util compile</code> does, using <code>--set use_ssse3=true</code>.</p>\n</blockquote>",
        "id": 484239224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732524799
    },
    {
        "content": "<p>abc767234318 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671#issuecomment-2497328833\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671\">issue #9671</a>:</p>\n<blockquote>\n<blockquote>\n<p>You likely need to enable <code>use_ssse3</code>: as you've shown in the lowering rule, we only have a lowering if that instruction set extension is enabled.</p>\n<p>I'm not sure if <code>clif-util run</code> has a way to set these options, but at least <code>clif-util compile</code> does, using <code>--set use_ssse3=true</code>.</p>\n</blockquote>\n<p>Are <code>x</code> and <code>y</code> of type <code>I8x16</code> or <code>i16x8</code>? The definition and lowering rule above look different.</p>\n</blockquote>",
        "id": 484241224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732525320
    },
    {
        "content": "<p>abc767234318 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671\">issue #9671</a>:</p>\n<blockquote>\n<p>I constructed a clif file.<br>\n<a href=\"https://github.com/user-attachments/files/17899651/multi_func155.zip\">multi_func155.zip</a><br>\nI used the following command to run it.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">multi_func155</span><span class=\"p\">.</span><span class=\"n\">clif</span>\n</code></pre></div>\n<p>But I got the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cases</span><span class=\"o\">/</span><span class=\"n\">multi_func155</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Compilation</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">should</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">v20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x86_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">I16X8</span><span class=\"p\">)</span><span class=\"err\">`</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">file</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<p>The definition of <code>x86_pmaddubsw</code> is as following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// An instruction with equivalent semantics to `pmaddubsw` on x86.</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// This instruction will take signed bytes from the first argument and</span>\n<span class=\"sd\">/// multiply them against unsigned bytes in the second argument. Adjacent</span>\n<span class=\"sd\">/// pairs are then added, with saturating, to a 16-bit value and are packed</span>\n<span class=\"sd\">/// into the result.</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// Inputs:</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// - x: A SIMD vector type consisting of 16 lanes of 8-bit integers</span>\n<span class=\"sd\">/// - y: A SIMD vector type consisting of 16 lanes of 8-bit integers</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// Outputs:</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// - a: A SIMD vector with exactly 8 lanes of 16-bit values</span>\n<span class=\"cp\">#[allow(non_snake_case)]</span>\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">x86_pmaddubsw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ir</span><span class=\"p\">::</span><span class=\"n\">Value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ir</span><span class=\"p\">::</span><span class=\"n\">Value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Value</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dfg</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">(</span><span class=\"n\">Opcode</span><span class=\"p\">::</span><span class=\"n\">X86Pmaddubsw</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">INVALID</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">dfg</span><span class=\"p\">.</span><span class=\"n\">first_result</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And lowering rule of <code>x86_pmaddubsw</code> is as following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Rules</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">x86_pmaddubsw</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">has_type</span><span class=\"w\"> </span><span class=\"cp\">$I16X8</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">use_ssse3</span><span class=\"p\">))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">x64_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">))</span>\n</code></pre></div>\n</blockquote>",
        "id": 484241363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732525352
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671#issuecomment-2498531602\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671\">issue #9671</a>:</p>\n<blockquote>\n<p>The lowering rule is checking the return type of the operator. The operator accepts <code>i8x16</code> and produces <code>i16x8</code>. The doc-comment and lowering rule look correct and consistent to me.</p>\n</blockquote>",
        "id": 484348326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732553274
    },
    {
        "content": "<p>abc767234318 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671\">issue #9671</a>:</p>\n<blockquote>\n<p>I constructed a clif file.<br>\n<a href=\"https://github.com/user-attachments/files/17899651/multi_func155.zip\">multi_func155.zip</a><br>\nI used the following command to run it.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">multi_func155</span><span class=\"p\">.</span><span class=\"n\">clif</span>\n</code></pre></div>\n<p>But I got the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cases</span><span class=\"o\">/</span><span class=\"n\">multi_func155</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Compilation</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"n\">feature</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">should</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">v20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">x86_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">I16X8</span><span class=\"p\">)</span><span class=\"err\">`</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">file</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<p>The definition of <code>x86_pmaddubsw</code> is as following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/// An instruction with equivalent semantics to `pmaddubsw` on x86.</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// This instruction will take signed bytes from the first argument and</span>\n<span class=\"sd\">/// multiply them against unsigned bytes in the second argument. Adjacent</span>\n<span class=\"sd\">/// pairs are then added, with saturating, to a 16-bit value and are packed</span>\n<span class=\"sd\">/// into the result.</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// Inputs:</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// - x: A SIMD vector type consisting of 16 lanes of 8-bit integers</span>\n<span class=\"sd\">/// - y: A SIMD vector type consisting of 16 lanes of 8-bit integers</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// Outputs:</span>\n<span class=\"sd\">///</span>\n<span class=\"sd\">/// - a: A SIMD vector with exactly 8 lanes of 16-bit values</span>\n<span class=\"cp\">#[allow(non_snake_case)]</span>\n<span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">x86_pmaddubsw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ir</span><span class=\"p\">::</span><span class=\"n\">Value</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">ir</span><span class=\"p\">::</span><span class=\"n\">Value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">Value</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dfg</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">Binary</span><span class=\"p\">(</span><span class=\"n\">Opcode</span><span class=\"p\">::</span><span class=\"n\">X86Pmaddubsw</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"p\">::</span><span class=\"n\">INVALID</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">dfg</span><span class=\"p\">.</span><span class=\"n\">first_result</span><span class=\"p\">(</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>And lowering rule of <code>x86_pmaddubsw</code> is as following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Rules</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">x86_pmaddubsw</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">has_type</span><span class=\"w\"> </span><span class=\"cp\">$I16X8</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">x86_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"k\">if</span><span class=\"o\">-</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">use_ssse3</span><span class=\"p\">))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">x64_pmaddubsw</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">))</span>\n</code></pre></div>\n</blockquote>",
        "id": 484419934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732585407
    },
    {
        "content": "<p>abc767234318 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671#issuecomment-2499400144\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9671\">issue #9671</a>:</p>\n<blockquote>\n<blockquote>\n<p>The lowering rule is checking the return type of the operator. The operator accepts <code>i8x16</code> and produces <code>i16x8</code>. The doc-comment and lowering rule look correct and consistent to me.</p>\n</blockquote>\n<p>Thank you very much. I will close this issue.</p>\n</blockquote>",
        "id": 484419935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1732585408
    }
]