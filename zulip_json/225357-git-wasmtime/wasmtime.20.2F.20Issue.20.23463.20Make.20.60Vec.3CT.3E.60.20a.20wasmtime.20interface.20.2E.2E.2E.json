[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/463#issuecomment-598888376\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/463#issuecomment-598888376\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/463\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/463\">Issue #463</a>:</p>\n<blockquote>\n<p>I'm going to now that we've <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1292\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1292\">temporarily removed interface types support</a>, but stay tuned to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/677\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/677\">https://github.com/bytecodealliance/wasmtime/issues/677</a> for future updates!</p>\n</blockquote>",
        "id": 190548057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584129441
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/463\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/463\">Issue #463</a>:</p>\n<blockquote>\n<p>As far as I can tell, there currently is no straightforward way to transfer <code>Vec&lt;T&gt;</code> types from a wasm module to the host. It would be desirable to let exported functions return other structured types, than <a href=\"https://docs.rs/wasmtime-interface-types/0.3.0/wasmtime_interface_types/enum.Value.html\" target=\"_blank\" title=\"https://docs.rs/wasmtime-interface-types/0.3.0/wasmtime_interface_types/enum.Value.html\">those already supported</a>, like so:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">#[wasmtime_rust::wasmtime]</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">trait</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">test1</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">f32</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">test2</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"kt\">f32</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">test3</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">CustomType</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[wasm_bindgen]</span><span class=\"w\"></span>\n<span class=\"k\">struct</span> <span class=\"nc\">CustomType</span><span class=\"p\">([</span><span class=\"kt\">f32</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">]);</span><span class=\"w\"></span>\n</pre></div>\n\n\n<p>The minimal implementation would add <code>Vec&lt;T&gt; where T: wasmtime_interface_types::Value</code> as a supported type. This would allow <code>CustomType</code> and other types to be serialized to <code>Vec&lt;u8&gt;</code> and passed through the ABI.</p>\n</blockquote>",
        "id": 190548059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584129441
    }
]