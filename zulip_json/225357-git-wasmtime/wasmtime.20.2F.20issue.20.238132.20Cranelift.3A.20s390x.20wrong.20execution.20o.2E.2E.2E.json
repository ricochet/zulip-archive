[
    {
        "content": "<p><a href=\"https://github.com/candymate\">candymate</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132\">Issue #8132</a>.</p>",
        "id": 426569359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710430612
    },
    {
        "content": "<p><a href=\"https://github.com/candymate\">candymate</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132\">Issue #8132</a>.</p>",
        "id": 426569360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710430613
    },
    {
        "content": "<p>candymate opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132\">issue #8132</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"nb\">None</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">r#\"</span>\n<span class=\"s\">    (module</span>\n<span class=\"s\">        (type (;0;) (func (param v128 v128 v128 v128 v128 v128 v128 v128 v128) (result v128)))</span>\n<span class=\"s\">        (import \"mem\" \"mem\" (memory (;0;) 1))</span>\n<span class=\"s\">        (func (;0;) (type 0) (param v128 v128 v128 v128 v128 v128 v128 v128 v128) (result v128)</span>\n<span class=\"s\">          local.get 5</span>\n<span class=\"s\">          local.get 8</span>\n<span class=\"s\">          i16x8.extmul_high_i8x16_s)</span>\n<span class=\"s\">        (export \"main\" (func 0)))</span>\n<span class=\"s\">    \"#</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MemoryType</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mh\">0xfffefdfccccdcecf807f7e7d00010203</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()),</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// not sure why - this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// not sure why - this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mh\">0x1e33ad29b5b0951d3c5c954764cd108d</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">())];</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level None: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-wrapper\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n#<span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">keys</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">their</span><span class=\"w\"> </span><span class=\"n\">definitions</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n#<span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"18.0.3\"</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"../wasmtime/crates/wasmtime\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span>#<span class=\"w\"> </span><span class=\"n\">commit</span>: <span class=\"mi\">5</span><span class=\"n\">a342c8b8610dfda97810ad0e9ec4f481aeb908a</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">latest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Date</span>:   <span class=\"nc\">Wed</span><span class=\"w\"> </span><span class=\"n\">Mar</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">16</span>:<span class=\"mi\">59</span>:<span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">0700</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to reproduce</h3>\n<p>Compare the following executions:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n</code></pre></div>\n<p>QEMU run options (s390x) I'm currently using is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>S390X result should be the value <code>0xffe2ff9a00f9ff5c0f3c0ff014e6fa73</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mi\">340131782231070605437920187635036781171</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>Execution results in a wrong value <code>0x73ffe00099fe70f1941551ee08f484</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mi\">602303900475006763381319891191133316</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<ul>\n<li>wasmtime version<ul>\n<li>commit: 5a342c8b8610dfda97810ad0e9ec4f481aeb908a (current latest, Date:   Wed Mar 13 16:59:43 2024 -0700)</li>\n<li>However, also checked on v18.0.3</li>\n</ul>\n</li>\n<li>Operating system &amp; architecture: Ubuntu 22.04.3 LTS, Arch: x86_64</li>\n<li>QEMU version: <code>qemu-s390x version 8.2.1 (v8.2.1)</code></li>\n</ul>\n<h3>Extra Info</h3>\n<ul>\n<li>The arguments that are unused are needed to expose the semantic difference</li>\n<li>Does not work on other architectures (x86_64, aarch64, riscv64)</li>\n<li>Uploading as public (not a security vuln.) since the target is not tier 1 (referring to <a href=\"https://docs.wasmtime.dev/security-what-is-considered-a-security-vulnerability.html\">https://docs.wasmtime.dev/security-what-is-considered-a-security-vulnerability.html</a> as @fitzgen informed me in #8131)</li>\n</ul>\n</blockquote>",
        "id": 426569369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710430613
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132#issuecomment-1997760856\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132\">issue #8132</a>:</p>\n<blockquote>\n<p>CC @uweigand </p>\n</blockquote>",
        "id": 426570963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710431053
    },
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the cranelift:area:s390x label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132\">Issue #8132</a>.</p>",
        "id": 426570984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710431060
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132\">Issue #8132</a>.</p>",
        "id": 426572942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710431640
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8132\">issue #8132</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"nb\">None</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">r#\"</span>\n<span class=\"s\">    (module</span>\n<span class=\"s\">        (type (;0;) (func (param v128 v128 v128 v128 v128 v128 v128 v128 v128) (result v128)))</span>\n<span class=\"s\">        (import \"mem\" \"mem\" (memory (;0;) 1))</span>\n<span class=\"s\">        (func (;0;) (type 0) (param v128 v128 v128 v128 v128 v128 v128 v128 v128) (result v128)</span>\n<span class=\"s\">          local.get 5</span>\n<span class=\"s\">          local.get 8</span>\n<span class=\"s\">          i16x8.extmul_high_i8x16_s)</span>\n<span class=\"s\">        (export \"main\" (func 0)))</span>\n<span class=\"s\">    \"#</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MemoryType</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mh\">0xfffefdfccccdcecf807f7e7d00010203</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()),</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// not sure why - this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"c1\">// not sure why - this is unused, but needed</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mh\">0x1e33ad29b5b0951d3c5c954764cd108d</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"n\">into</span><span class=\"p\">())];</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level None: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-wrapper\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n#<span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">keys</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">their</span><span class=\"w\"> </span><span class=\"n\">definitions</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n#<span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"18.0.3\"</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"../wasmtime/crates/wasmtime\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span>#<span class=\"w\"> </span><span class=\"n\">commit</span>: <span class=\"mi\">5</span><span class=\"n\">a342c8b8610dfda97810ad0e9ec4f481aeb908a</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">latest</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Date</span>:   <span class=\"nc\">Wed</span><span class=\"w\"> </span><span class=\"n\">Mar</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"mi\">16</span>:<span class=\"mi\">59</span>:<span class=\"mi\">43</span><span class=\"w\"> </span><span class=\"mi\">2024</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">0700</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to reproduce</h3>\n<p>Compare the following executions:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n</code></pre></div>\n<p>QEMU run options (s390x) I'm currently using is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">s390x</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>S390X result should be the value <code>0xffe2ff9a00f9ff5c0f3c0ff014e6fa73</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mi\">340131782231070605437920187635036781171</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>Execution results in a wrong value <code>0x73ffe00099fe70f1941551ee08f484</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">V128</span><span class=\"p\">(</span><span class=\"mi\">602303900475006763381319891191133316</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<ul>\n<li>wasmtime version<ul>\n<li>commit: 5a342c8b8610dfda97810ad0e9ec4f481aeb908a (current latest, Date:   Wed Mar 13 16:59:43 2024 -0700)</li>\n<li>However, also checked on v18.0.3</li>\n</ul>\n</li>\n<li>Operating system &amp; architecture: Ubuntu 22.04.3 LTS, Arch: x86_64</li>\n<li>QEMU version: <code>qemu-s390x version 8.2.1 (v8.2.1)</code></li>\n</ul>\n<h3>Extra Info</h3>\n<ul>\n<li>The arguments that are unused are needed to expose the semantic difference</li>\n<li>Does not work on other architectures (x86_64, aarch64, riscv64)</li>\n<li>Uploading as public (not a security vuln.) since the target is not tier 1 (referring to <a href=\"https://docs.wasmtime.dev/security-what-is-considered-a-security-vulnerability.html\">https://docs.wasmtime.dev/security-what-is-considered-a-security-vulnerability.html</a> as @fitzgen informed me in #8131)</li>\n</ul>\n</blockquote>",
        "id": 426606271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710441851
    }
]