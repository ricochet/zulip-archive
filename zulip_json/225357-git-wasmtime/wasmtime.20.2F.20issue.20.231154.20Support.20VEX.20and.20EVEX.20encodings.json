[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1154#issuecomment-1117817058\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1154\">issue #1154</a>:</p>\n<blockquote>\n<p>This is all covered now in the current <code>x64</code> backend, and we have VEX encodings for many vector instructions -- closing now!</p>\n</blockquote>",
        "id": 281211054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651694135
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1154\">issue #1154</a>:</p>\n<blockquote>\n<ul>\n<li>What is the feature or code improvement you would like to do in Cranelift?</li>\n</ul>\n<p>Add VEX and EVEX encoding mechanisms for x86 code generation.</p>\n<ul>\n<li>What is the value of adding this in Cranelift?</li>\n</ul>\n<p>Certain Wasm SIMD operations (e.g. <a href=\"https://github.com/WebAssembly/simd/blob/master/proposals/simd/SIMD.md#conversions\">convert, trunc</a>) only can be lowered with VEX and EVEX encodings. Many VEX and EVEX encodings are only available in later SIMD feature sets (e.g. AVX-512); adding the ability to use VEX and EVEX encodings does not preclude legalizations for x86 CPUs without later SIMD feature sets, but that is a separate issue.</p>\n<ul>\n<li>Do you have an implementation plan, and/or ideas for data structures or algorithms to use?</li>\n</ul>\n<p>I think the relevant thing here is that it may impact how we go about resolving <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1141\">bytecodealliance/wasmtime#1141</a>.</p>\n<ul>\n<li>Have you considered alternative implementations? If so, how are they better or worse than your proposal?</li>\n</ul>\n<p>Not having the ability to use VEX and EVEX encodings would force cranelift to use multi-instruction legalizations instead of optimal instructions during instruction selection.<br>\n</p>\n</blockquote>",
        "id": 281211055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651694135
    }
]