[
    {
        "content": "<p>bnjbvr edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3256\">issue #3256</a>:</p>\n<blockquote>\n<p>Our internal wasmtime testing on aarch64-darwin shows that something broke around July 17th: <a href=\"https://buildkite.com/embark-studios/wasmtime-aarch64-apple-darwin/builds?branch=main&amp;page=5\">https://buildkite.com/embark-studios/wasmtime-aarch64-apple-darwin/builds?branch=main&amp;page=5</a></p>\n<p>When running <code>cargo test -p wasmtime-cli --test all</code>, I see a segfault. LLDB shows libunwind in the backtrace, then the <code>backtrace</code> crate, then <code>wasmtime::trap::Trap::new</code> as the first wasmtime function. It seems that it happens when we're creating to create a backtrace after resuming a fiber from another thread.</p>\n<p>Unfortunately, I've been trying to chase down a commit that would have introduced this failure, with no success: I can get back to wasmtime as of June 1st (last time I remember manually running tests on this machine), and reproduce that crash. So it could be that the system, distributed version of libunwind has changed after an upgrade of MacOS, and that it is now not working with our unwinding methods anymore.</p>\n<p>I'll try to investigate a bit more, and report about what I've found, and if there are workarounds.</p>\n</blockquote>",
        "id": 251529735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630488939
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3256#issuecomment-910114700\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3256\">issue #3256</a>:</p>\n<blockquote>\n<p>One test that triggers a crash 100% of the time is <code>async_functions::iloop_with_fuel</code>. I managed to retrieve the latest version of libunwind present on <a href=\"https://opensource.apple.com/\">https://opensource.apple.com/</a>, build it locally and link it statically in wasmtime + <a href=\"http://backtrace.rs\">backtrace.rs</a>. Luckily, with this I can reproduce the crash with something that looks like the same crash backtrace (so it might be the same crash!). Debug symbols for the debug build of libunwind don't appear in lldb, yet I thought they would appear (everything has been built in debug mode).</p>\n</blockquote>",
        "id": 251530262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630489197
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3256\">issue #3256</a>:</p>\n<blockquote>\n<p>Our internal wasmtime testing on aarch64-darwin shows that something broke around July 17th: <a href=\"https://buildkite.com/embark-studios/wasmtime-aarch64-apple-darwin/builds?branch=main&amp;page=5\">https://buildkite.com/embark-studios/wasmtime-aarch64-apple-darwin/builds?branch=main&amp;page=5</a></p>\n<p>When running <code>cargo test -p wasmtime-cli --test all</code>, I see a segfault. LLDB shows libunwind in the backtrace, then the <code>backtrace</code> crate, then <code>wasmtime::trap::Trap::new</code> as the first wasmtime function. It seems that it happens when we're creating to create a backtrace after resuming a fiber from another thread.</p>\n<p>Unfortunately, I've been trying to chase down a commit that would have introduced this failure, with no success: I can get back to wasmtime as of June 1st (last time I remember manually running tests on this machine), and reproduce that crash. So it could be that the system, distributed version of libunwind has changed after an upgrade of MacOS, and that it is now not working with our unwinding methods anymore.</p>\n<p>I'll try to investigate a bit more, and report about what I've found, and if there are workarounds.</p>\n</blockquote>",
        "id": 251746675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630601342
    }
]