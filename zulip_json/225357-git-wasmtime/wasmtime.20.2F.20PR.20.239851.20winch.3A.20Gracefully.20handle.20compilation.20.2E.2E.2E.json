[
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>.</p>",
        "id": 489793189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734538473
    },
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a> from <code>saulecabrera:winch-no-panics</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Closes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8096\">https://github.com/bytecodealliance/wasmtime/issues/8096</a></p>\n<p>This commit threads <code>anyhow::Result</code>  through most of Winch's compilation process in order to gracefully handle compilation errors gracefully instead of panicking.</p>\n<p>The error classification is intentionally very granular, to avoid string allocation which could impact compilation performance.</p>\n<p>The errors are largely fit in two categories:</p>\n<ul>\n<li>Unimplemented/Unsupported</li>\n<li>Internal</li>\n</ul>\n<p>The firs category signals partial or no support for Wasmtime features and or Wasm proposals. These errors are meant to be temporary while such features or proposals are in development.</p>\n<p>The second category signals that a compilation invariant was not met. These errors are considered internal and their presence usually means a bug in the compiler.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 489793191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734538473
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>.</p>",
        "id": 489793193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734538473
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>.</p>",
        "id": 489793194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734538474
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>:</p>\n<blockquote>\n<p>Closes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8096\">https://github.com/bytecodealliance/wasmtime/issues/8096</a></p>\n<p>This commit threads <code>anyhow::Result</code>  through most of Winch's compilation process in order to gracefully handle compilation errors instead of panicking.</p>\n<p>The error classification is intentionally very granular, to avoid string allocation which could impact compilation performance.</p>\n<p>The errors are largely fit in two categories:</p>\n<ul>\n<li>Unimplemented/Unsupported</li>\n<li>Internal</li>\n</ul>\n<p>The firs category signals partial or no support for Wasmtime features and or Wasm proposals. These errors are meant to be temporary while such features or proposals are in development.</p>\n<p>The second category signals that a compilation invariant was not met. These errors are considered internal and their presence usually means a bug in the compiler.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 489793641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734538593
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>:</p>\n<blockquote>\n<p>Closes: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8096\">https://github.com/bytecodealliance/wasmtime/issues/8096</a></p>\n<p>This commit threads <code>anyhow::Result</code>  through most of Winch's compilation process in order to gracefully handle compilation errors instead of panicking.</p>\n<p>The error classification is intentionally very granular, to avoid string allocation which could impact compilation performance.</p>\n<p>The errors largely fit in two categories:</p>\n<ul>\n<li>Unimplemented/Unsupported</li>\n<li>Internal</li>\n</ul>\n<p>The firs category signals partial or no support for Wasmtime features and or Wasm proposals. These errors are meant to be temporary while such features or proposals are in development.</p>\n<p>The second category signals that a compilation invariant was not met. These errors are considered internal and their presence usually means a bug in the compiler.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 489793685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734538609
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851#issuecomment-2551926437\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 489810664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734543891
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851#issuecomment-2552227734\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>:</p>\n<blockquote>\n<blockquote>\n<p>The second category signals that a compilation invariant was not met. These errors are considered internal and their presence usually means a bug in the compiler.</p>\n</blockquote>\n<p>This category seems like it should probably result in panics? At least, in the outer winch compilation driver code?</p>\n</blockquote>",
        "id": 489837686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734554388
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851#issuecomment-2552237429\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>:</p>\n<blockquote>\n<p>Ultimately it should I think: thinking through a bit more I don't think there's a case in which we want to bubble these errors up as recoverable. Given the classification done in this PR I think it'll easy to check if the contained error is internal and panic at that point. I'll add that in. </p>\n</blockquote>",
        "id": 489838493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734554776
    },
    {
        "content": "<p>saulecabrera edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851#issuecomment-2552237429\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>:</p>\n<blockquote>\n<p>Ultimately it should I think: thinking through a bit more I don't think there's a case in which we want to bubble these errors up as recoverable. Given the classification done in this PR I think it'll be easy to check (at the top level) if the contained error is internal and panic at that point. I'll add that in. </p>\n</blockquote>",
        "id": 489838570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734554824
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851#pullrequestreview-2512831583\">PR review</a>:</p>\n<blockquote>\n<p>LGTM. </p>\n<p>Don't really need to address the comment about internal errors before landing this (or even at all, if there is good motivation I am missing).</p>\n<p>FWIW, if you are only using custom errors, it may make sense to avoid using <code>anyhow::Result</code> and <code>anyhow::Error</code> all through winch and just define a custom <code>type Result&lt;T, E = WinchError&gt; = core::result::Result&lt;T, E&gt;;</code>.</p>\n</blockquote>",
        "id": 489838639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734554858
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>.</p>",
        "id": 491516699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735753496
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>.</p>",
        "id": 491517453,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735754182
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851#issuecomment-2567096311\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>:</p>\n<blockquote>\n<blockquote>\n<p>FWIW, if you are only using custom errors, it may make sense to avoid using anyhow::Result and anyhow::Error all through winch and just define a custom type Result&lt;T, E = WinchError&gt; = core::result::Result&lt;T, E&gt;;</p>\n</blockquote>\n<p>Good point, I should've mentioned the rationale for going with <code>anyhow</code>  rather than a custom <code>Result&lt;T, WinchError&gt;</code> in my commit message. That was my initial intention, however, since the code generation pass is intertwined with validation of other crates (e.g., <code>wasmparser</code>), I found it easier to handle cross-crate error definitions through anyhow, at the cost of a bit more verbosity in Winch's code base. </p>\n</blockquote>",
        "id": 491517734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735754479
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9851\">PR #9851</a>.</p>",
        "id": 491519450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735756261
    }
]