[
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808#issuecomment-1699773376\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808\">issue #6808</a>:</p>\n<blockquote>\n<p>This looks like a rebase that went wrong and is pulling in commits from other branches. I think only 0b024af was supposed to be in this PR, and GitHub automatically tagging in Cranelift folks is a false positive as a result. So I'm removing the review request for Chris.</p>\n</blockquote>",
        "id": 388191267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693427691
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808#issuecomment-1699890421\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808\">issue #6808</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen, @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"cranelift:area:machinst\", \"cranelift:meta\", \"cranelift:module\", \"cranelift:wasm\", \"isle\", \"wasmtime:c-api\", \"wasmtime:docs\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 388200359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693431877
    },
    {
        "content": "<p>veeshi <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808#issuecomment-1700389578\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808\">issue #6808</a>:</p>\n<blockquote>\n<p>I rebased on the 12.0 release branch so we can use this in our platform. I can see in the 13.0 pre-release wasi-http has a <code>WasiHttp</code> trait so this PR will no longer be needed. </p>\n</blockquote>",
        "id": 388252527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693459684
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808#issuecomment-1701304644\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808\">issue #6808</a>:</p>\n<blockquote>\n<p>I'm not particularly familiar with the status of wasi-http, but it sounds to me like you don't expect to merge this PR because we have a different solution that will meet your needs. In that case, can we close this PR?</p>\n</blockquote>",
        "id": 388356805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693497269
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808#issuecomment-1701373502\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808\">issue #6808</a>:</p>\n<blockquote>\n<p>Sorry I didn't chime in earlier. We have had various wasi-http implementation plans we would get to \"real soon now\" for a while now.</p>\n<p>The short version is: I don't believe that we should implement ACLs as a host functionality in any of our component interfaces, including HTTP. Instead, we want to see ACLs implemented as a component which attenuates component interfaces.</p>\n<p>Over in the <a href=\"https://github.com/bytecodealliance/wasi-virt\">wasi-virt</a> project, Guy has been demonstrating some of the patterns possible for component composition which interpose between the host and the user's component. In that project, he is demonstrating providing extra environment variables, a read-only filesystem image, and other basic on/off functionality for wasi interfaces.</p>\n<p>I think the best design for an http ACL is a component generator like wasi-virt that, given an ACL, generates a component that exports a wasi-http interface to the user's component, and imports a wasi-http implementation. When wiring that export to that import, the ACL component will make any access control checks and accept (by forwarding) or reject (by returning an error) the user's import calls.</p>\n<p>This has a bunch of advantages over building it into the host: 1. it works on any component runtime, not just wasmtime, 2. it minimizes the amount of code we need to trust in the host. practically this shows up when we <code>cargo vet</code> our dependencies, but that only covers safety and not correctness. 3. users (embedders) get to pick and choose whatever ACL implementation they like. For instance, <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6401\">https://github.com/bytecodealliance/wasmtime/pull/6401</a> is a similar, but different, implementation of this same sort of ACL. Which one is better? I personally don't know, but the person embedding wasmtime to provide some service is in a better position to know, so I want the decision be as late-binding as possible. I'd like the embedder to choose whatever attenuators that are appropriate for their needs, <code>wasm-compose</code> them with their user's component, and load them into wasmtime.</p>\n</blockquote>",
        "id": 388364051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693499282
    },
    {
        "content": "<p>veeshi <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808#issuecomment-1701843922\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808\">issue #6808</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm not particularly familiar with the status of wasi-http, but it sounds to me like you don't expect to merge this PR because we have a different solution that will meet your needs. In that case, can we close this PR?</p>\n</blockquote>\n<p>Yep this PR can be closed. It was more of a proof of concept to highlight one possible solution to this problem and to give us something to work with in our platform.</p>\n<blockquote>\n<p>I think the best design for an http ACL is a component generator like wasi-virt that, given an ACL, generates a component that exports a wasi-http interface to the user's component, and imports a wasi-http implementation. When wiring that export to that import, the ACL component will make any access control checks and accept (by forwarding) or reject (by returning an error) the user's import calls.</p>\n</blockquote>\n<p>I wasn't aware of wasi-virt till now but it is a better approach and one which gives flexibility to end users.</p>\n</blockquote>",
        "id": 388412810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693519545
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808#issuecomment-1701853964\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6808\">issue #6808</a>:</p>\n<blockquote>\n<p>Thanks. Please stay in touch with what your platform needs from wasmtime, whether here or on the bytecode alliance discord.</p>\n</blockquote>",
        "id": 388414039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693520255
    }
]