[
    {
        "content": "<p>MarinPostma opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a> from <code>MarinPostma:winch-aarch64-rem</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<ul>\n<li><strong>pulley: Remove hardcoded instruction sizes in interpreter (#9769)</strong></li>\n<li><strong>Update <code>arbitrary</code> to 1.4.1 (#9550)</strong></li>\n<li><strong>Update ADOPTERS.md (#9773)</strong></li>\n<li><strong> Add a guide for adding instructions to Pulley  (#9765)</strong></li>\n<li><strong>pulley: Implement more of loads/stores (#9775)</strong></li>\n<li><strong>implement copy/clone for RemKind</strong></li>\n<li><strong>implement remainder operation for aarch64</strong></li>\n<li><strong>add tests</strong></li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 487356788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733872628
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 487356814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733872651
    },
    {
        "content": "<p>MarinPostma submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#pullrequestreview-2493914497\">PR review</a>.</p>",
        "id": 487357393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733872994
    },
    {
        "content": "<p>MarinPostma created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1879061829\">PR review comment</a>:</p>\n<blockquote>\n<p>@saulecabrera I'm not sure about that, but if we are performing an unsigned remainder operation, then do we really care about sign extending? Maybe it's not necessary for division either? Is there a scenario where we can't just blindly consider the <code>w</code> register as a <code>x</code> register?</p>\n</blockquote>",
        "id": 487357394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733872994
    },
    {
        "content": "<p>MarinPostma edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>:</p>\n<blockquote>\n<p>Implement remainder operation for <code>aarch64</code> in winch.</p>\n<p>one more step in the #8321 series<br>\n</p>\n</blockquote>",
        "id": 487357648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873156
    },
    {
        "content": "<p><strong>MarinPostma</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a> as ready for review.</p>",
        "id": 487357656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873161
    },
    {
        "content": "<p><strong>MarinPostma</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 487357658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873162
    },
    {
        "content": "<p><strong>MarinPostma</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 487357659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873162
    },
    {
        "content": "<p><strong>MarinPostma</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 487357661,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873162
    },
    {
        "content": "<p><strong>MarinPostma</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 487357666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873162
    },
    {
        "content": "<p>MarinPostma submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#pullrequestreview-2493920142\">PR review</a>.</p>",
        "id": 487357796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873226
    },
    {
        "content": "<p>MarinPostma created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1879066130\">PR review comment</a>:</p>\n<blockquote>\n<p>The same reasonning applies to div, I think. We could shave a few instructions in the case of unsigned division too.</p>\n</blockquote>",
        "id": 487357797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733873226
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 487679960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733878683
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#issuecomment-2533467390\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 488000589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733883351
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#pullrequestreview-2496042277\">PR review</a>:</p>\n<blockquote>\n<p>Looking good. Left some comments inline.</p>\n<p>As a general comment, given that the same invariant as division apply here, could we modify the existing <code>div_rrr</code> so that it can be re-used from <code>rem_rrr</code>?</p>\n</blockquote>",
        "id": 488136032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733933800
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1880493966\">PR review comment</a>:</p>\n<blockquote>\n<p>Also, the same invariants as signed division apply here, right? i.e., we must still check for overflow.</p>\n</blockquote>",
        "id": 488136033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733933801
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1880429224\">PR review comment</a>:</p>\n<blockquote>\n<p>After <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9762\">https://github.com/bytecodealliance/wasmtime/pull/9762</a> was merged, I noticed that we were unconditionally emitting a sign-extension here. Instead we need to request the proper extension depending on the division kind. I opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9784\">https://github.com/bytecodealliance/wasmtime/pull/9784</a> to fix this. We should apply the same fix here. </p>\n</blockquote>",
        "id": 488136034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733933801
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1880429968\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we use <code>self.trapz</code> here?</p>\n</blockquote>",
        "id": 488136035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733933801
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1880419634\">PR review comment</a>:</p>\n<blockquote>\n<p>In practice, nothing is stopping us from passing a <code>w</code> register here, however given that we're dealing with the 64-bit instruction variant, it will take into account the full 64-bits not just the lower 32. In case that the high 32 bits are not zeroed out, this could lead to unexpected behavior. So we need to extend in both cases. </p>\n</blockquote>",
        "id": 488136036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733933801
    },
    {
        "content": "<p>MarinPostma submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#pullrequestreview-2496229227\">PR review</a>.</p>",
        "id": 488140252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733935043
    },
    {
        "content": "<p>MarinPostma created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1880531987\">PR review comment</a>:</p>\n<blockquote>\n<p>Actually I was expecting it to be the case, but as it turn out, it doesn't seem necessary; the following snippet</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code> <span class=\"p\">(</span><span class=\"k\">module</span>\n     <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i32</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n          <span class=\"nb\">local.get</span> <span class=\"mi\">0</span>\n           <span class=\"nb\">local.get</span> <span class=\"mi\">1</span>\n           <span class=\"nb\">i32.rem_u</span>\n     <span class=\"p\">)</span>\n <span class=\"p\">)</span>\n</code></pre></div>\n<p>is compiled by cranelift to:</p>\n<div class=\"codehilite\" data-code-language=\"armasm\"><pre><span></span><code>0000000000000000 &lt;wasm[0]::function[0]&gt;:\n       0: d503235f      pacibz\n       4: a9bf7bfd      stp     x29, x30, [sp, #-16]!\n       8: 910003fd      mov     x29, sp\n       c: 2a0403e3      mov     w3, w4\n      10: 2a0503e5      mov     w5, w5\n      14: b40000c5      cbz     x5, 0x2c &lt;wasm[0]::function[0]+0x2c&gt;\n      18: 9ac50868      udiv    x8, x3, x5\n      1c: 9b058d02      msub    x2, x8, x5, x3\n      20: a8c17bfd      ldp     x29, x30, [sp], #16\n      24: d50323df      autibz\n      28: d65f03c0      ret\n      2c: 0000c11f      udf     #49439\n</code></pre></div>\n<p>(with <code>rem_s</code>:</p>\n<div class=\"codehilite\" data-code-language=\"armasm\"><pre><span></span><code>       0: d503235f      pacibz\n       4: a9bf7bfd      stp     x29, x30, [sp, #-16]!\n       8: 910003fd      mov     x29, sp\n       c: 52b00004      mov     w4, #-2147483648\n      10: 93407c81      sxtw    x1, w4\n      14: 92800003      mov     x3, #-1\n      18: 9ac30c25      sdiv    x5, x1, x3\n      1c: 9b0384a2      msub    x2, x5, x3, x1\n      20: a8c17bfd      ldp     x29, x30, [sp], #16\n      24: d50323df      autibz\n      28: d65f03c0      ret\n</code></pre></div>\n<p>)</p>\n<p>At first I thought this was a bug, but it seems to be consistent across platform:</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"_start\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mf\">0x80000000)</span>\n    <span class=\"p\">(</span><span class=\"nb\">i32.const</span> <span class=\"mi\">-1</span><span class=\"p\">)</span>\n        <span class=\"nb\">i32.rem_s</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<p>this yields <code>0</code> on both aarch64 and x86.<br>\n</p>\n</blockquote>",
        "id": 488140254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733935044
    },
    {
        "content": "<p>MarinPostma <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#issuecomment-2536521831\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>:</p>\n<blockquote>\n<p>I was my initial intention to factorize the check, but as it turns out, we don't need to check for overflow  for <code>rem</code>. I'm working on supporting i32 division, so we can drop the  extension in a subsequent PR too.</p>\n</blockquote>",
        "id": 488141793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733935497
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 488146837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733936929
    },
    {
        "content": "<p>MarinPostma updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 488148576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733937522
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#pullrequestreview-2496341574\">PR review</a>.</p>",
        "id": 488148787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733937600
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#discussion_r1880603456\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah right, going over the Wasm spec, there's no explicit mention of overflow checks in this case. </p>\n</blockquote>",
        "id": 488148788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733937600
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781#pullrequestreview-2496559683\">PR review</a>.</p>",
        "id": 488164212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733942885
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9781\">PR #9781</a>.</p>",
        "id": 488167343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733943918
    }
]