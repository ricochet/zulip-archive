[
    {
        "content": "<p>scottmcm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a> from <code>add-memcmp</code> to <code>main</code>:</p>\n<blockquote>\n<p>The comment says the enum is \"likely to grow\" and the function's been in libc since C89, so hopefully this is ok.</p>\n<p>I'd like to use it for emitting things like array equality.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 240864868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622489339
    },
    {
        "content": "<p>scottmcm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a> from <code>add-memcmp</code> to <code>main</code>:</p>\n<blockquote>\n<p>This adds <code>LibCall::Memcmp</code> and a corresponding <code>FunctionBuilder::call_memcmp</code>, following the existing patterns of <code>memcpy</code>, <code>memset</code>, &amp; <code>memmove</code>.  The comment says the enum is \"likely to grow\" and the <code>memcmp</code>'s been in libc since C89, so hopefully this is ok.</p>\n<p>I'd like to have this for emitting equality tests of large, simple no-padding types, like <code>[u32; 123]</code>.</p>\n<p>I don't know who should review this.<br>\n</p>\n</blockquote>",
        "id": 240865269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622489761
    },
    {
        "content": "<p>scottmcm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a> from <code>add-memcmp</code> to <code>main</code>.</p>",
        "id": 240961389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622562129
    },
    {
        "content": "<p>scottmcm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a> from <code>add-memcmp</code> to <code>main</code>.</p>",
        "id": 262986826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638179998
    },
    {
        "content": "<p>scottmcm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a> from <code>add-memcmp</code> to <code>main</code>.</p>",
        "id": 262987844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638180491
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#pullrequestreview-818353273\">PR review</a>.</p>",
        "id": 263079759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638226868
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#pullrequestreview-818353273\">PR review</a>.</p>",
        "id": 263079760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638226868
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#discussion_r758767012\">PR review comment</a>:</p>\n<blockquote>\n<p>This could probably become a helper on <code>Type</code>, perhaps <code>Type::int_with_byte_size(...)</code> (and create a corresponding <code>Type::int_with_bit_size(...)</code> and maybe the <code>float</code> and <code>bool</code> equivalents too).</p>\n</blockquote>",
        "id": 263079761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638226868
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#pullrequestreview-818416894\">PR review</a>.</p>",
        "id": 263082869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638228952
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#discussion_r758817434\">PR review comment</a>:</p>\n<blockquote>\n<p>Hmm, <code>Type::int</code> is already mostly <code>Type::int_with_bit_size</code>, just with a different parameter type.</p>\n<p>Here's a few possible directions.  Let me know which you'd prefer I do, @cfallin </p>\n<ul>\n<li>Add <code>Type::int_with_byte_size</code> and <code>Type::int_with_bit_size</code>, concentrating on the \"different integer width\" use by having them take <code>impl TryInto&lt;u16&gt;</code>.</li>\n<li>Add a <code>Type::int_bytes</code> that takes <code>u16</code></li>\n<li>Rename <code>Type::int</code> to <code>Type::int_bits</code> and add <code>Type::int_bytes</code> (rg only spots 10 obvious uses of <code>Type::int</code> so it might not be as horrible as I'd have guessed)</li>\n<li>One of the above, but using a type other than <code>u16</code> for <code>Type::int</code> (TBH <code>u16</code> is kinda odd there, since the biggest value it cares about is 128 and would fit in a <code>u8</code>, but it's also not the <code>u32</code> that rust's <code>std</code> <a href=\"https://doc.rust-lang.org/nightly/std/primitive.u16.html#method.trailing_ones\">tends to use for numbers of bits</a>)</li>\n<li>Some combination thereof</li>\n<li>Make a follow-up PR for one of the above</li>\n<li>Do nothing<br>\n</li>\n</ul>\n</blockquote>",
        "id": 263082871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638228952
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#pullrequestreview-818421982\">PR review</a>.</p>",
        "id": 263083649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638229569
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#discussion_r758821663\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I had missed the existing <code>Type::int()</code> -- IMHO, it might be better to leave that as-is (<code>Type::int(32)</code> is simple/ergonomic/very clear) and then add this as <code>Type::int_with_byte_size()</code> (I slightly prefer this over <code>int_bytes</code>, the latter sounds like it's a special kind of int that's a vector of bytes or something like that). And I guess let's match the <code>u16</code> for consistency (I'm not sure why <code>u16</code>, maybe to allow 256-bit vecs but still be somewhat compact?).</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 263083650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638229569
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#pullrequestreview-818439997\">PR review</a>.</p>",
        "id": 263086563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638231776
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#discussion_r758836444\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm not sure why u16, maybe to allow 256-bit vecs but still be somewhat compact?</p>\n</blockquote>\n<p>That would make sense if it was stored, but <code>Type</code> is just <code>pub struct Type(u8);</code>, so it's just a parameter, and thus the choice seems like it could be pretty much anything.</p>\n<p>I'll go add <code>Type::int_with_byte_size(u16) -&gt; Type</code> as requested.</p>\n</blockquote>",
        "id": 263086564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638231776
    },
    {
        "content": "<p>scottmcm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a> from <code>add-memcmp</code> to <code>main</code>.</p>",
        "id": 263088872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638233291
    },
    {
        "content": "<p>scottmcm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a> from <code>add-memcmp</code> to <code>main</code>.</p>",
        "id": 263089421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638233641
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#pullrequestreview-818462106\">PR review</a>.</p>",
        "id": 263090622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638234617
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#discussion_r758854298\">PR review comment</a>:</p>\n<blockquote>\n<p>OK, yeah, that existing bit is unclear then; but, better saved for a later cleanup :-) Thanks!</p>\n</blockquote>",
        "id": 263090623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638234617
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953#pullrequestreview-818462532\">PR review</a>.</p>",
        "id": 263090659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638234670
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2953\">PR #2953</a>.</p>",
        "id": 263095462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638239773
    }
]