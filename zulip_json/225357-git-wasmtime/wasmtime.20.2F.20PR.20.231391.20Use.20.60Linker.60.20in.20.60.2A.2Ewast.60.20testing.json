[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391\">PR #1391</a> from <code>wast-linker</code> to <code>master</code>:</p>\n<blockquote>\n<p>By default <code>Linker</code> disallows shadowing previously defined items, but it<br>\nlooks like the <code>*.wast</code> test suites rely on this so this commit adds a<br>\nboolean flag to <code>Linker</code> as well indicating whether duplicates are<br>\nallowed.</p>\n</blockquote>",
        "id": 191638654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585068043
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380516319\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380516319\">PR Review</a>.</p>",
        "id": 191641719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585069305
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397315754\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397315754\">PR Review Comment</a>:</p>\n<blockquote>\n<p>On most systems the symbols loaded first have priority I believe. (Otherwise <code>LD_PRELOAD</code> would be pretty much useless.)</p>\n</blockquote>",
        "id": 191641720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585069305
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380517255\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380517255\">PR Review</a>.</p>",
        "id": 191641881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585069363
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397316437\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397316437\">PR Review Comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span>                &quot;import of `{}::{}` with kind {:?} defined twice&quot;,\n</pre></div>\n\n\n</blockquote>",
        "id": 191641882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585069363
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380574019\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380574019\">PR Review</a>.</p>",
        "id": 191651378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585073450
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397361983\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397361983\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I agree that in the context of <code>LD_PRELOAD</code> that makes sense, but from from an API perspective, last-in-wins might be more intuitive for developers (a la virtual inheritance).  For example, I'd probably tell the linker to link in an engine-provided WASI implementation and then my host functions, which could potentially override the WASI implementation.</p>\n</blockquote>",
        "id": 191651381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585073451
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380579828\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380579828\">PR Review</a>.</p>",
        "id": 191652259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585073901
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397366670\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397366670\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Teensy naming nit: perhaps <code>allow_shadowing</code> or <code>enable_shadowing</code>?  The singular <code>shadow</code> reads a little strange to me for some reason.</p>\n</blockquote>",
        "id": 191652260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585073901
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380582629\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380582629\">PR Review</a>.</p>",
        "id": 191652739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585074125
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397361983\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397361983\">PR Review Comment</a>.</p>",
        "id": 191652865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585074184
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397372966\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397372966\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>LD_PRELOAD</code>-style symbol preemption is fairly limited and awkward though. It's possible for libraries to make calls to their own symbols which can't be preempted, or to make assumptions that break if their symbols get preempted. So you have to depend on the library not doing those things.</p>\n<p>I think it would be better to encourage wasm programs and tools to focus on interposition rather than preemption. Load the replacement <em>after</em> the thing it is replacing rather than before. One nice thing about this approach is that it means you can easy wrap functions and call them from your wrappers. For things like <code>malloc</code> replacements, it may require libraries to be structured differently, but it has the advantage of not depending on any implicit contracts with the libc to only access the malloc heap through the public interface.</p>\n</blockquote>",
        "id": 191653575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585074513
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380587559\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380587559\">PR Review</a>.</p>",
        "id": 191653576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585074513
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391\">PR #1391</a> from <code>wast-linker</code> to <code>master</code>:</p>\n<blockquote>\n<p>By default <code>Linker</code> disallows shadowing previously defined items, but it<br>\nlooks like the <code>*.wast</code> test suites rely on this so this commit adds a<br>\nboolean flag to <code>Linker</code> as well indicating whether duplicates are<br>\nallowed.</p>\n</blockquote>",
        "id": 191655302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585075376
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397382062\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397382062\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW I think all behaviors are fine to implement. They're all simple enough and it's largely just a matter of defaults. If necessary it would be quite easy to implement a <code>LD_PRELOAD</code>-style first-one-always-wins, but I think it's best to wait for a use case to come up first.</p>\n</blockquote>",
        "id": 191655399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585075422
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380599113\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380599113\">PR Review</a>.</p>",
        "id": 191655400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585075422
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391\">PR #1391</a> from <code>wast-linker</code> to <code>master</code>:</p>\n<blockquote>\n<p>By default <code>Linker</code> disallows shadowing previously defined items, but it<br>\nlooks like the <code>*.wast</code> test suites rely on this so this commit adds a<br>\nboolean flag to <code>Linker</code> as well indicating whether duplicates are<br>\nallowed.</p>\n</blockquote>",
        "id": 191660322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585077795
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391\">PR #1391</a> from <code>wast-linker</code> to <code>master</code>:</p>\n<blockquote>\n<p>By default <code>Linker</code> disallows shadowing previously defined items, but it<br>\nlooks like the <code>*.wast</code> test suites rely on this so this commit adds a<br>\nboolean flag to <code>Linker</code> as well indicating whether duplicates are<br>\nallowed.</p>\n</blockquote>",
        "id": 191660755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585078025
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380660941\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380660941\">PR Review</a>.</p>",
        "id": 191667135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585081465
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397431647\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397431647\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can you reformat this to avoid tab characters?</p>\n</blockquote>",
        "id": 191667138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585081465
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397436128\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397436128\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It feels awkward to have both <code>instances</code> and <code>linker</code>, since they're largely overlapping. Code like <code>fn invoke</code> currently looks up a method to invoke by doing <code>get_instance</code> and then looking up the export. Can it user the <code>linker</code> to do this instead? It seems like we should be able to completely eliminate <code>instances</code>.</p>\n</blockquote>",
        "id": 191667139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585081465
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380660941\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380660941\">PR Review</a>.</p>",
        "id": 191667141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585081465
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391\">PR #1391</a> from <code>wast-linker</code> to <code>master</code>:</p>\n<blockquote>\n<p>By default <code>Linker</code> disallows shadowing previously defined items, but it<br>\nlooks like the <code>*.wast</code> test suites rely on this so this commit adds a<br>\nboolean flag to <code>Linker</code> as well indicating whether duplicates are<br>\nallowed.</p>\n</blockquote>",
        "id": 191672753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585084210
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397463348\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397463348\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I agree yeah it's a bit awkward but I don't think we can easily change this. This would involve adding some sort of accesor to <code>Linker</code> and it wouldn't work well for the <code>register</code> command which takes a whole instance and puts it in the linker. Would you be ok trying to clean this up at a later date?</p>\n</blockquote>",
        "id": 191672818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585084260
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380699394\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380699394\">PR Review</a>.</p>",
        "id": 191672820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585084260
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380713329\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380713329\">PR Review</a>.</p>",
        "id": 191675518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585085622
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397474845\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397474845\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah. In fact, I think I have an idea of how to do it, so let's go ahead and land this and I'll see if my idea works in a separate PR.</p>\n</blockquote>",
        "id": 191675519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585085622
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380713450\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380713450\">PR Review</a>.</p>",
        "id": 191675533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585085635
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391\">PR #1391</a>.</p>",
        "id": 191681736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585089454
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380749002\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#pullrequestreview-380749002\">PR Review</a>.</p>",
        "id": 191682262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585089840
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397506279\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1391#discussion_r397506279\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I took a quick look at this, and it turns out to be harder than I thought. The Linker interface doesn't have a way to look up a function without knowing its return types, which is something that the wast <code>invoke</code> command does. We may eventually want to add a way to do this, but we can figure that out later.</p>\n</blockquote>",
        "id": 191682263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585089840
    }
]