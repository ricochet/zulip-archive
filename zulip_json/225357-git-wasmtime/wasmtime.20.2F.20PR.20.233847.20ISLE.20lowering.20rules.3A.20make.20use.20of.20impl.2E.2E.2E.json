[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3847\">PR #3847</a> from <code>isle-use-implicit-conversions</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR makes use of the new implicit-conversion feature of the ISLE DSL<br>\nthat was introduced in #3807 in order to make the lowering rules<br>\nsignificantly simpler and more concise.</p>\n<p>The basic idea is to eliminate the repetitive and mechanical use of<br>\nterms that convert from one type to another when there is only one real<br>\nway to do the conversion -- for example, to go from a <code>WritableReg</code> to a<br>\n<code>Reg</code>, the only sensible way is to use <code>writable_reg_to_reg</code>.</p>\n<p>This PR generally takes any term of the form \"A_to_B\" and makes it an<br>\nautomatic conversion, as well as some others that are similar in spirit.</p>\n<p>The notable exception to the pure-value-convsion category is the<br>\n<code>put_in_reg</code> family of operations, which actually do have side-effects.<br>\nHowever, as noted in the doc additions in #3807, this is fine as long as<br>\nthe side-effects are idempotent. And on balance, making <code>put_in_reg</code><br>\nautomatic is a significant clarity win -- together with other operand<br>\nconverters, it enables rules like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Add</span><span class=\"w\"> </span><span class=\"n\">two</span><span class=\"w\"> </span><span class=\"n\">registers</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">has_type</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fits_in_64</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                       </span><span class=\"p\">(</span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>There may be other converters that we could define to make the rules<br>\neven simpler; we can make such improvements as we think of them, but<br>\nthis should be a good start!</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 273027233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645659293
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3847\">PR #3847</a>.</p>",
        "id": 273027235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645659293
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3847#pullrequestreview-891825612\">PR review</a>.</p>",
        "id": 273027611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645659553
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3847\">PR #3847</a> from <code>isle-use-implicit-conversions</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR makes use of the new implicit-conversion feature of the ISLE DSL<br>\nthat was introduced in #3807 in order to make the lowering rules<br>\nsignificantly simpler and more concise.</p>\n<p>The basic idea is to eliminate the repetitive and mechanical use of<br>\nterms that convert from one type to another when there is only one real<br>\nway to do the conversion -- for example, to go from a <code>WritableReg</code> to a<br>\n<code>Reg</code>, the only sensible way is to use <code>writable_reg_to_reg</code>.</p>\n<p>This PR generally takes any term of the form \"A_to_B\" and makes it an<br>\nautomatic conversion, as well as some others that are similar in spirit.</p>\n<p>The notable exception to the pure-value-conversion category is the<br>\n<code>put_in_reg</code> family of operations, which actually do have side-effects.<br>\nHowever, as noted in the doc additions in #3807, this is fine as long as<br>\nthe side-effects are idempotent. And on balance, making <code>put_in_reg</code><br>\nautomatic is a significant clarity win -- together with other operand<br>\nconverters, it enables rules like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Add</span><span class=\"w\"> </span><span class=\"n\">two</span><span class=\"w\"> </span><span class=\"n\">registers</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lower</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">has_type</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">fits_in_64</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">                       </span><span class=\"p\">(</span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">y</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>There may be other converters that we could define to make the rules<br>\neven simpler; we can make such improvements as we think of them, but<br>\nthis should be a good start!</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 273027903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645659733
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3847\">PR #3847</a>.</p>",
        "id": 273030716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645661679
    }
]