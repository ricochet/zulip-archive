[
    {
        "content": "<p>dbezhetskov opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov\">https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov</a></p>\n<p>( couldn't upload .wasm file so I'd changed extension to .mov, it is actually .wasm file)</p>\n<h3>Steps to Reproduce</h3>\n<p>RUST_BACKTRACE=1 gdb --args wasmtime run -g preinitialized.wasm</p>\n<h3>Expected Results</h3>\n<p>debug break</p>\n<h3>Actual Results</h3>\n<p>crash:</p>\n<p>thread 'main' panicked at 'assertion failed: <code>(left &lt; right)</code><br>\n  left: <code>9699</code>,<br>\n right: <code>7415</code>', crates/cranelift/src/debug/transform/expression.rs:690:13<br>\nstack backtrace:<br>\n   0: rust_begin_unwind<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14<br>\n   2: wasmtime_cranelift::debug::transform::expression::ValueLabelRangesBuilder::process_label<br>\n   3: wasmtime_cranelift::debug::transform::expression::CompiledExpression::build_with_locals<br>\n   4: wasmtime_cranelift::debug::transform::simulate::generate_simulated_dwarf<br>\n   5: wasmtime_cranelift::debug::transform::transform_dwarf<br>\n   6: wasmtime_cranelift::debug::write_debuginfo::emit_dwarf<br>\n   7: &lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::emit_obj<br>\n   8: core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut<br>\n   9: &lt;core::iter::adapters:<span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold<br>\n  10: &lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter<br>\n  11: rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n  12: &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer<br>\n  13: &lt;rayon::iter::while_some::WhileSome&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed<br>\n  14: rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend<br>\n  15: rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;C,E&gt;&gt;::from_par_iter<br>\n  16: wasmtime::module::Module::build_artifacts<br>\n  17: core::ops::function::FnOnce::call_once<br>\n  18: wasmtime_cache::ModuleCacheEntry::get_data_raw<br>\n  19: wasmtime::module::Module::from_binary<br>\n  20: wasmtime::module::Module::from_file<br>\n  21: wasmtime_cli::commands::run::RunCommand::load_module<br>\n  22: wasmtime_cli::commands::run::RunCommand::load_main_module<br>\n  23: wasmtime_cli::commands::run::RunCommand::execute<br>\n  24: wasmtime::main<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime 0.35.2</p>\n<p>Operating system: ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 278013820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649247092
    },
    {
        "content": "<p>dbezhetskov labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov\">https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov</a></p>\n<p>( couldn't upload .wasm file so I'd changed extension to .mov, it is actually .wasm file)</p>\n<h3>Steps to Reproduce</h3>\n<p>RUST_BACKTRACE=1 gdb --args wasmtime run -g preinitialized.wasm</p>\n<h3>Expected Results</h3>\n<p>debug break</p>\n<h3>Actual Results</h3>\n<p>crash:</p>\n<p>thread 'main' panicked at 'assertion failed: <code>(left &lt; right)</code><br>\n  left: <code>9699</code>,<br>\n right: <code>7415</code>', crates/cranelift/src/debug/transform/expression.rs:690:13<br>\nstack backtrace:<br>\n   0: rust_begin_unwind<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14<br>\n   2: wasmtime_cranelift::debug::transform::expression::ValueLabelRangesBuilder::process_label<br>\n   3: wasmtime_cranelift::debug::transform::expression::CompiledExpression::build_with_locals<br>\n   4: wasmtime_cranelift::debug::transform::simulate::generate_simulated_dwarf<br>\n   5: wasmtime_cranelift::debug::transform::transform_dwarf<br>\n   6: wasmtime_cranelift::debug::write_debuginfo::emit_dwarf<br>\n   7: &lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::emit_obj<br>\n   8: core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut<br>\n   9: &lt;core::iter::adapters:<span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold<br>\n  10: &lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter<br>\n  11: rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n  12: &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer<br>\n  13: &lt;rayon::iter::while_some::WhileSome&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed<br>\n  14: rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend<br>\n  15: rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;C,E&gt;&gt;::from_par_iter<br>\n  16: wasmtime::module::Module::build_artifacts<br>\n  17: core::ops::function::FnOnce::call_once<br>\n  18: wasmtime_cache::ModuleCacheEntry::get_data_raw<br>\n  19: wasmtime::module::Module::from_binary<br>\n  20: wasmtime::module::Module::from_file<br>\n  21: wasmtime_cli::commands::run::RunCommand::load_module<br>\n  22: wasmtime_cli::commands::run::RunCommand::load_main_module<br>\n  23: wasmtime_cli::commands::run::RunCommand::execute<br>\n  24: wasmtime::main<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime 0.35.2</p>\n<p>Operating system: ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 278013821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649247092
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1090204781\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>How was the wasm file produced?</p>\n</blockquote>",
        "id": 278014824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649247699
    },
    {
        "content": "<p>dbezhetskov <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1090222517\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>It is a compiled c++ program and it was preinitialized with wizer (<a href=\"https://github.com/bytecodealliance/wizer\">https://github.com/bytecodealliance/wizer</a>). <br>\nbtw, without <code>-g</code> wasmtime works as expected with the .wasm module.</p>\n</blockquote>",
        "id": 278017066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649248879
    },
    {
        "content": "<p>dbezhetskov edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1090222517\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>@bjorn3 <br>\nIt is a compiled c++ program and it was preinitialized with wizer (<a href=\"https://github.com/bytecodealliance/wizer\">https://github.com/bytecodealliance/wizer</a>). <br>\nbtw, without <code>-g</code> wasmtime works as expected with the .wasm module.</p>\n</blockquote>",
        "id": 278017089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649248895
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1090238791\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>It may be that wasmtime doesn't handle correct debuginfo or it may be that wizer causes the debuginfo to get corrupted.</p>\n</blockquote>",
        "id": 278019197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649249895
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1090910141\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>cc: @fitzgen?</p>\n</blockquote>",
        "id": 278098648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1649286759
    },
    {
        "content": "<p>SuperTails <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1175596432\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>I compiled a C program _without_ using Wizer and I have encountered the same crash. Here is a zip folder containing the WASM file that causes the crash:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/9050202/wasmtime_crash_testcase.zip\">wasmtime_crash_testcase.zip</a></p>\n</blockquote>",
        "id": 288603810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657063451
    },
    {
        "content": "<p>SuperTails edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1175596432\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>I compiled a C program _without_ using Wizer and I have encountered the same crash. Here is a zip folder containing the WASM file that causes the crash:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/9050202/wasmtime_crash_testcase.zip\">wasmtime_crash_testcase.zip</a><br>\nI was using the <code>wasmtime</code> crate rather than the CLI version as well.</p>\n</blockquote>",
        "id": 288603897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657063524
    },
    {
        "content": "<p>SuperTails edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1175596432\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>I compiled a C program _without_ using Wizer and I have encountered the same crash. Here is a zip folder containing the WASM file that causes the crash:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/9050202/wasmtime_crash_testcase.zip\">wasmtime_crash_testcase.zip</a><br>\nI am using the <code>wasmtime</code> crate directly. It only panics if <code>debug_info(true)</code> is set when creating the <code>Engine</code>.</p>\n</blockquote>",
        "id": 288604064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657063664
    },
    {
        "content": "<p>alexcrichton pinned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov\">https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov</a></p>\n<p>( couldn't upload .wasm file so I'd changed extension to .mov, it is actually .wasm file)</p>\n<h3>Steps to Reproduce</h3>\n<p>RUST_BACKTRACE=1 gdb --args wasmtime run -g preinitialized.wasm</p>\n<h3>Expected Results</h3>\n<p>debug break</p>\n<h3>Actual Results</h3>\n<p>crash:</p>\n<p>thread 'main' panicked at 'assertion failed: <code>(left &lt; right)</code><br>\n  left: <code>9699</code>,<br>\n right: <code>7415</code>', crates/cranelift/src/debug/transform/expression.rs:690:13<br>\nstack backtrace:<br>\n   0: rust_begin_unwind<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14<br>\n   2: wasmtime_cranelift::debug::transform::expression::ValueLabelRangesBuilder::process_label<br>\n   3: wasmtime_cranelift::debug::transform::expression::CompiledExpression::build_with_locals<br>\n   4: wasmtime_cranelift::debug::transform::simulate::generate_simulated_dwarf<br>\n   5: wasmtime_cranelift::debug::transform::transform_dwarf<br>\n   6: wasmtime_cranelift::debug::write_debuginfo::emit_dwarf<br>\n   7: &lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::emit_obj<br>\n   8: core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut<br>\n   9: &lt;core::iter::adapters:<span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold<br>\n  10: &lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter<br>\n  11: rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n  12: &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer<br>\n  13: &lt;rayon::iter::while_some::WhileSome&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed<br>\n  14: rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend<br>\n  15: rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;C,E&gt;&gt;::from_par_iter<br>\n  16: wasmtime::module::Module::build_artifacts<br>\n  17: core::ops::function::FnOnce::call_once<br>\n  18: wasmtime_cache::ModuleCacheEntry::get_data_raw<br>\n  19: wasmtime::module::Module::from_binary<br>\n  20: wasmtime::module::Module::from_file<br>\n  21: wasmtime_cli::commands::run::RunCommand::load_module<br>\n  22: wasmtime_cli::commands::run::RunCommand::load_main_module<br>\n  23: wasmtime_cli::commands::run::RunCommand::execute<br>\n  24: wasmtime::main<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime 0.35.2</p>\n<p>Operating system: ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 302347493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664917724
    },
    {
        "content": "<p>dbanks12 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1520581379\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>I am running into this as well! It looks like if I revert to <code>wasmtime 1.0.2</code> or earlier I do not see this assertion failure. <code>wasmtime 2.0.0</code> and later result in the assertion failure.</p>\n<p>I see the progress in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5553\">https://github.com/bytecodealliance/wasmtime/pull/5553</a> and am watching closely! I am not a wasmtime poweruser, but if I can help make progress here I am happy to.</p>\n</blockquote>",
        "id": 352344348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682358260
    },
    {
        "content": "<p>dbanks12 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1520581379\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>I am running into this as well! It looks like if I revert to <code>wasmtime 1.0.2</code> or earlier I do not see this assertion failure. <code>wasmtime 2.0.0</code> and later result in the assertion failure in my case.</p>\n<p>I see the progress in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5553\">https://github.com/bytecodealliance/wasmtime/pull/5553</a> and am watching closely! I am not a wasmtime poweruser, but if I can help make progress here I am happy to.</p>\n</blockquote>",
        "id": 352344414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682358284
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1520603172\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<blockquote>\n<p>It looks like if I revert to <code>wasmtime 1.0.2</code> or earlier I do not see this assertion failure. <code>wasmtime 2.0.0</code> and later result in the assertion failure in my case.</p>\n</blockquote>\n<p>I'm surprised to hear that. Since Wasmtime 1.0 was released months after the first time this issue was reported, I'd have expected you'd encounter the same issue in that version.</p>\n</blockquote>",
        "id": 352348240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682359343
    },
    {
        "content": "<p>adv-sw <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1527858731\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>Think this is same issue I've just encountered.</p>\n<p>Seems this is the cause of the regression :</p>\n<p>Revision: ce67e7fcd1d2d6da1899d2b46cc41ef877bd9462<br>\nAuthor: Amanieu d'Antras &lt;<a href=\"mailto:amanieu@gmail.com\">amanieu@gmail.com</a>&gt;<br>\nDate: 02/12/2021 11:53:04<br>\nMessage:<br>\nFix ownership in *_vec_new functions in the C API</p>\n<p>These functions are specified to take ownership of the objects in the given slice, not clone them.</p>\n<p>Modified: crates/c-api/src/vec.rs</p>\n<p>The following resolves the breakpoint regression I've encountered.</p>\n<p><a href=\"https://pastebin.com/2Yt3FG9E\">https://pastebin.com/2Yt3FG9E</a></p>\n<p>Perhaps for you too.</p>\n</blockquote>",
        "id": 353990265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682702312
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1527888895\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>@adv-sw the bug described here can occur even without using the C API, so it doesn't make sense that a change in the <code>c-api</code> crate would have caused it. Can you say more why you think this is the case?</p>\n</blockquote>",
        "id": 354001082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682703768
    },
    {
        "content": "<p>adv-sw <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1527900518\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>You're perhaps right, Chris that another debugger regression issue I've identified is seperate. This issue presents around wasmtime 1.0.2, whereas the one I found presents around wasmtime 0.31.0 / 0.32.0</p>\n<p>Apologies - an assumption too far. Seperate issues.</p>\n</blockquote>",
        "id": 354006271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682704475
    },
    {
        "content": "<p>dbanks12 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1527950251\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm surprised to hear that. Since Wasmtime 1.0 was released months after the first time this issue was reported, I'd have expected you'd encounter the same issue in that version.</p>\n</blockquote>\n<p>I was surprised to see that as well.... I can try to provide more context shortly.</p>\n</blockquote>",
        "id": 354025627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682707231
    },
    {
        "content": "<p>adv-sw deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1527858731\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>Think this is same issue I've just encountered.</p>\n<p>Seems this is the cause of the regression :</p>\n<p>Revision: ce67e7fcd1d2d6da1899d2b46cc41ef877bd9462<br>\nAuthor: Amanieu d'Antras &lt;<a href=\"mailto:amanieu@gmail.com\">amanieu@gmail.com</a>&gt;<br>\nDate: 02/12/2021 11:53:04<br>\nMessage:<br>\nFix ownership in *_vec_new functions in the C API</p>\n<p>These functions are specified to take ownership of the objects in the given slice, not clone them.</p>\n<p>Modified: crates/c-api/src/vec.rs</p>\n<p>The following resolves the breakpoint regression I've encountered.</p>\n<p><a href=\"https://pastebin.com/2Yt3FG9E\">https://pastebin.com/2Yt3FG9E</a></p>\n<p>Perhaps for you too.</p>\n</blockquote>",
        "id": 356150802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683315294
    },
    {
        "content": "<p>adv-sw deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1527900518\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>You're perhaps right, Chris that another debugger regression issue I've identified is seperate. This issue presents around wasmtime 1.0.2, whereas the one I found presents around wasmtime 0.31.0 / 0.32.0</p>\n<p>Apologies - an assumption too far. Seperate issues.</p>\n</blockquote>",
        "id": 356150815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683315300
    },
    {
        "content": "<p>abrown unpinned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov\">https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov</a></p>\n<p>( couldn't upload .wasm file so I'd changed extension to .mov, it is actually .wasm file)</p>\n<h3>Steps to Reproduce</h3>\n<p>RUST_BACKTRACE=1 gdb --args wasmtime run -g preinitialized.wasm</p>\n<h3>Expected Results</h3>\n<p>debug break</p>\n<h3>Actual Results</h3>\n<p>crash:</p>\n<p>thread 'main' panicked at 'assertion failed: <code>(left &lt; right)</code><br>\n  left: <code>9699</code>,<br>\n right: <code>7415</code>', crates/cranelift/src/debug/transform/expression.rs:690:13<br>\nstack backtrace:<br>\n   0: rust_begin_unwind<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14<br>\n   2: wasmtime_cranelift::debug::transform::expression::ValueLabelRangesBuilder::process_label<br>\n   3: wasmtime_cranelift::debug::transform::expression::CompiledExpression::build_with_locals<br>\n   4: wasmtime_cranelift::debug::transform::simulate::generate_simulated_dwarf<br>\n   5: wasmtime_cranelift::debug::transform::transform_dwarf<br>\n   6: wasmtime_cranelift::debug::write_debuginfo::emit_dwarf<br>\n   7: &lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::emit_obj<br>\n   8: core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut<br>\n   9: &lt;core::iter::adapters:<span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold<br>\n  10: &lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter<br>\n  11: rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n  12: &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer<br>\n  13: &lt;rayon::iter::while_some::WhileSome&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed<br>\n  14: rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend<br>\n  15: rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;C,E&gt;&gt;::from_par_iter<br>\n  16: wasmtime::module::Module::build_artifacts<br>\n  17: core::ops::function::FnOnce::call_once<br>\n  18: wasmtime_cache::ModuleCacheEntry::get_data_raw<br>\n  19: wasmtime::module::Module::from_binary<br>\n  20: wasmtime::module::Module::from_file<br>\n  21: wasmtime_cli::commands::run::RunCommand::load_module<br>\n  22: wasmtime_cli::commands::run::RunCommand::load_main_module<br>\n  23: wasmtime_cli::commands::run::RunCommand::execute<br>\n  24: wasmtime::main<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime 0.35.2</p>\n<p>Operating system: ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 357057823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683653530
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1698104337\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>I have run into this issue (along with another much simpler one) and investigated the cause a bit.</p>\n<p>This is not a bug in the DWARF-related code, since the instruction offset data is fed to it by the code generator. The code generator, in turn, obtains this data when emitting instructions in a linear walk. It turns out that in this walk, prior recorded offsets can become invalidated by branch shortening (<code>optimize_branches</code>), leading to the invalid <code>start &gt; end</code> ranges:</p>\n<p><div class=\"codehilite\" data-code-language=\"Scala\"><pre><span></span><code><span class=\"nc\">MachBuffer</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">use_label_at_offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mi\">95</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span>\n<span class=\"n\">emitting</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"nc\">Block</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"nc\">MachBuffer</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">bind</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mi\">99</span>\n<span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">optimize_branches</span><span class=\"p\">:</span>\n<span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">78</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Some</span><span class=\"p\">([</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">132</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]),</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"p\">}]</span>\n<span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">90</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">95</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">}]</span>\n<span class=\"n\">optimize_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"mi\">99</span>\n<span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">cur</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">truncating</span>\n<span class=\"n\">truncate_last_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"mi\">94</span>\n<span class=\"n\">optimize_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"mi\">94</span>\n<span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">cur</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">truncating</span>\n<span class=\"n\">truncate_last_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"n\">optimize_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">78</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Some</span><span class=\"p\">([</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">132</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]),</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"n\">purge_latest_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">removing</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">78</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Some</span><span class=\"p\">([</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">132</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]),</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">leave</span><span class=\"w\"> </span><span class=\"n\">optimize_branches</span><span class=\"p\">:</span>\n<span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span>\n<span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">}]</span>\n\n<span class=\"nc\">Recording</span><span class=\"w\"> </span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nc\">VL8</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"w\"> </span><span class=\"nc\">Reg</span><span class=\"p\">(</span><span class=\"n\">p2i</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">i13</span><span class=\"p\">..</span><span class=\"n\">i14</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">95</span><span class=\"p\">.</span><span class=\"mf\">.90</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">Invalid</span><span class=\"w\"> </span><span class=\"n\">range</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">DI</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">i12</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"w\">  </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span>\n<span class=\"n\">block2</span><span class=\"p\">:</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">DI</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">i13</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">94</span>\n<span class=\"w\">  </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span>\n<span class=\"n\">block3</span><span class=\"p\">:</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">DI</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">i14</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"w\">  </span><span class=\"n\">movl</span><span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r10</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">ecx</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 387963748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693341931
    },
    {
        "content": "<p>SingleAccretion edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1698104337\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>I have run into this issue (along with another, much simpler one) and investigated the cause a bit.</p>\n<p>This is not a bug in the DWARF-related code, since the instruction offset data is fed to it by the code generator. The code generator, in turn, obtains this data when emitting instructions in a linear walk. It turns out that in this walk, prior recorded offsets can become invalidated by branch shortening (<code>optimize_branches</code>), leading to the invalid <code>start &gt; end</code> ranges:</p>\n<p><div class=\"codehilite\" data-code-language=\"Scala\"><pre><span></span><code><span class=\"nc\">MachBuffer</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">use_label_at_offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mi\">95</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span>\n<span class=\"n\">emitting</span><span class=\"w\"> </span><span class=\"n\">block</span><span class=\"w\"> </span><span class=\"nc\">Block</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"nc\">MachBuffer</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">bind</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mi\">99</span>\n<span class=\"n\">enter</span><span class=\"w\"> </span><span class=\"n\">optimize_branches</span><span class=\"p\">:</span>\n<span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">78</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Some</span><span class=\"p\">([</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">132</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]),</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"p\">}]</span>\n<span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">90</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">95</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">}]</span>\n<span class=\"n\">optimize_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"mi\">99</span>\n<span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">cur</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">truncating</span>\n<span class=\"n\">truncate_last_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"mi\">94</span>\n<span class=\"n\">optimize_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"mi\">94</span>\n<span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"k\">with</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">cur</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">truncating</span>\n<span class=\"n\">truncate_last_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">94</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">None</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"n\">now</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"n\">optimize_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">last</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">78</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Some</span><span class=\"p\">([</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">132</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]),</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">off</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"n\">purge_latest_branches</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">removing</span><span class=\"w\"> </span><span class=\"n\">branch</span><span class=\"w\"> </span><span class=\"nc\">MachBranch</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">78</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">84</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">fixup</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inverted</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Some</span><span class=\"p\">([</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">132</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">]),</span><span class=\"w\"> </span><span class=\"n\">labels_at_this_branch</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"n\">leave</span><span class=\"w\"> </span><span class=\"n\">optimize_branches</span><span class=\"p\">:</span>\n<span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[]</span>\n<span class=\"n\">l</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)]</span>\n<span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"nc\">MachLabelFixup</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">MachLabel</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">80</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">JmpRel32</span><span class=\"w\"> </span><span class=\"p\">}]</span>\n\n<span class=\"nc\">Recording</span><span class=\"w\"> </span><span class=\"n\">debug</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nc\">VL8</span><span class=\"w\"> </span><span class=\"n\">in</span><span class=\"w\"> </span><span class=\"nc\">Reg</span><span class=\"p\">(</span><span class=\"n\">p2i</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">i13</span><span class=\"p\">..</span><span class=\"n\">i14</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">95</span><span class=\"p\">.</span><span class=\"mf\">.90</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">Invalid</span><span class=\"w\"> </span><span class=\"n\">range</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">DI</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">i12</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"w\">  </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span>\n<span class=\"n\">block2</span><span class=\"p\">:</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">DI</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">i13</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">94</span>\n<span class=\"w\">  </span><span class=\"n\">jmp</span><span class=\"w\">     </span><span class=\"n\">label3</span>\n<span class=\"n\">block3</span><span class=\"p\">:</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"nc\">DI</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"n\">i14</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mi\">89</span>\n<span class=\"w\">  </span><span class=\"n\">movl</span><span class=\"w\">    </span><span class=\"mi\">8</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r10</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">ecx</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 387964121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693342055
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1698158456\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>@SingleAccretion that seems like a plausible explanation -- it's entirely possible that we missed a debug-info update when chomping branches. Would you be willing to make an attempt at fixing this? We record instruction offsets <a href=\"https://github.com/bytecodealliance/wasmtime/blob/16aa06464b987fd47b2b7419599af2bff0013063/cranelift/codegen/src/machinst/vcode.rs#L922\">here</a> for debug purposes, and then those are cross-correlated with <code>debug_value_labels</code> (which contains instruction-index ranges). It's possible that we just need to do a post-pass or in-place update to ensure monotonicity in this sequence (i.e., clamp <code>inst_offsets[i]</code> to be less than or equal to <code>inst_offsets[i + 1]</code>)...</p>\n</blockquote>",
        "id": 387970157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693343895
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1698168972\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>The disassembly bit is intentional: it's meant to be a dump of the VCode, which stays in N-target branch form, rather than an exact correspondence to the machine code. VCode \"pseudo-instructions\" are similarly slightly different. One can think of the MachBuffer branch chomping (and branch-target editing: target labels will be updated and conditional polarities will be flipped sometimes) as another layer of lowering.</p>\n<p>This is also why @elliottt added a Capstone-based disassembly check to the filetests a while back (and why <code>clif-util</code> has <code>-D</code> that disassembles using Capstone): both are useful, for slightly different purposes.</p>\n</blockquote>",
        "id": 387972877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693344980
    },
    {
        "content": "<p>SingleAccretion <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999#issuecomment-1698166153\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<p>@cfallin thank you for a quick response! Yes, I am looking at this right now. The branching logic (if I am reading it correctly) only ever edits the instruction stream to entirely remove the last branch instruction, so it looks possible to do in-place updating.</p>\n<p>Side note: now that I consider this, the disassembly is also incorrect because of this after-the-fact removal. That <code>jmp     label3</code> will not exist in the actual emitted code.</p>\n</blockquote>",
        "id": 387974561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693345719
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3999\">issue #3999</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><a href=\"https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov\">https://user-images.githubusercontent.com/5621716/161971426-a7599e7d-886f-4101-b379-8f5c20a38a8e.mov</a></p>\n<p>( couldn't upload .wasm file so I'd changed extension to .mov, it is actually .wasm file)</p>\n<h3>Steps to Reproduce</h3>\n<p>RUST_BACKTRACE=1 gdb --args wasmtime run -g preinitialized.wasm</p>\n<h3>Expected Results</h3>\n<p>debug break</p>\n<h3>Actual Results</h3>\n<p>crash:</p>\n<p>thread 'main' panicked at 'assertion failed: <code>(left &lt; right)</code><br>\n  left: <code>9699</code>,<br>\n right: <code>7415</code>', crates/cranelift/src/debug/transform/expression.rs:690:13<br>\nstack backtrace:<br>\n   0: rust_begin_unwind<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/std/src/panicking.rs:498:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/9d1b2106e23b1abd32fce1f17267604a5102f57a/library/core/src/panicking.rs:116:14<br>\n   2: wasmtime_cranelift::debug::transform::expression::ValueLabelRangesBuilder::process_label<br>\n   3: wasmtime_cranelift::debug::transform::expression::CompiledExpression::build_with_locals<br>\n   4: wasmtime_cranelift::debug::transform::simulate::generate_simulated_dwarf<br>\n   5: wasmtime_cranelift::debug::transform::transform_dwarf<br>\n   6: wasmtime_cranelift::debug::write_debuginfo::emit_dwarf<br>\n   7: &lt;wasmtime_cranelift::compiler::Compiler as wasmtime_environ::compilation::Compiler&gt;::emit_obj<br>\n   8: core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut<br>\n   9: &lt;core::iter::adapters:<span aria-label=\"map\" class=\"emoji emoji-1f5fa\" role=\"img\" title=\"map\">:map:</span>:Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold<br>\n  10: &lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter<br>\n  11: rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n  12: &lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer<br>\n  13: &lt;rayon::iter::while_some::WhileSome&lt;I&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed<br>\n  14: rayon::iter::collect::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend<br>\n  15: rayon::result::&lt;impl rayon::iter::FromParallelIterator&lt;core::result::Result&lt;T,E&gt;&gt; for core::result::Result&lt;C,E&gt;&gt;::from_par_iter<br>\n  16: wasmtime::module::Module::build_artifacts<br>\n  17: core::ops::function::FnOnce::call_once<br>\n  18: wasmtime_cache::ModuleCacheEntry::get_data_raw<br>\n  19: wasmtime::module::Module::from_binary<br>\n  20: wasmtime::module::Module::from_file<br>\n  21: wasmtime_cli::commands::run::RunCommand::load_module<br>\n  22: wasmtime_cli::commands::run::RunCommand::load_main_module<br>\n  23: wasmtime_cli::commands::run::RunCommand::execute<br>\n  24: wasmtime::main<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime 0.35.2</p>\n<p>Operating system: ubuntu 20.04</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 388571214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693590149
    }
]