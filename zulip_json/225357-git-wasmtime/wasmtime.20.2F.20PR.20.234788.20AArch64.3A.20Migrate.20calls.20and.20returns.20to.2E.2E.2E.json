[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/akirilov-arm\">akirilov-arm</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788\">PR #4788</a>.</p>",
        "id": 295329000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661472630
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788\">PR #4788</a>.</p>",
        "id": 295329001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661472630
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788\">PR #4788</a> from <code>aarch64-isle-call-ret</code> to <code>main</code>:</p>\n<blockquote>\n<p>This borrows some machinery from x64 and makes it common. The order of setup for on-stack args is reversed now, but that seems OK if it means we can share more code!</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 295329002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661472630
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#pullrequestreview-1087580804\">PR review</a>.</p>",
        "id": 295527672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556055
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#pullrequestreview-1087580804\">PR review</a>.</p>",
        "id": 295527673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556055
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#discussion_r956491219\">PR review comment</a>:</p>\n<blockquote>\n<p>Not at all blocking, but I wonder what a better name for this would be now that it's shared between multiple backends.</p>\n</blockquote>",
        "id": 295527674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556055
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#discussion_r956494617\">PR review comment</a>:</p>\n<blockquote>\n<p>What caused this change?</p>\n</blockquote>",
        "id": 295527675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556055
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#pullrequestreview-1087586923\">PR review</a>.</p>",
        "id": 295528043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556311
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#discussion_r956496149\">PR review comment</a>:</p>\n<blockquote>\n<p>The returns are going through a different path now, so the immediate handling is a little different; but this is still correct I think (<code>movn x0, #0</code> generates all-ones, which for an <code>i32</code> func is the same as <code>u32::MAX</code> in the return register).</p>\n</blockquote>",
        "id": 295528044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556311
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#pullrequestreview-1087587294\">PR review</a>.</p>",
        "id": 295528165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556387
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788#discussion_r956496521\">PR review comment</a>:</p>\n<blockquote>\n<p>We can definitely think more about this -- it also felt a little strange to put it in <code>prelude.isle</code> to be honest; it seems more like we need a library of \"common lowering helpers\" that is separate from the language and ISLE-binding prelude proper. But, we can refine more in subsequent PRs!</p>\n</blockquote>",
        "id": 295528166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556387
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4788\">PR #4788</a>.</p>",
        "id": 295528181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661556400
    }
]