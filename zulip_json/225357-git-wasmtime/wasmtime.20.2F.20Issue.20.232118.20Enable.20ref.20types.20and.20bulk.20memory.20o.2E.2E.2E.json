[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670674385\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<p>The only prior experience we have for this is multi-value, and we didn't actually enable that by default until it was merged into the upstream spec itself. In that sense this is much earlier to enable-by-default than our precedent.</p>\n<p>Given that, I wonder if we might want to take this moment to discuss/agree about when to enable new features by default? I personally feel that merging into the spec is probably too slow, and stage 4 (which these proposals are at) feels like it's the right time. It's what Firefox did!</p>\n<p>If others agree, could this also add some documentation in the book to when we turn a feature on by default? I would say the requirements for a Wasmtime wasm feature to be on by default would be:</p>\n<ul>\n<li>Upstream proposal in stage 4</li>\n<li>Complete implementation in Wasmtime</li>\n<li>No major bugs or design work needs to be done</li>\n<li>Fuzzing enabled for awhile (week or so?)</li>\n</ul>\n<p>In terms of the content of this PR, r=me, just wanted to point out the procedural point!</p>\n</blockquote>",
        "id": 206299234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596828136
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670677232\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<p>Actually some other requirements I would add are:</p>\n<ul>\n<li>Implemented in the <code>wasmtime</code> crate's API</li>\n<li>Implemented in the C API</li>\n<li>Implemented in at least one language binding (e.g. Go, Python, .NET)</li>\n</ul>\n</blockquote>",
        "id": 206300010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596828577
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670678352\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<p>This is a good point to bring up, thanks Alex. Once we find consensus on what is required here, we should probably document it in our contributing guide.</p>\n<hr>\n<p>You proposed requirements sound good to me, but I would even expand the last point about fuzzing to include a review of the ways that we've exposed the feature to the fuzzers.</p>\n<ul>\n<li>Is it just enabled in the \"compile\" fuzz target's config or did we write custom fuzz targets to explicitly exercise <em>running</em> (rather than just compiling) this feature?</li>\n<li>Did we add seeds to our corpora that use the feature?</li>\n<li>Generally, how confident are we that the fuzzers have actually exercised this stuff? (e.g. does introducing a panic on purpose to some corner case get caught by the fuzzer pretty quickly?) </li>\n</ul>\n<p>In particular, if we aren't pretty confident about that last point, I don't think we are ready to turn the feature on by default yet.</p>\n<p>According to these standards, I feel good about reference types, and okay about bulk memory. I think bulk memory could probably use more runtime testing, rather than just \"can we compile modules that use it\" testing. For reference types, we have specialized fuzz targets that actually run the modules, not just compile them.</p>\n</blockquote>",
        "id": 206300360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596828749
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670684879\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<p>Oh yeah and to be clear I also feel good about the implementation we have of reference types and bulk memory myself.</p>\n<p>Also, as an aside, would you be up (after this lands) to send a similar PR to <code>wasm-tools</code> to update <code>Default for WasmFeatures</code> in wasmparser?</p>\n</blockquote>",
        "id": 206301850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596829735
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670685516\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr, @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 206302009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596829839
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670705640\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<p>If you want to add some docs to <a href=\"https://bytecodealliance.github.io/wasmtime/stability.html\">https://bytecodealliance.github.io/wasmtime/stability.html</a> (or  that section, maybe not exactly that page), that might be a good place to add some info?</p>\n</blockquote>",
        "id": 206307149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596833075
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670789588\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<p>@alexcrichton okay I added two new bits of docs:</p>\n<ol>\n<li>\n<p>A table, similar to <a href=\"https://webassembly.org/roadmap/\">https://webassembly.org/roadmap/</a>, documenting our wasm proposal support. This is intended to be mostly outward facing.</p>\n</li>\n<li>\n<p>A couple checklists for implementing and enabling-by-default new wasm proposals. These are intended to be developer/reviewer focused.</p>\n</li>\n</ol>\n<p>Want to take another look?</p>\n</blockquote>",
        "id": 206321446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596844743
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118#issuecomment-670792860\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2118\">Issue #2118</a>:</p>\n<blockquote>\n<p>Thanks for writing all that up!</p>\n</blockquote>",
        "id": 206322313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596845777
    }
]