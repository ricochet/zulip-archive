[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p><code>pretty_error</code> should be replaced with methods on <code>CodegenError</code> that mutate the error and provide the context that <code>pretty_error</code> otherwise adds, and the <code>CodegenError</code>'s <code>Display</code> impl should print what <code>pretty_error</code> creates when it has the necessary context.</p>\n<p>These context-adding methods would be similar to how the <code>wast</code> crate adds file contents and filename context to errors with these methods:</p>\n<ul>\n<li><a href=\"https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_text\">https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_text</a></li>\n<li><a href=\"https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_path\">https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_path</a></li>\n</ul>\n<p>Then we can delete <code>pretty_error</code>, and avoid using string as an error type in more places (notably in <code>cranelift-filetests</code> and its <code>pretty_anyhow_error</code> workaround).</p>\n</blockquote>",
        "id": 210156003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600188684
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p><code>pretty_error</code> should be replaced with methods on <code>CodegenError</code> that mutate the error and provide the context that <code>pretty_error</code> otherwise adds, and the <code>CodegenError</code>'s <code>Display</code> impl should print what <code>pretty_error</code> creates when it has the necessary context.</p>\n<p>These context-adding methods would be similar to how the <code>wast</code> crate adds file contents and filename context to errors with these methods:</p>\n<ul>\n<li><a href=\"https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_text\">https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_text</a></li>\n<li><a href=\"https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_path\">https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_path</a></li>\n</ul>\n<p>Then we can delete <code>pretty_error</code>, and avoid using string as an error type in more places (notably in <code>cranelift-filetests</code> and its <code>pretty_anyhow_error</code> workaround).</p>\n</blockquote>",
        "id": 210156004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600188684
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p><code>pretty_error</code> should be replaced with methods on <code>CodegenError</code> that mutate the error and provide the context that <code>pretty_error</code> otherwise adds, and the <code>CodegenError</code>'s <code>Display</code> impl should print what <code>pretty_error</code> creates when it has the necessary context.</p>\n<p>These context-adding methods would be similar to how the <code>wast</code> crate adds file contents and filename context to errors with these methods:</p>\n<ul>\n<li><a href=\"https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_text\">https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_text</a></li>\n<li><a href=\"https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_path\">https://docs.rs/wast/24.0.0/wast/struct.Error.html#method.set_path</a></li>\n</ul>\n<p>Then we can delete <code>pretty_error</code>, and avoid using string as an error type in more places (notably in <code>cranelift-filetests</code> and its <code>pretty_anyhow_error</code> workaround).</p>\n</blockquote>",
        "id": 210156005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600188684
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204#issuecomment-692841257\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 210156028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600188697
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204#issuecomment-692855653\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p><code>pretty_error</code> takes a reference to <code>isa</code> and <code>func</code>. Doing this would require <code>CodegenError</code> to borrow from them.</p>\n</blockquote>",
        "id": 210159911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600190299
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204#issuecomment-692874394\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p>The idea is to take copies of the data gathered from those things and store them into the error, rather than borrow those things.</p>\n</blockquote>",
        "id": 210163992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600192136
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204#issuecomment-692892547\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p><code>pretty_error</code> needs the entire function, as the error shows the full function source. From the target isa it needs the register_info and encoding_info.</p>\n</blockquote>",
        "id": 210169072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600194268
    },
    {
        "content": "<p>taegyunkim <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204#issuecomment-701549817\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p>I'd like to take this issue. Is anyone looking into this? </p>\n</blockquote>",
        "id": 211797936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601488795
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204#issuecomment-701587120\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2204\">Issue #2204</a>:</p>\n<blockquote>\n<p>It's all you @taegyunkim!</p>\n</blockquote>",
        "id": 211806195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601492955
    }
]