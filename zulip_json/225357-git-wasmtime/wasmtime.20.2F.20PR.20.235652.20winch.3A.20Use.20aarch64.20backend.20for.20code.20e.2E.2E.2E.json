[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a> from <code>winch-codegen-use-aarch64-backend</code> to <code>main</code>:</p>\n<blockquote>\n<p>This patch introduces basic Aarch64 code generation by using <code>cranelift-codegen</code>'s backend.</p>\n<p>This change <em>does not</em>:</p>\n<ul>\n<li>Change the semantics of the code generation</li>\n<li>Adds support for other Wasm instructions</li>\n</ul>\n<p>The most notable change in this patch is how addressing modes are handled at the MacroAssembler layer: instead of having a canonical address representation, this patch introduces the addressing mode as an associated type in the MacroAssembler trait. This approach has the advantage that gives each ISA enough flexiblity to describe the addressing modes and their constraints in isolation without having to worry on how a particular addressing mode is going to affect other ISAs. In the case of Aarch64 this becomes useful to describe indexed addressing modes (particularly from the stack pointer).</p>\n<p>This patch uses the concept of a shadow stack pointer (x28) as a workaround to Aarch64's stack pointer 16-byte alignment. This constraint is enforced by:</p>\n<ul>\n<li>\n<p>Introducing specialized addressing modes when using the real stack pointer; this enables auditing when the real stack pointer is used. As of this change, the real stack pointer is only used in the function's prologue and epilogue.</p>\n</li>\n<li>\n<p>Asserting that the real stack pointer is not used as a base for addressing modes.</p>\n</li>\n<li>\n<p>Ensuring that at any point during the code generation process where the stack pointer changes (e.g. when stack space is allocated / deallocated) the value of the real stack pointer is copied into the shadow stack pointer.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 324642224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675093874
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a>.</p>",
        "id": 324642264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675093880
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a> from <code>winch-codegen-use-aarch64-backend</code> to <code>main</code>.</p>",
        "id": 324643735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675094243
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#pullrequestreview-1275460470\">PR review</a>.</p>",
        "id": 324644391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675094397
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#discussion_r1090822672\">PR review comment</a>:</p>\n<blockquote>\n<p>You may want to call <code>.set_skipdata(true)</code> on the built disassembler if you want to use inline constant pools. Otherwise capstone will stop disassembling at the first instruction it can't disassemble (eg due to being a constant pool)</p>\n</blockquote>",
        "id": 324644395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675094398
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a> from <code>winch-codegen-use-aarch64-backend</code> to <code>main</code>.</p>",
        "id": 324812464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675129352
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#pullrequestreview-1277769299\">PR review</a>.</p>",
        "id": 324991276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675191393
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#pullrequestreview-1277769299\">PR review</a>.</p>",
        "id": 324991277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675191393
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#discussion_r1092307438\">PR review comment</a>:</p>\n<blockquote>\n<p>Since this variant only supports pre-/post-indexed forms (i.e., forms that update <code>SP</code>), maybe we can name it <code>SPOffsetWithUpdate</code> (or something less cumbersome, though nothing comes to mind at the moment...)?</p>\n</blockquote>",
        "id": 324991279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675191394
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#discussion_r1092312374\">PR review comment</a>:</p>\n<blockquote>\n<p>Could we add a block comment somewhere describing what the shadow stack is and how it works? (Or maybe I missed it earlier in which case let's have a reference to docs here!)</p>\n</blockquote>",
        "id": 324991280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675191394
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#discussion_r1092314811\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, here's a good description, thanks!</p>\n<p>A few questions on invariants:</p>\n<ul>\n<li>Is <code>x28</code> now a special part of the ABI, i.e., neither caller- nor callee-save but an implicit arg in and out? I guess calls out to host code are safe because <code>x28</code> is normally a callee-save, so it'll be preserved. Do we need to set it before calling in from the host though?</li>\n<li>Stating a bit more about the update strategy (when to copy sp to shadow-sp, do we ever need to copy in the other direction?, etc.) would be good here</li>\n</ul>\n</blockquote>",
        "id": 324991281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675191394
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a> from <code>winch-codegen-use-aarch64-backend</code> to <code>main</code>.</p>",
        "id": 325210010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270491
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#pullrequestreview-1279511462\">PR review</a>.</p>",
        "id": 325210215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270546
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#discussion_r1093493516\">PR review comment</a>:</p>\n<blockquote>\n<p>I renamed this to <code>IndexedSPOffset</code>, let me know if that's clear enough. Else I'm happy to find a better name. </p>\n</blockquote>",
        "id": 325210217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270546
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#pullrequestreview-1279512894\">PR review</a>.</p>",
        "id": 325210429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270597
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#discussion_r1093494692\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd like to keep the documentation of the <code>shadow_sp</code> at <code>regs::shadow_sp()</code>, so I've added a reference here. </p>\n</blockquote>",
        "id": 325210430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270597
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#pullrequestreview-1279514468\">PR review</a>.</p>",
        "id": 325210610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270649
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#discussion_r1093495904\">PR review comment</a>:</p>\n<blockquote>\n<p>I added more details to the documentation here addressing your questions around the invariants also taking as a base our conversation during our meeting. </p>\n</blockquote>",
        "id": 325210612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270649
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a> from <code>winch-codegen-use-aarch64-backend</code> to <code>main</code>.</p>",
        "id": 325211529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675270866
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a>.</p>",
        "id": 325384191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675340654
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652#pullrequestreview-1282002473\">PR review</a>.</p>",
        "id": 325509179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675376639
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5652\">PR #5652</a>.</p>",
        "id": 325509262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675376653
    }
]