[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>Currently passing <code>--wasi-modules experimental-wasi-threads</code> requires that the input wasm module has a particular \"shape\", notably that it imports memory and exports a <code>wasi_thread_start</code> function. This ends up making testing sometimes difficult, for example, since ideally the option to the CLI could always be passed and then both threads-using and non-threads-using modules could be run. Or, for example, a module which doesn't end up actually spawning a thread would be run as well.</p>\n<p>The current errors are:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module)\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">unable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">single</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"s\">\"memory\"</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module (import </span><span class=\"se\">\\\"</span><span class=\"s\">env</span><span class=\"se\">\\\"</span><span class=\"s\"> </span><span class=\"se\">\\\"</span><span class=\"s\">memory</span><span class=\"se\">\\\"</span><span class=\"s\"> (memory 1 2 shared)))\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"n\">point</span><span class=\"w\"> </span><span class=\"n\">function</span>: <span class=\"nc\">wasi_thread_start</span>\n</code></pre></div>\n<p>I think I originally asked these errors in the initial implementation of <code>wasi-threads</code> to be moved to the \"front\", but now in retrospect I think it would be best to defer these errors to the \"point of use\" so that way the wasi-threads proposal could be enabled more liberally without restricting the shape of modules that can be run.</p>\n<p>cc @abrown </p>\n</blockquote>",
        "id": 347194056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680710730
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>Currently passing <code>--wasi-modules experimental-wasi-threads</code> requires that the input wasm module has a particular \"shape\", notably that it imports memory and exports a <code>wasi_thread_start</code> function. This ends up making testing sometimes difficult, for example, since ideally the option to the CLI could always be passed and then both threads-using and non-threads-using modules could be run. Or, for example, a module which doesn't end up actually spawning a thread would be run as well.</p>\n<p>The current errors are:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module)\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">unable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">single</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"s\">\"memory\"</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module (import </span><span class=\"se\">\\\"</span><span class=\"s\">env</span><span class=\"se\">\\\"</span><span class=\"s\"> </span><span class=\"se\">\\\"</span><span class=\"s\">memory</span><span class=\"se\">\\\"</span><span class=\"s\"> (memory 1 2 shared)))\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"n\">point</span><span class=\"w\"> </span><span class=\"n\">function</span>: <span class=\"nc\">wasi_thread_start</span>\n</code></pre></div>\n<p>I think I originally asked these errors in the initial implementation of <code>wasi-threads</code> to be moved to the \"front\", but now in retrospect I think it would be best to defer these errors to the \"point of use\" so that way the wasi-threads proposal could be enabled more liberally without restricting the shape of modules that can be run.</p>\n<p>cc @abrown </p>\n</blockquote>",
        "id": 347194059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680710731
    },
    {
        "content": "<p>kant2002 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153#issuecomment-1566186771\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>I experience same error when try to run WASM module produced by <a href=\"https://github.com/dotnet/runtimelab/tree/feature/NativeAOT-LLVM\">NativeAOT-LLVM</a> which is experimental toolchain for .NET.</p>\n<p>this is simple hello world app which run fine using <code>wasmer</code>  but fails to run with <code>wasmtime</code> even if threads was enabled.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\">  </span><span class=\"n\">hellowasi</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"o\">=</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"o\">=</span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">unable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">;</span>\n<span class=\"n\">a</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">single</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"s\">\"memory\"</span>\n</code></pre></div>\n<p>Below output of <code>wasmer inspect</code>. </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">inspect</span><span class=\"w\"> </span><span class=\"n\">hellowasi</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Type</span>: <span class=\"nc\">wasm</span>\n<span class=\"n\">Size</span>: <span class=\"mf\">15.6</span><span class=\"w\"> </span><span class=\"n\">MB</span>\n<span class=\"n\">Imports</span>:\n  <span class=\"nc\">Functions</span>:\n    <span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"args_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"args_sizes_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"environ_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"environ_sizes_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"clock_time_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_advise\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_close\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_fdstat_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_fdstat_set_flags\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_filestat_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_filestat_set_size\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_pread\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_prestat_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_prestat_dir_name\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_pwrite\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_read\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_readdir\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_seek\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_sync\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"fd_write\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"path_create_directory\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"path_filestat_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"path_open\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"path_readlink\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"path_unlink_file\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"poll_oneoff\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"proc_exit\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"sched_yield\"</span>: <span class=\"p\">[]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"p\">.</span><span class=\"s\">\"random_get\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi\"</span><span class=\"p\">.</span><span class=\"s\">\"thread-spawn\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"n\">Memories</span>:\n  <span class=\"nc\">Tables</span>:\n  <span class=\"nc\">Globals</span>:\n<span class=\"nc\">Exports</span>:\n  <span class=\"nc\">Functions</span>:\n    <span class=\"s\">\"_start\"</span>: <span class=\"p\">[]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[]</span>\n<span class=\"w\">    </span><span class=\"s\">\"wasi_thread_start\"</span>: <span class=\"p\">[</span><span class=\"n\">I32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I32</span><span class=\"p\">]</span><span class=\"w\"> </span>-&gt; <span class=\"p\">[]</span>\n<span class=\"w\">  </span><span class=\"n\">Memories</span>:\n    <span class=\"s\">\"memory\"</span>: <span class=\"nc\">shared</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">19</span><span class=\"w\"> </span><span class=\"n\">pages</span><span class=\"o\">..</span><span class=\"mi\">32768</span><span class=\"w\"> </span><span class=\"n\">pages</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"n\">Tables</span>:\n  <span class=\"nc\">Globals</span>:\n</code></pre></div>\n<p>I see memory with \"memory\" name, so whole thing a bit puzzling to me. I assume that <code>wasi-threads</code> also define <code>memory</code>, so there collision between two of them. But really I don't know, since I'm new to all this jazz.</p>\n</blockquote>",
        "id": 361783549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685290404
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153#issuecomment-1566211858\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>Wasi requires exporting a memory (so the wasi runtime can write to memory), while wasi-threads requires importing it (so that it is possible to share the same memory between the wasm instances backing each thread). As such you need to tell the linker to import a linear memory and re-export the same linear memory.</p>\n</blockquote>",
        "id": 361797784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685296315
    },
    {
        "content": "<p>kant2002 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153#issuecomment-1566215360\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>@bjorn3 thank you! it indeed helps, and your explanation make sense. I'm not sure will it hijack thread from original issue of OP, but is it possible that wasmtime detect such simple errors and provide slightly better messaging? </p>\n</blockquote>",
        "id": 361799714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685297212
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153#issuecomment-1566217418\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>A hint on how to fix the issue would be nice IMHO.</p>\n</blockquote>",
        "id": 361800777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685297686
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>Currently passing <code>--wasi-modules experimental-wasi-threads</code> requires that the input wasm module has a particular \"shape\", notably that it imports memory and exports a <code>wasi_thread_start</code> function. This ends up making testing sometimes difficult, for example, since ideally the option to the CLI could always be passed and then both threads-using and non-threads-using modules could be run. Or, for example, a module which doesn't end up actually spawning a thread would be run as well.</p>\n<p>The current errors are:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module)\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">unable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">single</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"s\">\"memory\"</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module (import </span><span class=\"se\">\\\"</span><span class=\"s\">env</span><span class=\"se\">\\\"</span><span class=\"s\"> </span><span class=\"se\">\\\"</span><span class=\"s\">memory</span><span class=\"se\">\\\"</span><span class=\"s\"> (memory 1 2 shared)))\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"n\">point</span><span class=\"w\"> </span><span class=\"n\">function</span>: <span class=\"nc\">wasi_thread_start</span>\n</code></pre></div>\n<p>I think I originally asked these errors in the initial implementation of <code>wasi-threads</code> to be moved to the \"front\", but now in retrospect I think it would be best to defer these errors to the \"point of use\" so that way the wasi-threads proposal could be enabled more liberally without restricting the shape of modules that can be run.</p>\n<p>cc @abrown </p>\n</blockquote>",
        "id": 362806787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685635374
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6153\">issue #6153</a>:</p>\n<blockquote>\n<p>Currently passing <code>--wasi-modules experimental-wasi-threads</code> requires that the input wasm module has a particular \"shape\", notably that it imports memory and exports a <code>wasi_thread_start</code> function. This ends up making testing sometimes difficult, for example, since ideally the option to the CLI could always be passed and then both threads-using and non-threads-using modules could be run. Or, for example, a module which doesn't end up actually spawning a thread would be run as well.</p>\n<p>The current errors are:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module)\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">unable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">should</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">single</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"s\">\"memory\"</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">modules</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;&lt;</span><span class=\"w\"> </span><span class=\"s\">\"(module (import </span><span class=\"se\">\\\"</span><span class=\"s\">env</span><span class=\"se\">\\\"</span><span class=\"s\"> </span><span class=\"se\">\\\"</span><span class=\"s\">memory</span><span class=\"se\">\\\"</span><span class=\"s\"> (memory 1 2 shared)))\"</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">threads</span><span class=\"w\"> </span><span class=\"n\">entry</span><span class=\"w\"> </span><span class=\"n\">point</span><span class=\"w\"> </span><span class=\"n\">function</span>: <span class=\"nc\">wasi_thread_start</span>\n</code></pre></div>\n<p>I think I originally asked these errors in the initial implementation of <code>wasi-threads</code> to be moved to the \"front\", but now in retrospect I think it would be best to defer these errors to the \"point of use\" so that way the wasi-threads proposal could be enabled more liberally without restricting the shape of modules that can be run.</p>\n<p>cc @abrown </p>\n</blockquote>",
        "id": 362806788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685635374
    }
]