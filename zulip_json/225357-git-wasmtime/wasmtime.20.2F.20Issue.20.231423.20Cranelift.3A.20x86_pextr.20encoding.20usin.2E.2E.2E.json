[
    {
        "content": "<p>bjorn3 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>I compiled</p>\n<div class=\"codehilite\"><pre><span></span>test compile\nset enable_simd\ntarget x86_64-unknown-linux-gnu haswell\n\nfunction u0:0() -&gt; i32 system_v {\n    ss0 = explicit_slot 32\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\nblock0:\n    v0 = stack_addr.i64 ss0\n    v1 = load.i32x4 v0\n    call fn0()\n    v2 = extractlane.i32x4 v1, 1\n    return v2\n}\n</pre></div>\n\n\n<p>this results in the following ir after regalloc:</p>\n<div class=\"codehilite\"><pre><span></span>function u0:0(i64 fp [%rbp]) -&gt; i32 [%rax], i64 fp [%rbp] system_v {\n    ss0 = explicit_slot 32, offset -48\n    ss1 = spill_slot 16, offset -64\n    ss2 = incoming_arg 16, offset -16\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\n                                block0(v5: i64 [%rbp]):\n[RexOp1pushq#50]                    x86_push v5\n[RexOp1copysp#8089]                 copy_special %rsp -&gt; %rbp\n[RexOp1adjustsp_ib#d083]            adjust_sp_down_imm 48\n[RexOp1spaddr8_id#808d,%rax]        v0 = stack_addr.i64 ss0\n[DynRexOp2fld#410,%xmm0]            v3 = load.i32x4 v0\n[RexOp2fspillSib32#411,ss1]         v1 = spill v3\n[Op1call_id#e8]                     call fn0()\n[RexOp2ffillSib32#410,%xmm15]       v4 = fill v1\n[DynRexMp3r_ib_unsigned_gpr#d16,%rax] v2 = x86_pextr v4, 1\n[RexOp1adjustsp_ib#8083]            adjust_sp_up_imm 48\n[RexOp1popq#58,%rbp]                v6 = x86_pop.i64\n[Op1ret#c3]                         return v2, v6\n}\n</pre></div>\n\n\n<p>The value passed to <code>x86_pextr</code> is stored in <code>%xmm15</code>, however the resulting asm expects it in <code>%xmm7</code> despite actually being filled to the correct <code>%xmm15</code>:</p>\n<div class=\"codehilite\"><pre><span></span>   <span class=\"err\">0:</span>   <span class=\"err\">40</span> <span class=\"err\">55</span>                   <span class=\"nf\">push</span>    <span class=\"no\">rbp</span>\n   <span class=\"err\">2:</span>   <span class=\"err\">48</span> <span class=\"err\">89</span> <span class=\"nf\">e5</span>                <span class=\"no\">mov</span>     <span class=\"no\">rbp</span><span class=\"p\">,</span> <span class=\"no\">rsp</span>\n   <span class=\"err\">5:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">ec</span> <span class=\"mi\">30</span>             <span class=\"no\">sub</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n   <span class=\"err\">9:</span>   <span class=\"err\">48</span> <span class=\"err\">8</span><span class=\"nf\">d</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"no\">lea</span>     <span class=\"no\">rax</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"no\">rsp</span> <span class=\"err\">+</span> <span class=\"mi\">0x10</span><span class=\"p\">]</span>\n  <span class=\"err\">11:</span>   <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span>                <span class=\"no\">movups</span>  <span class=\"no\">xmm0</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rax</span><span class=\"p\">]</span>\n  <span class=\"err\">14:</span>   <span class=\"err\">40</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">11</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">],</span> <span class=\"no\">xmm0</span>\n  <span class=\"err\">1</span><span class=\"nl\">d:</span>   <span class=\"nf\">e8</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>          <span class=\"no\">call</span>    <span class=\"mi\">0x22</span>\n  <span class=\"err\">22:</span>   <span class=\"err\">44</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"no\">bc</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmm15</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">]</span>\n  <span class=\"err\">2</span><span class=\"nl\">b:</span>   <span class=\"err\">66</span> <span class=\"err\">41</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">3</span><span class=\"no\">a</span> <span class=\"mi\">16</span> <span class=\"no\">f8</span> <span class=\"mi\">01</span>    <span class=\"no\">pextrd</span>  <span class=\"no\">r8d</span><span class=\"p\">,</span> <span class=\"no\">xmm7</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n  <span class=\"err\">32:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">c4</span> <span class=\"mi\">30</span>             <span class=\"no\">add</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n  <span class=\"err\">36:</span>   <span class=\"err\">40</span> <span class=\"err\">5</span><span class=\"nf\">d</span>                   <span class=\"no\">pop</span>     <span class=\"no\">rbp</span>\n  <span class=\"err\">38:</span>   <span class=\"nf\">c3</span>                      <span class=\"no\">ret</span>\n</pre></div>\n\n\n<p>(Experimenting with SIMD support for cg_clif)</p>\n</blockquote>",
        "id": 192071287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585338736
    },
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>I compiled</p>\n<div class=\"codehilite\"><pre><span></span>test compile\nset enable_simd\ntarget x86_64-unknown-linux-gnu haswell\n\nfunction u0:0() -&gt; i32 system_v {\n    ss0 = explicit_slot 32\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\nblock0:\n    v0 = stack_addr.i64 ss0\n    v1 = load.i32x4 v0\n    call fn0()\n    v2 = extractlane.i32x4 v1, 1\n    return v2\n}\n</pre></div>\n\n\n<p>this results in the following ir after regalloc:</p>\n<div class=\"codehilite\"><pre><span></span>function u0:0(i64 fp [%rbp]) -&gt; i32 [%rax], i64 fp [%rbp] system_v {\n    ss0 = explicit_slot 32, offset -48\n    ss1 = spill_slot 16, offset -64\n    ss2 = incoming_arg 16, offset -16\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\n                                block0(v5: i64 [%rbp]):\n[RexOp1pushq#50]                    x86_push v5\n[RexOp1copysp#8089]                 copy_special %rsp -&gt; %rbp\n[RexOp1adjustsp_ib#d083]            adjust_sp_down_imm 48\n[RexOp1spaddr8_id#808d,%rax]        v0 = stack_addr.i64 ss0\n[DynRexOp2fld#410,%xmm0]            v3 = load.i32x4 v0\n[RexOp2fspillSib32#411,ss1]         v1 = spill v3\n[Op1call_id#e8]                     call fn0()\n[RexOp2ffillSib32#410,%xmm15]       v4 = fill v1\n[DynRexMp3r_ib_unsigned_gpr#d16,%rax] v2 = x86_pextr v4, 1\n[RexOp1adjustsp_ib#8083]            adjust_sp_up_imm 48\n[RexOp1popq#58,%rbp]                v6 = x86_pop.i64\n[Op1ret#c3]                         return v2, v6\n}\n</pre></div>\n\n\n<p>The value passed to <code>x86_pextr</code> is stored in <code>%xmm15</code>, however the resulting asm expects it in <code>%xmm7</code> despite actually being filled to the correct <code>%xmm15</code>:</p>\n<div class=\"codehilite\"><pre><span></span>   <span class=\"err\">0:</span>   <span class=\"err\">40</span> <span class=\"err\">55</span>                   <span class=\"nf\">push</span>    <span class=\"no\">rbp</span>\n   <span class=\"err\">2:</span>   <span class=\"err\">48</span> <span class=\"err\">89</span> <span class=\"nf\">e5</span>                <span class=\"no\">mov</span>     <span class=\"no\">rbp</span><span class=\"p\">,</span> <span class=\"no\">rsp</span>\n   <span class=\"err\">5:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">ec</span> <span class=\"mi\">30</span>             <span class=\"no\">sub</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n   <span class=\"err\">9:</span>   <span class=\"err\">48</span> <span class=\"err\">8</span><span class=\"nf\">d</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"no\">lea</span>     <span class=\"no\">rax</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"no\">rsp</span> <span class=\"err\">+</span> <span class=\"mi\">0x10</span><span class=\"p\">]</span>\n  <span class=\"err\">11:</span>   <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span>                <span class=\"no\">movups</span>  <span class=\"no\">xmm0</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rax</span><span class=\"p\">]</span>\n  <span class=\"err\">14:</span>   <span class=\"err\">40</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">11</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">],</span> <span class=\"no\">xmm0</span>\n  <span class=\"err\">1</span><span class=\"nl\">d:</span>   <span class=\"nf\">e8</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>          <span class=\"no\">call</span>    <span class=\"mi\">0x22</span>\n  <span class=\"err\">22:</span>   <span class=\"err\">44</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"no\">bc</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmm15</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">]</span>\n  <span class=\"err\">2</span><span class=\"nl\">b:</span>   <span class=\"err\">66</span> <span class=\"err\">41</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">3</span><span class=\"no\">a</span> <span class=\"mi\">16</span> <span class=\"no\">f8</span> <span class=\"mi\">01</span>    <span class=\"no\">pextrd</span>  <span class=\"no\">r8d</span><span class=\"p\">,</span> <span class=\"no\">xmm7</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n  <span class=\"err\">32:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">c4</span> <span class=\"mi\">30</span>             <span class=\"no\">add</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n  <span class=\"err\">36:</span>   <span class=\"err\">40</span> <span class=\"err\">5</span><span class=\"nf\">d</span>                   <span class=\"no\">pop</span>     <span class=\"no\">rbp</span>\n  <span class=\"err\">38:</span>   <span class=\"nf\">c3</span>                      <span class=\"no\">ret</span>\n</pre></div>\n\n\n<p>(Experimenting with SIMD support for cg_clif)</p>\n</blockquote>",
        "id": 192071288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585338736
    },
    {
        "content": "<p>bjorn3 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>I compiled</p>\n<div class=\"codehilite\"><pre><span></span>test compile\nset enable_simd\ntarget x86_64-unknown-linux-gnu haswell\n\nfunction u0:0() -&gt; i32 system_v {\n    ss0 = explicit_slot 32\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\nblock0:\n    v0 = stack_addr.i64 ss0\n    v1 = load.i32x4 v0\n    call fn0()\n    v2 = extractlane.i32x4 v1, 1\n    return v2\n}\n</pre></div>\n\n\n<p>this results in the following ir after regalloc:</p>\n<div class=\"codehilite\"><pre><span></span>function u0:0(i64 fp [%rbp]) -&gt; i32 [%rax], i64 fp [%rbp] system_v {\n    ss0 = explicit_slot 32, offset -48\n    ss1 = spill_slot 16, offset -64\n    ss2 = incoming_arg 16, offset -16\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\n                                block0(v5: i64 [%rbp]):\n[RexOp1pushq#50]                    x86_push v5\n[RexOp1copysp#8089]                 copy_special %rsp -&gt; %rbp\n[RexOp1adjustsp_ib#d083]            adjust_sp_down_imm 48\n[RexOp1spaddr8_id#808d,%rax]        v0 = stack_addr.i64 ss0\n[DynRexOp2fld#410,%xmm0]            v3 = load.i32x4 v0\n[RexOp2fspillSib32#411,ss1]         v1 = spill v3\n[Op1call_id#e8]                     call fn0()\n[RexOp2ffillSib32#410,%xmm15]       v4 = fill v1\n[DynRexMp3r_ib_unsigned_gpr#d16,%rax] v2 = x86_pextr v4, 1\n[RexOp1adjustsp_ib#8083]            adjust_sp_up_imm 48\n[RexOp1popq#58,%rbp]                v6 = x86_pop.i64\n[Op1ret#c3]                         return v2, v6\n}\n</pre></div>\n\n\n<p>The value passed to <code>x86_pextr</code> is stored in <code>%xmm15</code>, however the resulting asm expects it in <code>%xmm7</code> despite actually being filled to the correct <code>%xmm15</code>:</p>\n<div class=\"codehilite\"><pre><span></span>   <span class=\"err\">0:</span>   <span class=\"err\">40</span> <span class=\"err\">55</span>                   <span class=\"nf\">push</span>    <span class=\"no\">rbp</span>\n   <span class=\"err\">2:</span>   <span class=\"err\">48</span> <span class=\"err\">89</span> <span class=\"nf\">e5</span>                <span class=\"no\">mov</span>     <span class=\"no\">rbp</span><span class=\"p\">,</span> <span class=\"no\">rsp</span>\n   <span class=\"err\">5:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">ec</span> <span class=\"mi\">30</span>             <span class=\"no\">sub</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n   <span class=\"err\">9:</span>   <span class=\"err\">48</span> <span class=\"err\">8</span><span class=\"nf\">d</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"no\">lea</span>     <span class=\"no\">rax</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"no\">rsp</span> <span class=\"err\">+</span> <span class=\"mi\">0x10</span><span class=\"p\">]</span>\n  <span class=\"err\">11:</span>   <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span>                <span class=\"no\">movups</span>  <span class=\"no\">xmm0</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rax</span><span class=\"p\">]</span>\n  <span class=\"err\">14:</span>   <span class=\"err\">40</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">11</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">],</span> <span class=\"no\">xmm0</span>\n  <span class=\"err\">1</span><span class=\"nl\">d:</span>   <span class=\"nf\">e8</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>          <span class=\"no\">call</span>    <span class=\"mi\">0x22</span>\n  <span class=\"err\">22:</span>   <span class=\"err\">44</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"no\">bc</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmm15</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">]</span>\n  <span class=\"err\">2</span><span class=\"nl\">b:</span>   <span class=\"err\">66</span> <span class=\"err\">41</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">3</span><span class=\"no\">a</span> <span class=\"mi\">16</span> <span class=\"no\">f8</span> <span class=\"mi\">01</span>    <span class=\"no\">pextrd</span>  <span class=\"no\">r8d</span><span class=\"p\">,</span> <span class=\"no\">xmm7</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n  <span class=\"err\">32:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">c4</span> <span class=\"mi\">30</span>             <span class=\"no\">add</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n  <span class=\"err\">36:</span>   <span class=\"err\">40</span> <span class=\"err\">5</span><span class=\"nf\">d</span>                   <span class=\"no\">pop</span>     <span class=\"no\">rbp</span>\n  <span class=\"err\">38:</span>   <span class=\"nf\">c3</span>                      <span class=\"no\">ret</span>\n</pre></div>\n\n\n<p>(Experimenting with SIMD support for cg_clif)</p>\n</blockquote>",
        "id": 192071289,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585338736
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605287326\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605287326\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"cranelift\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"cranelift\"&lt;/summary&gt;</p>\n<ul>\n<li>@bnjbvr</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 192071311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585338747
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288746\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288746\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>What version or commit of Cranelift?</p>\n</blockquote>",
        "id": 192071713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585338963
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288949\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288949\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>0d4bde4ab30f202c888888db7a8eb2d905c0119f</p>\n</blockquote>",
        "id": 192071766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585338998
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288949\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288949\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>0d4bde4ab30f202c888888db7a8eb2d905c0119f (4 days ago)</p>\n</blockquote>",
        "id": 192071782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585339010
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288949\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605288949\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>0d4bde4ab30f202c888888db7a8eb2d905c0119f (from 4 days ago)</p>\n</blockquote>",
        "id": 192071797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585339019
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605289448\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605289448\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>Hm, so <code>x86_pextr</code> should be able to infer that it needs the REX prefix: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/codegen/meta/src/isa/x86/encodings.rs#L1761-L1778\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/codegen/meta/src/isa/x86/encodings.rs#L1761-L1778\">https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/codegen/meta/src/isa/x86/encodings.rs#L1761-L1778</a></p>\n</blockquote>",
        "id": 192071891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585339072
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605291460\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605291460\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>Ah, the operands are flipped, right? <code>66 41 0f 3a 16 f8 01    pextrd  r8d, xmm7, 1</code> is in Intel syntax (I think) and should actually read <code>pextrd xmm15, rax, 1</code>. The REX prefix is there and being applied but the operands are flipped in the recipe or something like that.</p>\n</blockquote>",
        "id": 192072576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585339393
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605292384\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605292384\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>This is the default capstone syntax. I just ran <code>clif-util compile -Dp</code>. And the output should indeed be in <code>%rax</code>. Didn't notice that. I was too focused on the input :)</p>\n</blockquote>",
        "id": 192072857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585339546
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605292622\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605292622\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>From the encoding:</p>\n<div class=\"codehilite\"><pre><span></span>modrm_rr(out_reg0, in_reg0, sink); // note the flipped register in the ModR/M byte\n</pre></div>\n\n\n</blockquote>",
        "id": 192072932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585339586
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605293010\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605293010\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>Flipped the <code>rex2</code> arguments too and the problem was fixed. Will open a PR in a moment.</p>\n</blockquote>",
        "id": 192073053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585339659
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605295620\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423#issuecomment-605295620\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>So my comment above was incorrect:</p>\n<blockquote>\n<p>Ah, the operands are flipped, right?</p>\n</blockquote>\n<p>The operands shouldn't be flipped, it should still be <code>pextrd rax, xmm15, 1</code> since rax is the write register and thus in the R/M slot. It's the REX bits that need to be flipped: good catch that we need to flip the operands that we pass to <code>rex2</code>. Could you add an <code>x86_pextr</code> binemit test (or let me know and I can add to that PR)? The REX coverage is thin...</p>\n</blockquote>",
        "id": 192073869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585340085
    },
    {
        "content": "<p>abrown closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1423\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1423\">Issue #1423</a>:</p>\n<blockquote>\n<p>I compiled</p>\n<div class=\"codehilite\"><pre><span></span>test compile\nset enable_simd\ntarget x86_64-unknown-linux-gnu haswell\n\nfunction u0:0() -&gt; i32 system_v {\n    ss0 = explicit_slot 32\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\nblock0:\n    v0 = stack_addr.i64 ss0\n    v1 = load.i32x4 v0\n    call fn0()\n    v2 = extractlane.i32x4 v1, 1\n    return v2\n}\n</pre></div>\n\n\n<p>this results in the following ir after regalloc:</p>\n<div class=\"codehilite\"><pre><span></span>function u0:0(i64 fp [%rbp]) -&gt; i32 [%rax], i64 fp [%rbp] system_v {\n    ss0 = explicit_slot 32, offset -48\n    ss1 = spill_slot 16, offset -64\n    ss2 = incoming_arg 16, offset -16\n    sig0 = () system_v\n    fn0 = colocated u0:2 sig0\n\n                                block0(v5: i64 [%rbp]):\n[RexOp1pushq#50]                    x86_push v5\n[RexOp1copysp#8089]                 copy_special %rsp -&gt; %rbp\n[RexOp1adjustsp_ib#d083]            adjust_sp_down_imm 48\n[RexOp1spaddr8_id#808d,%rax]        v0 = stack_addr.i64 ss0\n[DynRexOp2fld#410,%xmm0]            v3 = load.i32x4 v0\n[RexOp2fspillSib32#411,ss1]         v1 = spill v3\n[Op1call_id#e8]                     call fn0()\n[RexOp2ffillSib32#410,%xmm15]       v4 = fill v1\n[DynRexMp3r_ib_unsigned_gpr#d16,%rax] v2 = x86_pextr v4, 1\n[RexOp1adjustsp_ib#8083]            adjust_sp_up_imm 48\n[RexOp1popq#58,%rbp]                v6 = x86_pop.i64\n[Op1ret#c3]                         return v2, v6\n}\n</pre></div>\n\n\n<p>The value passed to <code>x86_pextr</code> is stored in <code>%xmm15</code>, however the resulting asm expects it in <code>%xmm7</code> despite actually being filled to the correct <code>%xmm15</code>:</p>\n<div class=\"codehilite\"><pre><span></span>   <span class=\"err\">0:</span>   <span class=\"err\">40</span> <span class=\"err\">55</span>                   <span class=\"nf\">push</span>    <span class=\"no\">rbp</span>\n   <span class=\"err\">2:</span>   <span class=\"err\">48</span> <span class=\"err\">89</span> <span class=\"nf\">e5</span>                <span class=\"no\">mov</span>     <span class=\"no\">rbp</span><span class=\"p\">,</span> <span class=\"no\">rsp</span>\n   <span class=\"err\">5:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">ec</span> <span class=\"mi\">30</span>             <span class=\"no\">sub</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n   <span class=\"err\">9:</span>   <span class=\"err\">48</span> <span class=\"err\">8</span><span class=\"nf\">d</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"no\">lea</span>     <span class=\"no\">rax</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"no\">rsp</span> <span class=\"err\">+</span> <span class=\"mi\">0x10</span><span class=\"p\">]</span>\n  <span class=\"err\">11:</span>   <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"mi\">00</span>                <span class=\"no\">movups</span>  <span class=\"no\">xmm0</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rax</span><span class=\"p\">]</span>\n  <span class=\"err\">14:</span>   <span class=\"err\">40</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">11</span> <span class=\"mi\">84</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">],</span> <span class=\"no\">xmm0</span>\n  <span class=\"err\">1</span><span class=\"nl\">d:</span>   <span class=\"nf\">e8</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>          <span class=\"no\">call</span>    <span class=\"mi\">0x22</span>\n  <span class=\"err\">22:</span>   <span class=\"err\">44</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">10</span> <span class=\"no\">bc</span> <span class=\"mi\">24</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span> <span class=\"mi\">00</span>\n                                <span class=\"nf\">movups</span>  <span class=\"no\">xmm15</span><span class=\"p\">,</span> <span class=\"no\">xmmword</span> <span class=\"no\">ptr</span> <span class=\"p\">[</span><span class=\"no\">rsp</span><span class=\"p\">]</span>\n  <span class=\"err\">2</span><span class=\"nl\">b:</span>   <span class=\"err\">66</span> <span class=\"err\">41</span> <span class=\"err\">0</span><span class=\"nf\">f</span> <span class=\"mi\">3</span><span class=\"no\">a</span> <span class=\"mi\">16</span> <span class=\"no\">f8</span> <span class=\"mi\">01</span>    <span class=\"no\">pextrd</span>  <span class=\"no\">r8d</span><span class=\"p\">,</span> <span class=\"no\">xmm7</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n  <span class=\"err\">32:</span>   <span class=\"err\">48</span> <span class=\"err\">83</span> <span class=\"nf\">c4</span> <span class=\"mi\">30</span>             <span class=\"no\">add</span>     <span class=\"no\">rsp</span><span class=\"p\">,</span> <span class=\"mi\">0x30</span>\n  <span class=\"err\">36:</span>   <span class=\"err\">40</span> <span class=\"err\">5</span><span class=\"nf\">d</span>                   <span class=\"no\">pop</span>     <span class=\"no\">rbp</span>\n  <span class=\"err\">38:</span>   <span class=\"nf\">c3</span>                      <span class=\"no\">ret</span>\n</pre></div>\n\n\n<p>(Experimenting with SIMD support for cg_clif)</p>\n</blockquote>",
        "id": 192082803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585344574
    }
]