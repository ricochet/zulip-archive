[
    {
        "content": "<p>RReverser edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2669\">Issue #2669</a>:</p>\n<blockquote>\n<p>_Originally reported on the Rust repo at <a href=\"https://github.com/rust-lang/rust/issues/82277_\">https://github.com/rust-lang/rust/issues/82277_</a></p>\n<p>I tried this code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">std</span>::<span class=\"n\">fs</span>::<span class=\"n\">hard_link</span><span class=\"p\">(</span><span class=\"s\">\"/a\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/b\"</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I compiled it with <code>--target wasm32-wasi</code> and executed with latest Wasmtime 0.23.0 with <code>wasmtime --mapdir=/::.</code> where the current directory contains valid file <code>a</code>.</p>\n<p>I expected to see this happen:</p>\n<p>A hard link <code>b</code> is created that points to <code>a</code>.</p>\n<p>Instead, this happened:</p>\n<p>It fails with an error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">Os</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mi\">28</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">kind</span>: <span class=\"nc\">InvalidInput</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"s\">\"Invalid argument\"</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">temp</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">2</span>:<span class=\"mi\">36</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">temp</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">unreachable</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x7b4c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__rust_start_panic</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x75e5</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">rust_panic</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x71bd</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">panicking</span>::<span class=\"n\">rust_panic_with_hook</span>::<span class=\"n\">hb9189a2ae1f00dd6</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x6928</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">panicking</span>::<span class=\"n\">begin_panic_handler</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">ha38be87363679287</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0x6869</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_end_short_backtrace</span>::<span class=\"n\">h955bbbeea72dc4a0</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x7061</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">rust_begin_unwind</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0xd0a6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">panicking</span>::<span class=\"n\">panic_fmt</span>::<span class=\"n\">h904ce09f3cb14707</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0xdbcc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">option</span>::<span class=\"n\">expect_none_failed</span>::<span class=\"n\">ha29c9c4296a18e58</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>:  <span class=\"mh\">0xfee</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">result</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"p\">,</span><span class=\"n\">E</span><span class=\"o\">&gt;</span>::<span class=\"n\">unwrap</span>::<span class=\"n\">hcf72e0af954224e8</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">9</span>:  <span class=\"mh\">0x9b7</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">temp</span>::<span class=\"n\">main</span>::<span class=\"n\">hdc57b3c35eac1777</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">10</span>:  <span class=\"mh\">0xac2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span>::<span class=\"n\">call_once</span>::<span class=\"n\">h9d9b1f2044973e11</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">11</span>:  <span class=\"mh\">0x8ac</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"n\">h0d198c55a40ffd2e</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">12</span>:  <span class=\"mh\">0xdf2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">he287b5106de2dbae</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">13</span>: <span class=\"mh\">0x76f6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start_internal</span>::<span class=\"n\">h81003f47a7b429a5</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">14</span>:  <span class=\"mh\">0xdc6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"n\">h75812a9706ce1699</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">15</span>:  <span class=\"mh\">0x9e8</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__original_main</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"mi\">16</span>:  <span class=\"mh\">0x3f9</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"></span>\n</code></pre></div>\n<h2>Meta</h2>\n<p><code>rustc --version --verbose</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"mf\">1.49.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">e1884a8e3</span><span class=\"w\"> </span><span class=\"mi\">2020</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">29</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">binary</span>: <span class=\"nc\">rustc</span><span class=\"w\"></span>\n<span class=\"n\">commit</span><span class=\"o\">-</span><span class=\"n\">hash</span>: <span class=\"nc\">e1884a8e3c3e813aada8254edfa120e85bf5ffca</span><span class=\"w\"></span>\n<span class=\"n\">commit</span><span class=\"o\">-</span><span class=\"n\">date</span>: <span class=\"mi\">2020</span><span class=\"o\">-</span><span class=\"mi\">12</span><span class=\"o\">-</span><span class=\"mi\">29</span><span class=\"w\"></span>\n<span class=\"n\">host</span>: <span class=\"nc\">x86_64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"></span>\n<span class=\"n\">release</span>: <span class=\"mf\">1.49.0</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>wasmtime --version</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"mf\">0.23.0</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/p&gt;<br>\n&lt;/details&gt;</p>\n<h2>Other attempts</h2>\n<h3>Equivalent C code</h3>\n<p>I've also tried to compile an equivalent C code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">#</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">link</span><span class=\"p\">(</span><span class=\"s\">\"/a\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"/b\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>When this is compiled with WASI SDK <code>clang --target=wasm32-wasi</code> and executed with the same command in Wasmtime, it successfully creates the hardlink.</p>\n<h3>Node.js WASI</h3>\n<p>I've also tried to execute those Wasm files with Node.js WASI support, and both Wasm files create hard links successfully.</p>\n<h3>Older Wasmtime</h3>\n<p>Finally, I've tried to execute both with Wasmtime 0.22, and both also create hardlinks successfully, indicating a regression in Wasmtime itself.</p>\n</blockquote>",
        "id": 226964803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1613742485
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2669#issuecomment-782168904\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2669\">Issue #2669</a>:</p>\n<blockquote>\n<p>The short answer is it's a bug in Rust's WASI support; see <a href=\"https://github.com/rust-lang/rust/pull/81984\">https://github.com/rust-lang/rust/pull/81984</a> for a fix. Shorter-term fixes are also possible, so if you need something sooner, let's discuss it.</p>\n<p>The longer answer is:</p>\n<p>POSIX's <code>linkat</code> function has a flags argument which can be <code>AT_SYMLINK_FOLLOW</code>, allowing the user to control whether symlinks are followed. Unlike <code>open</code>'s <code>O_NOFOLLOW</code> however, which fails on a symlink, <code>linkat</code> without <code>AT_SYMLINK_FOLLOW</code> succeeds and simply creates a link to the symlink.</p>\n<p>WASI's <code>link</code> function is modeled after CloudABI's which is modeled after POSIX's, so it has an equivalent of <code>AT_SYMLINK_FOLLOW</code>. However, it's not safe to implement it in terms of a host call to <code>linkat</code> with <code>AT_SYMLINK_FOLLOW</code> set, because that would blindly follow the symlink and could link to something outside the sandbox. Since there's no way to make <code>linkat</code> fail on a symlink, there's no way to implement a sandboxed <code>linkat</code> with <code>AT_SYMLINK_FOLLOW</code> without introducing race conditions.</p>\n<p><code>linkat</code> with <code>AT_SYMLINK_FOLLOW</code> is rare in practice anyway, so I'm preparing to propose a change to WASI to not support it. Wasmtime is admittedly ahead of the curve in that it already doesn't support it. Creating hard links is pretty uncommon in general, and even moreso in code intended to be portable, so I guessed that this might not come up, but I appear to have been wrong :-}.</p>\n</blockquote>",
        "id": 226984405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1613750517
    },
    {
        "content": "<p>RReverser <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2669#issuecomment-782213851\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2669\">Issue #2669</a>:</p>\n<blockquote>\n<p>@sunfishcode Thanks for the detailed explanation! It's always exciting to be hitting bugs that live in a crossover of spec and several implementations <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>\n</blockquote>",
        "id": 226996410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1613754962
    }
]