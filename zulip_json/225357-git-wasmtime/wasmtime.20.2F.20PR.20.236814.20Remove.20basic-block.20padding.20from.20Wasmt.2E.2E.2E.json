[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6814\">PR #6814</a> from <code>alexcrichton:disable-bb-padding-fuzzing</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit removes the option to generate padding between basic blocks when fuzzing Wasmtime. Over the weekend lots of OOMs were discovered related to this option and its most recent update in #6736. The new OOMs appear to be related to:</p>\n<ul>\n<li>If multiple modules are generated then the configured limits in #6736 aren't relevant because they only cap one module.</li>\n<li>Each imported function generates a new trampoline which has its own set of padding which wasn't previously accounted for.</li>\n<li>Spec tests have a lot of functions and the limits didn't account for this.</li>\n</ul>\n<p>While each of these is probably individually fixable I think it's probably not worth the whack-a-mole any more. The <code>cranelift-fuzzgen</code> target should cover the relevant cases for padding without the need for Wasmtime's fuzzing to cover it as well.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 382680671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691423011
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/itsrainy\">itsrainy</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6814\">PR #6814</a>.</p>",
        "id": 382680672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691423011
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6814\">PR #6814</a>.</p>",
        "id": 382680673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691423012
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6814#pullrequestreview-1570124704\">PR review</a>:</p>\n<blockquote>\n<p>Yeah, that's fair: hopefully the Cranelift fuzzing will cover this pretty well.</p>\n</blockquote>",
        "id": 383356064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691599898
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6814\">PR #6814</a>.</p>",
        "id": 383369639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691602428
    }
]