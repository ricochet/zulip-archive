[
    {
        "content": "<p>zzjas opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5568\">issue #5568</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Using a large value for wasi::Rights will cause wasmtime to crash when calling wasi::path_open.</p>\n<p><code>main.rs</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">path_open</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"hello.txt\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">dirflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Lookupflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1774447679</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">oflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Oflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">49784</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fs_rights_base</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Rights</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fs_rights_inheriting</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Rights</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fdflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Fdflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">32796</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">dirflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">oflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fs_rights_base</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fs_rights_inheriting</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fdflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">path_open</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dirflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">oflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_base</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_inheriting</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fdflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"path_open success: fd={}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"path_open failed: err={}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>Cargo.toml</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.11.0\"</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo wasi run</code><br>\nor<br>\n<code>cargo wasi build</code><br>\n<code>wasmtime target/wasm32-wasi/debug/XXX.wasm</code></p>\n<h3>Expected Results</h3>\n<p>An error result should be returned.</p>\n<h3>Actual Results</h3>\n<p>Wasmtime will crash</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0xc711</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi</span>::<span class=\"n\">lib_generated</span>::<span class=\"n\">path_open</span>::<span class=\"n\">hb8ad89a8b9dd6908</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x2e53</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi_debug</span>::<span class=\"n\">main</span>::<span class=\"n\">hfe8a12f5eb42481b</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x10d7d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span>::<span class=\"n\">call_once</span>::<span class=\"n\">hd5eb0775b8968135</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x10d49</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"n\">h8904312c549ad001</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0xfaa0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">h0623c4993ae93fcd</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x8801</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start_internal</span>::<span class=\"n\">hc0c970460a4ce6d4</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0xf2d3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"n\">h0bf5df21c7abc364</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x10fb4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x10e77</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">In</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"n\">wasi_snapshot_preview1</span>::<span class=\"n\">path_open</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">convert</span><span class=\"w\"> </span><span class=\"n\">Rights</span>: <span class=\"nc\">Int</span><span class=\"w\"> </span><span class=\"n\">conversion</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"nc\">Int</span><span class=\"w\"> </span><span class=\"n\">conversion</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">4</span>: <span class=\"nc\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"w\"> </span><span class=\"n\">integral</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">conversion</span><span class=\"w\"> </span><span class=\"n\">attempted</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: cbeec5ddb929e1c6e77f19731e4e3cf1bc9817d0</p>\n<p>Operating system: Arch Linux 6.0.1-arch2-1</p>\n<p>Architecture: x86-64</p>\n<h3>Extra Info</h3>\n<p>While the large value for wasi::Rights is not useful, we are not sure if the crash is intended or a bug. We ran the same test with some other runtimes (wasmer, wamr, wavm) and they returned an Err in this case.</p>\n<p>We appreciate your help in looking into this!<br>\n</p>\n</blockquote>",
        "id": 321075402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673579544
    },
    {
        "content": "<p>zzjas labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5568\">issue #5568</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Using a large value for wasi::Rights will cause wasmtime to crash when calling wasi::path_open.</p>\n<p><code>main.rs</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">path_open</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"hello.txt\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">dirflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Lookupflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1774447679</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">oflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Oflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">49784</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fs_rights_base</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Rights</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fs_rights_inheriting</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Rights</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fdflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Fdflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">32796</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">dirflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">oflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fs_rights_base</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fs_rights_inheriting</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fdflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">path_open</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dirflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">oflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_base</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_inheriting</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fdflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"path_open success: fd={}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"path_open failed: err={}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>Cargo.toml</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.11.0\"</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo wasi run</code><br>\nor<br>\n<code>cargo wasi build</code><br>\n<code>wasmtime target/wasm32-wasi/debug/XXX.wasm</code></p>\n<h3>Expected Results</h3>\n<p>An error result should be returned.</p>\n<h3>Actual Results</h3>\n<p>Wasmtime will crash</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0xc711</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi</span>::<span class=\"n\">lib_generated</span>::<span class=\"n\">path_open</span>::<span class=\"n\">hb8ad89a8b9dd6908</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x2e53</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi_debug</span>::<span class=\"n\">main</span>::<span class=\"n\">hfe8a12f5eb42481b</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x10d7d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span>::<span class=\"n\">call_once</span>::<span class=\"n\">hd5eb0775b8968135</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x10d49</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"n\">h8904312c549ad001</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0xfaa0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">h0623c4993ae93fcd</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x8801</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start_internal</span>::<span class=\"n\">hc0c970460a4ce6d4</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0xf2d3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"n\">h0bf5df21c7abc364</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x10fb4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x10e77</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">In</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"n\">wasi_snapshot_preview1</span>::<span class=\"n\">path_open</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">convert</span><span class=\"w\"> </span><span class=\"n\">Rights</span>: <span class=\"nc\">Int</span><span class=\"w\"> </span><span class=\"n\">conversion</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"nc\">Int</span><span class=\"w\"> </span><span class=\"n\">conversion</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">4</span>: <span class=\"nc\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"w\"> </span><span class=\"n\">integral</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">conversion</span><span class=\"w\"> </span><span class=\"n\">attempted</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: cbeec5ddb929e1c6e77f19731e4e3cf1bc9817d0</p>\n<p>Operating system: Arch Linux 6.0.1-arch2-1</p>\n<p>Architecture: x86-64</p>\n<h3>Extra Info</h3>\n<p>While the large value for wasi::Rights is not useful, we are not sure if the crash is intended or a bug. We ran the same test with some other runtimes (wasmer, wamr, wavm) and they returned an Err in this case.</p>\n<p>We appreciate your help in looking into this!<br>\n</p>\n</blockquote>",
        "id": 321075403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673579544
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5568#issuecomment-1382008592\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5568\">issue #5568</a>:</p>\n<blockquote>\n<p>Thanks for the report, but this is expected. The WASI spec does not strictly say what should happen on invalid rights/etc and in the future with the component model this will be a trap, so Wasmtime implements this as a trap. Note that this isn't Wasmtime crashing, it's just a normal trap being raised from a host call.</p>\n</blockquote>",
        "id": 321186896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673623210
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5568\">issue #5568</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>Using a large value for wasi::Rights will cause wasmtime to crash when calling wasi::path_open.</p>\n<p><code>main.rs</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">path_open</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"hello.txt\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">dirflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Lookupflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1774447679</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">oflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Oflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">49784</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fs_rights_base</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Rights</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fs_rights_inheriting</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Rights</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fdflags</span>: <span class=\"nc\">wasi</span>::<span class=\"n\">Fdflags</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">32796</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">dirflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">oflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fs_rights_base</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fs_rights_inheriting</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">fdflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">path_open</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dirflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">oflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_base</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_inheriting</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fdflags</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"path_open success: fd={}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">Err</span><span class=\"p\">(</span><span class=\"n\">err</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"path_open failed: err={}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">err</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>Cargo.toml</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.11.0\"</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo wasi run</code><br>\nor<br>\n<code>cargo wasi build</code><br>\n<code>wasmtime target/wasm32-wasi/debug/XXX.wasm</code></p>\n<h3>Expected Results</h3>\n<p>An error result should be returned.</p>\n<h3>Actual Results</h3>\n<p>Wasmtime will crash</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0xc711</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi</span>::<span class=\"n\">lib_generated</span>::<span class=\"n\">path_open</span>::<span class=\"n\">hb8ad89a8b9dd6908</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x2e53</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">wasi_debug</span>::<span class=\"n\">main</span>::<span class=\"n\">hfe8a12f5eb42481b</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>: <span class=\"mh\">0x10d7d</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">core</span>::<span class=\"n\">ops</span>::<span class=\"n\">function</span>::<span class=\"nb\">FnOnce</span>::<span class=\"n\">call_once</span>::<span class=\"n\">hd5eb0775b8968135</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>: <span class=\"mh\">0x10d49</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">sys_common</span>::<span class=\"n\">backtrace</span>::<span class=\"n\">__rust_begin_short_backtrace</span>::<span class=\"n\">h8904312c549ad001</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">4</span>: <span class=\"mh\">0xfaa0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"p\">{{</span><span class=\"n\">closure</span><span class=\"p\">}}</span>::<span class=\"n\">h0623c4993ae93fcd</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">5</span>: <span class=\"mh\">0x8801</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start_internal</span>::<span class=\"n\">hc0c970460a4ce6d4</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">6</span>: <span class=\"mh\">0xf2d3</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">std</span>::<span class=\"n\">rt</span>::<span class=\"n\">lang_start</span>::<span class=\"n\">h0bf5df21c7abc364</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">7</span>: <span class=\"mh\">0x10fb4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__main_void</span><span class=\"w\"></span>\n<span class=\"w\">           </span><span class=\"mi\">8</span>: <span class=\"mh\">0x10e77</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span><span class=\"w\"></span>\n<span class=\"w\">       </span><span class=\"n\">note</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">In</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"n\">wasi_snapshot_preview1</span>::<span class=\"n\">path_open</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">convert</span><span class=\"w\"> </span><span class=\"n\">Rights</span>: <span class=\"nc\">Int</span><span class=\"w\"> </span><span class=\"n\">conversion</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">3</span>: <span class=\"nc\">Int</span><span class=\"w\"> </span><span class=\"n\">conversion</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mi\">4</span>: <span class=\"nc\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">range</span><span class=\"w\"> </span><span class=\"n\">integral</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">conversion</span><span class=\"w\"> </span><span class=\"n\">attempted</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: cbeec5ddb929e1c6e77f19731e4e3cf1bc9817d0</p>\n<p>Operating system: Arch Linux 6.0.1-arch2-1</p>\n<p>Architecture: x86-64</p>\n<h3>Extra Info</h3>\n<p>While the large value for wasi::Rights is not useful, we are not sure if the crash is intended or a bug. We ran the same test with some other runtimes (wasmer, wamr, wavm) and they returned an Err in this case.</p>\n<p>We appreciate your help in looking into this!<br>\n</p>\n</blockquote>",
        "id": 321186900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1673623211
    }
]