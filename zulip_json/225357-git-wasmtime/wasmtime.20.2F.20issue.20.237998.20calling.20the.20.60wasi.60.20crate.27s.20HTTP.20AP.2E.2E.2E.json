[
    {
        "content": "<p><a href=\"https://github.com/yoshuawuyts\">yoshuawuyts</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">Issue #7998</a>.</p>",
        "id": 423437006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708965557
    },
    {
        "content": "<p>yoshuawuyts opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><em>GitHub doesn't like <code>.wasm</code> file uploads it seems:</em></p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>We donâ€™t support that file type.\nTry again with GIF, JPEG, JPG, MOV, MP4, PNG, SVG, WEBM, CPUPROFILE, CSV, DMP, DOCX, FODG, FODP, FODS, FODT, GZ, JSON, JSONC, LOG, MD, ODF, ODG, ODP, ODS, ODT, PATCH, PDF, PPTX, TGZ, TXT, XLS, XLSX or ZIP.\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><a href=\"https://github.com/yoshuawuyts/wasm-http-tools/tree/failing-test-repro\">Using this branch of <code>yoshuawuyts/wasm-http-tools</code></a>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>clone<span class=\"w\"> </span>yoshuawuyts/wasm-http-tools\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>yoshuawuyts:failing-test-repro\n./run.sh\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>I expected this to run and not crash.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>    Finished dev [unoptimized + debuginfo] target(s) in 0.10s\nError: failed to run main module `target/main.wasm`\n\nCaused by:\n    0: failed to invoke `run` function\n    1: error while executing at wasm backtrace:\n           0: 0x2c796f - wit-component:shim!indirect-wasi:http/outgoing-handler@0.2.0-handle\n           1: 0xbedb - &lt;unknown&gt;!wasi::bindings::wasi::http::outgoing_handler::handle::hbd9a4f4888720497\n           2: 0x2719 - &lt;unknown&gt;!main::main::h5f582b6fe5e8781c\n           3: 0x1c32 - &lt;unknown&gt;!core::ops::function::FnOnce::call_once::h03dbeeeaf506d8dd\n           4: 0x1a58 - &lt;unknown&gt;!std::sys_common::backtrace::__rust_begin_short_backtrace::hb341647f02aac7d1\n           5: 0x18e4 - &lt;unknown&gt;!std::rt::lang_start::{{closure}}::h7606763051b64eac\n           6: 0x16084 - &lt;unknown&gt;!std::rt::lang_start_internal::h11043ae9961d0df9\n           7: 0x1880 - &lt;unknown&gt;!std::rt::lang_start::hd1c6474d6799145b\n           8: 0x2a95 - &lt;unknown&gt;!__main_void\n           9: 0x17fb - &lt;unknown&gt;!_start\n          10: 0x2c3aed - wit-component:adapter:wasi_snapshot_preview1!wasi:cli/run@0.2.0#run\n       note: using the `WASMTIME_BACKTRACE_DETAILS=1` environment variable may show more debugging information\n    2: ErrorCode::HttpRequestUriInvalid\nyosh@MacBook-Pro wasm-http-tools %\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>v18.0.1</code></p>\n<p>Operating system: MacOS</p>\n<p>Architecture: ARM</p>\n<h3>Extra Info</h3>\n<p>Talked to Dan; this seems like it might be an issue with the adapter? It's failing right in the middle. The <code>run.sh</code> command calls <code>wasmtime run -S http</code> - and perhaps that's not being picked up correctly in a CLI world? Unsure; we probably need to investigate.<br>\n</p>\n</blockquote>",
        "id": 423437012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708965558
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998#issuecomment-1964620723\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<p>For wasm uploads we usually stick them in a <code>.zip</code>. I think the restriction is related to CORS</p>\n</blockquote>",
        "id": 423438575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708965912
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998#issuecomment-1964869435\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<p>I believe that this is an expected error related to the \"protocol\" that wasi-http is expecting. I can get your example to work by changing it to:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi</span>::<span class=\"n\">http</span>::<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">outgoing_handler</span>::<span class=\"p\">{</span><span class=\"n\">handle</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">OutgoingRequest</span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">types</span>::<span class=\"p\">{</span><span class=\"n\">Fields</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Method</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RequestOptions</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Scheme</span><span class=\"p\">},</span>\n<span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasi_http_client</span>::<span class=\"n\">Poller</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">poller</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Poller</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fields</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Fields</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">req</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">OutgoingRequest</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">fields</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_method</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Method</span>::<span class=\"n\">Get</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_scheme</span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Scheme</span>::<span class=\"n\">Https</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_path_with_query</span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"s\">\"/\"</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">req</span><span class=\"p\">.</span><span class=\"n\">set_authority</span><span class=\"p\">(</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"s\">\"example.com\"</span><span class=\"p\">)).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">handle</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">pollable</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">.</span><span class=\"n\">subscribe</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">poller</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">pollable</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"c1\">// assert!(&amp;pollable.ready(), \"pollable was not ready\");</span>\n<span class=\"w\">    </span><span class=\"n\">poller</span><span class=\"p\">.</span><span class=\"n\">block_until</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"nb\">drop</span><span class=\"p\">(</span><span class=\"n\">poller</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Specifically <code>path_with_query</code> doesn't take the whole hostname, just the <code>/</code> and the trailing bits. You'll also need to call <code>set_authority</code> and <code>set_scheme</code>. Finally the <code>poller</code> is a \"child resource\" of <code>res</code> so you'll need to drop that first before <code>res</code>. After all that though I see:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">http</span><span class=\"o\">-</span><span class=\"n\">client</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">21</span>:<span class=\"mi\">5</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">FutureIncomingResponse</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">handle</span>: <span class=\"nc\">Resource</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">handle</span>: <span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Due to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/36fb62ca3bea7dd1456f12ead03084e2ceb48cda/crates/wasi-http/src/lib.rs#L61\">this</a> if you hit confusing errors I might also recommend <code>WASMTIME_LOG=warn</code> to help diagnose a bit.</p>\n</blockquote>",
        "id": 423463196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708973730
    },
    {
        "content": "<p>yoshuawuyts closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p><em>GitHub doesn't like <code>.wasm</code> file uploads it seems:</em></p>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>We donâ€™t support that file type.\nTry again with GIF, JPEG, JPG, MOV, MP4, PNG, SVG, WEBM, CPUPROFILE, CSV, DMP, DOCX, FODG, FODP, FODS, FODT, GZ, JSON, JSONC, LOG, MD, ODF, ODG, ODP, ODS, ODT, PATCH, PDF, PPTX, TGZ, TXT, XLS, XLSX or ZIP.\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><a href=\"https://github.com/yoshuawuyts/wasm-http-tools/tree/failing-test-repro\">Using this branch of <code>yoshuawuyts/wasm-http-tools</code></a>:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>git<span class=\"w\"> </span>clone<span class=\"w\"> </span>yoshuawuyts/wasm-http-tools\ngit<span class=\"w\"> </span>checkout<span class=\"w\"> </span>yoshuawuyts:failing-test-repro\n./run.sh\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>I expected this to run and not crash.</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Text only\"><pre><span></span><code>    Finished dev [unoptimized + debuginfo] target(s) in 0.10s\nError: failed to run main module `target/main.wasm`\n\nCaused by:\n    0: failed to invoke `run` function\n    1: error while executing at wasm backtrace:\n           0: 0x2c796f - wit-component:shim!indirect-wasi:http/outgoing-handler@0.2.0-handle\n           1: 0xbedb - &lt;unknown&gt;!wasi::bindings::wasi::http::outgoing_handler::handle::hbd9a4f4888720497\n           2: 0x2719 - &lt;unknown&gt;!main::main::h5f582b6fe5e8781c\n           3: 0x1c32 - &lt;unknown&gt;!core::ops::function::FnOnce::call_once::h03dbeeeaf506d8dd\n           4: 0x1a58 - &lt;unknown&gt;!std::sys_common::backtrace::__rust_begin_short_backtrace::hb341647f02aac7d1\n           5: 0x18e4 - &lt;unknown&gt;!std::rt::lang_start::{{closure}}::h7606763051b64eac\n           6: 0x16084 - &lt;unknown&gt;!std::rt::lang_start_internal::h11043ae9961d0df9\n           7: 0x1880 - &lt;unknown&gt;!std::rt::lang_start::hd1c6474d6799145b\n           8: 0x2a95 - &lt;unknown&gt;!__main_void\n           9: 0x17fb - &lt;unknown&gt;!_start\n          10: 0x2c3aed - wit-component:adapter:wasi_snapshot_preview1!wasi:cli/run@0.2.0#run\n       note: using the `WASMTIME_BACKTRACE_DETAILS=1` environment variable may show more debugging information\n    2: ErrorCode::HttpRequestUriInvalid\nyosh@MacBook-Pro wasm-http-tools %\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>v18.0.1</code></p>\n<p>Operating system: MacOS</p>\n<p>Architecture: ARM</p>\n<h3>Extra Info</h3>\n<p>Talked to Dan; this seems like it might be an issue with the adapter? It's failing right in the middle. The <code>run.sh</code> command calls <code>wasmtime run -S http</code> - and perhaps that's not being picked up correctly in a CLI world? Unsure; we probably need to investigate.<br>\n</p>\n</blockquote>",
        "id": 423891673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709149866
    },
    {
        "content": "<p>yoshuawuyts <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998#issuecomment-1969736349\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<p>That did the trick; thank you!</p>\n</blockquote>",
        "id": 423891674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709149867
    },
    {
        "content": "<p>kaivol <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998#issuecomment-2027294862\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<p>I also came across this and wondered whether this is really the desired behavior. <br>\nShouldn't <code>handle</code> return an error code that can be handled in the user code instead of simply crashing?</p>\n</blockquote>",
        "id": 430261332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711721189
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998#issuecomment-2027449270\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<p>That's a good point! @kaivol would you be up for opening a dedicated issue for that?</p>\n</blockquote>",
        "id": 430281096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711729520
    },
    {
        "content": "<p>kaivol <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998#issuecomment-2028518251\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<p>Yes I can do that</p>\n</blockquote>",
        "id": 430433913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711847762
    },
    {
        "content": "<p>kaivol edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998#issuecomment-2028518251\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7998\">issue #7998</a>:</p>\n<blockquote>\n<p>Yes I can do that<br>\nSee #8269 </p>\n</blockquote>",
        "id": 430435222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711849350
    }
]