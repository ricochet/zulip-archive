[
    {
        "content": "<p>xpepermint opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4925\">issue #4925</a>:</p>\n<blockquote>\n<p>I'd kindly ask the community to provide an example of how to pass files and folders to <code>WasiCtx</code> based on the scaffold below:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">default</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_stdio</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_stdout</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">insert_file</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"> </span><span class=\"c1\">// ???</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">insert_dir</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"> </span><span class=\"c1\">// ???</span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 299598373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663604199
    },
    {
        "content": "<p>lann <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4925#issuecomment-1251463784\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4925\">issue #4925</a>:</p>\n<blockquote>\n<p>If you don't want to dig deep into the internals of how WASI works, the only \"friendly-ish\" interface is to attach an entire directory with <a href=\"https://docs.rs/wasmtime-wasi/0.39.1/wasmtime_wasi/sync/struct.WasiCtxBuilder.html#method.preopened_dir\">https://docs.rs/wasmtime-wasi/0.39.1/wasmtime_wasi/sync/struct.WasiCtxBuilder.html#method.preopened_dir</a></p>\n<p>This is adapted from working code but otherwise untested:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">host_dir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/host/directory\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">guest_dir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"/guest/directory\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">Dir</span>::<span class=\"n\">open_ambient_dir</span><span class=\"p\">(</span><span class=\"n\">host_dir</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_cap_std_sync</span>::<span class=\"n\">ambient_authority</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">preopened_dir</span><span class=\"p\">(</span><span class=\"n\">dir</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">guest_dir</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 299632431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663616220
    },
    {
        "content": "<p>xpepermint <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4925#issuecomment-1251968479\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4925\">issue #4925</a>:</p>\n<blockquote>\n<p>@lann this should work for now. Thank you.</p>\n</blockquote>",
        "id": 299698950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663659904
    },
    {
        "content": "<p>xpepermint closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4925\">issue #4925</a>:</p>\n<blockquote>\n<p>I'd kindly ask the community to provide an example of how to pass files and folders to <code>WasiCtx</code> based on the scaffold below:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">default</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime_wasi</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">s</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span>::<span class=\"n\">new</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_stdio</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_stdout</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">insert_file</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"> </span><span class=\"c1\">// ???</span>\n<span class=\"w\">    </span><span class=\"n\">wasi</span><span class=\"p\">.</span><span class=\"n\">insert_dir</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"> </span><span class=\"c1\">// ???</span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 299698951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663659904
    }
]