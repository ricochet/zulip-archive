[
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6935#issuecomment-1728482623\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6935\">issue #6935</a>:</p>\n<blockquote>\n<p>Alright this is ready for review now! @alexcrichton mind taking a look?</p>\n</blockquote>",
        "id": 392213093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695247184
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6935#issuecomment-1730175170\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6935\">issue #6935</a>:</p>\n<blockquote>\n<blockquote>\n<p>One thing I'm missing though, how will this all fit together? While we can dump globals/memories/etc that happen to be in the <code>Store</code> how is it planned to correlate that back to indices within module instances?</p>\n<p>Put another way this gives access to private memories/globals which seems required to have core dumps at all, but beyond providing access it doens't provide a great means of figuring out what a <code>Global</code> or a <code>Memory</code> is</p>\n</blockquote>\n<p>I have a WIP follow up PR that actually makes <code>wasmtime::CoreDump</code> serializable (we don't actually use <code>wasmtime::CoreDump</code> yet for the <code>-Dcoredump=...</code> flag, for example) and will do all the mapping between frames and instances and modules and globals and memories. There is definitely more to be done here, and you shouldn't expect core dump stuff to be finished and complete after this PR. </p>\n</blockquote>",
        "id": 392383975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695324638
    }
]