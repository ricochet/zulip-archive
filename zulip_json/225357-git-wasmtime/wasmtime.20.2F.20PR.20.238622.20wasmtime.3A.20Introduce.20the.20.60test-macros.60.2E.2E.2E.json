[
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a> from <code>saulecabrera:add-test-macros</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit introduces the <code>test-macros</code> crate. The whole idea behind this crate is to export a single or multiple macros to make it easier to configure Wasmtime for integration tests. The main use-case at this time, is running a subset of the integration tests with Cranelift and Winch. This crate could be extended to serve other use-cases, like testing pooling allocator and/or GC configurations.  </p>\n<p>This commit introduces a single example of how this macro could be used. If there's agreement on merging this change in some shape or form, I'll follow up with migrating the current tests to use <code>#[wasmtime_test]</code> where applicable. </p>\n<p>Part of what's implemented in this PR was discussed in Cranelift's meeting on <a href=\"https://github.com/bytecodealliance/meetings/blob/main/cranelift/2024/cranelift-04-24.md\">April 24th, 2024</a>, however there are several discussion points that are still \"in the air\", like for example, what's the best way to avoid the combinatorial explosion problem for the potential test matrix.</p>\n<p>-- </p>\n<p>cc/ @alexcrichton @fitzgen I'm opening this a draft, but feel free to leave any feedback according the discussion in the Cranelift meeting. I'm a bit concerned because I don't really have a good answer to the combinatorial problem of the test matrix, at least initially I suspect this won't be an issue necessarily, but if this macro grows in functionality I think it might be a problem. </p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 438684143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715731923
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 438684375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715732064
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>:</p>\n<blockquote>\n<p>This commit introduces the <code>test-macros</code> crate. The whole idea behind this crate is to export a single or multiple macros to make it easier to configure Wasmtime for integration tests. The main use-case at this time, is <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8092\">running a subset of the integration tests with Cranelift and Winch</a>. This crate could be extended to serve other use-cases, like testing pooling allocator and/or GC configurations.  </p>\n<p>This commit introduces a single example of how this macro could be used. If there's agreement on merging this change in some shape or form, I'll follow up with migrating the current tests to use <code>#[wasmtime_test]</code> where applicable. </p>\n<p>Part of what's implemented in this PR was discussed in Cranelift's meeting on <a href=\"https://github.com/bytecodealliance/meetings/blob/main/cranelift/2024/cranelift-04-24.md\">April 24th, 2024</a>, however there are several discussion points that are still \"in the air\", like for example, what's the best way to avoid the combinatorial explosion problem for the potential test matrix.</p>\n<p>-- </p>\n<p>cc/ @alexcrichton @fitzgen I'm opening this a draft, but feel free to leave any feedback according the discussion in the Cranelift meeting. I'm a bit concerned because I don't really have a good answer to the combinatorial problem of the test matrix, at least initially I suspect this won't be an issue necessarily, but if this macro grows in functionality I think it might be a problem. </p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 438684562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715732179
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 438772513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715769370
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 438772842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715769508
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 438773031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715769589
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 438784503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715773974
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 438789388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715775733
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#issuecomment-2112838940\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>:</p>\n<blockquote>\n<p>Excited for this! Will take a look today</p>\n</blockquote>",
        "id": 438828694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715786339
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2058337879\">PR review</a>.</p>",
        "id": 438851863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715793592
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2058337879\">PR review</a>.</p>",
        "id": 438851864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715793592
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1601999634\">PR review comment</a>:</p>\n<blockquote>\n<p>I might recommend replacing <code>strategies</code> with something like <code>config: TestConfig</code> which internally has <code>Vec&lt;(String,Ident)&gt;</code> or similar to make this more easily growable in the future to multiple configuration options.</p>\n</blockquote>",
        "id": 438851865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715793592
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1601838816\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind also adding <code>publish = false</code> here? (may also require changes to <code>publish.rs</code>, I sort of forget)</p>\n<p>Also, to handle the clippy issues on CI you can add:</p>\n<div class=\"codehilite\" data-code-language=\"TOML\"><pre><span></span><code><span class=\"k\">[lints]</span>\n<span class=\"n\">workspace</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kc\">true</span>\n</code></pre></div>\n<p>to inherit the defaults of the workspace which allows clippy lints by default.</p>\n</blockquote>",
        "id": 438851866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715793592
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1601998852\">PR review comment</a>:</p>\n<blockquote>\n<p>One possible concern about <code>ItemFn</code> here is that in the limit the entire test crate will be tagged with <code>#[wasmtime_test]</code> and that means the entire crate is parsed through <code>syn</code> and emitted back out. Technically the only needed part here is the function signature. </p>\n<p>I'm not sure if it's worth it, but this could try to be a bit clever where it parses <code>syn::ItemFn</code> manually up to the <code>block</code> and then keeps the <code>block</code> as an opaque <code>TokenStream</code> (since it's known that it's brace-delimited anyway). </p>\n</blockquote>",
        "id": 438851867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715793592
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1601992072\">PR review comment</a>:</p>\n<blockquote>\n<p>It might be good to replace this with <a href=\"https://docs.rs/syn/latest/syn/meta/struct.ParseNestedMeta.html#method.parse_nested_meta\"><code>parse_nested_meta</code></a> perhaps?</p>\n</blockquote>",
        "id": 438851868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715793592
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2058562689\">PR review</a>:</p>\n<blockquote>\n<p>Definitely going in a good direction!</p>\n</blockquote>",
        "id": 438859968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715796499
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2058562689\">PR review</a>:</p>\n<blockquote>\n<p>Definitely going in a good direction!</p>\n</blockquote>",
        "id": 438859969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715796499
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1601976038\">PR review comment</a>:</p>\n<blockquote>\n<p>This shouldn't be necessary because a crate in the workspace depends on this crate.</p>\n</blockquote>",
        "id": 438859970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715796499
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1602056184\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, this is exactly what I was imagining usage would look like <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 438859974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715796500
    },
    {
        "content": "<p>saulecabrera updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 440561723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576846
    },
    {
        "content": "<p><strong>saulecabrera</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a> as ready for review.</p>",
        "id": 440561748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576860
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 440561750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576861
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 440561751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576861
    },
    {
        "content": "<p><strong>saulecabrera</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 440561752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576861
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2077640705\">PR review</a>.</p>",
        "id": 440561775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576873
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1613892532\">PR review comment</a>:</p>\n<blockquote>\n<p>Done, thanks!</p>\n</blockquote>",
        "id": 440561777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576874
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2077640928\">PR review</a>.</p>",
        "id": 440561795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576884
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1613892721\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 440561797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576884
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2077642064\">PR review</a>.</p>",
        "id": 440561891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576926
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1613893461\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point. Took me a bit to figure out, but I was able to make this idea work by introduce a partial function parser as per your suggestion. Let me know what you think!</p>\n</blockquote>",
        "id": 440561892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576926
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2077642434\">PR review</a>.</p>",
        "id": 440561905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576933
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1613893611\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 440561907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576933
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2077642745\">PR review</a>.</p>",
        "id": 440561933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576946
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1613893779\">PR review comment</a>:</p>\n<blockquote>\n<p>Done, thanks!</p>\n</blockquote>",
        "id": 440561935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716576946
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#issuecomment-2130176127\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>:</p>\n<blockquote>\n<p>Thanks for the review Alex and Nick. I've addressed all the comments, I think this is ready for another round of reviews. </p>\n</blockquote>",
        "id": 440562072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716577000
    },
    {
        "content": "<p>saulecabrera edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#issuecomment-2130176127\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>:</p>\n<blockquote>\n<p>Thanks for the reviews Alex and Nick. I've addressed all the comments, I think this is ready for another round of reviews. </p>\n</blockquote>",
        "id": 440562084,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716577010
    },
    {
        "content": "<p>saulecabrera edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#discussion_r1613893461\">PR review comment</a>.</p>",
        "id": 440562387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716577150
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#pullrequestreview-2083046911\">PR review</a>:</p>\n<blockquote>\n<p>Looks great to me, thanks!</p>\n<p>I'm going to go ahead and merge, but some other assorted thoughts (which are fine as follow-ups or to ignore entirely):</p>\n<ul>\n<li>Should the default perhaps be the \"full matrix\" of tests? For example pooling, default settings (cranelift), and winch might be the three main configurations to execute in right now.</li>\n<li>Instead of opting-in to strategy should the attributes be \"skip this test on winch\" or similar? (e.g. eagerly running all tests instead of having to opt-in to testing)</li>\n</ul>\n<p>In any case it might make more sense to expand the current strategy implemented and see how it looks after?</p>\n</blockquote>",
        "id": 441055865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716907367
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>.</p>",
        "id": 441058606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716908247
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622#issuecomment-2137453729\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8622\">PR #8622</a>:</p>\n<blockquote>\n<p>Those are good suggestions Alex, I like the idea of opting out instead of opting in, it has the potential to make the macro less verbose and easier to integrate. I'll start migrating the tests and see how things shape up and update the macro definition if needed. </p>\n</blockquote>",
        "id": 441244100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716990256
    }
]