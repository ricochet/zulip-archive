[
    {
        "content": "<p>GOVYANSONG opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802\">issue #4802</a>:</p>\n<blockquote>\n<p>#include &lt;stdio.h&gt;</p>\n<p>int main(void)<br>\n{<br>\n    puts(\"Hello\");<br>\n    return 0;<br>\n}</p>\n<p>built with wasi sdk v16.5: /opt/wasi-sdk/dist/wasi-sdk-16.5ga0a342ac182c/bin/clang --target=wasm32-unknown-wasi --sysroot /opt/wasi-sdk/dist/wasi-sysroot -g -O0 -v -o hello.wasm hello.c</p>\n<p>wasmtime version: wasmtime-cli 0.40.0<br>\nlldb version: lldb version 10.0.0<br>\nlinux wsl2: 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p>run: wasmtime -g hello.wasm</p>\n<p>exception thrown:</p>\n<p>0: rust_begin_unwind<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/panicking.rs:584:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/panicking.rs:142:14<br>\n   2: core::result::unwrap_failed<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/result.rs:1805:5<br>\n   3: wasmtime_jit::debug::create_gdbjit_image<br>\n   4: wasmtime_jit::instantiate::CompiledModule::from_artifacts<br>\n   5: wasmtime::module::Module::from_parts<br>\n   6: wasmtime::module::Module::from_binary<br>\n   7: wasmtime::module::Module::from_file<br>\n   8: wasmtime_cli::commands::run::RunCommand::load_module<br>\n   9: wasmtime_cli::commands::run::RunCommand::execute<br>\n  10: wasmtime::main<br>\n</p>\n</blockquote>",
        "id": 295627731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661624747
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802#issuecomment-1229242026\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802\">issue #4802</a>:</p>\n<blockquote>\n<p>Please see <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4669#issuecomment-1210997950\">https://github.com/bytecodealliance/wasmtime/issues/4669#issuecomment-1210997950</a> In any case can you upload the wasm file itself. That will help with reproducing it in the future if someone wants to work on fixing this bug.</p>\n</blockquote>",
        "id": 295628210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661625012
    },
    {
        "content": "<p>GOVYANSONG <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802#issuecomment-1229242717\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802\">issue #4802</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/9438497/hello.wasm.txt\">hello.wasm.txt</a></p>\n<p>Please rename the .txt file to original hello.wasm.</p>\n</blockquote>",
        "id": 295628610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661625276
    },
    {
        "content": "<p>GOVYANSONG <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802#issuecomment-1229319239\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802\">issue #4802</a>:</p>\n<blockquote>\n<p>I drew inspiration from wasi example of wasmtime project itself. although lldb -- wasmtime run -g xyz.wasm throws nasty panic, the programmatical approach seemed to work fine e.g. set debug info to true. basically, adopted the wasi example and added config to set debug info = true. lldb ./wasi, set breakpoint for method name main (c wrapper) and _start (default wasi export). while in lldb debug session, run , gui, source code view is available.</p>\n</blockquote>",
        "id": 295648917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661642766
    },
    {
        "content": "<p>GOVYANSONG closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4802\">issue #4802</a>:</p>\n<blockquote>\n<p>#include &lt;stdio.h&gt;</p>\n<p>int main(void)<br>\n{<br>\n    puts(\"Hello\");<br>\n    return 0;<br>\n}</p>\n<p>built with wasi sdk v16.5: /opt/wasi-sdk/dist/wasi-sdk-16.5ga0a342ac182c/bin/clang --target=wasm32-unknown-wasi --sysroot /opt/wasi-sdk/dist/wasi-sysroot -g -O0 -v -o hello.wasm hello.c</p>\n<p>wasmtime version: wasmtime-cli 0.40.0<br>\nlldb version: lldb version 10.0.0<br>\nlinux wsl2: 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p>run: wasmtime -g hello.wasm</p>\n<p>exception thrown:</p>\n<p>0: rust_begin_unwind<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/panicking.rs:584:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/panicking.rs:142:14<br>\n   2: core::result::unwrap_failed<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/result.rs:1805:5<br>\n   3: wasmtime_jit::debug::create_gdbjit_image<br>\n   4: wasmtime_jit::instantiate::CompiledModule::from_artifacts<br>\n   5: wasmtime::module::Module::from_parts<br>\n   6: wasmtime::module::Module::from_binary<br>\n   7: wasmtime::module::Module::from_file<br>\n   8: wasmtime_cli::commands::run::RunCommand::load_module<br>\n   9: wasmtime_cli::commands::run::RunCommand::execute<br>\n  10: wasmtime::main<br>\n</p>\n</blockquote>",
        "id": 295648918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661642766
    }
]