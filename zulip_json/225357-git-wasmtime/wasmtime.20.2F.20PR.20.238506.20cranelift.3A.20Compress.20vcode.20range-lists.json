[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506\">PR #8506</a> from <code>jameysharp:compress-range-lists</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>These lists of ranges always cover contiguous ranges of an index space, meaning the start of one range is the same as the end of the previous range, so we can cut storage in half by only storing one endpoint of each range.</p>\n<p>This in turn means we don't have to keep track of the other endpoint while building these lists, reducing the state we need to keep while building vcode and simplifying the various build steps.</p>\n</blockquote>",
        "id": 436131933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714422039
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506\">PR #8506</a>.</p>",
        "id": 436131934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714422039
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506\">PR #8506</a>.</p>",
        "id": 436131935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714422039
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506\">PR #8506</a>.</p>",
        "id": 436133582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714422643
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#pullrequestreview-2029749292\">PR review</a>.</p>",
        "id": 436150374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714429253
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#pullrequestreview-2029749292\">PR review</a>.</p>",
        "id": 436150375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714429253
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#discussion_r1583845105\">PR review comment</a>:</p>\n<blockquote>\n<p>Why ignore?</p>\n</blockquote>",
        "id": 436150376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714429253
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#discussion_r1583847868\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we add some typed indices for <code>Ranges</code>? Or reuse <code>cranelift_entity::Entity</code>?</p>\n<p>I've always been slightly nervous about all of our raw indices in the backends.</p>\n</blockquote>",
        "id": 436150378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714429253
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#pullrequestreview-2029762165\">PR review</a>.</p>",
        "id": 436152632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714430302
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#discussion_r1583853551\">PR review comment</a>:</p>\n<blockquote>\n<p>Because doc-tests don't work in non-public types, since they're compiled in a separate crate. I couldn't figure out a better way to document what these methods do than with code, so doc-test style seemed good, but didn't quite work how I wanted. I did build this with the module made public and the doc-tests un-ignored, and verified that they pass. </p>\n</blockquote>",
        "id": 436152633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714430302
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#pullrequestreview-2029762165\">PR review</a>.</p>",
        "id": 436152634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714430302
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#discussion_r1583859108\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess we could add some sort of type-system tagging, but what we have now is <code>usize</code> almost everywhere this is used, so it would be noisy.</p>\n<p>That said, I had wanted to somehow associate each instance of <code>Ranges</code> with the <code>Vec</code> or <code>Ranges</code> that it indexes. I couldn't figure out a good way to do that, but putting a newtype wrapper around the indexes could work, with some helpers.</p>\n<p>I'd prefer to land this without that change, since I believe it's easier to understand and no less safe than the _status quo_, but I do think this is worth thinking about more.</p>\n</blockquote>",
        "id": 436152635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714430303
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506#pullrequestreview-2034651696\">PR review</a>:</p>\n<blockquote>\n<p>This is a really nice change!</p>\n</blockquote>",
        "id": 436595947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714610363
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8506\">PR #8506</a>.</p>",
        "id": 436619383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1714627945
    }
]