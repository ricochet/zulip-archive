[
    {
        "content": "<p><a href=\"https://github.com/orangeC23\">orangeC23</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419\">Issue #7419</a>.</p>",
        "id": 399514994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698756799
    },
    {
        "content": "<p>orangeC23 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419\">issue #7419</a>:</p>\n<blockquote>\n<h1>Steps to Reproduce</h1>\n<p>(1) The cfile is :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">define</span><span class=\"w\"> </span><span class=\"n\">_POSIX_C_SOURCE</span><span class=\"w\"> </span><span class=\"mi\">199309</span><span class=\"n\">L</span>\n\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">clock_time_get</span><span class=\"p\">(</span><span class=\"n\">clockid_t</span><span class=\"w\"> </span><span class=\"n\">clock_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">tp</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">clock_gettime</span><span class=\"p\">(</span><span class=\"n\">clock_id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">tp</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Successfully get the clock time.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"seconds: %ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tp</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"nano seconds: %ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tp</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Failed to get the clock time.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">clock_time_geto2Ei6c4mXI</span><span class=\"w\"> </span><span class=\"p\">(){</span>\n<span class=\"w\">    </span><span class=\"n\">clockid_t</span><span class=\"w\"> </span><span class=\"n\">clock_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CLOCK_MONOTONIC</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">clock_time_get</span><span class=\"p\">(</span><span class=\"n\">clock_id</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">clock_time_geto2Ei6c4mXI</span><span class=\"w\"> </span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>(2)compile the c file into wasm: ./wasi-sdk-16.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-16.0/share/wasi-sysroot clock.c -o clock.wasm<br>\n(3)exeute clock.wasm<br>\nwasmtime run  clock.wasm</p>\n<h1>Expected Results</h1>\n<p>Using gcc clock.c -o clock and ./clock to execute get the following result:</p>\n<p>Successfully get the clock time.<br>\nseconds: 17709947<br>\nnano seconds: 519650825</p>\n<p>And wamr, wasmedge,wasmer also print the above message.</p>\n<h1>Actual Results</h1>\n<p>wasmtime prints:</p>\n<p>Successfully get the clock time.<br>\nseconds: 0<br>\nnano seconds: 1053984</p>\n<p>wasmtime print the seconds is zero ? I'm not sure whether this is a bug.<br>\nSorry for bothering you. Thanks a lot !</p>\n<h1>Versions and Environment</h1>\n<p>wasmtime 13.0.0<br>\nOperating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64</p>\n</blockquote>",
        "id": 399514999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698756800
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419#issuecomment-1787215195\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419\">issue #7419</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/2f83f97c9f4f7f98750eb2be19a336339da931e2/crates/wasi-common/src/snapshots/preview_1.rs#L97-L100\">https://github.com/bytecodealliance/wasmtime/blob/2f83f97c9f4f7f98750eb2be19a336339da931e2/crates/wasi-common/src/snapshots/preview_1.rs#L97-L100</a> It is supposed to work at least. Not sure what the issue is here.</p>\n</blockquote>",
        "id": 399520675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698758736
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419\">issue #7419</a>:</p>\n<blockquote>\n<h1>Steps to Reproduce</h1>\n<p>(1) The cfile is :</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">define</span><span class=\"w\"> </span><span class=\"n\">_POSIX_C_SOURCE</span><span class=\"w\"> </span><span class=\"mi\">199309</span><span class=\"n\">L</span>\n\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">clock_time_get</span><span class=\"p\">(</span><span class=\"n\">clockid_t</span><span class=\"w\"> </span><span class=\"n\">clock_id</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">tp</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">clock_gettime</span><span class=\"p\">(</span><span class=\"n\">clock_id</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">tp</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Successfully get the clock time.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"seconds: %ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tp</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"nano seconds: %ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tp</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"Failed to get the clock time.</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">clock_time_geto2Ei6c4mXI</span><span class=\"w\"> </span><span class=\"p\">(){</span>\n<span class=\"w\">    </span><span class=\"n\">clockid_t</span><span class=\"w\"> </span><span class=\"n\">clock_id</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">CLOCK_MONOTONIC</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">clock_time_get</span><span class=\"p\">(</span><span class=\"n\">clock_id</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">clock_time_geto2Ei6c4mXI</span><span class=\"w\"> </span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>(2)compile the c file into wasm: ./wasi-sdk-16.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-16.0/share/wasi-sysroot clock.c -o clock.wasm<br>\n(3)exeute clock.wasm<br>\nwasmtime run  clock.wasm</p>\n<h1>Expected Results</h1>\n<p>Using gcc clock.c -o clock and ./clock to execute get the following result:</p>\n<p>Successfully get the clock time.<br>\nseconds: 17709947<br>\nnano seconds: 519650825</p>\n<p>And wamr, wasmedge,wasmer also print the above message.</p>\n<h1>Actual Results</h1>\n<p>wasmtime prints:</p>\n<p>Successfully get the clock time.<br>\nseconds: 0<br>\nnano seconds: 1053984</p>\n<p>wasmtime print the seconds is zero ? I'm not sure whether this is a bug.<br>\nSorry for bothering you. Thanks a lot !</p>\n<h1>Versions and Environment</h1>\n<p>wasmtime 13.0.0<br>\nOperating system: Ubuntu 20.04</p>\n<p>Architecture: x86_64</p>\n</blockquote>",
        "id": 399543932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698765619
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419#issuecomment-1787437030\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419\">issue #7419</a>:</p>\n<blockquote>\n<p>The monotonic clock is relative to an arbitrary point in time, and Wasmtime's arbitrary point is the start of the instance itself, so what's happening here is the time is being measured shortly after the instance starts. This is to avoid leaking information about the host's own clocks to the guest which doesn't need to know that information by default.</p>\n</blockquote>",
        "id": 399543942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698765620
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419#issuecomment-1787563241\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7419\">issue #7419</a>:</p>\n<blockquote>\n<p>@orangeC23 is there perhaps something we can help you out with at a higher level? You've opened a number of issues here which appear to be mostly poking at WASI behavior. Is there a way we could perhaps help out with that and/or help steer? I'm curious how these programs are coming into existence for example and if it might be good to file issues for clarifications/etc on the WASI specifications themselves for example.</p>\n</blockquote>",
        "id": 399559426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698769588
    }
]