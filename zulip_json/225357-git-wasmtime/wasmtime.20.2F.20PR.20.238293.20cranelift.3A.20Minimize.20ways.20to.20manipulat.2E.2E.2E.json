[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293\">PR #8293</a>.</p>",
        "id": 430897966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712105081
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293\">PR #8293</a>.</p>",
        "id": 430897967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712105081
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293\">PR #8293</a> from <code>jameysharp:cleanup-results</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>In particular, remove support for detaching/attaching/appending instruction results.</p>\n<p>The AliasAnalysis pass used detach_results, but leaked the detached ValueList; using clear_results instead is better.</p>\n<p>The verifier's <code>test_printing_contextual_errors</code> needed to get the verifier to produce an error containing a pretty-printed instruction, and did so by appending too many results. Instead, failing to append any results gets a similar error out of the verifier, without requiring that we expose the easy-to-misuse append_result method. However, <code>iconst</code> is not a suitable instruction for this version of the test because its result type is its controlling type, so failing to create any results caused assertion failures rather than the desired verifier error. I switched to <code>f64const</code> which has a non-polymorphic type.</p>\n<p>The DFG's <code>aliases</code> test cleared both results of an instruction and then reattached one of them. Since we have access to DFG internals in these tests, it's easier to directly manipulate the relevant ValueList than to use these unsafe methods.</p>\n<p>The only other use of attach/append was in <code>make_inst_results_reusing</code> which decided which to use based on whether a particular result was supposed to reuse an existing value. Inlining both methods there revealed that they were nearly identical and could have most of their code factored out.</p>\n<p>While I was looking at uses of <code>DataFlowGraph::results</code>, I also simplified replace_with_aliases a little bit.</p>\n</blockquote>",
        "id": 430897968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712105081
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293#pullrequestreview-1977132987\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this cleanup! A few things below but in general I'm always happy when we can shrink an API :-)</p>\n</blockquote>",
        "id": 431117792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712157537
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293#discussion_r1549939302\">PR review comment</a>:</p>\n<blockquote>\n<p>The bound <code>(dest, original)</code> names are slightly confusing given we're iterating over <code>zip(dest_results, src_results)</code> -- can we pick either <code>original</code> or <code>src</code> and use it in both places?</p>\n</blockquote>",
        "id": 431117793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712157537
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293#pullrequestreview-1977132987\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this cleanup! A few things below but in general I'm always happy when we can shrink an API :-)</p>\n</blockquote>",
        "id": 431117794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712157537
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293#discussion_r1549950321\">PR review comment</a>:</p>\n<blockquote>\n<p>(I realize this is inlined code, but thoughts still follow:)</p>\n<p>The <code>as u16</code> cast here is indeed protected by the assert above, but it's still something that catches my eye and takes a bit to understand safety thereof -- could we instead do the <code>try_from</code> here (overhead is the same in the common case of one result)?</p>\n<p>Also, it occurs to me that we want this check even in release builds (if other limits somehow let through a many-result function, we don't want to rely on fuzzing catching a wraparound-caused miscompile before users do); so either a <code>try_from().expect()</code> or a full <code>assert!</code> is probably what we want.</p>\n</blockquote>",
        "id": 431117795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712157537
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293\">PR #8293</a>.</p>",
        "id": 431142513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712165396
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293#issuecomment-2035186671\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293\">PR #8293</a>:</p>\n<blockquote>\n<p>Good suggestions, thanks!</p>\n</blockquote>",
        "id": 431142651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712165438
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293\">PR #8293</a>.</p>",
        "id": 431142664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712165442
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8293\">PR #8293</a>.</p>",
        "id": 431149714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712168150
    }
]