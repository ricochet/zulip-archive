[
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage for <code>x64</code> it will be just single <code>orps xmm, ptr [0x8000000000000000, 0x8000000000000000]</code> (pseudocode) instruction.</p>\n</blockquote>",
        "id": 295834123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661776134
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orpd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>armv7</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orr</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#-2147483648</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"nf\">blr</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n<span class=\"nf\">br</span><span class=\"w\">      </span><span class=\"nv\">%r14</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserve <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 295835515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661776585
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orpd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>armv7</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orr</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#-2147483648</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"nf\">blr</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n<span class=\"nf\">br</span><span class=\"w\">      </span><span class=\"nv\">%r14</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 295835540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661776594
    },
    {
        "content": "<p>MaxGraey edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4803\">issue #4803</a>:</p>\n<blockquote>\n<p><code>fneg(fabs(x))</code> could be possible after <code>copysign(x, -C) -&gt; fneg(fabs(x))</code> peephole optimization on LLVM / Binaryen, so I guess it's make sense to simplify it further on cranelift during lowering stage.</p>\n<p><code>x64</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orsd</span><span class=\"w\"> </span><span class=\"no\">xmm0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x8000000000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>armv7</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">orr</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#-2147483648</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>ppc</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">fnabs</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"nf\">blr</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>s390x</code>:</p>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"nf\">lndbr</span><span class=\"w\">   </span><span class=\"nv\">%f0</span><span class=\"p\">,</span><span class=\"nv\">%f0</span><span class=\"w\"></span>\n<span class=\"nf\">br</span><span class=\"w\">      </span><span class=\"nv\">%r14</span><span class=\"w\"></span>\n</code></pre></div>\n<p>the rest is preserving <code>fneg + fabs</code></p>\n</blockquote>",
        "id": 295835576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661776608
    }
]