[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a> from <code>fitzgen:refactor-pooling-allocator</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>We used to have one index allocator, an index per instance, and give out N<br>\ntables and M memories to every instance regardless how many tables and memories<br>\nthey need.</p>\n<p>Now we have an index allocator for memories and another for tables. An instance<br>\nisn't associated with a single instance, each of its memories and tables have an<br>\nindex. We allocate exactly as many tables and memories as the instance actually<br>\nneeds.</p>\n<p>Ultimately, this gives us better component support, where a component instance<br>\nmight have varying numbers of internal tables and memories.</p>\n<p>Additionally, you can now limit the number of tables, memories, and core<br>\ninstances a single component can allocate from the pooling allocator, even if<br>\nthere is the capacity for that many available. This is to give embedders tools<br>\nto limit individual component instances and prevent them from hogging too much<br>\nof the pooling allocator's resources.</p>\n<hr>\n<p>TODO before landing:</p>\n<ul>\n<li>[ ] Update <code>RELEASES.md</code> with a heads up about the config changes and give a small guide of how to migrate existing set ups</li>\n</ul>\n</blockquote>",
        "id": 383775798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691708096
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 383775799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691708096
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 383775800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691708096
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1572832679\">PR review</a>.</p>",
        "id": 383775967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691708183
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1572832679\">PR review</a>.</p>",
        "id": 383775968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691708184
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1290754485\">PR review comment</a>:</p>\n<blockquote>\n<p>Unsure whether this is better as-written, or if moving the <code>MemoryAllocationIndex</code> into <code>wasmtime_runtime::Memory</code> is better. Feel free to bike shed.</p>\n</blockquote>",
        "id": 383775969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691708184
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 384070546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691780975
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 384070547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691780975
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 384070550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691780975
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>:</p>\n<blockquote>\n<p>We used to have one index allocator, an index per instance, and give out N<br>\ntables and M memories to every instance regardless how many tables and memories<br>\nthey need.</p>\n<p>Now we have an index allocator for memories and another for tables. An instance<br>\nisn't associated with a single instance, each of its memories and tables have an<br>\nindex. We allocate exactly as many tables and memories as the instance actually<br>\nneeds.</p>\n<p>Ultimately, this gives us better component support, where a component instance<br>\nmight have varying numbers of internal tables and memories.</p>\n<p>Additionally, you can now limit the number of tables, memories, and core<br>\ninstances a single component can allocate from the pooling allocator, even if<br>\nthere is the capacity for that many available. This is to give embedders tools<br>\nto limit individual component instances and prevent them from hogging too much<br>\nof the pooling allocator's resources.</p>\n<hr>\n<p>TODO before landing:</p>\n<ul>\n<li>[x] Update <code>RELEASES.md</code> with a heads up about the config changes and give a small guide of how to migrate existing set ups</li>\n</ul>\n</blockquote>",
        "id": 384084306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691785028
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 384104569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691792899
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 384104884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691793042
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 384926894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692054801
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1579353276\">PR review</a>.</p>",
        "id": 385280732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692130955
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295068708\">PR review comment</a>:</p>\n<blockquote>\n<p>Note from Chris on zoom: can we RAII this stuff?</p>\n</blockquote>",
        "id": 385282464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692131883
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1579357015\">PR review</a>.</p>",
        "id": 385284873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133174
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295105511\">PR review comment</a>:</p>\n<blockquote>\n<p>hoist to avoid allocating code objects and things when validation will fail</p>\n</blockquote>",
        "id": 385284876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133175
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295091853\">PR review comment</a>:</p>\n<blockquote>\n<p>note from chris: can we newtype this tuple? <code>ModuleAndMemory</code> or something like that</p>\n</blockquote>",
        "id": 385284877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133176
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295097723\">PR review comment</a>:</p>\n<blockquote>\n<p>comment out of date</p>\n</blockquote>",
        "id": 385284890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133184
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1579357015\">PR review</a>.</p>",
        "id": 385284956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133204
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295083928\">PR review comment</a>:</p>\n<blockquote>\n<p>note from Chris: seems like some abstraction here could maybe improve things but I don't know what it is.</p>\n<p>for now can we have a comment about why we can't use associated types because of how this is used as a trait object</p>\n</blockquote>",
        "id": 385285348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133375
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295093192\">PR review comment</a>:</p>\n<blockquote>\n<p>note from chris: diagram/comment need updates</p>\n</blockquote>",
        "id": 385285591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133484
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295101405\">PR review comment</a>:</p>\n<blockquote>\n<p>leave a comment that we could keep track of how many memories we have per module instead of probing all possible indices if this ever shows up in a profile</p>\n</blockquote>",
        "id": 385285894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133647
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295120342\">PR review comment</a>:</p>\n<blockquote>\n<p>Note: I am going to avoid an RAII type because</p>\n<ol>\n<li>we would need two types, one for core module instantiation and one for component instantiation, and</li>\n<li>only the error paths would be able to use these, not the success paths, because the RAII type would need to wrap <code>self</code> here, which isn't feasible once the instance is returned.</li>\n</ol>\n<p>Therefore, I'll do the immediately-invoked closure thing instead.</p>\n</blockquote>",
        "id": 385286553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133950
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1579437783\">PR review</a>.</p>",
        "id": 385286622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692133994
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295075340\">PR review comment</a>:</p>\n<blockquote>\n<p>request for comment: deallocation needs to be infallible, because if it wasn't we could leak if say the first of two memories failed to drop.</p>\n</blockquote>",
        "id": 385286804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692134091
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295071027\">PR review comment</a>:</p>\n<blockquote>\n<p>or we can use an immediately-invoked closure so that we can <code>?</code> inside it but still have only a single place for clean up on error</p>\n</blockquote>",
        "id": 385286886,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692134145
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295096775\">PR review comment</a>:</p>\n<blockquote>\n<p>add comment about how this is needed for validation but does not factor into the pre-allocated pool size and its layout</p>\n</blockquote>",
        "id": 385287010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692134201
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1579476938\">PR review</a>:</p>\n<blockquote>\n<p>Together with earlier zoom review and associated comments, this overall looks great to me! High-quality implementation with good attention paid to safety (e.g. index newtypes). A few comments below as well but nothing too major.</p>\n</blockquote>",
        "id": 385290093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692135990
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1579476938\">PR review</a>:</p>\n<blockquote>\n<p>Together with earlier zoom review and associated comments, this overall looks great to me! High-quality implementation with good attention paid to safety (e.g. index newtypes). A few comments below as well but nothing too major.</p>\n</blockquote>",
        "id": 385290095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692135990
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295145441\">PR review comment</a>:</p>\n<blockquote>\n<p>likewise here, and for stacks, total core instances, ... below</p>\n</blockquote>",
        "id": 385290096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692135990
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295145050\">PR review comment</a>:</p>\n<blockquote>\n<p>should this be called <code>max_...</code> (in line with the other limits)?</p>\n</blockquote>",
        "id": 385290097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692135990
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295145317\">PR review comment</a>:</p>\n<blockquote>\n<p>as above, <code>max_...</code> ?</p>\n</blockquote>",
        "id": 385290098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692135990
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1295147412\">PR review comment</a>:</p>\n<blockquote>\n<p>here we're using the component-instance array just for its length -- could we store a counter rather than actual instance handles?</p>\n</blockquote>",
        "id": 385290099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692135990
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1581219093\">PR review</a>.</p>",
        "id": 385519399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692211331
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1296298270\">PR review comment</a>:</p>\n<blockquote>\n<p>This one isn't really a maximum, it is the exact number of memories we will have capacity for in the pool. So I'll leave it as-is.</p>\n</blockquote>",
        "id": 385519401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692211332
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1581219274\">PR review</a>.</p>",
        "id": 385519413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692211338
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1296298385\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto.</p>\n</blockquote>",
        "id": 385519414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692211338
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1581229736\">PR review</a>.</p>",
        "id": 385520302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692211717
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1296304495\">PR review comment</a>:</p>\n<blockquote>\n<p>Hmm, yeah, I guess it's kind of a matter of semantics -- it <em>is</em> the maximum number that we can allocate across the whole pool. (\"Capacity\" is another way of saying \"maximum\", I guess.) But I'll defer to your judgment here if you want to keep as-is.</p>\n</blockquote>",
        "id": 385520303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692211717
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385547324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692222191
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385706335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692288005
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385706399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692288023
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385711223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692289472
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385725742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692295194
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385736901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692299970
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385736926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692299984
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385979373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692388366
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385979389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692388375
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385988464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692392460
    },
    {
        "content": "<p>fitzgen has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385988482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692392469
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835\">PR #6835</a>.</p>",
        "id": 385994686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692396282
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1587280243\">PR review</a>:</p>\n<blockquote>\n<p>This all looks great to me, thanks again for tackling this!</p>\n</blockquote>",
        "id": 386425730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692632892
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#pullrequestreview-1587280243\">PR review</a>:</p>\n<blockquote>\n<p>This all looks great to me, thanks again for tackling this!</p>\n</blockquote>",
        "id": 386425731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692632892
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1300305546\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind throwing in a debug assert here that the return value is not 0? (e.g. this never goes negative)</p>\n</blockquote>",
        "id": 386425732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692632893
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1300292277\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it be possible to keep this as one trait? Inferring why this was split into two it seems like it wants to guarantee that the default implementations of methods are used, but this is purely internal and it's already an <code>unsafe trait</code>, so I think that should be enough to cover the bases? (I don't think we're at risk of duplicating these default trait method implementations anywhere)</p>\n</blockquote>",
        "id": 386425733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692632893
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1300283508\">PR review comment</a>:</p>\n<blockquote>\n<p>I mentioned this in person as well, but would it be possible to eschew this index (and the one above) and infer the index from an address in the pooling allocator?</p>\n</blockquote>",
        "id": 386425734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692632893
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6835#discussion_r1300305781\">PR review comment</a>:</p>\n<blockquote>\n<p>(and the other decrement methods too)</p>\n</blockquote>",
        "id": 386425735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692632893
    }
]