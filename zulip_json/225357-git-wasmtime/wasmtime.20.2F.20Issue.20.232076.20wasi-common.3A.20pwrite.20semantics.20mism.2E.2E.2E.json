[
    {
        "content": "<p>ueno labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2076\">Issue #2076</a>:</p>\n<blockquote>\n<p>The documentation of <code>wasi_common::virtfs::FileContents::pwrite</code> says:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// Write contents from `buf` to this file starting at `offset`. `offset` plus the length of</span>\n<span class=\"w\">    </span><span class=\"sd\">/// `buf` is guaranteed to not exceed `max_size`. Implementations must not indicate more bytes</span>\n<span class=\"w\">    </span><span class=\"sd\">/// have been written than the size of `buf`.</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">pwrite</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buf</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"nc\">types</span>::<span class=\"n\">Filesize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>while <a href=\"https://pubs.opengroup.org/onlinepubs/009695399/functions/pwrite.html\">POSIX</a> says the <code>offset</code> is a file offset rather than the offset in buffer. Although <code>FileContents::pwrite</code> is currently only used by <code>InMemoryFile</code> implementation, it would be consistent to treat the <code>offset</code> as a file offset.</p>\n</blockquote>",
        "id": 205329566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596011064
    },
    {
        "content": "<p>ueno opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2076\">Issue #2076</a>:</p>\n<blockquote>\n<p>The documentation of <code>wasi_common::virtfs::FileContents::pwrite</code> says:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// Write contents from `buf` to this file starting at `offset`. `offset` plus the length of</span>\n<span class=\"w\">    </span><span class=\"sd\">/// `buf` is guaranteed to not exceed `max_size`. Implementations must not indicate more bytes</span>\n<span class=\"w\">    </span><span class=\"sd\">/// have been written than the size of `buf`.</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">pwrite</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buf</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"nc\">types</span>::<span class=\"n\">Filesize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>while <a href=\"https://pubs.opengroup.org/onlinepubs/009695399/functions/pwrite.html\">POSIX</a> says the <code>offset</code> is a file offset rather than the offset in buffer. Although <code>FileContents::pwrite</code> is currently only used by <code>InMemoryFile</code> implementation, it would be consistent to treat the <code>offset</code> as a file offset.</p>\n</blockquote>",
        "id": 205329567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596011064
    },
    {
        "content": "<p>ueno edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2076\">Issue #2076</a>:</p>\n<blockquote>\n<p>The documentation of <code>wasi_common::virtfs::FileContents::pwrite</code> says:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// Write contents from `buf` to this file starting at `offset`. `offset` plus the length of</span>\n<span class=\"w\">    </span><span class=\"sd\">/// `buf` is guaranteed to not exceed `max_size`. Implementations must not indicate more bytes</span>\n<span class=\"w\">    </span><span class=\"sd\">/// have been written than the size of `buf`.</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">pwrite</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buf</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"nc\">types</span>::<span class=\"n\">Filesize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>while in <a href=\"https://pubs.opengroup.org/onlinepubs/009695399/functions/pwrite.html\">POSIX</a> (and WASI <code>fd_pwrite</code>) the <code>offset</code> is a file offset rather than the offset in buffer. Although <code>FileContents::pwrite</code> is currently only used by <code>InMemoryFile</code> implementation, it would be consistent to treat the <code>offset</code> as a file offset.</p>\n</blockquote>",
        "id": 205343650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596021819
    },
    {
        "content": "<p>ueno <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2076#issuecomment-666958806\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2076\">Issue #2076</a>:</p>\n<blockquote>\n<p>Sorry, this was my misunderstanding and the function actually writes at the file offset.</p>\n</blockquote>",
        "id": 205562440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596177833
    },
    {
        "content": "<p>ueno closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2076\">Issue #2076</a>:</p>\n<blockquote>\n<p>The documentation of <code>wasi_common::virtfs::FileContents::pwrite</code> says:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"sd\">/// Write contents from `buf` to this file starting at `offset`. `offset` plus the length of</span>\n<span class=\"w\">    </span><span class=\"sd\">/// `buf` is guaranteed to not exceed `max_size`. Implementations must not indicate more bytes</span>\n<span class=\"w\">    </span><span class=\"sd\">/// have been written than the size of `buf`.</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">pwrite</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buf</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"kt\">u8</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"nc\">types</span>::<span class=\"n\">Filesize</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"kt\">usize</span><span class=\"o\">&gt;</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>while in <a href=\"https://pubs.opengroup.org/onlinepubs/009695399/functions/pwrite.html\">POSIX</a> (and WASI <code>fd_pwrite</code>) the <code>offset</code> is a file offset rather than the offset in buffer. Although <code>FileContents::pwrite</code> is currently only used by <code>InMemoryFile</code> implementation, it would be consistent to treat the <code>offset</code> as a file offset.</p>\n</blockquote>",
        "id": 205562441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596177834
    }
]