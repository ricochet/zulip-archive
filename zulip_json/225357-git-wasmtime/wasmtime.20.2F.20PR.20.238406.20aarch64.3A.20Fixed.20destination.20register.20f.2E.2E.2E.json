[
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406\">PR #8406</a>.</p>",
        "id": 434255090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713483488
    },
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406\">PR #8406</a> from <code>elliottt:trevor/aarch64-fixed-return-call-ind-dest</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>After switching to using callee-saved registers with the tail calling convention on aarch64, we missed using a fixed constraint for the destination of indirect return calls. This omission introduces a situation where the destination could be placed in a callee-saved register, and then clobbered as part of the call to <code>emit_return_call_common_sequence</code>.</p>\n<p>This PR fixes the problem by always using <code>x1</code> for return call destinations, and relaxes the same constraint on indirect calls of tail call functions, as callee-saved registers can be used for normal indirect calls now.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 434255091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713483488
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406\">PR #8406</a>.</p>",
        "id": 434255096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713483490
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406\">PR #8406</a>.</p>",
        "id": 434255356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713483697
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406#pullrequestreview-2010186633\">PR review</a>:</p>\n<blockquote>\n<p>I hope @cfallin can double-check this later, but I'm pretty confident this is all correct and you can go ahead and merge it.</p>\n<p>We need to constrain <code>ReturnCallInd</code>, because it will overwrite any callee-saved registers before reading the value of <code>callee</code>, so we must not use any of those registers for <code>callee</code>.</p>\n<p>But we don't need to constrain <code>CallInd</code> to avoid using callee-saved registers, because it doesn't overwrite any of them before reading the value of <code>callee</code>. In fact the whole point of callee-saved registers is that the actual call will preserve them, so we should _prefer_ to use them for normal calls if we still need the address afterward.</p>\n</blockquote>",
        "id": 434258017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713485624
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406\">PR #8406</a>.</p>",
        "id": 434261795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713488194
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406#issuecomment-2070775357\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8406\">PR #8406</a>:</p>\n<blockquote>\n<blockquote>\n<p>I hope @cfallin can double-check this later</p>\n</blockquote>\n<p>Yep, looks good to me as well! I double-checked that with the tailcall ABI we start assigning args to registers at <code>x2</code>, so <code>x1</code> is free to use for this purpose here and I can't think of anything else that would clobber it between setup and use.</p>\n</blockquote>",
        "id": 434830817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713814418
    }
]