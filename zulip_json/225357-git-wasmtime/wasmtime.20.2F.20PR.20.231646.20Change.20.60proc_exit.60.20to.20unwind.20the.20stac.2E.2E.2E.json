[
    {
        "content": "<p>sunfishcode opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a> from <code>sunfishcode/exit-unwind</code> to <code>master</code>:</p>\n<blockquote>\n<p>This allows programs which call <code>proc_exit</code> to coexist with other programs in the same host process. This also implements the semantics in <a href=\"https://github.com/WebAssembly/WASI/pull/235\" title=\"https://github.com/WebAssembly/WASI/pull/235\">https://github.com/WebAssembly/WASI/pull/235</a>.</p>\n<p>Fixes #783.<br>\nFixes #993.</p>\n</blockquote>",
        "id": 196020398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588375170
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a> from <code>sunfishcode/exit-unwind</code> to <code>master</code>:</p>\n<blockquote>\n<p>This allows programs which call <code>proc_exit</code> to coexist with other programs in the same host process. This also implements the semantics in <a href=\"https://github.com/WebAssembly/WASI/pull/235\" title=\"https://github.com/WebAssembly/WASI/pull/235\">https://github.com/WebAssembly/WASI/pull/235</a>.</p>\n<p>Fixes #783.<br>\nFixes #993.</p>\n</blockquote>",
        "id": 196022297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588377034
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-404451358\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-404451358\">PR Review</a>.</p>",
        "id": 196022506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588377253
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-404451358\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-404451358\">PR Review</a>.</p>",
        "id": 196022507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588377253
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r418782965\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r418782965\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This would break Lucet, where we deal with <code>proc_exit</code> in a totally different manner. We install a panic handler at the wasm-&gt;host boundary that terminates the instance, and then just <code>panic!</code> in our proc_exit trait method.</p>\n<p>If that doesn't work for wasmtime, can we figure out a way to deal with <code>noreturn</code> functions in wiggle that works for both runtimes?</p>\n</blockquote>",
        "id": 196022508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588377253
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-404452289\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-404452289\">PR Review</a>.</p>",
        "id": 196022732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588377549
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r418783927\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r418783927\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Even though we're not exposing the <code>wig</code> generated snapshot 0 code to users over in the lucet embedding, this would make us take a dep on <code>wasmtime</code> in <code>lucet_runtime</code>, which would not be good.</p>\n</blockquote>",
        "id": 196022733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588377549
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405321163\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405321163\">PR Review</a>.</p>",
        "id": 196236183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588624338
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419706993\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419706993\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm curious if we can find a bit of a cleaner API to export this?</p>\n<p>It looks like host functions have been updated to return <code>Result&lt;T&gt;</code> rather than <code>Result&lt;T, Trap&gt;</code>, which means that any arbitrary error type can be returned. Could we perhaps special case when the error is <code>Exit</code> and propagate that through, removing the need for an extra constructor here?</p>\n</blockquote>",
        "id": 196236184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588624338
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405321163\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405321163\">PR Review</a>.</p>",
        "id": 196236185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588624338
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419708038\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419708038\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This feels like it's somewhat dangerous here to me, should this be a panic or should <code>status</code> already have the type <code>NonZeroI32</code>?</p>\n</blockquote>",
        "id": 196236186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588624338
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419708401\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419708401\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Given that we only really have \"trusted\" code calling this, could this be a panic or something more general? This seems a bit low-level to be dealing with WASI-specific codes and things.</p>\n</blockquote>",
        "id": 196236187,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588624338
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405336779\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405336779\">PR Review</a>.</p>",
        "id": 196238399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588625433
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419719776\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419719776\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I considered using panics here, but didn't because of the possibility of users embedding Wasmtime in programs built with <code>panic = \"abort\"</code>.</p>\n<p>My main idea is that <code>proc_exit</code> doesn't access memory, take any strings, use any handles, etc., so it doesn't need any of the wig machinery. It can just be a plain <code>extern \"C\"</code> function somewhere, and different runtimes can still do different things in the implementation -- panic as Lucet does, or trigger a trap-like unwind as this PR does. And that way, it can trap without having to worry about unwinding through wig's Rust code.</p>\n</blockquote>",
        "id": 196238401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588625433
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405337319\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-405337319\">PR Review</a>.</p>",
        "id": 196238490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588625484
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419720257\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r419720257\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This code already depends on <code>wasmtime::Func::wrap</code>; how does that work in Lucet?</p>\n</blockquote>",
        "id": 196238493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588625484
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-406204666\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-406204666\">PR Review</a>.</p>",
        "id": 196377580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588718458
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r420449189\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r420449189\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I missed that in my first look, any dep inside <code>wasi-common</code> on <code>wasmtime</code> (or anything besides wig/wiggle) would be a showstopper for integration with Lucet. (I'm on vacation this week and will not be around much, just popped in from a lack of discipline)</p>\n</blockquote>",
        "id": 196377582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588718458
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-407159739\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-407159739\">PR Review</a>.</p>",
        "id": 196728742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588829647
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r421249253\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r421249253\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@kubkon <code>define_struct</code> has the comment \"This is a single-use macro intended to be used in the <code>wasmtime-wasi</code> crate.\". Do you know if that's intended to be the case for <code>define_struct_for_wiggle</code>? <code>define_struct_for_wiggle</code> currently has Wasmtime-specific code in it, so if it's meant to be usable outside of Wasmtime, we'll need to figure out how to factor that out.</p>\n</blockquote>",
        "id": 196728743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588829647
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-407166406\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-407166406\">PR Review</a>.</p>",
        "id": 196729492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588830804
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r421255145\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r421255145\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I’m pretty sure <code>wig</code> is fully internal to <code>Wasmtime</code>, and so is <code>define_struct_for_wiggle</code>. As far as I remember, <code>lucet</code> had their own set of magical macros, but @pchickey can correct me here if I’m wrong :-)</p>\n</blockquote>",
        "id": 196729493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588830804
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a> from <code>sunfishcode/exit-unwind</code> to <code>master</code>:</p>\n<blockquote>\n<p>This allows programs which call <code>proc_exit</code> to coexist with other programs in the same host process. This also implements the semantics in <a href=\"https://github.com/WebAssembly/WASI/pull/235\">https://github.com/WebAssembly/WASI/pull/235</a>.</p>\n<p>Fixes #783.<br>\nFixes #993.</p>\n</blockquote>",
        "id": 197283907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589293711
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410297345\">PR Review</a>.</p>",
        "id": 197316031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589307130
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410297345\">PR Review</a>.</p>",
        "id": 197316032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589307130
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423933618\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Should this perhaps just be deleted?</p>\n</blockquote>",
        "id": 197316033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589307130
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423935108\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This seems a bit odd to me, why not expose exiting with all sorts of error codes on Windows? </p>\n</blockquote>",
        "id": 197316034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589307130
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423934137\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Exposing an <code>enum</code> often makes pretty hard guarantees about representations which are tough to change. Could we  perhaps retain <code>fn message()</code> with a canned string for exit statuses, and then add an extra accessor returning <code>Option&lt;i32&gt;</code> for reading the exit code?</p>\n</blockquote>",
        "id": 197316035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589307130
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423935262\">PR Review Comment</a>:</p>\n<blockquote>\n<p>(or put another way I don't fully understand the comment as to why Windows is special here)</p>\n</blockquote>",
        "id": 197316036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589307130
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410328525\">PR Review</a>.</p>",
        "id": 197320943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589309423
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423958339\">PR Review Comment</a>:</p>\n<blockquote>\n<p>There's no dep on this code in Lucet, so if Wasmtime doesn't intend to use it, lets delete it.</p>\n</blockquote>",
        "id": 197320945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589309424
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410330589\">PR Review</a>.</p>",
        "id": 197321326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589309597
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410330589\">PR Review</a>.</p>",
        "id": 197321327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589309598
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423960044\">PR Review Comment</a>:</p>\n<blockquote>\n<p>If both wasmtime and lucet override this implementation, maybe we could instead replace it with <code>unimplemented!(\"runtimes are expected to override this implementation\")</code>?</p>\n</blockquote>",
        "id": 197321328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589309598
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410368459\">PR Review</a>.</p>",
        "id": 197328509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589312765
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423990267\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I don't have a strong sense of what Windows wants here; I just didn't want to overload exit status 3 as meaning both \"program trapped\" and \"program explicitly exited with status 3\".</p>\n<p>Am I reading too much into the docs by assuming that using 3 for an abort is a meaningful convention?</p>\n</blockquote>",
        "id": 197328510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589312765
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a> from <code>sunfishcode/exit-unwind</code> to <code>master</code>:</p>\n<blockquote>\n<p>This allows programs which call <code>proc_exit</code> to coexist with other programs in the same host process. This also implements the semantics in <a href=\"https://github.com/WebAssembly/WASI/pull/235\">https://github.com/WebAssembly/WASI/pull/235</a>.</p>\n<p>Fixes #783.<br>\nFixes #993.</p>\n</blockquote>",
        "id": 197329287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589313163
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410374248\">PR Review</a>.</p>",
        "id": 197329496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589313279
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423994847\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 197329497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589313280
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410374391\">PR Review</a>.</p>",
        "id": 197329511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589313293
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423994975\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 197329513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589313293
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410374507\">PR Review</a>.</p>",
        "id": 197329537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589313303
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#discussion_r423995059\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 197329538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589313304
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646#pullrequestreview-410433205\">PR Review</a>.</p>",
        "id": 197341673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589318646
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a> from <code>sunfishcode/exit-unwind</code> to <code>master</code>:</p>\n<blockquote>\n<p>This allows programs which call <code>proc_exit</code> to coexist with other programs in the same host process. This also implements the semantics in <a href=\"https://github.com/WebAssembly/WASI/pull/235\">https://github.com/WebAssembly/WASI/pull/235</a>.</p>\n<p>Fixes #783.<br>\nFixes #993.</p>\n</blockquote>",
        "id": 197341913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589318768
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a> from <code>sunfishcode/exit-unwind</code> to <code>master</code>:</p>\n<blockquote>\n<p>This allows programs which call <code>proc_exit</code> to coexist with other programs in the same host process. This also implements the semantics in <a href=\"https://github.com/WebAssembly/WASI/pull/235\">https://github.com/WebAssembly/WASI/pull/235</a>.</p>\n<p>Fixes #783.<br>\nFixes #993.</p>\n</blockquote>",
        "id": 197469013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589400396
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a> from <code>sunfishcode/exit-unwind</code> to <code>master</code>:</p>\n<blockquote>\n<p>This allows programs which call <code>proc_exit</code> to coexist with other programs in the same host process. This also implements the semantics in <a href=\"https://github.com/WebAssembly/WASI/pull/235\">https://github.com/WebAssembly/WASI/pull/235</a>.</p>\n<p>Fixes #783.<br>\nFixes #993.</p>\n</blockquote>",
        "id": 197483184,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589407352
    },
    {
        "content": "<p>sunfishcode merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1646\">PR #1646</a>.</p>",
        "id": 197487831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589410785
    }
]