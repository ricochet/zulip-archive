[
    {
        "content": "<p>feilongjiang opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699\">PR #7699</a> from <code>feilongjiang:fix_arm64_pcc_on_32bit_movn</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Hi team, find another PCC fact range issue on AArch64.<br>\nWhen the top 32 bits of the value are zero and the upper_halfword of the lower 32 bits is u16::MAX, load_constant64_full will emit a single <code>movn</code> instruction. In that case, add_range_fact only adds lower_halfword as the fact range, which misses the upper halfword value. We should add the hole 32-bit value as the fact range.</p>\n<p>Here is a simple test to reproduce the issue:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>;; test_const.wat\n(module\n  (func (export \"test_constant\") (result i64) (i64.const 0xfffffff7))\n)\n</code></pre></div>\n<p>Step to reproduce:</p>\n<p>Compile the test with PCC on:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">C</span><span class=\"w\"> </span><span class=\"n\">pcc</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"w\"> </span><span class=\"n\">test_const</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<p>the output will be:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">Compilation</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">Proof</span><span class=\"o\">-</span><span class=\"n\">carrying</span><span class=\"o\">-</span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">validation</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">UnsupportedFact</span>\n</code></pre></div>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 408564720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702890205
    },
    {
        "content": "<p><strong>feilongjiang</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699\">PR #7699</a>.</p>",
        "id": 408564723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702890205
    },
    {
        "content": "<p><strong>feilongjiang</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699\">PR #7699</a>.</p>",
        "id": 408564724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702890205
    },
    {
        "content": "<p>feilongjiang <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699#issuecomment-1859851695\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699\">PR #7699</a>:</p>\n<blockquote>\n<p>Hi @fitzgen, would you please take a look?</p>\n</blockquote>",
        "id": 408565239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702890399
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699#issuecomment-1860254112\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699\">PR #7699</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 408593132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702899887
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699#pullrequestreview-1791509259\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 409245079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703099423
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7699\">PR #7699</a>.</p>",
        "id": 409248874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1703101174
    }
]