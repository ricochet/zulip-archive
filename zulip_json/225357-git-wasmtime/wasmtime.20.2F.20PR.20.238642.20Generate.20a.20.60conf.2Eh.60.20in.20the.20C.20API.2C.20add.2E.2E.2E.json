[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a> from <code>alexcrichton:c-api-features-in-cmake</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Work in progress to leverage our concurrency on PRs to test this more. I'll fill in more details when this is ready.</p>\n</blockquote>",
        "id": 439124177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715905302
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439125171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715905976
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439125712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715906357
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>:</p>\n<blockquote>\n<p>Work in progress to leverage our concurrency on PRs to test this more. I'll fill in more details when this is ready.</p>\n<p>Unorganized bullets of motivation:</p>\n<ul>\n<li>C-API can be configured right now and some symbols disappear, but this is not reflected in the C headers</li>\n<li>Cannot easily configure features via CMake</li>\n<li>Current CMake does not easily support cross-compilation</li>\n</ul>\n<p>Unorganized bullets of changes:</p>\n<ul>\n<li>Add CMake options for all Cargo features</li>\n<li>Add <code>conf.h.in</code> header file and generate <code>conf.h</code> as part of CMake build</li>\n<li>Move documenting the C API to CMake (as it needs generated header)</li>\n<li>Move installation of the C API into CMake (including things like <code>install_name_tool</code> on macOS)<br>\n</li>\n</ul>\n</blockquote>",
        "id": 439126012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715906634
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439126133,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715906742
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439127244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715907621
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>:</p>\n<blockquote>\n<p>Work in progress to leverage our concurrency on PRs to test this more. I'll fill in more details when this is ready.</p>\n<p>Unorganized bullets of motivation:</p>\n<ul>\n<li>C-API can be configured right now and some symbols disappear, but this is not reflected in the C headers</li>\n<li>Cannot easily configure features via CMake</li>\n<li>Current CMake does not easily support cross-compilation</li>\n</ul>\n<p>Unorganized bullets of changes:</p>\n<ul>\n<li>Add CMake options for all Cargo features</li>\n<li>Add <code>conf.h.in</code> header file and generate <code>conf.h</code> as part of CMake build</li>\n<li>Move documenting the C API to CMake (as it needs generated header)</li>\n<li>Move installation of the C API into CMake (including things like <code>install_name_tool</code> on macOS)</li>\n<li>Various Android bits removed from CMake</li>\n<li>The c-api artifacts now have a separate set of headers for the \"min\" build instead of having the \"min\" libraries be next to the typical libraries<br>\n</li>\n</ul>\n</blockquote>",
        "id": 439127304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715907664
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439127338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715907693
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439132832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715911812
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439133354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715912224
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439138060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715915291
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>.</p>",
        "id": 439142536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715918113
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8642\">PR #8642</a>:</p>\n<blockquote>\n<p>This commit overhauls and refactors the management of the building of<br>\nthe C API. Instead of this being script-based it's now done entirely<br>\nthrough CMake and CMake is the primary focus for building the C API. For<br>\nexample building the C API release artifacts is now done through CMake<br>\ninstead of through a shell script's <code>cargo build</code> and manually moving<br>\nartifacts.</p>\n<p>The benefits that this brings are:</p>\n<ul>\n<li>\n<p>The C API now properly hides symbols in its header files that weren't<br>\n  enabled at build time. This is done through a new build-time generated<br>\n<code>conf.h</code> templated on a <code>conf.h.in</code> file in the source tree.</p>\n</li>\n<li>\n<p>The C API's project now supports enabling/disabling Cargo features to<br>\n  have finer-grained support over what's included (plus auto-management<br>\n  of the header file).</p>\n</li>\n<li>\n<p>Building the C API and managing it is now exclusively done through<br>\n  CMake. For example invoking <code>doxygen</code> now lives in CMake, installation<br>\n  lives there, etc.</p>\n</li>\n</ul>\n<p>The <code>CMakeLists.txt</code> file for the C API is overhauled in the process of<br>\ndoing this. The build now primarily matches on the Rust target being<br>\nbuilt rather than the host target. Additionally installation will now<br>\ninstall both the static and shared libraries instead of just one.<br>\nAdditionally during this refactoring various bits and pieces of<br>\nAndroid-specific code were all removed. Management of the C toolchain<br>\nfeels best left in scope of the caller (e.g. configuring <code>CC_*</code> env vars<br>\nand such) rather than here.<br>\n</p>\n</blockquote>",
        "id": 439142546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715918125
    }
]