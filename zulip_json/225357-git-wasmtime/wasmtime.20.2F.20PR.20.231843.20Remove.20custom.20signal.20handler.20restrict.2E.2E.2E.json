[
    {
        "content": "<p>lostman opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1843\">PR #1843</a> from <code>remove-custom-signal-handler-restrictions</code> to <code>master</code>:</p>\n<blockquote>\n<p>PR <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1577\">https://github.com/bytecodealliance/wasmtime/pull/1577</a> introduced restrictions on handling signals originating from outside of the Wasm code.</p>\n<p>Currently these restrictions also apply to custom signal handlers. This is quite limiting and breaks our use-case. We use a custom signal handler to track memory accesses in a manner similar to<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/15c68f2cc15709c65a7838c3c3641f716373d01c/tests/all/custom_signal_handler.rs#L75\">https://github.com/bytecodealliance/wasmtime/blob/15c68f2cc15709c65a7838c3c3641f716373d01c/tests/all/custom_signal_handler.rs#L75</a></p>\n<p>However, in our code the signal can originate both from Wasm code and from hostcalls. PR#1577 only the former works.</p>\n<p>This PR makes the signal origin check run after executing the custom signal handler. This maintains the spirit of PR#1577 while restoring the flexibility of handling any signals from custom signal handlers.</p>\n<p>This PR also adds a hostcall test case.</p>\n</blockquote>",
        "id": 200118129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591631559
    },
    {
        "content": "<p>lostman updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1843\">PR #1843</a> from <code>remove-custom-signal-handler-restrictions</code> to <code>master</code>:</p>\n<blockquote>\n<p>PR <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1577\">https://github.com/bytecodealliance/wasmtime/pull/1577</a> introduced restrictions on handling signals originating from outside of the Wasm code.</p>\n<p>Currently these restrictions also apply to custom signal handlers. This is quite limiting and breaks our use-case. We use a custom signal handler to track memory accesses in a manner similar to<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/15c68f2cc15709c65a7838c3c3641f716373d01c/tests/all/custom_signal_handler.rs#L75\">https://github.com/bytecodealliance/wasmtime/blob/15c68f2cc15709c65a7838c3c3641f716373d01c/tests/all/custom_signal_handler.rs#L75</a></p>\n<p>However, in our code the signal can originate both from Wasm code and from hostcalls. PR#1577 only the former works.</p>\n<p>This PR makes the signal origin check run after executing the custom signal handler. This maintains the spirit of PR#1577 while restoring the flexibility of handling any signals from custom signal handlers.</p>\n<p>This PR also adds a hostcall test case.</p>\n</blockquote>",
        "id": 200120376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591632481
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1843#pullrequestreview-426422947\">PR Review</a>.</p>",
        "id": 200124795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591634614
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1843\">PR #1843</a>.</p>",
        "id": 200131039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591637610
    }
]