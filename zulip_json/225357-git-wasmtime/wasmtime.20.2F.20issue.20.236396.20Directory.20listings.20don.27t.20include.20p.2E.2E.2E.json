[
    {
        "content": "<p>SteveSandersonMS opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>Wasmtime's behavior for directory listings (via the WASI <code>fd_readdir</code> API?) is surprising and is inconsistent with Wasmer.</p>\n<p>If there is a preopen for <code>/blah</code>, do you expect a directory listing for <code>/</code> to include <code>/blah</code>? Most people would do, because that's how all normal filesystems work. However:</p>\n<ul>\n<li>This is <strong>not</strong> the case with wasmtime. Each directory listing returns only the files that literally exist on the host within that directory, ignoring any other preopens that may be mapped into the guest directory.</li>\n<li>But it <strong>is</strong> the case with wasmer - it correctly includes other preopens that have been mapped to the guest directory.</li>\n</ul>\n<p>Repro code: <a href=\"https://gist.github.com/SteveSandersonMS/ff5f5cb91524bbcde24a168841e66f10\">https://gist.github.com/SteveSandersonMS/ff5f5cb91524bbcde24a168841e66f10</a></p>\n<p>Existing application code could be broken in strange ways if typical filesystem invariants are not maintained (e.g., \"a directory's parent always contains that directory\").</p>\n<p>Should this be considered a WASI spec defect, since <a href=\"https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md#-fd_readdirfd-fd-buf-pointeru8-buf_len-size-cookie-dircookie---resultsize-errno\">it does not seem to define any rules around this</a>? Or would people agree the desired semantics are obvious (i.e., should behave like normal filesystems) and that it should be counted as a Wasmtime bug?</p>\n</blockquote>",
        "id": 358928501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684314364
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1551059396\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>I think if anything should do this remapping it should be wasi-libc, not the host wasi impl. If I close the preopen at <code>/blah</code> I did expect it to become impossible to access anything under this preopen that I haven't already opened. Being able to do <code>open(\"/blah/foo\")</code> instead of having to do <code>openat(&lt;&lt;blah&gt;&gt;, \"foo\")</code> is a mechanism inside of wasi-libc for compatibility with existing code. A program designed for wasi that only uses openat shouldn't see anything of this back compat mechanism IMHO. Also what if there is no preopen at <code>/</code>? There is nothing to add the extra dir entries too, so only wasi-libc can provide the illusion like there is a <code>blah</code> dir in <code>/</code>.</p>\n</blockquote>",
        "id": 358932863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684315678
    },
    {
        "content": "<p>SteveSandersonMS <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1551069159\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<blockquote>\n<p>Being able to do open(\"/blah/foo\") instead of having to do openat(&lt;&lt;blah&gt;&gt;, \"foo\") is a mechanism inside of wasi-libc for compatibility with existing code.</p>\n</blockquote>\n<p>That makes sense. But if the goal is compatibility, it also makes sense to complete this picture and simulate the existence of ancestor directories containing the preopens (whether that's done by wasmtime or wasi-libc).</p>\n</blockquote>",
        "id": 358934344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684316098
    },
    {
        "content": "<p>SteveSandersonMS edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1551069159\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<blockquote>\n<p>Being able to do <code>open(\"/blah/foo\")</code> instead of having to do <code>openat(&lt;&lt;blah&gt;&gt;, \"foo\")</code> is a mechanism inside of wasi-libc for compatibility with existing code.</p>\n</blockquote>\n<p>That makes sense. But if the goal is compatibility, it also makes sense to complete this picture and simulate the existence of ancestor directories containing the preopens (whether that's done by wasmtime or wasi-libc).</p>\n</blockquote>",
        "id": 358934439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684316124
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1551123924\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>Yeah, I think it should be done in wasi-libc.</p>\n</blockquote>",
        "id": 358943257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684318483
    },
    {
        "content": "<p>SteveSandersonMS <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1551182531\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>Thanks @bjorn3. I've filed <a href=\"https://github.com/WebAssembly/wasi-libc/issues/414\">https://github.com/WebAssembly/wasi-libc/issues/414</a></p>\n</blockquote>",
        "id": 358952562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684321198
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1552227294\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>Should we close this issue then?</p>\n</blockquote>",
        "id": 359283218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684367923
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1552242788\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>I agree that this needs to be solved in wasi-libc, rather than in the host, so I am in favor of closing this. If for whatever reason the wasi-libc decision is that this needs to be implemented in hosts, then we'll want to update the spec text and tests to note that and we'll open a new issue to implement the spec correctly.</p>\n</blockquote>",
        "id": 359285548,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684369158
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1552242788\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>I agree that this ought to be to be solved in wasi-libc, rather than in the host, so I am in favor of closing this. If for whatever reason the wasi-libc decision is that this needs to be implemented in hosts, then we'll want to update the spec text and tests to note that and we'll open a new issue to implement the spec correctly.</p>\n</blockquote>",
        "id": 359285565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684369167
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1552249829\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>I agree; let's discuss this in the wasi-libc issue, and see where it goes from there.<br>\n</p>\n</blockquote>",
        "id": 359287059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684369936
    },
    {
        "content": "<p>sunfishcode closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>Wasmtime's behavior for directory listings (via the WASI <code>fd_readdir</code> API?) is surprising and is inconsistent with Wasmer.</p>\n<p>If there is a preopen for <code>/blah</code>, do you expect a directory listing for <code>/</code> to include <code>/blah</code>? Most people would do, because that's how all normal filesystems work. However:</p>\n<ul>\n<li>This is <strong>not</strong> the case with wasmtime. Each directory listing returns only the files that literally exist on the host within that directory, ignoring any other preopens that may be mapped into the guest directory.</li>\n<li>But it <strong>is</strong> the case with wasmer - it correctly includes other preopens that have been mapped to the guest directory.</li>\n</ul>\n<p>Repro code: <a href=\"https://gist.github.com/SteveSandersonMS/ff5f5cb91524bbcde24a168841e66f10\">https://gist.github.com/SteveSandersonMS/ff5f5cb91524bbcde24a168841e66f10</a></p>\n<p>Existing application code could be broken in strange ways if typical filesystem invariants are not maintained (e.g., \"a directory's parent always contains that directory\").</p>\n<p>Should this be considered a WASI spec defect, since <a href=\"https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md#-fd_readdirfd-fd-buf-pointeru8-buf_len-size-cookie-dircookie---resultsize-errno\">it does not seem to define any rules around this</a>? Or would people agree the desired semantics are obvious (i.e., should behave like normal filesystems) and that it should be counted as a Wasmtime bug?</p>\n</blockquote>",
        "id": 359287060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684369936
    },
    {
        "content": "<p>SteveSandersonMS <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396#issuecomment-1552694465\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6396\">issue #6396</a>:</p>\n<blockquote>\n<p>Sounds good. Thanks everyone!</p>\n</blockquote>",
        "id": 359327670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684397133
    }
]