[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770\">PR #3770</a>.</p>",
        "id": 270874941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644131250
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770\">PR #3770</a> from <code>qemu-madvise</code> to <code>main</code>:</p>\n<blockquote>\n<p>We currently skip some tests when running our qemu-based tests for<br>\naarch64 and s390x. Qemu has broken madvise(MADV_DONTNEED) semantics --<br>\nspecifically, it just ignores madvise() [1].</p>\n<p>We could continue to whack-a-mole the tests whenever we create new<br>\nfunctionality that relies on madvise() semantics, but ideally we'd just<br>\nhave emulation that properly emulates!</p>\n<p>The earlier discussions on the qemu mailing list [2] had a proposed<br>\npatch for this, but (i) this patch doesn't seem to apply cleanly anymore<br>\n(it's 3.5 years old) and (ii) it's pretty complex due to the need to<br>\nhandle qemu's ability to emulate differing page sizes on host and guest.</p>\n<p>It turns out that we only really need this for CI when host and guest<br>\nhave the same page size (4KiB), so we <em>could</em> just pass the madvise()s<br>\nthrough. I wouldn't expect such a patch to ever land upstream in qemu,<br>\nbut it satisfies our needs I think. So this PR modifies our CI setup to<br>\npatch qemu before building it locally with a little one-off patch.</p>\n<p>[1]<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/2518#issuecomment-747280133\">https://github.com/bytecodealliance/wasmtime/pull/2518#issuecomment-747280133</a></p>\n<p>[2]<br>\n<a href=\"https://lists.gnu.org/archive/html/qemu-devel/2018-08/msg05416.html\">https://lists.gnu.org/archive/html/qemu-devel/2018-08/msg05416.html</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 270874943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644131250
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770\">PR #3770</a> from <code>qemu-madvise</code> to <code>main</code>.</p>",
        "id": 270875089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644131479
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770#discussion_r800741457\">PR review comment</a>:</p>\n<blockquote>\n<p>Unlike <code>posix_fadvise</code>, the libc API to <code>madvise</code> sets <code>errno</code> rather than returning an error code. If I understand the qemu code here, you can use <code>get_errno</code> to handle <code>madvise</code>'s return value and <code>errno</code>.</p>\n</blockquote>",
        "id": 270990679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644246240
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770#pullrequestreview-874805951\">PR review</a>.</p>",
        "id": 270990680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644246240
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770#pullrequestreview-874805951\">PR review</a>.</p>",
        "id": 270990682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644246240
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770\">PR #3770</a> from <code>qemu-madvise</code> to <code>main</code>.</p>",
        "id": 271027690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644261071
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770#pullrequestreview-875132957\">PR review</a>.</p>",
        "id": 271027728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644261090
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770#discussion_r800975389\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yes, thanks for catching this!</p>\n</blockquote>",
        "id": 271027729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644261090
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770#pullrequestreview-875238075\">PR review</a>.</p>",
        "id": 271040620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644267424
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3770\">PR #3770</a>.</p>",
        "id": 271061459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644278215
    }
]