[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a> from <code>elliottt:trevor/winch-cranelift-trampolines</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Instead of reimplementing the component trampolines directly in terms of Winch's <code>MacroAssembler</code> trait, reuse <code>wasmtime-cranelift</code>'s <code>Compiler</code> implementation to do that heavy lifting.</p>\n<p>I had to remove the type parameter from <code>CompiledFunction</code> and make it a boxed <code>dyn Trait</code> to make this work, due to the requirements of <code>Compiler::append_code</code>, and the visibility of <code>ModuleTextBuilder</code> in the crate hierarchy. I think that this refactoring could be pushed further to avoid the need to have the <code>Compiler</code> trait interface produce <code>&amp;dyn Any</code> results for compiled functions, but haven't looked into making changes further than what was needed to get component trampolines working here.<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426028968,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710200873
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426028969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710200873
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426028970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710200873
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426028971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710200873
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<p>Instead of reimplementing the component trampolines directly in terms of Winch's <code>MacroAssembler</code> trait, reuse <code>wasmtime-cranelift</code>'s <code>Compiler</code> implementation to do that heavy lifting.</p>\n<p>I had to remove the type parameter from <code>CompiledFunction</code> and make it a boxed <code>dyn Trait</code> to make this work, due to the requirements of <code>Compiler::append_code</code>, and the visibility of <code>ModuleTextBuilder</code> in the crate hierarchy. I think that this refactoring could be pushed further to avoid the need to have the <code>Compiler</code> trait interface produce <code>&amp;dyn Any</code> results for compiled functions, but haven't looked into making changes further than what was needed to get component trampolines working here.</p>\n<p>We can push this work further to remove all trampoline generation from the <code>wasmtime-winch</code> crate, however I didn't want to bulk out the diff in this PR with that additional change, as it's not necessary for running components with winch.<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426029217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710201072
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<p>Instead of reimplementing the component trampolines directly in terms of Winch's <code>MacroAssembler</code> trait, reuse <code>wasmtime-cranelift</code>'s <code>Compiler</code> implementation to do that heavy lifting.</p>\n<p>I had to remove the type parameter from <code>CompiledFunction</code> and make it a boxed <code>dyn Trait</code> to make this work, due to the requirements of <code>Compiler::append_code</code>, and the visibility of <code>ModuleTextBuilder</code> in the crate hierarchy. I think that this refactoring could be pushed further to avoid the need to have the <code>Compiler</code> trait interface produce <code>&amp;dyn Any</code> results for compiled functions, but haven't looked into making changes further than what was needed to get component trampolines working here.</p>\n<p>We can push this work further to remove all trampoline generation from the <code>wasmtime-winch</code> crate, however I didn't want to bulk out the diff in this PR with that additional change, as it's not necessary for running components with winch.</p>\n<h2>TODO</h2>\n<ul>\n<li>\n<p>[ ] Are there any additional component model tests we can opt winch into?<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n</li>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426029405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710201223
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<p>Instead of reimplementing the component trampolines directly in terms of Winch's <code>MacroAssembler</code> trait, reuse <code>wasmtime-cranelift</code>'s <code>Compiler</code> implementation to do that heavy lifting.</p>\n<p>I had to remove the type parameter from <code>CompiledFunction</code> and make it a boxed <code>dyn Trait</code> to make this work, due to the requirements of <code>Compiler::append_code</code>, and the visibility of <code>ModuleTextBuilder</code> in the crate hierarchy. I think that this refactoring could be pushed further to avoid the need to have the <code>Compiler</code> trait interface produce <code>&amp;dyn Any</code> results for compiled functions, but haven't looked into making changes further than what was needed to get component trampolines working here.</p>\n<p>We can push this work further to remove all trampoline generation from the <code>wasmtime-winch</code> crate, however I didn't want to bulk out the diff in this PR with that additional change, as it's not necessary for running components with winch.</p>\n<h2>TODO</h2>\n<ul>\n<li>[ ] Are there any additional component model tests we can opt winch into?</li>\n<li>\n<p>[ ] We're not making use of the new <code>CallingConvention::Winch</code> convention from the trampolines, where should that be set?<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n</li>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426029533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710201306
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<p>Instead of reimplementing the component trampolines directly in terms of Winch's <code>MacroAssembler</code> trait, reuse <code>wasmtime-cranelift</code>'s <code>Compiler</code> implementation to do that heavy lifting.</p>\n<p>I had to remove the type parameter from <code>CompiledFunction</code> and make it a boxed <code>dyn Trait</code> to make this work, due to the requirements of <code>Compiler::append_code</code>, and the visibility of <code>ModuleTextBuilder</code> in the crate hierarchy. I think that this refactoring could be pushed further to avoid the need to have the <code>Compiler</code> trait interface produce <code>&amp;dyn Any</code> results for compiled functions, but haven't looked into making changes further than what was needed to get component trampolines working here.</p>\n<p>We can push this work further to remove all trampoline generation from the <code>wasmtime-winch</code> crate, however I didn't want to bulk out the diff in this PR with that additional change, as it's not necessary for running components with winch.</p>\n<h2>TODO</h2>\n<ul>\n<li>[ ] Are there any additional component model tests we can opt winch into?</li>\n<li>\n<p>[ ] We're not making use of the new <code>CallConv::Winch</code> convention from the trampolines, where should that be set?<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n</li>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426029633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710201372
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082#issuecomment-1989719914\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @saulecabrera</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"winch\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>saulecabrera: winch</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 426034828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710205431
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426199556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710272309
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<p>Instead of reimplementing the component trampolines directly in terms of Winch's <code>MacroAssembler</code> trait, reuse <code>wasmtime-cranelift</code>'s <code>Compiler</code> implementation to do that heavy lifting.</p>\n<p>I had to remove the type parameter from <code>CompiledFunction</code> and make it a boxed <code>dyn Trait</code> to make this work, due to the requirements of <code>Compiler::append_code</code>, and the visibility of <code>ModuleTextBuilder</code> in the crate hierarchy. I think that this refactoring could be pushed further to avoid the need to have the <code>Compiler</code> trait interface produce <code>&amp;dyn Any</code> results for compiled functions, but haven't looked into making changes further than what was needed to get component trampolines working here.</p>\n<p>We can push this work further to remove all trampoline generation from the <code>wasmtime-winch</code> crate, however I didn't want to bulk out the diff in this PR with that additional change, as it's not necessary for running components with winch.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426199900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710272473
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426200074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710272540
    },
    {
        "content": "<p><strong>elliottt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a> as ready for review.</p>",
        "id": 426200118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710272560
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082#issuecomment-1992414527\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\", \"wasmtime:config\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 426200393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710272677
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082#issuecomment-1992415290\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 426200429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710272691
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082#pullrequestreview-1932267753\">PR review</a>.</p>",
        "id": 426201464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710273111
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426201481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710273116
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426214537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710278428
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426220290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710281112
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8082\">PR #8082</a>.</p>",
        "id": 426228448,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710285466
    }
]