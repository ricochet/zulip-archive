[
    {
        "content": "<p>adv-sw opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>#include &lt;stdio.h&gt;<br>\n#include &lt;stdlib.h&gt;<br>\n#include &lt;wasm.h&gt;<br>\n#include &lt;wasmtime.h&gt;</p>\n<p>int main() <br>\n{ <br>\n  wasm_config_t* wasm_config = wasm_config_new();<br>\n  wasmtime_config_debug_info_set(wasm_config, true);<br>\n  wasm_engine_t *engine = wasm_engine_new_with_config(wasm_config);</p>\n<p>printf(\"A\");<br>\n  wasm_valtype_t* val_i32 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_functype_t *__ft_i32_out_i32  = wasm_functype_new_1_1(val_i32, val_i32);<br>\n  printf(\"B\");<br>\n  printf(\"\\n\");</p>\n<p>return 0;<br>\n}</p>\n<h3>Steps to Reproduce</h3>\n<p>Compile the above, Windows (might also fault other platforms, but untested). Run it.</p>\n<h3>Expected Results</h3>\n<p>Completes - Output: AB</p>\n<h3>Actual Results</h3>\n<p>Faults in: wasm_functype_new_1_1 </p>\n<h3>Versions and Environment</h3>\n<p>Tip as of 5/5/2023 at 13:00 GMT</p>\n<p>Windows 11 Home, X64</p>\n<h3>Extra Info</h3>\n<p>Reverting the following resolves the regression.</p>\n<p><a href=\"https://pastebin.com/2Yt3FG9E\">https://pastebin.com/2Yt3FG9E</a></p>\n</blockquote>",
        "id": 356057771,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683293146
    },
    {
        "content": "<p>adv-sw labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>#include &lt;stdio.h&gt;<br>\n#include &lt;stdlib.h&gt;<br>\n#include &lt;wasm.h&gt;<br>\n#include &lt;wasmtime.h&gt;</p>\n<p>int main() <br>\n{ <br>\n  wasm_config_t* wasm_config = wasm_config_new();<br>\n  wasmtime_config_debug_info_set(wasm_config, true);<br>\n  wasm_engine_t *engine = wasm_engine_new_with_config(wasm_config);</p>\n<p>printf(\"A\");<br>\n  wasm_valtype_t* val_i32 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_functype_t *__ft_i32_out_i32  = wasm_functype_new_1_1(val_i32, val_i32);<br>\n  printf(\"B\");<br>\n  printf(\"\\n\");</p>\n<p>return 0;<br>\n}</p>\n<h3>Steps to Reproduce</h3>\n<p>Compile the above, Windows (might also fault other platforms, but untested). Run it.</p>\n<h3>Expected Results</h3>\n<p>Completes - Output: AB</p>\n<h3>Actual Results</h3>\n<p>Faults in: wasm_functype_new_1_1 </p>\n<h3>Versions and Environment</h3>\n<p>Tip as of 5/5/2023 at 13:00 GMT</p>\n<p>Windows 11 Home, X64</p>\n<h3>Extra Info</h3>\n<p>Reverting the following resolves the regression.</p>\n<p><a href=\"https://pastebin.com/2Yt3FG9E\">https://pastebin.com/2Yt3FG9E</a></p>\n</blockquote>",
        "id": 356057772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683293146
    },
    {
        "content": "<p>adv-sw edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>#include &lt;stdio.h&gt;<br>\n#include &lt;stdlib.h&gt;<br>\n#include &lt;wasm.h&gt;<br>\n#include &lt;wasmtime.h&gt;</p>\n<p>int main() <br>\n{ <br>\n  wasm_config_t* wasm_config = wasm_config_new();<br>\n  wasmtime_config_debug_info_set(wasm_config, true);<br>\n  wasm_engine_t *engine = wasm_engine_new_with_config(wasm_config);</p>\n<p>printf(\"A\");<br>\n  wasm_valtype_t* val_i32 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_functype_t *__ft_i32_out_i32  = wasm_functype_new_1_1(val_i32, val_i32);<br>\n  printf(\"B\");<br>\n  printf(\"\\n\");</p>\n<p>return 0;<br>\n}</p>\n<h3>Steps to Reproduce</h3>\n<p>Compile the above, Windows (might also fault other platforms, but untested). Run it.</p>\n<h3>Expected Results</h3>\n<p>Completes - Output: AB</p>\n<h3>Actual Results</h3>\n<p>Faults in: wasm_functype_new_1_1 </p>\n<h3>Versions and Environment</h3>\n<p>Tip as of 5/5/2023 at 13:00 GMT</p>\n<p>Windows 11 Home, X64</p>\n<h3>Extra Info</h3>\n<p>Reverting the following resolves the regression.</p>\n<p><a href=\"https://pastebin.com/2Yt3FG9E\">https://pastebin.com/2Yt3FG9E</a></p>\n<p>... though the spec apparently states that function should reassign owner rather than clone, rework of regressed functionality.<br>\n</p>\n</blockquote>",
        "id": 356059486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683293476
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347#issuecomment-1536269190\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<p><code>wasm_functype_new_1_1</code> consumes both arguments according to the header declaration: <a href=\"https://github.com/WebAssembly/wasm-c-api/blob/c9d31284651b975f05ac27cee0bab1377560b87e/include/wasm.h#L607\">https://github.com/WebAssembly/wasm-c-api/blob/c9d31284651b975f05ac27cee0bab1377560b87e/include/wasm.h#L607</a> This means that you can't pass the exact same argument twice without causing a crash. You have to call <code> wasm_valtype_new(WASM_I32)</code> once for each use and never reuse it after passing it to <code>wasm_functype_new_1_1</code>.</p>\n</blockquote>",
        "id": 356059872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683293550
    },
    {
        "content": "<p>adv-sw <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347#issuecomment-1536281659\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<p>ahhhh :)</p>\n<p>what an odd api.</p>\n</blockquote>",
        "id": 356062502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683294118
    },
    {
        "content": "<p>adv-sw <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347#issuecomment-1536311797\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<p>The following faults on wasm_valtype_delete so it seems we should never call wasm_valtype_delete as the value has been sucked internal to wasm_valtype_new.</p>\n<p>Hence wondering why wasm_valtype_delete API entrypoint even exists.</p>\n<p>int main() <br>\n{ <br>\n  wasm_config_t* wasm_config = wasm_config_new();<br>\n  wasmtime_config_debug_info_set(wasm_config, true);<br>\n  wasm_engine_t *engine = wasm_engine_new_with_config(wasm_config);</p>\n<p>printf(\"wasm_functype_new_1_1[before].\\n\");<br>\n  wasm_valtype_t* val_i32_1 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_valtype_t* val_i32_2 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_functype_t *__ft_i32_out_i32  = wasm_functype_new_1_1(val_i32_1, val_i32_2);<br>\n  printf(\"wasm_functype_new_1_1[after].\\n\");</p>\n<p>wasm_functype_delete(__ft_i32_out_i32);</p>\n<p>wasm_valtype_delete(val_i32_1);<br>\n  wasm_valtype_delete(val_i32_2);</p>\n<p>return 0;<br>\n}</p>\n</blockquote>",
        "id": 356069429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683295430
    },
    {
        "content": "<p>adv-sw edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347#issuecomment-1536311797\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<p>The following faults on wasm_valtype_delete so it seems we should never call wasm_valtype_delete as the value has been sucked internal to wasm_functype_new_1_1.</p>\n<p>Hence wondering why wasm_valtype_delete API entrypoint even exists.</p>\n<p>int main() <br>\n{ <br>\n  wasm_config_t* wasm_config = wasm_config_new();<br>\n  wasmtime_config_debug_info_set(wasm_config, true);<br>\n  wasm_engine_t *engine = wasm_engine_new_with_config(wasm_config);</p>\n<p>printf(\"wasm_functype_new_1_1[before].\\n\");<br>\n  wasm_valtype_t* val_i32_1 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_valtype_t* val_i32_2 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_functype_t *__ft_i32_out_i32  = wasm_functype_new_1_1(val_i32_1, val_i32_2);<br>\n  printf(\"wasm_functype_new_1_1[after].\\n\");</p>\n<p>wasm_functype_delete(__ft_i32_out_i32);</p>\n<p>wasm_valtype_delete(val_i32_1);<br>\n  wasm_valtype_delete(val_i32_2);</p>\n<p>return 0;<br>\n}</p>\n</blockquote>",
        "id": 356069590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683295453
    },
    {
        "content": "<p>adv-sw closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6347\">issue #6347</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>#include &lt;stdio.h&gt;<br>\n#include &lt;stdlib.h&gt;<br>\n#include &lt;wasm.h&gt;<br>\n#include &lt;wasmtime.h&gt;</p>\n<p>int main() <br>\n{ <br>\n  wasm_config_t* wasm_config = wasm_config_new();<br>\n  wasmtime_config_debug_info_set(wasm_config, true);<br>\n  wasm_engine_t *engine = wasm_engine_new_with_config(wasm_config);</p>\n<p>printf(\"A\");<br>\n  wasm_valtype_t* val_i32 =  wasm_valtype_new(WASM_I32);<br>\n  wasm_functype_t *__ft_i32_out_i32  = wasm_functype_new_1_1(val_i32, val_i32);<br>\n  printf(\"B\");<br>\n  printf(\"\\n\");</p>\n<p>return 0;<br>\n}</p>\n<h3>Steps to Reproduce</h3>\n<p>Compile the above, Windows (might also fault other platforms, but untested). Run it.</p>\n<h3>Expected Results</h3>\n<p>Completes - Output: AB</p>\n<h3>Actual Results</h3>\n<p>Faults in: wasm_functype_new_1_1 </p>\n<h3>Versions and Environment</h3>\n<p>Tip as of 5/5/2023 at 13:00 GMT</p>\n<p>Windows 11 Home, X64</p>\n<h3>Extra Info</h3>\n<p>Reverting the following resolves the regression.</p>\n<p><a href=\"https://pastebin.com/2Yt3FG9E\">https://pastebin.com/2Yt3FG9E</a></p>\n<p>... though the spec apparently states that function should reassign owner rather than clone, rework of regressed functionality.<br>\n</p>\n</blockquote>",
        "id": 356081282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683297685
    }
]