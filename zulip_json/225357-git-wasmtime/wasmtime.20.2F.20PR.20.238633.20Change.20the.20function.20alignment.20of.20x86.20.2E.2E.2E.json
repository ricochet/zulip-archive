[
    {
        "content": "<p>hungryzzz opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a> from <code>hungryzzz:fix-8573</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<p>The current default 16-bytes function alignment for x86-64 would cause suboptimal execution performance under some cases which are reported in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8573\">https://github.com/bytecodealliance/wasmtime/issues/8573</a>.</p>\n<p>Based on the discussion \"the CPU frontend grabs an aligned 32B or 64B chunk at a time\" in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8573\">https://github.com/bytecodealliance/wasmtime/issues/8573</a>, this PR changes the default alignment from 16-bytes to 32-bytes for better performance. </p>\n<p>Also rerun the cases reported in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8573\">https://github.com/bytecodealliance/wasmtime/issues/8573</a> and the execution time will back to normal.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># After changes</span>\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>good.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>good.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>bad.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>bad.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>good.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>good.cwasm<span class=\"w\">  </span><span class=\"m\">4</span>.67s<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.00s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">4</span>.674<span class=\"w\"> </span>total\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>bad.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>bad.cwasm<span class=\"w\">  </span><span class=\"m\">4</span>.68<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.01s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">9</span>.365<span class=\"w\"> </span>total\n\n\n<span class=\"c1\"># Before changes</span>\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>good.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>good.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>bad.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>bad.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>good.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>good.cwasm<span class=\"w\">  </span><span class=\"m\">4</span>.67s<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.00s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">4</span>.674<span class=\"w\"> </span>total\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>bad.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>bad.cwasm<span class=\"w\">  </span><span class=\"m\">9</span>.36s<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.01s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">9</span>.365<span class=\"w\"> </span>total\n</code></pre></div>\n</blockquote>",
        "id": 438953691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715843054
    },
    {
        "content": "<p><strong>hungryzzz</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a>.</p>",
        "id": 438953694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715843054
    },
    {
        "content": "<p><strong>hungryzzz</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a>.</p>",
        "id": 438953695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715843055
    },
    {
        "content": "<p>hungryzzz edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<p>The current default 16-bytes function alignment for x86-64 would cause suboptimal execution performance under some cases which are reported in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8573\">https://github.com/bytecodealliance/wasmtime/issues/8573</a>.</p>\n<p>Based on the discussion \"the CPU frontend grabs an aligned 32B or 64B chunk at a time\" in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8573\">https://github.com/bytecodealliance/wasmtime/issues/8573</a>, this PR changes the default alignment from 16-bytes to 32-bytes for better performance. </p>\n<p>Also rerun the cases reported in <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8573\">https://github.com/bytecodealliance/wasmtime/issues/8573</a> and the execution time will back to normal.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"c1\"># After changes</span>\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>good.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>good.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>bad.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>bad.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>good.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>good.cwasm<span class=\"w\">  </span><span class=\"m\">4</span>.68s<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.00s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">4</span>.680<span class=\"w\"> </span>total\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>bad.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>bad.cwasm<span class=\"w\">  </span><span class=\"m\">4</span>.67s<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.01s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">99</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">4</span>.681<span class=\"w\"> </span>total\n\n\n<span class=\"c1\"># Before changes</span>\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>good.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>good.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>compile<span class=\"w\"> </span>bad.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>bad.cwasm\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>good.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>good.cwasm<span class=\"w\">  </span><span class=\"m\">4</span>.67s<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.00s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">4</span>.674<span class=\"w\"> </span>total\n➜<span class=\"w\">  </span><span class=\"k\">case</span><span class=\"w\"> </span>✗<span class=\"w\"> </span><span class=\"nb\">time</span><span class=\"w\"> </span>wasmtime<span class=\"w\"> </span>run<span class=\"w\"> </span>--allow-precompiled<span class=\"w\"> </span>bad.cwasm\n~/wasmtime/target/release/wasmtime<span class=\"w\"> </span>run<span class=\"w\">  </span>bad.cwasm<span class=\"w\">  </span><span class=\"m\">9</span>.36s<span class=\"w\"> </span>user<span class=\"w\"> </span><span class=\"m\">0</span>.01s<span class=\"w\"> </span>system<span class=\"w\"> </span><span class=\"m\">100</span>%<span class=\"w\"> </span>cpu<span class=\"w\"> </span><span class=\"m\">9</span>.365<span class=\"w\"> </span>total\n</code></pre></div>\n</blockquote>",
        "id": 438953988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715843175
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633#issuecomment-2115407710\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a>:</p>\n<blockquote>\n<p>Thanks for this! It looks like this is causing changes in the disassembly of some existing tests. You can update the disassembly with <code>WASMTIME_TEST_BLESS=1 cargo test --test disas</code> locally and commit those changes to get pushed up here</p>\n</blockquote>",
        "id": 439033264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715869648
    },
    {
        "content": "<p><strong>hungryzzz</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a>.</p>",
        "id": 439249166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715960563
    },
    {
        "content": "<p>hungryzzz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a>.</p>",
        "id": 439249167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715960563
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633#pullrequestreview-2063826348\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 439251946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715961577
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8633\">PR #8633</a>.</p>",
        "id": 439254170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715962380
    }
]