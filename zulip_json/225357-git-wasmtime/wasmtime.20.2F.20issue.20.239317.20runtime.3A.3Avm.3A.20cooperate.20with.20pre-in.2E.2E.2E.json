[
    {
        "content": "<p>ajwerner opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9317\">issue #9317</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p><code>wasmtime</code> today installs signal handlers that it uses to recover from traps that occur during the execution of a wasm program. This is very legit -- no problems there. The issue I have is that it appears that the signal handler installation throws away the existing signal handlers. That means if anybody else wants to interact with that signal, and, say, it occurs not when running wasm, they cannot. Instead, wasmtime should detect via some tls state whether the signal has occurred while inside a wasm call, and if not it should call through to the previous handler.</p>\n<h4>Benefit</h4>\n<p>This will allow wasmtime to be used in applications which themselves have signal handlers for various faults.</p>\n<h4>Implementation</h4>\n<p>A global variable to store the next signal handlers to call and some logic to decide whether the signal occurred within wasm.</p>\n</blockquote>",
        "id": 472984176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727390608
    },
    {
        "content": "<p>ajwerner closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9317\">issue #9317</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p><code>wasmtime</code> today installs signal handlers that it uses to recover from traps that occur during the execution of a wasm program. This is very legit -- no problems there. The issue I have is that it appears that the signal handler installation throws away the existing signal handlers. That means if anybody else wants to interact with that signal, and, say, it occurs not when running wasm, they cannot. Instead, wasmtime should detect via some tls state whether the signal has occurred while inside a wasm call, and if not it should call through to the previous handler.</p>\n<h4>Benefit</h4>\n<p>This will allow wasmtime to be used in applications which themselves have signal handlers for various faults.</p>\n<h4>Implementation</h4>\n<p>A global variable to store the next signal handlers to call and some logic to decide whether the signal occurred within wasm.</p>\n</blockquote>",
        "id": 472984336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727390693
    },
    {
        "content": "<p>ajwerner <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9317#issuecomment-2378075097\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9317\">issue #9317</a>:</p>\n<blockquote>\n<p>My mistake, got confused looking at <a href=\"https://github.com/bytecodealliance/wasmtime/blob/110e70f30e34b9df5ed4aaf401c8818c23204ca2/examples/min-platform/embedding/wasmtime-platform.c#L99-L119\">https://github.com/bytecodealliance/wasmtime/blob/110e70f30e34b9df5ed4aaf401c8818c23204ca2/examples/min-platform/embedding/wasmtime-platform.c#L99-L119</a>. It does the right thing! <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> </p>\n</blockquote>",
        "id": 472984337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1727390694
    }
]