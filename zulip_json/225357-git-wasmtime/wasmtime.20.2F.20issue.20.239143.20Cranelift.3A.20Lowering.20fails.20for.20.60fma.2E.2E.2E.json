[
    {
        "content": "<p><a href=\"https://github.com/kcvlex\">kcvlex</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">Issue #9143</a>.</p>",
        "id": 463499330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724097334
    },
    {
        "content": "<p><a href=\"https://github.com/kcvlex\">kcvlex</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">Issue #9143</a>.</p>",
        "id": 463499332,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724097334
    },
    {
        "content": "<p>kcvlex opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmax</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmax</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmin</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmin</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>Successful</p>\n<h3>Actual Results</h3>\n<p>Assertion failure</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1449</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_filetests</span><span class=\"p\">::</span><span class=\"n\">concurrent</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FAIL</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">fmax</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/2c3e64bc5de0a67963e0e34eabbb6de95ecda0ba\">#2c3e64bc5de0a67963e0e34eabbb6de95ecda0ba \n</a></p>\n<p>Operating system: Linux</p>\n<p>Architecture: X86_64</p>\n<h3>Extra Info</h3>\n<p>I tried other similar cases and found that the test passes  if there are no <code>load</code> instructions. Also, the problem doesn't occur when inserting a <code>jump</code> like the one below.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmax</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">)</span>\n\n<span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmax</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 463499337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724097335
    },
    {
        "content": "<p>kcvlex edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmax</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmax</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmin</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmin</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>Successful</p>\n<h3>Actual Results</h3>\n<p>Assertion failure</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1449</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_filetests</span><span class=\"p\">::</span><span class=\"n\">concurrent</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FAIL</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">fmax</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/2c3e64bc5de0a67963e0e34eabbb6de95ecda0ba\">#2c3e64bc5de0a67963e0e34eabbb6de95ecda0ba \n</a></p>\n<p>Operating system: Linux</p>\n<p>Architecture: X86_64</p>\n<h3>Extra Info</h3>\n<p>I tried other similar cases and found that the test passes  if there are no <code>load</code> instructions. Also, the problem doesn't occur when inserting a <code>jump</code> like the one below.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmax</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">)</span>\n\n<span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmax</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 463500747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724097658
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143#issuecomment-2297347832\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<p>Maybe a regression from <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9137\">https://github.com/bytecodealliance/wasmtime/pull/9137</a> ? cc @alexcrichton </p>\n</blockquote>",
        "id": 463501106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724097748
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143#issuecomment-2297488021\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<p>Bisection points to #5841, \"very old\" issue, continuing to investigate.</p>\n</blockquote>",
        "id": 463518195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724102861
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143#issuecomment-2297495677\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<p>This appears to not affect wasm because wasm always loads/stores as i8x16 and the bitcast afterwards to go to f32x4 thwarts the load sinking here. Given that I think this is just a fix for clif/lowerings which makes it so this doesn't have quite as large of an impact. I'll work on fixing.</p>\n</blockquote>",
        "id": 463518963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724103195
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143#issuecomment-2297507953\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<p>Thank you for the clear and concise bug report!</p>\n</blockquote>",
        "id": 463520175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724103738
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmax</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmax</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmin</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmin</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>Successful</p>\n<h3>Actual Results</h3>\n<p>Assertion failure</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">:</span><span class=\"mi\">1449</span><span class=\"p\">:</span><span class=\"mi\">13</span><span class=\"p\">:</span>\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"w\"> </span><span class=\"n\">ERROR</span><span class=\"w\"> </span><span class=\"n\">cranelift_filetests</span><span class=\"p\">::</span><span class=\"n\">concurrent</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">FAIL</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">fmax</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inst_sunk</span><span class=\"p\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">inst</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/2c3e64bc5de0a67963e0e34eabbb6de95ecda0ba\">#2c3e64bc5de0a67963e0e34eabbb6de95ecda0ba \n</a></p>\n<p>Operating system: Linux</p>\n<p>Architecture: X86_64</p>\n<h3>Extra Info</h3>\n<p>I tried other similar cases and found that the test passes  if there are no <code>load</code> instructions. Also, the problem doesn't occur when inserting a <code>jump</code> like the one below.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">fmax</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f32x4</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x4</span><span class=\"w\"> </span><span class=\"n\">v0</span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">)</span>\n\n<span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">f32x4</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"nc\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fmax</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 463525207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724105212
    },
    {
        "content": "<p>kcvlex <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143#issuecomment-2298539950\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9143\">issue #9143</a>:</p>\n<blockquote>\n<p>Thanks for your quick fix!</p>\n</blockquote>",
        "id": 463660569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724150328
    }
]