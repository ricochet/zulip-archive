[
    {
        "content": "<p>JMLX42 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9849\">issue #9849</a>:</p>\n<blockquote>\n<p>Hello,</p>\n<p>I am trying to use <code>container2wasm</code> to run a Linux VM inside <code>wasmtime</code>. Here is my code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#[tokio::main]</span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">-&gt;</span><span class=\"w\"> </span><span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Create a new Wasmtime engine and store with unit data.</span>\n<span class=\"w\">    </span><span class=\"c1\">// Construct the wasm engine with async support enabled.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">async_support</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Embed the WebAssembly module into the binary.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasm_bytes</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">include_bytes!</span><span class=\"p\">(</span><span class=\"s\">\"../images/ubuntu:22.04.wasm\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Create a linker to link the WASI module.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">WasiP1Ctx</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">preview1</span><span class=\"p\">::</span><span class=\"n\">add_to_linker_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">t</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Create a WASI context and put it in a Store; all instances in the store</span>\n<span class=\"w\">    </span><span class=\"c1\">// share this context. `WasiCtxBuilder` provides a number of ways to</span>\n<span class=\"w\">    </span><span class=\"c1\">// configure what the target program will have access to.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wasi_ctx</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasiCtxBuilder</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_stdio</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">inherit_network</span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">socket_addr_check</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"nb\">Box</span><span class=\"p\">::</span><span class=\"n\">pin</span><span class=\"p\">(</span><span class=\"n\">ready</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)))</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">allow_ip_name_lookup</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">allow_tcp</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">allow_udp</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">build_p1</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasi_ctx</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Load the WebAssembly module from the embedded bytes.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span><span class=\"p\">::</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wasm_bytes</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">linker</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">module_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"k\">await</span><span class=\"o\">?</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">get_default</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">)</span><span class=\"o\">?</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">typed</span><span class=\"p\">::</span><span class=\"o\">&lt;</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">store</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// Create an instance of the module with a mutable store.</span>\n<span class=\"w\">    </span><span class=\"n\">func</span><span class=\"p\">.</span><span class=\"n\">call_async</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">()).</span><span class=\"k\">await</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>It works great and I have access to a shell/prompt. But for some reason, network requests fail:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">release</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">profile</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">optimized</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.07</span><span class=\"n\">s</span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">prositronic</span><span class=\"err\">`</span>\n<span class=\"n\">root</span><span class=\"o\">@</span><span class=\"n\">localhost</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">update</span>\n<span class=\"n\">apt</span><span class=\"o\">-</span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">update</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//security.ubuntu.com/ubuntu jammy-security InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-updates InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-backports InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//security.ubuntu.com/ubuntu jammy-security InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-updates InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-backports InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//security.ubuntu.com/ubuntu jammy-security InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-updates InRelease</span>\n<span class=\"n\">Ign</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-backports InRelease</span>\n<span class=\"nb\">Err</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//security.ubuntu.com/ubuntu jammy-security InRelease</span>\n<span class=\"w\">  </span><span class=\"n\">Temporary</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"> </span><span class=\"n\">resolving</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">security</span><span class=\"p\">.</span><span class=\"n\">ubuntu</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">'</span>\n<span class=\"nb\">Err</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy InRelease</span>\n<span class=\"w\">  </span><span class=\"n\">Temporary</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"> </span><span class=\"n\">resolving</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">archive</span><span class=\"p\">.</span><span class=\"n\">ubuntu</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">'</span>\n<span class=\"nb\">Err</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-updates InRelease</span>\n<span class=\"w\">  </span><span class=\"n\">Temporary</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"> </span><span class=\"n\">resolving</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">archive</span><span class=\"p\">.</span><span class=\"n\">ubuntu</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">'</span>\n<span class=\"nb\">Err</span><span class=\"p\">:</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu jammy-backports InRelease</span>\n<span class=\"w\">  </span><span class=\"n\">Temporary</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"> </span><span class=\"n\">resolving</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">archive</span><span class=\"p\">.</span><span class=\"n\">ubuntu</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">'</span>\n<span class=\"n\">Reading</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">lists</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">Done</span>\n<span class=\"n\">W</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">fetch</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu/dists/jammy/InRelease  Temporary failure resolving 'archive.ubuntu.com'</span>\n<span class=\"n\">W</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">fetch</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu/dists/jammy-updates/InRelease  Temporary failure resolving 'archive.ubuntu.com'</span>\n<span class=\"n\">W</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">fetch</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//archive.ubuntu.com/ubuntu/dists/jammy-backports/InRelease  Temporary failure resolving 'archive.ubuntu.com'</span>\n<span class=\"n\">W</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">Failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">fetch</span><span class=\"w\"> </span><span class=\"n\">http</span><span class=\"p\">:</span><span class=\"c1\">//security.ubuntu.com/ubuntu/dists/jammy-security/InRelease  Temporary failure resolving 'security.ubuntu.com'</span>\n<span class=\"n\">W</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"w\"> </span><span class=\"nc\">index</span><span class=\"w\"> </span><span class=\"n\">files</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">download</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">They</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">ignored</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">old</span><span class=\"w\"> </span><span class=\"n\">ones</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">instead</span><span class=\"p\">.</span>\n<span class=\"n\">root</span><span class=\"o\">@</span><span class=\"n\">localhost</span><span class=\"p\">:</span><span class=\"o\">/</span><span class=\"p\">#</span>\n</code></pre></div>\n<p>What am I missing?</p>\n</blockquote>",
        "id": 489735506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734521191
    }
]