[
    {
        "content": "<p>daubaris opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1987\">Issue #1987</a>:</p>\n<blockquote>\n<p>Hi, could someone explain the current status of lightbeam? Since <code>wasmtime</code>  offers multiple compilation strategies I think it currently lacks some information. Lightbeam is a bit of an unknown area, at least at a first glance. For the past few months most of the commits were regarding the <a href=\"https://github.com/bytecodealliance/wasmtime/commits/main/crates/lightbeam\">updates of dependencies</a>. I was wondering if it is a slowly dying part of the project and will it be removed in the future or if there is still a plan to develop it further?</p>\n<p>There is also <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d7ba0ad7668929e516a9f5606e866bd6fb33a34/crates/jit/src/compiler.rs#L40\">this TODO comment</a> about supporting streams in <code>jit</code> crate’s <code>compiler.rs</code> file. According to the git blame the comment is about two years old. This raises a few questions. Does this mean that even though lightbeam is said to be streaming, the feature is not exploited by the runtime? Similarly, I am unsure how come lightbeam is streaming if the binary needs to be loaded all at once by the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d7ba0ad7668929e516a9f5606e866bd6fb33a34/crates/lightbeam/src/module.rs#L509\">translate method</a>.  In addition, the description in the documentation is a bit inconsistent as <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/lightbeam\"><code>README.md</code></a> in the lightbeam crate describes it as \"... an optimising one-pass streaming compiler\", whereas in <a href=\"https://docs.rs/wasmtime/0.18.0/wasmtime/enum.Strategy.html\">docs.rs</a> it's only \"a single-pass code generator\". Please correct me if I am wrong, I might be missing some important details! There are also quite a few <code>unimplemented!</code> cases in the lightbeam’s <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d7ba0ad7668929e516a9f5606e866bd6fb33a34/crates/lightbeam/src/module.rs#L401\">module.rs</a> file which kind of makes me wonder how crucial are these for a module to be compiled?</p>\n<p>To sum up, these are the questions that might clear the confusion:</p>\n<ul>\n<li>The present state of lightbeam?</li>\n<li>Any plans for future development?</li>\n<li>Does <code>wasmtime</code> support streaming at all? </li>\n<li>How come lightbeam is streaming? As I understand, <code>translate</code> method accepts the whole binary and only then it is passed to the <code>translate_only</code> method which reads it section by section?</li>\n</ul>\n</blockquote>",
        "id": 203076058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594109070
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1987#issuecomment-654725069\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1987\">Issue #1987</a>:</p>\n<blockquote>\n<blockquote>\n<p>How come lightbeam is streaming? As I understand, translate method accepts the whole binary and only then it is passed to the translate_only method which reads it section by section?</p>\n</blockquote>\n<p>The \"one-pass streaming compiler\" refers to the fact that <code>translate</code> scans through the given wasm file linearly without looking back at any point. It also doesn't build any ir that doesn't get linearly scanned through itself. Lightbeam reads the wasm code and turns it into its own \"microwasm\" ir. At any point it looks at at most the last two wasm instructions for this. This \"microwasm\" is then immediately turned into machine code, again without looking at more than the last few \"microwasm\" instructions. (I think just the last one) At no point does it need to have more than a small slice of the wasm file in memory. That FIXME refers to the fact that the current user interface doesn't expose this streaming behavior.</p>\n<blockquote>\n<p>Does wasmtime support streaming at all?</p>\n</blockquote>\n<p>Not right now. The Cranelift backend doesn't support it by definition, while the Lightbeam backend does technically support it, but doesn't expose it.</p>\n<blockquote>\n<p>The present state of lightbeam?</p>\n</blockquote>\n<p>I think most of the WASM MVP works, but I am not sure.</p>\n<blockquote>\n<p>Any plans for future development?</p>\n</blockquote>\n<p>I have no clue.</p>\n</blockquote>",
        "id": 203082823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594114195
    },
    {
        "content": "<p>Robbepop <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1987#issuecomment-654737987\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1987\">Issue #1987</a>:</p>\n<blockquote>\n<p>From what I know as @bjorn3 already said the Lightbeam project technically supports streaming compilation. However, the <a href=\"https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wasmparser\"><code>wasmparser</code></a> crate which it uses to parse the incoming Wasm file does not. There have been some attempts by the Lightbeam team to experiment with streaming parsing that can be found here: <a href=\"https://github.com/Vurich/wasm-reader\">https://github.com/Vurich/wasm-reader</a><br>\nIf you want to contribute or read more about the streaming parsing for <code>wasmparser</code>:</p>\n<ul>\n<li>The issue: <a href=\"https://github.com/bytecodealliance/wasm-tools/issues/7\">https://github.com/bytecodealliance/wasm-tools/issues/7</a></li>\n<li>Some discussions in a PR: <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/22\">https://github.com/bytecodealliance/wasm-tools/pull/22</a><br>\nIt's hard but the <code>wasmparser</code> team is eager to have this feature in the future.</li>\n</ul>\n</blockquote>",
        "id": 203084502,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594115506
    },
    {
        "content": "<p>daubaris closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1987\">Issue #1987</a>:</p>\n<blockquote>\n<p>Hi, could someone explain the current status of lightbeam? Since <code>wasmtime</code>  offers multiple compilation strategies I think it currently lacks some information. Lightbeam is a bit of an unknown area, at least at a first glance. For the past few months most of the commits were regarding the <a href=\"https://github.com/bytecodealliance/wasmtime/commits/main/crates/lightbeam\">updates of dependencies</a>. I was wondering if it is a slowly dying part of the project and will it be removed in the future or if there is still a plan to develop it further?</p>\n<p>There is also <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d7ba0ad7668929e516a9f5606e866bd6fb33a34/crates/jit/src/compiler.rs#L40\">this TODO comment</a> about supporting streams in <code>jit</code> crate’s <code>compiler.rs</code> file. According to the git blame the comment is about two years old. This raises a few questions. Does this mean that even though lightbeam is said to be streaming, the feature is not exploited by the runtime? Similarly, I am unsure how come lightbeam is streaming if the binary needs to be loaded all at once by the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d7ba0ad7668929e516a9f5606e866bd6fb33a34/crates/lightbeam/src/module.rs#L509\">translate method</a>.  In addition, the description in the documentation is a bit inconsistent as <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/lightbeam\"><code>README.md</code></a> in the lightbeam crate describes it as \"... an optimising one-pass streaming compiler\", whereas in <a href=\"https://docs.rs/wasmtime/0.18.0/wasmtime/enum.Strategy.html\">docs.rs</a> it's only \"a single-pass code generator\". Please correct me if I am wrong, I might be missing some important details! There are also quite a few <code>unimplemented!</code> cases in the lightbeam’s <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d7ba0ad7668929e516a9f5606e866bd6fb33a34/crates/lightbeam/src/module.rs#L401\">module.rs</a> file which kind of makes me wonder how crucial are these for a module to be compiled?</p>\n<p>To sum up, these are the questions that might clear the confusion:</p>\n<ul>\n<li>The present state of lightbeam?</li>\n<li>Any plans for future development?</li>\n<li>Does <code>wasmtime</code> support streaming at all? </li>\n<li>How come lightbeam is streaming? As I understand, <code>translate</code> method accepts the whole binary and only then it is passed to the <code>translate_only</code> method which reads it section by section?</li>\n</ul>\n</blockquote>",
        "id": 203245581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594199027
    }
]