[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6120#issuecomment-1489490474\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6120\">issue #6120</a>:</p>\n<blockquote>\n<p>Taking a look!</p>\n</blockquote>",
        "id": 345534449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680134283
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6120#issuecomment-1490621707\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6120\">issue #6120</a>:</p>\n<blockquote>\n<p>@Kmeakin it looks like this is still not quite a verbatim move, which is making it tricky for me to verify -- e.g., this rule</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Optimize</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">of</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"p\">.</span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ne</span><span class=\"w\"> </span><span class=\"n\">ty</span>\n<span class=\"w\">                      </span><span class=\"p\">(</span><span class=\"n\">uextend</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"n\">inner</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">))</span>\n<span class=\"w\">                      </span><span class=\"p\">(</span><span class=\"n\">iconst</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">u64_from_imm64</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">))))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">subsume</span><span class=\"w\"> </span><span class=\"n\">inner</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>became</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">Optimize</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">of</span><span class=\"o\">-</span><span class=\"n\">icmp</span>:\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ne</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">uextend</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"n\">inner</span><span class=\"w\"> </span><span class=\"o\">@</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">iconst</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">u64_from_imm64</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">))))</span>\n<span class=\"w\">      </span><span class=\"p\">(</span><span class=\"n\">subsume</span><span class=\"w\"> </span><span class=\"n\">inner</span><span class=\"p\">))</span>\n</code></pre></div>\n<p>I'm trying not to be <em>too</em> picky but I also find it much easier if code motion isn't mixed in with re-formatting, change of comments, etc.; if you don't mind, would you be able to redo the code-motion with a straight copy-paste, keeping things in the same order, then we can do other refactors later?</p>\n</blockquote>",
        "id": 345735590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680195087
    }
]