[
    {
        "content": "<p>Michael-F-Bryan opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949\">issue #2949</a>:</p>\n<blockquote>\n<p>We are currently using <code>wasmer</code> as a WebAssembly runtime and I'd like to simplify the way host functions are done by using <code>wiggle</code>. </p>\n<p>Is there a list of things I would need to do in order to implement a <code>wasmer-wiggle</code> crate? Or could you point me to a list of resources I can use as a starting point?</p>\n</blockquote>",
        "id": 240575278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622190725
    },
    {
        "content": "<p>Michael-F-Bryan edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949\">issue #2949</a>:</p>\n<blockquote>\n<p>We are currently using <code>wasmer</code> as a WebAssembly runtime and I'd like to simplify the way host functions are done by using WITX as an interface definition language and generating guest/host bindings with <code>wiggle</code>. </p>\n<p>Is there a list of things I would need to do in order to implement a <code>wasmer-wiggle</code> crate? Or could you point me to a list of resources I can use as a starting point?</p>\n</blockquote>",
        "id": 240575306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622190750
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949#issuecomment-850256933\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949\">issue #2949</a>:</p>\n<blockquote>\n<p>Based on the source of <code>wiggle-wasmtime</code> I think you need to first implement <code>wiggle::GuestMemory</code> and then make a macro like <a href=\"https://github.com/bytecodealliance/wasmtime/blob/33c791e1f54c585a002ca244ac8ce2ef01a9cc34/crates/wiggle/wasmtime/macro/src/lib.rs\">https://github.com/bytecodealliance/wasmtime/blob/33c791e1f54c585a002ca244ac8ce2ef01a9cc34/crates/wiggle/wasmtime/macro/src/lib.rs</a> to register the host functions to wasmer and create wrapper functions for calling into wasm.</p>\n</blockquote>",
        "id": 240576314,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622191432
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949#issuecomment-850561994\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949\">issue #2949</a>:</p>\n<blockquote>\n<p>I'm not familiar with how <code>wasmer</code> works so you'll mostly be on your own for this. You might be able to port wiggle today, but you may end up having to fork it in the long run depending on what your goals are.</p>\n<p>In addition to <code>wiggle-wasmtime</code> you can also use the sources of <code>lucet-wiggle</code> as a reference: <a href=\"https://github.com/bytecodealliance/lucet/tree/main/lucet-wiggle\">https://github.com/bytecodealliance/lucet/tree/main/lucet-wiggle</a> Note that wiggle use in the lucet repo is currently based on a newer version of wiggle that is landing soon in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2897\">https://github.com/bytecodealliance/wasmtime/pull/2897</a>. Note that another change in 2897 is folding <code>wiggle-wasmtime</code> functionality straight into the <code>wiggle</code> crate - doesn't make a big difference for now besides erasing some crates by using cargo features for optional functionality instead.</p>\n<p>Wasmtime has nearly subsumed Lucet in our (Fastly) production use. Once we have EOL'd Lucet, we intend to refactor wiggle to specialize it to just work with Wasmtime. Having wiggle factored to support two different runtimes makes it harder to read &amp; write, among other design compromises we've been forced into. So, wiggle may end up evolving so that it is not viable to use on a different engine. Additionally, there is ongoing work to evolve the witx language and define the first ABI for Interface Types (<a href=\"https://github.com/WebAssembly/WASI/pull/422\">https://github.com/WebAssembly/WASI/pull/422</a>, <a href=\"https://github.com/WebAssembly/interface-types/pull/132\">https://github.com/WebAssembly/interface-types/pull/132</a>), and we'll be evolving wiggle to support those developments as well.</p>\n</blockquote>",
        "id": 240635192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622222561
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949#issuecomment-1118783811\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949\">issue #2949</a>:</p>\n<blockquote>\n<p>I'm going to close this since wiggle is unsable enough that we're not going to be adding this to this repository. The wiggle infrastructure is not slated to suvive indefinitely as it's intended to be supplanted with wit-bindgen in the future as well.</p>\n</blockquote>",
        "id": 281324356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651768479
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2949\">issue #2949</a>:</p>\n<blockquote>\n<p>We are currently using <code>wasmer</code> as a WebAssembly runtime and I'd like to simplify the way host functions are done by using WITX as an interface definition language and generating guest/host bindings with <code>wiggle</code>. </p>\n<p>Is there a list of things I would need to do in order to implement a <code>wasmer-wiggle</code> crate? Or could you point me to a list of resources I can use as a starting point?</p>\n</blockquote>",
        "id": 281324357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1651768479
    }
]