[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks anything incomplete with the effort to add shared memories started in #7072:</p>\n<ul>\n<li>[ ] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[ ] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n</blockquote>",
        "id": 394017471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696029503
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[ ] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[ ] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 394017556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696029568
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[ ] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[ ] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.<br>\n```[tasklist]</p>\n<h3>Tasks</h3>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">~~~</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 394017563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696029574
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[ ] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[ ] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 394017581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696029586
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[ ] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[ ] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n<li>[ ] add example showing how many memories can be pool-allocated with the feature on versus off.</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 394018673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696030264
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[ ] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n<li>[ ] add example showing how many memories can be pool-allocated with the feature on versus off.</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 398739500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698343184
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n<li>[ ] add example showing how many memories can be pool-allocated with the feature on versus off.</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 398739503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698343186
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[ ] enable MPK in fuzz targets</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n<li>[ ] add example showing how many memories can be pool-allocated with the feature on versus off.</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 399387783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698706113
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[x] enable MPK in fuzz targets</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n<li>[ ] add example showing how many memories can be pool-allocated with the feature on versus off.</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 399387786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698706114
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[x] enable MPK in fuzz targets</li>\n<li>[x] add example showing how many memories can be pool-allocated with the feature on versus off.</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 405418763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701456065
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[x] enable MPK in fuzz targets</li>\n<li>[x] add example showing how many memories can be pool-allocated with the feature on versus off.</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 405418768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701456067
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[x] enable MPK in fuzz targets</li>\n<li>[x] add example showing how many memories can be pool-allocated with the feature on versus off</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 405418796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701456078
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[x] enable MPK in fuzz targets</li>\n<li>[x] add example showing how many memories can be pool-allocated with the feature on versus off</li>\n<li>[ ] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 406149403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701806356
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7119\">issue #7119</a>:</p>\n<blockquote>\n<p>This issue tracks items remaining from adding MPK support in #7072:</p>\n<ul>\n<li>[x] fix tests when MPK is enabled (e.g., some tests of instance limits change due to striping)</li>\n<li>[x] add WebAssembly-level tests checking that MPK-protected slots cannot access OOB regions</li>\n<li>[x] enable MPK in fuzz targets</li>\n<li>[x] add example showing how many memories can be pool-allocated with the feature on versus off</li>\n<li>[x] fix up the MPK and <code>memory_pool</code> documentation; e.g., remove duplication</li>\n<li>[ ] handle protection key changes across asynchronous <code>block_on</code> changes (see <code>store.rs:1947</code>)</li>\n<li>[ ] figure out a way to run with MPK enabled in CI (QEMU?)</li>\n<li>[ ] benchmark <code>call</code> performance with PKRU switch</li>\n</ul>\n<p>There may be others but these are the ones I could think of that would be needed before configuring the feature on by default.</p>\n</blockquote>",
        "id": 406186590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701823717
    }
]