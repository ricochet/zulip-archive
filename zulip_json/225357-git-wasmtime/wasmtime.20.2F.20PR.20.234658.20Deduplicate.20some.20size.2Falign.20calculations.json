[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4658\">PR #4658</a> from <code>deduplicate-size-align</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is an effort to reduce the amount of complexity around<br>\nmanaging the size/alignment calculations of types in the canonical ABI.<br>\nPreviously the logic for the size/alignment of a type was spread out<br>\nacross a number of locations. While each individual calculation is not<br>\nreally the most complicated thing in the world having the duplication in<br>\nso many places was constantly worrying me.</p>\n<p>I've opted in this commit to centralize all of this within the runtime<br>\nat least, and now there's only one \"duplicate\" of this information in<br>\nthe fuzzing infrastructure which is to some degree less important to<br>\ndeduplicate. This commit introduces a new <code>CanonicalAbiInfo</code> type to<br>\nhouse all abi size/align information for both memory32 and memory64.<br>\nThis new type is then used pervasively throughout fused adapter<br>\ncompilation, dynamic <code>Val</code> management, and typed functions. This type<br>\nwas also able to reduce the complexity of the macro-generated code<br>\nmeaning that even <code>wasmtime-component-macro</code> is performing less math<br>\nthan it was before.</p>\n<p>One other major feature of this commit is that this ABI information is<br>\nnow saved within a <code>ComponentTypes</code> structure. This avoids recursive<br>\nquerying of size/align information frequently and instead effectively<br>\ncaching it. This was a worry I had for the fused adapter compiler which<br>\nfrequently sought out size/align information and would recursively<br>\ndescend each type tree each time. The <code>fact-valid-module</code> fuzzer is now<br>\nnearly 10x faster in terms of iterations/s which I suspect is due to<br>\nthis caching.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 292614598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660063402
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4658\">PR #4658</a> from <code>deduplicate-size-align</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is an effort to reduce the amount of complexity around<br>\nmanaging the size/alignment calculations of types in the canonical ABI.<br>\nPreviously the logic for the size/alignment of a type was spread out<br>\nacross a number of locations. While each individual calculation is not<br>\nreally the most complicated thing in the world having the duplication in<br>\nso many places was constantly worrying me.</p>\n<p>I've opted in this commit to centralize all of this within the runtime<br>\nat least, and now there's only one \"duplicate\" of this information in<br>\nthe fuzzing infrastructure which is to some degree less important to<br>\ndeduplicate. This commit introduces a new <code>CanonicalAbiInfo</code> type to<br>\nhouse all abi size/align information for both memory32 and memory64.<br>\nThis new type is then used pervasively throughout fused adapter<br>\ncompilation, dynamic <code>Val</code> management, and typed functions. This type<br>\nwas also able to reduce the complexity of the macro-generated code<br>\nmeaning that even <code>wasmtime-component-macro</code> is performing less math<br>\nthan it was before.</p>\n<p>One other major feature of this commit is that this ABI information is<br>\nnow saved within a <code>ComponentTypes</code> structure. This avoids recursive<br>\nquerying of size/align information frequently and instead effectively<br>\ncaching it. This was a worry I had for the fused adapter compiler which<br>\nfrequently sought out size/align information and would recursively<br>\ndescend each type tree each time. The <code>fact-valid-module</code> fuzzer is now<br>\nnearly 10x faster in terms of iterations/s which I suspect is due to<br>\nthis caching.</p>\n<p>Closes #4592</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 292614698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660063429
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4658#pullrequestreview-1067286705\">PR review</a>.</p>",
        "id": 292644675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660073958
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4658\">PR #4658</a>.</p>",
        "id": 292646554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660074741
    }
]