[
    {
        "content": "<p><a href=\"https://github.com/Userzxcvbvnm\">Userzxcvbvnm</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8623\">Issue #8623</a>.</p>",
        "id": 438752431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715762160
    },
    {
        "content": "<p>Userzxcvbvnm opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8623\">issue #8623</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c program is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">clock_time_get_00002_obtwo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function clock_time_get_00002_obtwo</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">clock_gettime</span><span class=\"p\">(</span><span class=\"n\">CLOCK_MONOTONIC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">ts</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"clock_gettime error\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current time: %ld seconds, %ld nanoseconds</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function main</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">clock_time_get_00002_obtwo</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compiler it into Wasm binaries by <code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">clock_time_get_00002_obtwo</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">time</span>: <span class=\"mi\">2177580</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span>\n</code></pre></div>\n<p>And this is what other Wasm runtimes print, including wasmer, wamr and wasmedge.</p>\n<h3>Actual Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">clock_time_get_00002_obtwo</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">time</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: amd64</p>\n</blockquote>",
        "id": 438752433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715762161
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8623\">issue #8623</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>The c program is as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span>\n\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">clock_time_get_00002_obtwo</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function clock_time_get_00002_obtwo</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">clock_gettime</span><span class=\"p\">(</span><span class=\"n\">CLOCK_MONOTONIC</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">ts</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"clock_gettime error\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current time: %ld seconds, %ld nanoseconds</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Enter function main</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"n\">clock_time_get_00002_obtwo</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>(1)compiler it into Wasm binaries by <code>./wasi-sdk-21.0/bin/clang --target=wasm32-unkown-wasi --sysroot=./wasi-sdk-21.0/share/wasi-sysroot test.c -o test.wasm</code></p>\n<h3>Expected Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">clock_time_get_00002_obtwo</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">time</span>: <span class=\"mi\">2177580</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span>\n</code></pre></div>\n<p>And this is what other Wasm runtimes print, including wasmer, wamr and wasmedge.</p>\n<h3>Actual Results</h3>\n<p>Print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">clock_time_get_00002_obtwo</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">time</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.2</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture: amd64</p>\n</blockquote>",
        "id": 438825909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715785656
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8623#issuecomment-2112812531\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8623\">issue #8623</a>:</p>\n<blockquote>\n<p>Using wasi-sdk it generates a warning:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">14</span>:<span class=\"mi\">60</span>: <span class=\"nc\">warning</span>: <span class=\"nc\">format</span><span class=\"w\"> </span><span class=\"n\">specifies</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">'</span><span class=\"na\">long</span><span class=\"o\">'</span> <span class=\"nc\">but</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">'</span><span class=\"na\">time_t</span><span class=\"o\">'</span> <span class=\"p\">(</span><span class=\"n\">aka</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">long</span><span class=\"w\"> </span><span class=\"n\">long</span><span class=\"o\">'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">Wformat</span><span class=\"p\">]</span>\n<span class=\"w\">   </span><span class=\"mi\">14</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"Current time: %ld seconds, %ld nanoseconds</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ts</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">                           </span><span class=\"o\">~~~</span><span class=\"w\">                              </span><span class=\"o\">^~~~~~~~~</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">                           </span><span class=\"o\">%</span><span class=\"n\">lld</span>\n</code></pre></div>\n<p>which when fixed causes the program to print:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"n\">Enter</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">clock_time_get_00002_obtwo</span>\n<span class=\"n\">Current</span><span class=\"w\"> </span><span class=\"n\">time</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">seconds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">571458</span><span class=\"w\"> </span><span class=\"n\">nanoseconds</span>\n</code></pre></div>\n<p>which is the expected behavior of Wasmtime. The monotonic clock is relative to an arbitrary point and Wasmtime chooses instance creation as the relative point.</p>\n</blockquote>",
        "id": 438825912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715785656
    }
]