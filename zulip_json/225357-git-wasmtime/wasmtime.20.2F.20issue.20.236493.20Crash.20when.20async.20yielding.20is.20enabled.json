[
    {
        "content": "<p>vigoo opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>I created a small repo that reproduces the issue. Tried to make it as minimal as possible but as I'm not sure what exactly the reason is, I stayed with a realistic example that is similar to how we use wasmtime. </p>\n<p>The repo is here: <a href=\"https://github.com/vigoo/wasmtime-crash-repro\">https://github.com/vigoo/wasmtime-crash-repro</a></p>\n<p><code>component</code> contains a project to be compiled with <code>cargo component build</code> - it's basically just a sleep<br>\n<code>host</code> initializes <code>wasmtime</code> and contains a fake wasi implementation using async bindings which only does an async sleep in the <code>poll_oneoff</code> implementation. Then it spawns 100 instances and runs them in parallel.</p>\n<p>If either epoch based async yielding, or fuel based async yielding is enabled, I get a random crash from <code>traphandlers.rs</code>:</p>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo component build</code> in the <code>component</code> directory<br>\n<code>cargo run</code> in the <code>host</code> directory</p>\n<h3>Expected Results</h3>\n<p>All the 100 instances run, sleep for 2 seconds and finish. <br>\nBy commenting out the epoch related lines in <code>main.rs</code> it finishes successfully.</p>\n<h3>Actual Results</h3>\n<p>Panic in <code>traphandlers.rs</code></p>\n<h3>Versions and Environment</h3>\n<p>Tried it with both the stable release and an (almost) latest master and it happens in both.<br>\nOperating system: OSX Ventura<br>\nArchitecture: arm64</p>\n<h3>Extra Info</h3>\n</blockquote>",
        "id": 362697828,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685614383
    },
    {
        "content": "<p>vigoo labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>I created a small repo that reproduces the issue. Tried to make it as minimal as possible but as I'm not sure what exactly the reason is, I stayed with a realistic example that is similar to how we use wasmtime. </p>\n<p>The repo is here: <a href=\"https://github.com/vigoo/wasmtime-crash-repro\">https://github.com/vigoo/wasmtime-crash-repro</a></p>\n<p><code>component</code> contains a project to be compiled with <code>cargo component build</code> - it's basically just a sleep<br>\n<code>host</code> initializes <code>wasmtime</code> and contains a fake wasi implementation using async bindings which only does an async sleep in the <code>poll_oneoff</code> implementation. Then it spawns 100 instances and runs them in parallel.</p>\n<p>If either epoch based async yielding, or fuel based async yielding is enabled, I get a random crash from <code>traphandlers.rs</code>:</p>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo component build</code> in the <code>component</code> directory<br>\n<code>cargo run</code> in the <code>host</code> directory</p>\n<h3>Expected Results</h3>\n<p>All the 100 instances run, sleep for 2 seconds and finish. <br>\nBy commenting out the epoch related lines in <code>main.rs</code> it finishes successfully.</p>\n<h3>Actual Results</h3>\n<p>Panic in <code>traphandlers.rs</code></p>\n<h3>Versions and Environment</h3>\n<p>Tried it with both the stable release and an (almost) latest master and it happens in both.<br>\nOperating system: OSX Ventura<br>\nArchitecture: arm64</p>\n<h3>Extra Info</h3>\n</blockquote>",
        "id": 362697831,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685614384
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>I created a small repo that reproduces the issue. Tried to make it as minimal as possible but as I'm not sure what exactly the reason is, I stayed with a realistic example that is similar to how we use wasmtime. </p>\n<p>The repo is here: <a href=\"https://github.com/vigoo/wasmtime-crash-repro\">https://github.com/vigoo/wasmtime-crash-repro</a></p>\n<p><code>component</code> contains a project to be compiled with <code>cargo component build</code> - it's basically just a sleep<br>\n<code>host</code> initializes <code>wasmtime</code> and contains a fake wasi implementation using async bindings which only does an async sleep in the <code>poll_oneoff</code> implementation. Then it spawns 100 instances and runs them in parallel.</p>\n<p>If either epoch based async yielding, or fuel based async yielding is enabled, I get a random crash from <code>traphandlers.rs</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"w\">   </span><span class=\"mi\">4</span>:        <span class=\"mh\">0x105e81b04</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">fmttokio</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"n\">worker</span>::<span class=\"o\">'</span> <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">writeassertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">std</span>::<span class=\"n\">ptr</span>::<span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span>::<span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">h34766cf8fff7af1e</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">vigoo</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"mf\">9.0.3</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo component build</code> in the <code>component</code> directory<br>\n<code>cargo run</code> in the <code>host</code> directory</p>\n<h3>Expected Results</h3>\n<p>All the 100 instances run, sleep for 2 seconds and finish. <br>\nBy commenting out the epoch related lines in <code>main.rs</code> it finishes successfully.</p>\n<h3>Actual Results</h3>\n<p>Panic in <code>traphandlers.rs</code></p>\n<h3>Versions and Environment</h3>\n<p>Tried it with both the stable release and an (almost) latest master and it happens in both.<br>\nOperating system: OSX Ventura<br>\nArchitecture: arm64</p>\n<h3>Extra Info</h3>\n</blockquote>",
        "id": 362795009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685633268
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493#issuecomment-1572602277\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<p>Thanks for the report! I'm digging into this and trying to figure out what's going on. It's proving elusive so it may take me a moment to figure out the best fix for this.</p>\n</blockquote>",
        "id": 362851012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685645329
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>I created a small repo that reproduces the issue. Tried to make it as minimal as possible but as I'm not sure what exactly the reason is, I stayed with a realistic example that is similar to how we use wasmtime. </p>\n<p>The repo is here: <a href=\"https://github.com/vigoo/wasmtime-crash-repro\">https://github.com/vigoo/wasmtime-crash-repro</a></p>\n<p><code>component</code> contains a project to be compiled with <code>cargo component build</code> - it's basically just a sleep<br>\n<code>host</code> initializes <code>wasmtime</code> and contains a fake wasi implementation using async bindings which only does an async sleep in the <code>poll_oneoff</code> implementation. Then it spawns 100 instances and runs them in parallel.</p>\n<p>If either epoch based async yielding, or fuel based async yielding is enabled, I get a random crash from <code>traphandlers.rs</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"w\">   </span><span class=\"mi\">4</span>:        <span class=\"mh\">0x105e81b04</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">fmttokio</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"n\">worker</span>::<span class=\"o\">'</span> <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">writeassertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">std</span>::<span class=\"n\">ptr</span>::<span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span>::<span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">h34766cf8fff7af1e</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">vigoo</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"mf\">9.0.3</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo component build</code> in the <code>component</code> directory<br>\n<code>cargo run</code> in the <code>host</code> directory</p>\n<h3>Expected Results</h3>\n<p>All the 100 instances run, sleep for 2 seconds and finish. <br>\nBy commenting out the epoch related lines in <code>main.rs</code> it finishes successfully.</p>\n<h3>Actual Results</h3>\n<p>Panic in <code>traphandlers.rs</code></p>\n<h3>Versions and Environment</h3>\n<p>Tried it with both the stable release and an (almost) latest master and it happens in both.<br>\nOperating system: OSX Ventura<br>\nArchitecture: arm64</p>\n<h3>Extra Info</h3>\n</blockquote>",
        "id": 362851045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685645341
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493#issuecomment-1572869036\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<p>Ok I've isolated this to a failing unit test. I wrote a fix for that and was about to make a PR until I realized that the fix wasn't complete. I've written a second test to trigger that failure and I'll work more tomorrow on a complete fix for this.</p>\n</blockquote>",
        "id": 362892897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685658109
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493#issuecomment-1572869705\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<p>I'll also note that as a heads up this is a memory unsoundness issue. We won't be issuing a CVE due to our policy right now as the component model support is \"tier 3\" which doesn't get CVEs allocated. If that impacts your usage though you may wish to be aware.</p>\n</blockquote>",
        "id": 362893010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685658150
    },
    {
        "content": "<p>vigoo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493#issuecomment-1573193977\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<p>Thanks for the updates!</p>\n</blockquote>",
        "id": 362936697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685685356
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493#issuecomment-1573975343\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<p>Ok I believe that <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6509\">https://github.com/bytecodealliance/wasmtime/pull/6509</a> should address this issue for now</p>\n</blockquote>",
        "id": 363098468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685722036
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6493\">issue #6493</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>I created a small repo that reproduces the issue. Tried to make it as minimal as possible but as I'm not sure what exactly the reason is, I stayed with a realistic example that is similar to how we use wasmtime. </p>\n<p>The repo is here: <a href=\"https://github.com/vigoo/wasmtime-crash-repro\">https://github.com/vigoo/wasmtime-crash-repro</a></p>\n<p><code>component</code> contains a project to be compiled with <code>cargo component build</code> - it's basically just a sleep<br>\n<code>host</code> initializes <code>wasmtime</code> and contains a fake wasi implementation using async bindings which only does an async sleep in the <code>poll_oneoff</code> implementation. Then it spawns 100 instances and runs them in parallel.</p>\n<p>If either epoch based async yielding, or fuel based async yielding is enabled, I get a random crash from <code>traphandlers.rs</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"w\">   </span><span class=\"mi\">4</span>:        <span class=\"mh\">0x105e81b04</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">core</span>::<span class=\"n\">fmttokio</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"n\">worker</span>::<span class=\"o\">'</span> <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">writeassertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">std</span>::<span class=\"n\">ptr</span>::<span class=\"n\">eq</span><span class=\"p\">(</span><span class=\"n\">head</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">)</span>::<span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">h34766cf8fff7af1e</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">vigoo</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"o\">-</span><span class=\"mf\">9.0.3</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"p\">.</span><span class=\"n\">rs</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>cargo component build</code> in the <code>component</code> directory<br>\n<code>cargo run</code> in the <code>host</code> directory</p>\n<h3>Expected Results</h3>\n<p>All the 100 instances run, sleep for 2 seconds and finish. <br>\nBy commenting out the epoch related lines in <code>main.rs</code> it finishes successfully.</p>\n<h3>Actual Results</h3>\n<p>Panic in <code>traphandlers.rs</code></p>\n<h3>Versions and Environment</h3>\n<p>Tried it with both the stable release and an (almost) latest master and it happens in both.<br>\nOperating system: OSX Ventura<br>\nArchitecture: arm64</p>\n<h3>Extra Info</h3>\n</blockquote>",
        "id": 363170129,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685741719
    }
]