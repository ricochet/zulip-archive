[
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1156191095\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>ci did not pass because I used  is_riscv_feature_detected which is in std library.</p>\n</blockquote>",
        "id": 286183018,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655283370
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1156435762\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Hi @yuyang-ok -- thanks for this! I will take a detailed look next week when I'm back in the office. At a high level, my initial feedback is that new backends need to use ISLE for all instruction lowerings; we're working on migrating the others, and we don't want to create more work for ourselves by adopting a half-migrated backend. So, the <code>lower_inst.rs</code> file should be essentially empty (right now it has a bunch of handwritten lowerings). But now that you have a working backend, hopefully doing this is a bit easier than starting from scratch!</p>\n</blockquote>",
        "id": 286207351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655297653
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1156980167\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>ok I will improve this.</p>\n</blockquote>",
        "id": 286278703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655329720
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1157070019\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin I didnot using isle to write a very much logic , I think isle is very good at match.turns out <a href=\"http://lower_inst.rs\">lower_inst.rs</a> and <a href=\"http://isle.rs\">isle.rs</a> is quit large now!</p>\n</blockquote>",
        "id": 286288080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655335521
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1161267459\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin are you reviewing this?</p>\n</blockquote>",
        "id": 286865687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655787459
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1161945800\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>hi @yuyang-ok -- no, not yet; I just got back this morning. I would expect this to take some time, especially for a 21k-line PR.</p>\n<p>At a high level, though, three questions:</p>\n<ul>\n<li>\n<p>My question about ISLE is I think still unanswered: are you planning to update this PR to use only ISLE lowering patterns, and not handwritten code? That is our standard for all new backend code and we cannot merge a new backend that uses the legacy approach.</p>\n</li>\n<li>\n<p>Grepping for \"todo\" in this code, I still see a bunch of comments -- picking one example, \"//todo what is this??\" We unfortunately can't merge things like that (they are fine for draft PRs but not for production code): please make a pass through the PR and resolve all TODOs or uncertainties.</p>\n</li>\n</ul>\n<p>I think it would also be good to talk about ongoing expectations once a new backend is merged. I mentioned this in some earlier feedback as well, but: we want to make sure that every backend has some person or people who specialize in the architecture actively involved in the project. This is part of why I'm asking about your future plans: this PR is the start, but shouldn't be the only step. To this end, would you be willing to attend the Cranelift biweekly meeting at some point so we can talk about your new backend and plans?</p>\n<p>Thanks for all your hard work on this so far!</p>\n</blockquote>",
        "id": 286935126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655826833
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1161945800\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>hi @yuyang-ok -- no, not yet; I just got back this morning. I would expect this to take some time, especially for a 21k-line PR.</p>\n<p>At a high level, though, three questions:</p>\n<ul>\n<li>\n<p>My question about ISLE is I think still unanswered: are you planning to update this PR to use only ISLE lowering patterns, and not handwritten code? That is our standard for all new backend code and we cannot merge a new backend that uses the legacy approach.</p>\n</li>\n<li>\n<p>Grepping for \"todo\" in this code, I still see a bunch of comments -- picking one example, \"//todo what is this??\" We unfortunately can't merge things like that (they are fine for draft PRs but not for production code): please make a pass through the PR and resolve all TODOs or uncertainties.</p>\n</li>\n</ul>\n<p>I think it would also be good to talk about ongoing expectations once a new backend is merged. I mentioned this in some earlier feedback as well, but: we want to make sure that every backend has some person or people who specialize in the architecture actively involved in the project. This is part of why I'm asking about your future plans: this PR is the start, but shouldn't be the only step. To this end, would you be willing to attend the Cranelift biweekly meeting at some point so we can talk about your new backend and plans?</p>\n<p>Thanks for all your hard work on this so far!</p>\n</blockquote>",
        "id": 286935197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655826849
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1162457009\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin I think it is fine to use ISLE to lowering inst instead of handwritten code, I think maybe the way I am using ISLE is not very good right now,I should  doing this part of work after the review.</p>\n<p>yes,software is never an one time job,software will evolve from time to time,I think at least I can maintain riscv64 backend, I am happy  attend the Cranelift biweekly meeting at some point.</p>\n</blockquote>",
        "id": 286986525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1655853911
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1168224742\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin I think need provides an extractor.</p>\n</blockquote>\n<p>(decl value_inst(Inst)Value)<br>\n(extern extractor value_inst value_inst)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">look</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">need</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"s\">\"trapff\"</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">lowering</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">So</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"w\"> </span><span class=\"n\">get</span><span class=\"w\"> </span><span class=\"n\">compare</span><span class=\"w\"> </span><span class=\"n\">parameters</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 287671108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656392541
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1172811022\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin still waiting for you review. :)</p>\n</blockquote>",
        "id": 288240925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656726556
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1172811022\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin still waiting for your review. :)</p>\n</blockquote>",
        "id": 288248017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656736085
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1172833290\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@yuyang-ok unfortunately, I still have not gotten to it, sorry.</p>\n<p>It looks like you still have code in legacy handwritten lowerings, though you're slowly moving it over to ISLE -- that's good, please keep doing that. I think it makes the most sense to review this PR once that is done.</p>\n<p>LIkewise, I still see large blocks of commented-out code. As a random example, I see</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"c1\">// println!(\"xxxx : {}\", buffer.disasm.unwrap());</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">buffer</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">// write_to_a_file(\"/home/yuyang/tmp/code.bin\", code);</span>\n<span class=\"w\">        </span><span class=\"c1\">//0:   000015b7                lui     a1,0x1</span>\n<span class=\"w\">        </span><span class=\"c1\">//4:   23458593                addi    a1,a1,564 # 0x1234</span>\n<span class=\"w\">        </span><span class=\"c1\">//8:   00b5053b                addw    a0,a0,a1</span>\n<span class=\"w\">        </span><span class=\"c1\">//c:   00008067</span>\n</code></pre></div>\n<p>Please carefully go over your code and remove anything you would not want merged into the main branch.</p>\n<p>Regarding your continued pings: unfortunately, reviewing a 21,000-line PR is not a small task. It will probably take me a few days to a week to read through all of your code in detail. I have an enormous amount of work on my plate, with varying levels of priority. I also spent all last week with COVID and am still working through some backlog from that time away. So, I haven't gotten to this yet, and pinging me will not make the TODO list go faster.</p>\n<p>While we very much appreciate the contribution -- having a RISC-V backend will be very valuable for Cranelift -- this process will require patience as well. Thanks!</p>\n</blockquote>",
        "id": 288248562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656736867
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1172840607\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  ok ,thanks,take care of yourself.</p>\n</blockquote>",
        "id": 288251149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656740931
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1175688282\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin ok.</p>\n</blockquote>",
        "id": 288613144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657072366
    },
    {
        "content": "<p>dunxen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1175745370\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Hi @yuyang-ok, it's great that you've started the work on this, and thanks @cfallin for the mention. I do indeed have an interest in seeing this through.</p>\n<p>I'll be able to give a thorough pass of this later today and throughout the rest of the week.</p>\n</blockquote>",
        "id": 288619875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657079111
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1178433297\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>abi document I found it at <a href=\"https://github.com/riscv-non-isa/riscv-elf-psabi-doc\">https://github.com/riscv-non-isa/riscv-elf-psabi-doc</a></p>\n</blockquote>",
        "id": 288886462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657243486
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1186618999\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>some part of wasmtime cannot compiler on target riscv64.<br>\n@cfallin @afonso360 @bjorn3 @bjorn3  </p>\n<p>![image](<a href=\"https://user-images.githubusercontent.com/96557710/179427225-c1b908b3-6fdf-4213-a647-7595e35c0683.png\">https://user-images.githubusercontent.com/96557710/179427225-c1b908b3-6fdf-4213-a647-7595e35c0683.png</a>)</p>\n</blockquote>",
        "id": 289907858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658096900
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1186734601\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@yuyang-ok a port of <code>wasmtime</code>'s CPU-dependent bits -- the fiber library, and the trap handler details, at least -- would probably not be too much work beyond a pure Cranelift-only port, and is needed in any case for the port to be useful: otherwise, all we can do is exercise it with filetests. Enabling wasmtime on the platform allows us to run the Wasm test suite as well. So, yes, you've run into that missing support; would you be willing to build it? Or if not, perhaps another contributor could help?</p>\n</blockquote>",
        "id": 289919876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658116305
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1186825596\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin I like to give it a try.</p>\n</blockquote>",
        "id": 289928208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658126656
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1193582384\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>can Someone help to port <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber</a> to riscv64,<br>\nI am not very understand of this lib.<br>\nthanks.</p>\n</blockquote>",
        "id": 290719839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658725496
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1193582384\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>can Someone help to port <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber</a> to riscv64,<br>\nI am not very understand of this lib.<br>\nthanks.</p>\n</blockquote>",
        "id": 290720449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658726408
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1193746025\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>can Someone help to port <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber</a> to riscv64,<br>\nI am not very understand of this lib.<br>\nthanks.</p>\n</blockquote>\n<p>I would suggest leaving that for a future PR. We can merge the backend independently and then start working on a port for wasmtime later. That would also make it a lot easier to review, since this is already a lot of code to review.</p>\n</blockquote>",
        "id": 290731722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658737792
    },
    {
        "content": "<p>afonso360 deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1193746025\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>can Someone help to port <a href=\"https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber\">https://github.com/bytecodealliance/wasmtime/tree/main/crates/fiber</a> to riscv64,<br>\nI am not very understand of this lib.<br>\nthanks.</p>\n</blockquote>\n<p>I would suggest leaving that for a future PR. We can merge the backend independently and then start working on a port for wasmtime later. That would also make it a lot easier to review, since this is already a lot of code to review.</p>\n</blockquote>",
        "id": 290731825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658737856
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207350646\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>![image](<a href=\"https://user-images.githubusercontent.com/96557710/183280640-7d38e007-b998-4645-96cd-96d532e6c631.png\">https://user-images.githubusercontent.com/96557710/183280640-7d38e007-b998-4645-96cd-96d532e6c631.png</a>)<br>\n@cfallin is this project rely on v8,there are still some part not compile.</p>\n</blockquote>",
        "id": 292305447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659858173
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207360445\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>If v8 doesn't support riscv, it should be fine to disable the fuzzers that check wasmtime against v8.</p>\n</blockquote>",
        "id": 292308070,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659862148
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207360445\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>If v8 doesn't support riscv, it should be fine to disable the fuzzers that check wasmtime against v8 I think.</p>\n</blockquote>",
        "id": 292308073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659862158
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207530465\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin @bjorn3 @afonso360 @afonso360  I think  it's the time to review.I think I fix most of the problems.</p>\n</blockquote>",
        "id": 292350912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659920019
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207558745\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin @bjorn3 @afonso360 @afonso360 I think it's the time to review.I think I fix most of the problems.</p>\n</blockquote>\n<p>@yuyang-ok I scanned through the diff at places where I had left comments before, and it looks like almost none of my comments have been addressed. Some of them are fairly small things, like formatting and typo fixes; others are more substantial, like \"no commented-out code, please\" or a general indication that some code needs to be cleaned up. Could you please address all of these comments, and then let us know when that is done?</p>\n<p>Also, above (in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1175745370\">this comment</a> I see @dunxen expressed interest in making a clean-up pass over this PR. @dunxen, are you still willing to do this? If so, it seems that either after @yuyang-ok makes a pass or beforehand (coordinating with them as necessary) might be a good time for this. Thanks (and no worries if no longer able)!</p>\n<p>I'm happy to see the qemu CI job added (does this mean Wasmtime fully works now?); I look forward to seeing this merged eventually, once it is cleaned up a bit!</p>\n</blockquote>",
        "id": 292352902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659923018
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207558745\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin @bjorn3 @afonso360 @afonso360 I think it's the time to review.I think I fix most of the problems.</p>\n</blockquote>\n<p>@yuyang-ok I scanned through the diff at places where I had left comments before, and it looks like almost none of my comments have been addressed. Some of them are fairly small things, like formatting and typo fixes; others are more substantial, like \"no commented-out code, please\" or a general indication that some code needs to be cleaned up. Could you please address all of these comments, and then let us know when that is done?</p>\n<p>Also, above (in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1175745370\">this comment</a>) I see @dunxen expressed interest in making a clean-up pass over this PR. @dunxen, are you still willing to do this? If so, it seems that either after @yuyang-ok makes a pass or beforehand (coordinating with them as necessary) might be a good time for this. Thanks (and no worries if no longer able)!</p>\n<p>I'm happy to see the qemu CI job added (does this mean Wasmtime fully works now?); I look forward to seeing this merged eventually, once it is cleaned up a bit!</p>\n</blockquote>",
        "id": 292352915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659923042
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207572395\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin ok , I will do a full check.</p>\n</blockquote>",
        "id": 292353953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659924560
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207576634\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>wasmtime is not fully workd,because rusty_v8 cannot be compiler on riscv64.</p>\n</blockquote>",
        "id": 292354238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659924952
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207602367\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>wasmtime is not fully workd,because rusty_v8 cannot be compiler on riscv64.</p>\n</blockquote>\n<p>That's fine, as @bjorn3 mentions above V8 is only needed for one fuzzing target. You can disable it on riscv64.</p>\n</blockquote>",
        "id": 292356347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659928172
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207732948\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>why I cannot find all conversations.<br>\n![image](<a href=\"https://user-images.githubusercontent.com/96557710/183356169-cb4f7e19-4918-4ee8-8296-a6193ee082dd.png\">https://user-images.githubusercontent.com/96557710/183356169-cb4f7e19-4918-4ee8-8296-a6193ee082dd.png</a>)<br>\nsome comment not show. why?</p>\n</blockquote>",
        "id": 292365913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659941228
    },
    {
        "content": "<p>yuyang-ok deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207732948\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>why I cannot find all conversations.<br>\n![image](<a href=\"https://user-images.githubusercontent.com/96557710/183356169-cb4f7e19-4918-4ee8-8296-a6193ee082dd.png\">https://user-images.githubusercontent.com/96557710/183356169-cb4f7e19-4918-4ee8-8296-a6193ee082dd.png</a>)<br>\nsome comment not show. why?</p>\n</blockquote>",
        "id": 292367716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659942914
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1207864298\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Running <code>cargo test --target riscv64gc-unknown-linux-gnu</code> from the root of the repository it looks like we are also missing some other stuff for wasmtime, such as trampolines and trap handling.</p>\n<p>&lt;details&gt;<br>\n  &lt;summary&gt;Output:&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">architecture</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">trampolines</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">55</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">55</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported architecture\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">architecture</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">backtrace</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">46</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported architecture\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">unix</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">232</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">232</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported platform\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasm_to_libcall_trampoline</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">libcalls</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">100</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"n\">wasm_to_libcall_trampoline</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"cp\">$name</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">impl_</span><span class=\"w\"> </span><span class=\"cp\">$name</span><span class=\"o\">&gt;</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"mi\">130</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">wasmtime_environ</span>::<span class=\"n\">foreach_builtin_function</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">libcall</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">----------------------------------------------------</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"n\">invocation</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">originates</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">libcall</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Nightly</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"o\">-</span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">backtrace</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">227</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">227</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"n\">arch</span>::<span class=\"n\">assert_entry_sp_is_aligned</span><span class=\"p\">(</span><span class=\"n\">first_wasm_sp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">backtrace</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">230</span>:<span class=\"mi\">13</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">230</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">arch</span>::<span class=\"n\">assert_fp_is_aligned</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">backtrace</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">242</span>:<span class=\"mi\">16</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">242</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">arch</span>::<span class=\"n\">reached_entry_sp</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">first_wasm_sp</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">backtrace</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">252</span>:<span class=\"mi\">18</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">252</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">pc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">arch</span>::<span class=\"n\">get_next_older_pc_from_fp</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                  </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">backtrace</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">258</span>:<span class=\"mi\">24</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">258</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">arch</span>::<span class=\"n\">NEXT_OLDER_FP_FROM_FP_OFFSET</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                        </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0433</span><span class=\"p\">]</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">resolve</span>: <span class=\"nc\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">backtrace</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">260</span>:<span class=\"mi\">57</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">260</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">next_older_fp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"p\">).</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">arch</span>::<span class=\"n\">NEXT_OLDER_FP_FROM_FP_OFFSET</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                                         </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">undeclared</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">arch</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0308</span><span class=\"p\">]</span>: <span class=\"nc\">mismatched</span><span class=\"w\"> </span><span class=\"n\">types</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">traphandlers</span><span class=\"o\">/</span><span class=\"n\">unix</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">167</span>:<span class=\"mi\">73</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">167</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">get_pc_and_fp</span><span class=\"p\">(</span><span class=\"n\">cx</span>: <span class=\"o\">*</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">libc</span>::<span class=\"n\">c_void</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_signum</span>: <span class=\"nc\">libc</span>::<span class=\"n\">c_int</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">-------------</span><span class=\"w\">                                                 </span><span class=\"o\">^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">tuple</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">           </span><span class=\"n\">implicitly</span><span class=\"w\"> </span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">its</span><span class=\"w\"> </span><span class=\"n\">body</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">return</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">expression</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>:  <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">tuple</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">usize</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">unit</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"err\">`</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"nb\">Some</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">detailed</span><span class=\"w\"> </span><span class=\"n\">explanations</span>: <span class=\"nc\">E0308</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">E0433</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">For</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">information</span><span class=\"w\"> </span><span class=\"n\">about</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">rustc</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">explain</span><span class=\"w\"> </span><span class=\"n\">E0308</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">could</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">runtime</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">due</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mi\">11</span><span class=\"w\"> </span><span class=\"n\">previous</span><span class=\"w\"> </span><span class=\"n\">errors</span><span class=\"w\"></span>\n<span class=\"n\">warning</span>: <span class=\"nc\">build</span><span class=\"w\"> </span><span class=\"n\">failed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">waiting</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">other</span><span class=\"w\"> </span><span class=\"n\">jobs</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">finish</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 292377135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659949717
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1210019175\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@afonso360  I will give a try to fix these.</p>\n</blockquote>",
        "id": 292678665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660091206
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1211476428\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>a little update.<br>\ncranelift can pass test on riscv64.<br>\n@cfallin I think I resolved most of modify that you request.</p>\n<p>wasmtime test <code>test_successful_compile</code> not pass.<br>\n![image](<a href=\"https://user-images.githubusercontent.com/96557710/184052244-eae0482c-489c-46b0-bd8b-111077f87cfb.png\">https://user-images.githubusercontent.com/96557710/184052244-eae0482c-489c-46b0-bd8b-111077f87cfb.png</a>)<br>\nsince I am not familiar with wasmtime's code . maybe still need some time to fix.</p>\n</blockquote>",
        "id": 292857399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660183064
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1214627491\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>hey @cfallin @bjorn3  maybe need a little help here.<br>\n<a href=\"#narrow/stream/206238-general/topic/as.20help.20about.20utf8_to_latin1.2E/near/293465163\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/as.20help.20about.20utf8_to_latin1.2E/near/293465163</a></p>\n</blockquote>",
        "id": 293465385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660540633
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1214627491\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>hey @cfallin @bjorn3  maybe need a little help here.<br>\n<a href=\"#narrow/stream/206238-general/topic/as.20help.20about.20utf8_to_latin1.2E/near/293465163\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/as.20help.20about.20utf8_to_latin1.2E/near/293465163</a></p>\n<p>thanks. :-)</p>\n</blockquote>",
        "id": 293465452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660540686
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1214681433\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p><a href=\"#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E</a><br>\nshould load return  address from stack if frame is set up?</p>\n</blockquote>",
        "id": 293472987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660546548
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1214815683\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p><a href=\"#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E</a><br>\nshould load return address from stack if frame is set up?</p>\n</blockquote>\n<p>I think so.</p>\n</blockquote>",
        "id": 293489886,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660555770
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1216070467\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><a href=\"#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E</a><br>\nshould load return address from stack if frame is set up?</p>\n</blockquote>\n<p>I think so.</p>\n</blockquote>\n<p>but I think I can't get if_frame_is_set_up at isle lowering stage. maybe I am not find the current function????</p>\n</blockquote>",
        "id": 293648680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660616661
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1216070818\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>I think <code>iadd_ifcout</code> can't be lowering.<br>\n<a href=\"#narrow/stream/206238-general/topic/ask.20help.20for.20iadd_ifcout.2E/near/293648283\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/ask.20help.20for.20iadd_ifcout.2E/near/293648283</a></p>\n</blockquote>",
        "id": 293648724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660616696
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1216070818\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>I think <code>iadd_ifcout</code> can't be lowered.<br>\n<a href=\"#narrow/stream/206238-general/topic/ask.20help.20for.20iadd_ifcout.2E/near/293648283\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/ask.20help.20for.20iadd_ifcout.2E/near/293648283</a></p>\n</blockquote>",
        "id": 293650404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660618901
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1216070467\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p><a href=\"#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/cranelift.20opcode.20get_return_address.2E</a><br>\nshould load return address from stack if frame is set up?</p>\n</blockquote>\n<p>I think so.</p>\n</blockquote>\n<p>but I think I can't get if_frame_is_set_up at isle lowering stage. maybe I am not find the correct function????</p>\n</blockquote>",
        "id": 293651001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660619734
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1217554488\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>Yes, But My local qemu-riscv64 emulator doesn't implement it, I can't test it. right now I have two implemetion,<br>\nOne rely on B extension , One don't.</p>\n</blockquote>\n<p>It's nice that we have both lowerings. Usually it's fine to select extensions in the runtest suite that the host does not implement. What we do is, at runtime check if the host has those features and skip them if they don't, so we could for example do something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">riscv64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">riscv64</span><span class=\"w\"> </span><span class=\"n\">has_b</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Which would test both versions of the instruction. However it looks like we are missing <code>cranelift-native</code> support, and we can't implement that because <a href=\"https://doc.rust-lang.org/std/arch/macro.is_riscv_feature_detected.html\"><code>is_riscv_feature_detected!</code></a> is unstable.</p>\n<p>I'm not sure if there is a way around this, but it would be nice to test those instructions.</p>\n</blockquote>",
        "id": 293846641,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660720645
    },
    {
        "content": "<p>yuyang-ok deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1216070818\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>I think <code>iadd_ifcout</code> can't be lowered.<br>\n<a href=\"#narrow/stream/206238-general/topic/ask.20help.20for.20iadd_ifcout.2E/near/293648283\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/ask.20help.20for.20iadd_ifcout.2E/near/293648283</a></p>\n</blockquote>",
        "id": 294009149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660793988
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1219075382\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>a little update. finally there is not <code>segfault</code>. :-)<br>\nbut still some test will fail.</p>\n<p>![image](<a href=\"https://user-images.githubusercontent.com/96557710/185306362-99679286-d830-471a-a716-b53895599e5a.png\">https://user-images.githubusercontent.com/96557710/185306362-99679286-d830-471a-a716-b53895599e5a.png</a>)</p>\n</blockquote>",
        "id": 294017846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660802893
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1219075382\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>a little update. finally there is no <code>segfault</code>. :-)<br>\nbut still some test will fail.</p>\n<p>![image](<a href=\"https://user-images.githubusercontent.com/96557710/185306362-99679286-d830-471a-a716-b53895599e5a.png\">https://user-images.githubusercontent.com/96557710/185306362-99679286-d830-471a-a716-b53895599e5a.png</a>)</p>\n</blockquote>",
        "id": 294017876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660802914
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1219075382\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>a little update. finally there is no <code>segfault</code>. :-)<br>\nbut still some test will fail.</p>\n<p>![image](<a href=\"https://user-images.githubusercontent.com/96557710/185306362-99679286-d830-471a-a716-b53895599e5a.png\">https://user-images.githubusercontent.com/96557710/185306362-99679286-d830-471a-a716-b53895599e5a.png</a>)</p>\n<p>there are some feature not implemented , like <code>simd</code>,atomic only implmented on <code>i32</code> and <code>i64</code> because on hardware supported.</p>\n</blockquote>",
        "id": 294018020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660803022
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1221482378\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/regalloc2/issues/72\">https://github.com/bytecodealliance/regalloc2/issues/72</a></p>\n</blockquote>",
        "id": 294514012,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661065231
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1227931928\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p><a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1173\">https://gitlab.com/qemu-project/qemu/-/issues/1173</a></p>\n<p><a href=\"https://github.com/WebAssembly/testsuite/blob/e25ae159357c055b3a6fac99043644e208d26d2a/float_exprs.wast#L2335\">https://github.com/WebAssembly/testsuite/blob/e25ae159357c055b3a6fac99043644e208d26d2a/float_exprs.wast#L2335</a></p>\n<p>I am little confused by the <code>nan-boxed</code>.</p>\n</blockquote>",
        "id": 295340971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661478695
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1227931928\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p><a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1173\">https://gitlab.com/qemu-project/qemu/-/issues/1173</a></p>\n<p><a href=\"https://github.com/WebAssembly/testsuite/blob/e25ae159357c055b3a6fac99043644e208d26d2a/float_exprs.wast#L2335\">https://github.com/WebAssembly/testsuite/blob/e25ae159357c055b3a6fac99043644e208d26d2a/float_exprs.wast#L2335</a></p>\n<p>I am little confused by the <code>nan-boxed</code>.</p>\n</blockquote>",
        "id": 295341165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661478883
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1228060907\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p><a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1178\">https://gitlab.com/qemu-project/qemu/-/issues/1178</a></p>\n</blockquote>",
        "id": 295355169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661490713
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1228145707\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Left a comment on <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1173\">https://gitlab.com/qemu-project/qemu/-/issues/1173</a>. It was incorrectly closed based on my reading of the riscv spec.</p>\n</blockquote>",
        "id": 295367424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661498520
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1228145707\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Left a comment on <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1173\">https://gitlab.com/qemu-project/qemu/-/issues/1173</a>. Based on my reading of the riscv spec it was incorrectly closed.</p>\n</blockquote>",
        "id": 295367547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661498549
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1228148928\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>By the way which test is <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1178\">https://gitlab.com/qemu-project/qemu/-/issues/1178</a> for?</p>\n</blockquote>",
        "id": 295367835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661498744
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1228668709\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>So this isn't a qemu bug after all. <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1173#note_1079580087\">https://gitlab.com/qemu-project/qemu/-/issues/1173#note_1079580087</a>:</p>\n<blockquote>\n<p>Ah, I see what you mean now. I am pretty sure this is the result of a bitcast from i32 -&gt; f32 using FMV.D.X as move instead of FMV.W.X as required for 32bit floats. This is because f64 is passed as type at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271/files#diff-6ce7e9721c05ddbf92ec1a5e11518e9833cd3f6c12d30f3131c4baf4d8ca2127R171-R172\">https://github.com/bytecodealliance/wasmtime/pull/4271/files#diff-6ce7e9721c05ddbf92ec1a5e11518e9833cd3f6c12d30f3131c4baf4d8ca2127R171-R172</a></p>\n</blockquote>\n</blockquote>",
        "id": 295457860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661529486
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1229562725\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>By the way which test is <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1178\">https://gitlab.com/qemu-project/qemu/-/issues/1178</a> for?<br>\nrelated to <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1178\">https://gitlab.com/qemu-project/qemu/-/issues/1178</a> </p>\n</blockquote>\n</blockquote>",
        "id": 295760583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661724088
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1229562725\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>By the way which test is <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1178\">https://gitlab.com/qemu-project/qemu/-/issues/1178</a> for?</p>\n</blockquote>\n<p>related to <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1178\">https://gitlab.com/qemu-project/qemu/-/issues/1178</a> </p>\n</blockquote>",
        "id": 295761700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661725338
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1229914739\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>a little update.</p>\n</blockquote>\n<p>test wast::Cranelift::spec::skip_stack_guard_page ... ok</p>\n<p>failures:</p>\n<p>failures:<br>\n    memory::offsets_static_dynamic_oh_my<br>\n    pooling_allocator::table_limit<br>\n    wast::Cranelift::misc::memory64::simd<br>\n    wast::Cranelift::misc::simd::almost_extmul<br>\n    wast::Cranelift::misc::simd::canonicalize_nan<br>\n    wast::Cranelift::misc::simd::cvt_from_uint<br>\n    wast::Cranelift::misc::simd::issue_3173_select_v128<br>\n    wast::Cranelift::misc::simd::issue_3327_bnot_lowering<br>\n    wast::Cranelift::misc::simd::replace_lane_preserve<br>\n    wast::Cranelift::misc::simd::spillslot_size_fuzzbug<br>\n    wast::Cranelift::misc::simd::unaligned_load<br>\n    wast::Cranelift::misc::simd::v128_select</p>\n<p>test result: FAILED. 626 passed; 12 failed; 10 ignored; 0 measured; 0 filtered out; finished in 616.44s</p>\n<p>error: test failed, to rerun pass '--test all'</p>",
        "id": 295797420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661759759
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1230803037\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Getting very close, @yuyang-ok -- that's very exciting!</p>\n</blockquote>",
        "id": 295989023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661803468
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1231046128\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p><a href=\"#narrow/stream/206238-general/topic/target-riscv64.20.20decommit_table_pages.2E\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/target-riscv64.20.20decommit_table_pages.2E</a></p>\n</blockquote>",
        "id": 296024134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661823970
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1232314793\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin @bjorn3 @afonso360  right now only simd test failed.</p>\n</blockquote>\n<p>failures:<br>\n    memory::offsets_static_dynamic_oh_my<br>\n    wast::Cranelift::misc::memory64::simd<br>\n    wast::Cranelift::misc::simd::almost_extmul<br>\n    wast::Cranelift::misc::simd::canonicalize_nan<br>\n    wast::Cranelift::misc::simd::cvt_from_uint<br>\n    wast::Cranelift::misc::simd::issue_3173_select_v128<br>\n    wast::Cranelift::misc::simd::issue_3327_bnot_lowering<br>\n    wast::Cranelift::misc::simd::replace_lane_preserve<br>\n    wast::Cranelift::misc::simd::spillslot_size_fuzzbug<br>\n    wast::Cranelift::misc::simd::unaligned_load<br>\n    wast::Cranelift::misc::simd::v128_select</p>\n<p>test result: FAILED. 627 passed; 11 failed; 10 ignored; 0 measured; 0 filtered out; finished in 793.71s</p>",
        "id": 296241053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661906263
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1232482809\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin maybe another review?</p>\n</blockquote>",
        "id": 296258514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661924021
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1233195131\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@yuyang-ok I'll give it another review sometime in the next week -- thank you very much for your patience and hard work here!</p>\n<p>I will say overall that given that the backend passes tests for Wasm-MVP now, it's very likely we will be able to merge it; it's probably just a matter of some cleanup. We have precedent for disabling SIMD tests on platforms until SIMD is complete, so that should be fine.</p>\n</blockquote>",
        "id": 296408572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661965388
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1233489031\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin ok,thanks.</p>\n</blockquote>",
        "id": 296460735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661985230
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1245894255\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@yuyang-ok I spent some time today going through this PR again. It's looking quite good overall; thank you again for the work!</p>\n<p>I pushed a few fixups and a merge of the latest <code>main</code> to your branch. With this, I'm now happy with all the Rust code in <code>cranelift/codegen/src/isa/riscv64</code>, and I'll take a look soon at the remainder.</p>\n<p>My main feedback now -- and I promise we're really close -- is:</p>\n<ul>\n<li>\n<p>The ISLE code has some strange formatting in places. I think I made some comments earlier about this, but it would be great if you could make a pass through it all and normalize it. Things like: spaces before opening parentheses (so <code>(decl term (A) B)</code>, not <code>(decl term(A) B)</code>), removing extraneous spaces otherwise (no <code>((a b  )  )</code>), and putting closing parentheses on the same line. </p>\n<p>Maybe there is an autoformatter out there somewhere that can help; I haven't looked closely. Anyone else have ideas?</p>\n</li>\n<li>\n<p>There are a few extractors like <code>iadd_ifcout_parameters</code> that serve to unwrap an instruction, just like <code>(iadd_ifcout ...)</code> would; it's unclear why they exist. Could you remove these or add comments noting why they are needed otherwise?</p>\n</li>\n<li>\n<p>If there are any other tests that don't pass, we need a completely clean CI run to merge. I went ahead and disabled SIMD tests in my changes I just pushed; it's fine to merge a backend initially without this, as long as there is a plan to add it eventually.</p>\n</li>\n<li>\n<p>I stubbed out the \"is feature compatible\" code in Wasmtime's AOT object loader but we probably want something better there.</p>\n</li>\n<li>\n<p>We should ensure that we fail cleanly on modules with SIMD, just like s390x did before it gained SIMD support.</p>\n</li>\n</ul>\n<p>And I think that's it! Let me know if anything above is unclear; happy to help further.</p>\n</blockquote>",
        "id": 298658392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663099232
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246085637\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin That is true the ISLE formatting is strange.<br>\nI have aleardy remove extraneous spaces.<br>\nThe reason I didn't pay much attention to ISLE formatting is that I am not very get used to the ISLE grammar.<br>\nI think maybe leave some space let me clearly to see where parenthesis starts and ends.</p>\n<p>I write like this deliberately.</p>\n</blockquote>\n<p>(decl gen_float_round(FloatRoundOP Reg Type) Reg)<br>\n(rule<br>\n  (gen_float_round op rs ty)<br>\n  (let<br>\n    (<br>\n      (rd WritableReg (temp_writable_reg ty))<br>\n      (tmp WritableReg (temp_writable_reg $I64))<br>\n      (tmp2 WritableReg (temp_writable_reg $F64))<br>\n      (_ Unit (emit (MInst.FloatRound op rd tmp tmp2 rs ty)))<br>\n    )<br>\n    (writable_reg_to_reg rd)<br>\n  )<br>\n)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">makes</span><span class=\"w\"> </span><span class=\"n\">me</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">structure</span><span class=\"w\"> </span><span class=\"n\">clearly</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">temporary</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"err\">`</span><span class=\"n\">iadd_ifcout_parameters</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\">  </span><span class=\"n\">riscv</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">iflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">need</span><span class=\"w\"> </span><span class=\"n\">extrac</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">inputs</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">generate</span><span class=\"w\"> </span><span class=\"n\">overflow</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 298686210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663115340
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246085637\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin That is true the ISLE formatting is strange.<br>\nI have aleardy remove extraneous spaces.<br>\nThe reason I didn't pay much attention to ISLE formatting is that I am not very get used to the ISLE grammar.<br>\nI think maybe leave some space let me clearly to see where parenthesis starts and ends.</p>\n<p>I write like this deliberately.</p>\n</blockquote>\n<p>(decl gen_float_round(FloatRoundOP Reg Type) Reg)<br>\n(rule<br>\n  (gen_float_round op rs ty)<br>\n  (let<br>\n    (<br>\n      (rd WritableReg (temp_writable_reg ty))<br>\n      (tmp WritableReg (temp_writable_reg $I64))<br>\n      (tmp2 WritableReg (temp_writable_reg $F64))<br>\n      (_ Unit (emit (MInst.FloatRound op rd tmp tmp2 rs ty)))<br>\n    )<br>\n    (writable_reg_to_reg rd)<br>\n  )<br>\n)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">makes</span><span class=\"w\"> </span><span class=\"n\">me</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">structure</span><span class=\"w\"> </span><span class=\"n\">clearly</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">add</span><span class=\"w\"> </span><span class=\"n\">temporary</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"err\">`</span><span class=\"n\">iadd_ifcout_parameters</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">because</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\">  </span><span class=\"n\">riscv</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"n\">iflags</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">need</span><span class=\"w\"> </span><span class=\"n\">extrac</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">inputs</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">generate</span><span class=\"w\"> </span><span class=\"n\">overflow</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n\n\n<span class=\"p\">[</span><span class=\"n\">inst</span><span class=\"p\">.</span><span class=\"n\">txt</span><span class=\"p\">](</span><span class=\"n\">https</span>:<span class=\"c1\">//github.com/bytecodealliance/wasmtime/files/9561637/inst.txt)</span>\n\n<span class=\"o\">@</span><span class=\"n\">cfallin</span><span class=\"w\">  </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">codestyle</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">ok</span><span class=\"o\">??</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 298686922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663115945
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246118823\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think maybe leave some space let me clearly to see where parenthesis starts and ends.</p>\n<p>I write like this deliberately.</p>\n</blockquote>\n<p>@yuyang-ok I'd prefer that we standardize on formatting. I agree that it can take a bit of work to get used to reading ISLE, as with any other language; but that's not a reason to do things differently in one part of the codebase vs somewhere else, IMHO. I also see some extra spaces in cases like <a href=\"https://github.com/yuyang-ok/wasmtime/blob/dc8b7ee8a5824536790d0f0a906398d4c17beafd/cranelift/codegen/src/isa/riscv64/lower.isle#L94\">this</a> at the end of the line: <code>... (smulhi x y ))</code> (the space after <code>y</code>). It's not a huge deal, but I also don't want to loosen standards here without a good reason. Thanks!</p>\n<blockquote>\n<p><code>iadd_ifcout_parameters</code> is because of riscv has no iflags, I need extrac the inputs to generate overflow.</p>\n</blockquote>\n<p>The implementation <a href=\"https://github.com/yuyang-ok/wasmtime/blob/dc8b7ee8a5824536790d0f0a906398d4c17beafd/cranelift/codegen/src/isa/riscv64/lower/isle.rs#L362-L374\">here</a> looks like it is equivalent to using <code>(iadd_ifcout x y)</code> to get the args, and then getting the type of <code>x</code>; so instead of writing <code>(iadd_ifcout_parameters a b ty)</code> <a href=\"https://github.com/yuyang-ok/wasmtime/blob/dc8b7ee8a5824536790d0f0a906398d4c17beafd/cranelift/codegen/src/isa/riscv64/lower.isle#L930\">here</a>, you could write <code>(iadd_ifcout a @ (value_type ty) b)</code> instead. Then we can get rid of the custom extractors. Does that make sense?</p>\n</blockquote>",
        "id": 298690073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663119003
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246134554\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  seens work to me. look like <code>ifcmp_parameters</code> and <code>ffcmp_parameters</code> have this problem too.</p>\n</blockquote>",
        "id": 298691757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663120808
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246180694\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin I already remove <code>(smulhi x y )) </code> in <code>y </code>.</p>\n</blockquote>",
        "id": 298696477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663125549
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246226033\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  look like <code>offsets_static_dynamic_oh_my</code> need simd too.</p>\n</blockquote>\n<p>test wast::Cranelift::spec::skip_stack_guard_page ... ok</p>\n<p>failures:</p>\n<p>failures:<br>\n    memory::offsets_static_dynamic_oh_my</p>\n<p>test result: FAILED. 626 passed; 1 failed; 32 ignored; 0 measured; 0 filtered out; finished in 752.18s</p>\n<p>error: test failed, to rerun pass '--test all'<br>\n[1]+  已完成               nohup ~/software/firefox/firefox-bin  (工作目录: ~)<br>\n(当前工作目录：~/projects/wasmtime/tests)</p>",
        "id": 298701809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663130639
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246237137\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin look like <code>offsets_static_dynamic_oh_my</code> need simd too.</p>\n<p>```<br>\ntest wast::Cranelift::spec::skip_stack_guard_page ... ok</p>\n<p>failures:</p>\n<p>failures:<br>\n    memory::offsets_static_dynamic_oh_my</p>\n<p>test result: FAILED. 626 passed; 1 failed; 32 ignored; 0 measured; 0 filtered out; finished in 752.18s</p>\n<p>error: test failed, to rerun pass '--test all'<br>\n[1]+  已完成               nohup ~/software/firefox/firefox-bin  (工作目录: ~)<br>\n(当前工作目录：~/projects/wasmtime/tests)<br>\n```</p>\n</blockquote>\n<p>It shouldn't, anymore: I excluded <code>v128</code> loads from the test with the cfg directive in <code>tests/all/memory.rs</code> in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271/commits/5cf133b8da570779951ff1004128f319dc218f7a\">this commit</a>. Have you pulled the changes that I pushed?</p>\n</blockquote>",
        "id": 298703049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663131778
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246240049\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  I pulled your commit, only this test failed.</p>\n</blockquote>",
        "id": 298703340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663132075
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246246090\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Ah! OK, I do remember this failure, sorry; it gets past an earlier issue and now is hitting a <code>trapif</code> that is not lowered for some reason. It's not SIMD-related, I don't think. Here's what I see (cross-compiling from Ubuntu/aarch64 and running under emulation with qemu-risc64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">memory</span>::<span class=\"n\">offsets_static_dynamic_oh_my</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n</code></pre></div>\n<p>You'll probably need to look at what CLIF is being generated and make sure that the pattern is properly matched?</p>\n</blockquote>",
        "id": 298703974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663132680
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246246090\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>Ah! OK, I do remember this failure, sorry; it gets past an earlier issue and now is hitting a <code>trapif</code> that is not lowered for some reason. It's not SIMD-related, I don't think. Here's what I see (cross-compiling from Ubuntu/aarch64 and running under emulation with qemu-riscv64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">memory</span>::<span class=\"n\">offsets_static_dynamic_oh_my</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">internal</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">entered</span><span class=\"w\"> </span><span class=\"n\">unreachable</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"nc\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">trapif</span><span class=\"w\"> </span><span class=\"n\">uge</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">heap_oob</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">None</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">riscv64</span><span class=\"o\">/</span><span class=\"n\">lower_inst</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">37</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n</code></pre></div>\n<p>You'll probably need to look at what CLIF is being generated and make sure that the pattern is properly matched?</p>\n</blockquote>",
        "id": 298704029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663132704
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246289158\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  ok, thanks. solved.</p>\n</blockquote>",
        "id": 298708229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663135935
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246329683\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>it this another qemu wrong implementation??</p>\n</blockquote>\n<p>RUST_BACKTRACE=1  cargo test   --target    riscv64gc-unknown-linux-gnu --test host_segfault <br>\n    Finished test [unoptimized + debuginfo] target(s) in 0.83s<br>\n     Running tests/host_segfault.rs (/home/yuyang/projects/wasmtime/target/riscv64gc-unknown-linux-gnu/debug/deps/host_segfault-0362e2365a90b3f7)<br>\nthread 'main' panicked at '</p>\n<p>expected a stack overflow on <code>hit async stack guard page with pooling allocator</code><br>\ngot status: signal: 9 (SIGKILL)</p>\n<p>', tests/host_segfault.rs:213:13<br>\nstack backtrace:<br>\n   0: rust_begin_unwind<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/panicking.rs:584:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/panicking.rs:142:14<br>\n   2: host_segfault::run_test<br>\n             at ./tests/host_segfault.rs:213:13<br>\n   3: host_segfault::main<br>\n             at ./tests/host_segfault.rs:177:17<br>\n   4: core::ops::function::FnOnce::call_once<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/ops/function.rs:248:5<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.<br>\nerror: test failed, to rerun pass '--test host_segfault'</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">SIGKILL</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">host_segfault</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 298713238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663138719
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246329683\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>it this another qemu wrong implementation??</p>\n</blockquote>\n<p>RUST_BACKTRACE=1  cargo test   --target    riscv64gc-unknown-linux-gnu --test host_segfault <br>\n    Finished test [unoptimized + debuginfo] target(s) in 0.83s<br>\n     Running tests/host_segfault.rs (/home/yuyang/projects/wasmtime/target/riscv64gc-unknown-linux-gnu/debug/deps/host_segfault-0362e2365a90b3f7)<br>\nthread 'main' panicked at '</p>\n<p>expected a stack overflow on <code>hit async stack guard page with pooling allocator</code><br>\ngot status: signal: 9 (SIGKILL)</p>\n<p>', tests/host_segfault.rs:213:13<br>\nstack backtrace:<br>\n   0: rust_begin_unwind<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/std/src/panicking.rs:584:5<br>\n   1: core::panicking::panic_fmt<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/panicking.rs:142:14<br>\n   2: host_segfault::run_test<br>\n             at ./tests/host_segfault.rs:213:13<br>\n   3: host_segfault::main<br>\n             at ./tests/host_segfault.rs:177:17<br>\n   4: core::ops::function::FnOnce::call_once<br>\n             at /rustc/4b91a6ea7258a947e59c6522cd5898e7c0a6a88f/library/core/src/ops/function.rs:248:5<br>\nnote: Some details are omitted, run with <code>RUST_BACKTRACE=full</code> for a verbose backtrace.<br>\nerror: test failed, to rerun pass '--test host_segfault'</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">SIGKILL</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">host_segfault</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"n\">look</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">related</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"p\">,</span><span class=\"n\">very</span><span class=\"w\"> </span><span class=\"n\">likely</span><span class=\"w\"> </span><span class=\"n\">related</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">riscv64</span><span class=\"err\">`</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 298715110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663139714
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246329683\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">https://github.com/bytecodealliance/wasmtime/issues/4912</a></p>\n</blockquote>",
        "id": 298884363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663200818
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1246329683\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  I think all test in <code>wasmtime/tests</code> passed except this one.<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">https://github.com/bytecodealliance/wasmtime/issues/4912</a></p>\n<p>I think there still have some codestyle problem in ISLE.</p>\n</blockquote>",
        "id": 298918196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663227952
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1247968808\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin is this project rely on v8,there are still some part not compile.</p>\n</blockquote>\n<p>I took a look at why CI's not working. It looks like rusty_v8 does not produce precompiled binaries for riscv. I disabled it for riscv and <a href=\"https://github.com/afonso360/wasmtime/actions/runs/3059838341/jobs/4937680796\">CI now runs tests, but its failing somewhere</a>. I've also added a build CI job for riscv.</p>\n<p>See these two commits:</p>\n<ul>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/636d0c3409845d04ddce01b375b548462ce8eb5d\">https://github.com/afonso360/wasmtime/commit/636d0c3409845d04ddce01b375b548462ce8eb5d</a></li>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/1f2b5210b17736270a151f02fdd8e8d06ea739d4\">https://github.com/afonso360/wasmtime/commit/1f2b5210b17736270a151f02fdd8e8d06ea739d4</a></li>\n</ul>\n</blockquote>",
        "id": 298948426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663241057
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1247968808\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin is this project rely on v8,there are still some part not compile.</p>\n</blockquote>\n<p>I took a look at why CI's not working. It looks like rusty_v8 does not produce precompiled binaries for riscv. I disabled v8 for riscv and <a href=\"https://github.com/afonso360/wasmtime/actions/runs/3059838341/jobs/4937680796\">CI now runs tests, but its failing somewhere</a>. I've also added a build CI job for riscv.</p>\n<p>See these two commits:</p>\n<ul>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/636d0c3409845d04ddce01b375b548462ce8eb5d\">https://github.com/afonso360/wasmtime/commit/636d0c3409845d04ddce01b375b548462ce8eb5d</a></li>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/1f2b5210b17736270a151f02fdd8e8d06ea739d4\">https://github.com/afonso360/wasmtime/commit/1f2b5210b17736270a151f02fdd8e8d06ea739d4</a></li>\n</ul>\n</blockquote>",
        "id": 298948471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663241078
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1247968808\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin is this project rely on v8,there are still some part not compile.</p>\n</blockquote>\n<p>I took a look at why CI's not working. It looks like rusty_v8 does not produce precompiled binaries for riscv. I disabled v8 for riscv and <a href=\"https://github.com/afonso360/wasmtime/actions/runs/3059838341/jobs/4937680796\">CI now runs tests, but its failing somewhere</a>. I've also added a CI build job for riscv.</p>\n<p>See these two commits:</p>\n<ul>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/636d0c3409845d04ddce01b375b548462ce8eb5d\">https://github.com/afonso360/wasmtime/commit/636d0c3409845d04ddce01b375b548462ce8eb5d</a></li>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/1f2b5210b17736270a151f02fdd8e8d06ea739d4\">https://github.com/afonso360/wasmtime/commit/1f2b5210b17736270a151f02fdd8e8d06ea739d4</a></li>\n</ul>\n</blockquote>",
        "id": 298948493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663241090
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1247968808\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin is this project rely on v8,there are still some part not compile.</p>\n</blockquote>\n<p>I took a look at why CI's not working. It looks like rusty_v8 does not produce precompiled binaries for riscv. I disabled v8 for riscv and <a href=\"https://github.com/afonso360/wasmtime/actions/runs/3060053021/jobs/4938125637\">CI now runs tests, but its failing somewhere</a>. I've also added a CI build job for riscv.</p>\n<p>See these two commits:</p>\n<ul>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/e3f5de35b9cfe4bb6717fa8ea0ec1ae574e18b77\">https://github.com/afonso360/wasmtime/commit/e3f5de35b9cfe4bb6717fa8ea0ec1ae574e18b77</a></li>\n<li><a href=\"https://github.com/afonso360/wasmtime/commit/d3ef08b912d1a60750b816d1403e12d7bd6e1ecc\">https://github.com/afonso360/wasmtime/commit/d3ef08b912d1a60750b816d1403e12d7bd6e1ecc</a></li>\n</ul>\n</blockquote>",
        "id": 298951301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663242268
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1248792415\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@afonso360 ok, thanks a lot.</p>\n</blockquote>",
        "id": 299073139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663289041
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1248821380\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin I want disable <code>host_segfault</code> a little while  due to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4912\">https://github.com/bytecodealliance/wasmtime/issues/4912</a>.</p>\n</blockquote>",
        "id": 299076802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663292882
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1248821380\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin I want disable <code>host_segfault</code> a little while  due to <br>\n<a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1214\">https://gitlab.com/qemu-project/qemu/-/issues/1214</a></p>\n</blockquote>",
        "id": 299092281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663305076
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1248989674\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin </p>\n</blockquote>\n<p>diff --git a/tests/host_segfault.rs b/tests/host_segfault.rs<br>\nindex 7a761678b..616430289 100644<br>\n--- a/tests/host_segfault.rs<br>\n+++ b/tests/host_segfault.rs<br>\n@@ -144,6 +144,10 @@ fn main() {<br>\n             },<br>\n             true,<br>\n         ),</p>\n<ul>\n<li>#[cfg(not(any(target_arch = \"riscv64\")))]</li>\n<li>// Due to <code>InstanceAllocationStrategy::pooling()</code> trying to alloc more 6000G memory.</li>\n<li>// <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1214\">https://gitlab.com/qemu-project/qemu/-/issues/1214</a></li>\n<li>// <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/290\">https://gitlab.com/qemu-project/qemu/-/issues/290</a><br>\n         (<br>\n             \"hit async stack guard page with pooling allocator\",<br>\n             || {</li>\n</ul>",
        "id": 299101780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663311377
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1248989674\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin </p>\n</blockquote>\n<p>diff --git a/tests/host_segfault.rs b/tests/host_segfault.rs<br>\nindex 7a761678b..6adac707e 100644<br>\n--- a/tests/host_segfault.rs<br>\n+++ b/tests/host_segfault.rs<br>\n@@ -144,6 +144,10 @@ fn main() {<br>\n             },<br>\n             true,<br>\n         ),</p>\n<ul>\n<li>#[cfg(not(any(target_arch = \"riscv64\")))]</li>\n<li>// Due to <code>InstanceAllocationStrategy::pooling()</code> trying to alloc more than 6000G memory space.</li>\n<li>// <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/1214\">https://gitlab.com/qemu-project/qemu/-/issues/1214</a></li>\n<li>// <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/290\">https://gitlab.com/qemu-project/qemu/-/issues/290</a><br>\n         (<br>\n             \"hit async stack guard page with pooling allocator\",<br>\n             || {</li>\n</ul>",
        "id": 299109746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663315253
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1252862677\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@yuyang-ok did you hit this error while using the patched qemu as our CI builds? (Start with qemu 6.1.0, then apply <code>ci/madvise.patch</code>) If yes, and still an error, then we can disable the test temporarily. But I'd prefer not to if our patched qemu runs it properly.</p>\n<p>Otherwise, please go ahead and apply any other fixes (from Afonso above and any others needed) to get to green CI, make sure the other items in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1245894255\">the list here</a> are covered, and then ping me when ready -- thanks!</p>\n</blockquote>",
        "id": 299840712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663704812
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1253058107\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  I still hit this error using the patched qemu.  I think we are ready.<br>\n</p>\n</blockquote>",
        "id": 299868669,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663720987
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1255628644\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin I still hit this error using the patched qemu. I think we are ready.</p>\n</blockquote>\n<p>Well, no, if tests don't pass then we aren't ready. We need to somehow either find and fix the issue or disable tests.</p>\n<p>Going back to my checklist from my previous comment:</p>\n<blockquote>\n<ul>\n<li>\n<p>The ISLE code has some strange formatting in places. I think I made some comments earlier about this, but it would be great if you could make a pass through it all and normalize it. Things like: spaces before opening parentheses (so (decl term (A) B), not (decl term(A) B)), removing extraneous spaces otherwise (no ((a b ) )), and putting closing parentheses on the same line.</p>\n<p>Maybe there is an autoformatter out there somewhere that can help; I haven't looked closely. Anyone else have ideas?</p>\n</li>\n<li>\n<p>There are a few extractors like iadd_ifcout_parameters that serve to unwrap an instruction, just like (iadd_ifcout ...) would; it's unclear why they exist. Could you remove these or add comments noting why they are needed otherwise?</p>\n</li>\n<li>\n<p>If there are any other tests that don't pass, we need a completely clean CI run to merge. I went ahead and disabled SIMD tests in my changes I just pushed; it's fine to merge a backend initially without this, as long as there is a plan to add it eventually.</p>\n</li>\n<li>\n<p>I stubbed out the \"is feature compatible\" code in Wasmtime's AOT object loader but we probably want something better there.</p>\n</li>\n<li>\n<p>We should ensure that we fail cleanly on modules with SIMD, just like s390x did before it gained SIMD support.</p>\n</li>\n</ul>\n</blockquote>\n<p>I see that <code>iadd_ifcout_parameters</code> is now removed, so that's good, but can you confirm that you have addressed the other points, with comments or links to code you've added for each one?</p>\n<p>I also see some unresolved comments from long ago for simple things like typos in comments. Can you make sure there are no open code-review comments, and they are all addressed?</p>\n<p>Once all of these things are done, then we can proceed!<br>\n</p>\n</blockquote>",
        "id": 300259509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663886345
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1255653241\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin </p>\n</blockquote>\n<p>(decl gen_div_by_zero(Reg)InstOutput)<br>\n(rule<br>\n  (gen_div_by_zero r)<br>\n  (gen_trapifc (IntCC.Equal) (zero_reg) r (TrapCode.IntegerDivisionByZero))<br>\n)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">codestyle</span><span class=\"w\"> </span><span class=\"n\">remove</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">extra</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">ok</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">must</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">???</span><span class=\"w\"></span>\n</code></pre></div>\n<p>(decl gen_div_by_zero(Reg)InstOutput)<br>\n(rule<br>\n  (gen_div_by_zero r)<br>\n  (gen_trapifc (IntCC.Equal) (zero_reg) r (TrapCode.IntegerDivisionByZero)))</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 300264632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663889005
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1255653241\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin </p>\n</blockquote>\n<p>(decl gen_div_by_zero(Reg)InstOutput)<br>\n(rule<br>\n  (gen_div_by_zero r)<br>\n  (gen_trapifc (IntCC.Equal) (zero_reg) r (TrapCode.IntegerDivisionByZero))<br>\n)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">codestyle</span><span class=\"w\"> </span><span class=\"n\">remove</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">extra</span><span class=\"w\"> </span><span class=\"n\">space</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">ok</span><span class=\"o\">????</span><span class=\"w\"></span>\n<span class=\"n\">must</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"o\">???</span><span class=\"w\"></span>\n</code></pre></div>\n<p>(decl gen_div_by_zero(Reg)InstOutput)<br>\n(rule<br>\n  (gen_div_by_zero r)<br>\n  (gen_trapifc (IntCC.Equal) (zero_reg) r (TrapCode.IntegerDivisionByZero)))</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 300264829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663889130
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1255665187\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>I stubbed out the \"is feature compatible\" code in Wasmtime's AOT object loader but we probably want something better there.<br>\nYes, this is because <code>is_riscv64_feature_detected</code> not stable,I perfer not use it.</p>\n</blockquote>\n</blockquote>",
        "id": 300267220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663890471
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257104978\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  I think we  are ready.</p>\n</blockquote>",
        "id": 300601454,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664073264
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257104978\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  I think we  are ready.</p>\n</blockquote>",
        "id": 300601459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664073275
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257104978\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin  I think we  are ready.<br>\nmaybe some part not appropriate like <a href=\"https://github.com/yuyang-ok/wasmtime/blob/risc-v/crates/wasmtime/src/engine.rs#L493\">https://github.com/yuyang-ok/wasmtime/blob/risc-v/crates/wasmtime/src/engine.rs#L493</a> .<br>\nmaybe you can help me a little??</p>\n</blockquote>",
        "id": 300601671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664073532
    },
    {
        "content": "<p>a1phyr <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257644578\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>I think you could do the same that for s390x, i.e. calling <code>getauxval</code> by yourself.</p>\n<p>You can find a RISC-V example in <code>std_detect</code> (the implementation of <code>is_riscv64_feature_detected!</code>) <a href=\"https://github.com/rust-lang/stdarch/blob/master/crates/std_detect/src/detect/os/linux/riscv.rs\">here</a>.</p>\n</blockquote>",
        "id": 300735976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664179125
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257846627\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think you could do the same that for s390x, i.e. calling <code>getauxval</code> by yourself.</p>\n<p>You can find a RISC-V example in <code>std_detect</code> (the implementation of <code>is_riscv64_feature_detected!</code>) <a href=\"https://github.com/rust-lang/stdarch/blob/master/crates/std_detect/src/detect/os/linux/riscv.rs\">here</a>.<br>\nstill look a little hard to use to me. look like need use <code>C</code>???</p>\n</blockquote>\n</blockquote>",
        "id": 300761635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664189408
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257846627\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think you could do the same that for s390x, i.e. calling <code>getauxval</code> by yourself.</p>\n<p>You can find a RISC-V example in <code>std_detect</code> (the implementation of <code>is_riscv64_feature_detected!</code>) [here]</p>\n</blockquote>\n<p>(<a href=\"https://github.com/rust-lang/stdarch/blob/master/crates/std_detect/src/detect/os/linux/riscv.rs\">https://github.com/rust-lang/stdarch/blob/master/crates/std_detect/src/detect/os/linux/riscv.rs</a>).<br>\nstill look a little hard to use to me. look like need use <code>C</code>???</p>\n</blockquote>",
        "id": 300761671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664189426
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257846627\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think you could do the same that for s390x, i.e. calling <code>getauxval</code> by yourself.<br>\nstill look a little hard to use to me. look like need use <code>C</code>???</p>\n</blockquote>\n</blockquote>",
        "id": 300761695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664189439
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257846627\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think you could do the same that for s390x, i.e. calling <code>getauxval</code> by yourself.</p>\n</blockquote>\n<p>still look a little hard to use to me. look like need use <code>C</code>???</p>\n</blockquote>",
        "id": 300761713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664189446
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1257867658\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin what do you think appropriate to solve <code>is_riscv64_feature_detected</code>???</p>\n</blockquote>",
        "id": 300764857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664190611
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1260101701\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin what do you think appropriate to solve is_riscv64_feature_detected???</p>\n</blockquote>\n<p>If we want to wait for stabilization of the feature-detection macro in the standard library, I don't see anything wrong with assuming a baseline RISC-V ISA level for now (in other words, running with <em>no</em> features ever detected). Does this seem reasonable or would it result in important optimizations going missing?</p>\n</blockquote>",
        "id": 301125416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664316311
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1260158789\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>Does this seem reasonable or would it result in important optimizations going missing?</p>\n</blockquote>\n<p><code>popcnt</code>,<code>ctz</code>,<code>rev8</code>,<code>brev8</code> will fallback to loop implementation, seen reasonable to me, I think there instructions are used rare to me.<br>\n</p>\n</blockquote>",
        "id": 301131937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664319598
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1260158789\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>Does this seem reasonable or would it result in important optimizations going missing?</p>\n</blockquote>\n<p><code>popcnt</code>,<code>ctz</code>,<code>rev8</code>,<code>brev8</code> will fallback to loop implementation, seen reasonable to me, I think these instructions are used rare to me.<br>\n</p>\n</blockquote>",
        "id": 301134926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664321584
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1260240470\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>@cfallin ok,thanks. :-)</p>\n</blockquote>",
        "id": 301140282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664325257
    },
    {
        "content": "<p>JhonnyRice <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1272338543\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin ok,thanks. :-)</p>\n</blockquote>\n<p>Congratulations!</p>\n</blockquote>",
        "id": 303030695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665241462
    },
    {
        "content": "<p>martasp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1312474318\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>How can I use this feature, is there documentation? <br>\nHow can I set a target risc5 and produce Linux  risc5 elf binary? <br>\nI would want to use it like that: </p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">exampleProgram</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">risc5</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 309335944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668258159
    },
    {
        "content": "<p>archanox <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1312512410\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>This work is for RISC-V not risc5.<br>\nYou'll likely need to use <code>riscv64gc</code> as per the changes in this PR.</p>\n</blockquote>",
        "id": 309357307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668268107
    },
    {
        "content": "<p>martasp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1312523592\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>I see that we have binaries riscv64gc here: <a href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/v2.0.2\">https://github.com/bytecodealliance/wasmtime/releases/tag/v2.0.2</a> therefore It should probably work on riscv64 Linux. So I tried to install wasmtime in <code>riscv64 </code>Linux but without success.<br>\nProbably there is a difference between <code>riscv64 </code>and <code>riscv64gc </code> but I'm kinda new to these things, where can I learn it, any good resources?</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">root</span><span class=\"o\">@</span><span class=\"n\">localhost</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"p\">]</span>#<span class=\"w\"> </span><span class=\"n\">curl</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//wasmtime.dev/install.sh -sSf | bash</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">Sorry</span><span class=\"o\">!</span><span class=\"w\"> </span><span class=\"n\">Wasmtime</span><span class=\"w\"> </span><span class=\"n\">currently</span><span class=\"w\"> </span><span class=\"n\">only</span><span class=\"w\"> </span><span class=\"n\">provides</span><span class=\"w\"> </span><span class=\"n\">pre</span><span class=\"o\">-</span><span class=\"n\">built</span><span class=\"w\"> </span><span class=\"n\">binaries</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Linux</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">macOS</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Windows</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">aa</span><span class=\"w\"></span>\n<span class=\"n\">rch64</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Linux</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">macOS</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Linux</span><span class=\"p\">).</span><span class=\"w\"></span>\n\n<span class=\"p\">[</span><span class=\"n\">root</span><span class=\"o\">@</span><span class=\"n\">localhost</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"p\">]</span>#<span class=\"w\"> </span><span class=\"n\">uname</span><span class=\"w\"></span>\n<span class=\"n\">Linux</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">root</span><span class=\"o\">@</span><span class=\"n\">localhost</span><span class=\"w\"> </span><span class=\"o\">~</span><span class=\"p\">]</span>#<span class=\"w\"> </span><span class=\"n\">uname</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"></span>\n<span class=\"n\">riscv64</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 309362901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668271246
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271#issuecomment-1312525019\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4271\">issue #4271</a>:</p>\n<blockquote>\n<p>The script at <a href=\"https://wasmtime.dev/install.sh\">https://wasmtime.dev/install.sh</a> hasn't been updated yet for riscv64 support. You should probably directly download the binary from <a href=\"https://github.com/bytecodealliance/wasmtime/releases/tag/v2.0.2\">https://github.com/bytecodealliance/wasmtime/releases/tag/v2.0.2</a>.</p>\n</blockquote>",
        "id": 309363644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668271692
    }
]