[
    {
        "content": "<p>PROMETHIA-27 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6646\">issue #6646</a>:</p>\n<blockquote>\n<h3>Minimal example</h3>\n<p><a href=\"https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5\">https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Run this example (with dependencies cranelift_codegen, cranelift_jit, cranelift_module) and after ~30,000 iterations it should crash.</p>\n<h3>Expected Results</h3>\n<p>The example completes after 50,000 iterations and nothing notable happens.</p>\n<h3>Actual Results</h3>\n<p>it fails with the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">`</span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">elect</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"err\">\\</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.97.1</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">299</span>:<span class=\"mi\">82</span><span class=\"err\">`</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Latest commit as of now as well as 0.97.1</p>\n<p>Operating system: Windows x64</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>I encountered this while attempting to exclude the cost of dropping modules from a benchmark that runs roughly 50,000 times. I hope it doesn't affect anything more important but I suspect that it's UB. When I insert a print statement into the panicking function to print <code>what - at</code> every call, it consistently reports values around -2^16 and does not panic. When I insert a print statement that <em>only</em> activates when the <code>try_into</code> fails, it reports something closer to +/-4 billion and panics at roughly ~30,000 iterations.<br>\n</p>\n</blockquote>",
        "id": 370089375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687876620
    },
    {
        "content": "<p>PROMETHIA-27 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6646\">issue #6646</a>:</p>\n<blockquote>\n<h3>Minimal example</h3>\n<p><a href=\"https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5\">https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Run this example (with dependencies cranelift_codegen, cranelift_jit, cranelift_module) and after ~30,000 iterations it should crash.</p>\n<h3>Expected Results</h3>\n<p>The example completes after 50,000 iterations and nothing notable happens.</p>\n<h3>Actual Results</h3>\n<p>it fails with the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">`</span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">elect</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"err\">\\</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.97.1</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">299</span>:<span class=\"mi\">82</span><span class=\"err\">`</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Latest commit as of now as well as 0.97.1</p>\n<p>Operating system: Windows x64</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>I encountered this while attempting to exclude the cost of dropping modules from a benchmark that runs roughly 50,000 times. I hope it doesn't affect anything more important but I suspect that it's UB. When I insert a print statement into the panicking function to print <code>what - at</code> every call, it consistently reports values around -2^16 and does not panic. When I insert a print statement that <em>only</em> activates when the <code>try_into</code> fails, it reports something closer to +/-4 billion and panics at roughly ~30,000 iterations.<br>\n</p>\n</blockquote>",
        "id": 370089377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687876621
    },
    {
        "content": "<p>PROMETHIA-27 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6646\">issue #6646</a>:</p>\n<blockquote>\n<h3>Minimal example</h3>\n<p><a href=\"https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5\">https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Run this example (with dependencies cranelift_codegen, cranelift_jit, cranelift_module) and after ~30,000 iterations it should crash.</p>\n<h3>Expected Results</h3>\n<p>The example completes after 50,000 iterations and nothing notable happens.</p>\n<h3>Actual Results</h3>\n<p>it fails with the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">`</span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">elect</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"err\">\\</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.97.1</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">299</span>:<span class=\"mi\">82</span><span class=\"err\">`</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Latest commit as of now as well as 0.97.1</p>\n<p>Operating system: Windows x64</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>I encountered this while attempting to exclude the cost of dropping modules from a benchmark that runs roughly 50,000 times. I hope it doesn't affect anything more important but I suspect that it's UB. When I insert a print statement into the panicking function to print <code>what - at</code> every call, it consistently reports values around -2^16 and does not panic. When I insert a print statement that <em>only</em> activates when the <code>try_into</code> fails, it reports something closer to +/-4 billion and panics at roughly ~30,000 iterations.<br>\n</p>\n</blockquote>",
        "id": 370089387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687876622
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6646#issuecomment-1609662805\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6646\">issue #6646</a>:</p>\n<blockquote>\n<p>Duplicate of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4000\">https://github.com/bytecodealliance/wasmtime/issues/4000</a></p>\n</blockquote>",
        "id": 370094430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687877410
    },
    {
        "content": "<p>PROMETHIA-27 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6646\">issue #6646</a>:</p>\n<blockquote>\n<h3>Minimal example</h3>\n<p><a href=\"https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5\">https://gist.github.com/PROMETHIA-27/7ac3d63e82610a220048442886cbebe5</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Run this example (with dependencies cranelift_codegen, cranelift_jit, cranelift_module) and after ~30,000 iterations it should crash.</p>\n<h3>Expected Results</h3>\n<p>The example completes after 50,000 iterations and nothing notable happens.</p>\n<h3>Actual Results</h3>\n<p>it fails with the following error:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"err\">`</span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">TryFromIntError</span><span class=\"p\">(())</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">elect</span><span class=\"err\">\\</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"err\">\\</span><span class=\"n\">registry</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"err\">\\</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"o\">-</span><span class=\"mf\">0.97.1</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">backend</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">299</span>:<span class=\"mi\">82</span><span class=\"err\">`</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Latest commit as of now as well as 0.97.1</p>\n<p>Operating system: Windows x64</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>I encountered this while attempting to exclude the cost of dropping modules from a benchmark that runs roughly 50,000 times. I hope it doesn't affect anything more important but I suspect that it's UB. When I insert a print statement into the panicking function to print <code>what - at</code> every call, it consistently reports values around -2^16 and does not panic. When I insert a print statement that <em>only</em> activates when the <code>try_into</code> fails, it reports something closer to +/-4 billion and panics at roughly ~30,000 iterations.<br>\n</p>\n</blockquote>",
        "id": 370095048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687877506
    }
]