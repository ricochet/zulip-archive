[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a> from <code>fix-b1</code> to <code>main</code>:</p>\n<blockquote>\n<p>Previously, <code>select</code> and <code>brz</code>/<code>brnz</code> instructions, when given a <code>b1</code><br>\nboolean argument, would test whether that boolean argument was nonzero,<br>\nrather than whether its LSB was nonzero. Since our invariant for mapping<br>\nCLIF state to machine state is that bits beyond the width of a value are<br>\nundefined, the proper lowering is to test only the LSB.</p>\n<p>(aarch64 does not have the same issue because its <code>Extend</code> pseudoinst<br>\nalready properly handles masking of b1 values when a zero-extend is<br>\nrequested, as it is for select/brz/brnz.)</p>\n<p>Found by Nathan Ringo on Zulip [1] (thanks!).</p>\n<p>[1]<br>\n<a href=\"#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221601862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609808394
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> and <a href=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a>.</p>",
        "id": 221601863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609808394
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> and <a href=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a>.</p>",
        "id": 221601864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609808394
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a> from <code>fix-b1</code> to <code>main</code>:</p>\n<blockquote>\n<p>Previously, <code>select</code> and <code>brz</code>/<code>brnz</code> instructions, when given a <code>b1</code><br>\nboolean argument, would test whether that boolean argument was nonzero,<br>\nrather than whether its LSB was nonzero. Since our invariant for mapping<br>\nCLIF state to machine state is that bits beyond the width of a value are<br>\nundefined, the proper lowering is to test only the LSB.</p>\n<p>(aarch64 does not have the same issue because its <code>Extend</code> pseudoinst<br>\nalready properly handles masking of b1 values when a zero-extend is<br>\nrequested, as it is for select/brz/brnz.)</p>\n<p>Found by Nathan Ringo on Zulip [1] (thanks!).</p>\n<p>[1]<br>\n<a href=\"#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221611705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609820754
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-561813524\">PR Review</a>.</p>",
        "id": 221650487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-561813524\">PR Review</a>.</p>",
        "id": 221650488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r551955132\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Would this read slightly better as <code>if is_cmp { if *size == 1 { 0x80 } else if use_imm8 { 0x83 } else { 0x81 } } else if *size == 1 { 0xf6 } else { 0xf7 }</code> ?</p>\n<p>/me also wonders if rustc/llvm can rearrange the order of the comparisons here, so that <code>is_cmp</code> is checked only once in generated code.</p>\n</blockquote>",
        "id": 221650489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r551955504\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: debug_assert_eq! (gives better debug output)</p>\n</blockquote>",
        "id": 221650491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r551958692\">PR Review Comment</a>:</p>\n<blockquote>\n<p>uber-nit: could be an int or boolean, but the <code>size</code> value matches the type size in this case.</p>\n<p>We could in fact use a <code>test</code> instruction against zero here. If so, the whole <code>if</code> can select the immediate to test against, slightly reducing code duplication here.</p>\n</blockquote>",
        "id": 221650492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r551951830\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Pre-existing: in the above inst definition for <code>CmpRmiR</code>, can you remove <code>/tests</code> from the comment? it's a bit misleading considering the new variant.</p>\n</blockquote>",
        "id": 221650493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r551958841\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Same remark about using test in both branches here.</p>\n</blockquote>",
        "id": 221650494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r551957497\">PR Review Comment</a>:</p>\n<blockquote>\n<p>In fact, do we need the new variant <code>TestRmiR</code>? I had in mind that we needed to add new instructions when no other instructions matched the following:</p>\n<ul>\n<li>regalloc constraints are the same</li>\n<li>instruction operands are the same</li>\n<li>codegen is (almost) the same</li>\n</ul>\n<p>In this case, it seems that <code>CmpRmiR</code> has the same behavior for the three above, so we could add one boolean field there meaning <code>is_test</code>, and have one fewer enum variant in return. We can absolutely keep the constructor <code>test_rmi_r</code> though, as an higher-level helper.</p>\n</blockquote>",
        "id": 221650495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r551959923\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Do you mind duplicating this test for <code>brz</code> please?</p>\n</blockquote>",
        "id": 221650496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609856417
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a> from <code>fix-b1</code> to <code>main</code>:</p>\n<blockquote>\n<p>Previously, <code>select</code> and <code>brz</code>/<code>brnz</code> instructions, when given a <code>b1</code><br>\nboolean argument, would test whether that boolean argument was nonzero,<br>\nrather than whether its LSB was nonzero. Since our invariant for mapping<br>\nCLIF state to machine state is that bits beyond the width of a value are<br>\nundefined, the proper lowering is to test only the LSB.</p>\n<p>(aarch64 does not have the same issue because its <code>Extend</code> pseudoinst<br>\nalready properly handles masking of b1 values when a zero-extend is<br>\nrequested, as it is for select/brz/brnz.)</p>\n<p>Found by Nathan Ringo on Zulip [1] (thanks!).</p>\n<p>[1]<br>\n<a href=\"#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221710593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609885848
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562186440\">PR Review</a>.</p>",
        "id": 221710959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886076
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552239593\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, that's a better idea -- merged this in and added <code>CmpOpcode::{Test, Cmp}</code>.</p>\n</blockquote>",
        "id": 221710960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886077
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562186641\">PR Review</a>.</p>",
        "id": 221710986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886102
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552239772\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, that is a bit clearer; updated!</p>\n</blockquote>",
        "id": 221710987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886102
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562186736\">PR Review</a>.</p>",
        "id": 221711006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886116
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552239873\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 221711007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886116
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562187988\">PR Review</a>.</p>",
        "id": 221711210,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886269
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552240967\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Re: the nit -- yes, good point; it could be a wider-than-1-bit bool. I'm not sure what that would mean as an input to a select or brz/brnz, so I've just added an assert that we do not see another bool type in the else-branch.</p>\n<p>Re: using <code>test</code> always -- yes, good point; actually <code>test rN, rN</code> is one byte shorter than <code>cmp rN, 0</code> so this is a code-size win too. (<code>rN, rN</code> and not <code>rN, 0</code> because this is an and-op; and 0xff...ff is much larger in emitted code than the R-R form).</p>\n</blockquote>",
        "id": 221711211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886269
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562188045\">PR Review</a>.</p>",
        "id": 221711216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886275
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552241003\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 221711217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886275
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562188095\">PR Review</a>.</p>",
        "id": 221711224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886280
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552241042\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 221711225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886281
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a> from <code>fix-b1</code> to <code>main</code>:</p>\n<blockquote>\n<p>Previously, <code>select</code> and <code>brz</code>/<code>brnz</code> instructions, when given a <code>b1</code><br>\nboolean argument, would test whether that boolean argument was nonzero,<br>\nrather than whether its LSB was nonzero. Since our invariant for mapping<br>\nCLIF state to machine state is that bits beyond the width of a value are<br>\nundefined, the proper lowering is to test only the LSB.</p>\n<p>(aarch64 does not have the same issue because its <code>Extend</code> pseudoinst<br>\nalready properly handles masking of b1 values when a zero-extend is<br>\nrequested, as it is for select/brz/brnz.)</p>\n<p>Found by Nathan Ringo on Zulip [1] (thanks!).</p>\n<p>[1]<br>\n<a href=\"#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221711442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886413
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562190997\">PR Review</a>.</p>",
        "id": 221711714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886624
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552243324\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Please revert this. I am pretty sure that cranelif-module doesn't disable default features and as such it would become impossible to use the old backend.</p>\n</blockquote>",
        "id": 221711715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886624
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562191833\">PR Review</a>.</p>",
        "id": 221711881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886731
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552244041\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Eek, this slipped in from local testing. Thanks for catching this.</p>\n</blockquote>",
        "id": 221711882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886731
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a> from <code>fix-b1</code> to <code>main</code>:</p>\n<blockquote>\n<p>Previously, <code>select</code> and <code>brz</code>/<code>brnz</code> instructions, when given a <code>b1</code><br>\nboolean argument, would test whether that boolean argument was nonzero,<br>\nrather than whether its LSB was nonzero. Since our invariant for mapping<br>\nCLIF state to machine state is that bits beyond the width of a value are<br>\nundefined, the proper lowering is to test only the LSB.</p>\n<p>(aarch64 does not have the same issue because its <code>Extend</code> pseudoinst<br>\nalready properly handles masking of b1 values when a zero-extend is<br>\nrequested, as it is for select/brz/brnz.)</p>\n<p>Found by Nathan Ringo on Zulip [1] (thanks!).</p>\n<p>[1]<br>\n<a href=\"#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/bnot.20on.20b1s</a></p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221711915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886759
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#pullrequestreview-562192337\">PR Review</a>.</p>",
        "id": 221711989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886795
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546#discussion_r552244499\">PR Review Comment</a>:</p>\n<blockquote>\n<p>(I think that's why I was newly seeing a warning issue; CI doesn't otherwise check for warnings with non-default options.)</p>\n</blockquote>",
        "id": 221711990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609886795
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2546\">PR #2546</a>.</p>",
        "id": 221716268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609889545
    }
]