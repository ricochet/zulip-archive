[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a> from <code>afonso360:riscv-simd-iadd-pairwise</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR implements both the move instruction for vector registers and <code>iadd_pairwise</code>.</p>\n<p>We can't really implement <code>iadd_pairwise</code> in the best way possible, since that requires supporting LMUL &gt; 1 which dynamically changes how many registers are available. (At least as far as I know, If regalloc supports this it would be nice to start using it)</p>\n</blockquote>",
        "id": 365703783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686613663
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 365703786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686613664
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 365703790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686613664
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 365703791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686613664
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1227347838\">PR review comment</a>:</p>\n<blockquote>\n<p>The <code>vslideup</code> instruction both modifies the destination register and also has the requirement that none of the input registers must be the same as the destination register.</p>\n<p>I've used <code>reg_late_use</code> and <code>reg_reuse_def</code> to model this, but this seems wrong, and it also always emits a move before the instruction even when the register is otherwise unused, so there's probably a better way of expressing this which I'm not entirely sure how</p>\n</blockquote>",
        "id": 365703877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686613717
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1227347838\">PR review comment</a>.</p>",
        "id": 365704219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686613973
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1227347838\">PR review comment</a>.</p>",
        "id": 365704396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686614086
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#pullrequestreview-1476129672\">PR review</a>.</p>",
        "id": 365721051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686623078
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#pullrequestreview-1476129672\">PR review</a>.</p>",
        "id": 365721052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686623078
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1227444566\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure I understand the intended semantics here: src and dst (<code>vd_src</code> and <code>vd</code>, rather) must not overlap, but <code>vd</code> is also a reuse of <code>vd_src</code>? Or is the non-overlap constraint between <code>vs2</code> and <code>vd</code>?</p>\n</blockquote>",
        "id": 365721053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686623078
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1227773893\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops, I could have written that better. <code>vd</code> must be the same as <code>vd_src</code> (since they are encoded in the same field), and none of the other inputs (<code>vs2</code> and <code>vm</code>) must be the same register as <code>vd</code>.</p>\n<p><code>vm</code> (The mask register) is slightly hidden here since it's not always applicable, but when it is, it's a <code>fixed_use(v0)</code></p>\n</blockquote>",
        "id": 365790652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686646395
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1228320070\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, OK. The right way to encode that is probably to use a late-use on <code>vs2</code> (and on <code>vm</code> when present), rather than on <code>vd_src</code>, I think.</p>\n</blockquote>",
        "id": 365906195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686669706
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 365960128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686681524
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1228554335\">PR review comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> I'm not entirely sure I did the right thing. I also couldn't find something along the lines of <code>reg_fixed_late_use</code> for <code>vm</code>, does regalloc support encoding multiple constraints by calling <code>reg_fixed_use</code> and <code>reg_late_use</code> on the same <code>VReg</code>?</p>\n</blockquote>",
        "id": 365960713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686681661
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#discussion_r1228559596\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, it should be possible to do that -- if it's not on the <code>OperandCollector</code> API we can add it. The early/late (\"position\"), use/def (\"kind\"), and fixed/any/reg/stack (\"constraint\") are all orthogonal fields of the <code>Operand</code>.</p>\n</blockquote>",
        "id": 365961871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686681931
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 365966330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686682969
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 366151471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686742853
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 366867060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686928730
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568#pullrequestreview-1483811800\">PR review</a>.</p>",
        "id": 366878565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686930930
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6568\">PR #6568</a>.</p>",
        "id": 366890688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1686933382
    }
]