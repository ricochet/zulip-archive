[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908\">PR #4908</a> from <code>isle-multi-extractors</code> to <code>main</code>:</p>\n<blockquote>\n<p>This support allows for rules that process multiple matching values per extractor call on the left-hand side, and as a result, can produce multiple values from the constructor whose body they define.</p>\n<p>This is useful in situations where we are matching on an input data structure that can have multiple \"nodes\" for a given value or ID, for example in an e-graph.</p>\n<p>This is the first piece of the implementation of <a href=\"https://github.com/bytecodealliance/rfcs/issues/27\">bytecodealliance/rfcs#27</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 298687122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663116132
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908\">PR #4908</a>.</p>",
        "id": 298687123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663116132
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#pullrequestreview-1107838001\">PR review</a>.</p>",
        "id": 298821101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663178175
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#pullrequestreview-1107838001\">PR review</a>.</p>",
        "id": 298821102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663178175
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r971041830\">PR review comment</a>:</p>\n<blockquote>\n<p>These comments don't seem to reflect the current truth. Both extractors and constructors seem to be using <code>ContextIter</code> now, based on the test cases.</p>\n</blockquote>",
        "id": 298821103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663178175
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r971045064\">PR review comment</a>:</p>\n<blockquote>\n<p>When is this used? I don't see any examples in the test cases, so if this isn't dead code now, then we should add test cases.</p>\n</blockquote>",
        "id": 298821104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663178175
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r971055373\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah okay here is an example of returning a vector.</p>\n<p>But yeah, I think we should only use <code>ContextIter</code>:</p>\n<ul>\n<li>It is general enough to subsume vector returns since you can always use <code>std::vec::Iter</code> as your iterator type.</li>\n<li>It doesn't require computing all the values ahead of time, which can be more efficient if we ever allow short circuiting.</li>\n<li>It simplifies authoring the glue code (only one case for multi things instead of two) which makes it easier for users to grok the compilation model.</li>\n</ul>\n<p>As far as internal constructors go, we could have a blanket implementation of <code>ContextIter</code> for <code>Vec&lt;T&gt;</code> and <code>SmallVec&lt;T&gt;</code> so that the generated code doesn't need to change.</p>\n</blockquote>",
        "id": 298821105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663178175
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r971046368\">PR review comment</a>:</p>\n<blockquote>\n<p>Also, if this is still used, it seems like we could just have <code>ContextIter</code> and it can generalize and subsume the <code>Vec</code> case? That would simplify things a bit, especially for programmer mental model of what a multi compiles down into, since there won't be different cases.</p>\n</blockquote>",
        "id": 298821106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663178175
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r971164362\">PR review comment</a>:</p>\n<blockquote>\n<p>I would love for that to work out, but the problem here is ownership: there is not necessarily any other owner for a newly-generated set of return values from a multi-constructor. Take for example a top-level \"simplify\" entry point that returns multiple equivalent expressions for a given input expression: it will need to return a vector of expression/node/eclass IDs, but this vec doesn't exist anywhere else (and stashing it in a side-table just to return an iterator over it would be awkward because it doesn't need to persist beyond the postprocessing we do on it).</p>\n</blockquote>",
        "id": 298826650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663180123
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#pullrequestreview-1108015786\">PR review</a>.</p>",
        "id": 298826651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663180123
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#pullrequestreview-1108077312\">PR review</a>.</p>",
        "id": 298835319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663183080
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r971206312\">PR review comment</a>:</p>\n<blockquote>\n<p>I haven't read the surrounding code, but in general, an <code>Iterator</code> can itself own the data over which it's iterating. In particular, <code>Vec::into_iter</code> returns an iterator that owns the vector and will drop it when the iterator is dropped.</p>\n</blockquote>",
        "id": 298835320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663183080
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r971306322\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, that's a good point! I'll rework in this direction.</p>\n</blockquote>",
        "id": 298853780,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663190399
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#pullrequestreview-1108223345\">PR review</a>.</p>",
        "id": 298853781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663190399
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908\">PR #4908</a> from <code>isle-multi-extractors</code> to <code>main</code>.</p>",
        "id": 299647682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663622718
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#discussion_r974704168\">PR review comment</a>:</p>\n<blockquote>\n<p>Updated just now. It's a little awkward with the <code>ContextIter</code> adapters (this is necessary to allow the lowering trait to provide multi-etor iterators without holding a borrow on the whole <code>Context</code>) but it seems to work.</p>\n</blockquote>",
        "id": 299648009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663622855
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#pullrequestreview-1112901279\">PR review</a>.</p>",
        "id": 299648010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663622855
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908\">PR #4908</a> from <code>isle-multi-extractors</code> to <code>main</code>.</p>",
        "id": 299648125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663622891
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908#pullrequestreview-1116182696\">PR review</a>.</p>",
        "id": 300052600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663801486
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908\">PR #4908</a> from <code>isle-multi-extractors</code> to <code>main</code>.</p>",
        "id": 300052749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663801595
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908\">PR #4908</a>.</p>",
        "id": 300054521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663802901
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4908\">PR #4908</a>.</p>",
        "id": 300055275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663803411
    }
]