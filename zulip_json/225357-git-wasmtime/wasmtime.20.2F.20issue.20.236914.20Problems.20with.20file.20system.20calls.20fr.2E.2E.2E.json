[
    {
        "content": "<p>rbackhouse opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914\">issue #6914</a>:</p>\n<blockquote>\n<p>I am unable to get file system calls to work from a tinygo based WASM component. All calls return \"errno 76\" \"capabilities insufficient\".</p>\n<p>This originally started as a discussion on Zulip with Pat Hickey.<br>\n<a href=\"#narrow/stream/217126-wasmtime/topic/Problem.20with.20WasiCtxBuilder.2Epush_preopened_dir.20for.20component\">https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime/topic/Problem.20with.20WasiCtxBuilder.2Epush_preopened_dir.20for.20component</a></p>\n<h3>Test Case</h3>\n<p>I've created a test case available at</p>\n<p><a href=\"https://github.com/rbackhouse/component-go-fs-test\">https://github.com/rbackhouse/component-go-fs-test</a></p>\n<p>The README details the prereqs and how to build and run.</p>\n<p>Here are the wasm files built<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/12445390/testfswasm.zip\">testfswasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<p>See README from <a href=\"https://github.com/rbackhouse/component-go-fs-test\">https://github.com/rbackhouse/component-go-fs-test</a></p>\n<h3>Expected Results</h3>\n<p>stdout should show </p>\n<p>\"\"test.log created\"</p>\n<h3>Actual Results</h3>\n<p>stdout shows<br>\n\"Failed to open file open test.log: errno 76\"</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 12.0.1</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: M1</p>\n<h3>Extra Info</h3>\n</blockquote>",
        "id": 387424904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693055080
    },
    {
        "content": "<p><a href=\"https://github.com/rbackhouse\">rbackhouse</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914\">Issue #6914</a>.</p>",
        "id": 387424905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693055081
    },
    {
        "content": "<p>pchickey assigned <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914\">issue #6914</a> to pchickey.</p>",
        "id": 387464286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693090163
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914#issuecomment-1695907532\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914\">issue #6914</a>:</p>\n<blockquote>\n<p>I poked around this a bit just now and I think there's a few things in play perhaps. I believe the \"root cause\" of this is that the entry point <code>openfile</code> generated doesn't initialize the Go runtime or wasi-libc. The tinygo tag you linked is using a was-libc from 2022 which requires explicit initialization to work for preopens, and by skipping this initialization by going straight to <code>openfile</code> that's why things aren't working. I've attempted to confirm this by having the adapter call <code>_start</code> then call <code>openfile</code> and that appears to get this working.</p>\n<p>This means that I don't think the issue is in Wasmtime, but is instead on the tinygo side of things. One option would be to update wasi-libc since today's version doesn't require explicit initialization. Another option though would be to ensure that the exports generated by wit-bindgen initialize the Go runtime. I'm not sure what other Go details are involved for entering the runtime in a non-<code>main</code> situation.</p>\n<p>In any case though I wasn't able to find any issues with Wasmtime itself or the adapter, so I'm going to close this as it's on the Wasmtime repo, but if you/others would prefer to keep discussion here while it's being fixed elsewhere I'm happy to reopen too.</p>\n</blockquote>",
        "id": 387693985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693236764
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914\">issue #6914</a>:</p>\n<blockquote>\n<p>I am unable to get file system calls to work from a tinygo based WASM component. All calls return \"errno 76\" \"capabilities insufficient\".</p>\n<p>This originally started as a discussion on Zulip with Pat Hickey.<br>\n<a href=\"#narrow/stream/217126-wasmtime/topic/Problem.20with.20WasiCtxBuilder.2Epush_preopened_dir.20for.20component\">https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime/topic/Problem.20with.20WasiCtxBuilder.2Epush_preopened_dir.20for.20component</a></p>\n<h3>Test Case</h3>\n<p>I've created a test case available at</p>\n<p><a href=\"https://github.com/rbackhouse/component-go-fs-test\">https://github.com/rbackhouse/component-go-fs-test</a></p>\n<p>The README details the prereqs and how to build and run.</p>\n<p>Here are the wasm files built<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/files/12445390/testfswasm.zip\">testfswasm.zip</a></p>\n<h3>Steps to Reproduce</h3>\n<p>See README from <a href=\"https://github.com/rbackhouse/component-go-fs-test\">https://github.com/rbackhouse/component-go-fs-test</a></p>\n<h3>Expected Results</h3>\n<p>stdout should show </p>\n<p>\"\"test.log created\"</p>\n<h3>Actual Results</h3>\n<p>stdout shows<br>\n\"Failed to open file open test.log: errno 76\"</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 12.0.1</p>\n<p>Operating system: MacOS</p>\n<p>Architecture: M1</p>\n<h3>Extra Info</h3>\n</blockquote>",
        "id": 387693986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693236764
    },
    {
        "content": "<p>rbackhouse <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914#issuecomment-1695920926\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6914\">issue #6914</a>:</p>\n<blockquote>\n<p>Thanks Alex, I'll look into using an updated wasi-libc to see if that helps. I can continue the conversation on Zulip</p>\n</blockquote>",
        "id": 387696126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693237291
    }
]