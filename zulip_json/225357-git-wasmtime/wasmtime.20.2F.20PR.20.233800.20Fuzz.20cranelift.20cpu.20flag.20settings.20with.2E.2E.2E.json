[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800\">PR #3800</a> from <code>fuzz-codegen-settings</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit updates the <code>Config</code> fuzz-generator to consume some of the<br>\ninput as configuration settings for codegen flags we pass to cranelift.<br>\nThis should allow for ideally some more coverage where settings are<br>\ndisabled or enabled, ideally finding possible bugs in feature-specific<br>\nimplementations or generic implementations that are rarely used if the<br>\nfeature-specific ones almost always take precedent.</p>\n<p>The technique used in this commit is to weight selection of codegen<br>\nsettings less frequently than using the native settings. Afterwards each<br>\nlisted feature is individually enabled or disabled depending on the<br>\ninput fuzz data, and if a feature is enabled but the host doesn't<br>\nactually support it then the fuzz input is rejected with a log message.<br>\nThe goal here is to still have many fuzz inputs accepted but also ensure<br>\ndeterminism across hosts. If there's a bug specifically related to<br>\nenabling a flag then running it on a host without the flag should<br>\nindicate that the flag isn't supported rather than silently leaving it<br>\ndisabled and reporting the fuzz case a success.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 271893403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644874923
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800\">PR #3800</a>.</p>",
        "id": 271893495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644874982
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800#pullrequestreview-882254376\">PR review</a>.</p>",
        "id": 271898274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644877395
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800#pullrequestreview-882254376\">PR review</a>.</p>",
        "id": 271898275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644877395
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800#discussion_r806286167\">PR review comment</a>:</p>\n<blockquote>\n<p>By the way, I added a method upstream the other day that can make this a little nicer: <a href=\"https://docs.rs/arbitrary/latest/arbitrary/struct.Unstructured.html#method.ratio\">https://docs.rs/arbitrary/latest/arbitrary/struct.Unstructured.html#method.ratio</a></p>\n<p>(fwiw, I also added this method too: <a href=\"https://docs.rs/arbitrary/latest/arbitrary/struct.Unstructured.html#method.arbitrary_loop\">https://docs.rs/arbitrary/latest/arbitrary/struct.Unstructured.html#method.arbitrary_loop</a>)</p>\n</blockquote>",
        "id": 271898276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644877395
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800\">PR #3800</a> from <code>fuzz-codegen-settings</code> to <code>main</code>.</p>",
        "id": 271992190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644939800
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800#pullrequestreview-883195234\">PR review</a>.</p>",
        "id": 271992204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644939807
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800#discussion_r806981373\">PR review comment</a>:</p>\n<blockquote>\n<p>Nice!</p>\n</blockquote>",
        "id": 271992205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644939807
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800\">PR #3800</a> from <code>fuzz-codegen-settings</code> to <code>main</code>.</p>",
        "id": 271993682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644940403
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800\">PR #3800</a> from <code>fuzz-codegen-settings</code> to <code>main</code>.</p>",
        "id": 271995146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644940902
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3800\">PR #3800</a>.</p>",
        "id": 272033236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1644956877
    }
]