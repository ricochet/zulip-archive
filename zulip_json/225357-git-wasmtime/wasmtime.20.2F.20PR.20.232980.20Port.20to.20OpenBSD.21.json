[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>:</p>\n<blockquote>\n<p>Verified to work with several simple Wasm modules on an OpenBSD 6.9<br>\nx86_64 machine, built with the Rust 1.51.0 included in the packages<br>\ncollection (<code>pkg_add rust</code>) because <code>rustup</code> doesn't support<br>\nOpenBSD.</p>\n<p>This requires a number of PRs to upstream crates to be merged and<br>\nreleased on <a href=\"http://crates.io\">crates.io</a> first; as a temporary measure, this commit<br>\nincludes a number of patches in the toplevel <code>Cargo.toml</code> to refer<br>\nto git branches. Once those patches are merged and released,<br>\nI can update this PR (cc @sunfishcode).</p>\n<p>The only change to wasmtime code itself is in the trap-handler runtime.<br>\nI had to hardcode the offset to RIP in the signal frame, because <code>libc</code><br>\ndoesn't have a struct definition for OpenBSD. If we think it would be better<br>\nto get that upstreamed, I can do that instead. Or, we could go back to a<br>\nC helper and just include <code>&lt;sys/signal.h&gt;</code>, but I suspect we don't want to do that.</p>\n<p>This also disables <code>wasi-nn</code> by default, because the <code>openvino-sys</code><br>\ncrate fails to build on OpenBSD. Ideally we would either fix<br>\nupstream or include some more build configuration to exclude the<br>\nfeature on our end on OpenBSD; unfortunately it seems (according<br>\nto <a href=\"https://github.com/rust-lang/cargo/issues/1197\">rust-lang/cargo#1197</a>) that target-specific features are not<br>\nyet supported by Cargo, so this is not very easy to do. I'd be interested<br>\nin @abrown's thoughts on this!</p>\n<p>Also note that we won't be able to build or test this platform on CI,<br>\nunfortunately, for three reasons: (i) <code>rustup</code> doesn't carry toolchain builds<br>\nfor OpenBSD, I think because of the OS's \"no ABI compatibility across releases\"<br>\npolicy; (ii) GitHub CI Actions doesn't have any runners<br>\nfor this platform; and (iii) distributing binaries is difficult, for the above<br>\nABI-compatibility reasons. Nevertheless, it would be nice to be able to say<br>\nthat it has been known to work at one time, and also maybe at some point<br>\nin the distant future someone will see fit to include us in the OpenBSD<br>\nports/packages tree.</p>\n<p>Low priority for review (this was just a fun side-adventure). Thanks!</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 242478081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623540336
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a>.</p>",
        "id": 242478082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623540336
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a>.</p>",
        "id": 242478083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623540336
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-683414695\">PR review</a>.</p>",
        "id": 242679527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623722019
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r651326493\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd suggest submitting a PR to the libc crate for this. The <a href=\"https://github.com/rust-lang/libc/blob/master/src/unix/bsd/netbsdlike/netbsd/x86_64.rs#L16\">netbsd version of this</a> is straightforward, so hopefully openbsd's is too.</p>\n</blockquote>",
        "id": 242679528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623722019
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-683414695\">PR review</a>.</p>",
        "id": 242679529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623722019
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-683548968\">PR review</a>.</p>",
        "id": 242686820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623731759
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r651441163\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure thing -- created <a href=\"https://github.com/rust-lang/libc/issues/2242\">rust-lang/libc#2242</a>. It might be a bit until this is easily usable without building rustc from source (the platform doesn't have rustup so it would likely be available with the packages in the next OpenBSD release in October) but then this PR isn't in any hurry either :-)</p>\n</blockquote>",
        "id": 242686821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623731759
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>.</p>",
        "id": 242687159,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623732124
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-686732955\">PR review</a>.</p>",
        "id": 243073481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623959083
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r653884853\">PR review comment</a>:</p>\n<blockquote>\n<p>@cfallin, I fixed the <code>openvino</code> crates so the error you saw above should be resolved. I think this line should be unnecessary if you bump the <code>openvino</code> crate to v0.3.2.</p>\n</blockquote>",
        "id": 243073482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623959083
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>.</p>",
        "id": 244220287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624926107
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694492411\">PR review</a>.</p>",
        "id": 244220384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624926194
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660196267\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 244220385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624926194
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694493029\">PR review</a>.</p>",
        "id": 244220471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624926301
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660196753\">PR review comment</a>:</p>\n<blockquote>\n<p>So it looks like there was an ongoing PR for this (<a href=\"https://github.com/rust-lang/libc/issues/2189\">rust-lang/libc#2189</a>) that is somewhat complex, and stalled. For now I added a C helper and I'm happy to revisit this when Rust support exists, if that seems reasonable to you! (Also I misspoke above w.r.t. waiting for an OS package update -- <code>libc</code> is just a crate, of course, not part of the stdlib distro proper.)</p>\n</blockquote>",
        "id": 244220472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624926301
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>.</p>",
        "id": 244220725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624926622
    },
    {
        "content": "<p><strong>cfallin</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> as ready for review.</p>",
        "id": 244220729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624926636
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694515841\">PR review</a>.</p>",
        "id": 244233956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624943010
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694515841\">PR review</a>.</p>",
        "id": 244233957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624943010
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660216543\">PR review comment</a>:</p>\n<blockquote>\n<p>For less cfg could this be defined in the block where it's called below?</p>\n</blockquote>",
        "id": 244233959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624943010
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660282325\">PR review comment</a>:</p>\n<blockquote>\n<p>There's another nightly in this file elsewhere, mind updating that one too?</p>\n</blockquote>",
        "id": 244233960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624943010
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>.</p>",
        "id": 244236809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624946667
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694620331\">PR review</a>.</p>",
        "id": 244236813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624946678
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660305328\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 244236814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624946678
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694620455\">PR review</a>.</p>",
        "id": 244236820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624946694
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660305424\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yes, I had missed that, thanks!</p>\n</blockquote>",
        "id": 244236821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624946694
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>.</p>",
        "id": 244239690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624949579
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>.</p>",
        "id": 244250134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624956590
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694767625\">PR review</a>.</p>",
        "id": 244250654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624956883
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660416623\">PR review comment</a>:</p>\n<blockquote>\n<p><code>MAP_STACK</code> can also be used on Linux. It is currently a no-op, but according to the man page it is accepted such that if a future architecture requires special handling for the stack, no program changes are necessary.</p>\n</blockquote>",
        "id": 244250655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624956883
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694769826\">PR review</a>.</p>",
        "id": 244250839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624957001
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660418362\">PR review comment</a>:</p>\n<blockquote>\n<p>What kind of limits?</p>\n</blockquote>",
        "id": 244250840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624957001
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694772067\">PR review</a>.</p>",
        "id": 244251053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624957126
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660420008\">PR review comment</a>:</p>\n<blockquote>\n<p>MAP_STACK and issues with the way that the pooling allocator deallocs/reallocs to zero; see the commit message on the commit that added this line.</p>\n</blockquote>",
        "id": 244251055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624957126
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-694773918\">PR review</a>.</p>",
        "id": 244251234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624957227
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660421441\">PR review comment</a>:</p>\n<blockquote>\n<p>To give a little more detail: <a href=\"https://github.com/openbsd/src/blob/d0b698e17cb070a8f3e5081524f33169e71390a0/sys/uvm/uvm_mmap.c#L258-L259\">this check</a> in the OpenBSD kernel's mmap() disallows requesting a fixed address for a MAP_STACK mmap, so one can't use this to get fresh CoW pages in an existing stack area.</p>\n</blockquote>",
        "id": 244251235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624957227
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-695073674\">PR review</a>.</p>",
        "id": 244285868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-695073674\">PR review</a>.</p>",
        "id": 244285869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660647626\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this use an <code>if</code> instead of a conditional compilation to guard this?</p>\n</blockquote>",
        "id": 244285870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660649110\">PR review comment</a>:</p>\n<blockquote>\n<p>Can this use <code>skip_pooling_allocator_tests</code>?</p>\n</blockquote>",
        "id": 244285871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660645502\">PR review comment</a>:</p>\n<blockquote>\n<p>Since <code>mmap</code> is roughly the same could this use <code>if cfg!(...)</code> instead of <code>#[cfg]</code> so we get some type-checking when compiling for other unix platforms? (not changing the functionality here of course, just the structure)</p>\n</blockquote>",
        "id": 244285872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660648504\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this test be changed to use <code>skip_pooling_allocator_tests</code> instead of adding a cfg here?</p>\n</blockquote>",
        "id": 244285873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660649636\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this perhaps be extracted to a helper function in this module that tests for arm64 macos and openbsd and skips the tests if that's true?</p>\n</blockquote>",
        "id": 244285875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660646426\">PR review comment</a>:</p>\n<blockquote>\n<p>Similar to above could this be an <code>if cfg!</code> at the top of the function which panics? (I like to keep <code>#[cfg]</code> to a minimum if we can since we can't type-check anything that's excluded)</p>\n</blockquote>",
        "id": 244285876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r660648848\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this (and the above test) use <code>skip_pooling_allocator_tests</code> instead?</p>\n</blockquote>",
        "id": 244285877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624975484
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#pullrequestreview-696742243\">PR review</a>.</p>",
        "id": 244509896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625103876
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980#discussion_r661914977\">PR review comment</a>:</p>\n<blockquote>\n<p>The C wrapper looks fine to me. I suggest adding a link to <a href=\"https://github.com/rust-lang/libc/issues/2189\">rust-lang/libc#2189</a> in a comment so that people looking to refactor that code can easily check on its status.</p>\n</blockquote>",
        "id": 244509897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625103877
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a> from <code>openbsd69</code> to <code>main</code>.</p>",
        "id": 251148603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630260862
    },
    {
        "content": "<p>cfallin closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2980\">PR #2980</a>.</p>",
        "id": 251149239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1630261533
    }
]