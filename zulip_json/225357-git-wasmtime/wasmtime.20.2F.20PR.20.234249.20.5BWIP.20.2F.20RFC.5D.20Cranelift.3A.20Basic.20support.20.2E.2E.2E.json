[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a work-in-progress, and meant to sketch the direction I've been<br>\nthinking in for a mid-end framework. A proper BA RFC will come soon.</p>\n<p>This PR builds a phase in the optimization pipeline that converts a CLIF<br>\nCFG into an egraph representing the function body. Each node represents<br>\nan original instruction or operator. The \"skeleton\" of side-effecting<br>\ninstructions is retained, but non-side-effecting (pure) operators are<br>\nallowed to \"float\": the egraph will naturally deduplicate them during<br>\nbuild, and we will determine their proper place when we convert back to<br>\na CFG representation.</p>\n<p>The conversion from the egraph back to the CFG is done via a new<br>\nalgorithm I call \"scoped elaboration\". The basic idea is to do a<br>\npreorder traversal of the domtree, and at each level, evaluate the<br>\nvalues of the eclasses called upon by the side-effect skeleton,<br>\nmemoizing in an eclass-to-SSA-value map. This map is a scoped hashmap,<br>\nwith scopes at each domtree level. In this way, (i) when a value is<br>\ncomputed in a location that dominates another instance of that value,<br>\nthe first replacees the second; but (ii) we never produce \"partially<br>\ndead\" computations, i.e. we never hoist to a level in the domtree where<br>\na node is not \"anticipated\" (always eventually computed). This exactly<br>\nmatches what GVN does today. With a small tweak, it can also subsume<br>\nLICM: we need to be loop-nest-aware in our recursive eclass elaboration,<br>\nand potentially place nodes higher up the domtree (and higher up in the<br>\nscoped hashmap).</p>\n<p>Unlike what I had been thinking in Monday's meeting, this produces CLIF<br>\nout of the egraph and then allows that to be lowered. It's overall<br>\nsimpler and a better starting point (thanks @abrown for tipping me over<br>\nthe edge in this). The way it produces CLIF now could be made more<br>\nefficient: it could reuse instructions already in the DFG for nodes that<br>\nare <em>not</em> duplicated (likely most of them) rather than clearing all and<br>\nrepopulating.</p>\n<p>This PR does <em>not</em> do anything to actually rewrite in the egraph. That's<br>\nthe next step! I need to work out exactly how to integrate ISLE with<br>\nsome sort of rewrite machinery. I have some ideas about efficient<br>\ndispatch with an \"operand-tree discriminants shape analysis\" on the<br>\negraph and indexing rules by their matched shape; more to come.</p>\n<p>cc @fitzgen @jameysharp @abrown @avanhatt @mlfbrown</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 285470457,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654734237
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 285470574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654734340
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 285484034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654748140
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 285495185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654759115
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1001874366\">PR review</a>.</p>",
        "id": 285601241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893880086\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// extraction that disqualifies enodes (removes them from\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 285601242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893972092\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this should probably be rewritten to use iteration + an explicit work stack, instead of stack recursion. Just to be more robust in the face of malicious input. I don't think we have any stack recursion anywhere else in Cranelift, afaik.</p>\n</blockquote>",
        "id": 285601243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893976253\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto regarding recursion here.</p>\n</blockquote>",
        "id": 285601244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893975904\">PR review comment</a>:</p>\n<blockquote>\n<p>Nitpick-y for sure, but I'm not a huge fan of the name <code>Result</code> for this type of node. I think <code>Projection</code> would be an improvement and <code>Pick</code> or something along those lines might be even better.</p>\n</blockquote>",
        "id": 285601245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1001874366\">PR review</a>.</p>",
        "id": 285601246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893973856\">PR review comment</a>:</p>\n<blockquote>\n<p>This is kinda funky, would be better IMO as</p>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        assert!(\n            !matches!(node, Node::Param { .. }),\n            \"Param nodes should already be inserted\",\n        );\n</code></pre></div>\n<p>which is a little funky because of <code>!macro!()</code> but also there could be a <code>Node::is_param</code> method to clean that up.</p>\n</blockquote>",
        "id": 285601247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893980619\">PR review comment</a>:</p>\n<blockquote>\n<p>Shouldn't this always be absent at this point because there aren't any cycles in the egraph anymore and we check for whether it is in <code>id_to_value</code> and early exit if so at the very? Is this a property we can assert?</p>\n</blockquote>",
        "id": 285601248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893967676\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this would really benefit from an overview of the scoped elaboration algorithm up here at the top.</p>\n</blockquote>",
        "id": 285601249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893984090\">PR review comment</a>:</p>\n<blockquote>\n<p>Similarly, the mutual recursion between <code>visit_enode</code> and <code>visit_eclass</code> should be rewritten with iteration and an explicit stack before we consider merging this.</p>\n</blockquote>",
        "id": 285601250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893986068\">PR review comment</a>:</p>\n<blockquote>\n<p>This would also benefit from a description of the algorithm here. </p>\n</blockquote>",
        "id": 285601251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893993440\">PR review comment</a>:</p>\n<blockquote>\n<p>Ahhhh okay, so this panics if it is already present. That's a bit confusing, since given the method name I would assume that this silently returns if the entry already exists.</p>\n<p>Maybe call this <code>insert_and_assert_absent</code> or even just <code>insert_absent</code>?</p>\n</blockquote>",
        "id": 285601252,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893994344\">PR review comment</a>:</p>\n<blockquote>\n<p>Probably worth having <code>test egraphs</code> in the long run, since this combination of settings is a bit of a magical incantation.</p>\n</blockquote>",
        "id": 285601253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893995522\">PR review comment</a>:</p>\n<blockquote>\n<p>This seems to have had the redundant phi elimination pass run on it? Because the egraph isn't doing that yet, right? Another reason to have <code>test egraph</code> so that we aren't pulling in incidental/unrelated changes to these tests.</p>\n</blockquote>",
        "id": 285601254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r893976932\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto recursion. (Will stop pointing it out now)</p>\n</blockquote>",
        "id": 285601255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654812048
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1002080029\">PR review</a>.</p>",
        "id": 285604949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654814731
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r894018910\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes for sure, this is the plan!</p>\n<p>Incidentally we'll probably want to audit <code>egg</code> itself for this property too...</p>\n</blockquote>",
        "id": 285604950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654814731
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r894021083\">PR review comment</a>:</p>\n<blockquote>\n<p>I know some key parts of egg are structured as a workqueue but I haven't audited it to check if that's true everywhere. In fact there are APIs (such as the Pattern and CostFunction traits) that as I recall have default implementations that are recursive, but can be implemented iteratively if the client code puts in the work.</p>\n</blockquote>",
        "id": 285605328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654815034
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1002082815\">PR review</a>.</p>",
        "id": 285605329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654815034
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r894027871\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, I think so. I think we'll actually want to do something equivalent to redundant-phis as a rewrite rule eventually (you're probably thinking along these lines too :-) ); I need to think through how exactly to do this best without introducing cycles in the egraph from the blockparam nodes (or maybe we do, and just ignore during elaboration). </p>\n</blockquote>",
        "id": 285606616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654816016
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1002091393\">PR review</a>.</p>",
        "id": 285606618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654816017
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 288902494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657261257
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 288902588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657261331
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 289919643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658115994
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290063769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658216398
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290065862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658217920
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290197760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658297950
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290198228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658298396
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290465601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658466066
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290581706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658535851
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290582060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658536289
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290994742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658904098
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290995281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658904494
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 290998251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658906727
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 291280483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659066061
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 291398931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659144897
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 291399190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659145309
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 291799830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659501683
    },
    {
        "content": "<p>lqd submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1059829039\">PR review</a>.</p>",
        "id": 291810760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659511998
    },
    {
        "content": "<p>lqd created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r936331748\">PR review comment</a>:</p>\n<blockquote>\n<p>This looks unused ? (was it the reason for also allowing non_camel_case_types ?)</p>\n</blockquote>",
        "id": 291810761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659511998
    },
    {
        "content": "<p>lqd submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1059832265\">PR review</a>.</p>",
        "id": 291810972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659512158
    },
    {
        "content": "<p>lqd created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r936333974\">PR review comment</a>:</p>\n<blockquote>\n<p>how about \"e-dag\" instead of \"acyclic e-graph\" ?</p>\n</blockquote>",
        "id": 291810973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659512158
    },
    {
        "content": "<p>lqd edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r936331748\">PR review comment</a>.</p>",
        "id": 291811044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659512190
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1060536225\">PR review</a>.</p>",
        "id": 291868923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659541300
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r936819776\">PR review comment</a>:</p>\n<blockquote>\n<p>It's used by the generated code actually! For multi-extractors now there is an iterator protocol with an iterator type provided per extractor.</p>\n<p>The non-camel-case type name is a little awkward indeed, but I wanted to make it derived directly from the extractor name (and all these are camel-case) and not have the ISLE compiler understand snake-to-camel-case conversion, so snake-case it is...</p>\n</blockquote>",
        "id": 291868924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659541300
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1060539739\">PR review</a>.</p>",
        "id": 291869139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659541388
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r936821288\">PR review comment</a>:</p>\n<blockquote>\n<p>That could work too but I have some more acronymming based on aegraph (writeup to come) so I want to stick with this for now :-)</p>\n</blockquote>",
        "id": 291869140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659541388
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292221601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659745376
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292222161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659746078
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292230180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659756622
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292230701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659757370
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292235487,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659764897
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292237767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659768150
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292240550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659772220
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292268907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659806218
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292270324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659808163
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292286749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659831884
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292294271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659842696
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292336511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659901937
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292346823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659914040
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292357295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659929583
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292360792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659934602
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292360804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659934630
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292364521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659939591
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292537802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660032068
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292680047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660092468
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292683405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660096317
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292865175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660191365
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292867481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660194042
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292869469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660196003
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292870586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660196994
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292871599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660197811
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292871860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660197986
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292873179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660199035
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292878206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660202304
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 292881260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660204066
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a> from <code>clif-egg</code> to <code>main</code>.</p>",
        "id": 293941592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660756997
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r948239468\">PR review comment</a>:</p>\n<blockquote>\n<p>Does this mean it will do egraph optimizations even if opt_level is set to none?</p>\n</blockquote>",
        "id": 293943367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757524
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1076150312\">PR review</a>.</p>",
        "id": 293943368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757524
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1076154010\">PR review</a>.</p>",
        "id": 293943882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757705
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r948242089\">PR review comment</a>:</p>\n<blockquote>\n<p>This is a work-in-progress branch and I'm doing some hacking on some benchmarking infrastructure, and I wanted to name points-in-time by hashes only, without a separate config. We will definitely not enable opts if opts are disabled. Please note the commit comment and please disregard throwaway commits on my work-in-progress branch; there will be ample opportunity to review when the real PRs come.</p>\n</blockquote>",
        "id": 293943883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757705
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#pullrequestreview-1076158846\">PR review</a>.</p>",
        "id": 293944612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757931
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249#discussion_r948245244\">PR review comment</a>:</p>\n<blockquote>\n<p>Didn't see the commit message as I was looking at the github diff view for all changes since the last notification.</p>\n</blockquote>",
        "id": 293944615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757931
    },
    {
        "content": "<p>cfallin closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4249\">PR #4249</a>.</p>",
        "id": 300460442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663972127
    }
]