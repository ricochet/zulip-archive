[
    {
        "content": "<p>tiran opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p>WASI libc or wasmtime set wrong atime and mtime when <code>utimensat</code> is used with <code>NULL</code> timespec. The call is suppose to set the atime and mtime of the file to NOW, but it sets both to <code>0</code>. I can't say if the problem is in wasi-libc <a href=\"https://github.com/WebAssembly/wasi-libc/blob/main/libc-bottom-half/cloudlibc/src/libc/sys/stat/utimensat.c\"><code>__wasilibc_nocwd_utimensat</code></a>, <a href=\"https://github.com/WebAssembly/wasi-libc/blob/ba81b409b044f7b166cdf3db9572963b33d6c6ac/libc-bottom-half/cloudlibc/src/libc/sys/stat/stat_impl.h#L71-L108\"><code>utimens_get_timestamps</code></a>, or in wasmtime <code>path_filestat_set_times</code> implementation.</p>\n<h3>Test Case</h3>\n<p>Reproducer:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n\n#<span class=\"n\">define</span><span class=\"w\"> </span><span class=\"n\">TESTFN</span><span class=\"w\"> </span><span class=\"s\">\"utime.test\"</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">st</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"atime: %lld.%09ld, mtime: %lld.%09ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_atim</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_atim</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_mtim</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_mtim</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_WRONLY</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"test</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">utimensat</span><span class=\"p\">(</span><span class=\"n\">AT_FDCWD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile and run the reproducer with WASI-SDK's clang and wasmtime</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">gcc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">utime</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>utimensat</code> with timespec <code>NULL</code> should set the mtime and atime of the file to the current time.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">gcc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">utime</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">1653412556.499033757</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412556.499033757</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">1653412558.795059730</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412558.795059730</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>wasmtime sets atime and mtime to 0.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">0.000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412625.340814414</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">0.000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">0.000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>WASI SDK: 15.0</p>\n<p>Wasmtime version or commit: 0.36.0</p>\n<p>Operating system: Linux (Ubuntu 20.04 in podman on Fedora 36)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 283779594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653413289
    },
    {
        "content": "<p>tiran labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p>WASI libc or wasmtime set wrong atime and mtime when <code>utimensat</code> is used with <code>NULL</code> timespec. The call is suppose to set the atime and mtime of the file to NOW, but it sets both to <code>0</code>. I can't say if the problem is in wasi-libc <a href=\"https://github.com/WebAssembly/wasi-libc/blob/main/libc-bottom-half/cloudlibc/src/libc/sys/stat/utimensat.c\"><code>__wasilibc_nocwd_utimensat</code></a>, <a href=\"https://github.com/WebAssembly/wasi-libc/blob/ba81b409b044f7b166cdf3db9572963b33d6c6ac/libc-bottom-half/cloudlibc/src/libc/sys/stat/stat_impl.h#L71-L108\"><code>utimens_get_timestamps</code></a>, or in wasmtime <code>path_filestat_set_times</code> implementation.</p>\n<h3>Test Case</h3>\n<p>Reproducer:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n\n#<span class=\"n\">define</span><span class=\"w\"> </span><span class=\"n\">TESTFN</span><span class=\"w\"> </span><span class=\"s\">\"utime.test\"</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">st</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"atime: %lld.%09ld, mtime: %lld.%09ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_atim</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_atim</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_mtim</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_mtim</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_WRONLY</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"test</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">utimensat</span><span class=\"p\">(</span><span class=\"n\">AT_FDCWD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile and run the reproducer with WASI-SDK's clang and wasmtime</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">gcc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">utime</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>utimensat</code> with timespec <code>NULL</code> should set the mtime and atime of the file to the current time.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">gcc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">utime</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">1653412556.499033757</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412556.499033757</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">1653412558.795059730</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412558.795059730</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>wasmtime sets atime and mtime to 0.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">0.000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412625.340814414</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">0.000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">0.000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>WASI SDK: 15.0</p>\n<p>Wasmtime version or commit: 0.36.0</p>\n<p>Operating system: Linux (Ubuntu 20.04 in podman on Fedora 36)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 283779595,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653413290
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184#issuecomment-1136289385\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p>Could you provide the wasm file here to help reproduce?</p>\n<p>You can also try running locally with <code>RUST_LOG=wasi_common</code> which will print out an <code>strace</code>-ish format of wasi calls executed and can help determine whether the issue is with Wasmtime or with wasi-sdk.</p>\n</blockquote>",
        "id": 283785974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653416437
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184#issuecomment-1136292142\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p>I'm able to reproduce this. The RUST_LOG trace shows the flags values having <code>ATIM | MTIM</code>, and not <code>ATIM_NOW | MTIM_NOW</code>, and these appear to be the flags passed in from the wasm. I'll look at wasi-libc next.</p>\n</blockquote>",
        "id": 283786296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653416600
    },
    {
        "content": "<p>tiran <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184#issuecomment-1136296130\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"path_filestat_get\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"o\">=</span><span class=\"n\">Fd</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">SYMLINK_FOLLOW</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"o\">=*</span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"mh\">0x41d</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Filestat</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">dev</span>: <span class=\"mi\">64771</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ino</span>: <span class=\"mi\">8937277</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filetype</span>: <span class=\"nc\">RegularFile</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nlink</span>: <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span>: <span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">atim</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtim</span>: <span class=\"mi\">1653416690266718793</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ctim</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"fd_fdstat_get\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"o\">=</span><span class=\"n\">Fd</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Fdstat</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">fs_filetype</span>: <span class=\"nc\">CharacterDevice</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_flags</span>: <span class=\"nc\">APPEND</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_base</span>: <span class=\"nc\">FD_DATASYNC</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_READ</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_FDSTAT_SET_FLAGS</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_SYNC</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_WRITE</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_ADVISE</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_ALLOCATE</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_FILESTAT_GET</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_FILESTAT_SET_SIZE</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">FD_FILESTAT_SET_TIMES</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">POLL_FD_READWRITE</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fs_rights_inheriting</span>: <span class=\"p\">(</span><span class=\"n\">empty</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"fd_write\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"o\">=</span><span class=\"n\">Fd</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">iovs</span><span class=\"o\">=*</span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"mh\">0x10fb0</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">0.000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653416690.266718793</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"mi\">48</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"path_filestat_set_times\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"o\">=</span><span class=\"n\">Fd</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">SYMLINK_FOLLOW</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"o\">=*</span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"mh\">0x41d</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"n\">atim</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">mtim</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">fst_flags</span><span class=\"o\">=</span><span class=\"n\">ATIM</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">MTIM</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"path_filestat_get\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"o\">=</span><span class=\"n\">Fd</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">SYMLINK_FOLLOW</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"o\">=*</span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"mh\">0x41d</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"o\">=</span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">Filestat</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">dev</span>: <span class=\"mi\">64771</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ino</span>: <span class=\"mi\">8937277</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">filetype</span>: <span class=\"nc\">RegularFile</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nlink</span>: <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span>: <span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">atim</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtim</span>: <span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ctim</span>: <span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">wiggle</span><span class=\"w\"> </span><span class=\"n\">abi</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"s\">\"wasi_snapshot_preview1\"</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s\">\"fd_write\"</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">TRACE</span><span class=\"w\"> </span><span class=\"n\">wasi_common</span>::<span class=\"n\">snapshots</span>::<span class=\"n\">preview_1</span>::<span class=\"n\">wasi_snapshot_preview1</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"o\">=</span><span class=\"n\">Fd</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">iovs</span><span class=\"o\">=*</span><span class=\"n\">guest</span><span class=\"w\"> </span><span class=\"mh\">0x10fb0</span><span class=\"o\">/</span><span class=\"mi\">2</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 283786787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653416856
    },
    {
        "content": "<p>tiran <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184#issuecomment-1136298556\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/8765369/utime.zip\">utime.zip</a><br>\n</p>\n</blockquote>",
        "id": 283787127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653417013
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184#issuecomment-1136430526\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p>This turned out to be a bug in wasi-libc. It was passing uninitialized values into WASI functions, which previously worked because it only does so when those values aren't being used, however with the recent LLVM update, LLVM is now optimizing in a way which actively breaks this code.</p>\n<p>I've now opened <a href=\"https://github.com/WebAssembly/wasi-libc/pull/291\">https://github.com/WebAssembly/wasi-libc/pull/291</a> with a fix.</p>\n</blockquote>",
        "id": 283805043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653426255
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184#issuecomment-1145481792\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p>The fix is now in the <a href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-16\">wasi-sdk-16</a> release.</p>\n</blockquote>",
        "id": 284823363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654217779
    },
    {
        "content": "<p>sunfishcode closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<p>WASI libc or wasmtime set wrong atime and mtime when <code>utimensat</code> is used with <code>NULL</code> timespec. The call is suppose to set the atime and mtime of the file to NOW, but it sets both to <code>0</code>. I can't say if the problem is in wasi-libc <a href=\"https://github.com/WebAssembly/wasi-libc/blob/main/libc-bottom-half/cloudlibc/src/libc/sys/stat/utimensat.c\"><code>__wasilibc_nocwd_utimensat</code></a>, <a href=\"https://github.com/WebAssembly/wasi-libc/blob/ba81b409b044f7b166cdf3db9572963b33d6c6ac/libc-bottom-half/cloudlibc/src/libc/sys/stat/stat_impl.h#L71-L108\"><code>utimens_get_timestamps</code></a>, or in wasmtime <code>path_filestat_set_times</code> implementation.</p>\n<h3>Test Case</h3>\n<p>Reproducer:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">fcntl</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">sys</span><span class=\"o\">/</span><span class=\"n\">stat</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdlib</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n#<span class=\"n\">include</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unistd</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n\n#<span class=\"n\">define</span><span class=\"w\"> </span><span class=\"n\">TESTFN</span><span class=\"w\"> </span><span class=\"s\">\"utime.test\"</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">stat</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">st</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"s\">\"atime: %lld.%09ld, mtime: %lld.%09ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_atim</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_atim</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_mtim</span><span class=\"p\">.</span><span class=\"n\">tv_sec</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">st</span><span class=\"p\">.</span><span class=\"n\">st_mtim</span><span class=\"p\">.</span><span class=\"n\">tv_nsec</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">(</span><span class=\"n\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fd</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">O_CREAT</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">O_WRONLY</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"test</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">utimensat</span><span class=\"p\">(</span><span class=\"n\">AT_FDCWD</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">TESTFN</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">pstat</span><span class=\"p\">(</span><span class=\"n\">TESTFN</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile and run the reproducer with WASI-SDK's clang and wasmtime</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">gcc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">utime</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>utimensat</code> with timespec <code>NULL</code> should set the mtime and atime of the file to the current time.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">gcc</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">utime</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">1653412556.499033757</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412556.499033757</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">1653412558.795059730</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412558.795059730</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>wasmtime sets atime and mtime to 0.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">dir</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">utime</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">0.000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">1653412625.340814414</span><span class=\"w\"></span>\n<span class=\"n\">atime</span>: <span class=\"mf\">0.000000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mtime</span>: <span class=\"mf\">0.000000000</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>WASI SDK: 15.0</p>\n<p>Wasmtime version or commit: 0.36.0</p>\n<p>Operating system: Linux (Ubuntu 20.04 in podman on Fedora 36)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 284823364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654217779
    },
    {
        "content": "<p>tiran <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184#issuecomment-1145634321\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4184\">issue #4184</a>:</p>\n<blockquote>\n<blockquote>\n<p>The fix is now in the <a href=\"https://github.com/WebAssembly/wasi-sdk/releases/tag/wasi-sdk-16\">wasi-sdk-16</a> release.</p>\n</blockquote>\n<p>Thanks! Your patch fixed the utime tests in CPython's test suite.</p>\n</blockquote>",
        "id": 284841237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654238081
    }
]