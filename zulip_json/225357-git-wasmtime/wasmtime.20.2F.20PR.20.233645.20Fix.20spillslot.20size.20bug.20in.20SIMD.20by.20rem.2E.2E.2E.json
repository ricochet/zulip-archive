[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645\">PR #3645</a> from <code>fix-xmm-spillslot-fuzzbug</code> to <code>main</code>:</p>\n<blockquote>\n<p>Fixes a recently-received fuzzbug exposed by differential fuzzing against V8.</p>\n<p>This patch makes spillslot allocation, spilling and reloading all based<br>\non register class only. Hence when we have a 32- or 64-bit value in a<br>\n128-bit XMM register on x86-64 or vector register on aarch64, this<br>\nresults in larger spillslots and spills/restores.</p>\n<p>Why make this change, if it results in less efficient stack-frame usage?<br>\nSimply put, it is safer: there is always a risk when allocating<br>\nspillslots or spilling/reloading that we get the wrong type and make the<br>\nspillslot or the store/load too small. This was one contributing factor<br>\nto CVE-2021-32629, and is now the source of a fuzzbug in SIMD code that<br>\npuns an arbitrary user-controlled vector constant over another<br>\nstackslot. (If this were a pointer, that could result in RCE. SIMD is<br>\nnot yet on by default in a release, fortunately.)</p>\n<p>In particular, we have not been particularly careful about using moves<br>\nbetween values of different types, for example with <code>raw_bitcast</code> or<br>\nwith certain SIMD operations, and such moves indicate to <a href=\"http://regalloc.rs\">regalloc.rs</a><br>\nthat vregs are in equivalence classes and some arbitrary vreg in the<br>\nclass is provided when allocating the spillslot or spilling/reloading.<br>\nSince <a href=\"http://regalloc.rs\">regalloc.rs</a> does not track actual type, and since we haven't been<br>\ncareful about moves, we can't really trust this \"arbitrary vreg in<br>\nequivalence class\" to provide accurate type information.</p>\n<p>In the fix to CVE-2021-32629 we fixed this for integer registers by<br>\nalways spilling/reloading 64 bits; this fix can be seen as the analogous<br>\nchange for FP/vector regs.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 266848366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641322473
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645\">PR #3645</a>.</p>",
        "id": 266848367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641322473
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645\">PR #3645</a>.</p>",
        "id": 266848368,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641322473
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645#pullrequestreview-843906246\">PR review</a>.</p>",
        "id": 266849956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641323319
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645#pullrequestreview-843906246\">PR review</a>.</p>",
        "id": 266849957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641323319
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645#discussion_r778318871\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think this actually runs anything without <code>; run(...)</code> comments, right?</p>\n</blockquote>",
        "id": 266849958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641323319
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645\">PR #3645</a> from <code>fix-xmm-spillslot-fuzzbug</code> to <code>main</code>.</p>",
        "id": 266852906,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641325022
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645#pullrequestreview-843936873\">PR review</a>.</p>",
        "id": 266853040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641325098
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645#discussion_r778340367\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yes, good point. I played with this for a bit but ran into other issues (with the vmctx) and concluded it was simpler just to add the Wasm test directly, rather than capture its CLIF.</p>\n</blockquote>",
        "id": 266853041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641325098
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645#pullrequestreview-843938284\">PR review</a>.</p>",
        "id": 266853220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641325210
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645\">PR #3645</a> from <code>fix-xmm-spillslot-fuzzbug</code> to <code>main</code>.</p>",
        "id": 266860485,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641328979
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645\">PR #3645</a> from <code>fix-xmm-spillslot-fuzzbug</code> to <code>main</code>.</p>",
        "id": 266865366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641331487
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3645\">PR #3645</a>.</p>",
        "id": 266871419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1641334332
    }
]