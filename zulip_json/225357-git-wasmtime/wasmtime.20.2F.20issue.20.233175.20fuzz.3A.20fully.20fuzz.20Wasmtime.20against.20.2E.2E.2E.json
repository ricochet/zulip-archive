[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3175\">issue #3175</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/3124\">https://github.com/bytecodealliance/wasmtime/pull/3124</a> adds the initial steps for fuzzing Wasmtime against the official WebAssembly spec interpreter. There are several pieces to finish for more complete coverage:</p>\n<ul>\n<li>[ ] After execution, compare the memory contents of Wasmtime against the memory contents of the spec interpreter</li>\n<li>[ ] After execution, compare the global values of the module in Wasmtime against those in the spec interpreter</li>\n<li>[ ] Add support in the <code>wasm-spec-interpreter</code> crate for <code>v128</code> types; this implies turning on SIMD for the <code>differential_spec</code> fuzz target as well as merging the Wasm SIMD proposal into <a href=\"https://github.com/bytecodealliance/wasm-spec-mirror\">https://github.com/bytecodealliance/wasm-spec-mirror</a>.</li>\n<li>[ ] Add support in the <code>wasm-spec-interpreter</code> crate for <code>ref</code> types<br>\n</li>\n</ul>\n</blockquote>",
        "id": 249016702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1628619817
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3175\">issue #3175</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/3124\">https://github.com/bytecodealliance/wasmtime/pull/3124</a> adds the initial steps for fuzzing Wasmtime against the official WebAssembly spec interpreter. There are several pieces to finish for more complete coverage:</p>\n<ul>\n<li>[ ] After execution, compare the memory contents of Wasmtime against the memory contents of the spec interpreter</li>\n<li>[ ] After execution, compare the global values of the module in Wasmtime against those in the spec interpreter</li>\n<li>[x] Add support in the <code>wasm-spec-interpreter</code> crate for <code>v128</code> types; this implies turning on SIMD for the <code>differential_spec</code> fuzz target as well as merging the Wasm SIMD proposal into <a href=\"https://github.com/bytecodealliance/wasm-spec-mirror\">https://github.com/bytecodealliance/wasm-spec-mirror</a>.</li>\n<li>[ ] Add support in the <code>wasm-spec-interpreter</code> crate for <code>ref</code> types<br>\n</li>\n</ul>\n</blockquote>",
        "id": 294941591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661286525
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3175#issuecomment-1224831466\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3175\">issue #3175</a>:</p>\n<blockquote>\n<p>SIMD support added by @conrad-watt in #3843.</p>\n</blockquote>",
        "id": 294941683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661286587
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3175#issuecomment-1334607515\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3175\">issue #3175</a>:</p>\n<blockquote>\n<p>This is more-or-less done now modulo reference types, but that seems ok for now so I'm going to close.</p>\n</blockquote>",
        "id": 313404062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669940211
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3175\">issue #3175</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/3124\">https://github.com/bytecodealliance/wasmtime/pull/3124</a> adds the initial steps for fuzzing Wasmtime against the official WebAssembly spec interpreter. There are several pieces to finish for more complete coverage:</p>\n<ul>\n<li>[ ] After execution, compare the memory contents of Wasmtime against the memory contents of the spec interpreter</li>\n<li>[ ] After execution, compare the global values of the module in Wasmtime against those in the spec interpreter</li>\n<li>[x] Add support in the <code>wasm-spec-interpreter</code> crate for <code>v128</code> types; this implies turning on SIMD for the <code>differential_spec</code> fuzz target as well as merging the Wasm SIMD proposal into <a href=\"https://github.com/bytecodealliance/wasm-spec-mirror\">https://github.com/bytecodealliance/wasm-spec-mirror</a>.</li>\n<li>[ ] Add support in the <code>wasm-spec-interpreter</code> crate for <code>ref</code> types<br>\n</li>\n</ul>\n</blockquote>",
        "id": 313404064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669940212
    }
]