[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771#issuecomment-1225988550\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771\">issue #4771</a>:</p>\n<blockquote>\n<p>For reference cg_clif uses compiler-builtins intrinsics for 128bit multiplication and division.</p>\n</blockquote>",
        "id": 295086553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661360134
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771#issuecomment-1225992651\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771\">issue #4771</a>:</p>\n<blockquote>\n<p>I think we already support i128 multiplications (at least the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-arithmetic.clif\">test case</a> is enabled), but I'd still like to implement i128 div/rem and cleanup cg_clif's codegen!</p>\n</blockquote>",
        "id": 295087277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661360379
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771#issuecomment-1226002527\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771\">issue #4771</a>:</p>\n<blockquote>\n<p>Won't 128bit div and rem be rather large? Using compiler-builtins would avoid code bloat in those cases.</p>\n</blockquote>",
        "id": 295088926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661360920
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771#issuecomment-1226002527\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771\">issue #4771</a>:</p>\n<blockquote>\n<p>Won't 128bit div and rem be rather large? Using compiler-builtins avoids code bloat in those cases.</p>\n</blockquote>",
        "id": 295088952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661360930
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771#issuecomment-1226004933\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771\">issue #4771</a>:</p>\n<blockquote>\n<p>Well the plan was to do exactly that, lower them as libcalls, or are they not available in all platforms?</p>\n</blockquote>",
        "id": 295089272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661361057
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771#issuecomment-1226007480\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4771\">issue #4771</a>:</p>\n<blockquote>\n<p>I see. I believe it is available on all platforms. However LLVM has changed the abi of 128bit compiler builtins on windows before and this may happen again in the future.</p>\n</blockquote>",
        "id": 295089642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661361205
    }
]