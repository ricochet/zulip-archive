[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024\">PR #2024</a> from <code>no-std</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit expands the <code>#![no_std]</code> section of the documentation with<br>\nan FAQ-style set of words which explains in more detail about why we<br>\ndon't support <code>#![no_std]</code> at this time, and how we can support it in<br>\nthe future.</p>\n</blockquote>",
        "id": 203973497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594828191
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-449123394\">PR Review</a>.</p>",
        "id": 203982881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594832512
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-449123394\">PR Review</a>.</p>",
        "id": 203982882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594832512
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455196354\">PR Review Comment</a>:</p>\n<blockquote>\n<p>When the <code>no-std-compat</code> crate is considered, this paragraph feels overstated. <code>no-std-compat</code> eliminates the need to manually import from <code>alloc</code>, <code>core</code>, and other crates like <code>sync</code>. The only per-source-file clutter it adds is <code>use std::prelude::v1::*;</code>, which is still a burden, but it is a comparatively small one.</p>\n</blockquote>",
        "id": 203982883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594832512
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455193234\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This sentence \"The ambitious goals [...]\" feels unnecessary to the rest of the paragraph.</p>\n</blockquote>",
        "id": 203982884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594832513
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455181605\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The way this paragraph is worded, it sounds a little like the second sentence is contradicting the first. Could you reword this to make the reasoning a little clearer, along the lines of: Rust has no stable way to diagnose <code>no_std</code> errors in an otherwise <code>std</code> build =&gt; if we don't want it to break all the time we'd need a dedicated <code>no_std</code> CI build =&gt; that has costs in terms of CI times, CI maintenance, and developers having to do extra builds if they wish to avoid CI errors.</p>\n</blockquote>",
        "id": 203983021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594832562
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024\">PR #2024</a> from <code>no-std</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit expands the <code>#![no_std]</code> section of the documentation with<br>\nan FAQ-style set of words which explains in more detail about why we<br>\ndon't support <code>#![no_std]</code> at this time, and how we can support it in<br>\nthe future.</p>\n</blockquote>",
        "id": 203992456,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594836957
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-449218129\">PR Review</a>.</p>",
        "id": 203993095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594837259
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455251744\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I personally feel like <code>no-std-compat</code> is a good example of \"if it compiles it works, right?\" with a big emphasis on the question mark. It's trying to make the ecosystem better but in a way that fundamentally is not possible. The best example of this is the dependency on the <code>spin</code> crate to implement <code>std::sync::Mutex</code>. A spin lock is basically never what you want unless you're a kernel and can disable interrupts. Otherwise it's attempting to sidestep fundamental questions of \"how do I do multithreading or interact with the system scheduler\" where you can't really sidestep these questions.</p>\n<p>Crates like that also seem to be taking the fundamental stance of \"std will never attempt to fix any of these problems, right?\" when in fact PRs like <a href=\"https://github.com/rust-lang/rust/pull/74033\">https://github.com/rust-lang/rust/pull/74033</a> will basically fix the issue for us. If all you want is code to compile using <code>std</code> as-is the way it's written today, then we should be putting energy behind support in the standard library itself upstream. There really is no reason that <code>std</code> can't do what something like <code>no-std-compat</code> already does in a way that supports the already existing ecosystem idioms.</p>\n</blockquote>",
        "id": 203993096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594837259
    },
    {
        "content": "<p>iximeow submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-449223696\">PR Review</a>.</p>",
        "id": 203994175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594837744
    },
    {
        "content": "<p>iximeow created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455256961\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This paragraph sounds like testing <code>#![no_std]</code> incurs approximately the same CI concerns we'd have in supporting any other additional OS/target - is that a fair understanding?</p>\n</blockquote>",
        "id": 203994176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594837744
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-449244409\">PR Review</a>.</p>",
        "id": 203997716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594839466
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455273459\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah the CI testing isn't onerous, it's just not possible to do on stable right now. It's a cost to acknowledge as well but it's not like this is a showstopper or anything.</p>\n</blockquote>",
        "id": 203997717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594839466
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-449315988\">PR Review</a>.</p>",
        "id": 204010468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594845857
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455330633\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I agree, I'm just considering the perspective of a user of Wasmtime asking about <code>no_std</code> support: <code>no-std-compat</code> exists and works today, and doesn't do anything that would get in the way of better solutions.</p>\n</blockquote>",
        "id": 204010469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594845858
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-449998134\">PR Review</a>.</p>",
        "id": 204105390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594915614
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r455901384\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Do you think it's worth explicitly calling this out in the documentation here? Basically adding my comment as a new \"what about <code>no-std-compat</code>\" FAQ?</p>\n</blockquote>",
        "id": 204105392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594915615
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-450258965\">PR Review</a>.</p>",
        "id": 204151333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594938495
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r456113572\">PR Review Comment</a>:</p>\n<blockquote>\n<p>If  <a href=\"https://github.com/rust-lang/rust/issues/74033\">rust-lang/rust#74033</a> means that our options will change in the not too distant future, one option here is to replace the above paragraph with one that links to that, and points out that we'd prefer to avoid the thrash of updating all the files to a temporary solution when a better one is one the way. Then I don't think we'd even need to mention <code>no-std-compat</code>.</p>\n</blockquote>",
        "id": 204151335,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594938496
    },
    {
        "content": "<p>tschneidereit submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-450756662\">PR Review</a>.</p>",
        "id": 204220386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594999966
    },
    {
        "content": "<p>tschneidereit created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r456517333\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think we should at least link to <code>build-std</code>. However, IIUC it'll be quite some time until that reaches stable, so it'll probably not be a \"just do this\" answer anytime soon. Given that, perhaps we could also link to <code>no-std-compat</code> and point out that people <em>can</em> use it if it works for their use case, but that we don't include it for the reasons @alexcrichton stated above?</p>\n</blockquote>",
        "id": 204220387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594999967
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-450785784\">PR Review</a>.</p>",
        "id": 204226096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595002331
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r456539004\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>no-std-compat</code> by itself isn't sufficient to make Wasmtime run in <code>no_std</code>, because at least <code>mmap</code>. We may make that avoidable at some point, but that'll take time too. So I suggest just linking to <code>build-std</code>, and not <code>no-std-compat</code>, and just say that we'll wait until the better solutions arrive.</p>\n<p>Also, I think it's reasonable to ask people who want to do <code>no_std</code> things and don't want to wait for <code>build-std</code> features to stabilize to use nightly Rust for a Rust release cycle or two.</p>\n</blockquote>",
        "id": 204226097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595002331
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-450891140\">PR Review</a>.</p>",
        "id": 204245512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595012437
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r456621951\">PR Review Comment</a>:</p>\n<blockquote>\n<p>One thing I don't really understand though is in what context we're writing this information down. This section is under the question \"the patch is small, why not?\" and this sub-point is \"the idioms are different enough that it's nontrivial to do so\". I don't get the impression that people are frequently sending patches with <code>no-std-compat</code> being used. Apart from that I'm not really sure how to tweak the words already there.</p>\n<p>If y'all want I can write an explicit bullet saying \"<code>no-std-compat</code> doesn't work\", or I can add more words under \"my target doesn't have <code>std</code>\" pointing to <code>-Zbuild-std</code> and the PR I mentioned, but neither of those really changes the point that the idioms of <code>#![no_std]</code> are different than that of <code>std</code> in nontrivial ways.</p>\n<p>Also, unrelated to this PR itself, but do y'all think that we should be moving to <code>#![no_std]</code> today? I can't quite get a feeling for whether y'all are playing devil's advocate or are instead along the lines of \"I think we should do this and these words don't convince me we shouldn't\"</p>\n</blockquote>",
        "id": 204245513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595012437
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-450947578\">PR Review</a>.</p>",
        "id": 204257008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595018777
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r456666517\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I agree we shouldn't do <code>#![no_std]</code> today. As you mention, until we have a way to avoid calling <code>mmap</code>, it wouldn't matter.</p>\n<p>The <code>-Zbuild-std</code> thing sounds cool. I think we should mention/link to that, and say that it doesn't make sense to take on <code>no_std</code> changes with the current tools when better tools are on the horizon.</p>\n</blockquote>",
        "id": 204257009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595018777
    },
    {
        "content": "<p>tschneidereit submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-451470926\">PR Review</a>.</p>",
        "id": 204405124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595239611
    },
    {
        "content": "<p>tschneidereit created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r457246181\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This argument doesn't entirely cover other crates than Wasmtime in this repository, or in other repositories, such as <code>wasm-tools</code>. Would it make sense to include another question below, along the lines of \"The crate I want to use without <code>std</code> works with small changes, why not accept those\"?</p>\n<p>After that one, yet another question could be \"But I can't use <code>std</code>; what are my options?\", where the answer could link to <code>build-std</code>, pointing out that it's Nightly-only for now, but progressing.</p>\n</blockquote>",
        "id": 204405125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595239611
    },
    {
        "content": "<p>tschneidereit submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-451471695\">PR Review</a>.</p>",
        "id": 204405175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595239679
    },
    {
        "content": "<p>tschneidereit created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r457246888\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I just left another comment on the first question with a suggestion for how this might be structured. Also agreed that mentioning <code>no-std-compat</code> might not be needed.</p>\n</blockquote>",
        "id": 204405176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595239679
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024\">PR #2024</a> from <code>no-std</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit expands the <code>#![no_std]</code> section of the documentation with<br>\nan FAQ-style set of words which explains in more detail about why we<br>\ndon't support <code>#![no_std]</code> at this time, and how we can support it in<br>\nthe future.</p>\n</blockquote>",
        "id": 204672395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595427930
    },
    {
        "content": "<p>tschneidereit submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-453373826\">PR Review</a>.</p>",
        "id": 204672978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595428155
    },
    {
        "content": "<p>tschneidereit submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#pullrequestreview-453373826\">PR Review</a>.</p>",
        "id": 204672979,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595428155
    },
    {
        "content": "<p>tschneidereit created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024#discussion_r458835328\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: s/means/mean/</p>\n</blockquote>",
        "id": 204672980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595428155
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024\">PR #2024</a> from <code>no-std</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit expands the <code>#![no_std]</code> section of the documentation with<br>\nan FAQ-style set of words which explains in more detail about why we<br>\ndon't support <code>#![no_std]</code> at this time, and how we can support it in<br>\nthe future.</p>\n</blockquote>",
        "id": 204689261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595435292
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2024\">PR #2024</a>.</p>",
        "id": 205390554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596045214
    }
]