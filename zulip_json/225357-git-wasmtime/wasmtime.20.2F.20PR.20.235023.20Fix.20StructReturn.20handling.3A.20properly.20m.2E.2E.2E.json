[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a> from <code>fix-struct-ret</code> to <code>main</code>:</p>\n<blockquote>\n<p>The legalization of <code>StructReturn</code> was causing issues in the new call-handling code: the <code>StructReturn</code> ret was included in the <code>SigData</code> as if it were an actual CLIF-level return value, but it is not.</p>\n<p>Prior to using regalloc constraints for return values, we unconditionally included rax (or the architecture's usual return register) as a def, so it would be properly handled as \"clobbered\" by the regalloc. With the new scheme, we include defs on the call only for CLIF-level outputs. Callees with <code>StructReturn</code> args were thus not known to clobber the return-value register, and values might be corrupted.</p>\n<p>This PR updates the code to include a <code>StructReturn</code> ret as a clobber rather than a returned value in the relevant spots. I observed it causing saves/restores of rax in some CLIF that @bjorn3 provided me, but I was having difficulty minimizing this into a test-case that I would be comfortable including as a precise-output case (including the whole thing verbatim would lock down a bunch of other irrelevant details and cause test-update noise later). If we can find a more minimized example I'm happy to include it as a filetest.</p>\n<p>Fixes? #5018 (cc @bjorn3 to confirm?).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 302534277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664999893
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a>.</p>",
        "id": 302534280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664999893
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a>.</p>",
        "id": 302534281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664999893
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#discussion_r988343441\">PR review comment</a>:</p>\n<blockquote>\n<p>How do you feel about changing the loop bounds to <code>sigdata.num_rets()-num_rets .. sigdata.num_rets()</code>?</p>\n</blockquote>",
        "id": 302542636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665003137
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#pullrequestreview-1132034846\">PR review</a>.</p>",
        "id": 302542637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665003137
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a> from <code>fix-struct-ret</code> to <code>main</code>.</p>",
        "id": 302578321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665027223
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a> from <code>fix-struct-ret</code> to <code>main</code>.</p>",
        "id": 302578911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665027802
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#discussion_r988524442\">PR review comment</a>:</p>\n<blockquote>\n<p>Yup, much better!</p>\n</blockquote>",
        "id": 302579090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665027959
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#pullrequestreview-1132272086\">PR review</a>.</p>",
        "id": 302579091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665027960
    },
    {
        "content": "<p><strong>cfallin</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a> as ready for review.</p>",
        "id": 302716709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665081339
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#pullrequestreview-1133693007\">PR review</a>.</p>",
        "id": 302750248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665094398
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#pullrequestreview-1133693007\">PR review</a>.</p>",
        "id": 302750249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665094398
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#discussion_r989521940\">PR review comment</a>:</p>\n<blockquote>\n<p>Did this have to be named again to avoid holding a reference to self through the body of the loop?</p>\n</blockquote>",
        "id": 302750250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665094398
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#pullrequestreview-1133697088\">PR review</a>.</p>",
        "id": 302750923,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665094699
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023#discussion_r989524776\">PR review comment</a>:</p>\n<blockquote>\n<p>Yep, exactly, this was a borrow-checker appeasement measure. I'll add a comment to that effect.</p>\n</blockquote>",
        "id": 302750924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665094699
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a> from <code>fix-struct-ret</code> to <code>main</code>.</p>",
        "id": 302751279,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665094888
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a>.</p>",
        "id": 302751369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665094923
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5023\">PR #5023</a>.</p>",
        "id": 302762507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665101679
    }
]