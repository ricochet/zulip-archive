[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823\">PR #6823</a> from <code>bytecodealliance:pch/wasi_join_background_tasks</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This method flushes output and terminates background tasks. Background tasks still terminate as part of Drop!</p>\n<p>The problem with the current implementation is that there is no way to wait for output buffered in host background tasks to flush before aborting those tasks as part of dropping the Store/Table. This means that e.g. for a trivial component that prints \"hello world\\n\" to stdout and returns, if the Store&amp;Table drop immediately after execution of the component completes, there is a race and the output may not happen at all.</p>\n<p>I don't really love this design, but we got backed into a corner because all of the alternatives we could think up are worse:</p>\n<ul>\n<li>We can't just get rid of the abort-on-drop completely (\"daemonize\" the tasks)  because that means that streams that are connected to e.g. a stalled client connection will consume resources forever, which is not acceptable in some embeddings.</li>\n<li>We can't ensure flushing on drop of a table/store because it requires an await, and rust does not have an async drop</li>\n<li>We can't add an explicit destructor to a table/store which will terminate tasks, and if this destructor is not called tasks will \"daemonize\", because that means cancellation of the future executing a component before the explicit destructor is called will end up daemonizing the task.</li>\n<li>We could configure all AsyncWriteStreams (and any other stream impls that spawn a task) at creation, or at insertion to the table, with whether they should daemonize on drop or not. This would mean plumbing a bunch of config into places it currently is not.</li>\n</ul>\n<p>Therefore, the only behavior we could come up with was to keep the abort-on-drop behavior for background tasks, and add methods to ensure that background tasks are joined (finished) gracefully. This means that both sync and async users of WasiCtx will need to call the appropriate method to wait on background tasks. This is easy enough for users to miss, but we decided that the alternatives are worse.</p>\n<p>Closes <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6811\">https://github.com/bytecodealliance/wasmtime/issues/6811</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 383095851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691535189
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823\">PR #6823</a>.</p>",
        "id": 383095852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691535190
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823\">PR #6823</a>.</p>",
        "id": 383095854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691535190
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823\">PR #6823</a>.</p>",
        "id": 383096011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691535260
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823\">PR #6823</a>.</p>",
        "id": 383781185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691711050
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823\">PR #6823</a>.</p>",
        "id": 383782677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691711998
    },
    {
        "content": "<p>rylev submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823#pullrequestreview-1573231209\">PR review</a>.</p>",
        "id": 383872034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691743451
    },
    {
        "content": "<p>rylev submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823#pullrequestreview-1573231209\">PR review</a>.</p>",
        "id": 383872035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691743451
    },
    {
        "content": "<p>rylev created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823#discussion_r1291062203\">PR review comment</a>:</p>\n<blockquote>\n<p>I do wonder if this should also take a timeout just like the sync version. This might encourage users to do the right thing and it has the added benefit of being symetrical with the sync version.</p>\n</blockquote>",
        "id": 383872037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691743451
    },
    {
        "content": "<p>rylev created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823#discussion_r1291059584\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>// In order to make sure output is flushed before dropping, use `flush_output`.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 383872038,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691743451
    },
    {
        "content": "<p>rylev created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823#discussion_r1291063933\">PR review comment</a>:</p>\n<blockquote>\n<p>Nit: is this necessary if you have to check for the pending op anyway down below?</p>\n</blockquote>",
        "id": 383872039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691743451
    },
    {
        "content": "<p>rylev created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823#discussion_r1291052636\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this be <code>sync_flush_output</code>?</p>\n</blockquote>",
        "id": 383872040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1691743451
    },
    {
        "content": "<p>pchickey closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6823\">PR #6823</a>.</p>",
        "id": 385773138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692317800
    }
]