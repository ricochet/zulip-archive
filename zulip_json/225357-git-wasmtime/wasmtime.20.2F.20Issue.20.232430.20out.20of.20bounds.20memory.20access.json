[
    {
        "content": "<p>ZW007 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I am running a standalone wasm file by using  <strong>wasmtime  --dir=.  mainWasi.wasm</strong><br>\nThe wasm needs to read some local files, the size of local files in total  is 10MB</p>\n<p>Error: failed to run main module <code>mainWasi.wasm</code></p>\n<p>Caused by:<br>\n    0: failed to invoke command default<br>\n    1: wasm trap: out of bounds memory access<br>\n       wasm backtrace:<br>\n         0: 0x29cb - &lt;unknown&gt;!Predict<br>\n         1: 0x346d - &lt;unknown&gt;!testing<br>\n         2: 0x38ef - &lt;unknown&gt;!foo<br>\n         3: 0x39eb - &lt;unknown&gt;!__original_main<br>\n         4:  0x2c1 - &lt;unknown&gt;!_start</p>\n<p>I wonder if I can allocate more memory for wasmtime? In lucet, i can use --min-reserved-size, but haven't found similar in wasmtime</p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 217241094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605775194
    },
    {
        "content": "<p>ZW007 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I am running a standalone wasm file by using  <strong>wasmtime  --dir=.  mainWasi.wasm</strong><br>\nThe wasm needs to read some local files, the size of local files in total  is 10MB</p>\n<p>Error: failed to run main module <code>mainWasi.wasm</code></p>\n<p>Caused by:<br>\n    0: failed to invoke command default<br>\n    1: wasm trap: out of bounds memory access<br>\n       wasm backtrace:<br>\n         0: 0x29cb - &lt;unknown&gt;!Predict<br>\n         1: 0x346d - &lt;unknown&gt;!testing<br>\n         2: 0x38ef - &lt;unknown&gt;!foo<br>\n         3: 0x39eb - &lt;unknown&gt;!__original_main<br>\n         4:  0x2c1 - &lt;unknown&gt;!_start</p>\n<p>I wonder if I can allocate more memory for wasmtime? In lucet, i can use --min-reserved-size, but haven't found similar in wasmtime, but even when i use  lucetc-wasi --min-reserved-size 6442450944 -o <a href=\"http://mainLucet.so\">mainLucet.so</a> mainWasi.wasm in lucet, I still get the error thread 'main' panicked at 'instance can be created: ModuleError(IncorrectModule(\"heap spec sizes would overflow: HeapSpec { reserved_size: 6442450944, guard_size: 4194304, initial_size: 131072, max_size: None }\"))', lucet-wasi/src/main.rs:239:24</p>\n<p>What I am running is a standalone lenet inference task. I dont think it can be called a large app. Maybe I should try to read just one image from the file system, rather than the whole t10k-images-idx3-ubyte which is 7.8MB. </p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 217246083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605778602
    },
    {
        "content": "<p>ZW007 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I am running a standalone wasm file by using  <strong>wasmtime  --dir=.  mainWasi.wasm</strong><br>\nThe wasm needs to read some local files, the size of local files in total  is 10MB</p>\n<p>Error: failed to run main module <code>mainWasi.wasm</code></p>\n<p>Caused by:<br>\n    0: failed to invoke command default<br>\n    1: wasm trap: out of bounds memory access<br>\n       wasm backtrace:<br>\n         0: 0x29cb - &lt;unknown&gt;!Predict<br>\n         1: 0x346d - &lt;unknown&gt;!testing<br>\n         2: 0x38ef - &lt;unknown&gt;!foo<br>\n         3: 0x39eb - &lt;unknown&gt;!__original_main<br>\n         4:  0x2c1 - &lt;unknown&gt;!_start</p>\n<p>I wonder if I can allocate more memory for wasmtime? In lucet, i can use --min-reserved-size, but haven't found similar in wasmtime, but even when i use  <strong>lucetc-wasi --min-reserved-size 6442450944 -o <a href=\"http://mainLucet.so\">mainLucet.so</a> mainWasi.wasm</strong> to compile in lucet, I still get the error in lucet run: thread 'main' panicked at 'instance can be created: ModuleError(IncorrectModule(\"heap spec sizes would overflow: HeapSpec { reserved_size: 6442450944, guard_size: 4194304, initial_size: 131072, max_size: None }\"))', lucet-wasi/src/main.rs:239:24</p>\n<p>What I am running is a standalone lenet inference task. I dont think it can be called a large app. Maybe I should try to read just one image from the file system, rather than the whole t10k-images-idx3-ubyte which is 7.8MB. </p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 217246298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605778720
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730480631\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I think this is probably unrelated to the memory limits for the wasm module but rather this looks like a \"segfault\" in the wasm module itself where it's reading/writing memory out of bounds. Are you sure though this is related to memory allocation?</p>\n</blockquote>",
        "id": 217292258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605802507
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730486300\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>I think this is probably unrelated to the memory limits for the wasm module but rather this looks like a \"segfault\" in the wasm module itself where it's reading/writing memory out of bounds. Are you sure though this is related to memory allocation?</p>\n</blockquote>\n<p>@alexcrichton I do not think there is a problem of the wasm module itself. I have tried <strong>emcc</strong> and nodejs, the LeNet dnn reference task <strong>works fine</strong>: (I have to  allow_memory_growth to make it work, and I also use --embed-file so that nodejs can access local file: model and image file) <br>\n<strong>emcc -s ALLOW_MEMORY_GROWTH=1 --embed-file ./ -I ./ main.c lenet.c -lm -o</strong> </p>\n<p>In wasmtime, I did <br>\n<strong>wasm32-wasi-clang   -I ./ lenet.c main.c -lm -o mainWasi.wasm</strong><br>\nThen I run with <br>\n<strong>wasmtime --dir=. mainWasi.wasm</strong> <br>\nMaybe is the file I read too large, (around 10MB), so i need somehow more space?</p>\n</blockquote>",
        "id": 217293670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605803067
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730489721\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I'd recommend going from the backtrace and looking in the wasm module, for example in the wasm file what instruction is at offset 0x29cb in the <code>Predict</code> function? Is that a memory allocation function or just a normal load/store? If it's the latter then this is likely a bug with the wasm module itself.</p>\n</blockquote>",
        "id": 217294545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605803403
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730508399\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'd recommend going from the backtrace and looking in the wasm module, for example in the wasm file what instruction is at offset 0x29cb in the <code>Predict</code> function? Is that a memory allocation function or just a normal load/store? If it's the latter then this is likely a bug with the wasm module itself.</p>\n</blockquote>\n<p>@alexcrichton  Thank you Alex, but I dont know how can I debug and trace in wasmtime (. There is no access to the local file in Predict function, because it was done before that,  Predict(lenet, test_data[i], 10); where lenet and test_date[] are model and image that has been loaded from local file. <br>\nThe main.c called   Predict function:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/main.c#L46\">https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/main.c#L46</a><br>\nHere is Predict() function:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L269\">https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L269</a><br>\nAnd in Predict(), we have:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L150\">https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L150</a></p>\n</blockquote>",
        "id": 217299187,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605805288
    },
    {
        "content": "<p>ZW007 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730508399\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'd recommend going from the backtrace and looking in the wasm module, for example in the wasm file what instruction is at offset 0x29cb in the <code>Predict</code> function? Is that a memory allocation function or just a normal load/store? If it's the latter then this is likely a bug with the wasm module itself.</p>\n</blockquote>\n<p>@alexcrichton  Thank you Alex, but I dont know how can I debug and trace in wasmtime (. There is no access to the local file in Predict function, because it was done before that,  Predict(lenet, test_data[i], 10); where lenet and test_date[] are model and image that has been loaded from local file. <br>\nThe main.c called   Predict function:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/main.c#L46\">https://github.com/ZW007/lenet5/blob/245d95cdc141eb46fc5e58193e239f8cb8245e15/main.c#L46</a><br>\nHere is Predict() function:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L269\">https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L269</a><br>\nAnd in Predict(), we have:<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L150\">https://github.com/ZW007/lenet5/blob/6b60eb9fd8233e4503c5ff9b637229810ec4b719/lenet.c#L150</a></p>\n<p>Did you mean by looking up wabt format of my wasm module <br>\nThere are many i32.load or <a href=\"http://i32.store\">i32.store</a> offset, but no one is 0x29cb </p>\n</blockquote>",
        "id": 217312324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605811264
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730566556\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>wasm module<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/45d809876f4b9b707cf992b80576f1b41cb69c3b/mainWasi.wat#L4028\">https://github.com/ZW007/lenet5/blob/45d809876f4b9b707cf992b80576f1b41cb69c3b/mainWasi.wat#L4028</a></p>\n</blockquote>",
        "id": 217313041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605811604
    },
    {
        "content": "<p>ZW007 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730566556\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>@alexcrichton  wasm module<br>\n<a href=\"https://github.com/ZW007/lenet5/blob/45d809876f4b9b707cf992b80576f1b41cb69c3b/mainWasi.wat#L4028\">https://github.com/ZW007/lenet5/blob/45d809876f4b9b707cf992b80576f1b41cb69c3b/mainWasi.wat#L4028</a></p>\n</blockquote>",
        "id": 217313224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605811688
    },
    {
        "content": "<p>ZW007 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430#issuecomment-730832553\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2430\">Issue #2430</a>:</p>\n<blockquote>\n<p>I tested a new lenet5 code, again, it works fine for nodejs and emscripten, but not wasmtime. This time, code is similar, and I also use the command<br>\nwasm32-wasi-clang  -I ./ mat.c net.c -lm -o net.wasm<br>\nwasmtime --dir=. net.wasm<br>\nBut, I got a different error, not out of bounds memory access error, but a unreachable (<br>\nI was wondering if this could also be caused by module itself @alexcrichton </p>\n<p>Error: failed to run main module <code>net.wasm</code></p>\n<p>Caused by:<br>\n    0: failed to invoke command default<br>\n    1: wasm trap: unreachable<br>\n       wasm backtrace:<br>\n         0:  0x1f3 - &lt;unknown&gt;!unreachable:main<br>\n         1: 0x25d8 - &lt;unknown&gt;!__main_argc_argv<br>\n         2: 0x2654 - &lt;unknown&gt;!__main_void<br>\n         3: 0x26bc - &lt;unknown&gt;!__original_main<br>\n         4:  0x1ff - &lt;unknown&gt;!_start</p>\n</blockquote>",
        "id": 217360038,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605845429
    }
]