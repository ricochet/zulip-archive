[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1094#issuecomment-772677261\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1094\">Issue #1094</a>:</p>\n<blockquote>\n<p>I believe the new style backends have good SIMD support. In any case there are other issues tracking SIMD support for the individual new style backends.</p>\n</blockquote>",
        "id": 225048235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612372728
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1094\">Issue #1094</a>:</p>\n<blockquote>\n<p>$ cat x.clif</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">haswell</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">vector_split_args</span><span class=\"p\">(</span><span class=\"n\">i32x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x2</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">ebb0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i32x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bxor</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>$ cranelift/target/debug/clif-util compile -d x.clif</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">vector_split_arg</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rsi</span><span class=\"p\">])</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rax</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">%</span><span class=\"n\">rdx</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                                </span><span class=\"n\">ebb0</span><span class=\"p\">(</span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"p\">]</span><span class=\"w\">                                 </span><span class=\"n\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconcat</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isplit</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isplit</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isplit</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isplit</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v14</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bxor</span><span class=\"w\"> </span><span class=\"n\">v10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v12</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v15</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bxor</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconcat</span><span class=\"w\"> </span><span class=\"n\">v14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v15</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isplit</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v18</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v19</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isplit</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v20</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bxor</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v18</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v21</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bxor</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v19</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconcat</span><span class=\"w\"> </span><span class=\"n\">v20</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v21</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"o\">-</span><span class=\"p\">]</span><span class=\"w\">                                 </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconcat</span><span class=\"w\"> </span><span class=\"n\">v8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v9</span><span class=\"w\"></span>\n<span class=\"w\">                                    </span><span class=\"n\">v22</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v23</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vsplit</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">Op1ret</span><span class=\"err\">#</span><span class=\"n\">c3</span><span class=\"p\">]</span><span class=\"w\">                         </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v22</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v23</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"o\">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">inst1</span>: <span class=\"nc\">v22</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">ghost</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"n\">used</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">real</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">Op1ret</span><span class=\"err\">#</span><span class=\"n\">c3</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"></span>\n\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">verifier</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">detected</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">above</span><span class=\"p\">).</span><span class=\"w\"> </span><span class=\"n\">Compilation</span><span class=\"w\"> </span><span class=\"n\">aborted</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>It looks like vsplit/vconcat are inserted as part of ABI legalization? Are they supposed to be subsequently legalized into something else?</p>\n<p>If you use \"target arm\" it also fails but there is no vsplit of v1, it just attempts to \"return v1\" and that fails with \"Return must have an encoding\".</p>\n</blockquote>",
        "id": 225056908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612376128
    }
]