[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6220#issuecomment-1511684750\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6220\">issue #6220</a>:</p>\n<blockquote>\n<p>Indeed! This is inspired by <a href=\"https://godbolt.org/z/xv6q8PG3s\">LLVM's alternate lowerings for casts in Rust</a> which produce different sequences of wasm instructions. Piping these through Cranelift the old shift-based lowering generates two shifts while the \"new\" <code>i32.extend8_s</code> generates a single <code>movsx</code> instruction. Given that <code>ireduce</code> is typically a noop with respect to backends I figured it'd be good to get this two-instruction folding into a single-instruction folding. Additionally I figured that the purpose of adding <code>i32.extend8_s</code> was to be a bit more optimal/compact and we may as well try to represent both of these equivalently in the IR.</p>\n<p>I'll add some tests though to the backend for the codegen too!</p>\n</blockquote>",
        "id": 350561814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681748039
    }
]