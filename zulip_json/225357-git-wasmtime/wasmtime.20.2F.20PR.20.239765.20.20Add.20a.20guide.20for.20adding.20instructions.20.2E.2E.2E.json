[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a> from <code>alexcrichton:pulley-new-instructions</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>In helping others contribute to Pulley I've written up the steps I took<br>\nto make this commit itself. I've picked a random test in <code>misc_testsuite</code><br>\nthat previously didn't work on Pulley and was relatively small. I<br>\nimplemented a few lowerings and some new instructions and now the test<br>\npasses. I've added <code>pulley/CONTRIBUTING.md</code> to document the experience<br>\nalong the way in case anyone else is interested to help out in the<br>\nfuture.</p>\n</blockquote>",
        "id": 486719960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733619354
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 486719961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733619354
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 486719962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733619354
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 486719963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733619354
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 486719964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733619355
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#issuecomment-2525364170\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>:</p>\n<blockquote>\n<p>I'll note that this is built on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9760\">https://github.com/bytecodealliance/wasmtime/pull/9760</a> so only the last commit here is the guide part. </p>\n</blockquote>",
        "id": 486720030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733619385
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 487028113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733758792
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878194230\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>you're interested in helping to improve the situation. This is intended to be a\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878204227\">PR review comment</a>:</p>\n<blockquote>\n<p>Just to make it more clear which args are for <code>cargo</code> and which are for <code>wasmtime</code>:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>$ cargo run --features pulley -- wast --target pulley64 ./tests/misc_testsuite/control-flow.wast\n````\n~~~\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#pullrequestreview-2492492285\">PR review</a>:</p>\n<blockquote>\n<p>Looks great!</p>\n<p>I have a bunch of nitpicks and suggestions to make things flow a little smoother IMO or to link to other references and resources, but those are tiny nitpicks and this is fantastic.</p>\n<p>Excited to start onboarding new contributors with this!</p>\n</blockquote>",
        "id": 487274749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878193285\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>## Adding an instruction to Pulley\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878277046\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>`cranelift/codegen/src/isa/pulley_shared/lower.isle`.\n\nOur ISLE lowering rules are generally written like this:\n\n\\```lisp\n(rule (lower &lt;CLIF&gt;)\n      &lt;Pulley&gt;)\n\\```\n\nThis means \"when lowering Cranelift's mid-level IR down to Pulley bytecode, and we match the snippet `&lt;CLIF&gt;`, replace it with `&lt;Pulley&gt;`\". (For more details, see the [ISLE Language Reference](https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/isle/docs/language-reference.md) and [How ISLE is Integrated with Cranelift](https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/docs/isle-integration.md).)\n\nIn our case, we need to match an `sdiv` CLIF instruction that is operating on 32-bit values (this is the `(has_type $I32 ...)` bit) and then replace it with our new Pulley `xdiv32_s` instruction:\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878207606\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>the same test under a variety of configurations, but the test is expected to fail under Pulley. You can update the `WastTest::should_fail` method in\n`crates/wast-util/src/lib.rs` to say the test is expected to pass, and then you\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878206364\">PR review comment</a>:</p>\n<blockquote>\n<p>stray empty line<br>\n</p>\n</blockquote>",
        "id": 487274757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878246443\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>method is used to specifically match the width and signedness of the instruction itself, signed\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878279670\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>Note that ISLE constructors for Pulley instructions, including the `pulley_xdivs32_s`\nconstructor for our new `xdiv32_s` Pulley instruction, are automatically\ngenerated from the `for_each_op!` macro.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878232816\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>This defines the snake-case name of the instruction (`xdiv32_s`) that is used by the disassembler and visitor trait, the upper-camel-case name of the instruction (`I32DivS`) used for the Rust type and `enum` variant, and immediates and operands in the instruction\nitself. In this case it's a binary operation using integer (\"x\") registers.\n\nNote: By convention, we tend to include the class (\"x\") and width (\"32\") of\nregisters operated upon by an instruction in its name. This distinguishes\nbetween, for example, 32-bit integer addition (`xadd32`) and 64-bit floating\npoint addition (`fadd64`).\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878200689\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>for an up-to-date list check out the `WastTest::should_fail` method in `crates/wast-util/src/lib.rs`. Here we're going\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878290433\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>Success!\n\nBut we aren't quite done yet: the new lowerings we added might have made additional tests that previously failed start passing as well. If so, then we also want to mark those tests as expected to pass now. We can double check by running the full `wast` test suite:\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878239617\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    |                 ---------------------------------------------------------------------------- `xdiv32_s` from trait\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878238683\">PR review comment</a>:</p>\n<blockquote>\n<p>FWIW, I would probably name the instruction <code>xdivs32</code> but it really doesn't matter. What does matter is that the guide is consistent, so as not to confuse contributors:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>error[E0046]: not all trait items implemented, missing: `xdiv32_s`\n   --&gt; pulley/src/interp.rs:807:1\n    |\n807 | impl OpVisitor for Interpreter&lt;'_&gt; {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `xdiv32_s` in implementation\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878284234\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>assertion is no longer true! Update the `WastTest::should_fail` method in `crates/wast-util/src/lib.rs` so that it expects the test to pass and we'll see:\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843998
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878296301\">PR review comment</a>:</p>\n<blockquote>\n<p>Could we make <code>done_trap</code> generic over an instruction and then avoid the need to do <code>let me = self.current_pc::&lt;...&gt;();</code> and instead do</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ControlFlow</span><span class=\"p\">::</span><span class=\"n\">Break</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">done_trap</span><span class=\"p\">::</span><span class=\"o\">&lt;..</span><span class=\"p\">.</span><span class=\"o\">&gt;</span><span class=\"p\">())</span>\n</code></pre></div>\n<p>or even fold the <code>ControlFlow::Break</code> into the helper?</p>\n<p>This both delays the computation until its demanded (which LLVM can probably do, but might be foiled if there are zero/overflow whatever checks hidden in there) and is a little more concise at usage/call sites.</p>\n</blockquote>",
        "id": 487274769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733843999
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878251254\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>When we run our test again we don't get a compilation error anymore, but instead we see the ISLE lowering error again!\n\n\\`\\`\\`\n$ cargo run --features pulley wast --target pulley64 ./tests/misc_testsuite/control-flow.wast\n    Finished `dev` profile [unoptimized + debuginfo] target(s) in 0.08s\n     Running `target/debug/wasmtime wast --target pulley64 ./tests/misc_testsuite/control-flow.wast`\nError: failed to run script file './tests/misc_testsuite/control-flow.wast'\nCaused by:\n    0: failed directive on ./tests/misc_testsuite/control-flow.wast:77:1\n    1: Compilation error: Unsupported feature: should be implemented in ISLE: inst = `v5 = sdiv.i32 v2, v3`, type = `Some(types::I32)`\n\\`\\`\\`\n\nThis leads us to the next part...\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487274783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733844001
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#pullrequestreview-2492743134\">PR review</a>.</p>",
        "id": 487281098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733845255
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878337751\">PR review comment</a>:</p>\n<blockquote>\n<p>Heh you can see I switched halfway through :)</p>\n</blockquote>",
        "id": 487281101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733845256
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 487284519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733845899
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#pullrequestreview-2492775139\">PR review</a>.</p>",
        "id": 487284637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733845920
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878357813\">PR review comment</a>:</p>\n<blockquote>\n<p>Excellent idea <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 487284640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733845920
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 487284704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733845924
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#discussion_r1878400137\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe also link to this PR at the end?</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>To view the complete pull request that implemented `xdiv32_s` and `xand32` Pulley instructions and got `./tests/misc_testsuite/control-flow.wast` passing (and also introduced this documentation) check out https://github.com/bytecodealliance/wasmtime/pull/9765\n\nThanks for helping out!\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 487290941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733847506
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765#pullrequestreview-2492846335\">PR review</a>.</p>",
        "id": 487290942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733847506
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 487292084,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733847808
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 487292116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733847820
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 487293585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733848210
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9765\">PR #9765</a>.</p>",
        "id": 487301353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733850327
    }
]