[
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> from <code>clif-stack-frame-return-pointer</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is the initial part of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4535\">https://github.com/bytecodealliance/wasmtime/issues/4535</a></p>\n<p>TODO: I need to implement the s390x lowering for these new instructions.</p>\n</blockquote>",
        "id": 291646148,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659396201
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1057957839\">PR review</a>.</p>",
        "id": 291647106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r934991927\">PR review comment</a>:</p>\n<blockquote>\n<p>I would instead assert that the register is virtual; we should never have a preg-to-preg move inserted as that would either have undefined behavior (if allocatable register) or would break the ABI (move to SP or FP).</p>\n</blockquote>",
        "id": 291647107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r934992648\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we assert that <code>rm</code> is one of a few registers on an allow-list?</p>\n<p>Ideally the property we want here is that it is not an allocatable register. Moving from a register managed by the regalloc has undefined behavior: we don't know what the value will be. But grabbing the <code>MachineEnv</code> and doing an assert on the lists of registers there is sort of cumbersome, so it's probably better if we limit it first to e.g. <code>FP</code> and <code>SP</code> (with a comment describing the real condition) and then add more regs to the list if we need them.</p>\n</blockquote>",
        "id": 291647108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r934992893\">PR review comment</a>:</p>\n<blockquote>\n<p>Rather than duplicate the <code>mov</code> code, could we do <code>Inst::Mov { .. }.emit(...)</code>, in the same way other pseudoinsts work?</p>\n</blockquote>",
        "id": 291647109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1057957839\">PR review</a>.</p>",
        "id": 291647110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r934991199\">PR review comment</a>:</p>\n<blockquote>\n<p>a tiny bikeshed-color nit, but I think usually this intrinsic refers to the \"return address\" rather than \"return pointer\" (e.g., <code>__builtin_return_address()</code> in GCC/Clang); perhaps we could call it that?</p>\n</blockquote>",
        "id": 291647111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r934993049\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah! I see you had the same thought I did, reading a bit further :-)</p>\n<p>I think the answer is definitely yes!</p>\n</blockquote>",
        "id": 291647112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r934994203\">PR review comment</a>:</p>\n<blockquote>\n<p>I suspect we could avoid the extra copy here by defining the return-address intrinsic to load directly from <code>8(%rbp)</code>, i.e. creating an <code>Amode</code> with <code>rbp</code> as a base register.</p>\n</blockquote>",
        "id": 291647114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659397005
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> from <code>clif-stack-frame-return-pointer</code> to <code>main</code>.</p>",
        "id": 291651596,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659400818
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> from <code>clif-stack-frame-return-pointer</code> to <code>main</code>.</p>",
        "id": 291653719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659403174
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> from <code>clif-stack-frame-return-pointer</code> to <code>main</code>.</p>",
        "id": 291653727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659403191
    },
    {
        "content": "<p><strong>fitzgen</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> as ready for review.</p>",
        "id": 291653773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659403211
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a>.</p>",
        "id": 291653775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659403214
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> from <code>clif-stack-frame-return-pointer</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is the initial part of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4535\">https://github.com/bytecodealliance/wasmtime/issues/4535</a></p>\n<p><del>TODO: I need to implement the s390x lowering for these new instructions.</del></p>\n</blockquote>",
        "id": 291653995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659403456
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1058016615\">PR review</a>.</p>",
        "id": 291654684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659404286
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1058016615\">PR review</a>.</p>",
        "id": 291654685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659404286
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r935037404\">PR review comment</a>:</p>\n<blockquote>\n<p>This is to avoid providing the base reg as an operand to the operand collector, I guess?</p>\n<p>I wonder if it might be cleaner, or less error-prone at least, to handle this case in the <code>Amode::get_operands</code> and <code>Amode::with_allocs</code> methods instead: skip providing rbp (or rsp) as an operand, and skip pulling an alloc from the AllocationConsumer if the original register was rbp (or rsp).</p>\n<p>(I'm actually not sure; I'm going back and forth right now.)</p>\n<p>The general concern I had with this is that we may not handle the same lowering everywhere. But actually I think everything funnels to this one lowering helper so maybe this is sufficient.</p>\n<p>If we do stick to this approach, let's add a comment where we define the <code>RbpOffset</code> arm that it must be used for rbp (as opposed to the generic forms) because rbp cannot be given as an arg to regalloc.</p>\n</blockquote>",
        "id": 291654686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659404286
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1059086654\">PR review</a>.</p>",
        "id": 291735913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659458719
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r935813210\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah I actually like this better.</p>\n</blockquote>",
        "id": 291735914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659458719
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> from <code>clif-stack-frame-return-pointer</code> to <code>main</code>.</p>",
        "id": 291738744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659460031
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1059125196\">PR review</a>.</p>",
        "id": 291742857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462111
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1059125196\">PR review</a>.</p>",
        "id": 291742858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462111
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r935862181\">PR review comment</a>:</p>\n<blockquote>\n<p>I think we need to mirror this conditional over to <code>with_allocs</code> <a href=\"https://github.com/bytecodealliance/wasmtime/blob/c77bec4dcb33973a386d924474d95bab6b23e263/cranelift/codegen/src/isa/x64/inst/args.rs#L370\">here</a> as well; otherwise we have a thing that consumes more allocs than the operands it reports. This will be kind-of-harmless today because <code>Amode</code>'s operands are always placed at the end of the inst by convention (because they're variable-length and that was easier wrt reuse-indices) but if a pseudoinst ever grows two <code>Amode</code>s or puts something after an <code>Amode</code> that could be an issue.</p>\n</blockquote>",
        "id": 291742859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462111
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r935840358\">PR review comment</a>:</p>\n<blockquote>\n<p>We should assert here that base and index are not rbp or rsp I think, now that we're admitting we may use these registers in an <code>Amode</code>, just for consistency...</p>\n</blockquote>",
        "id": 291742860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462111
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r935862289\">PR review comment</a>:</p>\n<blockquote>\n<p>Just a suggestion to use something like <code>preg_stack</code> instead of r15, since this is actually not an ISA requirement - other ABIs use different registers as stack pointer.</p>\n</blockquote>",
        "id": 291743088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462213
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1059157322\">PR review</a>.</p>",
        "id": 291743089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462213
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#discussion_r935863013\">PR review comment</a>:</p>\n<blockquote>\n<p>I'd remove gpr(14), since this <em>is</em> actually allocatable.  And again preferably use stack_reg instead of hardcoding 15.</p>\n</blockquote>",
        "id": 291743090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462213
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573#pullrequestreview-1059157322\">PR review</a>.</p>",
        "id": 291743092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659462213
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a> from <code>clif-stack-frame-return-pointer</code> to <code>main</code>.</p>",
        "id": 291762451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659471202
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4573\">PR #4573</a>.</p>",
        "id": 291772105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659476239
    }
]