[
    {
        "content": "<p>bnjbvr opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>:</p>\n<blockquote>\n<p>This adds support for a simpler way to profile with <code>perf</code>, using perf maps files. While <code>jitdump</code> support is pretty effective and complete when you have access to DWARF metadata, the <code>perf-inject</code> step may take lots of time, and it is not optimized at all when modules contain lots of functions. (In our embedding, I've stopped <code>perf-inject</code> after it ran for 5 hours and didn't complete, while creating 175K <code>.so</code> objects.) Simplistic support for perf maps enable basic profiling: caller/callee trees, top/bottom time analysis, flamegraphs etc., and works very nicely when the wasm modules have many functions.</p>\n<p>I've also tweaked the documentation and tried to make the feature available in the C API too.</p>\n</blockquote>",
        "id": 342301002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678971008
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>.</p>",
        "id": 342313723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678973813
    },
    {
        "content": "<p>bnjbvr edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>:</p>\n<blockquote>\n<p>This adds support for a simpler way to profile with <code>perf</code>, using perf maps files. While <code>jitdump</code> support is pretty effective and complete when you have access to DWARF metadata, the <code>perf-inject</code> step may take lots of time, and it is not optimized at all when modules contain lots of functions. (In our embedding, I've stopped <code>perf-inject</code> after it ran for 5 hours and didn't complete, while creating 175K <code>.so</code> objects.) Simplistic support for perf maps enable basic profiling: caller/callee trees, top/bottom time analysis, flamegraphs etc., and works very nicely when the wasm modules have many functions.</p>\n<p>I've also tweaked the documentation and tried to make the feature available in the C API too.</p>\n<p>I haven't put this behind a feature toggle because this profiling agent does very little, so it's always compiled _when running Linux_. For consistency I could add one, if you prefer.</p>\n</blockquote>",
        "id": 342314551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678973984
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1343958421\">PR review</a>.</p>",
        "id": 342335351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678978147
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1343958421\">PR review</a>.</p>",
        "id": 342335354,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678978148
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1138805138\">PR review comment</a>:</p>\n<blockquote>\n<p>Given the text-based format of this file I think this may need to do some more sanitization of the <code>name</code> since any utf-8 sequence is allowed in wasm modules. For example I suspect a function with a newline in the name might cause issues here?</p>\n</blockquote>",
        "id": 342335357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678978148
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1138806621\">PR review comment</a>:</p>\n<blockquote>\n<p>Given the text-based format of this file and the multiple writes done here, this might be a good case for using <code>BufWriter</code> to write out all this data and then using a <code>flush()</code> to finish it when the whole module has been written.</p>\n</blockquote>",
        "id": 342335358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678978148
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1138810367\">PR review comment</a>:</p>\n<blockquote>\n<p>We may be getting somewhat close to the limit of \"now it's probably better to have <code>--profile=jitdump</code>\" as opposed to a separate flag-per-strategy, but that's fine to defer to a different PR.</p>\n</blockquote>",
        "id": 342335359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678978148
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1344373443\">PR review</a>.</p>",
        "id": 342379812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678987533
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1139105897\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point; I've sanitized by removing <code>\\n</code> and <code>\\r</code>, not sure if there's any other control character I should be worried about?</p>\n</blockquote>",
        "id": 342379814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678987533
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>.</p>",
        "id": 342382526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678988263
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>.</p>",
        "id": 342382915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678988370
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>.</p>",
        "id": 342387653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678989708
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1344485483\">PR review</a>.</p>",
        "id": 342393106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678991309
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1344485483\">PR review</a>.</p>",
        "id": 342393107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678991310
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1139205322\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah I missed this earlier, but I think we'll want ot do something other than ignoring errors here ideally. If an error happens it should probably \"close\" the file and terminate all future writing to it I suspect? (along with perhaps a warning message printed?)</p>\n</blockquote>",
        "id": 342393110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678991310
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1139206942\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this may want a flush at the end too?</p>\n<p>Also with a <code>BufWriter</code> I think you could pass that into <code>make_line</code> to avoid the intermediate string allocation (e.g. write directly to the buffer). Although not required of course, that's ok to defer to if it's ever actually an issue.</p>\n</blockquote>",
        "id": 342393111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678991310
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1348629104\">PR review</a>.</p>",
        "id": 343128486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679321148
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1142175329\">PR review comment</a>:</p>\n<blockquote>\n<p>Good point! I've added log messages and early-returns. Looks like a <code>BufWriter</code> will automatically flush in its Drop impl, so we can avoid doing it explicitly in most early-returns.</p>\n</blockquote>",
        "id": 343128580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679321163
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>.</p>",
        "id": 343131450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679321737
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1348651922\">PR review</a>.</p>",
        "id": 343131810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679321806
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#discussion_r1142189953\">PR review comment</a>:</p>\n<blockquote>\n<p>Turns out <code>File</code> is also a <code>Write</code> implementator, so could have <code>make_line</code> take <code>&amp;mut dyn Write</code> and use it here without having a <code>BufWriter</code> (since there's only one write in this function, it didn't seem worth having an extra buffer).</p>\n</blockquote>",
        "id": 343131812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679321807
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030#pullrequestreview-1348684475\">PR review</a>.</p>",
        "id": 343136342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679322714
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a>.</p>",
        "id": 343136385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679322721
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>.</p>",
        "id": 343147967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679325097
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a> from <code>perf-map</code> to <code>main</code>.</p>",
        "id": 343159011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679327405
    },
    {
        "content": "<p>bnjbvr has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a>.</p>",
        "id": 343161205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679327916
    },
    {
        "content": "<p>bnjbvr merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6030\">PR #6030</a>.</p>",
        "id": 343177583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679331929
    }
]