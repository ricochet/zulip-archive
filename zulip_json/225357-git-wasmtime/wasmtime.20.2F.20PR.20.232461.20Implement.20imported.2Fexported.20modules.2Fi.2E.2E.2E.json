[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461\">PR #2461</a> from <code>import-export-instances-modules</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit implements the final piece of the module linking proposal<br>\nwhich is to flesh out the support for importing/exporting instances and<br>\nmodules. This ended up having a few changes:</p>\n<ul>\n<li>\n<p>Two more <code>PrimaryMap</code> instances are now stored in an <code>Instance</code>. The value<br>\n  for instances is <code>InstanceHandle</code> (pretty easy) and for modules it's<br>\n<code>Box&lt;dyn Any&gt;</code> (less easy).</p>\n</li>\n<li>\n<p>The custom host state for <code>InstanceHandle</code> for <code>wasmtime</code> is now<br>\n<code>Arc&lt;TypeTables</code> to be able to fully reconstruct an instance's types<br>\n  just from its instance.</p>\n</li>\n<li>\n<p>Type matching for imports now has been updated to take<br>\n  instances/modules into account.</p>\n</li>\n</ul>\n<p>One of the main downsides of this implementation is that type matching<br>\nof imports is duplicated between wasmparser and wasmtime, leading to<br>\nposssible bugs especially in the subtelties of module linking. I'm not<br>\nsure how best to unify these two pieces of validation, however, and it<br>\nmay be more trouble than it's worth.</p>\n<p>cc #2094</p>\n<p>Note that this is built on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2451\">https://github.com/bytecodealliance/wasmtime/pull/2451</a> so only the last commit is relevant.</p>\n</blockquote>",
        "id": 218494017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606863470
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461\">PR #2461</a> from <code>import-export-instances-modules</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit implements the final piece of the module linking proposal<br>\nwhich is to flesh out the support for importing/exporting instances and<br>\nmodules. This ended up having a few changes:</p>\n<ul>\n<li>\n<p>Two more <code>PrimaryMap</code> instances are now stored in an <code>Instance</code>. The value<br>\n  for instances is <code>InstanceHandle</code> (pretty easy) and for modules it's<br>\n<code>Box&lt;dyn Any&gt;</code> (less easy).</p>\n</li>\n<li>\n<p>The custom host state for <code>InstanceHandle</code> for <code>wasmtime</code> is now<br>\n<code>Arc&lt;TypeTables</code> to be able to fully reconstruct an instance's types<br>\n  just from its instance.</p>\n</li>\n<li>\n<p>Type matching for imports now has been updated to take<br>\n  instances/modules into account.</p>\n</li>\n</ul>\n<p>One of the main downsides of this implementation is that type matching<br>\nof imports is duplicated between wasmparser and wasmtime, leading to<br>\nposssible bugs especially in the subtelties of module linking. I'm not<br>\nsure how best to unify these two pieces of validation, however, and it<br>\nmay be more trouble than it's worth.</p>\n<p>cc #2094</p>\n<p>Note that this is built on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2451\">https://github.com/bytecodealliance/wasmtime/pull/2451</a> so only the last commit is relevant.</p>\n</blockquote>",
        "id": 218632482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606949908
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461\">PR #2461</a> from <code>import-export-instances-modules</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit implements the final piece of the module linking proposal<br>\nwhich is to flesh out the support for importing/exporting instances and<br>\nmodules. This ended up having a few changes:</p>\n<ul>\n<li>\n<p>Two more <code>PrimaryMap</code> instances are now stored in an <code>Instance</code>. The value<br>\n  for instances is <code>InstanceHandle</code> (pretty easy) and for modules it's<br>\n<code>Box&lt;dyn Any&gt;</code> (less easy).</p>\n</li>\n<li>\n<p>The custom host state for <code>InstanceHandle</code> for <code>wasmtime</code> is now<br>\n<code>Arc&lt;TypeTables</code> to be able to fully reconstruct an instance's types<br>\n  just from its instance.</p>\n</li>\n<li>\n<p>Type matching for imports now has been updated to take<br>\n  instances/modules into account.</p>\n</li>\n</ul>\n<p>One of the main downsides of this implementation is that type matching<br>\nof imports is duplicated between wasmparser and wasmtime, leading to<br>\nposssible bugs especially in the subtelties of module linking. I'm not<br>\nsure how best to unify these two pieces of validation, however, and it<br>\nmay be more trouble than it's worth.</p>\n<p>cc #2094</p>\n<p>Note that this is built on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2451\">https://github.com/bytecodealliance/wasmtime/pull/2451</a> so only the last commit is relevant.</p>\n</blockquote>",
        "id": 218634813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606951465
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/peterhuene\">peterhuene</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461\">PR #2461</a>.</p>",
        "id": 218634815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606951469
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#pullrequestreview-543350687\">PR Review</a>.</p>",
        "id": 218645391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#pullrequestreview-543350687\">PR Review</a>.</p>",
        "id": 218645392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#discussion_r534595346\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Clippy nit:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        ty\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 218645393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#discussion_r534595085\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Clippy nit:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        sig\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 218645394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#discussion_r534603237\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"bike\" class=\"emoji emoji-1f6b2\" role=\"img\" title=\"bike\">:bike:</span>shed: perhaps this method should be renamed to <code>build</code> now given the mutation and \"builder\" name?</p>\n</blockquote>",
        "id": 218645395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#discussion_r534577443\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This comment seems incongruent with the method.</p>\n</blockquote>",
        "id": 218645396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#discussion_r534606057\">PR Review Comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            // we acquired the handle from an instance in the store.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 218645397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461#discussion_r534598966\">PR Review Comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// Validates that the `actual_imports` list of module imports matches the\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 218645398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606960468
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461\">PR #2461</a> from <code>import-export-instances-modules</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit implements the final piece of the module linking proposal<br>\nwhich is to flesh out the support for importing/exporting instances and<br>\nmodules. This ended up having a few changes:</p>\n<ul>\n<li>\n<p>Two more <code>PrimaryMap</code> instances are now stored in an <code>Instance</code>. The value<br>\n  for instances is <code>InstanceHandle</code> (pretty easy) and for modules it's<br>\n<code>Box&lt;dyn Any&gt;</code> (less easy).</p>\n</li>\n<li>\n<p>The custom host state for <code>InstanceHandle</code> for <code>wasmtime</code> is now<br>\n<code>Arc&lt;TypeTables</code> to be able to fully reconstruct an instance's types<br>\n  just from its instance.</p>\n</li>\n<li>\n<p>Type matching for imports now has been updated to take<br>\n  instances/modules into account.</p>\n</li>\n</ul>\n<p>One of the main downsides of this implementation is that type matching<br>\nof imports is duplicated between wasmparser and wasmtime, leading to<br>\nposssible bugs especially in the subtelties of module linking. I'm not<br>\nsure how best to unify these two pieces of validation, however, and it<br>\nmay be more trouble than it's worth.</p>\n<p>cc #2094</p>\n<p>Note that this is built on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2451\">https://github.com/bytecodealliance/wasmtime/pull/2451</a> so only the last commit is relevant.</p>\n</blockquote>",
        "id": 218707044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607008667
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461\">PR #2461</a> from <code>import-export-instances-modules</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit implements the final piece of the module linking proposal<br>\nwhich is to flesh out the support for importing/exporting instances and<br>\nmodules. This ended up having a few changes:</p>\n<ul>\n<li>\n<p>Two more <code>PrimaryMap</code> instances are now stored in an <code>Instance</code>. The value<br>\n  for instances is <code>InstanceHandle</code> (pretty easy) and for modules it's<br>\n<code>Box&lt;dyn Any&gt;</code> (less easy).</p>\n</li>\n<li>\n<p>The custom host state for <code>InstanceHandle</code> for <code>wasmtime</code> is now<br>\n<code>Arc&lt;TypeTables</code> to be able to fully reconstruct an instance's types<br>\n  just from its instance.</p>\n</li>\n<li>\n<p>Type matching for imports now has been updated to take<br>\n  instances/modules into account.</p>\n</li>\n</ul>\n<p>One of the main downsides of this implementation is that type matching<br>\nof imports is duplicated between wasmparser and wasmtime, leading to<br>\nposssible bugs especially in the subtelties of module linking. I'm not<br>\nsure how best to unify these two pieces of validation, however, and it<br>\nmay be more trouble than it's worth.</p>\n<p>cc #2094</p>\n<p>Note that this is built on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2451\">https://github.com/bytecodealliance/wasmtime/pull/2451</a> so only the last commit is relevant.</p>\n</blockquote>",
        "id": 218709722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607009588
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2461\">PR #2461</a>.</p>",
        "id": 218716565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607012144
    }
]