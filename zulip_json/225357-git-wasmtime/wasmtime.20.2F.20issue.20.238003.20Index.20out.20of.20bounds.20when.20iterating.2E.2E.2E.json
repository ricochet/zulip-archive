[
    {
        "content": "<p><a href=\"https://github.com/jugglerchris\">jugglerchris</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8003\">Issue #8003</a>.</p>",
        "id": 423714082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709074844
    },
    {
        "content": "<p>jugglerchris opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8003\">issue #8003</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>A trivial component built with this wit (complete test at <a href=\"https://github.com/jugglerchris/wasmtime-index-error-test\">https://github.com/jugglerchris/wasmtime-index-error-test</a> ; commit a129bcaf4207eb6b6d49f58c70e518cd91e65304 in case anything changes):</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package comp:test;\n\nworld w {\n    export foo: interface {\n        resource myres;\n        make: func() -&gt; myres;\n    }\n}\n</code></pre></div>\n<p>and this host code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"target/comp.wasm\"</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component_ty</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">         </span><span class=\"n\">linker</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">substituted_component_type</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">component_ty</span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">dbg!</span><span class=\"p\">((</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">item</span><span class=\"p\">));</span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">ComponentItem</span>::<span class=\"n\">ComponentInstance</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>First build the component (<code>make</code> in the above repo)</li>\n<li>cargo run</li>\n</ul>\n<h3>Expected Results</h3>\n<p>The test program lists exports from the \"foo\" interface including the \"make\" function</p>\n<h3>Actual Results</h3>\n<p>A panic when iterating over the nested exports:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">9</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"s\">\"foo\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">ComponentInstance</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">ComponentInstance</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"n\">Handle</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">index</span>: <span class=\"nc\">TypeComponentInstanceIndex</span><span class=\"p\">(</span>\n<span class=\"w\">                    </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"p\">),</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chris</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"mf\">18.0.1</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">component</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">925</span>:<span class=\"mi\">66</span>:\n<span class=\"nc\">index</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">bounds</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">index</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 18.0.1</p>\n<p>Operating system: Ubuntu 22.04.3</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>I can't rule out me doing something dumb - I'm early in my WASM and Wasmtime journey - but I think an index OOB seems like an issue.</p>\n</blockquote>",
        "id": 423714084,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709074844
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8003#issuecomment-1969765219\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8003\">issue #8003</a>:</p>\n<blockquote>\n<p>Definitely a bug in Wasmtime, thanks for the report! I'll try to take a look at this later this week.</p>\n</blockquote>",
        "id": 423893244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709150520
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8003\">issue #8003</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>A trivial component built with this wit (complete test at <a href=\"https://github.com/jugglerchris/wasmtime-index-error-test\">https://github.com/jugglerchris/wasmtime-index-error-test</a> ; commit a129bcaf4207eb6b6d49f58c70e518cd91e65304 in case anything changes):</p>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package comp:test;\n\nworld w {\n    export foo: interface {\n        resource myres;\n        make: func() -&gt; myres;\n    }\n}\n</code></pre></div>\n<p>and this host code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">()).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"target/comp.wasm\"</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component_ty</span><span class=\"w\"> </span><span class=\"o\">=</span>\n<span class=\"w\">         </span><span class=\"n\">linker</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">substituted_component_type</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">component_ty</span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">exports</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"fm\">dbg!</span><span class=\"p\">((</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">item</span><span class=\"p\">));</span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">            </span><span class=\"n\">ComponentItem</span>::<span class=\"n\">ComponentInstance</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">instance</span><span class=\"p\">.</span><span class=\"n\">exports</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"p\">}</span>\n<span class=\"w\">            </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">()</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>First build the component (<code>make</code> in the above repo)</li>\n<li>cargo run</li>\n</ul>\n<h3>Expected Results</h3>\n<p>The test program lists exports from the \"foo\" interface including the \"make\" function</p>\n<h3>Actual Results</h3>\n<p>A panic when iterating over the nested exports:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">16</span>:<span class=\"mi\">9</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">item</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"s\">\"foo\"</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"n\">ComponentInstance</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">ComponentInstance</span><span class=\"p\">(</span>\n<span class=\"w\">            </span><span class=\"n\">Handle</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">index</span>: <span class=\"nc\">TypeComponentInstanceIndex</span><span class=\"p\">(</span>\n<span class=\"w\">                    </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n<span class=\"w\">                </span><span class=\"p\">),</span>\n<span class=\"w\">            </span><span class=\"p\">},</span>\n<span class=\"w\">        </span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">chris</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"mf\">18.0.1</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">component</span><span class=\"o\">/</span><span class=\"n\">types</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">925</span>:<span class=\"mi\">66</span>:\n<span class=\"nc\">index</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">bounds</span>: <span class=\"nc\">the</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">index</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 18.0.1</p>\n<p>Operating system: Ubuntu 22.04.3</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>I can't rule out me doing something dumb - I'm early in my WASM and Wasmtime journey - but I think an index OOB seems like an issue.</p>\n</blockquote>",
        "id": 424091134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709234351
    },
    {
        "content": "<p>jugglerchris <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8003#issuecomment-1972620179\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8003\">issue #8003</a>:</p>\n<blockquote>\n<p>Thanks for the quick fix!  Looks good on main now.</p>\n</blockquote>",
        "id": 424170106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709276518
    }
]