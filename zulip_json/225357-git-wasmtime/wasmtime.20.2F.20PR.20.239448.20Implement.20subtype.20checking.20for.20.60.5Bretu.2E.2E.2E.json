[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a> from <code>fitzgen:subtype-checking-for-call-indirect</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>When Wasm GC is enabled, the <code>[return_]call_indirect</code> instructions must do full subtyping checks, rather than simple strict equality type checks.</p>\n<p>This adds an additional branch and slow path to indirect calls, so we only emit code for this check when Wasm GC is enabled, even though it would otherwise be correct to always emit it (because the <code>is_subtype</code> check would always fail for non-equal types, since there is no subtyping before Wasm GC).</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 476192213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728583819
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>.</p>",
        "id": 476192214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728583819
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>.</p>",
        "id": 476192216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728583819
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>.</p>",
        "id": 476192217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728583820
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>.</p>",
        "id": 476192218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728583820
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>.</p>",
        "id": 476192428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728583888
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>.</p>",
        "id": 476198691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728585484
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448#pullrequestreview-2361279266\">PR review</a>:</p>\n<blockquote>\n<p>Mind filing an issue for this performance issue as well? This to me is going to be a hard blocker for enabling GC by default because a failed subtype check will involve acquiring a global lock even for non-GC modules which may not be appropriate for all embedders.</p>\n</blockquote>",
        "id": 476213464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728590145
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448#discussion_r1796008513\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this be <code>features.function_references() || features.gc()</code>? Or just <code>features.function_references()</code>?</p>\n</blockquote>",
        "id": 476213466,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728590146
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448#pullrequestreview-2361280981\">PR review</a>.</p>",
        "id": 476213491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728590152
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448#pullrequestreview-2361484688\">PR review</a>.</p>",
        "id": 476231722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728597204
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448#discussion_r1796139938\">PR review comment</a>:</p>\n<blockquote>\n<p>I believe just <code>gc</code></p>\n</blockquote>",
        "id": 476231723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728597204
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448#issuecomment-2406110810\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>:</p>\n<blockquote>\n<blockquote>\n<p>Mind filing an issue for this performance issue as well? This to me is going to be a hard blocker for enabling GC by default because a failed subtype check will involve acquiring a global lock even for non-GC modules which may not be appropriate for all embedders.</p>\n</blockquote>\n<p>Added an item to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9351\">https://github.com/bytecodealliance/wasmtime/issues/9351</a></p>\n<p>I think much of this is equivalent to making <code>ref.test</code> fast (i.e. expose the supertypes arrays to wasm so that we can do the O(1) subtype check inline, rather than behind a lock) but even after we address that, it is another branch to another slow path to do a full subtype check when the types don't exactly match.</p>\n</blockquote>",
        "id": 476232340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728597438
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9448\">PR #9448</a>.</p>",
        "id": 476238402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728600152
    }
]