[
    {
        "content": "<p>TerrorJack labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6227\">issue #6227</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;errno.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdlib.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;unistd.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">chdir</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"s\">\"bar\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"rb\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"n\">strerror</span><span class=\"p\">(</span><span class=\"n\">errno</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">errno</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Use <code>wasi-sdk</code> to compile &amp; link <code>foo.c</code> above to <code>foo.wasm</code>, then:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">touch</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">bar</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">ln</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">bar</span><span class=\"w\"> </span><span class=\"n\">bar</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">mapdir</span><span class=\"w\"> </span><span class=\"o\">/</span>::<span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"cp\">$PWD</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>The example above would fail with <code>Operation not permitted</code>. However, I've explicitly passed <code>--mapdir /::/</code> to <code>wasmtime</code>, so the entire host filesystem should be visible within the wasm module, and symlink resolution from <code>$PWD/bar</code> to <code>/tmp/bar</code> should work out of the box.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>wasmtime-cli 7.0.0</code></p>\n<p>Operating system: <code>Ubuntu 22.10</code></p>\n<p>Architecture: <code>x86_64</code></p>\n</blockquote>",
        "id": 350659944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681786823
    },
    {
        "content": "<p>TerrorJack opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6227\">issue #6227</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;errno.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdlib.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;unistd.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">argc</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">char</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">argv</span><span class=\"p\">[])</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">chdir</span><span class=\"p\">(</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]);</span>\n<span class=\"w\">  </span><span class=\"k\">if</span><span class=\"p\">(</span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"s\">\"bar\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"rb\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"nb\">NULL</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"n\">strerror</span><span class=\"p\">(</span><span class=\"n\">errno</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">errno</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Use <code>wasi-sdk</code> to compile &amp; link <code>foo.c</code> above to <code>foo.wasm</code>, then:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">touch</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">bar</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">ln</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">bar</span><span class=\"w\"> </span><span class=\"n\">bar</span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">mapdir</span><span class=\"w\"> </span><span class=\"o\">/</span>::<span class=\"o\">/</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"cp\">$PWD</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>The example above would fail with <code>Operation not permitted</code>. However, I've explicitly passed <code>--mapdir /::/</code> to <code>wasmtime</code>, so the entire host filesystem should be visible within the wasm module, and symlink resolution from <code>$PWD/bar</code> to <code>/tmp/bar</code> should work out of the box.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>wasmtime-cli 7.0.0</code></p>\n<p>Operating system: <code>Ubuntu 22.10</code></p>\n<p>Architecture: <code>x86_64</code></p>\n</blockquote>",
        "id": 350659949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681786824
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6227#issuecomment-1512379298\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6227\">issue #6227</a>:</p>\n<blockquote>\n<p>This may be the prohibition on absolute symlinks. If you instead <code>ln -s ../../tmp/bar bar</code>, does it work?</p>\n</blockquote>",
        "id": 350661940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681788135
    },
    {
        "content": "<p>TerrorJack <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6227#issuecomment-1513907556\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6227\">issue #6227</a>:</p>\n<blockquote>\n<p>It works with <code>../../tmp/bar</code>. But still this looks like a bug to me, why does wasmtime unconditionally prohibit absolute symlinks even if the resolved result belongs to a mapped host directory?</p>\n</blockquote>",
        "id": 350903926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681860413
    }
]