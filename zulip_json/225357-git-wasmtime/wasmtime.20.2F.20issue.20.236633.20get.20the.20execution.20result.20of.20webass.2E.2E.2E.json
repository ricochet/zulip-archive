[
    {
        "content": "<p>lyuxiaosu opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633\">issue #6633</a>:</p>\n<blockquote>\n<p>Hi, I use wasmtime C API to load a .wat module (which uses WASI)  and execute it. It can successfully execute the module and print out \"Hello World!\" on the stdout. However, I want to retrieve the output as a host variable, is it possible? <br>\nI defined the following code trying to get the result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime_val_t</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n<span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">run</span><span class=\"p\">.</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to call run\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"output result is %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">wasmtime_externref_data</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">externref</span><span class=\"p\">));</span>\n</code></pre></div>\n<p>This code doesn't work and it print out:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>I made something wrong here or is it possible to get the output? I think it should malloc memory for <code>results</code> on the host runtime and then <code>wasmtime_func_call</code> will write the output to it, however, now the error seems not the memory allocation issue. Any suggestions for this. Thanks very much.</p>\n</blockquote>",
        "id": 368699766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687469818
    },
    {
        "content": "<p>lyuxiaosu edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633\">issue #6633</a>:</p>\n<blockquote>\n<p>Hi, I use wasmtime C API to load a .wat module (which uses WASI)  and execute it. It can successfully execute the module and print out \"Hello World!\" on the stdout. However, I want to retrieve the output as a host runtime variable, is it possible? <br>\nI defined the following code trying to get the result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime_val_t</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n<span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">run</span><span class=\"p\">.</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to call run\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"output result is %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">wasmtime_externref_data</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">externref</span><span class=\"p\">));</span>\n</code></pre></div>\n<p>This code doesn't work and it print out:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>I made something wrong here or is it possible to get the output? I think it should malloc memory for <code>results</code> on the host runtime and then <code>wasmtime_func_call</code> will write the output to it, however, now the error seems not the memory allocation issue. Any suggestions for this. Thanks very much.</p>\n</blockquote>",
        "id": 368699883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687469868
    },
    {
        "content": "<p>lyuxiaosu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633#issuecomment-1603357060\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633\">issue #6633</a>:</p>\n<blockquote>\n<p>The .wat module I used doesn't return a char* string result, it just print out \"Hello World!\" and I want to retrieve this \"Hello World!\". </p>\n</blockquote>",
        "id": 368701366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687470452
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633#issuecomment-1603411467\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633\">issue #6633</a>:</p>\n<blockquote>\n<p>It sounds like you want to capture stdout.</p>\n<p>The Wasmtime C API currently offers two options for what to do with the guest's stdout: you can direct it to a file using <code>wasi_config_set_stdout_file</code>, or have it forwarded to the host's stdout with <code>wasi_config_inherit_stdout</code>.</p>\n<p>In your case the best I think you can do today is have the output written to a file and then read the contents of that file after the guest exits.</p>\n<p>I believe there are more options if you use Wasmtime's Rust API instead, so the C API could provide other options for what to do with stdout, but nobody has implemented those.</p>\n<p>Or, if you can change the code that's running in the guest, then you could pick another way of passing the string out instead of using stdout.</p>\n</blockquote>",
        "id": 368710648,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687474609
    },
    {
        "content": "<p>lyuxiaosu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633#issuecomment-1603430892\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633\">issue #6633</a>:</p>\n<blockquote>\n<p>Thanks @jameysharp . Yes, I want to capture the guest stdout. Thanks for letting me know these two interfaces and I tried both of them, and they all works. For now, I will use <code>wasi_config_set_stdout_file</code> for my need, though it could let developers to change their code,  <code>wasi_config_set_stdout_file</code>  is still necessary for those who don't want to change their code. Thanks for your help!</p>\n</blockquote>",
        "id": 368713675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687476179
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633#issuecomment-1603457222\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633\">issue #6633</a>:</p>\n<blockquote>\n<p>Great, I'm glad that worked! I'll go ahead and close this issue but please do let us know if you have more questions. You can also discuss how to use Wasmtime in our chat at <a href=\"#narrow/stream/217126-wasmtime\">https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime</a> if that's more convenient.</p>\n</blockquote>",
        "id": 368717797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687478725
    },
    {
        "content": "<p>jameysharp closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6633\">issue #6633</a>:</p>\n<blockquote>\n<p>Hi, I use wasmtime C API to load a .wat module (which uses WASI)  and execute it. It can successfully execute the module and print out \"Hello World!\" on the stdout. However, I want to retrieve the output as a host runtime variable, is it possible? <br>\nI defined the following code trying to get the result:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime_val_t</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">];</span>\n<span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_func_call</span><span class=\"p\">(</span><span class=\"n\">context</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">run</span><span class=\"p\">.</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">func</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"n\">NULL</span><span class=\"p\">)</span>\n<span class=\"w\">                </span><span class=\"n\">exit_with_error</span><span class=\"p\">(</span><span class=\"s\">\"failed to call run\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">);</span>\n<span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"output result is %s</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">char</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"n\">wasmtime_externref_data</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">of</span><span class=\"p\">.</span><span class=\"n\">externref</span><span class=\"p\">));</span>\n</code></pre></div>\n<p>This code doesn't work and it print out:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">run</span>\n<span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n</code></pre></div>\n<p>I made something wrong here or is it possible to get the output? I think it should malloc memory for <code>results</code> on the host runtime and then <code>wasmtime_func_call</code> will write the output to it, however, now the error seems not the memory allocation issue. Any suggestions for this. Thanks very much.</p>\n</blockquote>",
        "id": 368717798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687478726
    }
]