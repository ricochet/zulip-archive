[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasmparser/issues/62\">bytecodealliance/wasmparser#62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204611388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595371464
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasmparser/issues/62\">bytecodealliance/wasmparser#62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204611497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595371525
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#pullrequestreview-453086214\">PR Review</a>.</p>",
        "id": 204640014,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595405685
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#pullrequestreview-453086214\">PR Review</a>.</p>",
        "id": 204640015,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595405685
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#discussion_r458610379\">PR Review Comment</a>:</p>\n<blockquote>\n<p>(Probably a dumb question, but just a sanity check) Does the validator keep internal state to remember which sections it has seen? This might have an impact since sections are supposed to appear in a certain order.</p>\n</blockquote>",
        "id": 204640016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595405685
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#pullrequestreview-453341551\">PR Review</a>.</p>",
        "id": 204668350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595426117
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#discussion_r458810640\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It does indeed! </p>\n</blockquote>",
        "id": 204668351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595426117
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204673017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595428173
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204677760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595430207
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204679684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595430985
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204688759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595435030
    },
    {
        "content": "<p><strong>alexcrichton</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> as ready for review.</p>",
        "id": 204688789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595435042
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204688899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595435093
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#pullrequestreview-453584675\">PR Review</a>.</p>",
        "id": 204705440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595443101
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204728601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595455895
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#discussion_r459601116\">PR Review Comment</a>:</p>\n<blockquote>\n<p>One early comment (before i try this tomorrow): can you please expose <code>wasmparser::FuncValidator</code> publicly, so that embedders aren't required to add <code>wasmparser</code> to their own dependencies?</p>\n</blockquote>",
        "id": 204825571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595524207
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#pullrequestreview-454334730\">PR Review</a>.</p>",
        "id": 204825573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595524207
    },
    {
        "content": "<p>bnjbvr edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#discussion_r459601116\">PR Review Comment</a>.</p>",
        "id": 204825613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595524237
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204828659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595525991
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#pullrequestreview-454357004\">PR Review</a>.</p>",
        "id": 204828753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595526024
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059#discussion_r459618645\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sure thing! I've pushed up a comment which reexports <code>wasmparser</code> as a crate since there's a number of types/etc you'll likely want to pull from there.</p>\n</blockquote>",
        "id": 204828755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595526024
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 204829776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595526487
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 205605449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596209631
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 205829170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596478988
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 205837365,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596483121
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 205837773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596483351
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 205938264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596563694
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 208132824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598468163
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 208180185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598507272
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 208454016,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598735193
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 210210708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600217410
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 211811594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601495703
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a> from <code>late-validate</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a change to cranelift-wasm to validate each function body<br>\nas it is translated. Additionally top-level module translation functions<br>\nwill perform module validation. This commit builds on changes in<br>\nwasmparser to perform module validation interwtwined with parsing and<br>\ntranslation. This will be necessary for future wasm features such as<br>\nmodule linking where the type behind a function index, for example, can<br>\nbe far away in another module. Additionally this also brings a nice<br>\nbenefit where parsing the binary only happens once (instead of having an<br>\nup-front serial validation step) and validation can happen in parallel<br>\nfor each function.</p>\n<p>Most of the changes in this commit are plumbing to make sure everything<br>\nlines up right. The major functional change here is that module<br>\ncompilation should be faster by validating in parallel (or skipping<br>\nfunction validation entirely in the case of a cache hit). Otherwise from<br>\na user-facing perspective nothing should be that different.</p>\n<p>This commit does mean that cranelift's translation now inherently<br>\nvalidates the input wasm module. This means that the Spidermonkey<br>\nintegration of cranelift-wasm will also be validating the function as<br>\nit's being translated with cranelift. The associated PR for wasmparser<br>\n(<a href=\"https://github.com/bytecodealliance/wasm-tools/pull/62\">https://github.com/bytecodealliance/wasm-tools/pull/62</a>) provides the necessary tools to create<br>\na <code>FuncValidator</code> for Gecko, but this is something I'll want careful<br>\nreview for before landing!</p>\n</blockquote>",
        "id": 211828420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601500671
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2059\">PR #2059</a>.</p>",
        "id": 212320463,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601913723
    }
]