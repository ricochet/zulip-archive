[
    {
        "content": "<p>rvolosatovs opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a> from <code>rvolosatovs:feat/preview1-preview2</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Moved from <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/175\">https://github.com/bytecodealliance/preview2-prototyping/pull/175</a></p>\n<p>There's a platform-specific bug somewhere, which I suspect originates somewhere in <code>path_open</code> flag translation logic</p>\n</blockquote>",
        "id": 360589808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684861133
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360591605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684861533
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360599364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684863653
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>:</p>\n<blockquote>\n<p>Moved from <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/175\">https://github.com/bytecodealliance/preview2-prototyping/pull/175</a></p>\n</blockquote>",
        "id": 360599656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684863733
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>:</p>\n<blockquote>\n<p>Moved from <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/175\">https://github.com/bytecodealliance/preview2-prototyping/pull/175</a></p>\n<p>The implementation tries to follow existing preview1 behavior as much as possible - as a result, there are a few differences in behavior from existing adapter. Please see the original PR for more details.</p>\n<p>A follow-up PRs fill be filed for:</p>\n<ul>\n<li><code>fd_readdir</code></li>\n<li>fixing <code>windows</code> support for a few tests (still not sure what's causing it)</li>\n<li>making all preview1 implementations consistent</li>\n</ul>\n</blockquote>",
        "id": 360609613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684866300
    },
    {
        "content": "<p><strong>rvolosatovs</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a> as ready for review.</p>",
        "id": 360609647,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684866305
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/itsrainy\">itsrainy</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360609652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684866306
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360609653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684866306
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>:</p>\n<blockquote>\n<p>Moved from <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/175\">https://github.com/bytecodealliance/preview2-prototyping/pull/175</a></p>\n<p>The implementation tries to follow existing preview1 behavior as much as possible - as a result, there are a few differences in behavior from existing adapter. Please see the original PR for more details.</p>\n<p>A follow-up PRs fill be filed for:</p>\n<ul>\n<li><code>fd_readdir</code></li>\n<li>fixing <code>windows</code> support for a few tests (still not sure what's causing the failures)</li>\n<li>making all preview1 implementations consistent</li>\n</ul>\n</blockquote>",
        "id": 360610148,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684866439
    },
    {
        "content": "<p><strong>itsrainy</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360631434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684873211
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#pullrequestreview-1440540915\">PR review</a>:</p>\n<blockquote>\n<p>This is great work! Just a few small issues. Thank you for finding all of these bad behaviors in the legacy implementation!</p>\n</blockquote>",
        "id": 360637504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684875515
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#pullrequestreview-1440540915\">PR review</a>:</p>\n<blockquote>\n<p>This is great work! Just a few small issues. Thank you for finding all of these bad behaviors in the legacy implementation!</p>\n</blockquote>",
        "id": 360637507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684875515
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1202991271\">PR review comment</a>:</p>\n<blockquote>\n<p>this is still a <code>todo!()</code> - we can leave it to a follow up PR, but <code>unreachable!()</code> communicates to me that it is a bug in this code if it is reachable, while this is reachable from any guest program.</p>\n</blockquote>",
        "id": 360637509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684875515
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1202985205\">PR review comment</a>:</p>\n<blockquote>\n<p>I wasn't expecting this sort of machinery to be required - we can't get away with implementing the DescriptorsRef methods on WasiPreview1Ctx? I can't intuit where the problem is in a more straightforward implementation, so if this is required, lets leave a comment on the struct definition explaining why.</p>\n</blockquote>",
        "id": 360637510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684875515
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1202998079\">PR review comment</a>:</p>\n<blockquote>\n<p>lets definitely not preserve that bug :). That one has been around for a while! Lets get rid of this check and follow up with a PR to fix the legacy impl, and a test. I expect that fix will only be around for its final release, but its still worth doing.</p>\n</blockquote>",
        "id": 360637511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684875515
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1203880574\">PR review comment</a>:</p>\n<blockquote>\n<p>I took this directly from <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5b93cdb84def5fa7cb3ff823bc80216f19c296c5/crates/wasi-preview1-component-adapter/src/lib.rs#L560-L569\">https://github.com/bytecodealliance/wasmtime/blob/5b93cdb84def5fa7cb3ff823bc80216f19c296c5/crates/wasi-preview1-component-adapter/src/lib.rs#L560-L569</a> and it was surprising to me as well.<br>\nIt seems to me that the adapter has to implement rights handling, which the existing one does not do. I'll mark this as <code>todo!</code> and file an issue for rights handling follow-up</p>\n</blockquote>",
        "id": 360752472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684925129
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1203957746\">PR review comment</a>:</p>\n<blockquote>\n<p>I'll add a comment, but the biggest reasons why this is required are:</p>\n<ol>\n<li>By far the biggest issue is <code>bindgen</code> generating host methods with <code>&amp;mut self</code> receivers, preventing e.g. simultaneous lazy initialization of the descriptor table and calling a preview2 method using any data borrowed from that table, even looking up something like <code>table().is_file</code> is problematic</li>\n<li><code>WasiPreview1Adapter</code> (assuming that's what you meant by WasiPreview1Ctx) does not have access to preview2 functionality and/or the underlying table, so it cannot initialize itself using something like <a href=\"https://docs.rs/once_cell/latest/once_cell/sync/struct.Lazy.html\">https://docs.rs/once_cell/latest/once_cell/sync/struct.Lazy.html</a> . Lazily initializing the descriptor map requires access to both the <code>WasiPreview1Adapter</code> and <code>wasi::preopens::Host</code>, so the only place where this functionality could exist is in an extension trait (<code>WasiPreview1ViewExt</code>). Note that from within this trait, we can never return anything borrowed directly, because we'd first need to call <code>adapter_mut()</code> to get access to the state (which we may need to lazily initialize). And even if we had a way to return a borrowed descriptor table directly, it would not be possible to call any other method on <code>self</code> due to 1., since that would cause a double mutable borrow, which is not allowed.</li>\n</ol>\n<p>In short, an alternative solution would be storing <code>Option&lt;Arc&lt;Mutex&lt;Descriptors&gt;&gt;&gt;</code> in the adapter and returning <code>Arc&lt;Mutex&lt;Descriptors&gt;&gt;</code> in the <code>WasiPreview1AdapterExt::descriptors(&amp;mut self)</code> method, which IMO is way more awkward to work with and simply redundant complexity.<br>\nOverall, the <code>DescriptorsRef</code> is just a workaround for <code>bindgen</code> design drawbacks. I believe this could be simplified dramatically if host methods would just take <code>&amp;self</code></p>\n</blockquote>",
        "id": 360764236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684928444
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360776362,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684931679
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360777636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684932033
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>:</p>\n<blockquote>\n<p>Moved from <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/175\">https://github.com/bytecodealliance/preview2-prototyping/pull/175</a></p>\n<p>The implementation tries to follow existing preview1 behavior as much as possible - as a result, there are a few differences in behavior from existing adapter. Please see the original PR for more details.</p>\n<p>A follow-up PRs fill be filed for:</p>\n<ul>\n<li><code>fd_readdir</code></li>\n<li>fixing <code>windows</code> support for a few tests (still not sure what's causing the failures)</li>\n<li>making all preview1 implementations consistent</li>\n<li>add rights handling</li>\n</ul>\n</blockquote>",
        "id": 360777663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684932044
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>:</p>\n<blockquote>\n<p>Moved from <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/175\">https://github.com/bytecodealliance/preview2-prototyping/pull/175</a></p>\n<p>The implementation tries to follow existing preview1 behavior as much as possible - as a result, there are a few differences in behavior from existing adapter. Please see the original PR for more details.</p>\n<p>A follow-up issues/PRs fill be filed for:</p>\n<ul>\n<li><code>fd_readdir</code></li>\n<li>fixing <code>windows</code> support for a few tests (still not sure what's causing the failures)</li>\n<li>making all preview1 implementations consistent</li>\n<li>adding rights handling</li>\n</ul>\n</blockquote>",
        "id": 360777698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684932059
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>:</p>\n<blockquote>\n<p>Moved from <a href=\"https://github.com/bytecodealliance/preview2-prototyping/pull/175\">https://github.com/bytecodealliance/preview2-prototyping/pull/175</a></p>\n<p>Refs <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6370\">https://github.com/bytecodealliance/wasmtime/issues/6370</a></p>\n<p>The implementation tries to follow existing preview1 behavior as much as possible - as a result, there are a few differences in behavior from existing adapter. Please see the original PR for more details.</p>\n<p>A follow-up issues/PRs fill be filed for:</p>\n<ul>\n<li><code>fd_readdir</code></li>\n<li>fixing <code>windows</code> support for a few tests (still not sure what's causing the failures)</li>\n<li>making all preview1 implementations consistent</li>\n<li>adding rights handling</li>\n</ul>\n</blockquote>",
        "id": 360806997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684938499
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1204334345\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh, that is indeed a bug in the component adapter as well. <code>unreachabable!()</code> is just how we spell <code>todo!()</code> and <code>panic!()</code> and etc over there since we cant use std's macros.</p>\n<p>In the legacy implementation, set_rights is a no-op, it only validates the fd. That is the correct behavior for both of these spots. Would you mind making this fix to the component adapter as well?</p>\n</blockquote>",
        "id": 360816835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684940552
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1204338956\">PR review comment</a>:</p>\n<blockquote>\n<p>That makes sense. Thank you.</p>\n<p>We should look into adding a bindgen option to enable &amp;self receivers in the future, and then we may be able to unwind a bit of this complexity. For now, this is a fine implementation once it has a comment.</p>\n</blockquote>",
        "id": 360817380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684940671
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1204409247\">PR review comment</a>:</p>\n<blockquote>\n<p>I've added a few comments and renamed the struct to <code>Transaction</code> so it's a bit more obvious what it actually is</p>\n</blockquote>",
        "id": 360826459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684942658
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1204411049\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's take care of it as part of <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6446\">https://github.com/bytecodealliance/wasmtime/issues/6446</a> ?</p>\n</blockquote>",
        "id": 360826747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684942727
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#discussion_r1204441447\">PR review comment</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/pull/6444\">https://github.com/bytecodealliance/wasmtime/pull/6444</a></p>\n</blockquote>",
        "id": 360832312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684944040
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440#pullrequestreview-1442430135\">PR review</a>.</p>",
        "id": 360853361,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684949376
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6440\">PR #6440</a>.</p>",
        "id": 360861435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684951656
    }
]