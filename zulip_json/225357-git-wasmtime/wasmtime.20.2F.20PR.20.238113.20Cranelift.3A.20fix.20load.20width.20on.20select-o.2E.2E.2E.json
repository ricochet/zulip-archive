[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a>.</p>",
        "id": 426264516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309158
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a> from <code>cfallin:fix-xmm-select-load</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>â€¦usion.</p>\n<p>We have an instruction lowering rule on x86-64 that allows a <code>select</code> operation to perform load fusion: when presented with any xmm-register-typed values (<code>f32</code>, <code>f64</code>, or <code>v128</code>), an argument to the select can become a load. Unfortunately, this lowering behavior is incorrect in the case of narrower-than-128-bit values: the cmove is converted into an if-else diamond with two 128-bit moves and so the load becomes a full 128-bit-width load.</p>\n<p>The fix is to disallow load fusion of selects of XMM-typed values. We could make the rules more fine-grained and keep <code>v128</code>-typed load fusion, but we're opting for the simpler and more conservative fix first here.</p>\n<p>Fixes #8112.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426264517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309158
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a>.</p>",
        "id": 426264518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309158
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a>.</p>",
        "id": 426264519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309159
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a>.</p>",
        "id": 426264531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309172
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a>:</p>\n<blockquote>\n<p>We have an instruction lowering rule on x86-64 that allows a <code>select</code> operation to perform load fusion: when presented with any xmm-register-typed values (<code>f32</code>, <code>f64</code>, or <code>v128</code>), an argument to the select can become a load. Unfortunately, this lowering behavior is incorrect in the case of narrower-than-128-bit values: the cmove is converted into an if-else diamond with two 128-bit moves and so the load becomes a full 128-bit-width load.</p>\n<p>The fix is to disallow load fusion of selects of XMM-typed values. We could make the rules more fine-grained and keep <code>v128</code>-typed load fusion, but we're opting for the simpler and more conservative fix first here.</p>\n<p>Fixes #8112.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 426264541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309181
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113#issuecomment-1993627158\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a>:</p>\n<blockquote>\n<blockquote>\n<p>We could make the rules more fine-grained and keep v128-typed load fusion</p>\n</blockquote>\n<p>And actually, for posterity, I just realized we <em>can't</em> do this because it makes the load conditional as well (which it can't be, per Wasm trap semantics). What fun! Given that, I think this conservative fix is the most reasonable one and there's no further refinement to do.</p>\n</blockquote>",
        "id": 426265048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309553
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113#pullrequestreview-1933228229\">PR review</a>.</p>",
        "id": 426265705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710309926
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8113\">PR #8113</a>.</p>",
        "id": 426268999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710312088
    }
]