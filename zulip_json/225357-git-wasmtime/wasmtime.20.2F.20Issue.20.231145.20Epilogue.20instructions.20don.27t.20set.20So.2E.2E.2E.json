[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1145#issuecomment-803432228\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1145\">Issue #1145</a>:</p>\n<blockquote>\n<p>Fixed with new x64 backend.</p>\n</blockquote>",
        "id": 231160001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616262051
    },
    {
        "content": "<p>bjorn3 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1145\">Issue #1145</a>:</p>\n<blockquote>\n<ul>\n<li>\n<p>What are the steps to reproduce the issue?<br>\n    ```<br>\n    test compile<br>\n    target x86_64</p>\n<p>function u0:0() system_v {<br>\n  ebb0:<br>\n  nop<br>\n  @0001 return<br>\n  }<br>\n ```</p>\n</li>\n<li>\n<p>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?</p>\n<p>```<br>\n  test compile<br>\n  target x86_64<br>\n  function u0:0(i64 fp [%rbp]) -&gt; i64 fp [%rbp] system_v {<br>\n      ss0 = incoming_arg 16, offset -16</p>\n<div class=\"codehilite\"><pre><span></span><code>                              ebb0(v4: i64 [%rbp]):\n</code></pre></div>\n\n<p>[RexOp1pushq#50]                    x86_push v4<br>\n  [RexOp1copysp#8089]                 copy_special %rsp -&gt; %rbp<br>\n  [-]                                 nop<br>\n  [RexOp1popq#58,%rbp]                v5 = x86_pop.i64 ; &lt;-- this should use @0001 as srcloc<br>\n  @0001 [Op1ret#c3]                   return v5<br>\n  }<br>\n  ```</p>\n<p>This causes debuggers to switch between function start and end as current position with cg_clif generated executables when returning from a function.</p>\n</li>\n<li>\n<p>Which Cranelift version / commit hash / branch are you using? 387593d6c94d291e614c08d7a03f77b40efa451d</p>\n</li>\n</ul>\n</blockquote>",
        "id": 231160002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616262051
    }
]