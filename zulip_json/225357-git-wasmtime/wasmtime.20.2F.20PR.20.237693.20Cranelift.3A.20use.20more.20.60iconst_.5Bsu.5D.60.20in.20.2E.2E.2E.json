[
    {
        "content": "<p>scottmcm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693\">PR #7693</a> from <code>scottmcm:more-i128</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This uses <code>iconst_u</code> and <code>iconst_s</code> a bunch more in ISLE opts.</p>\n<p>We can now enable some of the patterns that had to be excluded before to avoid generating <code>iconst.i128</code> that doesn't exist, since these rules do the right thing.  For example, <code>x - x</code> with this PR will now give <code>uextend.i128 (iconst.i64 0)</code> when <code>x</code> is <code>i128</code>, rather than staying unchanged as it did before.</p>\n<p>There's a bunch of things that still don't have it, like const-prop, since the constant values are still only 64-bit, not 128-bit, so those patterns are still restricted to the smaller types.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 408115940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702619194
    },
    {
        "content": "<p><strong>scottmcm</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693\">PR #7693</a>.</p>",
        "id": 408115941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702619194
    },
    {
        "content": "<p><strong>scottmcm</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693\">PR #7693</a>.</p>",
        "id": 408115942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702619194
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1783163590\">PR review</a>.</p>",
        "id": 408116073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702619293
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#discussion_r1427574290\">PR review comment</a>:</p>\n<blockquote>\n<p>I like how elegant this is now, but it's still restricted to 64-bit and smaller because <code>iconst_s $I128 k</code> will emit a sign-extended constant that's probably the same thing it started with.</p>\n</blockquote>",
        "id": 408116075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702619294
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1783171002\">PR review</a>.</p>",
        "id": 408116851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702619849
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#discussion_r1427582876\">PR review comment</a>:</p>\n<blockquote>\n<p>I was unable to find any way to trigger this where the <code>fits_in_64</code> mattered.  When it's only <code>ty_int</code>, since it's coming from <code>icmp</code> it seems to always be <code>$I8</code> -- anything else as the result would need a vector type, but trying with a vector type (see <code>eq_self_v128</code>) it's not triggering even without the 64-bit limitation.</p>\n</blockquote>",
        "id": 408116852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702619849
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1783182666\">PR review</a>.</p>",
        "id": 408118319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702620453
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#discussion_r1427589901\">PR review comment</a>:</p>\n<blockquote>\n<p>I could pull these (and the reduce ones) into a separate PR if you want, since they're not really following the bigger theme of the PR.  They just came from looking at cprop -- which in general can't do 128-bit constants usefully -- and trying to find what <em>would</em> be possible on the extended constants that <code>iconst_u</code> and <code>iconst_s</code> generate.  See the <code>bor_extended_constants_i128</code> test below as an example of where this happens.</p>\n</blockquote>",
        "id": 408118320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702620453
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#issuecomment-1857496838\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693\">PR #7693</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 408140270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702629881
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1787453584\">PR review</a>:</p>\n<blockquote>\n<p>Looks great, thanks! Just a couple things below before merging.</p>\n</blockquote>",
        "id": 408664854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702923503
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1787453584\">PR review</a>:</p>\n<blockquote>\n<p>Looks great, thanks! Just a couple things below before merging.</p>\n</blockquote>",
        "id": 408664855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702923504
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#discussion_r1430497487\">PR review comment</a>:</p>\n<blockquote>\n<p>I think we will want to pull these out into a new, dedicated PR. It isn't obvious that these rewrites are (always? usually?) improvements on their own since we are going from two ops to three and most CPUs, AFAIK, aren't faster at doing eg 8-bit adds than 32-bit adds. I could see this possibly unlocking further rewrites, but are intentionally very careful about the kinds of rewrites that we introduce just to unlock other optimizations because we aren't working with a full e-graph here, but an acyclic one that is intended to run with less time budget. All that is to say, this might still be beneficial, but I'd like to get more eyes on it and discussion about it first, and we can land the rest of this stuff in the meantime.</p>\n</blockquote>",
        "id": 408664856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702923504
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#discussion_r1430491382\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind adding a comment to this effect?</p>\n</blockquote>",
        "id": 408664857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702923504
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1787560585\">PR review</a>.</p>",
        "id": 408673806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702927227
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#discussion_r1430558034\">PR review comment</a>:</p>\n<blockquote>\n<p>Makes sense.  I can also experiment with doing it only for things where one of the inner ones is itself an extend, since I think that's the only cases where I used it in the tests anyway, and would keep the excess down since the extra reduce would collapse with the extend.</p>\n</blockquote>",
        "id": 408673807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702927227
    },
    {
        "content": "<p>scottmcm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693\">PR #7693</a>.</p>",
        "id": 408674947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702927708
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1787593778\">PR review</a>.</p>",
        "id": 408676941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702928685
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#discussion_r1430578895\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 408676943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702928685
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693#pullrequestreview-1787633304\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 408681045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702930437
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7693\">PR #7693</a>.</p>",
        "id": 408684971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702932449
    }
]