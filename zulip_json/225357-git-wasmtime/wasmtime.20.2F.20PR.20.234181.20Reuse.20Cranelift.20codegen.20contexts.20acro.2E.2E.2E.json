[
    {
        "content": "<p>bnjbvr opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4181\">PR #4181</a> from <code>reuse-context</code> to <code>main</code>:</p>\n<blockquote>\n<p>cranelift-codegen has a context that may be reused to spare memory allocations, and it happens that it is not reused in wasmtime right now, but instead re-created for each function compilation. I've extended the sharing of the <code>FuncTranslator</code> data type during compilation to <code>cranelift_codegen::Context</code> too.</p>\n<p>This causes tiny speedups of compile times, but in the noise range:</p>\n<ul>\n<li>parallel compilation with 32 cores: 2% on a UE4 game compiled to wasm; 1.1% slowdown on the Godot engine; 5.3% on clang</li>\n<li>mono-threaded compilation: 1.6% speedup on sqlite, 1.6% speedup on opencv</li>\n</ul>\n<p>I've also implemented batch compilation, i.e. group functions together based on the bytecode size until it reaches some predefined threshold and send that as a unit of work per thread. That was something implemented in Spidermonkey and which helped lower the overhead cost of parallelization. But in wasmtime I only got slowdowns, independently of the benchmark, independently of the thresholds... so I guess rayon does already a great job with work stealing etc. I've removed the batch compilation from this PR, but the code is in <a href=\"https://github.com/bnjbvr/wasmtime/commit/e973fb8ebe5b898e8cf4cb0e62dd4948eafd91e1\">this branch</a> if people are interested.</p>\n</blockquote>",
        "id": 283350901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653326600
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4181#pullrequestreview-982155395\">PR review</a>.</p>",
        "id": 283353709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653328074
    },
    {
        "content": "<p>bnjbvr merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4181\">PR #4181</a>.</p>",
        "id": 283715767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653382983
    }
]