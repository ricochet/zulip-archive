[
    {
        "content": "<p>ludfjig opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a> from <code>ludfjig:ludfjig/fileconfig</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR makes it possible to create a <code>wasmtime::Config</code> from a toml file and is a first step toward resolving #8784. Overall, I think the path forward is as follows:</p>\n<ol>\n<li>This PR: Enables loading <code>wasmtime::Config</code> from a toml file, by making <code>CommonOptions</code> derive <code>Deserialize</code>. For example, <code>opt_level</code> is deserialized from values 0, 1, 2, \"s\" (same as cli flags) instead of \"None\", \"Speed\", \"SpeedAndSize\". Same applies to <code>regalloc_algorithm</code>, <code>compiler</code> and <code>collector</code>. </li>\n<li>Combine cache-config toml with this new toml.</li>\n<li>Have one source of truth for cli flags and config options.</li>\n</ol>\n<p>Feedback greatly appreciated.</p>\n</blockquote>",
        "id": 488741570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734048960
    },
    {
        "content": "<p><strong>ludfjig</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 488741571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734048960
    },
    {
        "content": "<p><strong>ludfjig</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 488741572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734048960
    },
    {
        "content": "<p>ludfjig edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>:</p>\n<blockquote>\n<p>This PR makes it possible to create a <code>wasmtime::Config</code> from a toml file and is a first step toward resolving #8784. Overall, I think the path forward is as follows:</p>\n<ol>\n<li>This PR: Enables loading <code>wasmtime::Config</code> from a toml file, by making <code>CommonOptions</code> derive <code>Deserialize</code>. For example, <code>opt_level</code> is deserialized from values 0, 1, 2, \"s\" (same as cli flags) instead of \"None\", \"Speed\", \"SpeedAndSize\". Same applies to <code>regalloc_algorithm</code>, <code>compiler</code> and <code>collector</code>. </li>\n<li>Combine cache-config toml with this new toml.</li>\n<li>Have one source of truth for cli flags and config options.</li>\n</ol>\n<p>Feedback greatly appreciated, especially regarding how to deal with WasiNnGraph, as well config_var and keyvalue_in_memory_data, which are all marked <code>serde(skip)</code> for now</p>\n</blockquote>",
        "id": 488741738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734049067
    },
    {
        "content": "<p>ludfjig edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>:</p>\n<blockquote>\n<p>This PR makes it possible to create a <code>wasmtime::Config</code> from a toml file and is a first step toward resolving #8784. Overall, I think the path forward is as follows:</p>\n<ol>\n<li>This PR: Enables loading <code>wasmtime::Config</code> from a toml file, by making <code>CommonOptions</code> derive <code>Deserialize</code>. For example, <code>opt_level</code> is deserialized from values 0, 1, 2, \"s\" (same as cli flags) instead of \"None\", \"Speed\", \"SpeedAndSize\". Same applies to <code>regalloc_algorithm</code>, <code>compiler</code> and <code>collector</code>. </li>\n<li>Combine cache-config toml with this new toml.</li>\n<li>Have one source of truth for cli flags and config options.</li>\n</ol>\n<p>Feedback greatly appreciated, especially regarding how to deal with <code>nn_graph</code>, as well <code>config_var</code> and <code>keyvalue_in_memory_data</code>, which are all marked <code>serde(skip)</code> for now</p>\n</blockquote>",
        "id": 488741803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734049085
    },
    {
        "content": "<p>ludfjig updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 488742000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734049220
    },
    {
        "content": "<p>ludfjig updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 488742170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734049327
    },
    {
        "content": "<p>ludfjig updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 488743660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734050381
    },
    {
        "content": "<p>ludfjig edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>:</p>\n<blockquote>\n<p>This PR makes it possible to create a <code>wasmtime::Config</code> from a toml file and is a first step toward resolving #8784. Overall, I think the path forward is as follows:</p>\n<ol>\n<li>This PR: Enables loading <code>wasmtime::Config</code> from a toml file, by making <code>CommonOptions</code> derive <code>Deserialize</code>. For example, <code>opt_level</code> is deserialized from values 0, 1, 2, \"s\" (same as cli flags) instead of \"None\", \"Speed\", \"SpeedAndSize\". Same applies to <code>regalloc_algorithm</code>, <code>compiler</code> and <code>collector</code>. Feedback appreciated on this.</li>\n<li>Combine cache-config toml with this new toml.</li>\n<li>Have one source of truth for cli flags and config options.</li>\n</ol>\n<p>Feedback greatly appreciated, especially regarding how to deal with <code>nn_graph</code>, as well <code>config_var</code> and <code>keyvalue_in_memory_data</code>, which are all marked <code>serde(skip)</code> for now</p>\n</blockquote>",
        "id": 488743758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734050445
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#issuecomment-2540386641\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>:</p>\n<blockquote>\n<h4>Label Messager: wasmtime:config</h4>\n<p>It looks like you are changing Wasmtime's configuration options. Make sure to<br>\ncomplete this check list:</p>\n<ul>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, you wrote extensive documentation for<br>\n      it.</p>\n<p>&lt;details&gt;</p>\n<p>Our documentation should be of the following form:</p>\n<p>```text<br>\nShort, simple summary sentence.</p>\n<p>More details. These details can be multiple paragraphs. There should be<br>\ninformation about not just the method, but its parameters and results as<br>\nwell.</p>\n<p>Is this method fallible? If so, when can it return an error?</p>\n<p>Can this method panic? If so, when does it panic?</p>\n<h1>Example</h1>\n<p>Optional example here.<br>\n```</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you added a new <code>Config</code> method, or modified an existing one, you<br>\n  ensured that this configuration is exercised by the fuzz targets.</p>\n<p>&lt;details&gt;</p>\n<p>For example, if you expose a new strategy for allocating the next instance<br>\nslot inside the pooling allocator, you should ensure that at least one of our<br>\nfuzz targets exercises that new strategy.</p>\n<p>Often, all that is required of you is to ensure that there is a knob for this<br>\nconfiguration option in [<code>wasmtime_fuzzing::Config</code>][fuzzing-config] (or one<br>\nof its nested <code>struct</code>s).</p>\n<p>Rarely, this may require authoring a new fuzz target to specifically test this<br>\nconfiguration. See [our docs on fuzzing][fuzzing-docs] for more details.</p>\n<p>&lt;/details&gt;</p>\n</li>\n<li>\n<p>[ ] If you are enabling a configuration option by default, make sure that it<br>\n  has been fuzzed for at least two weeks before turning it on by default.</p>\n</li>\n</ul>\n<p>[fuzzing-config]: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194\">https://github.com/bytecodealliance/wasmtime/blob/ca0e8d0a1d8cefc0496dba2f77a670571d8fdcab/crates/fuzzing/src/generators.rs#L182-L194</a><br>\n[fuzzing-docs]: <a href=\"https://docs.wasmtime.dev/contributing-fuzzing.html\">https://docs.wasmtime.dev/contributing-fuzzing.html</a></p>\n<hr>\n<p>&lt;details&gt;</p>\n<p>To modify this label's message, edit the &lt;code&gt;.github/label-messager/wasmtime-config.md&lt;/code&gt; file.</p>\n<p>To add new label messages or remove existing label messages, edit the<br>\n&lt;code&gt;.github/label-messager.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/label-messager-action\">Learn more.</a></p>\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 488752344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734056229
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#pullrequestreview-2502747405\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this! I'm liking how this is shaping up pretty cleanly so far. Would you be up for integrating this into a CLI flag itself as well? For example <code>wasmtime --config cfg.toml</code> or something like that</p>\n</blockquote>",
        "id": 488884212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734109471
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#discussion_r1884228722\">PR review comment</a>:</p>\n<blockquote>\n<p>Mind updating the error using <code>.with_context(...)</code> to attach the name of the file here and below?</p>\n</blockquote>",
        "id": 488884213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734109472
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#discussion_r1884228271\">PR review comment</a>:</p>\n<blockquote>\n<p>This might perhaps be best as an inherent method on <code>CommonOptions</code> as an alternative constructor? That would still require the caller call <code>.config(...)</code> but that seems like a reasonable tradeoff to me.</p>\n</blockquote>",
        "id": 488884216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734109472
    },
    {
        "content": "<p>ludfjig updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 488935054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734130973
    },
    {
        "content": "<p>ludfjig submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#pullrequestreview-2503370944\">PR review</a>.</p>",
        "id": 488935219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131071
    },
    {
        "content": "<p>ludfjig created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#discussion_r1884632529\">PR review comment</a>:</p>\n<blockquote>\n<p>I agree</p>\n</blockquote>",
        "id": 488935220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131071
    },
    {
        "content": "<p>ludfjig submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#pullrequestreview-2503371284\">PR review</a>.</p>",
        "id": 488935260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131102
    },
    {
        "content": "<p>ludfjig created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#discussion_r1884632797\">PR review comment</a>:</p>\n<blockquote>\n<p>addressed. </p>\n</blockquote>",
        "id": 488935262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131102
    },
    {
        "content": "<p>ludfjig <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#issuecomment-2542528554\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks for this! I'm liking how this is shaping up pretty cleanly so far. Would you be up for integrating this into a CLI flag itself as well? For example <code>wasmtime --config cfg.toml</code> or something like that</p>\n</blockquote>\n<p>Thanks for looking at this. I added a --config flag. Any suggestions on how to best test this?</p>\n</blockquote>",
        "id": 488935671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131371
    },
    {
        "content": "<p>ludfjig updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 488935857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131495
    },
    {
        "content": "<p>ludfjig edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#discussion_r1884632797\">PR review comment</a>.</p>",
        "id": 488935940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131534
    },
    {
        "content": "<p>ludfjig edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#discussion_r1884632529\">PR review comment</a>.</p>",
        "id": 488935971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734131559
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#issuecomment-2545987981\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>:</p>\n<blockquote>\n<p>For tests I'd recommend <code>tests/all/cli_tests.rs</code> or somewhere around there for making a tempdir with a config file</p>\n</blockquote>",
        "id": 489272109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734364182
    },
    {
        "content": "<p>ludfjig updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>.</p>",
        "id": 490589195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734990833
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811#issuecomment-2573431176\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9811\">PR #9811</a>:</p>\n<blockquote>\n<p>This is looking good to me, was there something else you wanted to address before landing though?</p>\n</blockquote>",
        "id": 492134492,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736179886
    }
]