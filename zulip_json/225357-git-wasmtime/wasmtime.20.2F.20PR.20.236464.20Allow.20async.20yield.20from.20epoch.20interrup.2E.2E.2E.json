[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a> from <code>jameysharp:epoch-callback-yield</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>When an epoch interruption deadline arrives, previously it was possible to yield to the async executor, or to invoke a callback on the wasm stack, but not both. This changes the API to allow callbacks to run and then request yielding to the async executor.</p>\n<p>We discussed this in today's Wasmtime bi-weekly call and I believe this PR reflects the consensus from that discussion. But I'm open to bikeshedding the API.</p>\n<p>I was tempted to revise the out-of-gas/fuel API to match the epoch interruption API as well, but decided not to do that in this PR.</p>\n</blockquote>",
        "id": 361195597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685063740
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 361195600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685063740
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 361195601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685063740
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#pullrequestreview-1446375339\">PR review</a>:</p>\n<blockquote>\n<p>Mind adding some tests as well?</p>\n</blockquote>",
        "id": 361348989,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685111983
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#pullrequestreview-1446375339\">PR review</a>:</p>\n<blockquote>\n<p>Mind adding some tests as well?</p>\n</blockquote>",
        "id": 361348990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685111983
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1206883931\">PR review comment</a>:</p>\n<blockquote>\n<p>From an ergonomic perspective could this remain <code>Result&lt;DeadlineResult&gt;</code>? (maybe with a bit of renaming)</p>\n<p>That'll allow <code>?</code> to be used for fallible operations and matches how traps are handled elsewhere in the embedding API where it's the <code>Err</code> of a <code>Result</code></p>\n</blockquote>",
        "id": 361348995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685111984
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1206888489\">PR review comment</a>:</p>\n<blockquote>\n<p>Can the documentation for this method be updated to talk about how returning <code>Yield</code> will panic if <code>async_support</code> is disabled?</p>\n</blockquote>",
        "id": 361348996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685111984
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1206885480\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there any particular reason as to why? If something traps I could see it still being possible resuming other execution in the <code>Store</code> which may be unrelated which could require the same callback.</p>\n</blockquote>",
        "id": 361348997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685111984
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1206889841\">PR review comment</a>:</p>\n<blockquote>\n<p>In this case I believe that <code>async_yield_impl</code> will panic internally if it's not configured right but technically that method's panic should be allowable to be a <code>debug_assert!</code> or an <code>unwrap_unchecked</code> or something like that. I think it'd be good to have a dedicated assert here for the use case that this covers where <code>Yield</code> is returned but async isn't enabled or configured.</p>\n</blockquote>",
        "id": 361348998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685111984
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 361349043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685111993
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1210522906\">PR review comment</a>:</p>\n<blockquote>\n<p>As far as I could tell this was the existing behavior, but it seemed non-obvious so I added a comment. I don't think there's a strong argument for behaving this way and I agree that it could be useful to preserve the callback.</p>\n</blockquote>",
        "id": 362234598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685463554
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1210591734\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe</p>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>pub enum DeadlineBehavior {\n</code></pre></div>\n<p>to make <code>Result&lt;DeadlineBehavior&gt;</code>?</p>\n<p>Another option is to have this return a <code>std::ops::ControlFlow</code> where the break is an <code>anyhow::Error</code> and the continue is either a sync or async enum with a <code>u64</code> payload. This would also allow for <code>?</code> usage. But my experience with <code>ControlFlow</code> has not been super great.</p>\n</blockquote>",
        "id": 362252314,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685467393
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1210592641\">PR review comment</a>:</p>\n<blockquote>\n<p>To be clear, this would remove the <code>DeadlineResult::Trap</code> variant right? Since that would become the <code>Result::Err</code>?</p>\n</blockquote>",
        "id": 362252599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685467450
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1210593284\">PR review comment</a>:</p>\n<blockquote>\n<p>Once something in a store traps, you really aren't supposed to use the store again.</p>\n</blockquote>",
        "id": 362252773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685467491
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1211843209\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah that's what I'm thinking</p>\n</blockquote>",
        "id": 362480378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685544445
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#discussion_r1211845631\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah ok if this is preserving the existing behavior that's ok, but otherwise while you're here I think it might be good to \"fix\" this and put the callback back in place regardless of the result.</p>\n<p>I agree that most of the time stores/instances/etc should be considered \"poisoned\" after trapping but that feels like a higher level concern which wouldn't affect a lower-level detail like this. Mostly in that we don't have anything official per-se about nullifying a store when it traps.</p>\n</blockquote>",
        "id": 362480913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685544547
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 363142256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685732665
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 363142257,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685732665
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 363143295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685732977
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464#pullrequestreview-1458373675\">PR review</a>.</p>",
        "id": 363147488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685734302
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 363147514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685734309
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 363149397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685734945
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 363149553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685735000
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6464\">PR #6464</a>.</p>",
        "id": 363164727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685739840
    }
]