[
    {
        "content": "<p>sparker-arm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070\">PR #3070</a> from <code>simd-extmul-aarch64</code> to <code>main</code>:</p>\n<blockquote>\n<p>Lower simd_extmul_[low/high][signed/unsigned] to [s|u]widen inputs to<br>\nan imul node.</p>\n<p>This also reorganises the aarch64 'long mul' operations and their assembly.</p>\n<p>Copyright (c) 2021, Arm Limited.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 245332030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625758940
    },
    {
        "content": "<p>sparker-arm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070\">PR #3070</a> from <code>simd-extmul-aarch64</code> to <code>main</code>.</p>",
        "id": 245420912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625822886
    },
    {
        "content": "<p><strong>akirilov-arm</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070\">PR #3070</a>.</p>",
        "id": 245994589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626284694
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#pullrequestreview-706705524\">PR review</a>.</p>",
        "id": 246018268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626295737
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#discussion_r669942005\">PR review comment</a>:</p>\n<blockquote>\n<p>It seems like this and <code>Umlal8</code> aren't actually generated in any lowerings (unless I'm missing something), but do you want to leave these in for completeness with possible future lowerings?</p>\n</blockquote>",
        "id": 246018269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626295737
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#pullrequestreview-706705524\">PR review</a>.</p>",
        "id": 246018270,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626295737
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#discussion_r669943051\">PR review comment</a>:</p>\n<blockquote>\n<p>One possible way to structure this is to perhaps check for <code>is_vector</code> and i64x2 early on at the top of this block with early-returns if they match, and if that fails all the remaining cases share the logic of </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">                    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rn</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">put_input_in_reg</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">NarrowValueMode</span>::<span class=\"nb\">None</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">put_input_in_reg</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">inputs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"n\">NarrowValueMode</span>::<span class=\"nb\">None</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rd</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">get_output_reg</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">outputs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]).</span><span class=\"n\">only_reg</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>\n<p>as a prefix.</p>\n<p>Just a thought though, happy to defer to you who work on this much more than I!</p>\n</blockquote>",
        "id": 246018271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626295737
    },
    {
        "content": "<p>sparker-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#pullrequestreview-707009178\">PR review</a>.</p>",
        "id": 246059729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626333685
    },
    {
        "content": "<p>sparker-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#discussion_r670201193\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, exactly - thought it would be weird to just port the 32-bit version.</p>\n</blockquote>",
        "id": 246059730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626333685
    },
    {
        "content": "<p>sparker-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#pullrequestreview-707022728\">PR review</a>.</p>",
        "id": 246060966,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626334627
    },
    {
        "content": "<p>sparker-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#discussion_r670211815\">PR review comment</a>:</p>\n<blockquote>\n<p>So even though I don't like the duplication, or how much conditional stuff is going on here, we would only be able to factor out one collection of these calls as the I128 case uses, ever so slightly, different calls to handle multiple registers.   So I think I prefer the clarity. </p>\n</blockquote>",
        "id": 246060967,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626334627
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#pullrequestreview-715295028\">PR review</a>.</p>",
        "id": 247265733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627334715
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#discussion_r676954138\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we add a doc-comment here describing the return tuple? E.g. it's not clear to me reading at this point what the <code>bool</code> denotes, until I notice the low/high pattern below in the implementation.</p>\n</blockquote>",
        "id": 247265734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627334715
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#pullrequestreview-715295028\">PR review</a>.</p>",
        "id": 247265735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627334715
    },
    {
        "content": "<p>sparker-arm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070\">PR #3070</a> from <code>simd-extmul-aarch64</code> to <code>main</code>.</p>",
        "id": 247451007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627474719
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070#pullrequestreview-717323767\">PR review</a>.</p>",
        "id": 247495713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627495851
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3070\">PR #3070</a>.</p>",
        "id": 247495724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627495858
    }
]