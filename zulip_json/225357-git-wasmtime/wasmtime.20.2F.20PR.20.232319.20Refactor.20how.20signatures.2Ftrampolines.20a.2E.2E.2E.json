[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319\">PR #2319</a> from <code>remove-trampolines-from-instance</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors where trampolines and signature information is<br>\nstored within a <code>Store</code>, namely moving them from<br>\n<code>wasmtime_runtime::Instance</code> instead to <code>Store</code> itself. The goal here is<br>\nto remove an allocation inside of an <code>Instance</code> and make them a bit<br>\ncheaper to create. Additionally this should open up future possibilities<br>\nlike not creating duplicate trampolines for signatures already in the<br>\n<code>Store</code> when using <code>Func::new</code>.</p>\n</blockquote>",
        "id": 214517525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603666599
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319\">PR #2319</a> from <code>remove-trampolines-from-instance</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors where trampolines and signature information is<br>\nstored within a <code>Store</code>, namely moving them from<br>\n<code>wasmtime_runtime::Instance</code> instead to <code>Store</code> itself. The goal here is<br>\nto remove an allocation inside of an <code>Instance</code> and make them a bit<br>\ncheaper to create. Additionally this should open up future possibilities<br>\nlike not creating duplicate trampolines for signatures already in the<br>\n<code>Store</code> when using <code>Func::new</code>.</p>\n</blockquote>",
        "id": 214517632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603666792
    },
    {
        "content": "<p>pepyakin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-521080046\">PR Review</a>.</p>",
        "id": 215160898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604099352
    },
    {
        "content": "<p>pepyakin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#discussion_r515418704\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Since this now stores trampolines, it would be great to update the comment.</p>\n</blockquote>",
        "id": 215160899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604099352
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319\">PR #2319</a> from <code>remove-trampolines-from-instance</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors where trampolines and signature information is<br>\nstored within a <code>Store</code>, namely moving them from<br>\n<code>wasmtime_runtime::Instance</code> instead to <code>Store</code> itself. The goal here is<br>\nto remove an allocation inside of an <code>Instance</code> and make them a bit<br>\ncheaper to create. Additionally this should open up future possibilities<br>\nlike not creating duplicate trampolines for signatures already in the<br>\n<code>Store</code> when using <code>Func::new</code>.</p>\n</blockquote>",
        "id": 215337202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604332467
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-521758745\">PR Review</a>.</p>",
        "id": 215337235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604332479
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#discussion_r516070244\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Indeed!</p>\n</blockquote>",
        "id": 215337236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604332479
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-522126027\">PR Review</a>.</p>",
        "id": 215398039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604363639
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-522126027\">PR Review</a>.</p>",
        "id": 215398040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604363640
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#discussion_r516361153\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Since this function has to take ownership, we might as well make the caller do the clone (if necessary) so that we can avoid clones when they aren't needed. That is, revert the change from taking <code>&amp;WasmFuncType</code> and <code>&amp;ir::Signature</code> back to taking <code>WasmFuncType</code> and <code>ir::Signature</code>.</p>\n</blockquote>",
        "id": 215398041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604363640
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-522151807\">PR Review</a>.</p>",
        "id": 215405562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604369286
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#discussion_r516392676\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is sort of the <code>Entry</code> problem where it's problematic that getting an <code>entry</code> requires <code>wasm.clone()</code> (should probably just so a <code>get</code> followed by an <code>insert</code>, but also that the <code>native</code> isn't always inserted here (although it sometimes is)</p>\n<p>If we think this is an issue I could change the arguments to <code>impl Into&lt;Cow&lt;'_, ...&gt;&gt;</code>, but I was hoping to optimize more for the cache hit use case here rather than the \"need to insert case\". Do you think I should try to go the <code>Cow</code> route though?</p>\n</blockquote>",
        "id": 215405563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604369287
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-522756805\">PR Review</a>.</p>",
        "id": 215490776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604426979
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#discussion_r516862352\">PR Review Comment</a>:</p>\n<blockquote>\n<p>If it doesn't require bending over backwards too much, it would be nice.</p>\n</blockquote>",
        "id": 215490778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604426979
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-522841371\">PR Review</a>.</p>",
        "id": 215504551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604434396
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#discussion_r516929486\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm it turns out that <code>Into&lt;Cow&gt;</code> doesn't have as many implementations as I thought it did so I don't think this will work easily. Digging in more though I'm realizing that we're doing a number of unnecessary allocations in a number of places. In general a <code>Module</code> has no need to store the native signature types (it only needs the wasm signatures).</p>\n<p>Would you be ok landing this as-is and I can have a follow-up which I think makes all the callers only have <code>&amp;WasmFuncType</code> anyway so there's no gain to be had by passing in an owned value?</p>\n</blockquote>",
        "id": 215504552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604434396
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#pullrequestreview-523643571\">PR Review</a>.</p>",
        "id": 215624839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604515792
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319#discussion_r517559280\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, for sure</p>\n</blockquote>",
        "id": 215624840,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604515792
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2319\">PR #2319</a>.</p>",
        "id": 215624854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604515797
    }
]