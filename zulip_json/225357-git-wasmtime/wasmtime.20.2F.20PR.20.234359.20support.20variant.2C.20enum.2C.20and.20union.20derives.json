[
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359\">PR #4359</a> from <code>component-type-derive-more</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is the second stage of implementing #4308.  It adds support for deriving<br>\nvariant, enum, and union impls for <code>ComponentType</code>, <code>Lift</code>, and <code>Lower</code>.  It<br>\nalso fixes derived record impls for generic <code>struct</code>s, which I had intended to<br>\nsupport in my previous commit, but forgot to test.</p>\n<p>Signed-off-by: Joel Dice &lt;<a href=\"mailto:joel.dice@fermyon.com\">joel.dice@fermyon.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 288078749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656618672
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025451951\">PR review</a>.</p>",
        "id": 288083271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656620984
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025451951\">PR review</a>.</p>",
        "id": 288083272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656620984
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911416790\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this mostly to just simplify this for now where you don't have to worry about 16-vs-8  bit loads?</p>\n</blockquote>",
        "id": 288083273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656620984
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911429738\">PR review comment</a>:</p>\n<blockquote>\n<p><code>union</code> could reasonably accept <code>syn::Fields::Unit</code> cases: <code>X</code> should just be treated like <code>X(())</code>. I'm thinking you could simplify a bunch of this by building a <code>Vec&lt;VariantCase&gt;</code> like in <code>expand_variant</code>, even for enums and unions. Only in the <code>enum</code> case do you need to check that all cases have <code>ty: None</code>.</p>\n<p>Similarly, I think all the generated code would be correct for <code>Lift</code> and <code>Lower</code> if you used the <code>expand_variant</code> implementation for all three cases. <code>expand_enum</code> doesn't strictly need to handle non-<code>None</code> case types, but those branches will just never be taken.</p>\n<p>The only thing that's actually different in an interesting way is the type-checking implementation for <code>ComponentType</code>. Unless I've missed something?</p>\n</blockquote>",
        "id": 288084688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656621777
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025470529\">PR review</a>.</p>",
        "id": 288084689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656621777
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911446519\">PR review comment</a>:</p>\n<blockquote>\n<p>Did you notice that both <code>expand_variant</code> and <code>expand_union</code> defer to <code>Expander::expand_variant</code>?  So the duplication is already pretty minimal.  But yeah, <code>expand_variant</code> and <code>expand_union</code> could themselves be combined.</p>\n</blockquote>",
        "id": 288087561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656623319
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025494751\">PR review</a>.</p>",
        "id": 288087562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656623319
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911448041\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I was just keeping it simple to start with.  I was also not sure what the theoretical max was for the component model.  2^32?  More?</p>\n</blockquote>",
        "id": 288087833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656623465
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025496866\">PR review</a>.</p>",
        "id": 288087836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656623465
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911446519\">PR review comment</a>.</p>",
        "id": 288087986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656623558
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025501814\">PR review</a>.</p>",
        "id": 288088449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656623818
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911451538\">PR review comment</a>:</p>\n<blockquote>\n<p>I did notice that, although it took me a few read-throughs. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> So yes, I'm suggesting combining <code>Expander::expand_variant</code> with <code>Expander::expand_enum</code>, except that I know you'll need to take a little care with the implementation for <code>ComponentType</code>. But I'm also suggesting combining the top-level <code>expand_variant</code>, <code>expand_union</code>, and <code>expand_enum</code>.</p>\n</blockquote>",
        "id": 288088450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656623818
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025504505\">PR review</a>.</p>",
        "id": 288088792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656624007
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911453410\">PR review comment</a>:</p>\n<blockquote>\n<p>The <a href=\"https://github.com/WebAssembly/component-model/blob/main/design/mvp/CanonicalABI.md#alignment\">Canonical ABI</a> defines that in the <code>discriminant_type</code> function, and the current maximum is 2^32.</p>\n</blockquote>",
        "id": 288088793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656624007
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911457150\">PR review comment</a>:</p>\n<blockquote>\n<p>I see -- I'll give that a shot.</p>\n</blockquote>",
        "id": 288089540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656624390
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025509647\">PR review</a>.</p>",
        "id": 288089541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656624390
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359\">PR #4359</a> from <code>component-type-derive-more</code> to <code>main</code>.</p>",
        "id": 288094663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656627050
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025541650\">PR review</a>.</p>",
        "id": 288094703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656627075
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#discussion_r911480583\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, that slimmed it down a lot.  Great suggestion!</p>\n</blockquote>",
        "id": 288094704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656627075
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359#pullrequestreview-1025557380\">PR review</a>.</p>",
        "id": 288097304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656628729
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4359\">PR #4359</a>.</p>",
        "id": 288100605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656631111
    }
]