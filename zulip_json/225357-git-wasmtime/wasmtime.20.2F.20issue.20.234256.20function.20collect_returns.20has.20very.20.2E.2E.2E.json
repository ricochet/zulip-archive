[
    {
        "content": "<p>yuyang-ok opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>this segment fault seens only on riscv64 platform, and only with doing the test with <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif</a>.</p>\n<p>here are are gdb prompt</p>\n</blockquote>\n<p>skipped cranelift/filetests/filetests/runtests/i128-load-store.clif: host can't run Aarch64(Aarch64) programs</p>\n<p>Thread 3 \"worker #0\" received signal SIGSEGV, Segmentation fault.<br>\n[Switching to Thread 0x7ffff7c08cd0 (LWP 426)]<br>\nalloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n224     /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs: No such file or directory.<br>\n(gdb) backtrace<br>\n#0  alloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n#1  0x0000555556574d5a in alloc::vec::Vec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::as_ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:1140<br>\n#2  0x000055555657a9d0 in alloc::vec::{impl#10}::deref&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2497<br>\n#3  0x0000555556579ad4 in alloc::vec::{impl#14}::clone&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2543<br>\n#4  0x0000555555c8553a in cranelift_codegen::ir::extfunc::{impl#8}::clone (self=0xf7fc23a00000800f) at cranelift/codegen/src/ir/extfunc.rs:28<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n#6  0x0000555555cb346e in cranelift_filetests::function_runner::CompiledFunction::call (self=0x7fff, arguments=...)<br>\n    at cranelift/filetests/src/function_runner.rs:176<br>\n#7  0x0100000000000000 in ?? ()<br>\n(gdb) frame 5<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n221             let _signature = signature.clone();</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"n\">image</span><span class=\"p\">](</span><span class=\"n\">https</span>:<span class=\"c1\">//user-images.githubusercontent.com/96557710/173004027-e3e5f977-737a-4d3a-bae1-39c26950a09f.png)</span>\n\n<span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">noway</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">bu</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">just</span><span class=\"w\"> </span><span class=\"n\">happend</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">looks</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">.</span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>assert!(self.0.len() &gt;= signature.returns.len()); will segment fault too.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 285636275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654842411
    },
    {
        "content": "<p>yuyang-ok edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>this segment fault seens only on riscv64 platform, and only with doing the test with <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif</a>.</p>\n<p>here are are gdb prompt</p>\n</blockquote>\n<p>skipped cranelift/filetests/filetests/runtests/i128-load-store.clif: host can't run Aarch64(Aarch64) programs</p>\n<p>Thread 3 \"worker #0\" received signal SIGSEGV, Segmentation fault.<br>\n[Switching to Thread 0x7ffff7c08cd0 (LWP 426)]<br>\nalloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n224     /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs: No such file or directory.<br>\n(gdb) backtrace<br>\n#0  alloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n#1  0x0000555556574d5a in alloc::vec::Vec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::as_ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:1140<br>\n#2  0x000055555657a9d0 in alloc::vec::{impl#10}::deref&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2497<br>\n#3  0x0000555556579ad4 in alloc::vec::{impl#14}::clone&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2543<br>\n#4  0x0000555555c8553a in cranelift_codegen::ir::extfunc::{impl#8}::clone (self=0xf7fc23a00000800f) at cranelift/codegen/src/ir/extfunc.rs:28<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n#6  0x0000555555cb346e in cranelift_filetests::function_runner::CompiledFunction::call (self=0x7fff, arguments=...)<br>\n    at cranelift/filetests/src/function_runner.rs:176<br>\n#7  0x0100000000000000 in ?? ()<br>\n(gdb) frame 5<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n221             let _signature = signature.clone();</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"n\">image</span><span class=\"p\">](</span><span class=\"n\">https</span>:<span class=\"c1\">//user-images.githubusercontent.com/96557710/173004027-e3e5f977-737a-4d3a-bae1-39c26950a09f.png)</span>\n\n<span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">noway</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">just</span><span class=\"w\"> </span><span class=\"n\">happend</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">looks</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">.</span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>assert!(self.0.len() &gt;= signature.returns.len()); will segment fault too.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 285636309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654842462
    },
    {
        "content": "<p>yuyang-ok edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>this segment fault seens only on riscv64 platform, and only with doing the test with <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif</a>.</p>\n<p>here are are gdb prompt</p>\n</blockquote>\n<p>skipped cranelift/filetests/filetests/runtests/i128-load-store.clif: host can't run Aarch64(Aarch64) programs</p>\n<p>Thread 3 \"worker #0\" received signal SIGSEGV, Segmentation fault.<br>\n[Switching to Thread 0x7ffff7c08cd0 (LWP 426)]<br>\nalloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n224     /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs: No such file or directory.<br>\n(gdb) backtrace<br>\n#0  alloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n#1  0x0000555556574d5a in alloc::vec::Vec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::as_ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:1140<br>\n#2  0x000055555657a9d0 in alloc::vec::{impl#10}::deref&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2497<br>\n#3  0x0000555556579ad4 in alloc::vec::{impl#14}::clone&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2543<br>\n#4  0x0000555555c8553a in cranelift_codegen::ir::extfunc::{impl#8}::clone (self=0xf7fc23a00000800f) at cranelift/codegen/src/ir/extfunc.rs:28<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n#6  0x0000555555cb346e in cranelift_filetests::function_runner::CompiledFunction::call (self=0x7fff, arguments=...)<br>\n    at cranelift/filetests/src/function_runner.rs:176<br>\n#7  0x0100000000000000 in ?? ()<br>\n(gdb) frame 5<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n221             let _signature = signature.clone();</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"n\">image</span><span class=\"p\">](</span><span class=\"n\">https</span>:<span class=\"c1\">//user-images.githubusercontent.com/96557710/173004027-e3e5f977-737a-4d3a-bae1-39c26950a09f.png)</span>\n\n<span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">noway</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">just</span><span class=\"w\"> </span><span class=\"n\">happend</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">looks</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">.</span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>assert!(self.0.len() &gt;= signature.returns.len()  /* will segment fault too. */  ); </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 285636564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654842695
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152042147\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>What does <code>p *signature</code> show?</p>\n</blockquote>",
        "id": 285638893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654844767
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152051464\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<p>(gdb) backtrace<br>\n#0  alloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n#1  0x0000555556574d5a in alloc::vec::Vec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::as_ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:1140<br>\n#2  0x000055555657a9d0 in alloc::vec::{impl#10}::deref&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2497<br>\n#3  0x0000555556579ad4 in alloc::vec::{impl#14}::clone&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2543<br>\n#4  0x0000555555c8553a in cranelift_codegen::ir::extfunc::{impl#8}::clone (self=0xf7fc23a00000800f) at cranelift/codegen/src/ir/extfunc.rs:28<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n#6  0x0000555555cb346e in cranelift_filetests::function_runner::CompiledFunction::call (self=0x7fff, arguments=...)<br>\n    at cranelift/filetests/src/function_runner.rs:176<br>\n#7  0x0100000000000000 in ?? ()<br>\n(gdb) frame 5<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n221             let _signature = signature.clone();<br>\n(gdb) p *signature<br>\nCannot access memory at address 0xf7fc23a00000800f</p>",
        "id": 285639733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654845540
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152052998\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>And what does <code>info proc maps</code> show?</p>\n</blockquote>",
        "id": 285639872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654845658
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152055170\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>(gdb) info proc maps<br>\nToo many parameters: maps</p>\n</blockquote>",
        "id": 285640043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654845826
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152058551\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>I meant <code>info proc map</code> without the <code>s</code>. My bad.</p>\n</blockquote>",
        "id": 285640399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654846087
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152060135\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>Mapped address spaces:</p>\n<div class=\"codehilite\"><pre><span></span><code>      Start Addr           End Addr       Size     Offset objfile\n  0x555555555000     0x555556ffc000  0x1aa7000        0x0 /root/share/wasmtime/target/riscv64gc-unknown-linux-gnu/debug/clif-util\n  0x555556ffc000     0x5555571c9000   0x1cd000  0x1aa6000 /root/share/wasmtime/target/riscv64gc-unknown-linux-gnu/debug/clif-util\n  0x5555571c9000     0x5555571cd000     0x4000  0x1c73000 /root/share/wasmtime/target/riscv64gc-unknown-linux-gnu/debug/clif-util\n  0x5555571cd000     0x5555571ef000    0x22000        0x0 [heap]\n  0x7fffd0000000     0x7fffd0021000    0x21000        0x0\n  0x7fffd0021000     0x7fffd4000000  0x3fdf000        0x0\n  0x7fffd4000000     0x7fffd4021000    0x21000        0x0\n  0x7fffd4021000     0x7fffd8000000  0x3fdf000        0x0\n  0x7fffd8000000     0x7fffd8021000    0x21000        0x0\n  0x7fffd8021000     0x7fffdc000000  0x3fdf000        0x0\n  0x7fffdc000000     0x7fffdc021000    0x21000        0x0\n  0x7fffdc021000     0x7fffe0000000  0x3fdf000        0x0\n  0x7fffe0000000     0x7fffe0021000    0x21000        0x0\n  0x7fffe0021000     0x7fffe4000000  0x3fdf000        0x0\n  0x7fffe4000000     0x7fffe4021000    0x21000        0x0\n  0x7fffe4021000     0x7fffe8000000  0x3fdf000        0x0\n  0x7fffe8000000     0x7fffe8021000    0x21000        0x0\n  0x7fffe8021000     0x7fffec000000  0x3fdf000        0x0\n  0x7fffec000000     0x7fffec021000    0x21000        0x0\n  0x7fffec021000     0x7ffff0000000  0x3fdf000        0x0\n  0x7ffff0000000     0x7ffff0021000    0x21000        0x0\n  0x7ffff0021000     0x7ffff4000000  0x3fdf000        0x0\n  0x7ffff6bed000     0x7ffff6bee000     0x1000        0x0\n  0x7ffff6bee000     0x7ffff6dee000   0x200000        0x0\n  0x7ffff6df1000     0x7ffff6df2000     0x1000        0x0\n  0x7ffff6df2000     0x7ffff6ff2000   0x200000        0x0\n  0x7ffff6ff8000     0x7ffff6ff9000     0x1000        0x0\n  0x7ffff6ff9000     0x7ffff71f9000   0x200000        0x0\n  0x7ffff71f9000     0x7ffff71fa000     0x1000        0x0\n  0x7ffff71fa000     0x7ffff73fa000   0x200000        0x0\n  0x7ffff73fd000     0x7ffff73fe000     0x1000        0x0\n  0x7ffff73fe000     0x7ffff75fe000   0x200000        0x0\n  0x7ffff7601000     0x7ffff7602000     0x1000        0x0\n</code></pre></div>\n\n</blockquote>",
        "id": 285640493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654846197
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152060979\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>0x7ffff7602000     0x7ffff7802000   0x200000        0x0<br>\n      0x7ffff7805000     0x7ffff7806000     0x1000        0x0<br>\n      0x7ffff7806000     0x7ffff7a06000   0x200000        0x0<br>\n      0x7ffff7a06000     0x7ffff7a07000     0x1000        0x0<br>\n      0x7ffff7a07000     0x7ffff7a09000     0x2000        0x0<br>\n      0x7ffff7a09000     0x7ffff7a0a000     0x1000        0x0<br>\n      0x7ffff7a0a000     0x7ffff7c0a000   0x200000        0x0<br>\n      0x7ffff7c0a000     0x7ffff7c0b000     0x1000        0x0<br>\n      0x7ffff7c0b000     0x7ffff7c0d000     0x2000        0x0<br>\n      0x7ffff7c0d000     0x7ffff7c0e000     0x1000        0x0<br>\n      0x7ffff7c0e000     0x7ffff7e10000   0x202000        0x0<br>\n      0x7ffff7e10000     0x7ffff7f13000   0x103000        0x0 /lib/riscv64-linux-gnu/libc-2.33.so<br>\n      0x7ffff7f13000     0x7ffff7f17000     0x4000   0x102000 /lib/riscv64-linux-gnu/libc-2.33.so<br>\n      0x7ffff7f17000     0x7ffff7f19000     0x2000   0x106000 /lib/riscv64-linux-gnu/libc-2.33.so<br>\n      0x7ffff7f19000     0x7ffff7f21000     0x8000        0x0<br>\n      0x7ffff7f21000     0x7ffff7f23000     0x2000        0x0 /lib/riscv64-linux-gnu/libdl-2.33.so<br>\n      0x7ffff7f23000     0x7ffff7f24000     0x1000     0x1000 /lib/riscv64-linux-gnu/libdl-2.33.so<br>\n      0x7ffff7f24000     0x7ffff7f25000     0x1000     0x2000 /lib/riscv64-linux-gnu/libdl-2.33.so<br>\n      0x7ffff7f25000     0x7ffff7fa6000    0x81000        0x0 /lib/riscv64-linux-gnu/libm-2.33.so<br>\n      0x7ffff7fa6000     0x7ffff7fa7000     0x1000    0x81000 /lib/riscv64-linux-gnu/libm-2.33.so<br>\n      0x7ffff7fa7000     0x7ffff7fa8000     0x1000    0x81000 /lib/riscv64-linux-gnu/libm-2.33.so<br>\n      0x7ffff7fa8000     0x7ffff7fa9000     0x1000    0x82000 /lib/riscv64-linux-gnu/libm-2.33.so<br>\n      0x7ffff7fa9000     0x7ffff7fbd000    0x14000        0x0 /lib/riscv64-linux-gnu/libpthread-2.33.so<br>\n      0x7ffff7fbd000     0x7ffff7fbe000     0x1000    0x13000 /lib/riscv64-linux-gnu/libpthread-2.33.so<br>\n      0x7ffff7fbe000     0x7ffff7fbf000     0x1000    0x14000 /lib/riscv64-linux-gnu/libpthread-2.33.so<br>\n      0x7ffff7fbf000     0x7ffff7fc3000     0x4000        0x0<br>\n      0x7ffff7fc3000     0x7ffff7fd5000    0x12000        0x0 /lib/riscv64-linux-gnu/libgcc_s.so.1<br>\n      0x7ffff7fd5000     0x7ffff7fd6000     0x1000    0x11000 /lib/riscv64-linux-gnu/libgcc_s.so.1<br>\n      0x7ffff7fd6000     0x7ffff7fd7000     0x1000    0x12000 /lib/riscv64-linux-gnu/libgcc_s.so.1<br>\n      0x7ffff7fd7000     0x7ffff7fd9000     0x2000        0x0<br>\n      0x7ffff7fd9000     0x7ffff7fda000     0x1000        0x0<br>\n      0x7ffff7fda000     0x7ffff7fdb000     0x1000        0x0<br>\n      0x7ffff7fdb000     0x7ffff7fdd000     0x2000        0x0<br>\n      0x7ffff7fdd000     0x7ffff7fdf000     0x2000        0x0 [vvar]<br>\n      0x7ffff7fdf000     0x7ffff7fe1000     0x2000        0x0 [vdso]<br>\n      0x7ffff7fe1000     0x7ffff7ffc000    0x1b000        0x0 /lib/riscv64-linux-gnu/ld-2.33.so<br>\n      0x7ffff7ffc000     0x7ffff7ffd000     0x1000        0x0<br>\n</p>\n</blockquote>",
        "id": 285640577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654846257
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152061349\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>0x7ffff7ffd000     0x7ffff7ffe000     0x1000    0x1b000 /lib/riscv64-linux-gnu/ld-2.33.so<br>\n      0x7ffff7ffe000     0x7ffff8000000     0x2000    0x1c000 /lib/riscv64-linux-gnu/ld-2.33.so<br>\n      0x7ffffffdf000     0x800000000000    0x21000        0x0 [stack]<br>\n</p>\n</blockquote>",
        "id": 285640610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654846285
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152068266\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>Looks like that pointer is getting corrupted pretty badly. There is no memory mapped nearby. You may need to poke around in <code>CompiledFunction::call</code> and elsewhere to see where the bad pointer originated from.</p>\n</blockquote>",
        "id": 285641265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654846792
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152069770\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>ok</p>\n</blockquote>",
        "id": 285641397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654846902
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152069770\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>ok,thanks.</p>\n</blockquote>",
        "id": 285643540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654848506
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256#issuecomment-1152802210\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>maybe My some other code corrupted the pointer,I need some time to figure out. close it for now.</p>\n</blockquote>",
        "id": 285744351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654904273
    },
    {
        "content": "<p>yuyang-ok closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4256\">issue #4256</a>:</p>\n<blockquote>\n<p>this segment fault seens only on riscv64 platform, and only with doing the test with <br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif\">https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-load-store.clif</a>.</p>\n<p>here are are gdb prompt</p>\n</blockquote>\n<p>skipped cranelift/filetests/filetests/runtests/i128-load-store.clif: host can't run Aarch64(Aarch64) programs</p>\n<p>Thread 3 \"worker #0\" received signal SIGSEGV, Segmentation fault.<br>\n[Switching to Thread 0x7ffff7c08cd0 (LWP 426)]<br>\nalloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n224     /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs: No such file or directory.<br>\n(gdb) backtrace<br>\n#0  alloc::raw_vec::RawVec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/raw_vec.rs:224<br>\n#1  0x0000555556574d5a in alloc::vec::Vec&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt;::as_ptr&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f) at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:1140<br>\n#2  0x000055555657a9d0 in alloc::vec::{impl#10}::deref&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2497<br>\n#3  0x0000555556579ad4 in alloc::vec::{impl#14}::clone&lt;cranelift_codegen::ir::extfunc::AbiParam, alloc::alloc::Global&gt; (self=0xf7fc23a00000800f)<br>\n    at /rustc/c35035cefc709abddabfb28ecc6a326458d46ce2/library/alloc/src/vec/mod.rs:2543<br>\n#4  0x0000555555c8553a in cranelift_codegen::ir::extfunc::{impl#8}::clone (self=0xf7fc23a00000800f) at cranelift/codegen/src/ir/extfunc.rs:28<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n#6  0x0000555555cb346e in cranelift_filetests::function_runner::CompiledFunction::call (self=0x7fff, arguments=...)<br>\n    at cranelift/filetests/src/function_runner.rs:176<br>\n#7  0x0100000000000000 in ?? ()<br>\n(gdb) frame 5<br>\n#5  0x0000555555cb3786 in cranelift_filetests::function_runner::UnboxedValues::collect_returns (self=0x7ffff7c01b08, signature=0xf7fc23a00000800f)<br>\n    at cranelift/filetests/src/function_runner.rs:221<br>\n221             let _signature = signature.clone();</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">!</span><span class=\"p\">[</span><span class=\"n\">image</span><span class=\"p\">](</span><span class=\"n\">https</span>:<span class=\"c1\">//user-images.githubusercontent.com/96557710/173004027-e3e5f977-737a-4d3a-bae1-39c26950a09f.png)</span>\n\n<span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">noway</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">can</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">clone</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">just</span><span class=\"w\"> </span><span class=\"n\">happend</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"n\">looks</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">signature</span><span class=\"p\">.</span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>assert!(self.0.len() &gt;= signature.returns.len()  /* will segment fault too. */  ); </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code>\n</code></pre></div>",
        "id": 285744352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1654904273
    }
]