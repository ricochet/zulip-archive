[
    {
        "content": "<p>ctaggart opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7192\">issue #7192</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Publish wasmtime builds to <a href=\"http://npmjs.com\">npmjs.com</a>.</p>\n<h4>Benefit</h4>\n<p>It will make getting wasmtime installed easier in many situations. For example, component component situations.</p>\n<h4>Implementation</h4>\n<p>I think it is probably best to map directly to your existing binaries and create:</p>\n<ul>\n<li>@bytecodealliance/wasmtime-cli-aarch64-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-aarch64-macos@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-riscv64gc-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-s390x-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-macos@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-mingw@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-windows@13.0.0</li>\n</ul>\n<p>I tried it out, but with just x86_64 builds.</p>\n<p><a href=\"https://www.npmjs.com/package/@cataggar/wasmtime-cli-linux\">https://www.npmjs.com/package/@cataggar/wasmtime-cli-linux</a><br>\n<a href=\"https://www.npmjs.com/package/@cataggar/wasmtime-cli-macos\">https://www.npmjs.com/package/@cataggar/wasmtime-cli-macos</a><br>\n<a href=\"https://www.npmjs.com/package/@cataggar/wasmtime-cli-windows\">https://www.npmjs.com/package/@cataggar/wasmtime-cli-windows</a></p>\n<p>To use:<br>\nnpm -g i @cataggar/wasmtime-cli-linux<br>\nnpm -g i @cataggar/wasmtime-cli-macos<br>\nnpm -g i @cataggar/wasmtime-cli-windows</p>\n<p>You can see how I made it with:<br>\n<a href=\"https://github.com/ctaggart/npm-wasmtime-cli\">https://github.com/ctaggart/npm-wasmtime-cli</a></p>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 395564306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696788139
    },
    {
        "content": "<p>ctaggart edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7192\">issue #7192</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Publish wasmtime builds to <a href=\"http://npmjs.com\">npmjs.com</a>.</p>\n<h4>Benefit</h4>\n<p>It will make getting wasmtime installed easier in many situations. For example, component governance situations.</p>\n<h4>Implementation</h4>\n<p>I think it is probably best to map directly to your existing binaries and create:</p>\n<ul>\n<li>@bytecodealliance/wasmtime-cli-aarch64-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-aarch64-macos@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-riscv64gc-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-s390x-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-linux@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-macos@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-mingw@13.0.0</li>\n<li>@bytecodealliance/wasmtime-cli-x86_64-windows@13.0.0</li>\n</ul>\n<p>I tried it out, but with just x86_64 builds.</p>\n<p><a href=\"https://www.npmjs.com/package/@cataggar/wasmtime-cli-linux\">https://www.npmjs.com/package/@cataggar/wasmtime-cli-linux</a><br>\n<a href=\"https://www.npmjs.com/package/@cataggar/wasmtime-cli-macos\">https://www.npmjs.com/package/@cataggar/wasmtime-cli-macos</a><br>\n<a href=\"https://www.npmjs.com/package/@cataggar/wasmtime-cli-windows\">https://www.npmjs.com/package/@cataggar/wasmtime-cli-windows</a></p>\n<p>To use:<br>\nnpm -g i @cataggar/wasmtime-cli-linux<br>\nnpm -g i @cataggar/wasmtime-cli-macos<br>\nnpm -g i @cataggar/wasmtime-cli-windows</p>\n<p>You can see how I made it with:<br>\n<a href=\"https://github.com/ctaggart/npm-wasmtime-cli\">https://github.com/ctaggart/npm-wasmtime-cli</a></p>\n<h4>Alternatives</h4>\n</blockquote>",
        "id": 395564414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696788243
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7192#issuecomment-1753041382\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7192\">issue #7192</a>:</p>\n<blockquote>\n<p>Thanks for the report, but could you perhaps expand more on what the benefit of this might be? I'm at least not familiar of prior art of publishing Rust crate binaries on NPM, and while I don't doubt that it's possible it naively seems to me like a mishmash of different language ecosystems. I'm likely missing something thought so I'm curious to hear more about your motivations for this.</p>\n</blockquote>",
        "id": 395702407,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696858961
    },
    {
        "content": "<p>cataggar <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7192#issuecomment-1753100900\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7192\">issue #7192</a>:</p>\n<blockquote>\n<p>An example would be the ability to add it an approved <a href=\"https://learn.microsoft.com/en-us/azure/devops/artifacts/start-using-azure-artifacts?view=azure-devops&amp;tabs=nuget%2Corgstorage\">Azure Artifacts</a> feed. Azure Artifacts supports npm packages. Users and automation of the approved feed then are able to easily install wasmtime binary. Automation may be an Azure Pipeline. It would be easier to automate with <code>npm --global install @bytecodealliance/wasmtime-cli-x86_64-linux@13.0.0</code>.</p>\n</blockquote>",
        "id": 395709285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696861015
    }
]