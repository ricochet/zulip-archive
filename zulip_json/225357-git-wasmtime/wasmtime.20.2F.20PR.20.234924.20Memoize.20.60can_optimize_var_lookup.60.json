[
    {
        "content": "<p>adambratschikaye opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4924\">PR #4924</a> from <code>memoize-can_optimize_var_lookup</code> to <code>main</code>:</p>\n<blockquote>\n<p>This fixes issue <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4923\">https://github.com/bytecodealliance/wasmtime/issues/4923</a>.</p>\n<p><code>can_optimize_var_lookup</code> can have quadratic behavior if there is a chain of blocks each containing a local.get instruction because each run can walk up the entire chain. This change memoizes the results of <code>can_optimize_var_lookup</code> so that we can stop following the chain of predecessors when we hit a block that has previously been handled (making the operation linear again).</p>\n<p>For the example wasm in issue <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4923\">https://github.com/bytecodealliance/wasmtime/issues/4923</a> this reduces the compile time from 2.4 seconds to 80 milliseconds on my machine.</p>\n<p>I haven't added any test cases because this is an optimization, but happy to add some if needed.</p>\n<p>Running this on the <code>bz2</code>, <code>spidermonkey</code>, and <code>pulldown-cmark</code> benchmarks in <code>sightglass</code> showed a slight slowdown on <code>spidermonkey</code> and no change on the others. But after I switched the <code>visited</code> field from a <code>HashSet</code> to <code>SecondaryMap</code> there's no regression overall:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">sightglass</span><span class=\"o\">-</span><span class=\"n\">cli</span><span class=\"w\"> </span><span class=\"n\">benchmark</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">stop</span><span class=\"o\">-</span><span class=\"n\">after</span><span class=\"w\"> </span><span class=\"n\">compilation</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">wasmtime_main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">wasmtime_all_secondarymap</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">760212555.60</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">294917212.14</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">all_secondarymap</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.01</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.03</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">28814332410</span><span class=\"w\"> </span><span class=\"mf\">35120475949.50</span><span class=\"w\"> </span><span class=\"mi\">36287395200</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">all_secondarymap</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">34284188130</span><span class=\"w\"> </span><span class=\"mf\">35880688505.10</span><span class=\"w\"> </span><span class=\"mi\">36647154330</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">505446060</span><span class=\"w\"> </span><span class=\"mf\">603389897.40</span><span class=\"w\"> </span><span class=\"mi\">1110277230</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">all_secondarymap</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">476744010</span><span class=\"w\"> </span><span class=\"mf\">579360685.20</span><span class=\"w\"> </span><span class=\"mi\">853570110</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n\n<span class=\"n\">compilation</span><span class=\"w\"> </span>:: <span class=\"nc\">cycles</span><span class=\"w\"> </span>:: <span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"n\">No</span><span class=\"w\"> </span><span class=\"n\">difference</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"p\">.</span><span class=\"w\"></span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">1189612080</span><span class=\"w\"> </span><span class=\"mf\">1520043626.70</span><span class=\"w\"> </span><span class=\"mi\">2771829660</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">all_secondarymap</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">1347713850</span><span class=\"w\"> </span><span class=\"mf\">1514585763.90</span><span class=\"w\"> </span><span class=\"mi\">1904475450</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 299582560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663600198
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4924\">PR #4924</a>.</p>",
        "id": 299595921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663603387
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4924#pullrequestreview-1112607620\">PR review</a>.</p>",
        "id": 299609303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663607829
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4924\">PR #4924</a>.</p>",
        "id": 299609461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663607892
    }
]