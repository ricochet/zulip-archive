[
    {
        "content": "<p>ueno opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>If static memory is disabled with <code>--static-memory-maximum-size 0</code>, certain programs run into an infinite loop, apparently in the compilation phase:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"go\">cargo new demo --bin</span>\n<span class=\"go\">cd demo</span>\n<span class=\"go\">echo &#39;rand = &quot;*&quot;&#39; &gt;&gt; Cargo.toml</span>\n<span class=\"go\">cat &gt;src/main.rs &lt;&lt;EOF</span>\n<span class=\"go\">use rand::prelude::*;</span>\n\n<span class=\"go\">fn main() {</span>\n<span class=\"go\">    let mut rng = rand::thread_rng();</span>\n<span class=\"go\">    let number: u32 = rng.gen();</span>\n<span class=\"go\">    println!(&quot;{:08x}&quot;, number);</span>\n<span class=\"go\">}</span>\n<span class=\"go\">EOF</span>\n\n<span class=\"go\">cargo build --target wasm32-wasi</span>\n<span class=\"go\">cd ../wasmtime</span>\n<span class=\"go\">cargo run -- run --static-memory-maximum-size 0 ../demo/target/wasm32-wasi/debug/demo.wasm</span>\n</code></pre></div>\n\n\n<p>The demo program is using the <code>rand</code> crate. If I replace the use of it with the <code>getrandom</code> crate as below, it works:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"k\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">getrandom</span>::<span class=\"n\">getrandom</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">u32</span>::<span class=\"n\">from_le_bytes</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 209867436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599891849
    },
    {
        "content": "<p>ueno labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>If static memory is disabled with <code>--static-memory-maximum-size 0</code>, certain programs run into an infinite loop, apparently in the compilation phase:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"go\">cargo new demo --bin</span>\n<span class=\"go\">cd demo</span>\n<span class=\"go\">echo &#39;rand = &quot;*&quot;&#39; &gt;&gt; Cargo.toml</span>\n<span class=\"go\">cat &gt;src/main.rs &lt;&lt;EOF</span>\n<span class=\"go\">use rand::prelude::*;</span>\n\n<span class=\"go\">fn main() {</span>\n<span class=\"go\">    let mut rng = rand::thread_rng();</span>\n<span class=\"go\">    let number: u32 = rng.gen();</span>\n<span class=\"go\">    println!(&quot;{:08x}&quot;, number);</span>\n<span class=\"go\">}</span>\n<span class=\"go\">EOF</span>\n\n<span class=\"go\">cargo build --target wasm32-wasi</span>\n<span class=\"go\">cd ../wasmtime</span>\n<span class=\"go\">cargo run -- run --static-memory-maximum-size 0 ../demo/target/wasm32-wasi/debug/demo.wasm</span>\n</code></pre></div>\n\n\n<p>The demo program is using the <code>rand</code> crate. If I replace the use of it with the <code>getrandom</code> crate as below, it works:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"k\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">getrandom</span>::<span class=\"n\">getrandom</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">u32</span>::<span class=\"n\">from_le_bytes</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 209867437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599891849
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198#issuecomment-691435682\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>Works for me</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">demo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\">   </span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">06</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">07</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">105</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">746</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">demo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\">   </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">02</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">04</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">055</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"w\"></span>\n<span class=\"o\">~~~</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 209869339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599896189
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198#issuecomment-691435682\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>Works for me</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasi</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">9.0</span><span class=\"o\">+</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">snapshot</span><span class=\"o\">-</span><span class=\"n\">preview1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">cfg</span><span class=\"o\">-</span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.10</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">ppv</span><span class=\"o\">-</span><span class=\"n\">lite86</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">2.9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">getrandom</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.15</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">rand_core</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">5.1</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">rand_chacha</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">2.2</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">rand</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">7.3</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">demo</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">1.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">tmp</span><span class=\"o\">/</span><span class=\"n\">demo</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">3.08</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">demo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\">   </span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">06</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">07</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">105</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">746</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">demo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\">   </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">02</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">04</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">system</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">cpu</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">055</span><span class=\"w\"> </span><span class=\"n\">total</span><span class=\"w\"></span>\n<span class=\"o\">~~~</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 209869347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599896226
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198#issuecomment-691436082\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>Try using a release mode wasmtime:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">memory</span><span class=\"o\">-</span><span class=\"n\">maximum</span><span class=\"o\">-</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">demo</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">demo</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 209869403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599896337
    },
    {
        "content": "<p>ueno <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198#issuecomment-691437897\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>Thank you for taking a look! Indeed, using the release build helps, though it still hangs with the debug build.</p>\n</blockquote>",
        "id": 209869750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599897008
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198#issuecomment-691440829\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>If you wait like 2 minutes with a debug build, does it finish? It may just be very slow.</p>\n</blockquote>",
        "id": 209870347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599897973
    },
    {
        "content": "<p>ueno <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198#issuecomment-691445984\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>You are right; indeed it finishes after ~3min:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"gp\">$</span> <span class=\"nb\">time</span> ~/devel/wasmtime/target/debug/wasmtime --static-memory-maximum-size <span class=\"m\">0</span> ./target/wasm32-wasi/debug/demo.wasm\n<span class=\"go\">4839175a</span>\n<span class=\"go\">~/devel/wasmtime/target/debug/wasmtime --static-memory-maximum-size 0   167.70s user 0.14s system 103% cpu 2:41.38 total</span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 209871312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599899736
    },
    {
        "content": "<p>ueno closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2198\">Issue #2198</a>:</p>\n<blockquote>\n<p>If static memory is disabled with <code>--static-memory-maximum-size 0</code>, certain programs run into an infinite loop, apparently in the compilation phase:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"go\">cargo new demo --bin</span>\n<span class=\"go\">cd demo</span>\n<span class=\"go\">echo &#39;rand = &quot;*&quot;&#39; &gt;&gt; Cargo.toml</span>\n<span class=\"go\">cat &gt;src/main.rs &lt;&lt;EOF</span>\n<span class=\"go\">use rand::prelude::*;</span>\n\n<span class=\"go\">fn main() {</span>\n<span class=\"go\">    let mut rng = rand::thread_rng();</span>\n<span class=\"go\">    let number: u32 = rng.gen();</span>\n<span class=\"go\">    println!(&quot;{:08x}&quot;, number);</span>\n<span class=\"go\">}</span>\n<span class=\"go\">EOF</span>\n\n<span class=\"go\">cargo build --target wasm32-wasi</span>\n<span class=\"go\">cd ../wasmtime</span>\n<span class=\"go\">cargo run -- run --static-memory-maximum-size 0 ../demo/target/wasm32-wasi/debug/demo.wasm</span>\n</code></pre></div>\n\n\n<p>The demo program is using the <code>rand</code> crate. If I replace the use of it with the <code>getrandom</code> crate as below, it works:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"k\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"p\">];</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">getrandom</span>::<span class=\"n\">getrandom</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"p\">).</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">u32</span>::<span class=\"n\">from_le_bytes</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 209871356,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599899767
    }
]