[
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 417522511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041487
    },
    {
        "content": "<p>rvolosatovs edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>This allows for embedders to introspect the component type to e.g. construct <code>Val</code>s of complex types expected by the components at runtime.<br>\nCloses #7726 <br>\nI'll work on adding a simple test once I verify this covers my own use case</p>\n<p>cc @alexcrichton </p>\n</blockquote>",
        "id": 417522551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041503
    },
    {
        "content": "<p>rvolosatovs <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1906866933\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>@alexcrichton I've studied the <code>wasmtime_environ</code> implementation a little bit and looks like I came up with a solution that makes sense (after all types are resolved, \"synthesize\" a <code>TypeComponent</code> and store in <code>ComponentTypes</code> on <code>finish</code>).</p>\n<p>I've added a test case reusing the <code>dynamic::everything</code> (it does not actually contain everything, but hopefully this is \"good enough\"). PTAL</p>\n</blockquote>",
        "id": 417523087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041713
    },
    {
        "content": "<p><strong>rvolosatovs</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a> as ready for review.</p>",
        "id": 417523093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041715
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 417523094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041716
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 417523095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041716
    },
    {
        "content": "<p>rvolosatovs edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1906866933\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>@alexcrichton I've studied the <code>wasmtime_environ</code> implementation a little bit and looks like I came up with a solution that makes sense (after all types are resolved, \"synthesize\" a <code>TypeComponent</code> and store in <code>ComponentTypes</code> on <code>finish</code>).</p>\n<p>I've added a test case reusing a big chunk of the <code>dynamic::everything</code> component (it does not actually contain everything, but hopefully this is \"good enough\"). PTAL</p>\n</blockquote>",
        "id": 417523181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706041747
    },
    {
        "content": "<p>rvolosatovs edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1906866933\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>@alexcrichton I've studied the <code>wasmtime_environ</code> implementation a little bit and looks like I came up with a solution that makes sense (after all types are resolved, \"synthesize\" a <code>TypeComponent</code> and store in <code>ComponentTypes</code> on <code>finish</code> to acquire a type index, which is then propagated further).<br>\nI had to also add the type index info to exports, which was missing.</p>\n<p>I've added a test case reusing a big chunk of the <code>dynamic::everything</code> component (it does not actually contain everything, but hopefully this is \"good enough\"). PTAL</p>\n</blockquote>",
        "id": 417530437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706044758
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 417534220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706046272
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1841798609\">PR review</a>.</p>",
        "id": 417680321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706113121
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1841798609\">PR review</a>.</p>",
        "id": 417680322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706113121
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1465178536\">PR review comment</a>:</p>\n<blockquote>\n<p>This is the main thing that I'm worried about with this PR right now. This means that if a component exports a locally-defined core wasm module and/or a \"bag of items\" instance then wasmtime will lie and not actually report the export from the type. I think it should be possible to implement this though with some more type-threading-around, however. All the types of all intermediate values are present and accounted for during validation, we just need to pluck it out at the right time and thread it through the system to show up here.</p>\n</blockquote>",
        "id": 417680323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706113121
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 418069610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706185947
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 418070738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706186358
    },
    {
        "content": "<p>rvolosatovs <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1910127240\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>@alexcrichton although in our conversation yesterday we discussed that the static module and \"instance item bag\" case type indexes should be constructed somewhere along the way and thrown out, that did not seem to be the case in all occurrences, therefore in the proposed approach the static module type is \"synthesized\" from compiled artifacts on <code>finish</code> and for cases where instance type is not assigned yet, that is also done recursively in the same step.<br>\nNote that updated test case - I duplicated, for the most part, test cases that were causing panics during development due to type not being available (in particular, the \"instance item bag\" case)</p>\n</blockquote>",
        "id": 418071399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706186604
    },
    {
        "content": "<p>rvolosatovs edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1910127240\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>@alexcrichton although in our conversation yesterday we discussed that the static module and \"instance item bag\" case type indexes should be constructed somewhere along the way and thrown out, that did not seem to be the case in all occurrences, therefore in the proposed approach the static module type is \"synthesized\" from compiled artifacts on <code>finish</code> for cases where instance type is not assigned yet, that is also done recursively in the same step.<br>\nNote that updated test case - I duplicated, for the most part, test cases that were causing panics during development due to type not being available (in particular, the \"instance item bag\" case)</p>\n</blockquote>",
        "id": 418071441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706186625
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1843632938\">PR review</a>.</p>",
        "id": 418071573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706186673
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1466318625\">PR review comment</a>:</p>\n<blockquote>\n<p>It appears that we can pluck most of these out, but not for all cases, see updated implementation</p>\n</blockquote>",
        "id": 418071574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706186673
    },
    {
        "content": "<p><strong>rvolosatovs</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 418071592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706186680
    },
    {
        "content": "<p>rvolosatovs updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 418072385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706186977
    },
    {
        "content": "<p>rvolosatovs submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1843660563\">PR review</a>.</p>",
        "id": 418073746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706187433
    },
    {
        "content": "<p>rvolosatovs created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1466335128\">PR review comment</a>:</p>\n<blockquote>\n<p>@alexcrichton I'm getting a bit lost here, is <code>ty</code> here the correct type index or is it actually the parent instance type index?</p>\n</blockquote>",
        "id": 418073747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706187433
    },
    {
        "content": "<p>rvolosatovs deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#discussion_r1466335128\">PR review comment</a>.</p>",
        "id": 418253620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706267059
    },
    {
        "content": "<p>rvolosatovs edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1910127240\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>@alexcrichton although in our conversation yesterday we discussed that the static module and \"instance item bag\" case type indexes should be constructed somewhere along the way and thrown out, that did not seem to be the case in all occurrences, therefore in the proposed approach the static module type is \"synthesized\" from compiled artifacts on <code>finish</code> for cases where instance type is not assigned yet, that is also done recursively in the same step.<br>\nNote the updated test case - I duplicated, for the most part, test cases that were causing panics during development due to type not being available (in particular, the \"instance item bag\" case)</p>\n</blockquote>",
        "id": 418336797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706296453
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#pullrequestreview-1846460012\">PR review</a>:</p>\n<blockquote>\n<p>Looks great to me, thanks!</p>\n</blockquote>",
        "id": 418343550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706299343
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>.</p>",
        "id": 418349288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706302177
    },
    {
        "content": "<p>sehz <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804#issuecomment-1913679888\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7804\">PR #7804</a>:</p>\n<blockquote>\n<p>Nice work!</p>\n</blockquote>",
        "id": 418523398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706465700
    }
]