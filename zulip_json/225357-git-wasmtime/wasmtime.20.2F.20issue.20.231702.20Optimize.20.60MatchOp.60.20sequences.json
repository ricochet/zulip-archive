[
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1702#issuecomment-974306616\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1702\">issue #1702</a>:</p>\n<blockquote>\n<p>Peepmatic was removed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3543\">https://github.com/bytecodealliance/wasmtime/pull/3543</a></p>\n</blockquote>",
        "id": 262108001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637346422
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1702\">issue #1702</a>:</p>\n<blockquote>\n<p>Some <code>MatchOp</code>s subsume others. For example, <code>IsPowerOfTwo</code> checks that some value is known to be a constant value that is a power of two, and <code>IsConst</code> checks whether a value is known to be a constant. Therefore, it doesn't make sense to have a sequence of <code>MatchOp</code>s that includes both <code>IsPowerOfTwo</code> and <code>IsConst</code> since the former subsumes the latter.</p>\n<p>We should add a micro pass to the peepmatic compilation pipeline to remove subsumed match operations. This will result in smaller and faster-to-interpret generated automata.</p>\n</blockquote>",
        "id": 262108008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637346423
    }
]