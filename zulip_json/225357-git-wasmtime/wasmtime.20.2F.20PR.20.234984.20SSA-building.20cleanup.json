[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984\">PR #4984</a> from <code>ssa-cleanup</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a collection of all the cleanups I set aside while working on #4955 and #4966. According to DHAT and hyperfine, these patches together have almost no effect on performance. DHAT says this reduces total memory allocated, max heap size, and bytes written, while increasing instructions retired and bytes read, but all by tiny fractions of a percent.</p>\n</blockquote>",
        "id": 301540025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664489186
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984\">PR #4984</a>.</p>",
        "id": 301540026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664489187
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#pullrequestreview-1126053909\">PR review</a>.</p>",
        "id": 301541233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664489872
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#pullrequestreview-1126053909\">PR review</a>.</p>",
        "id": 301541236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664489872
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#discussion_r984062338\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this results in a change in behavior with respect to before: earlier we had an assert that ensured a block could only be sealed once (line 437 in the original); now we silently accept <code>Yes</code> here. That is probably OK -- the effect is nothing if already sealed -- but I just want to make sure we've thought about this and that it doesn't contradict docs elsewhere?</p>\n</blockquote>",
        "id": 301541237,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664489872
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#discussion_r984061070\">PR review comment</a>:</p>\n<blockquote>\n<p>I wonder: is this actually necessary? <code>SecondaryMap</code> (or at least, one created with <code>::with_default()</code>) will return a readonly borrow of some shared \"default\" value for an <code>Index</code> of a non-existing index, or will dynamically expand as needed for an <code>IndexMut</code> access; the lack of prior expansion is unobservable (as opposed to just-in-time expansion), I think. Or is that not the case?</p>\n</blockquote>",
        "id": 301541238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664489872
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#discussion_r984068667\">PR review comment</a>:</p>\n<blockquote>\n<p>In terms of public API, the behavior is unchanged. I moved the assert to <code>seal_block</code>; and <code>seal_all_blocks</code> was only calling <code>seal_one_block</code> if the block was not already sealed.</p>\n<p>Making the internal helpers just no-op for sealed blocks meant that I could remove a conditional from <code>seal_all_blocks</code> and check only once in <code>mark_block_sealed</code> instead.</p>\n<p>As far as private callers go, <code>append_jump_argument</code> calls <code>mark_block_sealed</code> but only on a block it just created, so it definitely isn't sealed.</p>\n</blockquote>",
        "id": 301542265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664490463
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#pullrequestreview-1126064080\">PR review</a>.</p>",
        "id": 301542266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664490463
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#pullrequestreview-1126069520\">PR review</a>.</p>",
        "id": 301543186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664490985
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984#discussion_r984072562\">PR review comment</a>:</p>\n<blockquote>\n<p>I almost had myself convinced that I could delete <code>declare_block</code> entirely, because as you say, the allocated size of a <code>SecondaryMap</code> is unobservable... almost.</p>\n<p>The exception is <code>SecondaryMap::keys</code>, which iterates only over indexes that are currently initialized. And <code>seal_all_blocks</code> uses <code>self.ssa_blocks.keys()</code> to determine which blocks need to be sealed.</p>\n<p>So if I don't ensure that the map has grown at least to the declared block's index, then I think there's a sequence of public API calls against a <code>FunctionBuilder</code> that would hit a debug assertion. It's something like <code>create_block</code>, <code>switch_to_block</code>, <code>ensure_inserted_block</code>, and <code>finalize</code>, without declaring any predecessors or calling <code>use_var</code>.</p>\n<p>I didn't specifically test that because it was starting to make my head hurt. So maybe it's actually okay, but I didn't want to think about it further.</p>\n</blockquote>",
        "id": 301543187,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664490985
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984\">PR #4984</a> from <code>ssa-cleanup</code> to <code>main</code>.</p>",
        "id": 301543507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664491155
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4984\">PR #4984</a>.</p>",
        "id": 301551345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664495988
    }
]