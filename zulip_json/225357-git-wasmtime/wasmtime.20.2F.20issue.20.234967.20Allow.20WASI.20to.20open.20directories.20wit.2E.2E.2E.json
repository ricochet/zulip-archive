[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#issuecomment-1258888633\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">issue #4967</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 300929078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664246275
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#issuecomment-1260134333\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">issue #4967</a>:</p>\n<blockquote>\n<blockquote>\n<p>Implementation LGTM.</p>\n<p>Since you took the test from #4947, is there a reason you didn't just cherry-pick <a href=\"https://github.com/bytecodealliance/wasmtime/commit/fe33e2990bae149042361efcbb109541b734d4d8\">fe33e29</a> in this PR?</p>\n</blockquote>\n<p>Just that I didn't notice it was a separate commit. I've now rebased this PR to cherry-pick that patch.</p>\n</blockquote>",
        "id": 301127974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664317493
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967#issuecomment-1491054482\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4967\">issue #4967</a>:</p>\n<blockquote>\n<p>Since <a href=\"https://github.com/bytecodealliance/cap-std/issues/277\">bytecodealliance/cap-std#277</a> merged, can this issue be fixed without race conditions now?</p>\n<p>What I would expect, coming from a POSIX perspective, is to call <code>Dir::open</code> on the given path (apparently with the <code>maybe_dir</code> open flag for Windows), then check <code>f.metadata().is_dir()</code>. If it was a directory, it looks to me like <code>Dir::from_std_file(f.into_std())</code> would fix up the Rust types to reflect reality.</p>\n<p>Is that a reasonable approach?</p>\n</blockquote>",
        "id": 345799477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680215852
    }
]