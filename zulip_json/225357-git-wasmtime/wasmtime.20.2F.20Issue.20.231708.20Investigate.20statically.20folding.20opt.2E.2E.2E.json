[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1708\">Issue #1708</a>:</p>\n<blockquote>\n<p>Consider the following optimizations:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nv\">ishl</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl_imm</span> <span class=\"nv\">$C</span> <span class=\"nv\">$x</span><span class=\"p\">))</span>\n\n<span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nv\">imul</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n          <span class=\"p\">(</span><span class=\"nv\">is-power-of-two</span> <span class=\"nv\">$C</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl</span> <span class=\"nv\">$x</span> <span class=\"nv\">$</span><span class=\"p\">(</span><span class=\"nv\">log2</span> <span class=\"nv\">$C</span><span class=\"p\">)))</span>\n</code></pre></div>\n\n\n<p>After applying the second optimization to some instruction sequence, then the first optimization can be applied to the result.</p>\n<p>But it would be more efficient if we folded the second optimization into the first optimizations RHS:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nv\">imul</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n          <span class=\"p\">(</span><span class=\"nv\">is-power-of-two</span> <span class=\"nv\">$C</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl_imm</span> <span class=\"nv\">$</span><span class=\"p\">(</span><span class=\"nv\">log2</span> <span class=\"nv\">$C</span><span class=\"p\">)</span> <span class=\"nv\">$x</span><span class=\"p\">))</span>\n</code></pre></div>\n\n\n<p>We should make a pass in peepmatic to do this mechanically whenever possible.</p>\n</blockquote>",
        "id": 197593893,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589479178
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1708\">Issue #1708</a>:</p>\n<blockquote>\n<p>Consider the following optimizations:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nv\">ishl</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl_imm</span> <span class=\"nv\">$C</span> <span class=\"nv\">$x</span><span class=\"p\">))</span>\n\n<span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nv\">imul</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n          <span class=\"p\">(</span><span class=\"nv\">is-power-of-two</span> <span class=\"nv\">$C</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl</span> <span class=\"nv\">$x</span> <span class=\"nv\">$</span><span class=\"p\">(</span><span class=\"nv\">log2</span> <span class=\"nv\">$C</span><span class=\"p\">)))</span>\n</code></pre></div>\n\n\n<p>After applying the second optimization to some instruction sequence, then the first optimization can be applied to the result.</p>\n<p>But it would be more efficient if we folded the second optimization into the first optimizations RHS:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">=&gt;</span> <span class=\"p\">(</span><span class=\"nb\">when</span> <span class=\"p\">(</span><span class=\"nv\">imul</span> <span class=\"nv\">$x</span> <span class=\"nv\">$C</span><span class=\"p\">)</span>\n          <span class=\"p\">(</span><span class=\"nv\">is-power-of-two</span> <span class=\"nv\">$C</span><span class=\"p\">))</span>\n    <span class=\"p\">(</span><span class=\"nv\">ishl_imm</span> <span class=\"nv\">$</span><span class=\"p\">(</span><span class=\"nv\">log2</span> <span class=\"nv\">$C</span><span class=\"p\">)</span> <span class=\"nv\">$x</span><span class=\"p\">))</span>\n</code></pre></div>\n\n\n<p>We should make a pass in peepmatic to do this mechanically whenever possible.</p>\n</blockquote>",
        "id": 197593894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589479178
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1708#issuecomment-628796767\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1708\">Issue #1708</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift:area:peepmatic\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: cranelift:area:peepmatic</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 197594073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589479251
    }
]