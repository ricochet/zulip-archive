[
    {
        "content": "<p>donovano opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872\">Issue #1872</a>:</p>\n<blockquote>\n<p>Hi, If you specify <code>static_memory_maximum_size(0)</code> then wasmtime will use dynamic memory for the linear wasm memory. If you donâ€™t set it, by default the memory will be static. I note that setting <code>static_memory_maximum_size</code> to anything less than 4GB on my platform results in wasm using dynamic memory and setting it above that it uses static memory. So the maximum memory (in my case anyway) is 4GB. I can see in the code that it sets the default of 4GB, but I cannot see how this is configurable, if it is? </p>\n<p>I also note that for my wasm module the memory starts at 22 pages (of size 64K each). On top of that I can only allocate about 1/3 of 4GB before the allocations in the wasm module fail, even though the device has 16GB memory and not running much more than the wasm host and the wasmtime max memory is at 4GB. This observed 1/3 of 4 GB limit is present whether wasmtime uses dynamic memory (<code>static_memory_maximum_size(0)</code>) or static memory. Does this make sense? </p>\n</blockquote>",
        "id": 200683699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591975218
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872#issuecomment-643364919\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872\">Issue #1872</a>:</p>\n<blockquote>\n<p>Can other programs use more than 1/3 of the 4 GB limit? If not then maybe the maximum memory usage is limited using ulimit or cgroups?</p>\n</blockquote>",
        "id": 200691549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591978948
    },
    {
        "content": "<p>donovano <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872#issuecomment-643417581\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872\">Issue #1872</a>:</p>\n<blockquote>\n<p>A simple C program can allocate upto 9GB (did not try more). ulimits is unlimited and cgroups show a very high limit.</p>\n</blockquote>",
        "id": 200705217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591985657
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872#issuecomment-643458292\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872\">Issue #1872</a>:</p>\n<blockquote>\n<p>Does your simple C program perform one allocation or multiple smaller allocations? Wasm linear memory needs to be contiguous, and sometimes restricted address spaces which have enough total space lack the ability to allocate a single contiguous region with sufficient space.</p>\n</blockquote>",
        "id": 200717549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591991854
    },
    {
        "content": "<p>donovano <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872#issuecomment-643472564\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872\">Issue #1872</a>:</p>\n<blockquote>\n<p>You are right. I had copied the action of the rust code that was incrementally allocating more memory to debug the issue to the C program to also incrementally allocate for debugging. Changing this to a single allocate fails about at the same point as the wasm. That explains that issue thanks.</p>\n<p>The only remaining thing here is that the 4GB default would be nice to adjust lower - this might be possible but I did not see where this is done so far.</p>\n</blockquote>",
        "id": 200721551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591994120
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872#issuecomment-803434620\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1872\">Issue #1872</a>:</p>\n<blockquote>\n<p>Should this be closed in favor of #2273?</p>\n</blockquote>",
        "id": 231160844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1616262883
    }
]