[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017\">PR #2017</a> from <code>fix-leak</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit fixes a memory leak that can happen with <code>Linker::module</code><br>\nwhen the provided module is a command. This function creates a closure<br>\nbut the closure closed over a strong reference to <code>Store</code> (and<br>\ntransitively through any imports provided). Unfortunately a <code>Store</code><br>\nkeeps everything alive, including <code>Func</code>, so this meant that <code>Store</code> was<br>\ninserted into a cycle which caused the leak.</p>\n<p>The cycle here is manually broken with <code>Weak&lt;StoreInner&gt;</code>, which needs<br>\nto be plumbed through for all <code>Extern</code> items as well.</p>\n</blockquote>",
        "id": 203838749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1594736452
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017\">PR #2017</a>.</p>",
        "id": 204242805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595011179
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017#pullrequestreview-451736112\">PR Review</a>.</p>",
        "id": 204439617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595260150
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017#discussion_r457512167\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It's not immediately clear to me how this fixes the cycle. <code>Func</code> also contains a strong <code>StoreInstanceHandle</code> and <code>Instance</code> contains a strong <code>Store</code>, so is there already a cycle?</p>\n</blockquote>",
        "id": 204439618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595260150
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017#pullrequestreview-451951068\">PR Review</a>.</p>",
        "id": 204474631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595278387
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017#discussion_r457684982\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The problem here is that a strong reference to <code>Store</code> was closed over in the <code>Func</code>, which meant that <code>Store</code> basically had a strong reference to itself. By only closing over weak references that reference is broken at least. Each of the captures here only capture a weak version of the <code>Store</code> or external item.</p>\n</blockquote>",
        "id": 204474633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595278387
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017\">PR #2017</a> from <code>fix-leak</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit fixes a memory leak that can happen with <code>Linker::module</code><br>\nwhen the provided module is a command. This function creates a closure<br>\nbut the closure closed over a strong reference to <code>Store</code> (and<br>\ntransitively through any imports provided). Unfortunately a <code>Store</code><br>\nkeeps everything alive, including <code>Func</code>, so this meant that <code>Store</code> was<br>\ninserted into a cycle which caused the leak.</p>\n<p>The cycle here is manually broken with <code>Weak&lt;StoreInner&gt;</code>, which needs<br>\nto be plumbed through for all <code>Extern</code> items as well.<br>\n</p>\n</blockquote>",
        "id": 224741970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612193397
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017\">PR #2017</a> from <code>fix-leak</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit fixes a memory leak that can happen with <code>Linker::module</code><br>\nwhen the provided module is a command. This function creates a closure<br>\nbut the closure closed over a strong reference to <code>Store</code> (and<br>\ntransitively through any imports provided). Unfortunately a <code>Store</code><br>\nkeeps everything alive, including <code>Func</code>, so this meant that <code>Store</code> was<br>\ninserted into a cycle which caused the leak.</p>\n<p>The cycle here is manually broken by closing over the raw value of each<br>\nexternal value rather than the external value itself (which has a<br>\nstrong reference to <code>Store</code>).<br>\n</p>\n</blockquote>",
        "id": 224742057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612193417
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017#pullrequestreview-580658557\">PR Review</a>.</p>",
        "id": 224772191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612205140
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017\">PR #2017</a>.</p>",
        "id": 224774971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612206269
    }
]