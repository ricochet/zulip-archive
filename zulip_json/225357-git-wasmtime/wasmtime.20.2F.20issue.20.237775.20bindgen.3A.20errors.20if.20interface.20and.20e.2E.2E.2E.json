[
    {
        "content": "<p><a href=\"https://github.com/jcbhmr\">jcbhmr</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7775\">Issue #7775</a>.</p>",
        "id": 412851671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705271381
    },
    {
        "content": "<p>jcbhmr opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7775\">issue #7775</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>TODO: upload Wasm file here<br>\nno wasm. just rust.</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>TODO: first, ...</li>\n<li>TODO: second, ...</li>\n<li>Etc...</li>\n<li>crate a new cargo project</li>\n<li>add wasmtime with the component-model feature</li>\n<li>use the below wit in the wit/ folder with bindgen!()</li>\n<li>see error</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package jcbhmr:hello-world-rust-wasm-component-lib;\n\ninterface my-box {\n  resource my-box {\n    constructor(value: u32);\n    value: func() -&gt; u32;\n  }\n  set-global: func(value: my-box);\n  global-value: func() -&gt; u32;\n}\n\nworld example {\n  export my-box;\n}\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>it to either auto-rename it due to duplication or otherwise scope it so that this collision doesn't happen</p>\n<h3>Actual Results</h3>\n<p>![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c\">https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c</a>)</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 16.0.0</p>\n<p>Operating system: Windows (using WSL)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 412851672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705271382
    },
    {
        "content": "<p>jcbhmr edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7775\">issue #7775</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>TODO: upload Wasm file here<br>\nno wasm. just rust.</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>TODO: first, ...</li>\n<li>TODO: second, ...</li>\n<li>Etc...</li>\n<li>crate a new cargo project</li>\n<li>add wasmtime with the component-model feature</li>\n<li>use the below wit in the wit/ folder with bindgen!()</li>\n<li>see error</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package jcbhmr:hello-world-rust-wasm-component-lib;\n\ninterface my-box {\n  resource my-box {\n    constructor(value: u32);\n    value: func() -&gt; u32;\n  }\n  set-global: func(value: my-box);\n  global-value: func() -&gt; u32;\n}\n\nworld example {\n  export my-box;\n}\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>it to either auto-rename it due to duplication or otherwise scope it so that this collision doesn't happen</p>\n<h3>Actual Results</h3>\n<p>![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c\">https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c</a>)</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>jcbhmr@PIG-2016:~/Documents/rswasmtest$<span class=\"w\"> </span>cargo<span class=\"w\">  </span>build\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>rswasmtest<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/home/jcbhmr/Documents/rswasmtest<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0428<span class=\"o\">]</span>:<span class=\"w\"> </span>the<span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined<span class=\"w\"> </span>multiple<span class=\"w\"> </span><span class=\"nb\">times</span>\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>redefined<span class=\"w\"> </span>here\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>must<span class=\"w\"> </span>be<span class=\"w\"> </span>defined<span class=\"w\"> </span>only<span class=\"w\"> </span>once<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>namespace<span class=\"w\"> </span>of<span class=\"w\"> </span>this<span class=\"w\"> </span><span class=\"nv\">module</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nerror<span class=\"o\">[</span>E0116<span class=\"o\">]</span>:<span class=\"w\"> </span>cannot<span class=\"w\"> </span>define<span class=\"w\"> </span>inherent<span class=\"w\"> </span><span class=\"sb\">`</span>impl<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>a<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>crate<span class=\"w\"> </span>where<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span>impl<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>defined<span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>crate.\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>define<span class=\"w\"> </span>and<span class=\"w\"> </span>implement<span class=\"w\"> </span>a<span class=\"w\"> </span>trait<span class=\"w\"> </span>or<span class=\"w\"> </span>new<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span><span class=\"nv\">instead</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nSome<span class=\"w\"> </span>errors<span class=\"w\"> </span>have<span class=\"w\"> </span>detailed<span class=\"w\"> </span>explanations:<span class=\"w\"> </span>E0116,<span class=\"w\"> </span>E0428.\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>an<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0116<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>rswasmtest<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"rswasmtest\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>errors\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 16.0.0</p>\n<p>Operating system: Windows (using WSL)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 412851737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705271409
    },
    {
        "content": "<p>jcbhmr edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7775\">issue #7775</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>TODO: upload Wasm file here<br>\nno wasm. just rust.</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>TODO: first, ...</li>\n<li>TODO: second, ...</li>\n<li>Etc...</li>\n<li>crate a new cargo project</li>\n<li>add wasmtime with the component-model feature</li>\n<li>use the below wit in the wit/ folder with bindgen!()</li>\n<li>see error</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package jcbhmr:hello-world-rust-wasm-component-lib;\n\ninterface my-box {\n  resource my-box {\n    constructor(value: u32);\n    value: func() -&gt; u32;\n  }\n  set-global: func(value: my-box);\n  global-value: func() -&gt; u32;\n}\n\nworld example {\n  export my-box;\n}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n\n<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">();</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>it to either auto-rename it due to duplication or otherwise scope it so that this collision doesn't happen</p>\n<h3>Actual Results</h3>\n<p>![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c\">https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c</a>)</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>jcbhmr@PIG-2016:~/Documents/rswasmtest$<span class=\"w\"> </span>cargo<span class=\"w\">  </span>build\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>rswasmtest<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/home/jcbhmr/Documents/rswasmtest<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0428<span class=\"o\">]</span>:<span class=\"w\"> </span>the<span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined<span class=\"w\"> </span>multiple<span class=\"w\"> </span><span class=\"nb\">times</span>\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>redefined<span class=\"w\"> </span>here\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>must<span class=\"w\"> </span>be<span class=\"w\"> </span>defined<span class=\"w\"> </span>only<span class=\"w\"> </span>once<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>namespace<span class=\"w\"> </span>of<span class=\"w\"> </span>this<span class=\"w\"> </span><span class=\"nv\">module</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nerror<span class=\"o\">[</span>E0116<span class=\"o\">]</span>:<span class=\"w\"> </span>cannot<span class=\"w\"> </span>define<span class=\"w\"> </span>inherent<span class=\"w\"> </span><span class=\"sb\">`</span>impl<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>a<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>crate<span class=\"w\"> </span>where<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span>impl<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>defined<span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>crate.\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>define<span class=\"w\"> </span>and<span class=\"w\"> </span>implement<span class=\"w\"> </span>a<span class=\"w\"> </span>trait<span class=\"w\"> </span>or<span class=\"w\"> </span>new<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span><span class=\"nv\">instead</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nSome<span class=\"w\"> </span>errors<span class=\"w\"> </span>have<span class=\"w\"> </span>detailed<span class=\"w\"> </span>explanations:<span class=\"w\"> </span>E0116,<span class=\"w\"> </span>E0428.\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>an<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0116<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>rswasmtest<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"rswasmtest\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>errors\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 16.0.0</p>\n<p>Operating system: Windows (using WSL)</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 412852076,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705271782
    },
    {
        "content": "<p>jcbhmr edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7775\">issue #7775</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>TODO: upload Wasm file here<br>\nno wasm. just rust.</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>TODO: first, ...</li>\n<li>TODO: second, ...</li>\n<li>Etc...</li>\n<li>crate a new cargo project</li>\n<li>add wasmtime with the component-model feature</li>\n<li>use the below wit in the wit/ folder with bindgen!()</li>\n<li>see error</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package jcbhmr:hello-world-rust-wasm-component-lib;\n\ninterface my-box {\n  resource my-box {\n    constructor(value: u32);\n    value: func() -&gt; u32;\n  }\n  set-global: func(value: my-box);\n  global-value: func() -&gt; u32;\n}\n\nworld example {\n  export my-box;\n}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n\n<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">();</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>it to either auto-rename it due to duplication or otherwise scope it so that this collision doesn't happen</p>\n<h3>Actual Results</h3>\n<p>![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c\">https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c</a>)</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>jcbhmr@PIG-2016:~/Documents/rswasmtest$<span class=\"w\"> </span>cargo<span class=\"w\">  </span>build\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>rswasmtest<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/home/jcbhmr/Documents/rswasmtest<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0428<span class=\"o\">]</span>:<span class=\"w\"> </span>the<span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined<span class=\"w\"> </span>multiple<span class=\"w\"> </span><span class=\"nb\">times</span>\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>redefined<span class=\"w\"> </span>here\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>must<span class=\"w\"> </span>be<span class=\"w\"> </span>defined<span class=\"w\"> </span>only<span class=\"w\"> </span>once<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>namespace<span class=\"w\"> </span>of<span class=\"w\"> </span>this<span class=\"w\"> </span><span class=\"nv\">module</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nerror<span class=\"o\">[</span>E0116<span class=\"o\">]</span>:<span class=\"w\"> </span>cannot<span class=\"w\"> </span>define<span class=\"w\"> </span>inherent<span class=\"w\"> </span><span class=\"sb\">`</span>impl<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>a<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>crate<span class=\"w\"> </span>where<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span>impl<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>defined<span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>crate.\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>define<span class=\"w\"> </span>and<span class=\"w\"> </span>implement<span class=\"w\"> </span>a<span class=\"w\"> </span>trait<span class=\"w\"> </span>or<span class=\"w\"> </span>new<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span><span class=\"nv\">instead</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nSome<span class=\"w\"> </span>errors<span class=\"w\"> </span>have<span class=\"w\"> </span>detailed<span class=\"w\"> </span>explanations:<span class=\"w\"> </span>E0116,<span class=\"w\"> </span>E0428.\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>an<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0116<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>rswasmtest<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"rswasmtest\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>errors\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 16.0.0</p>\n<p>Operating system: Windows 10 using WSL</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 412852103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705271815
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7775\">issue #7775</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>TODO: upload Wasm file here<br>\nno wasm. just rust.</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>TODO: first, ...</li>\n<li>TODO: second, ...</li>\n<li>Etc...</li>\n<li>crate a new cargo project</li>\n<li>add wasmtime with the component-model feature</li>\n<li>use the below wit in the wit/ folder with bindgen!()</li>\n<li>see error</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package jcbhmr:hello-world-rust-wasm-component-lib;\n\ninterface my-box {\n  resource my-box {\n    constructor(value: u32);\n    value: func() -&gt; u32;\n  }\n  set-global: func(value: my-box);\n  global-value: func() -&gt; u32;\n}\n\nworld example {\n  export my-box;\n}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n\n<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">();</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>it to either auto-rename it due to duplication or otherwise scope it so that this collision doesn't happen</p>\n<h3>Actual Results</h3>\n<p>![image](<a href=\"https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c\">https://github.com/bytecodealliance/wasmtime/assets/61068799/c1f6ab0f-f013-4cb3-9a71-b05ff7e4884c</a>)</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>jcbhmr@PIG-2016:~/Documents/rswasmtest$<span class=\"w\"> </span>cargo<span class=\"w\">  </span>build\n<span class=\"w\">   </span>Compiling<span class=\"w\"> </span>rswasmtest<span class=\"w\"> </span>v0.1.0<span class=\"w\"> </span><span class=\"o\">(</span>/home/jcbhmr/Documents/rswasmtest<span class=\"o\">)</span>\nerror<span class=\"o\">[</span>E0428<span class=\"o\">]</span>:<span class=\"w\"> </span>the<span class=\"w\"> </span>name<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined<span class=\"w\"> </span>multiple<span class=\"w\"> </span><span class=\"nb\">times</span>\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>redefined<span class=\"w\"> </span>here\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span><span class=\"sb\">`</span>MyBox<span class=\"sb\">`</span><span class=\"w\"> </span>must<span class=\"w\"> </span>be<span class=\"w\"> </span>defined<span class=\"w\"> </span>only<span class=\"w\"> </span>once<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>namespace<span class=\"w\"> </span>of<span class=\"w\"> </span>this<span class=\"w\"> </span><span class=\"nv\">module</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nerror<span class=\"o\">[</span>E0116<span class=\"o\">]</span>:<span class=\"w\"> </span>cannot<span class=\"w\"> </span>define<span class=\"w\"> </span>inherent<span class=\"w\"> </span><span class=\"sb\">`</span>impl<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>a<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>the<span class=\"w\"> </span>crate<span class=\"w\"> </span>where<span class=\"w\"> </span>the<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>is<span class=\"w\"> </span>defined\n<span class=\"w\"> </span>--&gt;<span class=\"w\"> </span>src/main.rs:4:1\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"m\">4</span><span class=\"w\"> </span><span class=\"p\">|</span><span class=\"w\"> </span>bindgen!<span class=\"o\">()</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">|</span><span class=\"w\"> </span>^^^^^^^^^^<span class=\"w\"> </span>impl<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span>defined<span class=\"w\"> </span>outside<span class=\"w\"> </span>of<span class=\"w\"> </span>crate.\n<span class=\"w\">  </span><span class=\"p\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>define<span class=\"w\"> </span>and<span class=\"w\"> </span>implement<span class=\"w\"> </span>a<span class=\"w\"> </span>trait<span class=\"w\"> </span>or<span class=\"w\"> </span>new<span class=\"w\"> </span><span class=\"nb\">type</span><span class=\"w\"> </span><span class=\"nv\">instead</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span>note:<span class=\"w\"> </span>this<span class=\"w\"> </span>error<span class=\"w\"> </span>originates<span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span>the<span class=\"w\"> </span>macro<span class=\"w\"> </span><span class=\"sb\">`</span>bindgen<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span><span class=\"k\">in</span><span class=\"w\"> </span>Nightly<span class=\"w\"> </span>builds,<span class=\"w\"> </span>run<span class=\"w\"> </span>with<span class=\"w\"> </span>-Z<span class=\"w\"> </span>macro-backtrace<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span>more<span class=\"w\"> </span>info<span class=\"o\">)</span>\n\nSome<span class=\"w\"> </span>errors<span class=\"w\"> </span>have<span class=\"w\"> </span>detailed<span class=\"w\"> </span>explanations:<span class=\"w\"> </span>E0116,<span class=\"w\"> </span>E0428.\nFor<span class=\"w\"> </span>more<span class=\"w\"> </span>information<span class=\"w\"> </span>about<span class=\"w\"> </span>an<span class=\"w\"> </span>error,<span class=\"w\"> </span>try<span class=\"w\"> </span><span class=\"sb\">`</span>rustc<span class=\"w\"> </span>--explain<span class=\"w\"> </span>E0116<span class=\"sb\">`</span>.\nerror:<span class=\"w\"> </span>could<span class=\"w\"> </span>not<span class=\"w\"> </span>compile<span class=\"w\"> </span><span class=\"sb\">`</span>rswasmtest<span class=\"sb\">`</span><span class=\"w\"> </span><span class=\"o\">(</span>bin<span class=\"w\"> </span><span class=\"s2\">\"rswasmtest\"</span><span class=\"o\">)</span><span class=\"w\"> </span>due<span class=\"w\"> </span>to<span class=\"w\"> </span><span class=\"m\">2</span><span class=\"w\"> </span>previous<span class=\"w\"> </span>errors\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 16.0.0</p>\n<p>Operating system: Windows 10 using WSL</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 416661538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705617614
    }
]