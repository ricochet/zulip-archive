[
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796\">PR #1796</a> from <code>pch/wiggle_tracing</code> to <code>master</code>:</p>\n<blockquote>\n<p>Wiggle generated code now emits code that uses <code>tracing</code> for logging.</p>\n<p>We use <code>tracing</code> by default at Fastly, so I'd like to use it in wiggle and wasi-common without adapters if possible. Tracing has a couple of advantages over <code>log</code> that make it well suited here:</p>\n<ul>\n<li>\n<p>The concept of spans, which are natural to use in wiggle-generated functions where we want to log the arguments of a function, then later when an inner func returns we want to log the return values. the argument values and return value s are part of the same span, which means the backend can automatically correlate them, rather than have to associate them by searching on some common part of the text</p>\n</li>\n<li>\n<p>(stable) support for structured fields (in log this is noted as unstable and called kv support), which also naturally matches to the names of arguments / return values we already have in witx, and keeps that structure around longer so that it can be e.g. encoded in json by the backend that sends it to some logging endpoint that understands json</p>\n</li>\n<li>\n<p>tracing statements that are disabled (marked as uninteresting, essentially) by the backend are very low overhead - its one atomic load to determine whether a hook is disabled.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 199653871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591207075
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423950211\">PR Review</a>.</p>",
        "id": 199679434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591219854
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423950211\">PR Review</a>.</p>",
        "id": 199679435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591219854
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434868691\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW this is a pretty hefty dependency list. I think were ok on spidermonkey for this PR itself because this only affects wasi-common which spidermonkey isn't vendoring yet. In that sense it'll be an issue if we add tracing more deeply in cranelift/wasmtime, but for now it should be ok.</p>\n<p>There's no way though to depend on only the macros?</p>\n<p>(I know nothing about <code>tracing</code>)</p>\n</blockquote>",
        "id": 199679436,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591219854
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434868018\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this could perhaps be <code>pub extern crate tracing;</code>?</p>\n</blockquote>",
        "id": 199679437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591219854
    },
    {
        "content": "<p>hawkw created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434885455\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>tracing-subscriber</code> is not required for the macros. It contains actual <code>tracing::Subscriber</code> implementations (like loggers in the <code>log</code> ecosystem), and is not part of the minimal facade layer. </p>\n<p>I believe that this crate is <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796/files#diff-2cae3b675df5912d74bc4bb2fed5c0beR20\">just a dev-dependency</a>, presumably for testing that the emitted traces work correctly or something?</p>\n</blockquote>",
        "id": 199683327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222157
    },
    {
        "content": "<p>hawkw submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423972327\">PR Review</a>.</p>",
        "id": 199683328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222157
    },
    {
        "content": "<p>hawkw edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434885455\">PR Review Comment</a>.</p>",
        "id": 199683518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222300
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423973969\">PR Review</a>.</p>",
        "id": 199683791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222459
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423973969\">PR Review</a>.</p>",
        "id": 199683794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222460
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434886755\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Please add spaces before and after the '='</p>\n</blockquote>",
        "id": 199683795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222460
    },
    {
        "content": "<p>hawkw edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434885455\">PR Review Comment</a>.</p>",
        "id": 199684004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222589
    },
    {
        "content": "<p>hawkw submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423978104\">PR Review</a>.</p>",
        "id": 199684520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222921
    },
    {
        "content": "<p>hawkw submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423978104\">PR Review</a>.</p>",
        "id": 199684521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222921
    },
    {
        "content": "<p>hawkw created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434890230\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Note that --- <a href=\"https://docs.rs/log/0.4.8/src/log/macros.rs.html#201\">as in <code>log</code></a> --- the max level is _inclusive_, so this enables all spans/events with a level less than _or equal_ to <code>TRACE</code>. In order to enable <code>DEBUG</code> and lower, you would use <code>tracing::Level::DEBUG</code> here instead.</p>\n</blockquote>",
        "id": 199684522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591222921
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423984219\">PR Review</a>.</p>",
        "id": 199685684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223740
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434895090\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yes, <code>tracing-subscriber</code> gets pulled in because of the <code>wiggle-test</code> example. I'm OK with shipping this code without the example, which doesn't provide much of any assurance that things work in CI beyond compiling - I didn't work on writing an actual test.</p>\n<p>So, if we want to save the project's <code>Cargo.lock</code> from pulling all of that stuff in, we can drop <code>tracing-subscriber</code> from the example (I'll probably leave it in as commented-out code, with a note that the dep tree is too heavy for this project) and use it to just demonstrate the <code>log</code> integration.</p>\n</blockquote>",
        "id": 199685685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223740
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796\">PR #1796</a> from <code>pch/wiggle_tracing</code> to <code>master</code>:</p>\n<blockquote>\n<p>Wiggle generated code now emits code that uses <code>tracing</code> for logging.</p>\n<p>We use <code>tracing</code> by default at Fastly, so I'd like to use it in wiggle and wasi-common without adapters if possible. Tracing has a couple of advantages over <code>log</code> that make it well suited here:</p>\n<ul>\n<li>\n<p>The concept of spans, which are natural to use in wiggle-generated functions where we want to log the arguments of a function, then later when an inner func returns we want to log the return values. the argument values and return value s are part of the same span, which means the backend can automatically correlate them, rather than have to associate them by searching on some common part of the text</p>\n</li>\n<li>\n<p>(stable) support for structured fields (in log this is noted as unstable and called kv support), which also naturally matches to the names of arguments / return values we already have in witx, and keeps that structure around longer so that it can be e.g. encoded in json by the backend that sends it to some logging endpoint that understands json</p>\n</li>\n<li>\n<p>tracing statements that are disabled (marked as uninteresting, essentially) by the backend are very low overhead - its one atomic load to determine whether a hook is disabled.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 199685750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223769
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423984503\">PR Review</a>.</p>",
        "id": 199685765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223781
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434895317\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Thanks, didn't know that was the preferred syntax but it is a lot clearer. Fixed.</p>\n</blockquote>",
        "id": 199685766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223782
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423984546\">PR Review</a>.</p>",
        "id": 199685773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223790
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434895360\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Fixed Thanks</p>\n</blockquote>",
        "id": 199685774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223790
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434895408\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Made the comment clearer. Thanks</p>\n</blockquote>",
        "id": 199685787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223799
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423984612\">PR Review</a>.</p>",
        "id": 199685788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591223800
    },
    {
        "content": "<p>hawkw submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-423995686\">PR Review</a>.</p>",
        "id": 199688010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591225478
    },
    {
        "content": "<p>hawkw created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r434904526\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The dependency tree could also be pruned a bit more by disabling the crate's default features. E.g. if we don't care about timestamps, disabling them would remove the dependency on <code>chrono</code>, and so on.</p>\n</blockquote>",
        "id": 199688011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591225478
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-424609425\">PR Review</a>.</p>",
        "id": 199770619,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591286978
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#discussion_r435378329\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Nah sorry I didn't realize that this was all pulled in exclusively through a dev-dependency, that's fine to do!</p>\n</blockquote>",
        "id": 199770620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591286978
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796#pullrequestreview-424609650\">PR Review</a>.</p>",
        "id": 199770644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591286993
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1796\">PR #1796</a>.</p>",
        "id": 199775251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591289064
    }
]