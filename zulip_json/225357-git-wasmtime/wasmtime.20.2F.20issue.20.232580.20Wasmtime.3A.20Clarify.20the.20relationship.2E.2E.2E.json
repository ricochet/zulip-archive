[
    {
        "content": "<p>hbina <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413037912\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>How do I make sure that the WASM module that I created is a Reactor? There doesn't seem to be much documentation on what makes a Reactor and Command, and why a module would be build as one over another?</p>\n</blockquote>",
        "id": 325303052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675302894
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413650518\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>Any module with an _initialize function is a reactor I believe. The difference between a command and a reactor is that a command must be destroyed after calling the main function, while a reactor requires running the _initialize function and then you are free to run any exported functions you want on the instance. It is kind of like a binary (command) vs library (reactor).</p>\n</blockquote>",
        "id": 325383273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675340370
    },
    {
        "content": "<p>hbina <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413668598\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>Do I have to manually put the function there via <code>func_wrap</code> or something like that? My code is definitely a binary, it has an empty <code>fn main() {}</code></p>\n<p>See <a href=\"https://github.com/lapce/lapce-rust/blob/master/src/main.rs#L31\">https://github.com/lapce/lapce-rust/blob/master/src/main.rs#L31</a></p>\n<p>which expands like so <a href=\"https://github.com/lapce/lapce-plugin-rust/blob/master/src/lib.rs#L99-L125\">https://github.com/lapce/lapce-plugin-rust/blob/master/src/lib.rs#L99-L125</a></p>\n</blockquote>",
        "id": 325385895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675341207
    },
    {
        "content": "<p>hbina edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413668598\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>Do I have to manually put the function there via <code>func_wrap</code> or something like that? My code is definitely a binary, it has an empty <code>fn main() {}</code></p>\n<p>See <a href=\"https://github.com/lapce/lapce-rust/blob/master/src/main.rs#L31\">https://github.com/lapce/lapce-rust/blob/master/src/main.rs#L31</a></p>\n<p>which expands like so <a href=\"https://github.com/lapce/lapce-plugin-rust/blob/master/src/lib.rs#L99-L125\">https://github.com/lapce/lapce-plugin-rust/blob/master/src/lib.rs#L99-L125</a></p>\n<p>Edit: Wait did I get that right, a command is the stateful one?</p>\n</blockquote>",
        "id": 325386212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675341283
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413705842\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>It will have to be compiled as reactor if you want to use wasi. Otherwise at_exit entries and global destructors will run right after the rust main function there is called and before lapce can call handle_rpc: <a href=\"https://github.com/WebAssembly/wasi-libc/blob/9bec2d3aff198770e98544cb6f13add60e1f5fe6/libc-bottom-half/crt/crt1-command.c#L46\">https://github.com/WebAssembly/wasi-libc/blob/9bec2d3aff198770e98544cb6f13add60e1f5fe6/libc-bottom-half/crt/crt1-command.c#L46</a></p>\n</blockquote>",
        "id": 325391778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675342827
    },
    {
        "content": "<p>hbina <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413711281\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>I can't seem to use the flag that you mentioned in Zulip. Perhaps if I change the plugin to look like a <a href=\"http://lib.rs\">lib.rs</a> it will be compiled as a reactor automatically?</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">hbina</span><span class=\"o\">@</span><span class=\"n\">akarin</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">g</span><span class=\"o\">/</span><span class=\"n\">lapce</span><span class=\"o\">-</span><span class=\"n\">rust</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">master</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Zwasi</span><span class=\"o\">-</span><span class=\"n\">exec</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">reactor</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unknown</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">flag</span><span class=\"w\"> </span><span class=\"n\">specified</span>: <span class=\"nc\">wasi</span><span class=\"o\">-</span><span class=\"n\">exec</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"w\"></span>\n<span class=\"o\">~~~</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 325392564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675343047
    },
    {
        "content": "<p>hbina edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413711281\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>I can't seem to use the flag that you mentioned in <a href=\"#narrow/stream/217126-wasmtime/topic/fixing.20wasm.20that.20doesn't.20preserve.20states/near/325381594\">Zulip</a>. Perhaps if I change the plugin to look like a <a href=\"http://lib.rs\">lib.rs</a> it will be compiled as a reactor automatically?</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">hbina</span><span class=\"o\">@</span><span class=\"n\">akarin</span><span class=\"w\"> </span><span class=\"o\">~/</span><span class=\"n\">g</span><span class=\"o\">/</span><span class=\"n\">lapce</span><span class=\"o\">-</span><span class=\"n\">rust</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">master</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"n\">nightly</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Zwasi</span><span class=\"o\">-</span><span class=\"n\">exec</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"o\">=</span><span class=\"n\">reactor</span><span class=\"w\"> </span><span class=\"n\">build</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unknown</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">flag</span><span class=\"w\"> </span><span class=\"n\">specified</span>: <span class=\"nc\">wasi</span><span class=\"o\">-</span><span class=\"n\">exec</span><span class=\"o\">-</span><span class=\"n\">model</span><span class=\"w\"></span>\n<span class=\"o\">~~~</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 325393231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675343251
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580#issuecomment-1413766048\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2580\">issue #2580</a>:</p>\n<blockquote>\n<p>You have to pass it to rustc, not cargo. So for example <code>RUSTFLAGS=\"-Zwasi-exec-model=reactor\" cargo +nightly build</code> or <code>cargo +nightly rustc -- -Zwasi-exec-model=reactor</code>.</p>\n<blockquote>\n<p>Perhaps if I change the plugin to look like a <a href=\"http://lib.rs\">lib.rs</a> it will be compiled as a reactor automatically?</p>\n</blockquote>\n<p>I don't think it does, but you could try.</p>\n</blockquote>",
        "id": 325400553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675345318
    }
]