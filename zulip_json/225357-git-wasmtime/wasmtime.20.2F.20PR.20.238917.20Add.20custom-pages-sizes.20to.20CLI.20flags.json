[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a>.</p>",
        "id": 449960625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720466126
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a>.</p>",
        "id": 449960627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720466126
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a> from <code>alexcrichton:custom-page-sizes-cli-flag</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Enables <code>-W custom-page-sizes</code> from the CLI  to run this proposal.</p>\n</blockquote>",
        "id": 449960629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720466126
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917#pullrequestreview-2164209634\">PR review</a>:</p>\n<blockquote>\n<p>We should maybe eventually have a <code>for_each_config_option</code> macro to define both the CLI flags and the <code>Config</code> methods or something...</p>\n</blockquote>",
        "id": 449964795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720467010
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917#issuecomment-2215016070\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a>:</p>\n<blockquote>\n<p>Agreed yeah, that'd kind fall under <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8784\">https://github.com/bytecodealliance/wasmtime/issues/8784</a> I think</p>\n</blockquote>",
        "id": 449965328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720467199
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917#issuecomment-2215298346\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a>:</p>\n<blockquote>\n<p>Ah yes, I forgot about that issue. 100%.</p>\n</blockquote>",
        "id": 449980798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720472537
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a>.</p>",
        "id": 449984004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720473265
    },
    {
        "content": "<p>Mossaka <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917#issuecomment-2295280872\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a>:</p>\n<blockquote>\n<blockquote>\n<p>We should maybe eventually have a for_each_config_option macro to define both the CLI flags and the Config methods or something...</p>\n</blockquote>\n<p>I was looking at how the CLI flags and <code>Config</code> are defined and it seems like the grouping rules are very different between the two. For CLI, flags are grouped under struct names such as \"Optimize\", \"Codegen\", \"Debug\", etc, while in the Config, fields are grouped to different struct names, such as \"Tunables\". The lack of the 1-1 mapping makes it hard to define CLI flags from the Config sturct.</p>\n<p>Perhaps, adding a macro like <code>[cli(Optimize)]</code> or others to Config fields helps to generate these fields in their corresponding CLI structs?</p>\n<p>In addition, the methods in the Config are not a 1-1 map to the fields as well... It might be a headache to write the macro that generates the methods according fields. </p>\n</blockquote>",
        "id": 463178818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723990879
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917#issuecomment-2297008909\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8917\">PR #8917</a>:</p>\n<blockquote>\n<p>I think even something that defines the public API of <code>Config</code> and keeps that in sync with the CLI flags, but doesn't define the implementation of those <code>Config</code> methods, would be helpful. And that should be possible regardless if the implementation depends on tunables or wasm features or whatever.</p>\n</blockquote>",
        "id": 463455670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724086211
    }
]