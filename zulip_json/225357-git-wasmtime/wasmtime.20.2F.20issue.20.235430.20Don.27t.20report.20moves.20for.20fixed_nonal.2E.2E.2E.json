[
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1350179725\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<p>Looks like this isn't quite solved yet: the s390x tests that are failing are due to not recording an entry in the <code>is_move</code> map of the vcode table for the move that puts the result of the <code>atomic_rmw</code> instruction into <code>%r2</code> before returning.</p>\n<p>Attempting a local fix by recording <code>Operand::fixed_nonallocatable</code> constraints in <code>is_move</code> when appropriate instead of avoiding adding an entry at all hits a bug in regalloc2 where we're assuming that a fixed constraint returned by <code>is_move</code> must always be a pinned vreg, and not a fixed-nonallocatable register.</p>\n</blockquote>",
        "id": 315715518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670978300
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1350196621\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<p>The last problem here was that moves weren't making it into the final output. The problem was that in the <code>VCode::emit</code> function we were skipping all instructions that satisfied <code>MachInst::is_move</code>, which includes the moves that we didn't report to regalloc2. The solution was to reuse the <code>VCode::is_move</code> map rather than calling <code>MachInst::is_move</code>, as presence in that map corresponds directly to whether or not we told regalloc2 about the move.</p>\n</blockquote>",
        "id": 315717759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670979696
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1350232610\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<p>@uweigand I've reworked this a bit more to avoid the changes to VCode. The problem was that there was a move using a fixed non-allocatable register produced by the s390x backend in the <code>casloop_emit</code> function. I've reworked this to use <code>MovPReg</code>, which is designed to handle fixed non-allocatable sources, but this does introduce some additional indirection for the result.</p>\n</blockquote>",
        "id": 315722103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670982624
    }
]