[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486593115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733518551
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486593119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733518552
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486593120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733518552
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486593121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733518552
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a> from <code>alexcrichton:pulley-big-endian</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit fixes the Pulley interpreter and Cranelift backend to properly support big-endian targets. The problem beforehand was that loads/stores in Pulley were defined as the native endianness which means that big and little-endian platforms differed. Additionally the previously set of understood pulley targets were implicitly always little-endian which was not appropriate for a big-endian host where JIT data structures are stored in big-endian format.</p>\n<p>This commit fixes all of these issues with a few changes:</p>\n<ul>\n<li>Pulley loads/stores are always little-endian now.</li>\n<li>Pulley now has bswap32/bswap64 instructions.</li>\n<li>Wasmtime/Cranelift now understand big-endian pulley targets (e.g. <code>pulley32be</code>).</li>\n<li>CLIF translation of loads/stores now properly handles the endianness flags on <code>MemFlags</code>.</li>\n</ul>\n<p>In the future if necessary we could natively add a macro-op for big-endian loads/stores to Pulley but for now it's more minimal to just have <code>bswap32</code> and <code>bswap64</code>.</p>\n<p>The result of this commit is that Pulley tests are now run and executed on s390x like all other platforms.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 486593122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733518552
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759#issuecomment-2524161490\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>:</p>\n<blockquote>\n<p>While this doesn't code-wise depend on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9758\">https://github.com/bytecodealliance/wasmtime/pull/9758</a> it test-wise depends on that PR as otherwise unwinding doesn't actually work on s390x. With both PRs, however, tests pass for Pulley.</p>\n</blockquote>",
        "id": 486593213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733518583
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486595977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733519823
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759#pullrequestreview-2485998091\">PR review</a>:</p>\n<blockquote>\n<p>r=me with the two below suggestions</p>\n</blockquote>",
        "id": 486603479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733523665
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759#discussion_r1874053592\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we instead have a pure constructor like</p>\n<div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"nv\">Endian</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">enum</span><span class=\"w\"> </span><span class=\"nv\">Little</span><span class=\"w\"> </span><span class=\"nv\">Big</span><span class=\"p\">))</span>\n\n<span class=\"p\">(</span><span class=\"nv\">decl</span><span class=\"w\"> </span><span class=\"nv\">endian</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">MemFlags</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"nv\">Endian</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"nv\">extern</span><span class=\"w\"> </span><span class=\"nv\">pure</span><span class=\"w\"> </span><span class=\"nv\">constructor</span><span class=\"w\"> </span><span class=\"nv\">endian</span><span class=\"w\"> </span><span class=\"nv\">endian</span><span class=\"p\">)</span>\n</code></pre></div>\n</blockquote>",
        "id": 486603480,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733523665
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759#discussion_r1874055829\">PR review comment</a>:</p>\n<blockquote>\n<p>... which we can then use like</p>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>(decl xswap_if_be (XReg Type MemFlags) XReg)\n(rule 0 (xswap_if_be val _ty flags)\n      (if-let (endian flags) (Endian.Little))\n      val)\n(rule 1 (xswap_if_be val $I32 flags)\n      (if-let (endian flags) (Endian.Big))\n      (pulley_bswap32 val))\n(rule 1 (xswap_if_be val $I64 flags)\n      (if-let (endian flags) (Endian.Big))\n      (pulley_bswap64 val))\n</code></pre></div>\n<p>and I think we could remove the explicit priorities at that point because isle's overlap checking would be able to see that the rules do not overlap, which would also result in better isle-generated rust code.</p>\n</blockquote>",
        "id": 486603481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733523666
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759#discussion_r1874057657\">PR review comment</a>:</p>\n<blockquote>\n<p>Want to move these to extended ops? I doubt they will be common.</p>\n</blockquote>",
        "id": 486603482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733523666
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486605137,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733524627
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486605192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733524667
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486605526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733524859
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9759\">PR #9759</a>.</p>",
        "id": 486608785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733526856
    }
]