[
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5473#issuecomment-1358566494\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5473\">issue #5473</a>:</p>\n<blockquote>\n<p>So this version requires anyone who wants to call the <code>jump</code> method to explicitly <code>use</code> the new <code>InstBuilderDerived</code> trait, right? We talked about trying to name the new trait <code>InstBuilder</code> and rename the auto-generated trait to something else. I take it that didn't work out?</p>\n<p>How about this: make the generated <code>inst_builder.rs</code> contain only the method definitions, not the surrounding <code>pub trait InstBuilder</code> etc. Move the <code>pub trait</code> declaration to the hand-written code, so it can have hand-written methods in it, and stick <code>include!(concat!(env!(\"OUT_DIR\"), \"/inst_builder.rs\"));</code> into the middle of that trait so all the generated methods are also in the same trait. Does that make this diff smaller?</p>\n</blockquote>",
        "id": 316849628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671491864
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5473#issuecomment-1358660673\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5473\">issue #5473</a>:</p>\n<blockquote>\n<blockquote>\n<p>So this version requires anyone who wants to call the <code>jump</code> method to explicitly <code>use</code> the new <code>InstBuilderDerived</code> trait, right? We talked about trying to name the new trait <code>InstBuilder</code> and rename the auto-generated trait to something else. I take it that didn't work out?</p>\n</blockquote>\n<p>I found that the previous <code>InstBuilder</code> methods weren't available without importing it as well, which led me to give the derived functions a new name.</p>\n<blockquote>\n<p>How about this: make the generated <code>inst_builder.rs</code> contain only the method definitions, not the surrounding <code>pub trait InstBuilder</code> etc. Move the <code>pub trait</code> declaration to the hand-written code, so it can have hand-written methods in it, and stick <code>include!(concat!(env!(\"OUT_DIR\"), \"/inst_builder.rs\"));</code> into the middle of that trait so all the generated methods are also in the same trait. Does that make this diff smaller?</p>\n</blockquote>\n<p>I think that would make the diff smaller! The downside would be that we'd still need to manually port the documentation over for any hand-written wrappers, as the docs wouldn't be automatically generated for them. I think I'm going to try a different approach, and generate the version of the builder that takes the <code>Block</code> and <code>&amp;[Value]</code> arguments separately back on #5464. That will avoid any issues of documentation sync, and should make it easy enough to generate multiple versions of the same function if necessary.</p>\n</blockquote>",
        "id": 316854894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671495009
    }
]