[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292\">PR #8292</a> from <code>jameysharp:specialize-fp-offset</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The StackAMode::FPOffset address mode was always used together with fp_to_arg_offset, to compute addresses within the current stack frame's argument area.</p>\n<p>Instead, introduce a new StackAMode::ArgOffset variant specifically for stack addresses within the current frame's argument area. The details of how to find the argument area are folded into the conversion from the target-independent StackAMode into target-dependent address-mode types.</p>\n<p>Currently, fp_to_arg_offset returns a target-specific constant, so I've preserved that constant in each backend's address-mode conversion.</p>\n<p>However, in general the location of the argument area may depend on calling convention, flags, or other concerns. Also, it may not always be desirable to use a frame pointer register as the base to find the argument area. I expect some backends will eventually need to introduce new synthetic addressing modes to resolve argument-area offsets after register allocation, when the full frame layout is known.</p>\n<p>I also cleaned up a couple minor things while I was in the area:</p>\n<ul>\n<li>Determining argument extension type was written in a confusing way and also had a typo in the comment describing it.</li>\n<li>riscv64's AMode::offset was only used in one place and is clearer when inlined.</li>\n</ul>\n</blockquote>",
        "id": 430879391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712094249
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292\">PR #8292</a>.</p>",
        "id": 430879393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712094249
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292\">PR #8292</a>.</p>",
        "id": 430879394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712094249
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292#pullrequestreview-1976377651\">PR review</a>:</p>\n<blockquote>\n<p>Nice clean up!</p>\n</blockquote>",
        "id": 430975148,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712141745
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292#pullrequestreview-1976377651\">PR review</a>:</p>\n<blockquote>\n<p>Nice clean up!</p>\n</blockquote>",
        "id": 430975149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712141745
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292#discussion_r1549475701\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                    .expect(\"Offset in ArgOffset is greater than 2GB; should hit implementation limit first\");\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 430975150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712141746
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292#pullrequestreview-1976520837\">PR review</a>.</p>",
        "id": 430981838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712144295
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292#discussion_r1549559500\">PR review comment</a>:</p>\n<blockquote>\n<p>The <code>+ 16</code> to compute the final frame pointer offset can now overflow too, right?</p>\n</blockquote>",
        "id": 430981839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712144295
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292#pullrequestreview-1977375437\">PR review</a>.</p>",
        "id": 431132183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712161719
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292#discussion_r1550070755\">PR review comment</a>:</p>\n<blockquote>\n<p>Good catches! With regard to overflow, I'm moving this <code>+16</code> inside the <code>i32::try_from</code> so the add happens at <code>i64</code> instead. That makes its overflow behavior the same as current, which already had unchecked <code>i64</code> addition. Similarly, the aarch64 and riscv64 targets are still doing the addition at <code>i64</code> after this patch, and s390x doesn't add anything so can't overflow.</p>\n</blockquote>",
        "id": 431132185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712161719
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292\">PR #8292</a>.</p>",
        "id": 431140296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712164498
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292\">PR #8292</a>.</p>",
        "id": 431140426,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712164552
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8292\">PR #8292</a>.</p>",
        "id": 431148046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712167450
    }
]