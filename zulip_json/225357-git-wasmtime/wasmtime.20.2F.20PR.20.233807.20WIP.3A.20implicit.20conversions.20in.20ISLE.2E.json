[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>:</p>\n<blockquote>\n<p>An initial sketch of the ISLE compiler implementation for implicit type conversions (#3753). I can clean it up a bit but this is the general shape at least.</p>\n<p>Two implementation bits: (i) I opted to add conversions as their own IR node type, rather than try lowering these to extractors/constructors to share that code, as the operations are just a tiny bit different (not associated with a term, for example); and (ii) there is the option to denote a converter as returning a borrow or a value -- the former is useful in patterns, the latter may be necessary if the converted value does not already exist inside the original or in the context, and we also always clone to a value when in the right-hand side to avoid holding a borrow on the mut context.</p>\n<p>I'll work a bit further ahead by trying to use this to simplify some of the lowering rules, to make sure it actually works as we hope it will (but any such use will be merged by a later PR).</p>\n<p>cc @fitzgen for thoughts?</p>\n</blockquote>",
        "id": 272085685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645000051
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885104313\">PR review</a>.</p>",
        "id": 272176632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044763
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885104313\">PR review</a>.</p>",
        "id": 272176633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044763
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808424873\">PR review comment</a>:</p>\n<blockquote>\n<p>Can this be inferred from whether the term used for converting is infallible?</p>\n</blockquote>",
        "id": 272176634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044763
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808427468\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this assuming that the term used for converting is always an external Rust function? That seems like an unnecessary restriction to me.</p>\n</blockquote>",
        "id": 272176635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044763
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808428507\">PR review comment</a>:</p>\n<blockquote>\n<p>This also doesn't seem to differentiate between conversions in an extraction vs construction context, which we talked about in the issue.</p>\n</blockquote>",
        "id": 272176636,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044763
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808425327\">PR review comment</a>:</p>\n<blockquote>\n<p>It seems strange to me that we need/have this for conversions but not for regular terms. Every place where we want to insert these implicit conversions works right now and doesn't have this <code>borrow</code> flag, so I feel like it shouldn't be necessary to add. I must be missing something here.</p>\n</blockquote>",
        "id": 272176637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044763
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808436995\">PR review comment</a>:</p>\n<blockquote>\n<p>This is unrelated to these particular changes, but long overdue nonetheless: can we write a <code>#[test]</code> that asserts that every file in <code>isle_examples</code> compiles okay? (At least through ISLE, testing the emitted code with <code>rustc</code> will be a bit harder/more tedious since it requires glue code).</p>\n<p>And for the ones that are supposed to fail (I forget if we even have any of those) it would be nice if we had a comment at the top with a substring of the expected error message. These could be in a separate directory and also be handled in separate PRs.</p>\n<p>But we really need <em>some</em> kind of testing story for this stuff, especially as we tweak the language and compiler.</p>\n</blockquote>",
        "id": 272176638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044764
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808433215\">PR review comment</a>:</p>\n<blockquote>\n<p>This can avoid a double lookup by doing something like</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">old_entry</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tyenv</span><span class=\"p\">.</span><span class=\"n\">converters</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"></span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">old_entry</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">old_entry</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tyenv</span><span class=\"p\">.</span><span class=\"n\">report_error</span><span class=\"p\">(</span><span class=\"o\">..</span><span class=\"p\">.);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">continue</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 272176640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645044764
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885140007\">PR review</a>.</p>",
        "id": 272177955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645045315
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808450533\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, definitely agreed, this is probably as good a time as any to start!</p>\n</blockquote>",
        "id": 272177956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645045316
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885141691\">PR review</a>.</p>",
        "id": 272178142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645045421
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808451773\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, if we go to a term-based design instead, for sure.</p>\n</blockquote>",
        "id": 272178145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645045421
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885145147\">PR review</a>.</p>",
        "id": 272178569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645045635
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808454218\">PR review comment</a>:</p>\n<blockquote>\n<p>So this became necessary because conversion functions can be used on both the LHS and RHS, and on the LHS we want to deal in borrows as much as possible (as extractors work today) while on the RHS we're usually building entirely new structs. If we were to lower to terms instead then it wouldn't be necessary, as the extractor/constructor codegen already does basically the right thing here.</p>\n</blockquote>",
        "id": 272178570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645045635
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885199350\">PR review</a>.</p>",
        "id": 272185889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645049214
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808493799\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think this is needed here: even if we do move to a terms-as-converters rather than explicit-converter-funcs design, we can look up the term and find an attached extractor or converter, so we don't need to record directionality here, I think.</p>\n</blockquote>",
        "id": 272185890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645049214
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885199545\">PR review</a>.</p>",
        "id": 272185916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645049228
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808493934\">PR review comment</a>:</p>\n<blockquote>\n<p>(commented below -- yes, I'll change this)</p>\n</blockquote>",
        "id": 272185917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645049228
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272220572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645081068
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272223401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645083929
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885547769\">PR review</a>.</p>",
        "id": 272223494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645083976
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808754810\">PR review comment</a>:</p>\n<blockquote>\n<p>Removed now, with term-based design.</p>\n</blockquote>",
        "id": 272223495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645083976
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885548272\">PR review</a>.</p>",
        "id": 272223531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645084010
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808755159\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks! Used the entry API actually for a similarly cleaner single-lookup.</p>\n</blockquote>",
        "id": 272223532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645084010
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#pullrequestreview-885548994\">PR review</a>.</p>",
        "id": 272223583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645084059
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807#discussion_r808755726\">PR review comment</a>:</p>\n<blockquote>\n<p>Done! We now have pass-tests, fail-tests, and link-tests; the last one checks that the generated code builds and links against the example driver/context trait impl.</p>\n</blockquote>",
        "id": 272223584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645084059
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272226741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645086358
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272318680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645129924
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272344961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645144723
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272355229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645154028
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272871328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645566608
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> from <code>isle-implicit-conversions</code> to <code>main</code>.</p>",
        "id": 272871574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645566760
    },
    {
        "content": "<p><strong>cfallin</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3807\">PR #3807</a> as ready for review.</p>",
        "id": 272871601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1645566779
    }
]