[
    {
        "content": "<p><strong>liutao-liu</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431452930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712297322
    },
    {
        "content": "<p>liutao-liu opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a> from <code>liutao-liu:opt_read_write</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<ul>\n<li>Issue#7973</li>\n</ul>\n<p>Compared to native(C/C++), <code>fd-read</code> can only reach 20% of native. I will divide the performance hotspots  into the following two categories:,</p>\n<ol>\n<li>Wasi implementation of <code>fd-read</code>(approximately 30% of the hotspots), such as the cost of redundant memory copies, the cost of inserting and deleting <code>HostInputStream</code> into <code>WasiView</code>, and the cost of accessing guest memory(merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8277\">PR);</a>;</li>\n<li>Wasm program call host function(approximately 40% of the hotspots): I am not very familiar with this mechanism yet, and currently I cannot understand the reasons behind the hotspots here;</li>\n</ol>\n<p>This PR is mainly optimized for the first type of performance hotspot:</p>\n<ol>\n<li>Avoid unnecessary copying;</li>\n<li>Avoid inserting and deleting <code>HostInputStream</code> into<code>WasiView</code>;</li>\n</ol>\n<p>The perfermance hotspots of <code>fd_write</code> is the same <code>fd_read</code>;</p>\n</blockquote>",
        "id": 431452931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712297322
    },
    {
        "content": "<p><strong>liutao-liu</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431452932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712297322
    },
    {
        "content": "<p>liutao-liu edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>:</p>\n<blockquote>\n<ul>\n<li>Issue #7973</li>\n</ul>\n<p>Compared to native(C/C++), <code>fd-read</code> can only reach 20% of native. I will divide the performance hotspots  into the following two categories:,</p>\n<ol>\n<li>Wasi implementation of <code>fd-read</code>(approximately 30% of the hotspots), such as the cost of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/86dcae460b5437703570e52253cc1b7d5bad8597/crates/wasi/src/preview1.rs#L1602\">redundant memory copies,</a> the cost of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/86dcae460b5437703570e52253cc1b7d5bad8597/crates/wasi/src/preview1.rs#L1569\">inserting</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/blob/86dcae460b5437703570e52253cc1b7d5bad8597/crates/wasi/src/preview1.rs#L1577\">deleting</a> <code>HostInputStream</code> into <code>WasiView</code>, and the cost of accessing guest memory(merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8277\">PR);</a></li>\n<li>Wasm program call host function(approximately 40% of the hotspots): I am not very familiar with this mechanism yet, and currently I cannot understand the reasons behind the hotspots here;</li>\n</ol>\n<p>This PR is mainly optimized for the first type of performance hotspot:</p>\n<ol>\n<li>Avoid unnecessary copying;</li>\n<li>Avoid inserting and deleting <code>HostInputStream</code> into<code>WasiView</code>;</li>\n</ol>\n<p>The perfermance hotspots of <code>fd_write</code> is the same <code>fd_read</code>:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/86dcae460b5437703570e52253cc1b7d5bad8597/crates/wasi/src/preview1.rs#L1682\">https://github.com/bytecodealliance/wasmtime/blob/86dcae460b5437703570e52253cc1b7d5bad8597/crates/wasi/src/preview1.rs#L1682</a></p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/86dcae460b5437703570e52253cc1b7d5bad8597/crates/wasi/src/preview1.rs#L244\">https://github.com/bytecodealliance/wasmtime/blob/86dcae460b5437703570e52253cc1b7d5bad8597/crates/wasi/src/preview1.rs#L244</a></p>\n</blockquote>",
        "id": 431453467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712297694
    },
    {
        "content": "<p>liutao-liu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431454640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712298466
    },
    {
        "content": "<p>liutao-liu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431454738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712298530
    },
    {
        "content": "<p>liutao-liu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431456168,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712299325
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#pullrequestreview-1983851998\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for the PR!</p>\n<p>I've left some notes below, but I'll additionally point out that this is specifically ignoring the <code>blocking_mode</code> now. Previously that was \"respected\" to a certain degree, but now it's being ignored. I believe that's ok because that's what the previous implementation in wasi-common did anyway as OSes tend to ignore nonblocking on files. That being said the current state of the code is a bit confusing where the <code>blocking_mode</code> is sometimes used and sometimes isn't. </p>\n<p>I mostly wanted to point this out in case anyone runs into this in the future. I'll follow up with a PR after this one to clean this up. You don't have to clean it up here yourself @liutao-liu </p>\n</blockquote>",
        "id": 431582195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712341513
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#pullrequestreview-1983851998\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for the PR!</p>\n<p>I've left some notes below, but I'll additionally point out that this is specifically ignoring the <code>blocking_mode</code> now. Previously that was \"respected\" to a certain degree, but now it's being ignored. I believe that's ok because that's what the previous implementation in wasi-common did anyway as OSes tend to ignore nonblocking on files. That being said the current state of the code is a bit confusing where the <code>blocking_mode</code> is sometimes used and sometimes isn't. </p>\n<p>I mostly wanted to point this out in case anyone runs into this in the future. I'll follow up with a PR after this one to clean this up. You don't have to clean it up here yourself @liutao-liu </p>\n</blockquote>",
        "id": 431582196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712341513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#discussion_r1554090237\">PR review comment</a>:</p>\n<blockquote>\n<p>This <code>.expect(\"...\")</code> will need to be handled (e.g. we can't panic here). The <code>None</code> happens here with shared memories at the core wasm level, meaning that this'll need to use the <code>copy_from_slice</code> method. (e.g. read data into a buffer on the host and then copy the contents of the buffer to the guest)</p>\n</blockquote>",
        "id": 431582197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712341513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#discussion_r1554087856\">PR review comment</a>:</p>\n<blockquote>\n<p>It's ok to omit this line, this isn't actually doing anything. As-written this is copying data from the guest to the host, truncating it, and then deallocating it.</p>\n</blockquote>",
        "id": 431582198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712341513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#discussion_r1554092140\">PR review comment</a>:</p>\n<blockquote>\n<p>Also given the inner loops below the outer loop can be removed too.</p>\n</blockquote>",
        "id": 431582199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712341513
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#discussion_r1554091513\">PR review comment</a>:</p>\n<blockquote>\n<p>This limitation is only part of the <code>Host*Stream</code> traits, so it's ok to remove this <code>NOTE</code> as well as the <code>.min(4096)</code> here too.</p>\n</blockquote>",
        "id": 431582200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712341513
    },
    {
        "content": "<p>liutao-liu submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#pullrequestreview-1984433836\">PR review</a>.</p>",
        "id": 431634799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712374840
    },
    {
        "content": "<p>liutao-liu created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#discussion_r1554516330\">PR review comment</a>:</p>\n<blockquote>\n<p>got</p>\n</blockquote>",
        "id": 431634800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712374840
    },
    {
        "content": "<p>liutao-liu submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#pullrequestreview-1984433869\">PR review</a>.</p>",
        "id": 431634810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712374851
    },
    {
        "content": "<p>liutao-liu created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#discussion_r1554516356\">PR review comment</a>:</p>\n<blockquote>\n<p>got</p>\n</blockquote>",
        "id": 431634811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712374851
    },
    {
        "content": "<p>liutao-liu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431635549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712375462
    },
    {
        "content": "<p>liutao-liu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431637613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712377421
    },
    {
        "content": "<p>liutao-liu submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#pullrequestreview-1984438351\">PR review</a>.</p>",
        "id": 431637674,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712377451
    },
    {
        "content": "<p>liutao-liu created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#discussion_r1554520962\">PR review comment</a>:</p>\n<blockquote>\n<p>got</p>\n</blockquote>",
        "id": 431637675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712377451
    },
    {
        "content": "<p>liutao-liu updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 431638847,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712378792
    },
    {
        "content": "<p>liutao-liu <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#issuecomment-2046279363\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>:</p>\n<blockquote>\n<p>@alexcrichton  Your review comments have been completed，this pr can be merged.</p>\n</blockquote>",
        "id": 432370360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712711417
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303#pullrequestreview-1994497197\">PR review</a>.</p>",
        "id": 432728688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712848274
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8303\">PR #8303</a>.</p>",
        "id": 432734812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712849913
    }
]