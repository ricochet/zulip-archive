[
    {
        "content": "<p>Milek7 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a> from <code>Milek7:mt-c-api</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>I'm not sure how to handle SharedMemory here. Possibly it could use Extern interfaces, but I had some trouble with it. Extern seem to assume that it's associated with Store, but shared memories aren't. Instead I added dedicated <code>define_sharedmemory</code> in linker. Is this acceptable or I need to fight with Extern more to get it to work?</p>\n</blockquote>",
        "id": 421510789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707936781
    },
    {
        "content": "<p><strong>Milek7</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 421510790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707936782
    },
    {
        "content": "<p><strong>Milek7</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 421510791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707936782
    },
    {
        "content": "<p>Milek7 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 421511768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707937176
    },
    {
        "content": "<p>Milek7 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>I'm not sure how to handle SharedMemory here. Possibly it could use Extern interfaces, but I had some trouble with it. Extern seem to assume that it's associated with Store, but shared memories aren't. Instead I added dedicated <code>wasmtime_linker_define_sharedmemory</code>. Is this acceptable or I need to fight with Extern more to get it to work?</p>\n</blockquote>",
        "id": 421512573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707937423
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1944699958\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>From the context here I'm not sure why the wasmtime_wasictx methods are required to use threads. I'm planning a renovation which will swap out the c api's wasi implementation from <code>wasi-common</code> to <code>wasmtime-wasi::preview2</code>, which will shortly be [promoted to the root of <code>wasmtime-wasi</code>)(<a href=\"https://github.com/bytecodealliance/wasmtime/pull/7933\">https://github.com/bytecodealliance/wasmtime/pull/7933</a>), and which is not compatible with wasmtime-wasi-threads.</p>\n</blockquote>",
        "id": 421538085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707947015
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1944699958\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>From the context here I'm not sure why the wasmtime_wasictx methods are required to use threads. I'm planning a renovation which will swap out the c api's wasi implementation from <code>wasi-common</code> to <code>wasmtime-wasi::preview2</code>, which will shortly be [promoted to the root of <code>wasmtime-wasi</code>)(<a href=\"https://github.com/bytecodealliance/wasmtime/pull/7933\">https://github.com/bytecodealliance/wasmtime/pull/7933</a>), and which is not compatible with <code>wasmtime-wasi-threads</code>.</p>\n</blockquote>",
        "id": 421538118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707947027
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1944699958\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>From the context here I'm not sure why the wasmtime_wasictx methods are required to use threads. I'm planning a renovation which will swap out the c api's wasi implementation from <code>wasi-common</code> to <code>wasmtime-wasi::preview2</code>, which will shortly be <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7933\">promoted to the root of <code>wasmtime-wasi</code></a>, and which is not compatible with <code>wasmtime-wasi-threads</code>.</p>\n</blockquote>",
        "id": 421539915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707947776
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1944863063\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>I think adding bits and functions to manage shared memories in the C API would be great to have, but I would agree with @pchickey that the WASI bits may want to be left out for now. I would echo his same sentiments in terms of it's not clear what to do with the implementation of WASI and threads in the wasmtime repo into the future and I think it would be best to not add new dependencies on something we're hoping to remove (aka <code>wasi-common</code>)</p>\n</blockquote>",
        "id": 421545113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707950275
    },
    {
        "content": "<p>Milek7 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1944868479\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>wasictx constructor is needed to attach the same WASI context to multiple instances (threads). If preview2 does not support threads that's somewhat of a problem for my use-case :(<br>\nI implement thread spawn function on C side instead of using <code>wasmtime-wasi-threads</code>, but I don't think that makes any difference</p>\n</blockquote>",
        "id": 421545349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707950386
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1945199646\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 421560995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707959020
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1945272252\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>@Milek7, you may be interested in <a href=\"https://github.com/WebAssembly/component-model/pull/291\">https://github.com/WebAssembly/component-model/pull/291</a>. Let's talk more tomorrow on Zulip; maybe you want to help out with implementing some of those bits?</p>\n</blockquote>",
        "id": 421569293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707964593
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1946984000\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>That makes sense that wasi contexts can't be shared today, but this API being added is exposing a contract where a wasi context can be attached to multiple stores which we may not wish to guarantee. For example thisi enables having one long-lived wasi context which is shared over its lifetime by many instances. While a perhaps interesting use case that's not necessarily something I think we want to commit to just yet.</p>\n</blockquote>",
        "id": 421721139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708023703
    },
    {
        "content": "<p>Milek7 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 421730043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708026974
    },
    {
        "content": "<p>Milek7 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1947528270\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>Dropped wasictx functions.</p>\n</blockquote>",
        "id": 421762413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708041526
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1948758770\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>Ok, thanks! Can you detail more how come this couldn't be folded into <code>wasmtime_extern_t</code>? For example with this support you can't extract a shared memory export or inspect the import/export types for example.</p>\n</blockquote>",
        "id": 421891164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708099773
    },
    {
        "content": "<p>Milek7 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1948831330\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>I was having some trouble with it, but looking at it now I might have confused wasmtime_extern_t with wasm_extern_t, ouch. I will take another look next week.</p>\n</blockquote>",
        "id": 421896127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708101252
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1948881179\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>Ah ok makes sense! In that case yeah I'd recommend trying to get this integrated with the <code>wasmtime_*</code> variant. If that has issues though I can try to help work through them as they come up</p>\n</blockquote>",
        "id": 421900317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1708102678
    },
    {
        "content": "<p>Milek7 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 424349194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709340539
    },
    {
        "content": "<p>Milek7 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 424350024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709341313
    },
    {
        "content": "<p>Milek7 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 424351881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709343237
    },
    {
        "content": "<p>Milek7 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#issuecomment-1974208993\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>:</p>\n<blockquote>\n<p>Done</p>\n</blockquote>",
        "id": 424355838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709346495
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940#pullrequestreview-1923096689\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 425359494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709832866
    },
    {
        "content": "<p>Milek7 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 425427943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709861728
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 425428273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709861957
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7940\">PR #7940</a>.</p>",
        "id": 425433043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709864451
    }
]