[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957\">issue #5957</a>:</p>\n<blockquote>\n<p>Currently Cranelift will not hoist invariant loads outside of loops, meaning that an invariant load is reloaded on each iteration of the loop. For example with this code:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (memory 0)\n  (func $add_all (param $ptr i32) (param $len i32) (result i32)\n    (local $result i32)\n    loop $l\n      (local.set $result\n        (i32.add\n          (local.get $result)\n          (i32.load (local.get $ptr))\n        )\n      )\n\n      (local.set $ptr\n        (i32.add\n          (local.get $ptr)\n          (i32.const 4)\n        )\n      )\n\n      (br_if $l\n        (local.tee $len\n          (i32.sub\n            (local.get $len)\n            (i32.const 1)\n          )\n        )\n      )\n    end\n    (local.get $result)\n  )\n)\n</code></pre></div>\n<p>this machine code is generated on x86_64:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>\n\n<span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>:     <span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">elf64</span><span class=\"o\">-</span><span class=\"n\">x86</span><span class=\"o\">-</span><span class=\"mi\">64</span>\n\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">text</span>:\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">&gt;</span>:\n       <span class=\"mi\">0</span>:       <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">       </span><span class=\"mi\">1</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span>:       <span class=\"mi\">31</span><span class=\"w\"> </span><span class=\"n\">c0</span><span class=\"w\">                   </span><span class=\"n\">xor</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"w\">       </span><span class=\"mi\">6</span>:       <span class=\"mi\">49</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">c9</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9</span>\n<span class=\"w\">       </span><span class=\"mi\">9</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\">             </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"mh\">0x50</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">rcx</span>\n<span class=\"w\">       </span><span class=\"n\">d</span>:       <span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">c2</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span>:       <span class=\"mi\">42</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"mh\">0x0</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">ecx</span>\n<span class=\"w\">      </span><span class=\"mi\">15</span>:       <span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">e9</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">             </span><span class=\"n\">sub</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x1</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9d</span>\n<span class=\"w\">      </span><span class=\"mi\">19</span>:       <span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">c8</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">b</span>:       <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">c2</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x4</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">edx</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">e</span>:       <span class=\"mi\">45</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">c9</span><span class=\"w\">                </span><span class=\"n\">test</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r9d</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9d</span>\n<span class=\"w\">      </span><span class=\"mi\">21</span>:       <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">e2</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">    </span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">+</span><span class=\"mh\">0x9</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">27</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">a</span>:       <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">b</span>:       <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">retq</span>\n<span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>The instruction at <code>9</code> is loading the base pointer of memory from the VMContext, in <code>%rdi</code>, into <code>%rcx</code>. This load happens on all iterations of the loop, however.</p>\n<p>The Cranelift function being lowered here is (according to <code>RUST_LOG</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">gv2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">gv1</span>\n<span class=\"w\">    </span><span class=\"n\">gv3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv3</span><span class=\"o\">+</span><span class=\"mi\">80</span>\n<span class=\"w\">    </span><span class=\"n\">stack_limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gv2</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">001</span><span class=\"n\">f</span><span class=\"w\">                               </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"o\">@</span><span class=\"mi\">0021</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v6</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v15</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"o\">+</span><span class=\"mi\">80</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v7</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">heap</span><span class=\"w\"> </span><span class=\"n\">v10</span>\n<span class=\"o\">@</span><span class=\"mi\">0036</span><span class=\"w\">                               </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">0038</span><span class=\"w\">                               </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isub</span><span class=\"w\"> </span><span class=\"n\">v15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">a</span><span class=\"w\">                               </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span>\n<span class=\"w\">                                    </span><span class=\"n\">v4</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v12</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">f</span><span class=\"w\">                               </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"o\">@</span><span class=\"mi\">0031</span><span class=\"w\">                               </span><span class=\"n\">v14</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">b</span><span class=\"w\">                               </span><span class=\"n\">brif</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">block4</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block4</span>:\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">d</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block3</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block3</span>:\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block1</span>:\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v12</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Specifically the instruction <code>v9 = load.i64 notrap aligned readonly v0+80</code> is not hoisted outside of the loop, despite it being <code>readonly</code>, <code>notrap</code>, and <code>v0</code> not being dependent on any loop value.</p>\n</blockquote>",
        "id": 340224318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678227185
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957\">issue #5957</a>:</p>\n<blockquote>\n<p>Currently Cranelift will not hoist invariant loads outside of loops, meaning that an invariant load is reloaded on each iteration of the loop. For example with this code:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (memory 0)\n  (func $add_all (param $ptr i32) (param $len i32) (result i32)\n    (local $result i32)\n    loop $l\n      (local.set $result\n        (i32.add\n          (local.get $result)\n          (i32.load (local.get $ptr))\n        )\n      )\n\n      (local.set $ptr\n        (i32.add\n          (local.get $ptr)\n          (i32.const 4)\n        )\n      )\n\n      (br_if $l\n        (local.tee $len\n          (i32.sub\n            (local.get $len)\n            (i32.const 1)\n          )\n        )\n      )\n    end\n    (local.get $result)\n  )\n)\n</code></pre></div>\n<p>this machine code is generated on x86_64:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>\n\n<span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>:     <span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">elf64</span><span class=\"o\">-</span><span class=\"n\">x86</span><span class=\"o\">-</span><span class=\"mi\">64</span>\n\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">text</span>:\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">&gt;</span>:\n       <span class=\"mi\">0</span>:       <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">       </span><span class=\"mi\">1</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span>:       <span class=\"mi\">31</span><span class=\"w\"> </span><span class=\"n\">c0</span><span class=\"w\">                   </span><span class=\"n\">xor</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"w\">       </span><span class=\"mi\">6</span>:       <span class=\"mi\">49</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">c9</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9</span>\n<span class=\"w\">       </span><span class=\"mi\">9</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\">             </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"mh\">0x50</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">rcx</span>\n<span class=\"w\">       </span><span class=\"n\">d</span>:       <span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">c2</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span>:       <span class=\"mi\">42</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"mh\">0x0</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">ecx</span>\n<span class=\"w\">      </span><span class=\"mi\">15</span>:       <span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">e9</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">             </span><span class=\"n\">sub</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x1</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9d</span>\n<span class=\"w\">      </span><span class=\"mi\">19</span>:       <span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">c8</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">b</span>:       <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">c2</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x4</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">edx</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">e</span>:       <span class=\"mi\">45</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">c9</span><span class=\"w\">                </span><span class=\"n\">test</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r9d</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9d</span>\n<span class=\"w\">      </span><span class=\"mi\">21</span>:       <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">e2</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">    </span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">+</span><span class=\"mh\">0x9</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">27</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">a</span>:       <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">b</span>:       <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">retq</span>\n<span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>The instruction at <code>9</code> is loading the base pointer of memory from the VMContext, in <code>%rdi</code>, into <code>%rcx</code>. This load happens on all iterations of the loop, however.</p>\n<p>The Cranelift function being lowered here is (according to <code>RUST_LOG</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">gv2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">gv1</span>\n<span class=\"w\">    </span><span class=\"n\">gv3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv3</span><span class=\"o\">+</span><span class=\"mi\">80</span>\n<span class=\"w\">    </span><span class=\"n\">stack_limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gv2</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">001</span><span class=\"n\">f</span><span class=\"w\">                               </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"o\">@</span><span class=\"mi\">0021</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v6</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v15</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"o\">+</span><span class=\"mi\">80</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v7</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">heap</span><span class=\"w\"> </span><span class=\"n\">v10</span>\n<span class=\"o\">@</span><span class=\"mi\">0036</span><span class=\"w\">                               </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">0038</span><span class=\"w\">                               </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isub</span><span class=\"w\"> </span><span class=\"n\">v15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">a</span><span class=\"w\">                               </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span>\n<span class=\"w\">                                    </span><span class=\"n\">v4</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v12</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">f</span><span class=\"w\">                               </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"o\">@</span><span class=\"mi\">0031</span><span class=\"w\">                               </span><span class=\"n\">v14</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">b</span><span class=\"w\">                               </span><span class=\"n\">brif</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">block4</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block4</span>:\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">d</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block3</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block3</span>:\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block1</span>:\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v12</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Specifically the instruction <code>v9 = load.i64 notrap aligned readonly v0+80</code> is not hoisted outside of the loop, despite it being <code>readonly</code>, <code>notrap</code>, and <code>v0</code> not being dependent on any loop value.</p>\n</blockquote>",
        "id": 340224319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678227185
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957#issuecomment-1458996497\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957\">issue #5957</a>:</p>\n<blockquote>\n<p>Ideally <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d3a881b524d56498dfc71b65818b2abbeb1da44/cranelift/codegen/src/inst_predicates.rs#L58\">this</a> line should cause loads with <code>notrap</code> and <code>readonly</code> to be considered pure, and thus hoistable. I can look into this eventually if someone else doesn't get to it first (just wanted to point to that line as a starting point).</p>\n</blockquote>",
        "id": 340231078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678229986
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957#issuecomment-1459024800\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957\">issue #5957</a>:</p>\n<blockquote>\n<p>Brief debugging my part reveals that line is working as intended but <a href=\"https://github.com/bytecodealliance/wasmtime/blob/8d3a881b524d56498dfc71b65818b2abbeb1da44/cranelift/codegen/src/egraph/elaborate.rs#L415-L437\">here</a>, during loop hoisting, the argument to the <code>load</code> instruction, <code>v0</code>, is listed as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"mi\">629</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">egraph</span><span class=\"o\">/</span><span class=\"n\">elaborate</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">408</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ElaboratedValue</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\"> </span><span class=\"mi\">630</span><span class=\"w\">     </span><span class=\"n\">in_block</span>: <span class=\"nc\">block2</span><span class=\"p\">,</span>\n<span class=\"w\"> </span><span class=\"mi\">631</span><span class=\"w\">     </span><span class=\"n\">value</span>: <span class=\"nc\">v0</span><span class=\"p\">,</span>\n<span class=\"w\"> </span><span class=\"mi\">632</span><span class=\"w\"> </span><span class=\"p\">}</span>\n</code></pre></div>\n<p>where I think <code>in_block: block2</code> is preventing the hoist?</p>\n</blockquote>",
        "id": 340234919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678231758
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957#issuecomment-1459034667\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957\">issue #5957</a>:</p>\n<blockquote>\n<p>While I'm not sure that <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5960\">https://github.com/bytecodealliance/wasmtime/pull/5960</a> is 100% correct it fixes the issue here at least</p>\n</blockquote>",
        "id": 340235698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678232195
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5957\">issue #5957</a>:</p>\n<blockquote>\n<p>Currently Cranelift will not hoist invariant loads outside of loops, meaning that an invariant load is reloaded on each iteration of the loop. For example with this code:</p>\n<div class=\"codehilite\" data-code-language=\"wasm\"><pre><span></span><code>(module\n  (memory 0)\n  (func $add_all (param $ptr i32) (param $len i32) (result i32)\n    (local $result i32)\n    loop $l\n      (local.set $result\n        (i32.add\n          (local.get $result)\n          (i32.load (local.get $ptr))\n        )\n      )\n\n      (local.set $ptr\n        (i32.add\n          (local.get $ptr)\n          (i32.const 4)\n        )\n      )\n\n      (br_if $l\n        (local.tee $len\n          (i32.sub\n            (local.get $len)\n            (i32.const 1)\n          )\n        )\n      )\n    end\n    (local.get $result)\n  )\n)\n</code></pre></div>\n<p>this machine code is generated on x86_64:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">objdump</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>\n\n<span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">cwasm</span>:     <span class=\"nc\">file</span><span class=\"w\"> </span><span class=\"n\">format</span><span class=\"w\"> </span><span class=\"n\">elf64</span><span class=\"o\">-</span><span class=\"n\">x86</span><span class=\"o\">-</span><span class=\"mi\">64</span>\n\n\n<span class=\"n\">Disassembly</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">text</span>:\n\n<span class=\"mi\">0000000000000000</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">&gt;</span>:\n       <span class=\"mi\">0</span>:       <span class=\"mi\">55</span><span class=\"w\">                      </span><span class=\"n\">push</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">       </span><span class=\"mi\">1</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">e5</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">       </span><span class=\"mi\">4</span>:       <span class=\"mi\">31</span><span class=\"w\"> </span><span class=\"n\">c0</span><span class=\"w\">                   </span><span class=\"n\">xor</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">eax</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"w\">       </span><span class=\"mi\">6</span>:       <span class=\"mi\">49</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">c9</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9</span>\n<span class=\"w\">       </span><span class=\"mi\">9</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"w\">             </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"mh\">0x50</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rdi</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">rcx</span>\n<span class=\"w\">       </span><span class=\"n\">d</span>:       <span class=\"mi\">44</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">c2</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">edx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r8d</span>\n<span class=\"w\">      </span><span class=\"mi\">10</span>:       <span class=\"mi\">42</span><span class=\"w\"> </span><span class=\"mi\">8</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\">          </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"mh\">0x0</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rcx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r8</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">),</span><span class=\"o\">%</span><span class=\"n\">ecx</span>\n<span class=\"w\">      </span><span class=\"mi\">15</span>:       <span class=\"mi\">41</span><span class=\"w\"> </span><span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">e9</span><span class=\"w\"> </span><span class=\"mi\">01</span><span class=\"w\">             </span><span class=\"n\">sub</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x1</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9d</span>\n<span class=\"w\">      </span><span class=\"mi\">19</span>:       <span class=\"mi\">01</span><span class=\"w\"> </span><span class=\"n\">c8</span><span class=\"w\">                   </span><span class=\"n\">add</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">ecx</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">eax</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">b</span>:       <span class=\"mi\">83</span><span class=\"w\"> </span><span class=\"n\">c2</span><span class=\"w\"> </span><span class=\"mi\">04</span><span class=\"w\">                </span><span class=\"n\">add</span><span class=\"w\">    </span><span class=\"cp\">$</span><span class=\"mh\">0x4</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">edx</span>\n<span class=\"w\">      </span><span class=\"mi\">1</span><span class=\"n\">e</span>:       <span class=\"mi\">45</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">c9</span><span class=\"w\">                </span><span class=\"n\">test</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r9d</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">r9d</span>\n<span class=\"w\">      </span><span class=\"mi\">21</span>:       <span class=\"mi\">0</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"mi\">85</span><span class=\"w\"> </span><span class=\"n\">e2</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\"> </span><span class=\"n\">ff</span><span class=\"w\">       </span><span class=\"n\">jne</span><span class=\"w\">    </span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">_wasm_function_0</span><span class=\"o\">+</span><span class=\"mh\">0x9</span><span class=\"o\">&gt;</span>\n<span class=\"w\">      </span><span class=\"mi\">27</span>:       <span class=\"mi\">48</span><span class=\"w\"> </span><span class=\"mi\">89</span><span class=\"w\"> </span><span class=\"n\">ec</span><span class=\"w\">                </span><span class=\"n\">mov</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">a</span>:       <span class=\"mi\">5</span><span class=\"n\">d</span><span class=\"w\">                      </span><span class=\"n\">pop</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"w\">      </span><span class=\"mi\">2</span><span class=\"n\">b</span>:       <span class=\"nc\">c3</span><span class=\"w\">                      </span><span class=\"n\">retq</span>\n<span class=\"w\">        </span><span class=\"o\">..</span><span class=\"p\">.</span>\n</code></pre></div>\n<p>The instruction at <code>9</code> is loading the base pointer of memory from the VMContext, in <code>%rdi</code>, into <code>%rcx</code>. This load happens on all iterations of the loop, however.</p>\n<p>The Cranelift function being lowered here is (according to <code>RUST_LOG</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">gv2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">gv1</span>\n<span class=\"w\">    </span><span class=\"n\">gv3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv3</span><span class=\"o\">+</span><span class=\"mi\">80</span>\n<span class=\"w\">    </span><span class=\"n\">stack_limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gv2</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">001</span><span class=\"n\">f</span><span class=\"w\">                               </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"o\">@</span><span class=\"mi\">0021</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">)</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v6</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v15</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"o\">+</span><span class=\"mi\">80</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v7</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"o\">@</span><span class=\"mi\">0027</span><span class=\"w\">                               </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">little</span><span class=\"w\"> </span><span class=\"n\">heap</span><span class=\"w\"> </span><span class=\"n\">v10</span>\n<span class=\"o\">@</span><span class=\"mi\">0036</span><span class=\"w\">                               </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">0038</span><span class=\"w\">                               </span><span class=\"n\">v17</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">isub</span><span class=\"w\"> </span><span class=\"n\">v15</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v16</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">a</span><span class=\"w\">                               </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v11</span>\n<span class=\"w\">                                    </span><span class=\"n\">v4</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">v12</span>\n<span class=\"o\">@</span><span class=\"mi\">002</span><span class=\"n\">f</span><span class=\"w\">                               </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"o\">@</span><span class=\"mi\">0031</span><span class=\"w\">                               </span><span class=\"n\">v14</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4</span>\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">b</span><span class=\"w\">                               </span><span class=\"n\">brif</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"p\">(</span><span class=\"n\">v12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v17</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">block4</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block4</span>:\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">d</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block3</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block3</span>:\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block1</span>:\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v12</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Specifically the instruction <code>v9 = load.i64 notrap aligned readonly v0+80</code> is not hoisted outside of the loop, despite it being <code>readonly</code>, <code>notrap</code>, and <code>v0</code> not being dependent on any loop value.</p>\n</blockquote>",
        "id": 340242882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678235752
    }
]