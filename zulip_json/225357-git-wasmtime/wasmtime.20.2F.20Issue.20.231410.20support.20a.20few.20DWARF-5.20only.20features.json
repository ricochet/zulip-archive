[
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-604432839\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-604432839\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik does your self-assignment mean I shouldn't add any more commits?</p>\n</blockquote>",
        "id": 191884113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585229515
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-604435418\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-604435418\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>No, it means that he will review this PR once it is ready.</p>\n</blockquote>",
        "id": 191884841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585229827
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617871923\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617871923\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik I have now added <code>DW_FORM_addrx*</code> in two spots, and I would expect that frames for subprograms would fill with parameters in <code>lldb</code>. They do for <code>fib-was.c</code> but not for my <code>fib-was.mo.wasm</code> on this branch. I wonder what I am missing here. Where should I start debugging this? Any tips?</p>\n</blockquote>",
        "id": 194953333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587571425
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617912167\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617912167\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>They do for fib-was.c but not for my fib-was.mo.wasm on this branch. I wonder what I am missing here.</p>\n</blockquote>\n<p>@ggreif I don't see <code>DW_AT_high_pc</code> defined for any subprogram in fib-was.mo.wasm. I'm sure how the transform will behave for subprogram without code range defined.</p>\n</blockquote>",
        "id": 194962631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587575591
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617912167\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617912167\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>They do for fib-was.c but not for my fib-was.mo.wasm on this branch. I wonder what I am missing here.</p>\n</blockquote>\n<p>@ggreif I don't see <code>DW_AT_high_pc</code> defined for any subprogram in fib-was.mo.wasm. I'm not sure how the transform will behave for subprogram without code range defined.</p>\n</blockquote>",
        "id": 194962660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587575605
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617916322\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617916322\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Correct. I didn't bother adding <code>DW_AT_high_pc</code> yet. But I have seen that the garbage collector does mark my subprograms as live even without it, so I should be safe.</p>\n<p>I am mostly wondering if there are any gotchas about the frame structure that I should know. I guess the type definitions are passed through unchanged.</p>\n</blockquote>",
        "id": 194963712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576032
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617916322\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617916322\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Correct. I didn't bother adding <code>DW_AT_high_pc</code> yet. But I have seen that the garbage collector does mark my subprograms as live even without it, so I should be safe. I should say that I can set breakpoints, but <code>(lldb) frame var</code> will be empty a.t.m.</p>\n<p>I am mostly wondering if there are any gotchas about the frame structure that I should know. I guess the type definitions are passed through unchanged.</p>\n</blockquote>",
        "id": 194964103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576221
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617921700\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617921700\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>I didn't bother adding DW_AT_high_pc yet.</p>\n</blockquote>\n<p>Can you add support for <code>DW_AT_high_pc</code>? That's one of main differences between fib-was.c and <a href=\"http://fib-was.mo\" title=\"http://fib-was.mo\">fib-was.mo</a>.</p>\n</blockquote>",
        "id": 194965087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576639
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617921700\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617921700\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>I didn't bother adding DW_AT_high_pc yet.</p>\n</blockquote>\n<p>Can you add support for <code>DW_AT_high_pc</code>? That's one of main differences between fib-was.c and <a href=\"http://fib-was.mo\" title=\"http://fib-was.mo\">fib-was.mo</a>.</p>\n<p>P.S. that might be affecting <code>frame var</code></p>\n</blockquote>",
        "id": 194965146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576664
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617998287\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-617998287\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>I have updated the binary with <code>DW_AT_high_pc</code>, but I still cannot see the formal parameter in <code>lldb</code>. I am beginning to think that a DWARF-5-ism is the reason, and the code bails out somewhere. I guess the <code>DW_AT_language</code> is not a significant difference?</p>\n</blockquote>",
        "id": 194982546,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587584991
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618015968\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618015968\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Hard to say, I just tried running your branch and it failed at clone_line_program -- the .debug_line format can differ between v4 and v5.</p>\n<p>Also DWARF expressions look rather weird: just <code>DW_OP_plus_uconst </code> is old and it also will not work without <code>DW_AT_frame_base</code>.</p>\n<p>Try to use <code>cargo run -- wasm2obj</code> to generate object file and inspect the result file using dwarfdump.</p>\n</blockquote>",
        "id": 194985811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587586589
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618029289\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618029289\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>Hard to say, I just tried running your branch and it failed at clone_line_program -- the .debug_line format can differ between v4 and v5.</p>\n</blockquote>\n<p>I have a quick hack for that. The reason is that file number <code>0</code> is allowed in DWARF-5, but not in 4.</p>\n<p>Here is the diff</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff --git a/crates/debug/src/transform/line_program.rs b/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gh\">index 499a1300..862bf5d3 100644</span>\n<span class=\"gd\">--- a/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gi\">+++ b/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gu\">@@ -238,7 +238,8 @@ where</span>\n                         };\n                         out_program.row().address_offset = address_offset;\n                         out_program.row().op_index = *op_index;\n\n<span class=\"gd\">-                        out_program.row().file = files[(file_index - 1) as usize];</span>\n<span class=\"gi\">+                        out_program.row().file = files[(if *file_index as i64 &lt;= 0 {0} else {file_index - 1}) as usize];</span>\n<span class=\"gi\">+                        // out_program.row().file = if *file_index as i64 &lt;= 0 {write::line::id::zero()} else {files[(file_index - 1) as usize]};</span>\n                         out_program.row().line = *line;\n                         out_program.row().column = *column;\n                         out_program.row().discriminator = *discriminator;\n</pre></div>\n\n\n<p>Sorry!</p>\n<p>Regarding <code>DW_OP_plus_uconst</code>, yes this is a provocation to <code>lldb</code> which would emit warnings when <code>frame var</code> is processed. Alas they don't appear with my program. They do with the <code>fib-wasm.wasm</code> one.</p>\n<p>Which brings me to the question: Are the loc programs in <code>DW_AT_frame_base</code> and <code>DW_AT_location</code> supposed to be concatenated for each argument/local? I am a bit puzzled to see what <code>clang-11</code> seems to emit. (Those binaries live in the main repo, I temporarily reverted them to <code>clang-10</code> on my branch.)</p>\n</blockquote>",
        "id": 194988891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587588201
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618033002\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618033002\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Wow, thanks for the tip!</p>\n<div class=\"codehilite\"><pre><span></span>cargo run -- wasm2obj -g tests/debug/testsuite/fib-wasm.mo.wasm  tests/debug/testsuite/fib-wasm.mo.out\n\nllvm-dwarfdump tests/debug/testsuite/fib-wasm.mo.out\n</pre></div>\n\n\n<p>totally helps! <span aria-label=\"first place\" class=\"emoji emoji-1f947\" role=\"img\" title=\"first place\">:first_place:</span> <span aria-label=\"rocket\" class=\"emoji emoji-1f680\" role=\"img\" title=\"rocket\">:rocket:</span></p>\n</blockquote>",
        "id": 194989638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587588605
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618033002\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618033002\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Wow, thanks for the tip!</p>\n<div class=\"codehilite\"><pre><span></span>cargo run -- wasm2obj -g tests/debug/testsuite/fib-wasm.mo.wasm tests/debug/testsuite/fib-wasm.mo.out\n\nllvm-dwarfdump tests/debug/testsuite/fib-wasm.mo.out\n</pre></div>\n\n\n<p>totally helps! <span aria-label=\"first place\" class=\"emoji emoji-1f947\" role=\"img\" title=\"first place\">:first_place:</span> <span aria-label=\"rocket\" class=\"emoji emoji-1f680\" role=\"img\" title=\"rocket\">:rocket:</span></p>\n</blockquote>",
        "id": 194989675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587588629
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618041001\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618041001\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>Are the loc programs in DW_AT_frame_base and DW_AT_location supposed to be concatenated for each argument/local? </p>\n</blockquote>\n<p>Nope. That was the case before DW_AT_frame_base patch landed. DW_OP_fpreg shall be used from this point on to access frame base.</p>\n</blockquote>",
        "id": 194991494,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587589643
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618046000\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618046000\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>A quick before/after analysis shows</p>\n<div class=\"codehilite\"><pre><span></span>0x0000082b:   DW_TAG_subprogram [2] *\n                DW_AT_low_pc [DW_FORM_addrx]    (indexed (00000064) address = 0x00000000000019e5)\n                DW_AT_high_pc [DW_FORM_data4]   (0x0000005e)\n                DW_AT_name [DW_FORM_strp]   ( .debug_str[0x000004af] = &quot;fib&quot;)\n                DW_AT_decl_line [DW_FORM_data1] (4)\n                DW_AT_decl_column [DW_FORM_data1]   (0x00)\n                DW_AT_prototyped [DW_FORM_flag_present] (true)\n                DW_AT_external [DW_FORM_flag]   (0x00)\n\n0x00000838:     DW_TAG_formal_parameter [3]\n                  DW_AT_name [DW_FORM_strp] ( .debug_str[0x00000145] = &quot;n&quot;)\n                  DW_AT_decl_line [DW_FORM_data1]   (4)\n                  DW_AT_decl_column [DW_FORM_data1] (0x09)\n                  DW_AT_type [DW_FORM_ref_udata]    (cu + 0x67 =&gt; {0x00000067} &quot;Nat16&quot;)\n                  DW_AT_location [DW_FORM_exprloc]  (DW_OP_plus_uconst 0x10)\n</pre></div>\n\n\n<p>goes in, and the below comes out:</p>\n<div class=\"codehilite\"><pre><span></span>0x00000a9b:   DW_TAG_subprogram [13] *\n                DW_AT_low_pc [DW_FORM_addr] (0x0000000000000000 &quot;.text._wasm_function_100&quot;)\n                DW_AT_name [DW_FORM_strp]   ( .debug_str[0x0000051a] = &quot;fib&quot;)\n                DW_AT_decl_line [DW_FORM_udata] (4)\n                DW_AT_decl_column [DW_FORM_udata]   (0)\n                DW_AT_prototyped [DW_FORM_flag] (0x01)\n                DW_AT_external [DW_FORM_flag]   (0x00)\n\n0x00000aac:     DW_TAG_formal_parameter [14]\n                  DW_AT_name [DW_FORM_strp] ( .debug_str[0x000001f9] = &quot;n&quot;)\n                  DW_AT_decl_line [DW_FORM_udata]   (4)\n                  DW_AT_decl_column [DW_FORM_udata] (9)\n                  DW_AT_location [DW_FORM_exprloc]  (DW_OP_plus_uconst 0x10)\n                  DW_AT_type [DW_FORM_ref4] (cu + 0x00a9 =&gt; {0x000000a9} &quot;Nat16&quot;)\n</pre></div>\n\n\n<p>Note the disappearance of <code>DW_AT_high_pc</code>. This looks suspiciously the effect of this line:<br>\n<a href=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L71\" title=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L71\">https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L71</a></p>\n<p>It is explicitly discarded. I wonder why...</p>\n</blockquote>",
        "id": 194992729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587590347
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618051851\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618051851\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>It is explicitly discarded</p>\n</blockquote>\n<p>The before says <code>DW_AT_high_pc [DW_FORM_data4]  (0x0000005e)</code> which is normally <code>Udata</code> for DW_AT_high_pc. Other forms of constants as not supported yet.</p>\n</blockquote>",
        "id": 194993994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587591119
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618051851\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618051851\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>It is explicitly discarded</p>\n</blockquote>\n<p>The before says <code>DW_AT_high_pc [DW_FORM_data4]  (0x0000005e)</code> which is normally <code>Udata</code> for DW_AT_high_pc. Other forms of constants is not supported yet.</p>\n</blockquote>",
        "id": 194994043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587591130
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618051851\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618051851\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>It is explicitly discarded</p>\n</blockquote>\n<p>The before says <code>DW_AT_high_pc [DW_FORM_data4]  (0x0000005e)</code> which is normally <code>Udata</code> for DW_AT_high_pc. Other forms of constants are not supported yet.</p>\n</blockquote>",
        "id": 194994154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587591213
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618066731\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618066731\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Right. It gets <code>read</code> as <code>Udata</code> and skipped over it in lines<br>\n<a href=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L71-L73\" title=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L71-L73\">https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L71-L73</a></p>\n<p>Similarly for <code>DW_AT_low_pc</code> for <code>Addr</code> in lines<br>\n<a href=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L68-L70\" title=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L68-L70\">https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L68-L70</a>.</p>\n<p>Both won't get <code>write</code>n. But here is the twist: I use <code>DW_FORM_addrx</code> (maps to <code>DebugAddrIndex</code>), which ends up written (this is new code added by me) in line<br>\n<a href=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L88\" title=\"https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L88\">https://github.com/ggreif/wasmtime/blob/master/crates/debug/src/transform/attr.rs#L88</a>!</p>\n<p>Should I also suppress <code>DebugAddrIndex</code> with <code>DW_AT_low_pc</code>?</p>\n<p>This makes me wonder how <code>fib-wasm.wasm</code> is different. The before/after picture seems to have both <code>DW_AT_low_pc</code> and <code>DW_AT_high_pc</code>:</p>\n<div class=\"codehilite\"><pre><span></span>0x00000026:   DW_TAG_subprogram [2] *\n                DW_AT_low_pc [DW_FORM_addr] (0x0000000000000003)\n                DW_AT_high_pc [DW_FORM_data4]   (0x000000cb)\n                DW_AT_name [DW_FORM_strp]   ( .debug_str[0x00000023] = &quot;fib&quot;)\n                DW_AT_decl_file [DW_FORM_data1] (&quot;./fib-wasm.c&quot;)\n                DW_AT_decl_line [DW_FORM_data1] (8)\n                DW_AT_prototyped [DW_FORM_flag_present] (true)\n                DW_AT_type [DW_FORM_ref4]   (cu + 0x008a =&gt; {0x0000008a} &quot;int&quot;)\n                DW_AT_external [DW_FORM_flag_present]   (true)\n\n0x00000039:     DW_TAG_formal_parameter [3]\n                  DW_AT_location [DW_FORM_exprloc]  (DW_OP_plus_uconst 0x1c)\n                  DW_AT_name [DW_FORM_strp] ( .debug_str[0x0000002b] = &quot;n&quot;)\n                  DW_AT_decl_file [DW_FORM_data1]   (&quot;./fib-wasm.c&quot;)\n                  DW_AT_decl_line [DW_FORM_data1]   (8)\n                  DW_AT_type [DW_FORM_ref4] (cu + 0x008a =&gt; {0x0000008a} &quot;int&quot;)\n</pre></div>\n\n\n<p>After:</p>\n<div class=\"codehilite\"><pre><span></span>0x00000069:   DW_TAG_subprogram [9] *\n                DW_AT_low_pc [DW_FORM_addr] (0x0000000000000000)\n                DW_AT_high_pc [DW_FORM_udata]   (142)\n                DW_AT_name [DW_FORM_strp]   ( .debug_str[0x0000007a] = &quot;fib&quot;)\n                DW_AT_decl_file [DW_FORM_udata] (&quot;./fib-wasm.c&quot;)\n                DW_AT_decl_line [DW_FORM_udata] (8)\n                DW_AT_prototyped [DW_FORM_flag] (0x01)\n                DW_AT_external [DW_FORM_flag]   (0x01)\n                DW_AT_type [DW_FORM_ref4]   (cu + 0x00df =&gt; {0x000000df} &quot;int&quot;)\n\n...\n\n0x0000008d:     DW_TAG_formal_parameter [11]\n                  DW_AT_location [DW_FORM_exprloc]  (DW_OP_plus_uconst 0x1c)\n                  DW_AT_name [DW_FORM_strp] ( .debug_str[0x00000086] = &quot;n&quot;)\n                  DW_AT_decl_file [DW_FORM_udata]   (&quot;./fib-wasm.c&quot;)\n                  DW_AT_decl_line [DW_FORM_udata]   (8)\n                  DW_AT_type [DW_FORM_ref4] (cu + 0x00df =&gt; {0x000000df} &quot;int&quot;)\n</pre></div>\n\n\n</blockquote>",
        "id": 194997367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587593402
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618071536\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618071536\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>Should I also suppress DebugAddrIndex with DW_AT_low_pc?</p>\n</blockquote>\n<p>I guess so.</p>\n</blockquote>",
        "id": 194998584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587594237
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618176627\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618176627\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik I am getting closer. Now I could use some guidance how to compile operand stack <code>Exprloc</code> s (<a href=\"https://yurydelendik.github.io/webassembly-dwarf/#location-descriptions-operand-stack\" title=\"https://yurydelendik.github.io/webassembly-dwarf/#location-descriptions-operand-stack\">https://yurydelendik.github.io/webassembly-dwarf/#location-descriptions-operand-stack</a>) to <code>CompiledExpression</code> (<code>compile_expression</code>), so that it matches <code>cranelift</code> 's calling convention.</p>\n</blockquote>",
        "id": 195018712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587617567
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618176627\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618176627\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik I am getting closer. Now I could use some guidance how to compile operand stack <code>Exprloc</code> s (<a href=\"https://yurydelendik.github.io/webassembly-dwarf/#location-descriptions-operand-stack\" title=\"https://yurydelendik.github.io/webassembly-dwarf/#location-descriptions-operand-stack\">https://yurydelendik.github.io/webassembly-dwarf/#location-descriptions-operand-stack</a>) to <code>CompiledExpression</code> (<code>compile_expression</code>), so that it matches <code>cranelift</code> 's calling convention. N.B.: I am assuming that formal parameters are passed this way, and are _not_ considered locals.</p>\n</blockquote>",
        "id": 195018779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587617702
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618361126\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618361126\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>I am assuming that formal parameters are passed this way, and are not considered locals.</p>\n</blockquote>\n<p>That's incorrect. WebAssembly function parameters are locals (per specification).</p>\n<blockquote>\n<p>I could use some guidance how to compile operand stack</p>\n</blockquote>\n<p>It is not possible atm. Currently no toolset generate expressions for operand stack, and cranelift does not provide data for it -- thus such expressions are silently ignored. It is possible to use only locals atm.</p>\n</blockquote>",
        "id": 195049996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587643216
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618428225\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618428225\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>I am marking this as ready for first review, then. I think the changes are mostly benign and incremental, so they pose no elevated risk.<br>\nI still have my doubts about the <code>DW_AT_addr_base = 8</code> thing, and will establish a mutable variable in the CU context.</p>\n<ul>\n<li>any guidance how to add sustainable and meaningful tests is welcome.</li>\n<li><code>.debug_line_str</code> will be filled in soon (today?)</li>\n</ul>\n</blockquote>",
        "id": 195068955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587652230
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618428225\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618428225\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>I am marking this as ready for first review, then. I think the changes are mostly benign and incremental, so they pose no elevated risk.<br>\nI still have my doubts about the <code>DW_AT_addr_base = 8</code> thing, and will establish a mutable variable in the CU context.</p>\n<ul>\n<li>any guidance how to add sustainable and meaningful tests is welcome.</li>\n<li><code>.debug_line_str</code> will be filled in soon (today?)</li>\n<li>revert <code>clang-10</code> stuff, remove <code>moc</code> stuff</li>\n</ul>\n</blockquote>",
        "id": 195080127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587656630
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618029289\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618029289\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>Hard to say, I just tried running your branch and it failed at clone_line_program -- the .debug_line format can differ between v4 and v5.</p>\n</blockquote>\n<p>I have a quick hack for that. The reason is that file number <code>0</code> is allowed in DWARF-5, but not in 4.</p>\n<p>Here is the diff</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff --git a/crates/debug/src/transform/line_program.rs b/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gh\">index 499a1300..862bf5d3 100644</span>\n<span class=\"gd\">--- a/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gi\">+++ b/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gu\">@@ -238,7 +238,8 @@ where</span>\n                         };\n                         out_program.row().address_offset = address_offset;\n                         out_program.row().op_index = *op_index;\n\n<span class=\"gd\">-                        out_program.row().file = files[(file_index - 1) as usize];</span>\n<span class=\"gi\">+                        out_program.row().file = files[(if *file_index as i64 &lt;= 0 {0} else {file_index - 1}) as usize];</span>\n<span class=\"gi\">+                        // out_program.row().file = if *file_index as i64 &lt;= 0 {write::line::id::zero()} else {files[(file_index - 1) as usize]};</span>\n                         out_program.row().line = *line;\n                         out_program.row().column = *column;\n                         out_program.row().discriminator = *discriminator;\n</pre></div>\n\n\n<p>Sorry!</p>\n<p>Regarding <code>DW_OP_plus_uconst</code>, yes this is a provocation to <code>lldb</code> which would emit warnings when <code>frame var</code> is processed. Alas they don't appear with my program. They do with the <code>fib-wasm.wasm</code> one.</p>\n<p>Which brings me to the question: Are the loc programs in <code>DW_AT_frame_base</code> and <code>DW_AT_location</code> supposed to be concatenated for each argument/local? I am a bit puzzled to see what <code>clang-11</code> seems to emit. (Those binaries live in the main repo, I temporarily reverted them to <code>clang-10</code> on my branch, because <code>nix</code> doesn't yet have <code>clang-11</code>.)</p>\n<p>It boils down to indexing. DWARF-4 is one-based for file and directory lists</p>\n<div class=\"codehilite\"><pre><span></span>file_names[  1]:\n           name: &quot;fib-wasm.c&quot;\n      dir_index: 0\n       mod_time: 0x00000000\n         length: 0x00000000\n</pre></div>\n\n\n<p>while DWARF-5 is zero-based:</p>\n<div class=\"codehilite\"><pre><span></span>include_directories[  0] =  .debug_line_str[0x00000000] = &quot;.&quot;\nfile_names[  0]:\n           name:  .debug_line_str[0x00000002] = &quot;fib-wasm.c&quot;\n      dir_index: 0\n   md5_checksum: 3444f0aa42db6d50ac2e4e57ac752c75\n</pre></div>\n\n\n</blockquote>",
        "id": 195205104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587742314
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619180183\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619180183\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik what about enabling these?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">index 1fba1c35c..bba6aef1e 100644</span>\n<span class=\"gd\">--- a/tests/all/debug/translate.rs</span>\n<span class=\"gi\">+++ b/tests/all/debug/translate.rs</span>\n<span class=\"gu\">@@ -25,7 +25,6 @@ fn check_wasm(wasm_path: &amp;str, directives: &amp;str) -&gt; Result&lt;()&gt; {</span>\n }\n\n #[test]\n<span class=\"gd\">-#[ignore]</span>\n #[cfg(all(\n     any(target_os = &quot;linux&quot;, target_os = &quot;macos&quot;),\n     target_pointer_width = &quot;64&quot;\n<span class=\"gu\">@@ -58,7 +57,6 @@ check:        DW_AT_decl_line (10)</span>\n }\n\n #[test]\n<span class=\"gd\">-#[ignore]</span>\n #[cfg(all(\n     any(target_os = &quot;linux&quot;, target_os = &quot;macos&quot;),\n     target_pointer_width = &quot;64&quot;\n</pre></div>\n\n\n</blockquote>",
        "id": 195228379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587753598
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>what about enabling these?</p>\n</blockquote>\n<p>It requires from a developer to have lldb and dwarfdump installed: wasmtime is an umbrella for multiple (sub)project, so we decided to run these tests only on CI.</p>\n</blockquote>",
        "id": 195229136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587754029
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619186642\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619186642\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Got it, let's have a look how the _ignore nothing_ flag is passed.</p>\n<p>On 4/24/20, Yury Delendik &lt;<a href=\"mailto:notifications@github.com\" title=\"mailto:notifications@github.com\">notifications@github.com</a>&gt; wrote:</p>\n<blockquote>\n<blockquote>\n<p>what about enabling these?</p>\n</blockquote>\n<p>It requires from a developer to have lldb and dwarfdump installed: wasmtime<br>\nis an umbrella for multiple (sub)project, so we decided to run these tests<br>\nonly on CI.</p>\n<p>--<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly or view it on GitHub:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127\">https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127</a></p>\n</blockquote>\n</blockquote>",
        "id": 195230176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587754525
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik can you do me a favour and refresh these on my branch with clang-11 (prerelease):<br>\n<code>tests/all/debug/testsuite/fib-wasm-dwarf5.wasm tests/all/debug/testsuite/fib-wasm.wasm</code></p>\n<p>The instructions are at the top of the file <code>tests/all/debug/testsuite/fib-wasm.c</code>.</p>\n</blockquote>",
        "id": 195234425,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587756683
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik can you do me a favour and refresh these on my branch with clang-11 (prerelease):<br>\n<code>tests/all/debug/testsuite/fib-wasm-dwarf5.wasm tests/all/debug/testsuite/fib-wasm.wasm</code></p>\n<p>The instructions are at the top of the file <code>tests/all/debug/testsuite/fib-wasm.c</code>.</p>\n<p>UPDATE: I added you to my repo collabs.</p>\n</blockquote>",
        "id": 195234757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587756836
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik can you do me a favour and refresh these on my branch with clang-11 (prerelease):<br>\n<code>tests/all/debug/testsuite/fib-wasm-dwarf5.wasm tests/all/debug/testsuite/fib-wasm.wasm</code></p>\n<p>The instructions are at the top of the file <code>tests/all/debug/testsuite/fib-wasm.c</code>.</p>\n<p>Reason: I don't have a bleeding edge <code>clang</code>.</p>\n<p>UPDATE: I added you to my repo collabs.</p>\n</blockquote>",
        "id": 195234871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587756888
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik can you do me a favour and refresh these on my branch with clang-11 (prerelease):<br>\n<code>tests/all/debug/testsuite/fib-wasm-dwarf5.wasm tests/all/debug/testsuite/fib-wasm.wasm</code></p>\n<p>The instructions are at the top of the file <code>tests/all/debug/testsuite/fib-wasm.c</code>.</p>\n<p>Reason: I don't have a bleeding edge <code>clang</code>, and using older <code>clang-10</code> doesn't support <code>DW_AT_frame_base</code> yet. This causes test failures.</p>\n<p>UPDATE: I added you to my repo collabs.</p>\n</blockquote>",
        "id": 195235064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587756983
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619201480\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik can you do me a favour and refresh these on my branch with <code>clang-11</code> (prerelease):<br>\n<code>tests/all/debug/testsuite/fib-wasm-dwarf5.wasm tests/all/debug/testsuite/fib-wasm.wasm</code></p>\n<p>The instructions are at the top of the file <code>tests/all/debug/testsuite/fib-wasm.c</code>.</p>\n<p>Reason: I don't have a bleeding edge <code>clang</code>, and using older <code>clang-10</code> doesn't support <code>DW_AT_frame_base</code> yet. This causes test failures.</p>\n<p>UPDATE: I added you to my repo collabs.</p>\n</blockquote>",
        "id": 195237798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587758507
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619186642\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619186642\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Got it, let's have a look how the _ignore nothing_ flag is passed.</p>\n<p>Like this: <code>cargo test translate -- --ignored</code></p>\n<p>On 4/24/20, Yury Delendik &lt;<a href=\"mailto:notifications@github.com\" title=\"mailto:notifications@github.com\">notifications@github.com</a>&gt; wrote:</p>\n<blockquote>\n<blockquote>\n<p>what about enabling these?</p>\n</blockquote>\n<p>It requires from a developer to have lldb and dwarfdump installed: wasmtime<br>\nis an umbrella for multiple (sub)project, so we decided to run these tests<br>\nonly on CI.</p>\n<p>--<br>\nYou are receiving this because you were mentioned.<br>\nReply to this email directly or view it on GitHub:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127\">https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-619183127</a></p>\n</blockquote>\n</blockquote>",
        "id": 195287908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587826166
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618029289\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-618029289\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>Hard to say, I just tried running your branch and it failed at clone_line_program -- the .debug_line format can differ between v4 and v5.</p>\n</blockquote>\n<p>I have a quick hack for that. The reason is that file number <code>0</code> is allowed in DWARF-5, but not in 4.</p>\n<p>Here is the diff</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"gh\">diff --git a/crates/debug/src/transform/line_program.rs b/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gh\">index 499a1300..862bf5d3 100644</span>\n<span class=\"gd\">--- a/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gi\">+++ b/crates/debug/src/transform/line_program.rs</span>\n<span class=\"gu\">@@ -238,7 +238,8 @@ where</span>\n                         };\n                         out_program.row().address_offset = address_offset;\n                         out_program.row().op_index = *op_index;\n\n<span class=\"gd\">-                        out_program.row().file = files[(file_index - 1) as usize];</span>\n<span class=\"gi\">+                        out_program.row().file = files[(if *file_index as i64 &lt;= 0 {0} else {file_index - 1}) as usize];</span>\n<span class=\"gi\">+                        // out_program.row().file = if *file_index as i64 &lt;= 0 {write::line::id::zero()} else {files[(file_index - 1) as usize]};</span>\n                         out_program.row().line = *line;\n                         out_program.row().column = *column;\n                         out_program.row().discriminator = *discriminator;\n</pre></div>\n\n\n<p>Sorry!</p>\n<p>Regarding <code>DW_OP_plus_uconst</code>, yes this is a provocation to <code>lldb</code> which would emit warnings when <code>frame var</code> is processed. Alas they don't appear with my program. They do with the <code>fib-wasm.wasm</code> one.</p>\n<p>Which brings me to the question: Are the loc programs in <code>DW_AT_frame_base</code> and <code>DW_AT_location</code> supposed to be concatenated for each argument/local? I am a bit puzzled to see what <code>clang-11</code> seems to emit. (Those binaries live in the main repo, I temporarily reverted them to <code>clang-10</code> on my branch, because <code>nix</code> doesn't yet have <code>clang-11</code>.)</p>\n<p>It boils down to indexing. DWARF-4 is one-based for file and directory lists</p>\n<div class=\"codehilite\"><pre><span></span>file_names[  1]:\n           name: &quot;fib-wasm.c&quot;\n      dir_index: 0\n       mod_time: 0x00000000\n         length: 0x00000000\n</pre></div>\n\n\n<p>while DWARF-5 is zero-based:</p>\n<div class=\"codehilite\"><pre><span></span>include_directories[  0] =  .debug_line_str[0x00000000] = &quot;.&quot;\nfile_names[  0]:\n           name:  .debug_line_str[0x00000002] = &quot;fib-wasm.c&quot;\n      dir_index: 0\n   md5_checksum: 3444f0aa42db6d50ac2e4e57ac752c75\n</pre></div>\n\n\n<p>EDIT: this is fixed in d117d74.</p>\n</blockquote>",
        "id": 195289186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587828071
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620025367\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620025367\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik I am grappling with <code>remove_incomplete_ranges</code> in <code>expression.rs</code>. Mostly because I cannot find a definition of <code>range</code> and <code>label</code>. This looks like a (boolean) matrix operation where labels must cover ranges, i.e. the whole row.</p>\n<p>But somehow labels correspond to local variables, and ranges are in terms of code offsets (IIUC). I end up with all ranges discarded, because</p>\n<p><code>self.processed_labels = {val1, val4294967294}</code> with <code>.len == 2</code><br>\nand <code>p</code>'s <code>label_location</code> only mentions one of the variables:</p>\n<div class=\"codehilite\"><pre><span></span>remove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 0, end: 62, label_location: {} }  ### 0 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 62, end: 96, label_location: {val1: Stack(ss1)} }  ### 1 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 96, end: 120, label_location: {} }  ### 0 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 120, end: 140, label_location: {val4294967294: Stack(ss0)} }  ### 1 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 140, end: 175, label_location: {} }  ### 0 vs. 2\n</pre></div>\n\n\n<p>I am obviously doing something wrong, but since I barely understand what is going on here, I am hard-pressed fixing it.</p>\n</blockquote>",
        "id": 195425685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587997979
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620033919\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620033919\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>I am grappling with remove_incomplete_ranges in <a href=\"http://expression.rs\" title=\"http://expression.rs\">expression.rs</a></p>\n</blockquote>\n<p>Please notice I fixed <em>lots</em> of issues for <a href=\"http://expression.rs\" title=\"http://expression.rs\">expression.rs</a> in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1572\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1572\">https://github.com/bytecodealliance/wasmtime/pull/1572</a> -- currently waiting on review.</p>\n<p>ValueLabelRangesBuilder is used during DWARF expression transformation, and if not all value labels (in your case 2 labels) present in particular item of <code>ranges</code>, DWARF expression will not be transformed successfully.</p>\n</blockquote>",
        "id": 195427945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587998856
    },
    {
        "content": "<p>ggreif edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620025367\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620025367\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>@yurydelendik I am grappling with <code>remove_incomplete_ranges</code> in <code>expression.rs</code>. Mostly because I cannot find a definition of <code>range</code> and <code>label</code>. This looks like a (boolean) matrix operation where labels must cover ranges, i.e. the whole row.</p>\n<p>But somehow labels correspond to local variables, and ranges are in terms of code offsets (IIUC). I end up with all ranges discarded, because</p>\n<p><code>self.processed_labels = {val1, val4294967294}</code> with <code>.len == 2</code><br>\nand <code>p</code>'s <code>label_location</code> only mentions one of the variables:</p>\n<div class=\"codehilite\"><pre><span></span>remove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 0, end: 62, label_location: {} }  ### 0 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 62, end: 96, label_location: {val1: Stack(ss1)} }  ### 1 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 96, end: 120, label_location: {} }  ### 0 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 120, end: 140, label_location: {val4294967294: Stack(ss0)} }  ### 1 vs. 2\nremove_incomplete_ranges iter CachedValueLabelRange { func_index: DefinedFuncIndex(6), start: 140, end: 175, label_location: {} }  ### 0 vs. 2\n</pre></div>\n\n\n<p>I am obviously doing something wrong, but since I barely understand what is going on here, I am hard-pressed fixing it.</p>\n<p>I am also happy to accept a _zoom_ lecture if that is more convenient for you.</p>\n</blockquote>",
        "id": 195427996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587998878
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620036093\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620036093\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I am grappling with remove_incomplete_ranges in <a href=\"http://expression.rs\" title=\"http://expression.rs\">expression.rs</a></p>\n</blockquote>\n<p>Please notice I fixed _lots_ of issues for <a href=\"http://expression.rs\" title=\"http://expression.rs\">expression.rs</a> in #1572 -- currently waiting on review.</p>\n<p>ValueLabelRangesBuilder is used during DWARF expression transformation, and if not all value labels (in your case 2 labels) present in particular item of <code>ranges</code>, DWARF expression will not be transformed successfully.</p>\n</blockquote>\n<p>So, next step for me to figure out why not both labels show up in <code>CachedValueLabelRange</code>, right?</p>\n</blockquote>",
        "id": 195428458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587999070
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620046830\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620046830\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<blockquote>\n<p>So, next step for me to figure out why not both labels show up in CachedValueLabelRange, right?</p>\n</blockquote>\n<p>Correct. Try to use <code>--opt-level 0</code> maybe it is just cranelift optimization or bug in value label range tracking there.</p>\n<p>(BTW, would you like to join <a href=\"\" title=\"\">https://bytecodealliance.zulipchat.com/</a> for chat?)</p>\n</blockquote>",
        "id": 195431036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588000179
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620053269\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620053269\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Let's freeze scope of this PR to the original description. I noticed you trying to work on DWARF expressions related stuff. I'll update .wasm tests and will try to finalize the review.</p>\n</blockquote>",
        "id": 195432699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588000835
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620064436\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620064436\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>I was trying to figure out if the <code>Exprloc</code> problems I am experiencing are DWARF-5 related. That's the background of my last Q. Never mind, I think this PR is ready. Please go ahead, and I'll iterate on the <code>Expr</code> stuff with follow-up PRs.</p>\n</blockquote>",
        "id": 195435206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588001940
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620081888\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620081888\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Updated wasm files. fwiw you don't have to provide access to entire repo, submitted as PR branch (option selected by default) gives push access for a reviewer. </p>\n</blockquote>",
        "id": 195438907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588003681
    },
    {
        "content": "<p>ggreif <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620211486\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620211486\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>This looks good. Will you squash?</p>\n</blockquote>",
        "id": 195469846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588018763
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620268688\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410#issuecomment-620268688\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1410\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1410\">Issue #1410</a>:</p>\n<blockquote>\n<p>Thank you for the patch</p>\n</blockquote>",
        "id": 195482849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588026457
    }
]