[
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-916243872\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>It'd be a good idea add a <code>target aarch64 has_lse</code> to <code>runtests/atomic-rmw.clif</code> and <code>runtests/atomic-rmw-2.clif</code>, if QEMU supports LSE.</p>\n</blockquote>",
        "id": 252653030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631204154
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-916300872\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>Currently we <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/.github/workflows/main.yml#L237\">force</a> QEMU to emulate a processor that lacks LSE support.</p>\n</blockquote>",
        "id": 252664779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631208959
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-916306797\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>I was curious if QEMU has any <code>-cpu</code> options between A72 (the current) and <code>max</code> (which we disabled to avoid pointer-auth issues on Linux, per #3183); the <a href=\"https://github.com/qemu/qemu/blob/bd662023e683850c085e98c8ff8297142c2dd9f2/target/arm/cpu64.c#L891-L897\">latest source</a> appears to have a configuration option for the <a href=\"https://en.wikipedia.org/wiki/Fujitsu_A64FX\">A64FX</a> as well, which is ARMv8.2 (with LSE, without PAC). Maybe we could update the CI config and try that?</p>\n</blockquote>",
        "id": 252665858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631209429
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-916307838\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>(This was added <a href=\"https://github.com/qemu/qemu/commit/e31c70ac04001df5e540b79843834277e283fa71\">9 days ago</a> so I expect we'd have to pull down a git checkout of qemu rather than build a release; but that's probably fine IMHO.)</p>\n</blockquote>",
        "id": 252666074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631209524
    },
    {
        "content": "<p>sparker-arm <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-916697895\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<blockquote>\n<p>I was curious if QEMU has any <code>-cpu</code> options between A72 (the current) and <code>max</code> (which we disabled to avoid pointer-auth issues on Linux, per #3183); the <a href=\"https://github.com/qemu/qemu/blob/bd662023e683850c085e98c8ff8297142c2dd9f2/target/arm/cpu64.c#L891-L897\">latest source</a> appears to have a configuration option for the <a href=\"https://en.wikipedia.org/wiki/Fujitsu_A64FX\">A64FX</a> as well, which is ARMv8.2 (with LSE, without PAC). Maybe we could update the CI config and try that?</p>\n</blockquote>\n<p>What might be a more scalable, though less pretty option, would be to use the max configuration and turn off the features that we don't want (only PAC?) @akirilov-arm is working on that feature currently so I imagine we'd need testing at some point in the near future. But I haven't ever had to disable features with QEMU, and briefly looking at the code, I'm wondering if all the features have a nice user facing option...</p>\n</blockquote>",
        "id": 252745050,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631259371
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-916745488\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>Reading <a href=\"https://qemu.readthedocs.io/en/latest/system/arm/cpu-features.html#tcg-vcpu-features\">this</a>, it looks like we can just <code>-cpu max,pauth=off</code>. My local qemu 6.0.0 build doesn't recognize this as a invalid feature, I'll try opening a PR to see if CI fails.</p>\n</blockquote>",
        "id": 252753789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631264132
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-916745488\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>Reading <a href=\"https://qemu.readthedocs.io/en/latest/system/arm/cpu-features.html#tcg-vcpu-features\">this</a>, it looks like we can just <code>-cpu max,pauth=off</code>. My local qemu 6.0.0 build recognizes this as a valid feature, I'll try opening a PR to see if CI fails.</p>\n</blockquote>",
        "id": 252753985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631264236
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-920158227\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>As a side note, this is somewhat unlikely to get used much in practice at least with Wasmtime itself <a href=\"https://github.com/bytecodealliance/wasmtime/blob/d20194fa4c45c68ff1fea315eabc262e854c3074/cranelift/native/src/lib.rs#L114-L126\">due to this block</a> which is gated on the off-by-default <code>stdsimd</code> feature (which requires nightly). If y'all are interseted in getting this supported in Wasmtime by default that'd need to be updated with a works-on-stable implementation. (I'm not sure of the status of stabilizing the required macro from libstd itself)</p>\n</blockquote>",
        "id": 253440846,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631722204
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-920172751\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>Yes, we are aware of that - my colleague @adamgemmell from Arm's Rust team has proposed stabilising the ISA extension test macro in issue <a href=\"https://github.com/rust-lang/rust/issues/86941\">rust-lang/rust#86941</a> independently of the <code>stdsimd</code> feature. We are going to update the block after the issue is closed, so that it just checks for the target architecture. In the meantime I think it is fine to continue with the code generation optimizations, and @afonso360's suggestion enables us to do some testing.</p>\n</blockquote>",
        "id": 253444440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631723307
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-920175052\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>Nice! And yeah of course I think this is fine to land (as well as any other improvements). Just because Wasmtime doesn't use something by default doesn't mean it's not useful!</p>\n</blockquote>",
        "id": 253445021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631723504
    },
    {
        "content": "<p>sparker-arm <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322#issuecomment-924790206\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3322\">issue #3322</a>:</p>\n<blockquote>\n<p>@cfallin, would you be able to look at this now the QEMU changes have landed?</p>\n</blockquote>",
        "id": 254344665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1632305780
    }
]