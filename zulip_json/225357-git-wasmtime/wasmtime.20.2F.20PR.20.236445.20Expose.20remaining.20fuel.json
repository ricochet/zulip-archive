[
    {
        "content": "<p>LukasForst opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445\">PR #6445</a> from <code>LukasForst:main</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n<p>I don't think this was discussed anywhere yet, but it would be nice to have a method that returns remaining fuel. Right now, it is possible only by consuming 0 fuel like <code>let remaining = consume_fuel(0)?</code>, which is not really intuitive. That's why I implemented <code>remaining_fuel</code>.</p>\n<p>The only problem I see here is that it's not super clear/intuitive why when you <code>add_fuel(u64::max)</code> then without executing anything <code>remaining_fuel() == i64::max</code> and not <code>remaining_fuel() == u64::max</code>. <br>\n</p>\n</blockquote>",
        "id": 360807595,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684938622
    },
    {
        "content": "<p><strong>LukasForst</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445\">PR #6445</a>.</p>",
        "id": 360807606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684938623
    },
    {
        "content": "<p><strong>LukasForst</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445\">PR #6445</a>.</p>",
        "id": 360807607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684938623
    },
    {
        "content": "<p>LukasForst updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445\">PR #6445</a>.</p>",
        "id": 360808295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684938769
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445#pullrequestreview-1442551235\">PR review</a>:</p>\n<blockquote>\n<p>Makes sense to me, and generally looks good, but every time I've looked into the details of fuel accounting I've been a bit confused about why things are the ways they are, so I'm not super confident in my review of this, so I'm going to also flag Alex.</p>\n</blockquote>",
        "id": 360872417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684954139
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445#pullrequestreview-1442555066\">PR review</a>:</p>\n<blockquote>\n<p>Oh one other thing: can there be some smoke tests for</p>\n<ul>\n<li>Adding fuel to a new store, and then getting the fuel remaining and assert it is equal to the amount added</li>\n<li>Getting fuel from a new store without fuel returns zero fuel</li>\n<li>Adding fuel to the store, running a small amount of wasm, getting the remaining fuel and asserting it is nonzero</li>\n<li>Adding a small amount of fuel to the store, running a wasm inf loop till it traps, asserting that remaining fuel is zero</li>\n</ul>\n<p>Thanks!</p>\n</blockquote>",
        "id": 360872790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684954288
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445\">PR #6445</a>.</p>",
        "id": 360872823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684954301
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445#pullrequestreview-1442641819\">PR review</a>:</p>\n<blockquote>\n<p>Seems reasonable to me, thanks! I agree with Nick that tests would be good, too.</p>\n<p>Otherwise though I also agree that the fuel-related methods on Store are a bit haphazard in their design but I don't know of a better way to organize this myself, so adding this seems fine.</p>\n<p>One thing I might suggest though is to implement this in terms of other methods to avoid having multiple locations interpret the raw state.</p>\n</blockquote>",
        "id": 360884056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1684957852
    },
    {
        "content": "<p>LukasForst updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445\">PR #6445</a>.</p>",
        "id": 360973154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685001269
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445#pullrequestreview-1444129310\">PR review</a>.</p>",
        "id": 361090409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685027665
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6445\">PR #6445</a>.</p>",
        "id": 361102919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685030426
    }
]