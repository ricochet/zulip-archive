[
    {
        "content": "<p>BenSunWhiteBoard opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>Hi, I download the release binary, seems it doesn't enable memory64 by default, my running result:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>./wasmtime<span class=\"w\"> </span>test.wasm\nError:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">        </span>Invalid<span class=\"w\"> </span>input<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>code<span class=\"w\"> </span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span><span class=\"m\">440</span>:<span class=\"w\"> </span>memory64<span class=\"w\"> </span>must<span class=\"w\"> </span>be<span class=\"w\"> </span>enabled<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"m\">64</span>-bit<span class=\"w\"> </span>memories\n</code></pre></div>\n<p>I really appreciate it if someone could help me with how to build a wasmtime that could run memory64 wasm file. And if I enable memory64, can I still run memory32 wasm file? <br>\n</p>\n</blockquote>",
        "id": 416724273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705650379
    },
    {
        "content": "<p>BenSunWhiteBoard edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>Hi, I download the release binary, seems it doesn't enable memory64 by default, my running result:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>./wasmtime<span class=\"w\"> </span>test.wasm\nError:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">        </span>Invalid<span class=\"w\"> </span>input<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>code<span class=\"w\"> </span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span><span class=\"m\">440</span>:<span class=\"w\"> </span>memory64<span class=\"w\"> </span>must<span class=\"w\"> </span>be<span class=\"w\"> </span>enabled<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"m\">64</span>-bit<span class=\"w\"> </span>memories\n</code></pre></div>\n<p>I really appreciate it if someone could help me with how to build a wasmtime that could run memory64 wasm file. And if I enable memory64, can I still run memory32 wasm file? <br>\n</p>\n</blockquote>",
        "id": 416724283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705650388
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795#issuecomment-1900222315\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>Try <code>wasmtime -W memory64=y test.wasm</code>.</p>\n</blockquote>",
        "id": 416757653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705663165
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795#issuecomment-1900646607\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>Yes memory64 support is not a compile-time feature but a runtime feature, so @bjorn3's suggestion should work, but I'll hold off on closing this until @BenSunWhiteBoard you confirm it works for you</p>\n</blockquote>",
        "id": 416803797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705678745
    },
    {
        "content": "<p>BenSunWhiteBoard <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795#issuecomment-1905452970\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>Thanks! I tried it with some handwritten wasm samples, and it did work.<br>\nOne more question though: If wasi-libc support wasm64 after <a href=\"https://github.com/WebAssembly/wasi-libc/pull/444\">https://github.com/WebAssembly/wasi-libc/pull/444</a> got merged, there will be new import WASI APIs like <code>fd_close_wasm64</code>. If I understand correctly, it wouldn't be too much work to add a new interface for it from the implementation of <code>fd_close</code> right? I think it's safe to say that at least a large potion of code can be reused. Does wasmtime plan to support those interface in the near future if wasm64 got supported in wasi-libc and wasi-sdk?</p>\n</blockquote>",
        "id": 417386532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705995396
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795#issuecomment-1906639400\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>memory64 support for wasm is not specified at this time and it's not clear to me that there's an \"obvious\" design of how to implement it. That PR is one option but isn't necessarily the only one. In that sense it's hard to say what a memory64 wasi would take effort-wise because to me it's not clear to me what the work will be</p>\n</blockquote>",
        "id": 417501665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706033452
    },
    {
        "content": "<p>BenSunWhiteBoard closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>Hi, I download the release binary, seems it doesn't enable memory64 by default, my running result:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>./wasmtime<span class=\"w\"> </span>test.wasm\nError:<span class=\"w\"> </span>failed<span class=\"w\"> </span>to<span class=\"w\"> </span>parse<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>module\n\nCaused<span class=\"w\"> </span>by:\n<span class=\"w\">        </span>Invalid<span class=\"w\"> </span>input<span class=\"w\"> </span>WebAssembly<span class=\"w\"> </span>code<span class=\"w\"> </span>at<span class=\"w\"> </span>offset<span class=\"w\"> </span><span class=\"m\">440</span>:<span class=\"w\"> </span>memory64<span class=\"w\"> </span>must<span class=\"w\"> </span>be<span class=\"w\"> </span>enabled<span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"m\">64</span>-bit<span class=\"w\"> </span>memories\n</code></pre></div>\n<p>I really appreciate it if someone could help me with how to build a wasmtime that could run memory64 wasm file. And if I enable memory64, can I still run memory32 wasm file? <br>\n</p>\n</blockquote>",
        "id": 417992451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706146119
    },
    {
        "content": "<p>BenSunWhiteBoard <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795#issuecomment-1909196107\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7795\">issue #7795</a>:</p>\n<blockquote>\n<p>Thanks for your kind reply! I have no further questions </p>\n</blockquote>",
        "id": 417992452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706146119
    }
]