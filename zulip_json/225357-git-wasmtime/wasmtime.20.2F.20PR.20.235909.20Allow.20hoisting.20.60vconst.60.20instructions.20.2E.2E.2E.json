[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5909\">PR #5909</a> from <code>licm-vconst</code> to <code>main</code>:</p>\n<blockquote>\n<p>Staring at some SIMD code and what LLVM and v8 both generate it appears that a common technique for SIMD-loops is to hoist constants outside of loops since they're nontrivial to rematerialize unlike integer constants. This commit updates the <code>loop_hoist_level</code> calculation with egraphs to have a nonzero default for instructions that have no arguments (e.g. consts) which enables hoisting these instructions out of loops.</p>\n<p>Note, though, that for now I've listed the maximum as hoisting outside of one loop, but not all of them. While theoretically vconsts could move up to the top of the function I'd be worried about their impact on register pressure and having to save/restore around calls or similar, so hopefully if the hot part of a program is a single loop then hoisting out of one loop is a reasonable-enough heuristic for now.</p>\n<p>Locally on x64 with a benchmark that just encodes binary to hex this saw a 15% performance improvement taking hex encoding from ~6G/s to ~6.7G/s.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 339008167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677735776
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5909#pullrequestreview-1322469166\">PR review</a>.</p>",
        "id": 339186274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677784603
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5909\">PR #5909</a> from <code>licm-vconst</code> to <code>main</code>.</p>",
        "id": 339234420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677805016
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5909\">PR #5909</a>.</p>",
        "id": 339893409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678115316
    },
    {
        "content": "<p>alexcrichton reopened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5909\">PR #5909</a> from <code>licm-vconst</code> to <code>main</code>.</p>",
        "id": 339893421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678115320
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5909\">PR #5909</a>.</p>",
        "id": 339893444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678115324
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5909\">PR #5909</a>.</p>",
        "id": 339907568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678118619
    }
]