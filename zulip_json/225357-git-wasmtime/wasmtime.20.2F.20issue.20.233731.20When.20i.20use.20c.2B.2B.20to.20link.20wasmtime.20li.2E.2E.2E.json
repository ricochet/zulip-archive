[
    {
        "content": "<p>vaptu opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>I tried changing the type of build c-api library to make it a static library.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>sed -i <span class=\"s1\">'14c crate-type=[\"staticlib\"]'</span> crates/c-api/Cargo.toml\n</code></pre></div>\n<p>(.text+0x3c): relocation truncated to fit: R_AARCH64_LD64_GOTPAGE_LO15 against symbol `__environ' defined in .bss section in /usr/lib/gcc/aarch64-linux-gnu/10/../../../aarch64-linux-gnu/libc.a(environ.o)</p>\n</blockquote>",
        "id": 269609412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643305373
    },
    {
        "content": "<p>vaptu edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>I tried changing the type of build c-api library to make it a static library.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>sed -i <span class=\"s1\">'14c crate-type=[\"staticlib\"]'</span> crates/c-api/Cargo.toml\n\n<span class=\"nb\">export</span> <span class=\"nv\">CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER</span><span class=\"o\">=</span>aarch64-linux-gnu-gcc\n<span class=\"nb\">export</span> <span class=\"nv\">CC_aarch64_unknown_linux_gnu</span><span class=\"o\">=</span>aarch64-linux-gnu-gcc\n\ncargo build --target aarch64-unknown-linux-gnu --release --manifest-path crates/c-api/Cargo.toml\n</code></pre></div>\n<p>ld</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(.</span><span class=\"n\">text</span><span class=\"o\">+</span><span class=\"mh\">0x3c</span><span class=\"p\">)</span>: <span class=\"nc\">relocation</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">fit</span>: <span class=\"nc\">R_AARCH64_LD64_GOTPAGE_LO15</span><span class=\"w\"> </span><span class=\"n\">against</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">__environ</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">bss</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">gcc</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"o\">/../../../</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">libc</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>When I used it, I was prompted for such an error. After my investigation, I found that it was caused by linking the wasmtime library. What is the reason for this and how can I fix it</p>\n</blockquote>",
        "id": 269609770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643305518
    },
    {
        "content": "<p>vaptu edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>I tried changing the type of build c-api library to make it a static library.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>sed -i <span class=\"s1\">'14c crate-type=[\"staticlib\"]'</span> crates/c-api/Cargo.toml\n\n<span class=\"nb\">export</span> <span class=\"nv\">CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER</span><span class=\"o\">=</span>aarch64-linux-gnu-gcc\n<span class=\"nb\">export</span> <span class=\"nv\">CC_aarch64_unknown_linux_gnu</span><span class=\"o\">=</span>aarch64-linux-gnu-gcc\n\ncargo build --target aarch64-unknown-linux-gnu --release --manifest-path crates/c-api/Cargo.toml\n</code></pre></div>\n<p>When I use <code>gcc -static</code> static link all libraryï¼Œld return the error</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(.</span><span class=\"n\">text</span><span class=\"o\">+</span><span class=\"mh\">0x3c</span><span class=\"p\">)</span>: <span class=\"nc\">relocation</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">fit</span>: <span class=\"nc\">R_AARCH64_LD64_GOTPAGE_LO15</span><span class=\"w\"> </span><span class=\"n\">against</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">__environ</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">bss</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">gcc</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"o\">/../../../</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">libc</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>When I used it, I was prompted for such an error. After my investigation, I found that it was caused by linking the wasmtime library. What is the reason for this and how can I fix it</p>\n</blockquote>",
        "id": 269610090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643305646
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731#issuecomment-1023533996\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>This looks like a generic linker error which is related to a platform-specific limitation. This is probably related to your use of <code>-static</code> on the linker command line, and this may go away if such an option is removed. I don't personally have any experience building static glibc-based binaries but it may be the case that wasmtime is blowing some sort of size limit to prevent linking.</p>\n<p>Otherwise though this issue generally doesn't look related to Wasmtime itself but rather just trying to link static Rust executables in general with glibc.</p>\n</blockquote>",
        "id": 269618909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643309129
    },
    {
        "content": "<p>vaptu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731#issuecomment-1024297465\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>I see that the c-api in the release version is a dynamic link library. Can you provide a static library for the target platform? Or how to compile a library that can be statically linked. xthanks</p>\n</blockquote>",
        "id": 269747455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643381586
    },
    {
        "content": "<p>vaptu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731#issuecomment-1024303908\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>This problem does not exist on x86_64 machines</p>\n</blockquote>",
        "id": 269748665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643382041
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731#issuecomment-1024589271\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>My own personal experience of building static binaries with Rust for Linux systems only involves using musl, which is a target that we do not provide precompiled binaries for (and a few things don't work like trap backtraces I think). We do provide <code>libwasmtime.a</code> for the glibc target but I don't know whether it works to build into a static library. My guess would be no but I do not have any experience building static glibc binaries. If you're able to get it working though we could evaluate whether it makes sense to build artifacts for that as well.</p>\n</blockquote>",
        "id": 269793183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643399809
    },
    {
        "content": "<p>vaptu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731#issuecomment-1024820441\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>Thank you so much</p>\n</blockquote>",
        "id": 269833810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643426272
    },
    {
        "content": "<p>vaptu closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>I tried changing the type of build c-api library to make it a static library.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>sed -i <span class=\"s1\">'14c crate-type=[\"staticlib\"]'</span> crates/c-api/Cargo.toml\n\n<span class=\"nb\">export</span> <span class=\"nv\">CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER</span><span class=\"o\">=</span>aarch64-linux-gnu-gcc\n<span class=\"nb\">export</span> <span class=\"nv\">CC_aarch64_unknown_linux_gnu</span><span class=\"o\">=</span>aarch64-linux-gnu-gcc\n\ncargo build --target aarch64-unknown-linux-gnu --release --manifest-path crates/c-api/Cargo.toml\n</code></pre></div>\n<p>When I use <code>gcc -static</code> static link all libraryï¼Œld return the error</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(.</span><span class=\"n\">text</span><span class=\"o\">+</span><span class=\"mh\">0x3c</span><span class=\"p\">)</span>: <span class=\"nc\">relocation</span><span class=\"w\"> </span><span class=\"n\">truncated</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">fit</span>: <span class=\"nc\">R_AARCH64_LD64_GOTPAGE_LO15</span><span class=\"w\"> </span><span class=\"n\">against</span><span class=\"w\"> </span><span class=\"n\">symbol</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">__environ</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">defined</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"n\">bss</span><span class=\"w\"> </span><span class=\"n\">section</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">gcc</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"mi\">10</span><span class=\"o\">/../../../</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">libc</span><span class=\"p\">.</span><span class=\"n\">a</span><span class=\"p\">(</span><span class=\"n\">environ</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"p\">)</span><span class=\"w\"></span>\n</code></pre></div>\n<p>When I used it, I was prompted for such an error. After my investigation, I found that it was caused by linking the wasmtime library. What is the reason for this and how can I fix it</p>\n</blockquote>",
        "id": 269833811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643426272
    },
    {
        "content": "<p>vaptu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731#issuecomment-1026494191\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3731\">issue #3731</a>:</p>\n<blockquote>\n<p>I solved this problem by switching from Debian distribution to fedora. Static linking no longer prompts this problem, but I don't know why. I guess it is caused by the fact that Glibc does not use the <code>-mcmodel=large</code> compile option on some distributions</p>\n</blockquote>",
        "id": 270155915,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643693663
    }
]