[
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Hey,</p>\n<p>It looks like SIMD <code>icmp</code> is failing to compile on aarch64. We have a similar situation on #3334 for x64, but for different reasons. The test below is only for <code>icmp eq</code>, but this fails for any condition code.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">(</span><span class=\"n\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i8x16</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b8x16</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i8x16</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">(</span><span class=\"n\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i16x8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b16x8</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i16x8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">(</span><span class=\"n\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i32x4</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i32x4</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b64x2</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>The test to pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">Afonso</span><span class=\"o\">/</span><span class=\"n\">CLionProjects</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtes</span><span class=\"w\"></span>\n<span class=\"n\">ts</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">inst</span><span class=\"o\">/</span><span class=\"n\">emit</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">100</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtests</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main<br>\nOperating system: Linux<br>\nArchitecture: aarch64 QEMU</p>\n<h3>Extra Info</h3>\n<p>A <code>icmp</code> SIMD test suite was added in #3332<br>\n</p>\n</blockquote>",
        "id": 252921974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631379492
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Hey,</p>\n<p>It looks like SIMD <code>icmp</code> is failing to compile on aarch64. We have a similar situation on #3334 for x64, but for different reasons. The test below is only for <code>icmp eq</code>, but this fails for any condition code.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">(</span><span class=\"n\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i8x16</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b8x16</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i8x16</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">(</span><span class=\"n\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i16x8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b16x8</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i16x8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">(</span><span class=\"n\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i32x4</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i32x4</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b64x2</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>The test to pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">Afonso</span><span class=\"o\">/</span><span class=\"n\">CLionProjects</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtes</span><span class=\"w\"></span>\n<span class=\"n\">ts</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">inst</span><span class=\"o\">/</span><span class=\"n\">emit</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">100</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtests</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main<br>\nOperating system: Linux<br>\nArchitecture: aarch64 QEMU</p>\n<h3>Extra Info</h3>\n<p>A <code>icmp</code> SIMD test suite was added in #3332<br>\n</p>\n</blockquote>",
        "id": 252921975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631379492
    },
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Hey,</p>\n<p>It looks like SIMD <code>icmp</code> is failing to compile on aarch64. We have a similar situation on #3334 for x64, but for different reasons. The test below is only for <code>icmp eq</code>, but this fails for any condition code.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">(</span><span class=\"n\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i8x16</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b8x16</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i8x16</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">(</span><span class=\"n\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i16x8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b16x8</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i16x8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">(</span><span class=\"n\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i32x4</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i32x4</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b64x2</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>The test to pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">Afonso</span><span class=\"o\">/</span><span class=\"n\">CLionProjects</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtes</span><span class=\"w\"></span>\n<span class=\"n\">ts</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">inst</span><span class=\"o\">/</span><span class=\"n\">emit</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">100</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtests</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main<br>\nOperating system: Linux<br>\nArchitecture: aarch64 QEMU</p>\n<h3>Extra Info</h3>\n<p>A <code>icmp</code> SIMD test suite was added in #3332<br>\n</p>\n</blockquote>",
        "id": 252921976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631379492
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Hey,</p>\n<p>It looks like SIMD <code>icmp</code> is failing to compile on aarch64. We have a similar situation on #3334 for x64, but for different reasons. The test below is only for <code>icmp eq</code>, but this fails for any condition code.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">(</span><span class=\"n\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i8x16</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b8x16</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i8x16</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">(</span><span class=\"n\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i16x8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b16x8</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i16x8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">(</span><span class=\"n\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i32x4</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i32x4</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b64x2</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>The test to pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">Afonso</span><span class=\"o\">/</span><span class=\"n\">CLionProjects</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtes</span><span class=\"w\"></span>\n<span class=\"n\">ts</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">inst</span><span class=\"o\">/</span><span class=\"n\">emit</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">100</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtests</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main<br>\nOperating system: Linux<br>\nArchitecture: aarch64 QEMU</p>\n<h3>Extra Info</h3>\n<p>A <code>icmp</code> SIMD test suite was added in #3332<br>\n</p>\n</blockquote>",
        "id": 253064211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631527232
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335#issuecomment-918143401\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>This issue looks weird because <code>clif-util compile --target arm64</code> with the same test case succeeds and the generated code looks fine. Is the problem in some layer above the backend that assumes that the <code>Icmp</code> result is a scalar integer?</p>\n</blockquote>",
        "id": 253080858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631536208
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335#issuecomment-918146735\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Could this issue be during compilation the generated run wrapper instead of the test function itself?</p>\n</blockquote>",
        "id": 253081422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631536484
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335#issuecomment-918163632\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Yes, it looks like this is an issue with the generated trampoline. It looks like in the run test machinery we compile the source function ok, but then fail when compiling the trampoline.</p>\n<p>We're generating the following trampoline (this is for x86_64, but i suspect the issue is the same for aarch64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">windows_fastcall</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b64x2</span><span class=\"w\"> </span><span class=\"n\">windows_fastcall</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"o\">+</span><span class=\"mi\">16</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bint</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm going to dig a bit further into this.</p>\n</blockquote>",
        "id": 253084586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631537904
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335#issuecomment-918163632\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Yes, it looks like this is an issue with the generated trampoline. It looks like in the run test machinery we compile the source function ok, but then fail when compiling the trampoline.</p>\n<p>We're generating the following trampoline, which fails to compile (this is for x86_64, but i suspect the issue is the same for aarch64):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">windows_fastcall</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b64x2</span><span class=\"w\"> </span><span class=\"n\">windows_fastcall</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"o\">+</span><span class=\"mi\">16</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call_indirect</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">(</span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bint</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">v5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I'm going to dig a bit further into this.</p>\n</blockquote>",
        "id": 253084613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631537916
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335#issuecomment-918168180\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>The <code>Bint</code> operation doesn't make sense because <code>Bint</code> can't convert from vector to scalar - the backends are right to complain.</p>\n</blockquote>",
        "id": 253085383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631538220
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335#issuecomment-918187251\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<blockquote>\n<p>The Bint operation doesn't make sense because Bint can't convert from vector to scalar - the backends are right to complain.</p>\n</blockquote>\n<p>That's true, however this should probably be a verifier error. <code>bint</code> vector to scalar shouldn't be an accepted instruction.</p>\n<p>Setting the correct type for <code>bint</code> doesen't fix the issue, since it isn't implemented for aarch64 (for simd values), but we can work around this by <code>raw_bitcast</code>'ing it into the appropriate integer type.</p>\n<p>I'll open a PR with this. Thanks for looking into this, I didn't realize it wasn't a backend issue.</p>\n</blockquote>",
        "id": 253088328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631539455
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335#issuecomment-918199524\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<blockquote>\n<p>... we can work around this by <code>raw_bitcast</code>'ing it into the appropriate integer type.</p>\n</blockquote>\n<p>No, that's wrong (but it's probably going to work) - I don't think we agreed in #3205 to change the representation of vector booleans. This would be an appropriate work-around for <code>Bmask</code> (but then we have #1429).</p>\n</blockquote>",
        "id": 253090264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631540241
    },
    {
        "content": "<p>elliottt closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3335\">issue #3335</a>:</p>\n<blockquote>\n<p>Hey,</p>\n<p>It looks like SIMD <code>icmp</code> is failing to compile on aarch64. We have a similar situation on #3334 for x64, but for different reasons. The test below is only for <code>icmp eq</code>, but this fails for any condition code.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">(</span><span class=\"n\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i8x16</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b8x16</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i8x16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i8x16</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i8</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">(</span><span class=\"n\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i16x8</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b16x8</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i16x8</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i16x8</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i16</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">(</span><span class=\"n\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i32x4</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b32x4</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i32x4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i32x4</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i32</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">(</span><span class=\"n\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i64x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b64x2</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">i64x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"nc\">i64x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">eq</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">false</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">simd_icmp_eq_i64</span><span class=\"p\">([</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">],</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"kc\">true</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p><code>clif-util test ./the-above.clif</code></p>\n<h3>Expected Results</h3>\n<p>The test to pass</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">mnt</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">Afonso</span><span class=\"o\">/</span><span class=\"n\">CLionProjects</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">clif</span><span class=\"o\">-</span><span class=\"n\">util</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtes</span><span class=\"w\"></span>\n<span class=\"n\">ts</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">inst</span><span class=\"o\">/</span><span class=\"n\">emit</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">100</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">filetests</span><span class=\"o\">/</span><span class=\"n\">runtests</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">-</span><span class=\"n\">icmp</span><span class=\"o\">-</span><span class=\"n\">eq</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"n\">V128</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"n\">I64</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main<br>\nOperating system: Linux<br>\nArchitecture: aarch64 QEMU</p>\n<h3>Extra Info</h3>\n<p>A <code>icmp</code> SIMD test suite was added in #3332<br>\n</p>\n</blockquote>",
        "id": 319632477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672939146
    }
]