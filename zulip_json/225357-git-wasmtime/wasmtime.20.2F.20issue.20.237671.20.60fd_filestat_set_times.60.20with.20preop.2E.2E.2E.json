[
    {
        "content": "<p>yagehu edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>Not sure this is a bug, but I can't find any previous discussion about this particular case.</p>\n<p>Calling <code>fd_filestat_set_times</code> with a preopened directory fd returns <code>badf</code>.  I'm aware there is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/4f2d634ca4291a09003eaba26f989cd544c1a289/crates/test-programs/src/bin/preview1_dir_fd_op_failures.rs\">a conformance test</a> that assert certain <code>fd_*</code> calls should fail with dir fds, but it's not immediately clear to me why this should be the case for <code>fd_filestat_set_times</code> and preopened directories.</p>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;dirent.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">futimens</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"futimens\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the snippet with wasi-sdk and run with Wasmtime, preopen a directory.</p>\n<h3>Expected Results</h3>\n<p>It should be possible to set times on a directory.</p>\n<h3>Actual Results</h3>\n<p><code>fd_filestat_set_times</code> return <code>badf</code>.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>4f2d634ca4291a09003eaba26f989cd544c1a289</code></p>\n<p>Operating system: Darwin, Fedora 39</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 407268962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702309964
    },
    {
        "content": "<p>pchickey assigned sunfishcode to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>.</p>",
        "id": 407282988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702314223
    },
    {
        "content": "<p>yagehu <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671#issuecomment-1850911572\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>I can submit a PR for cap-std if folks are OK with this behavior.</p>\n</blockquote>",
        "id": 407322272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702329860
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671#issuecomment-1912817140\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>Apologies for the delay in getting back to you here. Can you clarify how to reproduce this issue? I checked out the version you listed, compiled the above program with wasi-sdk-21.0, and ran <code>cargo run run --dir . a.out</code> locally. I was unable to reproduce a failure locally at least.</p>\n</blockquote>",
        "id": 418364518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706311002
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671#issuecomment-1912893069\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>I was able to reproduce the error you're seeing on ubuntu-20.04.</p>\n<p>Given that you're attempting to use utime on a dir, should you use <code>utimensat</code> instead of <code>futimens</code>? The purpose of the <code>OFlags::PATH</code> flag in <code>fd_filestat_set_times</code> is to avoid actually opening the file, which I think is the correct behavior here. Here's my modified version of your test program that exits normally for me:</p>\n<p><div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;dirent.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span>\n\n<span class=\"w\">        </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n\n<span class=\"w\">        </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">utimensat</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\".\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">                </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"utimensat\"</span><span class=\"p\">);</span>\n<span class=\"w\">                </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 418374247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1706318139
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671#issuecomment-1935219366\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>Thinking about this more, my response above only tells you how to avoid the problem, given that preopens are opened with <code>O_PATH</code>. Sorry about that!</p>\n<p>I'm going to discuss this more with @sunfishcode, and see if we can come up with a recommendation for how best to proceed.</p>\n</blockquote>",
        "id": 420574489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707443511
    },
    {
        "content": "<p>yagehu closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7671\">issue #7671</a>:</p>\n<blockquote>\n<p>Not sure this is a bug, but I can't find any previous discussion about this particular case.</p>\n<p>Calling <code>fd_filestat_set_times</code> with a preopened directory fd returns <code>badf</code>.  I'm aware there is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/4f2d634ca4291a09003eaba26f989cd544c1a289/crates/test-programs/src/bin/preview1_dir_fd_op_failures.rs\">a conformance test</a> that assert certain <code>fd_*</code> calls should fail with dir fds, but it's not immediately clear to me why this should be the case for <code>fd_filestat_set_times</code> and preopened directories.</p>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;dirent.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;fcntl.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;sys/stat.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;string.h&gt;</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">timespec</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">];</span>\n\n<span class=\"w\">    </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"n\">times</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">].</span><span class=\"n\">tv_nsec</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">UTIME_NOW</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">futimens</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">times</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">perror</span><span class=\"p\">(</span><span class=\"s\">\"futimens\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Compile the snippet with wasi-sdk and run with Wasmtime, preopen a directory.</p>\n<h3>Expected Results</h3>\n<p>It should be possible to set times on a directory.</p>\n<h3>Actual Results</h3>\n<p><code>fd_filestat_set_times</code> return <code>badf</code>.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: <code>4f2d634ca4291a09003eaba26f989cd544c1a289</code></p>\n<p>Operating system: Darwin, Fedora 39</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 434869328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1713829208
    }
]