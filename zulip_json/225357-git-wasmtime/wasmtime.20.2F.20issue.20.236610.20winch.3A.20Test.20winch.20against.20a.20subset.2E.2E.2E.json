[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610#issuecomment-1599656865\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610\">issue #6610</a>:</p>\n<blockquote>\n<p>I realize after writing that all out that you've probably already also considered such an idea, so I could also rephrase much of it as \"I'm not sure why a copy of <code>block.wast</code> was added\", but if that's well-motivated them seems fine!</p>\n</blockquote>",
        "id": 368065778,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687300131
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610#issuecomment-1600695768\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610\">issue #6610</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm not sure why a copy of block.wast was added\", but if that's well-motivated them seems fine!</p>\n</blockquote>\n<p>Yeah, the copy of the spec tests is one of the unfortunate bits of this approach. Unfortunately attempting to run all the tests and adding <code>#[ignore]</code> when a non-supported feature is detected will result in most (if not all) of the official spec tests getting ignored, since as far as I can tell, there's no way to ignore spec tests at a more granular level. Even though Winch is shaping up, it doesn't offer support for finished proposals that are already part of the official spec suite, like multi-value for example, which many of the tests in the official spec test suite use. But it's totally possible that I might have missed a better way of avoiding the duplication, and if that's the case, I'm all in to explore alternatives! </p>\n</blockquote>",
        "id": 368209585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687348377
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610#issuecomment-1601545341\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610\">issue #6610</a>:</p>\n<blockquote>\n<p>One idea perhaps would be to add a test for <code>strategy</code> in the <code>ignore</code> function against <code>\"Winch\"</code> and blanket return <code>true</code> (ignore everything) and then add a small allow-list for tests there? Or alternative blanket-ignore entire directories/subtrees but blanket-include others, for example <code>tests/misc_testsuite/winch/*.wast</code> could be tested in winch for now?</p>\n<p>Otherwise though this is a transient state of affairs while support is shored up in winch so while I personally try to minimize the churn during the transient state I don't think it's bad to have churn and/or copies of files, so again I think whatever's easiest for your development should work best. In the long run everything should be run through both Winch/Cranelift and the \"weird cases\" will be much more defined.</p>\n</blockquote>",
        "id": 368340922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687375321
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610#issuecomment-1615077893\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6610\">issue #6610</a>:</p>\n<blockquote>\n<p>I finally got a chance to get back to this! I decided to try the approach of ignoring everything except for the <code>winch</code> misc test suite, I believe this will require the least amount of changes once we decide to enable everything by default in the future.</p>\n<p>This should be ready for a review @alexcrichton; one thing to note is that I didn't add the <code>if</code> test suite yet, because I found one bug that I'm currently trying to figure out, once I do, I'll push the fix along with the test suite. </p>\n</blockquote>",
        "id": 371273638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688151497
    }
]