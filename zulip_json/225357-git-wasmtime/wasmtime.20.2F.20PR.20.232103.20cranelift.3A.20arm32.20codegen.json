[
    {
        "content": "<p>jmkrauz opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103\">PR #2103</a> from <code>arm32-codegen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds arm32 Thumb2 code generation for some IR insts.<br>\nI have used machinst backend and followed Aarch64 implementation as an example.</p>\n<p>Floating-point instructions are not supported, because regalloc<br>\ndoes not seem to allow to represent overlapping register classes,<br>\nwhich are needed by VFP/Neon.</p>\n<p>Another lacking feature is support for I64 and I128 types.</p>\n<p>An abi implementation is not complete, however it makes it possible<br>\nto run simple clif tests.</p>\n<p>It may be a first step towards  #1173.</p>\n<p>This PR contains instruction emission test and clif tests for IR insts.</p>\n<p>I don't know well who could review this.</p>\n<p>&lt;!--<br>\nPlease ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 206121841,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596707416
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103#pullrequestreview-462379713\">PR Review</a>.</p>",
        "id": 206122591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596708071
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103#discussion_r466304083\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Maybe use x86 or riscv instead?</p>\n</blockquote>",
        "id": 206122592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596708071
    },
    {
        "content": "<p>jmkrauz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103#pullrequestreview-462422467\">PR Review</a>.</p>",
        "id": 206127525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596712280
    },
    {
        "content": "<p>jmkrauz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103#discussion_r466338489\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I believe some of the tests here or in regalloc/pressure.rs use the fact that S, D and Q registers overlap. I am not sure if we can achieve something similar with x86 or risc-v registers.</p>\n</blockquote>",
        "id": 206127526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596712280
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103\">PR #2103</a>.</p>",
        "id": 206163472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596730707
    },
    {
        "content": "<p>jmkrauz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103\">PR #2103</a> from <code>arm32-codegen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds arm32 Thumb2 code generation for some IR insts.<br>\nI have used machinst backend and followed Aarch64 implementation as an example.</p>\n<p>Floating-point instructions are not supported, because regalloc<br>\ndoes not seem to allow to represent overlapping register classes,<br>\nwhich are needed by VFP/Neon.</p>\n<p>Another lacking feature is support for I64 and I128 types.</p>\n<p>An abi implementation is not complete, however it makes it possible<br>\nto run simple clif tests.</p>\n<p>It may be a first step towards  #1173.</p>\n<p>This PR contains instruction emission test and clif tests for IR insts.</p>\n<p>I don't know well who could review this.</p>\n<p>&lt;!--<br>\nPlease ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 208078433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598440432
    },
    {
        "content": "<p>jmkrauz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103\">PR #2103</a> from <code>arm32-codegen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds arm32 Thumb2 code generation for some IR insts.<br>\nI have used machinst backend and followed Aarch64 implementation as an example.</p>\n<p>Floating-point instructions are not supported, because regalloc<br>\ndoes not seem to allow to represent overlapping register classes,<br>\nwhich are needed by VFP/Neon.</p>\n<p>Another lacking feature is support for I64 and I128 types.</p>\n<p>An abi implementation is not complete, however it makes it possible<br>\nto run simple clif tests.</p>\n<p>It may be a first step towards  #1173.</p>\n<p>This PR contains instruction emission test and clif tests for IR insts.</p>\n<p>I don't know well who could review this.</p>\n<p>&lt;!--<br>\nPlease ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 210242536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600251262
    },
    {
        "content": "<p>jmkrauz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103\">PR #2103</a> from <code>arm32-codegen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds arm32 Thumb2 code generation for some IR insts.<br>\nI have used machinst backend and followed Aarch64 implementation as an example.</p>\n<p>Floating-point instructions are not supported, because regalloc<br>\ndoes not seem to allow to represent overlapping register classes,<br>\nwhich are needed by VFP/Neon.</p>\n<p>Another lacking feature is support for I64 and I128 types.</p>\n<p>An abi implementation is not complete, however it makes it possible<br>\nto run simple clif tests.</p>\n<p>It may be a first step towards  #1173.</p>\n<p>This PR contains instruction emission test and clif tests for IR insts.</p>\n<p>I don't know well who could review this.</p>\n<p>&lt;!--<br>\nPlease ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 210853851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600771845
    },
    {
        "content": "<p>jmkrauz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103\">PR #2103</a> from <code>arm32-codegen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit adds arm32 Thumb2 code generation for some IR insts.<br>\nI have used machinst backend and followed Aarch64 implementation as an example.</p>\n<p>Floating-point instructions are not supported, because regalloc<br>\ndoes not seem to allow to represent overlapping register classes,<br>\nwhich are needed by VFP/Neon.</p>\n<p>Another lacking feature is support for I64 and I128 types.</p>\n<p>An abi implementation is not complete, however it makes it possible<br>\nto run simple clif tests.</p>\n<p>It may be a first step towards  #1173.</p>\n<p>This PR contains instruction emission test and clif tests for IR insts.</p>\n<p>I don't know well who could review this.</p>\n<p>&lt;!--<br>\nPlease ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 210854109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600772029
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2103\">PR #2103</a>.</p>",
        "id": 210893059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600790877
    }
]