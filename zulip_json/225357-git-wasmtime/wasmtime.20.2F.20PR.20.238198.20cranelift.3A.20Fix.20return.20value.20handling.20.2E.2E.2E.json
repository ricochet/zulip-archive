[
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428020414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971001
    },
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a> from <code>elliottt:trevor/fix-cranelift-winch-returns</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Cranelift's Winch calling convention implementation was incorrect in its handling of return values in three ways:</p>\n<ul>\n<li>Winch returns the last return value in a register instead of the first,</li>\n<li>Winch doesn't align entries returned through the stack to 8-byte boundaries,</li>\n<li>and finally, Winch places the first returned value at the largest offset from the return location, instead of the smallest.</li>\n</ul>\n<p>This PR addresses these three issues, enabling progress towards removing the trampoline implementations that are defined in terms of Winch's <code>MacroAssembler</code> trait.<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 428020415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971002
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428020417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971002
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428020454,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971025
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428020459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971030
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198#pullrequestreview-1950255683\">PR review</a>:</p>\n<blockquote>\n<p>Nice!</p>\n<p>Would it perhaps also make sense to add a runtest exercising this to ensure at runtime the result works in Cranelift at least?</p>\n</blockquote>",
        "id": 428020871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971206
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>:</p>\n<blockquote>\n<p>Cranelift's Winch calling convention implementation was incorrect in its handling of return values in three ways:</p>\n<ul>\n<li>Winch returns the last return value in a register instead of the first,</li>\n<li>Winch doesn't align entries returned through the stack to 8-byte boundaries,</li>\n<li>and finally, Winch places the first returned value at the largest offset from the return location, instead of the smallest.</li>\n</ul>\n<p>This PR addresses these three issues, enabling progress towards removing the trampoline implementations that are defined in terms of Winch's <code>MacroAssembler</code> trait.</p>\n<p>This PR only fixes return value handling for the x64 backend, as the aarch64 backend is currently exempted from testing. For this reason I'm wondering if it would make more sense to completely disable the Winch calling convention for aarch64, and leave fixing that implementation for when we start putting more work into aarch64 in Winch.<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 428020928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971241
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198#issuecomment-2010700347\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>:</p>\n<blockquote>\n<blockquote>\n<p>Would it perhaps also make sense to add a runtest exercising this to ensure at runtime the result works in Cranelift at least?</p>\n</blockquote>\n<p>This seems reasonable to me! I'll investigate adding one.</p>\n</blockquote>",
        "id": 428021116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971329
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198#pullrequestreview-1950284132\">PR review</a>.</p>",
        "id": 428022233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971902
    },
    {
        "content": "<p>saulecabrera <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198#issuecomment-2010717191\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>:</p>\n<blockquote>\n<p>Oops, I didn't realize that Alex had already approved. </p>\n</blockquote>",
        "id": 428022282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710971930
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428023240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710972466
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428024139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710972922
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428024140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710972922
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428024141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710972923
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>:</p>\n<blockquote>\n<p>Cranelift's Winch calling convention implementation was incorrect in its handling of return values in three ways:</p>\n<ul>\n<li>Winch returns the last return value in a register instead of the first,</li>\n<li>Winch doesn't align entries returned through the stack to 8-byte boundaries,</li>\n<li>and finally, Winch places the first returned value at the largest offset from the return location, instead of the smallest.</li>\n</ul>\n<p>This PR addresses these three issues, enabling progress towards removing the trampoline implementations that are defined in terms of Winch's <code>MacroAssembler</code> trait.</p>\n<p>Additionally, this PR disables the Winch calling convention for Cranelift's <code>aarch64</code> backend, as Winch support for <code>aarch64</code> is currently minimal.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 428024256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710972989
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428025462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710973669
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428026990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710974447
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8198\">PR #8198</a>.</p>",
        "id": 428034558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710978656
    }
]