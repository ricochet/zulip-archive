[
    {
        "content": "<p><a href=\"https://github.com/candymate\">candymate</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">Issue #8233</a>.</p>",
        "id": 429323901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711357946
    },
    {
        "content": "<p><a href=\"https://github.com/candymate\">candymate</a> added the fuzz-bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">Issue #8233</a>.</p>",
        "id": 429323902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711357946
    },
    {
        "content": "<p>candymate opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"nb\">None</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">new_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">new_config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"n\">Speed</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">new_config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">r#\"</span>\n<span class=\"s\">    (module</span>\n<span class=\"s\">        (type (;0;) (func (param i64 i64 i64) (result i64)))</span>\n<span class=\"s\">        (import \"mem\" \"mem\" (memory (;0;) 1))</span>\n<span class=\"s\">        (func (;0;) (type 0) (param i64 i64 i64) (result i64)</span>\n<span class=\"s\">          i64.const -1</span>\n<span class=\"s\">          i64.const 0</span>\n<span class=\"s\">          local.get 0</span>\n<span class=\"s\">          local.get 1</span>\n<span class=\"s\">          i64.lt_s</span>\n<span class=\"s\">          select</span>\n<span class=\"s\">          local.get 2</span>\n<span class=\"s\">          i64.shr_u</span>\n<span class=\"s\">          i64.extend8_s)</span>\n<span class=\"s\">        (export \"main\" (func 0)))</span>\n<span class=\"s\">    \"#</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MemoryType</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory1</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory2</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance1</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance2</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level None: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main1</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results1</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"--------------\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level Speed: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main2</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results2</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results2</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-wrapper\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n#<span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">keys</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">their</span><span class=\"w\"> </span><span class=\"n\">definitions</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"../wasmtime/crates/wasmtime\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n#<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"19.0.0\"</span>\n</code></pre></div>\n<h3>Steps to reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n</code></pre></div>\n<p>QEMU run options I'm currently using is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Both results from none and speed optimizations should show the same result -1</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"o\">--------------</span>\n<span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">Speed</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>The result from speed optimization is <code>0x3fffffffffffffff</code>, which is the wrong value.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"o\">--------------</span>\n<span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">Speed</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">4611686018427387903</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<ul>\n<li>wasmtime version<ul>\n<li>Commit af6b8ca9474a8a36a137416152f1972f991f34a6 (latest version: Sun Mar 24 21:32:31 2024 -0700)</li>\n<li>However, also checked on v19.0.0</li>\n</ul>\n</li>\n<li>Operating system &amp; architecture: Ubuntu 22.04.3 LTS, Arch: x86_64</li>\n<li>QEMU version: <code>qemu-aarch64 version 8.2.1 (v8.2.1)</code></li>\n</ul>\n<h3>Extra Info</h3>\n<ul>\n<li>Sorry for this, but the case is not fully minimized</li>\n<li>Does not work on other architectures (x86_64, s390x, riscv64)</li>\n<li>Not a security issue: not a tier 1 platform</li>\n</ul>\n</blockquote>",
        "id": 429323904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711357947
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018162989\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>Thanks for the report! I'm had a surprising amount of trouble reproducing this though, so I'm wondering if this isn't perhaps a different bug lurking somewhere. Locally I can't reproduce on a macOS arm64 machine, a native arm64 Linux machine, or on an x86_64 Linux machine with QEMU emulation. I noticed though that my QEMU was 8.1.5 (what we use in CI) rather than your local 8.2.1.</p>\n<p>That appears to be the cause of the issue though, that QEMU 8.2.1 is required. I wonder if this is perhaps QEMU bug in that case?</p>\n</blockquote>",
        "id": 429424937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711377722
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018709500\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>Bisection on qemu itself shows qemu/qemu@95bf306e3a058a38f5adb27be2ac598134b159d9 is the first \"bad\" commit. Not that I understand anything about QEMU source itself...</p>\n</blockquote>",
        "id": 429489803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711393559
    },
    {
        "content": "<p>candymate <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018717666\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>@alexcrichton I tried to downgrade QEMU to 8.1.5 and found that I'm getting the correct results (which is -1). Maybe this is a QEMU bug rather than a bug in Cranelift?</p>\n<p>FYI, CLIF I'm getting now is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i64</span> <span class=\"nc\">fast</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">gv0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vmctx</span>\n<span class=\"w\">    </span><span class=\"n\">gv1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">readonly</span><span class=\"w\"> </span><span class=\"n\">gv0</span><span class=\"o\">+</span><span class=\"mi\">8</span>\n<span class=\"w\">    </span><span class=\"n\">gv2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">aligned</span><span class=\"w\"> </span><span class=\"n\">gv1</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">uext</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">uext</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">uext</span><span class=\"w\"> </span><span class=\"n\">system_v</span>\n<span class=\"w\">    </span><span class=\"n\">sig1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">vmctx</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">uext</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"nc\">uext</span><span class=\"w\"> </span><span class=\"n\">system_v</span>\n<span class=\"w\">    </span><span class=\"n\">stack_limit</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">gv2</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">0033</span><span class=\"w\">                               </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span>\n<span class=\"o\">@</span><span class=\"mi\">0035</span><span class=\"w\">                               </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">b</span><span class=\"w\">                               </span><span class=\"n\">v8</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">icmp</span><span class=\"w\"> </span><span class=\"n\">slt</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">b</span><span class=\"w\">                               </span><span class=\"n\">v9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uextend</span><span class=\"p\">.</span><span class=\"kt\">i32</span><span class=\"w\"> </span><span class=\"n\">v8</span>\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">c</span><span class=\"w\">                               </span><span class=\"n\">v10</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">select</span><span class=\"w\"> </span><span class=\"n\">v9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"w\">  </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">v6</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v7</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"o\">@</span><span class=\"mi\">003</span><span class=\"n\">f</span><span class=\"w\">                               </span><span class=\"n\">v11</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ushr</span><span class=\"w\"> </span><span class=\"n\">v10</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"n\">v12</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">ireduce</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">v11</span>\n<span class=\"o\">@</span><span class=\"mi\">0040</span><span class=\"w\">                               </span><span class=\"n\">v13</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">sextend</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v12</span>\n<span class=\"o\">@</span><span class=\"mi\">0041</span><span class=\"w\">                               </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v13</span><span class=\"p\">)</span>\n\n<span class=\"w\">                                </span><span class=\"n\">block1</span><span class=\"p\">(</span><span class=\"n\">v5</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n<span class=\"o\">@</span><span class=\"mi\">0041</span><span class=\"w\">                               </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Now I'm trying to upgrade QEMU to try again...</p>\n</blockquote>",
        "id": 429490269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711393736
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018721817\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>Yeah that's what I'm thinking. I'll note that on the master branch of QEMU I still see a non-minus-one return value, so I think for this you may need to downgrade to 8.1.5 rather than upgrade perhaps? That such a bug has gone unnoticed for so long though is also suspicious...</p>\n</blockquote>",
        "id": 429490607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711393865
    },
    {
        "content": "<p>candymate <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018739412\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>I also tested on QEMU v8.2.2 and v9.0.0-rc0, and now I'm pretty sure that this is a newly introduced QEMU bug. I think I'll need to downgrade QEMU to v8.1.5 for now...</p>\n<p>Anyway, thanks for your work! I think you can close this issue whenever you want.</p>\n</blockquote>",
        "id": 429492254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711394501
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// main.rs</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"o\">*</span><span class=\"p\">;</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">default</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">strategy</span><span class=\"p\">(</span><span class=\"n\">Strategy</span>::<span class=\"n\">Cranelift</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"nb\">None</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">new_config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">new_config</span><span class=\"p\">.</span><span class=\"n\">cranelift_opt_level</span><span class=\"p\">(</span><span class=\"n\">OptLevel</span>::<span class=\"n\">Speed</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">new_config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">r#\"</span>\n<span class=\"s\">    (module</span>\n<span class=\"s\">        (type (;0;) (func (param i64 i64 i64) (result i64)))</span>\n<span class=\"s\">        (import \"mem\" \"mem\" (memory (;0;) 1))</span>\n<span class=\"s\">        (func (;0;) (type 0) (param i64 i64 i64) (result i64)</span>\n<span class=\"s\">          i64.const -1</span>\n<span class=\"s\">          i64.const 0</span>\n<span class=\"s\">          local.get 0</span>\n<span class=\"s\">          local.get 1</span>\n<span class=\"s\">          i64.lt_s</span>\n<span class=\"s\">          select</span>\n<span class=\"s\">          local.get 2</span>\n<span class=\"s\">          i64.shr_u</span>\n<span class=\"s\">          i64.extend8_s)</span>\n<span class=\"s\">        (export \"main\" (func 0)))</span>\n<span class=\"s\">    \"#</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">module2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Module</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">wat</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"p\">());</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MemoryType</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">None</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">memory2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Memory</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">memory_ty</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory1</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">instance2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Instance</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">module2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"n\">memory2</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">()])</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance1</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">main2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">instance2</span><span class=\"p\">.</span><span class=\"n\">get_func</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"main\"</span><span class=\"p\">)</span>\n<span class=\"w\">        </span><span class=\"p\">.</span><span class=\"n\">expect</span><span class=\"p\">(</span><span class=\"s\">\"`main` was not an exported function\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">params</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span>\n<span class=\"w\">        </span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span>\n<span class=\"w\">    </span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"fm\">vec!</span><span class=\"p\">[</span><span class=\"n\">Val</span>::<span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)];</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level None: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main1</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store1</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results1</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"--------------\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"Opt level Speed: {:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">main2</span><span class=\"p\">.</span><span class=\"n\">call</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store2</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">params</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">results2</span>\n<span class=\"w\">    </span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{:?}\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">results2</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">package</span><span class=\"p\">]</span>\n<span class=\"n\">name</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"wasmtime-wrapper\"</span>\n<span class=\"n\">version</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"0.1.0\"</span>\n<span class=\"n\">edition</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"2021\"</span>\n\n#<span class=\"w\"> </span><span class=\"n\">See</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">keys</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">their</span><span class=\"w\"> </span><span class=\"n\">definitions</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">https</span>:<span class=\"c1\">//doc.rust-lang.org/cargo/reference/manifest.html</span>\n\n<span class=\"p\">[</span><span class=\"n\">dependencies</span><span class=\"p\">]</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"../wasmtime/crates/wasmtime\"</span><span class=\"w\"> </span><span class=\"p\">}</span>\n#<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"19.0.0\"</span>\n</code></pre></div>\n<h3>Steps to reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">release</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span>\n</code></pre></div>\n<p>QEMU run options I'm currently using is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">qemu</span><span class=\"o\">-</span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">LD_LIBRARY_PATH</span><span class=\"o\">=/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">E</span><span class=\"w\"> </span><span class=\"n\">WASMTIME_TEST_NO_HOG_MEMORY</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">unknown</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">wrapper</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>Both results from none and speed optimizations should show the same result -1</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"o\">--------------</span>\n<span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">Speed</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>The result from speed optimization is <code>0x3fffffffffffffff</code>, which is the wrong value.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"nb\">None</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)]</span>\n<span class=\"o\">--------------</span>\n<span class=\"n\">Opt</span><span class=\"w\"> </span><span class=\"n\">level</span><span class=\"w\"> </span><span class=\"n\">Speed</span>: <span class=\"nb\">Ok</span><span class=\"p\">(())</span>\n<span class=\"p\">[</span><span class=\"n\">I64</span><span class=\"p\">(</span><span class=\"mi\">4611686018427387903</span><span class=\"p\">)]</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<ul>\n<li>wasmtime version<ul>\n<li>Commit af6b8ca9474a8a36a137416152f1972f991f34a6 (latest version: Sun Mar 24 21:32:31 2024 -0700)</li>\n<li>However, also checked on v19.0.0</li>\n</ul>\n</li>\n<li>Operating system &amp; architecture: Ubuntu 22.04.3 LTS, Arch: x86_64</li>\n<li>QEMU version: <code>qemu-aarch64 version 8.2.1 (v8.2.1)</code></li>\n</ul>\n<h3>Extra Info</h3>\n<ul>\n<li>Sorry for this, but the case is not fully minimized</li>\n<li>Does not work on other architectures (x86_64, s390x, riscv64)</li>\n<li>Not a security issue: not a tier 1 platform</li>\n</ul>\n</blockquote>",
        "id": 429493242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711394898
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018752699\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>To confirm this is a QEMU issue I ended up mimizing to:</p>\n<div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"c1\">// foo.c</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdio.h&gt;</span>\n<span class=\"cp\">#include</span><span class=\"w\"> </span><span class=\"cpf\">&lt;stdint.h&gt;</span>\n\n<span class=\"kt\">int64_t</span><span class=\"w\"> </span><span class=\"nf\">callme</span><span class=\"p\">(</span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">_1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">size_t</span><span class=\"w\"> </span><span class=\"n\">_2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int64_t</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int64_t</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">int64_t</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">);</span>\n\n<span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int64_t</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">callme</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">\"%ld</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ret</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"GAS\"><pre><span></span><code><span class=\"c1\">// foo.S</span>\n<span class=\"na\">.global</span><span class=\"w\"> </span><span class=\"no\">callme</span>\n<span class=\"nl\">callme:</span>\n<span class=\"w\">  </span><span class=\"nf\">cmp</span><span class=\"w\">   </span><span class=\"no\">x2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">x3</span>\n<span class=\"w\">  </span><span class=\"nf\">cset</span><span class=\"w\">  </span><span class=\"no\">x12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">lt</span>\n<span class=\"w\">  </span><span class=\"nf\">and</span><span class=\"w\">   </span><span class=\"no\">w11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">w12</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">xff</span>\n<span class=\"w\">  </span><span class=\"nf\">cmp</span><span class=\"w\">   </span><span class=\"no\">w11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">#0</span><span class=\"no\">x0</span>\n<span class=\"w\">  </span><span class=\"nf\">csetm</span><span class=\"w\"> </span><span class=\"no\">x14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">ne</span>\n<span class=\"w\">  </span><span class=\"nf\">lsr</span><span class=\"w\">   </span><span class=\"no\">x13</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">x14</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">x4</span>\n<span class=\"w\">  </span><span class=\"nf\">sxtb</span><span class=\"w\">  </span><span class=\"no\">x0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"no\">w13</span>\n<span class=\"w\">  </span><span class=\"nf\">ret</span>\n</code></pre></div>\n<p>compiled as:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"o\">-</span><span class=\"n\">linux</span><span class=\"o\">-</span><span class=\"n\">gnu</span><span class=\"o\">-</span><span class=\"n\">gcc</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">.</span><span class=\"n\">S</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">foo</span>\n</code></pre></div>\n<p>On native that prints -1 and on qemu 8.2.1 it prints 4611686018427387903.</p>\n<p>Interestingly if I enable <code>-g</code> with QEMU and single-step in qemu it also prints -1.</p>\n<p>In any case I agree it's QEMU so I'm going to close this.</p>\n</blockquote>",
        "id": 429493246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711394899
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018797691\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>Are you going to open a qemu issue to get this fixed?</p>\n</blockquote>",
        "id": 429497404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711396506
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2018933508\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>Ah no I wasn't planning on personally doing that, no</p>\n</blockquote>",
        "id": 429512195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711401423
    },
    {
        "content": "<p>candymate <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2019118029\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>I'll report this to QEMU by today and let you know about it. Thank you.</p>\n</blockquote>",
        "id": 429530168,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711410588
    },
    {
        "content": "<p>candymate edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2019118029\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>I'll report this to QEMU on today and let you know about it. Thank you.</p>\n</blockquote>",
        "id": 429530269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711410639
    },
    {
        "content": "<p>candymate edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2019118029\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>I'll report this to QEMU on today and let you know about it. Thank you.</p>\n<p>Update: I reported this to QEMU: <a href=\"https://gitlab.com/qemu-project/qemu/-/issues/2248\">https://gitlab.com/qemu-project/qemu/-/issues/2248</a> </p>\n</blockquote>",
        "id": 429584156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1711429118
    },
    {
        "content": "<p>pm215 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233#issuecomment-2045101861\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8233\">issue #8233</a>:</p>\n<blockquote>\n<p>just FYI, this QEMU bug will be fixed in the upcoming 9.0 release and backported to the relevant stable branches.</p>\n</blockquote>",
        "id": 432231119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712666764
    }
]