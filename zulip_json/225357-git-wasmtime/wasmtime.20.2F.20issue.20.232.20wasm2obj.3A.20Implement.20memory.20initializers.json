[
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2#issuecomment-917100932\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2\">issue #2</a>:</p>\n<blockquote>\n<p>@alexcrichton Since you removed <code>wasm2obj</code> in PR #3301, I suppose this is no longer relevant <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>?</p>\n</blockquote>",
        "id": 252825211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631296756
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2#issuecomment-917444888\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2\">issue #2</a>:</p>\n<blockquote>\n<p>Indeed!</p>\n</blockquote>",
        "id": 252924229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631381984
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2\">issue #2</a>:</p>\n<blockquote>\n<p>of the test files, only call does not have memory initializer. I'd like to see it implemented, or at least stubbed out, so I can examine the object files produced.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">bin</span><span class=\"w\"> </span><span class=\"n\">wasm2obj</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"n\">secs</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">wasm2obj</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"o\">%</span><span class=\"n\">wasm_0x0</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>: <span class=\"nc\">relocs</span>: <span class=\"p\">[]</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">FIXME</span>: <span class=\"nc\">implement</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"n\">initializers</span><span class=\"w\"></span>\n</code></pre></div>\n<p>How much work would it be to implement this, or at least add stubs so it doesn't stop the entire binary emission process?</p>\n</blockquote>",
        "id": 252924230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1631381985
    }
]