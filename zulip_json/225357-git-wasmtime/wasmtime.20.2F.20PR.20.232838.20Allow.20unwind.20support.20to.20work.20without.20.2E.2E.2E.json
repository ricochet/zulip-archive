[
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2838\">PR #2838</a> from <code>optionalfp</code> to <code>main</code>:</p>\n<blockquote>\n<p>The patch extends the unwinder to support targets that do not need<br>\nto use a dedicated frame pointer register.  Specifically, the<br>\nchanges include:</p>\n<ul>\n<li>\n<p>Change the \"fp\" routine in the RegisterMapper to return an<br>\n<em>optional</em> frame pointer regsiter via Option&lt;Register&gt;.</p>\n</li>\n<li>\n<p>On targets that choose to not define a FP register via the above<br>\n  routine, the UnwindInst::DefineNewFrame operation no longer switches<br>\n  the CFA to be defined in terms of the FP.  (The operation still can<br>\n  be used to define the location of the clobber area.)</p>\n</li>\n<li>\n<p>In addition, on targets that choose not to define a FP register, the<br>\n  UnwindInst::PushFrameRegs operation is not supported.</p>\n</li>\n<li>\n<p>There is a new operation UnwindInst::StackAlloc that needs to be<br>\n  called on targets without FP whenever the stack pointer is updated.<br>\n  This caused the CFA offset to be adjusted accordingly.  (On<br>\n  targets with FP this operation is a no-op.)</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 234488309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618402938
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2838\">PR #2838</a> from <code>optionalfp</code> to <code>main</code>.</p>",
        "id": 234507456,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618410373
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2838#pullrequestreview-635908518\">PR Review</a>.</p>",
        "id": 234545683,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618423124
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2838\">PR #2838</a>.</p>",
        "id": 234545702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1618423132
    }
]