[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454333462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722011378
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a> from <code>alexcrichton:deinit-traps</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit adds a new unsafe API <code>Engine::unload_process_handlers</code> which can be used to de-initialize trap-handling state in a process. In general this is an unsafe operation that we have no means of making safe, hence the <code>unsafe</code>. There are particular situations where this can be done safely though and this is provided for such situations. The safety conditions rely on invariants that Wasmtime itself cannot maintain so the burden is on callers to ensure that this is invoked in a safe manner.</p>\n<p>This is inspired by discussion [on Zulip][zulip] where Wasmtime's trap handling infrastructure prevented unloading a DLL with Wasmtime in it. There's possibly other reasons that unloading DLLs are unsafe in Rust but it feels appropriate to at least provide this knob to embedders to be able to turn if they like.</p>\n<p>[zulip]: <a href=\"#narrow/stream/206238-general/topic/How.20to.20safely.20drop.20wasmtime.3F/near/453366905\">https://bytecodealliance.zulipchat.com/#narrow/stream/206238-general/topic/How.20to.20safely.20drop.20wasmtime.3F/near/453366905</a></p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 454333463,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722011378
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454333464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722011378
    },
    {
        "content": "<p>lann submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#pullrequestreview-2202277421\">PR review</a>:</p>\n<blockquote>\n<p>Given how specialized this you can consider all the functional comments just questions.</p>\n</blockquote>",
        "id": 454337057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012657
    },
    {
        "content": "<p>lann created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#discussion_r1693340887\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure exactly what \"for this Wasmtime DLL\" means; maybe just drop it?</p>\n</blockquote>",
        "id": 454337058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012658
    },
    {
        "content": "<p>lann submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#pullrequestreview-2202277421\">PR review</a>:</p>\n<blockquote>\n<p>Given how specialized this you can consider all the functional comments just questions.</p>\n</blockquote>",
        "id": 454337060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012658
    },
    {
        "content": "<p>lann created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#discussion_r1693339774\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// * There must be no other instances of `Engine` anywhere for this Wasmtime\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 454337061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012658
    },
    {
        "content": "<p>lann created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#discussion_r1693339444\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// the process will be aborted if the current signal handlers are not\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 454337062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012658
    },
    {
        "content": "<p>lann created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#discussion_r1693341856\">PR review comment</a>:</p>\n<blockquote>\n<p>\"no other\" or just \"conflicting\"? I guess you don't want to commit to specific handlers being installed but this is already pretty unstable... <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> </p>\n</blockquote>",
        "id": 454337063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012658
    },
    {
        "content": "<p>lann created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#discussion_r1693345344\">PR review comment</a>:</p>\n<blockquote>\n<p>Would it make sense to explicitly poison this copy of wasmtime with a global or is that already effectively happening?</p>\n</blockquote>",
        "id": 454337064,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012658
    },
    {
        "content": "<p>lann submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#pullrequestreview-2202277421\">PR review</a>:</p>\n<blockquote>\n<p>Given how specialized this is, consider all the functional comments just questions.</p>\n</blockquote>",
        "id": 454337112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722012682
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454341867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722014424
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#pullrequestreview-2202339713\">PR review</a>.</p>",
        "id": 454341957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722014457
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#discussion_r1693375765\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm hesitant to go out of our way to do that as it might slow down other parts for this niche unsafe part, so I'd lean towards making this part of the unsafe contract rather than trying to add more guard rails.</p>\n</blockquote>",
        "id": 454341959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722014458
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#issuecomment-2253175085\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>:</p>\n<blockquote>\n<p>Good suggestions/questions! I've tried to wordsmith and update a bit.</p>\n</blockquote>",
        "id": 454341992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722014473
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#pullrequestreview-2202890807\">PR review</a>.</p>",
        "id": 454401369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722043074
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022#discussion_r1693717584\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>//! It's not safe for this binary to contain any other tests.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 454401370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722043074
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454849818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722262799
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454849874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722262804
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454856680,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722264410
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454856694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722264414
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9022\">PR #9022</a>.</p>",
        "id": 454863021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722265815
    }
]