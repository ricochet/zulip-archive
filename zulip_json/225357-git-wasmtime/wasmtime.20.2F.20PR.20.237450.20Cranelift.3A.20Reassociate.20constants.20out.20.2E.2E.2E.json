[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450\">PR #7450</a> from <code>fitzgen:reassociate-constants-in-nested-shifts</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This allows for more constant propagation.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 399808819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698875537
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450\">PR #7450</a>.</p>",
        "id": 399808820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698875537
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450\">PR #7450</a>.</p>",
        "id": 399808821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698875537
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#pullrequestreview-1709152263\">PR review</a>.</p>",
        "id": 399810282,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698876219
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#discussion_r1379377330\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this doesn't hold if <code>(c + b) &gt;= ty_bits</code> right? Either way I'm going to run fuzzgen on this for a while to doublecheck.</p>\n</blockquote>",
        "id": 399810283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698876219
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#pullrequestreview-1709178176\">PR review</a>.</p>",
        "id": 399812810,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698877876
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#discussion_r1379396186\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yeah unfortunately I think you are right:</p>\n<div class=\"codehilite\" data-code-language=\"smt\"><pre><span></span><code>(declare-const a (_ BitVec 32))\n(declare-const b (_ BitVec 32))\n(declare-const c (_ BitVec 32))\n\n(define-fun shl ((x (_ BitVec 32)) (y (_ BitVec 32))) (_ BitVec 32)\n  (let ((z (bvurem y #x00000020)))\n    (bvshl x z)))\n\n\n(assert (not (= (shl (shl a b) c)\n                (shl a (bvadd b c)))))\n\n(check-sat)\n(get-model)\n</code></pre></div>\n<p>Produces</p>\n<div class=\"codehilite\" data-code-language=\"smt\"><pre><span></span><code>sat\n(\n  (define-fun b () (_ BitVec 32)\n    #x00000010)\n  (define-fun a () (_ BitVec 32)\n    #xf879c486)\n  (define-fun c () (_ BitVec 32)\n    #x00000010)\n)\n</code></pre></div>\n<p>and then</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">fn</span> <span class=\"nf\">shl</span><span class=\"p\">(</span><span class=\"n\">a</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u32</span> <span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">&lt;&lt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">a</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u32</span> <span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">shl</span><span class=\"p\">(</span><span class=\"n\">shl</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">bar</span><span class=\"p\">(</span><span class=\"n\">a</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span>: <span class=\"kt\">u32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span>: <span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u32</span> <span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">shl</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">wrapping_add</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">))</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0xf879c486</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000010</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000010</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">));</span>\n<span class=\"w\">    </span><span class=\"fm\">dbg!</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">));</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>produces</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">15</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4168729734</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">18</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">16</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">21</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">16</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">23</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span>\n<span class=\"p\">[</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">24</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">bar</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">4168729734</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 399812812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698877876
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450\">PR #7450</a>.</p>",
        "id": 399813719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698878400
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#pullrequestreview-1709185429\">PR review</a>.</p>",
        "id": 399813814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698878412
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#discussion_r1379401522\">PR review comment</a>:</p>\n<blockquote>\n<p>Removed the rules that depended on this buggy identity.</p>\n</blockquote>",
        "id": 399813815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698878412
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#pullrequestreview-1709201535\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> LGTM!</p>\n<p>Coincidentally I've been working on a similar set of rules at <a href=\"https://github.com/afonso360/wasmtime/tree/egraphs-shifts-2\">egraphs-shifts-2</a>. I'll submit those as a PR tomorrow!</p>\n</blockquote>",
        "id": 399815940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698879637
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450#pullrequestreview-1709201535\">PR review</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> LGTM!</p>\n<p>Coincidentally I've been working on a similar <a href=\"https://github.com/bytecodealliance/wasmtime/compare/main...afonso360:wasmtime:egraphs-shifts-2\">set of rules</a>. I'll submit those as a PR tomorrow!</p>\n</blockquote>",
        "id": 399816038,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698879674
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7450\">PR #7450</a>.</p>",
        "id": 399820360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698882585
    }
]