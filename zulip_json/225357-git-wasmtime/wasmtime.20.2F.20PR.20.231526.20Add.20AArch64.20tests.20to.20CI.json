[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194361040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587068035
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-394972512\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-394972512\">PR Review</a>.</p>",
        "id": 194362470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587068685
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409826823\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409826823\">PR Review Comment</a>:</p>\n<blockquote>\n<p>See #1517 for where I remove this TODO and finish this implementation. I agree that we need a way to filter out <code>test run</code> filetests based on the target ISA but I don't want to confuse anyone by overloading <code>target ...</code>; perhaps if we add some documentation at the top of this file (for cargo docs) and some text to the bottom of <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/docs/testing.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/docs/testing.md\">https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/docs/testing.md</a>?</p>\n</blockquote>",
        "id": 194362471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587068685
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-394973083\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-394973083\">PR Review</a>.</p>",
        "id": 194362583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587068743
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409827301\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409827301\">PR Review Comment</a>:</p>\n<blockquote>\n<p>And we might want to print something saying we skipped a test.</p>\n</blockquote>",
        "id": 194362584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587068743
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-394973920\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-394973920\">PR Review</a>.</p>",
        "id": 194362754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587068817
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409827958\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409827958\">PR Review Comment</a>:</p>\n<blockquote>\n<p>To make this even more explicit we could add another keyword <code>only_run_on</code> (or something like that), but that could be a separate issue/PR.</p>\n</blockquote>",
        "id": 194362756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587068818
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194364421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587069596
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395006525\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395006525\">PR Review</a>.</p>",
        "id": 194368737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587071918
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409854323\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409854323\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm fine basically doing whatever here, although I'm pretty unfamiliar with cranelift's currently test runner/suite. It seems like documenting this change is a bare minimum, but beyond that do you think something should happen here or in a future pr?</p>\n</blockquote>",
        "id": 194368738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587071919
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395006827\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395006827\">PR Review</a>.</p>",
        "id": 194368781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587071948
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409854598\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409854598\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Does the filetest infrastructure print out anything else currently? Curious if I can see an example of what format to print and such.</p>\n</blockquote>",
        "id": 194368782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587071948
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395009663\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395009663\">PR Review</a>.</p>",
        "id": 194369310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587072238
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409856955\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409856955\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm, I don't feel really strongly about the <code>only_run_on</code> idea so I guess we could just document and if someone else cares enough we could take it further.</p>\n</blockquote>",
        "id": 194369311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587072238
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395011984\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395011984\">PR Review</a>.</p>",
        "id": 194369755,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587072480
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409858858\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409858858\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Over in <code>cranelift/src/filetests/runner.rs</code> it is printing <code>FAIL {path}: {error}</code> so maybe we could print <code>IGNORE {path}: host ISA did not match target ISA</code>? That way at least there is some indication that things didn't run perfectly.</p>\n</blockquote>",
        "id": 194369756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587072480
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395031785\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395031785\">PR Review</a>.</p>",
        "id": 194373609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587074845
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409875433\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409875433\">PR Review Comment</a>:</p>\n<blockquote>\n<p>???</p>\n</blockquote>",
        "id": 194373610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587074845
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395031785\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395031785\">PR Review</a>.</p>",
        "id": 194373611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587074845
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409875768\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r409875768\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Shouldn't this be false and the line above true?</p>\n</blockquote>",
        "id": 194373612,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587074845
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395621549\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395621549\">PR Review</a>.</p>",
        "id": 194469986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587142714
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410351334\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410351334\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is an internal script we use to build tarballs, it's not really intended to be super-well-documented or make a ton of sense...</p>\n</blockquote>",
        "id": 194469988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587142714
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395621697\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395621697\">PR Review</a>.</p>",
        "id": 194469998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587142726
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410351444\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410351444\">PR Review Comment</a>:</p>\n<blockquote>\n<p>No, this is as-intended (hence the green CI passing)</p>\n</blockquote>",
        "id": 194470000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587142726
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395761219\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395761219\">PR Review</a>.</p>",
        "id": 194497378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587156296
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410460820\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410460820\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hm so it looks like the <code>path</code> isn't already threaded through, would you be ok to follow-up with this at a later date?</p>\n</blockquote>",
        "id": 194497380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587156296
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194497532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587156366
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194507718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587162324
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395821091\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-395821091\">PR Review</a>.</p>",
        "id": 194511215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587165309
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410510668\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r410510668\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sure, tag me in an issue and I will try to look at this later.</p>\n</blockquote>",
        "id": 194511216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587165309
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194688239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587395342
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-396547028\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-396547028\">PR Review</a>.</p>",
        "id": 194688438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587395437
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r411457715\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r411457715\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sure thing! Extracted out <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1558\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1558\">https://github.com/bytecodealliance/wasmtime/issues/1558</a></p>\n</blockquote>",
        "id": 194688439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587395437
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194846879,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587495473
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194944823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587567913
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194947615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587569052
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-398399288\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-398399288\">PR Review</a>.</p>",
        "id": 194963733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576047
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-398399288\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#pullrequestreview-398399288\">PR Review</a>.</p>",
        "id": 194963735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576047
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r413164693\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r413164693\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Just for future sanity -- maybe standardize on <code>$platform</code>, and add a <code># Usage: build-tarballs.sh PLATFORM [.exe] (PLATFORM is e.g. x86_64-linux, aarch64-linux)</code> comment (no need for an actual arg check)?</p>\n</blockquote>",
        "id": 194963736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576048
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r413168303\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526#discussion_r413168303\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Little clarity nit, but maybe add a comment here to distinguish from the \"test that this correctly panics\" unit-test idiom. Something like <code>// Determine whether to add a should_panic attribute. These tests currently panic because of unfinished backend implementation work; we will remove them from this list as we finish the implementation.</code></p>\n</blockquote>",
        "id": 194963737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587576048
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a> from <code>arm64-ci-pr</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit enhances our CI with an AArch64 builder. Currently we have<br>\nno physical hardware to run on so for now we run all tests in an<br>\nemulator. The AArch64 build is cross-compiled from x86_64 from Linux.<br>\nTests all happen in release mode with a recent version of QEMU (recent<br>\nversion because it's so much faster, and in release mode because debug<br>\nmode tests take quite a long time in an emulator).</p>\n<p>The goal here was not to get all tests passing on CI, but rather to get<br>\nAArch64 running on CI and get it green at the same time. To achieve that<br>\ngoal many tests are now ignored on aarch64 platforms. Many tests fail<br>\ndue to unimplemented functionality in the aarch64 backend (#1521), and<br>\nall wasmtime tests involving compilation are also disabled due to<br>\npanicking attempting to generate generate instruction offset information<br>\nfor trap symbolication (#1523).</p>\n<p>Despite this, though, all Cranelift tests and other wasmtime tests<br>\nshould be runnin on AArch64 through QEMU with this PR. Additionally<br>\nwe'll have an AArch64 binary release of Wasmtime for Linux, although it<br>\nwon't be too useful just yet since it will panic on almost all wasm<br>\nmodules.</p>\n</blockquote>",
        "id": 194968528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587578208
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1526\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1526\">PR #1526</a>.</p>",
        "id": 194968538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587578215
    }
]