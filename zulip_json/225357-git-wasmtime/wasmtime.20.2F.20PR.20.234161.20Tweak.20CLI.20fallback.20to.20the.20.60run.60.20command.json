[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4161\">PR #4161</a> from <code>better-cli-error</code> to <code>main</code>:</p>\n<blockquote>\n<p>I ran across a case in Wasmtime today where a poor error message came<br>\nout of the CLI. For example before this commit you would get:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo run wast --wasm-features component-model foo.wast\nerror: Invalid value &quot;wast&quot; for &#39;&lt;MODULE&gt;&#39;: module name cannot be the same as a subcommand\n</code></pre></div>\n\n<p>and now after this commit you get:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo run wast --wasm-features component-model foo.wast\nerror: Invalid value &quot;component-model&quot; for &#39;--wasm-features &lt;FEATURE,FEATURE,...&gt;&#39;: unsupported WebAssembly feature &#39;component-model&#39;\n</code></pre></div>\n\n<p>I believe this was an accidental regression from #4082 since Wasmtime<br>\n0.36.0 produces the error message as expected.</p>\n<p>I opted to invert the conditional logic for falling back to the <code>run</code><br>\nsubcommand. Instead of having a small set of error kinds that print the<br>\nfirst-level error a small set of error kinds are now used to fall back<br>\nto the <code>run</code> subcommand by default. My hope is that as <code>ErrorKind</code> is<br>\nextended over time with various sorts of errors of parsing argumenst<br>\nthis'll be more robust because most of the time we want the CLI<br>\ninvocation to print out the normal CLI error, it's only in a select few<br>\ncases that using <code>run</code> is likely to succeed.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 282824023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652896243
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4161#pullrequestreview-977413603\">PR review</a>.</p>",
        "id": 282827849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652898036
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4161\">PR #4161</a>.</p>",
        "id": 282845040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1652905842
    }
]