[
    {
        "content": "<p>peterhuene opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors module instantiation in the runtime to allow for<br>\ndifferent allocator implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>DefaultInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocator set on which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This commit also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 217962754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606361948
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors module instantiation in the runtime to allow for<br>\ndifferent allocator implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>DefaultInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocator set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This commit also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 217963589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606363182
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541242362\">PR Review</a>.</p>",
        "id": 218341230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606768120
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541242362\">PR Review</a>.</p>",
        "id": 218341231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606768120
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532858798\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Would be nice to note something like \"it is the wasmtime crate's responsibility to ensure that the allocator outlives this instance\" or something of the sort.</p>\n</blockquote>",
        "id": 218341232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606768120
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532876948\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Why do we have both of these? I would have expected just <code>instance_allocator</code> (without the <code>Option</code>) which is initialized by default to <code>Arc::new(DefaultInstanceAllocator)</code>.</p>\n</blockquote>",
        "id": 218341233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606768120
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532873861\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It isn't clear to me that implementations will ever do this initialization step differently. Do you expect it to change with instance pooling? If not, then I think we don't need to make <code>initialize</code> part of the trait.</p>\n</blockquote>",
        "id": 218341234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606768120
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532877801\">PR Review Comment</a>:</p>\n<blockquote>\n<p>And if we just had <code>instance_allocator</code>, then this code would simplify a bit as well.</p>\n<p>But I feel like I'm missing some kind of context about why we have both (a comment above the field definitions in the <code>Config</code> struct would really help readers out here!)</p>\n</blockquote>",
        "id": 218341235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606768120
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532882034\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The public version of the trait doesn't have any deallocation hooks? I don't see any mention of this in the RFC either. How is the instance pool supposed to recycle an instance's memory?</p>\n</blockquote>",
        "id": 218341236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606768120
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541308380\">PR Review</a>.</p>",
        "id": 218348423,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771626
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532914433\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I do expect there to be some differences with the allocator implementations with respect to table / linear memory initialization.  <code>userfaultfd</code> support can lazily initialize the pages, so it might simply take a reference on the initializers for later use, for example.</p>\n</blockquote>",
        "id": 218348424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771626
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541308510\">PR Review</a>.</p>",
        "id": 218348445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771639
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532914540\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'll add that comment for safety.</p>\n</blockquote>",
        "id": 218348447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771639
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541310370\">PR Review</a>.</p>",
        "id": 218348848,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771811
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532916002\">PR Review Comment</a>:</p>\n<blockquote>\n<p>So the instance allocator is really meant for allocating <em>module</em> instances and not for the various \"instantiations\" Wasmtime does internally for representing host tables, memories, globals, and functions.</p>\n<p>The \"default\" allocator is used exclusively for these internal instantiations as well as for module instantiations when a user does not provide an alternative instance allocator.</p>\n<p>I can improve the comments around this to make that distinction clearer, but I'm also open to an alternative implementation.</p>\n</blockquote>",
        "id": 218348849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771811
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541311980\">PR Review</a>.</p>",
        "id": 218349185,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771968
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532917280\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Agreed.  I can comment on why the config is storing both, but I'm definitely open to any suggestions you might have regarding a different approach for handling internal host object instantiations vs. module instantiations.</p>\n<p>The end goal being that I don't want a pooling allocator to treat host objects as counting towards any limits placed on the total number of instances supported by the pool.</p>\n</blockquote>",
        "id": 218349186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606771968
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541314576\">PR Review</a>.</p>",
        "id": 218349662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606772223
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532919351\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The RFC doesn't change the lifetime semantics of module instances, so this trait doesn't need a <code>deallocate</code> method as it is assumed a store owns the returned instance.  When the store gets dropped, all associated instances will be deallocated like they are today.</p>\n<p>This differs from the runtime <code>InstanceAllocator</code> trait as there's no concept of store there and handles are what are being allocated and deallocated.</p>\n</blockquote>",
        "id": 218349663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606772223
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532919351\">PR Review Comment</a>.</p>",
        "id": 218350022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606772409
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532941996\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I feel like I'm missing something or we are talking past each other, sorry: When a store is dropped, doesn't the instance pool need to know that each of the store's instance's memory ranges are available for reuse now?</p>\n</blockquote>",
        "id": 218354939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606774938
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541342902\">PR Review</a>.</p>",
        "id": 218354940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606774938
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541343324\">PR Review</a>.</p>",
        "id": 218355037,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606774990
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532942351\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Actually, I'm going to remove this field, along with the <code>initialize</code> and <code>dealloc</code> methods on <code>InstanceHandle</code> in favor of just calling on the allocator directly rather than shimming through the handle this way.</p>\n</blockquote>",
        "id": 218355038,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606774991
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532942351\">PR Review Comment</a>.</p>",
        "id": 218356303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606775675
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541354321\">PR Review</a>.</p>",
        "id": 218357122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606776180
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532951540\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It will via <code>InstanceHandle::dealloc</code> which is currently calling the associated allocator to deallocate the instance.  The pool then will know what associated memories and tables to put back on the free list.</p>\n<p>I'm trying to remove the <code>allocator</code> field of <code>InstanceHandle</code> though since I don't like storing this unsafe back pointer to the allocator.</p>\n</blockquote>",
        "id": 218357123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606776180
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532951540\">PR Review Comment</a>.</p>",
        "id": 218357166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606776207
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532951540\">PR Review Comment</a>.</p>",
        "id": 218357179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606776218
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541359535\">PR Review</a>.</p>",
        "id": 218358019,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606776777
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532955921\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Okay and that <code>dealloc</code> call fowards to <code>wasmtime_runtime::InstanceAllocator::deallocate</code>, but that doesn't have a corresponding method in the public <code>wasmtime::InstanceAllocator</code> trait. Do we expect the instance pool to use the internal <code>wasmtime-runtime</code> APIs instead of the public <code>wasmtime</code> APIs? Do we expect any implementations of <code>InstanceAllocator</code> other than the default and the instance pool? Do we expect to eventually add a <code>deallocate</code> method to <code>wasmtime::InstanceAllocator</code> as well?</p>\n</blockquote>",
        "id": 218358021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606776777
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541363472\">PR Review</a>.</p>",
        "id": 218358734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606777250
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532959270\">PR Review Comment</a>:</p>\n<blockquote>\n<p>What I'd like to do is remove the <code>InstanceAllocator</code> and <code>DefaultInstanceAllocator</code> types from the <code>wasmtime</code> crate in favor of <code>Config</code> taking a <code>Arc&lt;dyn wasmtime_runtime::InstanceAllocator&gt;</code> directly.  This would both simply things and help me remove this back pointer from <code>wasmtime_runtime::Instance</code> to the allocator that created the instance so that deallocation can be handled directly from the drop implementation of <code>Store</code>.</p>\n<p>I would then like to open up the construction of <code>wasmtime_runtime::Instance</code> and <code>wasmtime_runtime::InstanceHandle</code> such that instance allocators could be implemented in crates other than <code>wasmtime_runtime</code>.</p>\n<p>However, given our stance on <code>wasmtime</code> being the crate we offer semantic versioning and <code>wasmtime_runtime</code> being an implementation details crate, I don't know if this is feasible to do.</p>\n</blockquote>",
        "id": 218358735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606777250
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532959270\">PR Review Comment</a>.</p>",
        "id": 218358891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606777333
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors module instantiation in the runtime to allow for<br>\ndifferent allocator implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>DefaultInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocator set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This commit also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218370776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786318
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541424406\">PR Review</a>.</p>",
        "id": 218370884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786421
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r533014603\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This field has now been removed.</p>\n</blockquote>",
        "id": 218370885,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786421
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541424590\">PR Review</a>.</p>",
        "id": 218370948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786453
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r533014801\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This field has now been removed.</p>\n<p>Where instance handles are created for host objects, the default instance allocator is explicitly used with a comment.</p>\n</blockquote>",
        "id": 218370949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786453
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541424722\">PR Review</a>.</p>",
        "id": 218370969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786476
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r533014946\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The config no longer stores both the configured instance allocator and the default allocator.</p>\n</blockquote>",
        "id": 218370970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786476
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-541425156\">PR Review</a>.</p>",
        "id": 218371026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786551
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r533015352\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've went ahead with an enum-based solution to the problem as discussed on the RFC (which I'll be amending shortly).</p>\n<p>As such, the <code>InstanceAllocator</code> trait has been removed from the <code>wasmtime</code> crate.</p>\n</blockquote>",
        "id": 218371027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786552
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r532914433\">PR Review Comment</a>.</p>",
        "id": 218371112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606786627
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors module instantiation in the runtime to allow for<br>\ndifferent allocator implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>DefaultInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocator set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This commit also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218371664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606787185
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors module instantiation in the runtime to allow for<br>\ndifferent allocator implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>DefaultInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocator set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This commit also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218472486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606852388
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors module instantiation in the runtime to allow for<br>\ndifferent allocator implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>DefaultInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocator set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This commit also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218476736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606854461
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit refactors module instantiation in the runtime to allow for<br>\ndifferent allocator implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>DefaultInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocator set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This commit also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218479540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606855843
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218479642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606855905
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218480195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606856155
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218481779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606856862
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-543279175\">PR Review</a>.</p>",
        "id": 218627138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606946974
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-543279175\">PR Review</a>.</p>",
        "id": 218627139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606946974
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r534515230\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW <code>Box::new(SomeZst) as Box&lt;dyn Any&gt;</code> doesn't actually allocate anything, so if the purpose of this was to eschew allocations I think it's fine to leave this without the <code>Option</code>?</p>\n</blockquote>",
        "id": 218627140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606946975
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-543282436\">PR Review</a>.</p>",
        "id": 218627894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606947285
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r534517864\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It wasn't to elide an allocation, but to take the host state out of the instance allocation request when creating the instance handle and passing the remainder of the request to <code>initialize_vmcontext</code>.</p>\n<p>I'm happy to undo this change and just splat what's needed from the request as discrete arguments to <code>initialize_vmcontext</code>.</p>\n</blockquote>",
        "id": 218627895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606947285
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r534517864\">PR Review Comment</a>.</p>",
        "id": 218627973,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606947327
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-543286713\">PR Review</a>.</p>",
        "id": 218628628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606947725
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r534521372\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah ok that seems fine to leave as-is in that case!</p>\n</blockquote>",
        "id": 218628630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606947725
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r534517864\">PR Review Comment</a>.</p>",
        "id": 218628685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606947763
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218754258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607029462
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-544447685\">PR Review</a>.</p>",
        "id": 218754328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607029502
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r535616802\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Given the latest changes to module linking which I've now rebased on, this is back to being <code>Box&lt;dyn Any&gt;</code>.</p>\n</blockquote>",
        "id": 218754330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607029502
    },
    {
        "content": "<p><strong>peterhuene</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> as ready for review.</p>",
        "id": 218754367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607029518
    },
    {
        "content": "<p>peterhuene submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#pullrequestreview-544449649\">PR Review</a>.</p>",
        "id": 218754643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607029671
    },
    {
        "content": "<p>peterhuene created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454#discussion_r535620318\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Whoops, this comment accidentally got removed during the rebase.  Adding it back now.</p>\n</blockquote>",
        "id": 218754644,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607029671
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 218754821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607029768
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219176278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607409973
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219177022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607411006
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219262017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607461282
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219281344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607472229
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219376522,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607538048
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219378169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607538767
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219926896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607995127
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 219926961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607995202
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 220082345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608100695
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 220170386,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608151447
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 220172784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608152625
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 220175264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608154022
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 223697829,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1611348524
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 223698838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1611348995
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 223699858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1611349438
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 224524497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1611949960
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n</blockquote>",
        "id": 225105891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612399977
    },
    {
        "content": "<p>peterhuene edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225105931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612400014
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225106209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612400243
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225108029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612401693
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225108615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612402249
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225112855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612406684
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225222586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612472849
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225222737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612472909
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225223004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612473030
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225223593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612473356
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225225398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612474165
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225227017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612474800
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225357976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612559358
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225361204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612561047
    },
    {
        "content": "<p>peterhuene updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a> from <code>instance-pooling</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR refactors module instantiation in the runtime to allow for<br>\ndifferent instance allocation strategy implementations.</p>\n<p>It adds an <code>InstanceAllocator</code> trait with the current implementation put behind<br>\nthe <code>OnDemandInstanceAllocator</code> struct.</p>\n<p>The Wasmtime API has been updated to allow a <code>Config</code> to have an instance<br>\nallocation strategy set which will determine how instances get allocated.</p>\n<p>This change is in preparation for an alternative <em>pooling</em> instance allocator<br>\nthat can reserve all needed host process address space in advance.</p>\n<p>This PR also makes changes to the <code>wasmtime_environ</code> crate to represent<br>\ncompiled modules in a way that reduces copying at instantiation time.</p>\n<p>See <a href=\"https://github.com/bytecodealliance/rfcs/issues/5\">bytecodealliance/rfcs#5</a> about these proposed changes.</p>\n<p>This PR depends on #2434.</p>\n</blockquote>",
        "id": 225363101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612562194
    },
    {
        "content": "<p>peterhuene closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2454\">PR #2454</a>.</p>",
        "id": 225951200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1613022535
    }
]