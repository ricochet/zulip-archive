[
    {
        "content": "<p>teapotd opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1651\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1651\">Issue #1651</a>:</p>\n<blockquote>\n<p>In <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\" title=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">Microsoft x64 calling convention</a> arguments larger than pointer width are passed by reference:</p>\n<blockquote>\n<p>Any argument that doesn't fit in 8 bytes, or isn't 1, 2, 4, or 8 bytes, must be passed by reference. A single argument is never spread across multiple registers. [...] 16-byte arguments are passed by reference.</p>\n</blockquote>\n<p>This means caller should allocate argument on stack and pass pointer to it instead of value in appropriate register/stack slot. Cranelift currently incorrently does the same thing as System V - splits values or pass them in vector registers. See also <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451\">https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451</a>.</p>\n<p>[1] <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\" title=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention</a></p>\n</blockquote>",
        "id": 196217700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588615478
    },
    {
        "content": "<p>teapotd labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1651\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1651\">Issue #1651</a>:</p>\n<blockquote>\n<p>In <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\" title=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">Microsoft x64 calling convention</a> arguments larger than pointer width are passed by reference:</p>\n<blockquote>\n<p>Any argument that doesn't fit in 8 bytes, or isn't 1, 2, 4, or 8 bytes, must be passed by reference. A single argument is never spread across multiple registers. [...] 16-byte arguments are passed by reference.</p>\n</blockquote>\n<p>This means caller should allocate argument on stack and pass pointer to it instead of value in appropriate register/stack slot. Cranelift currently incorrently does the same thing as System V - splits values or pass them in vector registers. See also <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451\">https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451</a>.</p>\n<p>[1] <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\" title=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention</a></p>\n</blockquote>",
        "id": 196217701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588615478
    },
    {
        "content": "<p>teapotd labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1651\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1651\">Issue #1651</a>:</p>\n<blockquote>\n<p>In <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\" title=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">Microsoft x64 calling convention</a> arguments larger than pointer width are passed by reference:</p>\n<blockquote>\n<p>Any argument that doesn't fit in 8 bytes, or isn't 1, 2, 4, or 8 bytes, must be passed by reference. A single argument is never spread across multiple registers. [...] 16-byte arguments are passed by reference.</p>\n</blockquote>\n<p>This means caller should allocate argument on stack and pass pointer to it instead of value in appropriate register/stack slot. Cranelift currently incorrently does the same thing as System V - splits values or pass them in vector registers. See also <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451\">https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451</a>.</p>\n<p>[1] <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\" title=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention</a></p>\n</blockquote>",
        "id": 196217702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588615478
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1651#issuecomment-623617359\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1651#issuecomment-623617359\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1651\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1651\">Issue #1651</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 196217722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588615495
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1651\">Issue #1651</a>:</p>\n<blockquote>\n<p>In <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">Microsoft x64 calling convention</a> arguments larger than pointer width are passed by reference:</p>\n<blockquote>\n<p>Any argument that doesn't fit in 8 bytes, or isn't 1, 2, 4, or 8 bytes, must be passed by reference. A single argument is never spread across multiple registers. [...] 16-byte arguments are passed by reference.</p>\n</blockquote>\n<p>This means caller should allocate argument on stack and pass pointer to it instead of value in appropriate register/stack slot. Cranelift currently incorrently does the same thing as System V - splits values or pass them in vector registers. See also <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451\">https://github.com/bytecodealliance/wasmtime/pull/1510#issuecomment-614770451</a>.</p>\n<p>[1] <a href=\"https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention\">https://docs.microsoft.com/en-us/cpp/build/x64-calling-convention</a></p>\n</blockquote>",
        "id": 199403510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591035212
    }
]