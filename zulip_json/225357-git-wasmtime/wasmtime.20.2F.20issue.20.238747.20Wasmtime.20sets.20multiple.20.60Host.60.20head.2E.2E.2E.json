[
    {
        "content": "<p>karthik2804 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>It appears that wasmtime's implementation of outbound calls using <code>wasi-http</code> unconditionally set the <code>Host</code> header <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2fbc40ae3da0c1bad6f564c32eb240ec27632217/crates/wasi-http/src/http_impl.rs#L67\">here</a>. It then appears to iterate over the headers provided by the guest <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2fbc40ae3da0c1bad6f564c32eb240ec27632217/crates/wasi-http/src/http_impl.rs#L79-L81\">here</a> leading to there being multiple host headers when the guest automatically sets a host header which is the case for apps built using {StarlingMonkey](<a href=\"https://github.com/bytecodealliance/starlingmonkey\">https://github.com/bytecodealliance/starlingmonkey</a>). </p>\n<p>This leads to certain servers rejecting the request because of duplicate headers. Should the guest not be setting a header or should wasmtime only set it conditionally? </p>\n</blockquote>",
        "id": 442766069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717588599
    },
    {
        "content": "<p>rylev <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747#issuecomment-2149683289\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>One additional piece of context is that it seems that StarlingMonkey is setting the <code>HOST</code> header to the host without the port while <code>wasi-http</code> sets it to the host <em>and</em> port. If doing de-duplication of the <code>HOST</code> header, we should treat hosts without parts as equal to hosts with ports if the port matches the default port for the scheme.</p>\n</blockquote>",
        "id": 442769823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717589619
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>It appears that wasmtime's implementation of outbound calls using <code>wasi-http</code> unconditionally set the <code>Host</code> header <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2fbc40ae3da0c1bad6f564c32eb240ec27632217/crates/wasi-http/src/http_impl.rs#L67\">here</a>. It then appears to iterate over the headers provided by the guest <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2fbc40ae3da0c1bad6f564c32eb240ec27632217/crates/wasi-http/src/http_impl.rs#L79-L81\">here</a> leading to there being multiple host headers when the guest automatically sets a host header which is the case for apps built using <a href=\"https://github.com/bytecodealliance/starlingmonkey\">StarlingMonkey</a>. </p>\n<p>This leads to certain servers rejecting the request because of duplicate headers. Should the guest not be setting a header or should wasmtime only set it conditionally? </p>\n</blockquote>",
        "id": 442803519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717597679
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747#issuecomment-2150195686\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>Wasmtime in theory should be stripping the host header <a href=\"https://github.com/bytecodealliance/wasmtime/blob/fa84dd83ba0f5c45bf0174bb5f988c215d848cfe/crates/wasi-http/src/types.rs#L115-L149\">via functionality like this</a>. The issue of setting the host and port should be fixed through <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8563\">https://github.com/bytecodealliance/wasmtime/pull/8563</a> (which required a follow-up fix at <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8671\">https://github.com/bytecodealliance/wasmtime/pull/8671</a>, but both should be in the 21.0.0 release).</p>\n<p>Auditing a bit it looks like any guest-specified header goes through filtering before being inserted into <code>req.headers</code>, so now I'm also a bit confused how a second one could show up there.</p>\n<p>Do you have an example guest which runs afoul of the double-host header?</p>\n</blockquote>",
        "id": 442804784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717597981
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747#issuecomment-2150196502\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>(and/or were y'all testing with 21.0.0? or an older version?)</p>\n</blockquote>",
        "id": 442804830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717597994
    },
    {
        "content": "<p>karthik2804 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747#issuecomment-2150222019\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>We were testing with version <code>18.0.4</code>.</p>\n</blockquote>",
        "id": 442806194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717598371
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747#issuecomment-2150264396\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>Aha ok makes sense! The <code>Host</code> header was made \"forbidden\" in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7905\">https://github.com/bytecodealliance/wasmtime/pull/7905</a> which was first landed in 19.0.x so I think this might be fixed with a wasmtime upgrade?</p>\n</blockquote>",
        "id": 442808792,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717599013
    },
    {
        "content": "<p>karthik2804 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747#issuecomment-2173181889\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>I can confirm that this issue has been fixed by upgrading to wasmtime 21.</p>\n</blockquote>",
        "id": 445114475,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718625083
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8747\">issue #8747</a>:</p>\n<blockquote>\n<p>It appears that wasmtime's implementation of outbound calls using <code>wasi-http</code> unconditionally set the <code>Host</code> header <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2fbc40ae3da0c1bad6f564c32eb240ec27632217/crates/wasi-http/src/http_impl.rs#L67\">here</a>. It then appears to iterate over the headers provided by the guest <a href=\"https://github.com/bytecodealliance/wasmtime/blob/2fbc40ae3da0c1bad6f564c32eb240ec27632217/crates/wasi-http/src/http_impl.rs#L79-L81\">here</a> leading to there being multiple host headers when the guest automatically sets a host header which is the case for apps built using <a href=\"https://github.com/bytecodealliance/starlingmonkey\">StarlingMonkey</a>. </p>\n<p>This leads to certain servers rejecting the request because of duplicate headers. Should the guest not be setting a header or should wasmtime only set it conditionally? </p>\n</blockquote>",
        "id": 445176599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718642303
    }
]