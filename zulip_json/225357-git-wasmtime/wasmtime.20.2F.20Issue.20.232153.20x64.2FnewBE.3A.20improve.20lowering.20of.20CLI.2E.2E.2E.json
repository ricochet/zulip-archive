[
    {
        "content": "<p>julian-seward1 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2153\">Issue #2153</a>:</p>\n<blockquote>\n<p>PR #2149 provides an initial implementation of wasm atomics with x64/newBE.  That includes an initial lowering of CLIF <code>AtomicRmw</code> into a multi-instruction sequence that is general, but inefficient in the case where the old value at the location is not required, which is probably a common occurrence.  In such cases we could do much better by producing a single LOCK-prefixed integer read-modify-write instruction, for example <code>lock xorq $27, (amode)</code>.</p>\n</blockquote>",
        "id": 207614375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1598001903
    },
    {
        "content": "<p>bnjbvr labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2153\">Issue #2153</a>:</p>\n<blockquote>\n<p>PR #2149 provides an initial implementation of wasm atomics with x64/newBE.  That includes an initial lowering of CLIF <code>AtomicRmw</code> into a multi-instruction sequence that is general, but inefficient in the case where the old value at the location is not required, which is probably a common occurrence.  In such cases we could do much better by producing a single LOCK-prefixed integer read-modify-write instruction, for example <code>lock xorq $27, (amode)</code>.</p>\n</blockquote>",
        "id": 211134238,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600955728
    },
    {
        "content": "<p>bnjbvr labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2153\">Issue #2153</a>:</p>\n<blockquote>\n<p>PR #2149 provides an initial implementation of wasm atomics with x64/newBE.  That includes an initial lowering of CLIF <code>AtomicRmw</code> into a multi-instruction sequence that is general, but inefficient in the case where the old value at the location is not required, which is probably a common occurrence.  In such cases we could do much better by producing a single LOCK-prefixed integer read-modify-write instruction, for example <code>lock xorq $27, (amode)</code>.</p>\n</blockquote>",
        "id": 211134239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600955728
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2153#issuecomment-698360706\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2153\">Issue #2153</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 211134265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600955742
    }
]