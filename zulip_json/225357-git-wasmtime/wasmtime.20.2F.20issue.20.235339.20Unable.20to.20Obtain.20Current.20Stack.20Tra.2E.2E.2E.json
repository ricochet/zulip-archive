[
    {
        "content": "<p>jtenner opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p>Hey! I am trying to obtain the current stack trace without invoking a panic, inside a linked function.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// this is awesome!</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Backtrace</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I can access the stack frames using <code>Backtrace::new()</code> but I can't really do anything with it because all the functions that translate these into function names and strings are <code>pub(crate)</code> and internal to wasmtime.</p>\n<p>Is there perhaps a safe way to obtain the current stack trace without calling a wasm function that executes an unreachable() instruction?</p>\n</blockquote>",
        "id": 312755736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669688270
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339#issuecomment-1330805584\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p>While not currently possible now I opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5341\">https://github.com/bytecodealliance/wasmtime/pull/5341</a> to expose a method for doing this.</p>\n</blockquote>",
        "id": 312864844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669734857
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p>Hey! I am trying to obtain the current stack trace without invoking a panic, inside a linked function.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// this is awesome!</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Backtrace</span>::<span class=\"n\">new</span><span class=\"p\">();</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I can access the stack frames using <code>Backtrace::new()</code> but I can't really do anything with it because all the functions that translate these into function names and strings are <code>pub(crate)</code> and internal to wasmtime.</p>\n<p>Is there perhaps a safe way to obtain the current stack trace without calling a wasm function that executes an unreachable() instruction?</p>\n</blockquote>",
        "id": 313389396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669933150
    },
    {
        "content": "<p>jtenner <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339#issuecomment-1339734045\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p>@alexcrichton it looks like the <code>WasmBacktrace::new()</code> function is private and not exposed. Can I get some help with this?<br>\n</p>\n</blockquote>",
        "id": 314286673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670348091
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339#issuecomment-1339861225\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p>Ah sorry I forgot to update the PR title, the constructor is <code>WasmBacktrace::capture</code> now.</p>\n</blockquote>",
        "id": 314308212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670354431
    },
    {
        "content": "<p>jtenner <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339#issuecomment-1339994520\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0599</span><span class=\"p\">]</span>: <span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">associated</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"n\">named</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">capture</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"err\">`</span><span class=\"n\">WasmBacktrace</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">current</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">lunatic</span><span class=\"o\">-</span><span class=\"n\">process</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">805</span>:<span class=\"mi\">36</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">805</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">WasmBacktrace</span>::<span class=\"n\">capture</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">|</span><span class=\"w\">                                    </span><span class=\"o\">^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">associated</span><span class=\"w\"> </span><span class=\"n\">item</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WasmBacktrace</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 314324806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670360124
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339#issuecomment-1340028901\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p>Are you using <code>main</code> or the <code>release-4.0.0</code> branch? This feature isn't present in any crates.io-based release of Wasmtime yet.</p>\n</blockquote>",
        "id": 314329581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670361997
    },
    {
        "content": "<p>jtenner <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339#issuecomment-1340341202\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5339\">issue #5339</a>:</p>\n<blockquote>\n<p>@alexcrichton I'm downstream using lunatic on version 3.0.1 so that explains why the feature wasn't present. My mistake.</p>\n</blockquote>",
        "id": 314373242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670385672
    }
]