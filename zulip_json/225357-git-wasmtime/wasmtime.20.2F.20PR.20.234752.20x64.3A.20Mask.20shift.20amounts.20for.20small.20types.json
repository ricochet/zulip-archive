[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a> from <code>x64-fix-shifts</code> to <code>main</code>:</p>\n<blockquote>\n<p>This was reported by @bjorn3 in <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/pull/1268#issuecomment-1223916783\">https://github.com/bjorn3/rustc_codegen_cranelift/pull/1268#issuecomment-1223916783</a> when we tried to remove the explicit shift amount masking done by <code>cg_clif</code>.</p>\n<p>As a consequence of this fix, #4699 is also fixed, which is nice!</p>\n<p>This PR also does some other housekeeping:</p>\n<ul>\n<li>Enables <code>i128</code> shifts in the fuzzer</li>\n<li>Enables the <code>i128-shifts-small-types.clif</code> runtests and moves them to <code>i128-shifts.clif</code></li>\n<li>Adds run tests that trigger the issue above (which is similar, but not the same as the <code>i128</code> one)</li>\n<li>Adds compile tests for all forms of <code>ishl</code>/<code>sshr</code>/<code>ushr</code></li>\n</ul>\n<p>Fixes: #4699<br>\ncc: @elliottt</p>\n</blockquote>",
        "id": 294876875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661264965
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#pullrequestreview-1082450538\">PR review</a>.</p>",
        "id": 294904059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661272139
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#pullrequestreview-1082450538\">PR review</a>.</p>",
        "id": 294904060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661272139
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#discussion_r952820974\">PR review comment</a>:</p>\n<blockquote>\n<p>Was this priority necessary for correct output? I think it should be fine to omit it.</p>\n</blockquote>",
        "id": 294904061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661272139
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#pullrequestreview-1082509043\">PR review</a>.</p>",
        "id": 294906163,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661272845
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#discussion_r952870231\">PR review comment</a>:</p>\n<blockquote>\n<p>Not really, but I've had issues with priorities, so now I'm a bit paranoid about it. I'll remove it</p>\n</blockquote>",
        "id": 294906164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661272845
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a> from <code>x64-fix-shifts</code> to <code>main</code>.</p>",
        "id": 294906812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661273045
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a> from <code>x64-fix-shifts</code> to <code>main</code>.</p>",
        "id": 294907528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661273301
    },
    {
        "content": "<p>jameysharp has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a>.</p>",
        "id": 294910970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661274464
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#pullrequestreview-1082667322\">PR review</a>.</p>",
        "id": 294926087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661279955
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#discussion_r952989053\">PR review comment</a>:</p>\n<blockquote>\n<p>I want to see if I understand why this PR fixes this issue. Could you confirm or correct my interpretation?</p>\n<p>It looks like there are two bugs in <code>put_masked_in_imm8_gpr</code>, and I gather that these bugs aren't present in the similar-looking ISLE rules.</p>\n<p>If the shift amount is not defined by an <code>iconst</code> instruction, then this function doesn't mask it at all...? The only thing it does is, if the shift amount needs two registers because it's an i128, then it only takes the lower 64-bit register.</p>\n<p>If it is a constant, then it's masked by <code>(1 &lt;&lt; ty.bits()) - 1</code>. So for an 8-bit LHS, the shift amount is used modulo 256, but it's actually supposed to be modulo 8. For a 64-bit LHS the shift amount is effectively not masked at all. By contrast, the <code>shift_mask</code> function just returns <code>ty.lane_bits() - 1</code> so it gets this right. (And also handles vector types correctly, I guess?)</p>\n<p>I guess the reason these bugs weren't obvious sooner is that wasm only uses i32 and i64 types, and x86 already masks 32-bit and 64-bit shift amounts to 5 and 6 bits, respectively. But narrower 8-bit and 16-bit shifts are also masked to 5 bits on x86, so those were wrong.</p>\n<p>Now that I think I understand this, I'm wondering how hard it is in ISLE to avoid emitting the <code>and</code> instruction when the type is i32 or i64.</p>\n</blockquote>",
        "id": 294926088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661279955
    },
    {
        "content": "<p>jameysharp has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a>.</p>",
        "id": 294926307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661280023
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#pullrequestreview-1082686384\">PR review</a>.</p>",
        "id": 294928471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661280950
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#discussion_r953002503\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>If the shift amount is not defined by an iconst instruction, then this function doesn't mask it at all...? The only thing it does is, if the shift amount needs two registers because it's an i128, then it only takes the lower 64-bit register.</p>\n</blockquote>\n<p>Yes, the source of the issue I was trying to fix was exactly this.</p>\n<blockquote>\n<p>It looks like there are two bugs in put_masked_in_imm8_gpr, and I gather that these bugs aren't present in the similar-looking ISLE rules.</p>\n</blockquote>\n<p>Wow! I was just trying to fix the unmasked non const one, didn't actually realize that the const case didn't do the right thing either!</p>\n<p>We should probably add some <code>shift_imm</code> test cases as well.</p>\n<blockquote>\n<p>Now that I think I understand this, I'm wondering how hard it is in ISLE to avoid emitting the and instruction when the type is i32 or i64.</p>\n</blockquote>\n<p>I think that's a good improvement, i'll push it soon.</p>\n</blockquote>",
        "id": 294928472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661280950
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#discussion_r953002503\">PR review comment</a>.</p>",
        "id": 294929122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661281215
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a> from <code>x64-fix-shifts</code> to <code>main</code>.</p>",
        "id": 295014389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661335513
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#pullrequestreview-1083520199\">PR review</a>.</p>",
        "id": 295014685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661335615
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752#discussion_r953606870\">PR review comment</a>:</p>\n<blockquote>\n<p>And it turns out the const case was also wrong. Great Catch!</p>\n</blockquote>",
        "id": 295014686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661335615
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a> from <code>x64-fix-shifts</code> to <code>main</code>.</p>",
        "id": 295016652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661336489
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4752\">PR #4752</a>.</p>",
        "id": 295093714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661362299
    }
]