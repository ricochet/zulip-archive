[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646131224\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 201290033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592496678
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646183722\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Thanks for the PR! I'm curious, though, how did this turn into an error? We're compiling the C examples on CI which in theory would catch this. Is there a way we can catch this on our own CI?</p>\n</blockquote>",
        "id": 201298398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592500284
    },
    {
        "content": "<p>AlexEne <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646186419\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I just tried to use this in my project. I am surprised that the C examples compile in your CI? <br>\nI'm using clang on OSX and was basically going through the example code trying to instantiate a VM.  <br>\nMaybe it gets ignored on certain compilers if the symbol isn't referenced at all?</p>\n</blockquote>",
        "id": 201298747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592500462
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646186419\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I just tried to use this in my project. I am surprised that the C examples compile in your CI? <br>\nI'm using clang on OSX and was basically going through the example code trying to instantiate a VM.  <br>\nMaybe it gets ignored on certain compilers if the symbol isn't referenced at all?</p>\n<p>Also I'm compiling it as C++, not C, maybe it's allowed in C?</p>\n</blockquote>",
        "id": 201299082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592500623
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646186419\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I'm using clang on OSX and was basically going through the example code trying to instantiate a VM.  </p>\n<p>Also I'm compiling it as C++, not C, maybe it's allowed in C?</p>\n</blockquote>",
        "id": 201299319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592500746
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646186419\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I'm using clang on OSX and was basically going through the example code trying to instantiate a VM.  </p>\n<p>Also I'm compiling it as C++, not C, maybe it's allowed in C? if that's the case just compiling the examples as C++ should do the trick.</p>\n</blockquote>",
        "id": 201299946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592501064
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646186419\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I'm using clang on OSX and was basically going through the example code trying to instantiate a VM.  </p>\n<p>Also I'm compiling it as C++, not C, maybe it's allowed in C? if that's the case just compiling the examples as C++ should do the trick.</p>\n<p>That being said, I was looking at the current CI run for this PR and I can't find where the examples are compiled.</p>\n</blockquote>",
        "id": 201302036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502073
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646211464\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Hm we're compiling the examples on macOS as well, so we should see it there if it's an issue. Do you perhaps have some extra warnings or such turned on which would cause this to be an error?</p>\n</blockquote>",
        "id": 201302396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502203
    },
    {
        "content": "<p>AlexEne <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646212978\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I do have warnings set as errors, however this looks like it's a hard error, not a warning: </p>\n<div class=\"codehilite\"><pre><span></span><code>In file included from myfile.cpp:2:\nwasmtime/crates/c-api/include/wasmtime.h:42:6: error: definition of type &#39;wasmtime_profiling_strategy_t&#39; conflicts with typedef of the same name\nenum wasmtime_profiling_strategy_t { // ProfilingStrategy\n     ^\nwasmtime/crates/c-api/include/wasmtime.h:41:17: note: &#39;wasmtime_profiling_strategy_t&#39; declared here\ntypedef uint8_t wasmtime_profiling_strategy_t;\n</code></pre></div>\n\n\n</blockquote>",
        "id": 201302796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502382
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646212978\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I do have warnings set as errors, however this looks like it's a hard error, not a warning: </p>\n<div class=\"codehilite\"><pre><span></span><code>In file included from myfile.cpp:2:\nwasmtime/crates/c-api/include/wasmtime.h:42:6: error: definition of type &#39;wasmtime_profiling_strategy_t&#39; conflicts with typedef of the same name\nenum wasmtime_profiling_strategy_t { // ProfilingStrategy\n     ^\nwasmtime/crates/c-api/include/wasmtime.h:41:17: note: &#39;wasmtime_profiling_strategy_t&#39; declared here\ntypedef uint8_t wasmtime_profiling_strategy_t;\n</code></pre></div>\n\n\n<p>I was looking through the tests that run on this PR, but can't find any reference of compiling the examples (it's a long log :D) <a href=\"https://pipelines.actions.githubusercontent.com/ceoZblEsqJYG99Z8v3Kua3u5YSq6xmgwoMNvYfC5How3o8shjd/_apis/pipelines/1/runs/39807/signedlogcontent/26?urlExpires=2020-06-18T17%3A48%3A21.3835673Z&amp;urlSigningMethod=HMACV1&amp;urlSignature=haTCuoUHaScfQ3HsHjt2sR7t0baZqGOInfcIxUaV95g%3D\">https://pipelines.actions.githubusercontent.com/ceoZblEsqJYG99Z8v3Kua3u5YSq6xmgwoMNvYfC5How3o8shjd/_apis/pipelines/1/runs/39807/signedlogcontent/26?urlExpires=2020-06-18T17%3A48%3A21.3835673Z&amp;urlSigningMethod=HMACV1&amp;urlSignature=haTCuoUHaScfQ3HsHjt2sR7t0baZqGOInfcIxUaV95g%3D</a></p>\n</blockquote>",
        "id": 201303031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502529
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646212978\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I do have warnings set as errors, however this looks like it's a hard error, not a warning: </p>\n<div class=\"codehilite\"><pre><span></span><code>In file included from myfile.cpp:2:\nwasmtime/crates/c-api/include/wasmtime.h:42:6: error: definition of type &#39;wasmtime_profiling_strategy_t&#39; conflicts with typedef of the same name\nenum wasmtime_profiling_strategy_t { // ProfilingStrategy\n     ^\nwasmtime/crates/c-api/include/wasmtime.h:41:17: note: &#39;wasmtime_profiling_strategy_t&#39; declared here\ntypedef uint8_t wasmtime_profiling_strategy_t;\n</code></pre></div>\n\n\n<p>I was looking through the tests that run on this PR, but can't find any reference of compiling the examples (it's a long log :D), what is the exact step that should do it?</p>\n</blockquote>",
        "id": 201303082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502556
    },
    {
        "content": "<p>AlexEne <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646215698\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Just to clarify this is an error when compiling a host VM that's written in C++ that wants to use WASMTime, not an error in compiling C-&gt;WASM (I did find some of these tested in the nightly runs).</p>\n</blockquote>",
        "id": 201303393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502711
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646215698\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Just to clarify this is an error when compiling a host VM that's written in C++ that wants to use WASMTime's C bindings, not an error in compiling C-&gt;WASM (I did find some of these tested in the nightly runs).</p>\n</blockquote>",
        "id": 201303478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502743
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646215698\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Just to clarify this is an error when compiling a host VM that's written in C++ that wants to use WASMTime's through it's C bindings, not an error in compiling C-&gt;WASM (I did find some of these tested in the nightly runs).</p>\n</blockquote>",
        "id": 201303551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592502781
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646231271\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>This is indeed illegal in C++ and we don't have any examples that include <code>wasmtime.h</code> from a C++ source file (clang and gcc both use the file extension to default the language).</p>\n<p>We should probably add a <code>hello.cc</code> to <code>examples/</code> to catch this in CI.</p>\n</blockquote>",
        "id": 201307025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592504623
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646231271\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>This is indeed illegal in C++ and we don't have any examples that include <code>wasmtime.h</code> from a C++ source file (clang and gcc both use the file extension to default the language).</p>\n<p>We should probably add a <code>hello.cc</code> to <code>examples/</code> to catch this in CI.</p>\n<p>@AlexEne would you mind adding one in this PR?</p>\n</blockquote>",
        "id": 201307135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592504666
    },
    {
        "content": "<p>AlexEne <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646243793\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I added a new file, I wanted initially to just rename <code>hello.c</code> -&gt; <code>hello.cc</code>, but I noticed that you refernce it in some places as a C example and I don't know how strongly you feel about C/C++ distinction so I left both in there.</p>\n</blockquote>",
        "id": 201310078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592506178
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646257429\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Ah nice find! I think though to run these examples we'll need to add support <a href=\"https://github.com/bytecodealliance/wasmtime/blob/f84903fa430228afe4306e7b1bf5a57ace0d4497/crates/misc/run-examples/src/main.rs#L54-L70\">to this runner</a> as well.</p>\n</blockquote>",
        "id": 201313699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592507914
    },
    {
        "content": "<p>AlexEne <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646273922\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Ah, so that's where it was, I will add it to the file.</p>\n</blockquote>",
        "id": 201317898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592510066
    },
    {
        "content": "<p>AlexEne <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646349663\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I've added a way for tests to also compile and run any <code>.cc</code> files found, in additon to the <code>.c</code> files. The C++ files are optional so if none are found they are skipped, but if  <code>.c</code> files are missing tests will fail as before.</p>\n<p>Output:</p>\n<div class=\"codehilite\"><pre><span></span><code>======== C/C++ example `hello` ============\nRunning for file: &quot;examples/hello.c&quot;\nInitializing...\nLoading binary...\nCompiling module...\nInstantiating module...\nExtracting export...\nCalling fib...\n&gt; fib(6) = 21\nShutting down...\nDone.\nRunning for file: &quot;examples/hello.cc&quot;\nGenerating Code...\nCompiling...\nGenerating Code...\nhello.obj : warning LNK4042: object specified more than once; extras ignored\nInitializing...\nLoading binary...\nCompiling module...\nInstantiating module...\nExtracting export...\nCalling fib...\n&gt; fib(6) = 21\nShutting down...\nDone.\n</code></pre></div>\n\n\n</blockquote>",
        "id": 201336690,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592521850
    },
    {
        "content": "<p>AlexEne edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646349663\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>I've added a way for tests to also compile and run any <code>.cc</code> files found, in additon to the <code>.c</code> files. The C++ files are optional so if none are found they are skipped, but if  <code>.c</code> files are missing tests will fail as before.</p>\n<p>Output:</p>\n<div class=\"codehilite\"><pre><span></span><code>======== C/C++ example `hello` ============\nhello.c\nInitializing...\nLoading binary...\nCompiling module...\nInstantiating module...\nExtracting export...\nCalling fib...\n&gt; fib(6) = 21\nShutting down...\nDone.\nhello.cc\nInitializing...\nLoading binary...\nCompiling module...\nInstantiating module...\nExtracting export...\nCalling fib...\n&gt; fib(6) = 21\nShutting down...\n</code></pre></div>\n\n\n</blockquote>",
        "id": 201336955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592522049
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899#issuecomment-646451592\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1899\">Issue #1899</a>:</p>\n<blockquote>\n<p>Thanks for fixing this and adding a test case!</p>\n</blockquote>",
        "id": 201355287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592546384
    }
]