[
    {
        "content": "<p>elliottt edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1350232610\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<p>@uweigand I've reworked this a bit more to avoid the changes to VCode. The problem was that there was a move using a fixed non-allocatable register produced by the s390x backend in the <code>casloop_emit</code> function. I've reworked this to use <code>MovPReg</code>, which is designed to handle fixed non-allocatable sources, but this does introduce some additional indirection for the result when in <code>littleendian</code> mode.</p>\n</blockquote>",
        "id": 315722652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670982981
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1350240200\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Actually, reading your latest update: I think that what is actually needed here is for <code>MachInst::is_move()</code> to return a correct result with respect to real/virtual registers. Otherwise we have an inconsistency that may cause issues elsewhere (and are not addressed by papering over one callsite to <code>MachInst::is_move</code> with alternative logic).</p>\n</blockquote>\n<p>The changes to <code>VCode</code> and <code>MachInst</code> ended up being a red-herring: the real problem as we discussed in a DM was that there were move instructions emitted that were using fixed non-allocatable registers at all. Switching to <code>MInst.MovPreg</code> instead in the s390x backend was the best fix.</p>\n</blockquote>",
        "id": 315722836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670983087
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1351946055\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<p>@cfallin the assertions in <code>collect_operands</code> are failing, so I'll open a separate PR with that change and track them down there.</p>\n</blockquote>",
        "id": 315889939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671043116
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1352217113\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<p>Will this be backported to the wasmtime-4.0.0 branch?</p>\n</blockquote>",
        "id": 315916579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671052721
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430#issuecomment-1352291278\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5430\">issue #5430</a>:</p>\n<blockquote>\n<blockquote>\n<p>Will this be backported to the wasmtime-4.0.0 branch?</p>\n</blockquote>\n<p>Just made the PR: #5442 </p>\n</blockquote>",
        "id": 315925236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671056158
    }
]