[
    {
        "content": "<p>iawia002 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a> from <code>iawia002:test-mod</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This patch reorganizes the modules generated by wit, merging all wit-generated wasi content into a single mod like <a href=\"https://github.com/bytecodealliance/wasi-rs\">wasi-rs</a>.</p>\n<p>&lt;img width=\"395\" alt=\"Screenshot 2024-07-11 at 14 54 08\" src=\"<a href=\"https://github.com/bytecodealliance/wasmtime/assets/9134003/503babf5-0c88-4ea7-9591-2a2bbc3e2e4d\">https://github.com/bytecodealliance/wasmtime/assets/9134003/503babf5-0c88-4ea7-9591-2a2bbc3e2e4d</a>\"&gt;</p>\n<p>This will facilitate the addition of new WASI APIs like <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8929\">wasi-runtime-config</a> and make the import paths more straightforward (for the <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8929\">wasi-runtime-config</a> case, it will be <code>test_programs::wasi::config</code>).</p>\n<p>And I believe this could make the wit dependencies of the <code>wasi</code> crate don't rely on the <code>http</code> world as I mentioned in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8928#issuecomment-2221849156\">https://github.com/bytecodealliance/wasmtime/pull/8928#issuecomment-2221849156</a>.</p>\n<p>cc @alexcrichton </p>\n</blockquote>",
        "id": 450634860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720681645
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>.</p>",
        "id": 450634861,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720681645
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>.</p>",
        "id": 450634862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720681645
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>.</p>",
        "id": 450642894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720684673
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939#pullrequestreview-2172077943\">PR review</a>:</p>\n<blockquote>\n<p>If we go this route I'd prefer to restructure things a little bit to make it a bit more maintainable over time. Of bindings to generate they basically fall into the categories of \"what to import\" and \"what to export\" where imports are a union of everything supported and exports are separated per-world.</p>\n<p>For imports I think it would be best to use the inline WIT syntax that <code>generate!</code> supports and to <code>include wasi:cli/imports</code> for all the relevant WIT packages. For exports there would then be a single <code>generate!</code>-per-world supported which uses <code>with</code> to point all dependencies to the main \"soup of imports\".</p>\n<p>Does that make sense? It would avoid the need to weave everything back together in Rust code and would enable keeping things separate.</p>\n</blockquote>",
        "id": 450725292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720708311
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939#issuecomment-2223333859\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>:</p>\n<blockquote>\n<p>Yes, that makes sense. However, to support this model, we need the <code>test-programs</code> crate to have WIT definition files of all the WASI APIs. For example, <code>wasi-runtime-config</code> is a very simple and standalone API, it doesn't depend on any other WASI APIs, nor is it depended upon by others. If we want to include both <code>wasi-cli</code> and <code>wasi-runtime-config</code> in a single <code>generate!</code>, their WIT files need to be in the same directory. I'm wondering if we could place the WIT files for all APIs in a separate directory, so that <code>wasi</code>, <code>wasi-http</code>, and <code>test-programs</code> can all directly use the WIT files from this directory. This would also simplify the <code>vendor-wit.sh</code> script.</p>\n<p>Hope I didn't misunderstand your point.</p>\n</blockquote>",
        "id": 450749833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720714086
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939#issuecomment-2223568902\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>:</p>\n<blockquote>\n<p>The solution we've had for that is to have copies of WIT files in multiple locations. It's not a great solution but it's why <code>wasmtime-wasi</code> has all the WIT files for <code>wasmtime-wasi-http</code> despite not using them. Unfortunately we can't move everything into a single directory easily because when we publish these crates to <a href=\"http://crates.io\">crates.io</a> that directory needs to be included so the crates can be built when downloaded from <a href=\"http://crates.io\">crates.io</a></p>\n</blockquote>",
        "id": 450774343,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720721279
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939#issuecomment-2224214785\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>:</p>\n<blockquote>\n<blockquote>\n<p>because when we publish these crates to <a href=\"http://crates.io\">crates.io</a> that directory needs to be included so the crates can be built when downloaded from <a href=\"http://crates.io\">crates.io</a></p>\n</blockquote>\n<p>Oh right, since test programs don't need to be published to <a href=\"http://crates.io\">crates.io</a>, I forgot to consider that. I'll make an update soon.</p>\n</blockquote>",
        "id": 450841844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720744602
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>.</p>",
        "id": 450848348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720748029
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>.</p>",
        "id": 450848349,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720748029
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8939\">PR #8939</a>.</p>",
        "id": 450848350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720748029
    }
]