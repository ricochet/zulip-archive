[
    {
        "content": "<p>vlhomutov opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>WASM function pointers are just indexes in indirect function table.<br>\nWe can build binary  with this table enabled, and we can even access this table<br>\nusing wasmtime C API.</p>\n<p>What we see there is:</p>\n<h1>0  type1</h1>\n<p>1  type2<br>\n.....</p>\n<p>We can also browse exports and  we see there exported function names.</p>\n<p>We can use the wasmtime API to get named export and call it normally (using API)</p>\n<p>The problem is that looking at function table there is no way to determine which function has which name,<br>\nand thus  it is not clear what index do I need for some named function.</p>\n<p>The use case is very simple:<br>\nhaving a function name (provided by user), pass a pointer to it to another function in wasm module.</p>\n</blockquote>",
        "id": 442707561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717570102
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744#issuecomment-2149095485\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>Not every exported function is guaranteed to be present in the table used for indirect calls. In fact you will likely only find the functions that the wasm module itself turns into function pointers.</p>\n</blockquote>",
        "id": 442715542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717573123
    },
    {
        "content": "<p>vlhomutov <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744#issuecomment-2149634235\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>ok, since we have a way to call function from wasmtime, is it somehow possible to pass some information into wasm to call the  function there? I mean, extract some address of function from found extern? (yes, extern is just index inside engine/store, but somewhere inside there should be information about function real addres).</p>\n</blockquote>",
        "id": 442764403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717588121
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744#issuecomment-2150213002\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>If the goal is to translate any name into a function pointer that needs to be done in the guest itself. As a host you can lookup exports by name but that doesn't include all functions. You can also lookup functions by their index in a table but as @bjorn3 not all tables are guaranteed to be in the function. There's currently no way for the host to invoke arbitrary functions in the guest, it's only those that are exported or a table.<br>\n</p>\n</blockquote>",
        "id": 442805695,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717598237
    },
    {
        "content": "<p>vlhomutov <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744#issuecomment-2150425858\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>Of course, we are talking about explicitly exported functions.<br>\nI have a function on a target that accepts function pointer and want to call it from host.<br>\n(and pass the function I found by name on the host)<br>\nThe problem is that I cannot get pointer to function (usable for wasm function) on the host.</p>\n<blockquote>\n<blockquote>\n<p>If the goal is to translate any name into a function pointer that needs to be done in the guest itself.<br>\nIs this possible in the guest at all? Any hints are welcome. Does wasm provides some metadata inside the guest by standard means? <br>\n</p>\n</blockquote>\n</blockquote>\n</blockquote>",
        "id": 442827005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717603203
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744#issuecomment-2150968652\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>Is your goal to get a literal native function pointer? If that's the case that's not possible. You can only invoke WebAssembly through the <code>wasmtime_func_call*</code> APIs. You can acquire a <code>wasmtime_func_t</code> which is sort of equivalent to a function pointer as it's passed to <code>wasmtime_func_call*</code> but you won't be able to acquire a literal native function pointer.</p>\n</blockquote>",
        "id": 442895174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1717621838
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>WASM function pointers are just indexes in indirect function table.<br>\nWe can build binary  with this table enabled, and we can even access this table<br>\nusing wasmtime C API.</p>\n<p>What we see there is:</p>\n<h1>0  type1</h1>\n<p>1  type2<br>\n.....</p>\n<p>We can also browse exports and  we see there exported function names.</p>\n<p>We can use the wasmtime API to get named export and call it normally (using API)</p>\n<p>The problem is that looking at function table there is no way to determine which function has which name,<br>\nand thus  it is not clear what index do I need for some named function.</p>\n<p>The use case is very simple:<br>\nhaving a function name (provided by user), pass a pointer to it to another function in wasm module.</p>\n</blockquote>",
        "id": 445216429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718655236
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744#issuecomment-2174342299\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8744\">issue #8744</a>:</p>\n<blockquote>\n<p>I believe the question here has been answered so I'm going to close this, but if there's any follow-ups or else feel free to comment and/or open a new issue.</p>\n</blockquote>",
        "id": 445216431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718655238
    }
]