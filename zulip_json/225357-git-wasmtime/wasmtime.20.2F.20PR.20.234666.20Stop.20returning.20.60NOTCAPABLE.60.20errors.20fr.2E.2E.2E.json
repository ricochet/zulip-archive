[
    {
        "content": "<p>sunfishcode opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666\">PR #4666</a> from <code>stop-using-notcapable</code> to <code>main</code>:</p>\n<blockquote>\n<p><code>ENOTCAPABLE</code> was an error code that is used as part of the rights<br>\nsystem, from CloudABI. There is a set of flags associated with each file<br>\ndescriptor listing which operations can be performed with the file<br>\ndescriptor, and if an attempt is made to perform an operation with a<br>\nfile descriptor that isn't permitted by its rights flags, it fails with<br>\n<code>ENOTCAPABLE</code>.</p>\n<p>WASI is removing the rights system. For example, <a href=\"https://github.com/WebAssembly/wasi-libc/issues/294\">WebAssembly/wasi-libc#294</a><br>\nremoved support for translating <code>ENOTCAPABLE</code> into POSIX error codes, on<br>\nthe assumption that engines should stop using it.</p>\n<p>So as another step to migrating away from the rights system, remove uses<br>\nof the <code>ENOTCAPABLE</code> error.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 292650660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660076256
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666\">PR #4666</a> from <code>stop-using-notcapable</code> to <code>main</code>.</p>",
        "id": 292672554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660087021
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666#pullrequestreview-1068779527\">PR review</a>.</p>",
        "id": 292814288,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660157990
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666#pullrequestreview-1068779527\">PR review</a>.</p>",
        "id": 292814289,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660157990
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666#discussion_r942798723\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            let err = if missing.intersects(DirCaps::READDIR) {\n                Error::not_dir()\n            } else {\n                Error::perm()\n            };\n            Err(err.context(format!(\"desired rights {:?}, has {:?}\", caps, self.caps)))\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 292814290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660157990
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666#discussion_r942798116\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            let err = if missing.intersects(FileCaps::READ | FileCaps::WRITE) {\n                // `EBADF` is a little surprising here because it's also used\n                // for unknown-file-descriptor errors, but it's what POSIX uses\n                // in this situation.\n                Error::badf()\n            } else {\n                Error::perm()\n            };\n            Err(err.context(format!(\"desired rights {:?}, has {:?}\", caps, self.caps)))\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 292814291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660157990
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666\">PR #4666</a> from <code>stop-using-notcapable</code> to <code>main</code>.</p>",
        "id": 292814585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660158064
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666\">PR #4666</a> from <code>stop-using-notcapable</code> to <code>main</code>.</p>",
        "id": 292814610,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660158072
    },
    {
        "content": "<p>sunfishcode merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4666\">PR #4666</a>.</p>",
        "id": 292829905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660164265
    }
]