[
    {
        "content": "<p>lukewagner <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383#issuecomment-1785749637\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383\">issue #7383</a>:</p>\n<blockquote>\n<p>@pchickey I think (but may be missing a case), that, with the eager-validation changes Trevor made most recently, there isn't a header-related error that can occur in the constructor?</p>\n<p>Independently, the discussion made me think that perhaps (in a post-Preview-2 timeframe) we should relax the C-M <code>constructor</code> validation rules to allow constructor functions to return a <code>result&lt;containing-resource-type, T&gt;</code> (for any <code>T</code>).  In languages with EH, this would map to the usual throwing-constructor pattern.  Otherwise, bindings would produce their best approximation of a fallible constructor.</p>\n</blockquote>",
        "id": 399350409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698688060
    },
    {
        "content": "<p>pchickey <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383#issuecomment-1785776681\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383\">issue #7383</a>:</p>\n<blockquote>\n<p>The function <code>set: func(name: field-key, value: list&lt;field-value&gt;) -&gt; result&lt;_, header-error&gt;; </code> allows rejecting input, but <code>constructor(entries: list&lt;tuple&lt;field-key,field-value&gt;&gt;); </code> would not allow that same input to be rejected with an error, so currently the implementation traps.</p>\n</blockquote>",
        "id": 399352963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698689103
    },
    {
        "content": "<p>pchickey edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383#issuecomment-1785776681\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383\">issue #7383</a>:</p>\n<blockquote>\n<p>The function <code>set: func(name: field-key, value: list&lt;field-value&gt;) -&gt; result&lt;_, header-error&gt;; </code> allows rejecting input, but <code>constructor(entries: list&lt;tuple&lt;field-key,field-value&gt;&gt;); </code> would not allow that same input to be rejected with an error, so currently the implementation traps.</p>\n<p>I agree we should allow constructors to throw in a post-p2 timeframe.</p>\n</blockquote>",
        "id": 399353044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698689147
    },
    {
        "content": "<p>lukewagner <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383#issuecomment-1785781544\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7383\">issue #7383</a>:</p>\n<blockquote>\n<p>Ah, gotcha; I was thinking about the case of passing in the already-constructed <code>headers</code>.</p>\n</blockquote>",
        "id": 399353423,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698689300
    }
]