[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1499#issuecomment-612478178\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1499#issuecomment-612478178\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1499\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1499\">Issue #1499</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 193671805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586627960
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1499#issuecomment-612491660\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1499#issuecomment-612491660\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1499\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1499\">Issue #1499</a>:</p>\n<blockquote>\n<p>Rustfmt failed:</p>\n<div class=\"codehilite\"><pre><span></span>Diff in /home/runner/work/wasmtime/wasmtime/cranelift/codegen/src/isa/x86/abi.rs at line 1031:\n         let mut fpr_offset = 0;\n\n         for reg in csrs.iter(FPR) {\n\n<span class=\"gd\">-            let value = pos</span>\n<span class=\"gd\">-                .ins()</span>\n<span class=\"gd\">-                .load(types::F64X2, ir::MemFlags::trusted(), stack_addr, fpr_offset);</span>\n<span class=\"gi\">+            let value = pos.ins().load(</span>\n<span class=\"gi\">+                types::F64X2,</span>\n<span class=\"gi\">+                ir::MemFlags::trusted(),</span>\n<span class=\"gi\">+                stack_addr,</span>\n<span class=\"gi\">+                fpr_offset,</span>\n<span class=\"gi\">+            );</span>\n             fpr_offset += types::F64X2.bytes() as i32;\n\n             if let Some(ref mut cfa_state) = cfa_state.as_mut() {\n</pre></div>\n\n\n</blockquote>",
        "id": 193674537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586631785
    }
]