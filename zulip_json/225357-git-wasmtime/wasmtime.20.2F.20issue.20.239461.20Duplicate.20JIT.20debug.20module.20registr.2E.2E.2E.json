[
    {
        "content": "<p>SingleAccretion opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9461\">issue #9461</a>:</p>\n<blockquote>\n<p>Reproduction:<br>\n1) Compile any component, e. g.</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"ps\"><pre><span></span><code>&gt; &amp; $env:WASI_SDK_PATH/bin/clang main.cpp -o main.wasm -g3 -target wasm32-unknown-wasip2\n</code></pre></div>\n<p>2) Debug with lldb+wasmtime:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"n\">debug</span><span class=\"o\">-</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">opt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">Until</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">reach</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span>\n</code></pre></div>\n<p>3) Observe four <code>(JIT)</code> modules (for each core module in a component). All of them have the exact same content.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"n\">list</span>\n</code></pre></div>\n<p>4) Also observe that LLDB needed to index the same DWARF info four times. This means that \"startup with debugging\" is 4x slower if we exclude the time to compile code and transform DWARF.</p>\n<p>The bug is somewhere around here:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/instantiate.rs#L72-L79\">https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/instantiate.rs#L72-L79</a></p>\n<p>AFAICT, with components, the generated image is a shared (among core modules) resource, so each <code>Module::from_parts_raw</code> call here:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/component/component.rs#L408-L414\">https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/component/component.rs#L408-L414</a></p>\n<p>Registers the same image.</p>\n</blockquote>",
        "id": 476636344,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728852214
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9461\">issue #9461</a>:</p>\n<blockquote>\n<p>Reproduction:<br>\n1) Compile any component, e. g.</p>\n<div class=\"codehilite\" data-code-language=\"C++\"><pre><span></span><code><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"nf\">main</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kt\">int</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"ps\"><pre><span></span><code>&gt; &amp; $env:WASI_SDK_PATH/bin/clang main.cpp -o main.wasm -g3 -target wasm32-unknown-wasip2\n</code></pre></div>\n<p>2) Debug with lldb+wasmtime:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">lldb</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">D</span><span class=\"w\"> </span><span class=\"n\">debug</span><span class=\"o\">-</span><span class=\"n\">info</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O</span><span class=\"w\"> </span><span class=\"n\">opt</span><span class=\"o\">-</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"n\">main</span>\n<span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">Until</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">reach</span><span class=\"w\"> </span><span class=\"n\">WASM</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span>\n</code></pre></div>\n<p>3) Observe four <code>(JIT)</code> modules (for each core module in a component). All of them have the exact same content.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">image</span><span class=\"w\"> </span><span class=\"n\">list</span>\n</code></pre></div>\n<p>4) Also observe that LLDB needed to index the same DWARF info four times. This means that \"startup with debugging\" is 4x slower if we exclude the time to compile code and transform DWARF.</p>\n<p>The bug is somewhere around here:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/instantiate.rs#L72-L79\">https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/instantiate.rs#L72-L79</a></p>\n<p>AFAICT, with components, the generated image is a shared (among core modules) resource, so each <code>Module::from_parts_raw</code> call here:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/component/component.rs#L408-L414\">https://github.com/bytecodealliance/wasmtime/blob/460a4c0ad5d3655b7dbaec193e726196de848898/crates/wasmtime/src/runtime/component/component.rs#L408-L414</a></p>\n<p>Registers the same image.</p>\n</blockquote>",
        "id": 477317798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729120772
    }
]