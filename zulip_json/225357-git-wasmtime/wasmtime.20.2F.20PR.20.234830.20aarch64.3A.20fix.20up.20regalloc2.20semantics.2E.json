[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a>.</p>",
        "id": 296256955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661922713
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/akirilov-arm\">akirilov-arm</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a>.</p>",
        "id": 296256956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661922713
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a> from <code>aarch64-ra2-semantics</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR removes all uses of modify-operands in the aarch64 backend,<br>\nreplacing them with reused-input operands instead. This has the nice<br>\neffect of removing a bunch of move instructions and more clearly<br>\nrepresenting inputs and outputs.</p>\n<p>This PR also removes the explicit use of pinned vregs in the aarch64<br>\nbackend, instead using fixed-register constraints on the operands when<br>\ninsts or pseudo-inst sequences require certain registers.</p>\n<p>This is the second PR in the regalloc-semantics cleanup series; after<br>\nthe remaining backend (s390x) and the ABI code are cleaned up as well,<br>\nwe'll be able to simplify the regalloc2 frontend.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 296256957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661922713
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092006151\">PR review</a>.</p>",
        "id": 296340722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661957321
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092006151\">PR review</a>.</p>",
        "id": 296340723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661957321
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959670180\">PR review comment</a>:</p>\n<blockquote>\n<p>How about renaming this <code>Inst</code> variant to <code>MovK</code> (while removing the latter from <code>MoveWideOp</code>) and removing this field?</p>\n</blockquote>",
        "id": 296340728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661957322
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959683043\">PR review comment</a>:</p>\n<blockquote>\n<p>Similarly here - how about introducing a separate enum, say <code>FpuRRIModOp</code>, for these operations?</p>\n</blockquote>",
        "id": 296340729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661957322
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092324054\">PR review</a>.</p>",
        "id": 296428754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971899
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959906467\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there a particular reason to deviate from the architecturally-defined disassembly, especially for the simple, single instruction cases? This looks really weird to anyone who is familiar with AArch64 assembly; similarly for the rest of the pretty printing cases you have modified.</p>\n<p>This also results in a lot of noise in the diff.</p>\n</blockquote>",
        "id": 296428756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971899
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092324054\">PR review</a>.</p>",
        "id": 296428757,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971899
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959903506\">PR review comment</a>:</p>\n<blockquote>\n<p>Same as <code>AtomicRMWLoop</code>.</p>\n</blockquote>",
        "id": 296428758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971899
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959908520\">PR review comment</a>:</p>\n<blockquote>\n<p>BTW while this is unfortunately a step back (in the sense that the previous implementation prints the actual assembly code that is generated), since the operation is quite complex, I think that this simplification is acceptable.</p>\n</blockquote>",
        "id": 296428759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971899
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959892981\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't really like this change because these are valid addressing modes with arbitrary registers, which admittedly we don't use at the moment. IMHO a cleaner approach is probably to introduce <code>SPPreIndexed</code> and <code>SPPostIndexed</code> variants that only have an immediate parameter (hopefully on top of PR #4832 <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span>) - we can also remove the current ones, to be on the safe side.</p>\n</blockquote>",
        "id": 296428760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971899
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959903130\">PR review comment</a>:</p>\n<blockquote>\n<p>If I remember correctly, there isn't a real need to use fixed registers here, but I don't mind leaving it like this.</p>\n</blockquote>",
        "id": 296428761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661971899
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a> from <code>aarch64-ra2-semantics</code> to <code>main</code>.</p>",
        "id": 296429287,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661972082
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092357064\">PR review</a>.</p>",
        "id": 296429299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661972087
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959916260\">PR review comment</a>:</p>\n<blockquote>\n<p>Good idea! Done.</p>\n</blockquote>",
        "id": 296429300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661972087
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092357313\">PR review</a>.</p>",
        "id": 296429339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661972099
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959916446\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 296429341,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661972099
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092367369\">PR review</a>.</p>",
        "id": 296429808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661972266
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959924337\">PR review comment</a>:</p>\n<blockquote>\n<p>You mean the extra input register? This is how we've done it across the backends for the SSA-ification of instructions. While it looks a bit odd once regalloc is done and all registers are physical registers, the input and output sides of a \"mod\" can actually be different vregs (almost always are in fact) pre-regalloc and IMHO that is important to represent in the VCode printout. Otherwise we have hidden aspects of the IR that we can't see when debugging.</p>\n</blockquote>",
        "id": 296429809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661972266
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a> from <code>aarch64-ra2-semantics</code> to <code>main</code>.</p>",
        "id": 296432360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973216
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092389933\">PR review</a>.</p>",
        "id": 296432504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973267
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959939975\">PR review comment</a>:</p>\n<blockquote>\n<p>Renamed to <code>SPPreIndexed</code> / <code>SPPostIndexed</code>. Happy to eventually make it more general again; my concern here was mainly to avoid the need to include input/output registers for now, for simplicity.</p>\n</blockquote>",
        "id": 296432505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973267
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092390831\">PR review</a>.</p>",
        "id": 296432622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973318
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959940599\">PR review comment</a>:</p>\n<blockquote>\n<p>The handwritten expansion is pretty gnarly and I was afraid of accidentally breaking it if I tried to generalize it -- so I left it as-is for now :-) Eventually it'd be great to find a way to expand this in a lowering rule rather than having a single pseudoinst (I need to think about the control-flow implications more!).</p>\n</blockquote>",
        "id": 296432623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973318
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959940755\">PR review comment</a>:</p>\n<blockquote>\n<p>Indeed, would love to eventually rework this into ISLE as well.</p>\n</blockquote>",
        "id": 296432657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973330
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092391062\">PR review</a>.</p>",
        "id": 296432658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973330
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1092391764\">PR review</a>.</p>",
        "id": 296432814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973370
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r959941254\">PR review comment</a>:</p>\n<blockquote>\n<p>Indeed, I was having trouble keeping it up-to-date as I was adding in the registers and chose instead to simplify it here; it felt odd to have a separate representation that wasn't checked against the actual emitted code.</p>\n</blockquote>",
        "id": 296432816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661973370
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r960606082\">PR review comment</a>:</p>\n<blockquote>\n<p>I see, I suppose you regard this as more of some kind of intermediate representation printout than a generated assembly printout, which is pretty much as I do, and that's why I would prefer if all these printouts are as close to the architecturally specified assembly language as possible (possibly making exceptions for complex VCode operations and things that are out of scope of the ISA spec such as how constant literals are represented), especially since the same logic is used by the CLIF compilation tests, where we are looking at the final generated code post-regalloc. However, I understand your use case, so I think it is acceptable to leave it as it is.</p>\n</blockquote>",
        "id": 296577505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662036119
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1093323435\">PR review</a>.</p>",
        "id": 296577506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662036119
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1093324118\">PR review</a>.</p>",
        "id": 296577602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662036148
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r960613241\">PR review comment</a>:</p>\n<blockquote>\n<p>TBH the LSE lowering obsoletes this, while suffering from virtually none of the issues, and resulting in a significantly smaller code size. Even though recent processors support LSE, we still need this variant, though, in case we compile for base Armv8-A hardware (e.g. Raspberry Pi 4).</p>\n</blockquote>",
        "id": 296578631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662036543
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1093333697\">PR review</a>.</p>",
        "id": 296578632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662036544
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1093340534\">PR review</a>.</p>",
        "id": 296579445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662036819
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r960617904\">PR review comment</a>:</p>\n<blockquote>\n<p>Nit - use <code>self.clone()</code> as in the match arms that follow?</p>\n</blockquote>",
        "id": 296579448,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662036819
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1093362558\">PR review</a>.</p>",
        "id": 296582079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662037649
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r960632573\">PR review comment</a>:</p>\n<blockquote>\n<p>Ditto.</p>\n</blockquote>",
        "id": 296582080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662037649
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r961080148\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, it definitely started out that way; actually early on I had been testing the aarch64 backend by feeding the vcode pretty-print into the assembler. But by now the semantics of VCode are not <em>quite</em> the same as machine code and I think it's more important for the textual view to show an accurate representation of the data structure than to try to match an assembler output. We also have <code>clif-util compile -D</code> that disassembles via Capstone for use-cases where we actually really want an independent verification of the machine code output :-)</p>\n</blockquote>",
        "id": 296695919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662064727
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1094027334\">PR review</a>.</p>",
        "id": 296695921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662064727
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a> from <code>aarch64-ra2-semantics</code> to <code>main</code>.</p>",
        "id": 296696188,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662064849
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a> from <code>aarch64-ra2-semantics</code> to <code>main</code>.</p>",
        "id": 296696227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662064876
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#discussion_r961082622\">PR review comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 296696232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662064878
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830#pullrequestreview-1094031758\">PR review</a>.</p>",
        "id": 296696233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662064879
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a>.</p>",
        "id": 296696254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662064893
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4830\">PR #4830</a>.</p>",
        "id": 296702481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662067523
    }
]