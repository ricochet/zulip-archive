[
    {
        "content": "<p>jyn514 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue? Can you include a CLIF test case,<br>\n  ideally reduced with the <code>bugpoint</code> clif-util command?</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>(bash@joshua-ThinkPad-P51s) ~/.../rust/rcc ▶️ /bin/cat crash.c\nvoid foo(void) {\n  switch (1) {\n    while(1)\n      case 1:;\n    case 0:;\n  }\n}\n(bash@joshua-ThinkPad-P51s) ~/.../rust/rcc ▶️ cargo run crash.c --debug-asm\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11s\n     Running `/home/joshua/.local/lib/cargo/target/debug/rcc crash.c --debug-asm`\nfunction u0:0() system_v {\n; function 0: foo\n\n    jt0 = jump_table [block5, block6]\n\nblock0:\n    v0 = iconst.i64 1\n    ; dummy\n    jump block1\n\nblock2:\n    jump block4\n\nblock4:\n    v1 = bconst.b1 true\n    ; while ((1) != ((long)(0)))\n    brz v1, block5\n    jump block6\n\n; case 1\nblock6:\n    ; loop start\n    jump block4\n\n; case 0\nblock5:\n    ; end switch\n    jump block3\n\nblock1:\n    jump block7\n\nblock7:\n    br_table.i64 v0, block3, jt0\n\nblock3:\n    return\n}\n\nThe application panicked (crashed).\nMessage:  assertion failed: !self.opcode().is_branch()\nLocation: /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/ir/instructions.rs:254\n</code></pre></div>\n\n\n<ul>\n<li>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?</li>\n</ul>\n<p>I don't know why this code doesn't work. It all seems valid to me and the panic doesn't tell me which instruction isn't valid. The verifier reports no errors and the panic happens only when defining the function.</p>\n<ul>\n<li>Which Cranelift version / commit hash / branch are you using?</li>\n</ul>\n<p><code>cranelift 0.63.0</code></p>\n<ul>\n<li>If relevant, can you include some extra information about your environment?<br>\n  (Rust version, operating system, architecture...)</li>\n</ul>\n<p>target is <code>x86_64-unknown-linux-gnu</code></p>\n</blockquote>",
        "id": 196113295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588526394
    },
    {
        "content": "<p>jyn514 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue? Can you include a CLIF test case,<br>\n  ideally reduced with the <code>bugpoint</code> clif-util command?</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>(bash@joshua-ThinkPad-P51s) ~/.../rust/rcc ▶️ /bin/cat crash.c\nvoid foo(void) {\n  switch (1) {\n    while(1)\n      case 1:;\n    case 0:;\n  }\n}\n(bash@joshua-ThinkPad-P51s) ~/.../rust/rcc ▶️ cargo run crash.c --debug-asm\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11s\n     Running `/home/joshua/.local/lib/cargo/target/debug/rcc crash.c --debug-asm`\nfunction u0:0() system_v {\n; function 0: foo\n\n    jt0 = jump_table [block5, block6]\n\nblock0:\n    v0 = iconst.i64 1\n    ; dummy\n    jump block1\n\nblock2:\n    jump block4\n\nblock4:\n    v1 = bconst.b1 true\n    ; while ((1) != ((long)(0)))\n    brz v1, block5\n    jump block6\n\n; case 1\nblock6:\n    ; loop start\n    jump block4\n\n; case 0\nblock5:\n    ; end switch\n    jump block3\n\nblock1:\n    jump block7\n\nblock7:\n    br_table.i64 v0, block3, jt0\n\nblock3:\n    return\n}\n\nThe application panicked (crashed).\nMessage:  assertion failed: !self.opcode().is_branch()\nLocation: /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/ir/instructions.rs:254\n</code></pre></div>\n\n\n<ul>\n<li>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?</li>\n</ul>\n<p>I don't know why this code doesn't work. It all seems valid to me and the panic doesn't tell me which instruction isn't valid. The verifier reports no errors and the panic happens only when defining the function.</p>\n<ul>\n<li>Which Cranelift version / commit hash / branch are you using?</li>\n</ul>\n<p><code>cranelift 0.63.0</code></p>\n<ul>\n<li>If relevant, can you include some extra information about your environment?<br>\n  (Rust version, operating system, architecture...)</li>\n</ul>\n<p>target is <code>x86_64-unknown-linux-gnu</code></p>\n</blockquote>",
        "id": 196113296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588526394
    },
    {
        "content": "<p>jyn514 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue? Can you include a CLIF test case,<br>\n  ideally reduced with the <code>bugpoint</code> clif-util command?</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>(bash@joshua-ThinkPad-P51s) ~/.../rust/rcc ▶️ /bin/cat crash.c\nvoid foo(void) {\n  switch (1) {\n    while(1)\n      case 1:;\n    case 0:;\n  }\n}\n(bash@joshua-ThinkPad-P51s) ~/.../rust/rcc ▶️ cargo run crash.c --debug-asm\n    Finished dev [unoptimized + debuginfo] target(s) in 0.11s\n     Running `/home/joshua/.local/lib/cargo/target/debug/rcc crash.c --debug-asm`\nfunction u0:0() system_v {\n; function 0: foo\n\n    jt0 = jump_table [block5, block6]\n\nblock0:\n    v0 = iconst.i64 1\n    ; dummy\n    jump block1\n\nblock2:\n    jump block4\n\nblock4:\n    v1 = bconst.b1 true\n    ; while ((1) != ((long)(0)))\n    brz v1, block5\n    jump block6\n\n; case 1\nblock6:\n    ; loop start\n    jump block4\n\n; case 0\nblock5:\n    ; end switch\n    jump block3\n\nblock1:\n    jump block7\n\nblock7:\n    br_table.i64 v0, block3, jt0\n\nblock3:\n    return\n}\n\nThe application panicked (crashed).\nMessage:  assertion failed: !self.opcode().is_branch()\nLocation: /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/ir/instructions.rs:254\n</code></pre></div>\n\n\n<ul>\n<li>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?</li>\n</ul>\n<p>I don't know why this code doesn't work. It all seems valid to me and the panic doesn't tell me which instruction isn't valid. The verifier reports no errors and the panic happens only when defining the function.</p>\n<ul>\n<li>Which Cranelift version / commit hash / branch are you using?</li>\n</ul>\n<p><code>cranelift 0.63.0</code></p>\n<ul>\n<li>If relevant, can you include some extra information about your environment?<br>\n  (Rust version, operating system, architecture...)</li>\n</ul>\n<p>target is <code>x86_64-unknown-linux-gnu</code></p>\n</blockquote>",
        "id": 196113297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588526394
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623147481\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623147481\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 196113336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588526405
    },
    {
        "content": "<p>jyn514 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623148454\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623148454\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<p>&lt;details&gt;&lt;summary&gt;Backtrace:&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span><code>━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ BACKTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n                          (4 post panic frames hidden)\n 4: cranelift_codegen::ir::instructions::InstructionData::branch_destination_mut::h9c17c2f91d91745e\n    at /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/ir/instructions.rs:254\n 5: cranelift_codegen::ir::function::Function::change_branch_destination::h34e5352f443feafe\n    at /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/ir/function.rs:274\n 6: cranelift_codegen::licm::create_pre_header::hab6d32d679ed4469\n    at /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/licm.rs:90\n 7: cranelift_codegen::licm::do_licm::h90460effb4852ea5\n    at /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/licm.rs:43\n 8: cranelift_codegen::context::Context::licm::ha20bea3caf3883c0\n    at /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/context.rs:362\n 9: cranelift_codegen::context::Context::compile::h2eb376d6ffad127b\n    at /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-codegen-0.63.0/src/context.rs:172\n10: cranelift_module::module::Module&lt;B&gt;::define_function::h838f26fe37268a15\n    at /home/joshua/.local/lib/cargo/registry/src/github.com-1ecc6299db9ec823/cranelift-module-0.63.0/src/module.rs:584\n11: rcc::ir::Compiler&lt;B&gt;::compile_func::h5e9229dbdff90a19\n    at /home/joshua/src/rust/rcc/src/ir/mod.rs:389\n</code></pre></div>\n\n\n<p>&lt;/details&gt;</p>\n<p>I cannot reproduce this crash with bugpoint.</p>\n<div class=\"codehilite\"><pre><span></span><code>(bash@joshua-ThinkPad-P51s) ~/.../rust/cranelift ▶️ git log --oneline | head -n 1\n864cf98c8 Update release notes, wasmtime 0.16, cranelift 0.63.\n(bash@joshua-ThinkPad-P51s) ~/.../rust/cranelift ▶️ cargo run bugpoint crash.clif --target x86_64-unknown-linux-gnu\n    Finished dev [unoptimized + debuginfo] target(s) in 0.08s\n     Running `/home/joshua/.local/lib/cargo/target/debug/clif-util bugpoint crash.clif --target x86_64-unknown-linux-gnu`\nWarning: Given function compiled successfully or gave a verifier error.\n</code></pre></div>\n\n\n</blockquote>",
        "id": 196113565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588526826
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623150323\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623150323\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<p>Did you set <code>opt_level=speed</code>? This is probably <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1080\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1080\">https://github.com/bytecodealliance/wasmtime/issues/1080</a>.</p>\n</blockquote>",
        "id": 196114075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588527613
    },
    {
        "content": "<p>jyn514 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623152856\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648#issuecomment-623152856\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<p>I did set opt_level=speed. With that I can reproduce with bugpoint:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo run bugpoint crash.clif --target x86_64-unknown-linux-gnu --set opt_level=speed\nCrash message: assertion failed: !self.opcode().is_branch()\n\nfunction u0:0() system_v {\n    jt0 = jump_table [block5, block6]\n\nblock0:\n    v0 = iconst.i64 1\n    br_table v0, block3, jt0\n\nblock6:\n    v1 = bconst.b1 false\n    jump block6\n\nblock5:\n    trap user0\n\nblock3:\n    return\n}\n</code></pre></div>\n\n\n</blockquote>",
        "id": 196114710,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588528607
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1648\">Issue #1648</a>:</p>\n<blockquote>\n<ul>\n<li>What are the steps to reproduce the issue? Can you include a CLIF test case,<br>\n  ideally reduced with the <code>bugpoint</code> clif-util command?</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">bash</span><span class=\"o\">@</span><span class=\"n\">joshua</span><span class=\"o\">-</span><span class=\"n\">ThinkPad</span><span class=\"o\">-</span><span class=\"n\">P51s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">~/..</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">rcc</span><span class=\"w\"> </span><span class=\"err\">▶️</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">cat</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"></span>\n<span class=\"n\">void</span><span class=\"w\"> </span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"n\">void</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">switch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">while</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"mi\">1</span>:<span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"mi\">0</span>:<span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">bash</span><span class=\"o\">@</span><span class=\"n\">joshua</span><span class=\"o\">-</span><span class=\"n\">ThinkPad</span><span class=\"o\">-</span><span class=\"n\">P51s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">~/..</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">rust</span><span class=\"o\">/</span><span class=\"n\">rcc</span><span class=\"w\"> </span><span class=\"err\">▶️</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">debug</span><span class=\"o\">-</span><span class=\"n\">asm</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.11</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">joshua</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">rcc</span><span class=\"w\"> </span><span class=\"n\">crash</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">debug</span><span class=\"o\">-</span><span class=\"n\">asm</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">0</span>: <span class=\"nc\">foo</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">jt0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">jump_table</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">block5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block6</span><span class=\"p\">]</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">dummy</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">jump</span><span class=\"w\"> </span><span class=\"n\">block4</span><span class=\"w\"></span>\n\n<span class=\"n\">block4</span>:\n    <span class=\"nc\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"p\">((</span><span class=\"n\">long</span><span class=\"p\">)(</span><span class=\"mi\">0</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">brz</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block5</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block6</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"n\">block6</span>:\n    <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"k\">loop</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block4</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"n\">block5</span>:\n    <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"n\">switch</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block3</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">jump</span><span class=\"w\"> </span><span class=\"n\">block7</span><span class=\"w\"></span>\n\n<span class=\"n\">block7</span>:\n    <span class=\"nc\">br_table</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">jt0</span><span class=\"w\"></span>\n\n<span class=\"n\">block3</span>:\n    <span class=\"nc\">return</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">The</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">crashed</span><span class=\"p\">).</span><span class=\"w\"></span>\n<span class=\"n\">Message</span>:  <span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"o\">!</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">opcode</span><span class=\"p\">().</span><span class=\"n\">is_branch</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">Location</span>: <span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">joshua</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">local</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">github</span><span class=\"p\">.</span><span class=\"n\">com</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"n\">ecc6299db9ec823</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.63.0</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">ir</span><span class=\"o\">/</span><span class=\"n\">instructions</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">254</span><span class=\"w\"></span>\n</code></pre></div>\n<ul>\n<li>What do you expect to happen? What does actually happen? Does it panic, and<br>\n  if so, with which assertion?</li>\n</ul>\n<p>I don't know why this code doesn't work. It all seems valid to me and the panic doesn't tell me which instruction isn't valid. The verifier reports no errors and the panic happens only when defining the function.</p>\n<ul>\n<li>Which Cranelift version / commit hash / branch are you using?</li>\n</ul>\n<p><code>cranelift 0.63.0</code></p>\n<ul>\n<li>If relevant, can you include some extra information about your environment?<br>\n  (Rust version, operating system, architecture...)</li>\n</ul>\n<p>target is <code>x86_64-unknown-linux-gnu</code></p>\n</blockquote>",
        "id": 219296459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607487541
    }
]