[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8918\">PR #8918</a> from <code>alexcrichton:fix-aarch64</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit fixes an issue with static memory initialization and custom page sizes interacting together on aarch64 Linux. (is that specific enough?)</p>\n<p>When static memory initialization is enabled chunks of memory to initialize the linear memory are made in host-page-size increments of memory. This is done to enable page-mapping via copy-on-write if customized. With the custom page sizes proposal, however, for the first time it's possible for a linear memory to be smaller than this chunk of memory. This means that a virtual memory allocation of a single host page can be made which is smaller than the initialization chunk.</p>\n<p>This currently only happens on aarch64 Linux where we coarsely approximate that the host page size is 64k but many hosts run with 4k pages. This means that a 64k initializer is created but the host only allocates 4k for a linear memory. This means that memory initialization can crash when a 64k initializer is copied into a 4k memory.</p>\n<p>This was not caught via fuzzing because fuzzing only runs on x86_64. This was not caught via CI because on CI guard pages are disabled entirely on QEMU and we got lucky in that a number of virtual memory allocations were all placed next to each other meaning that this copy was probably corrupting some other memory. Locally this was found by running tests on <code>main</code> as-is on AArch64 Linux (by bjorn3).</p>\n<p>This commit implements a few safeguards and a fix for this issue:</p>\n<ul>\n<li>On CI with QEMU modestly-size guard pages are now enabled to catch this sooner in development should it happen again in the future.</li>\n<li>An <code>assert!</code> is added during memory initialization that the memory copy is indeed valid. This causes the tests to fail as-is on <code>main</code> even on x86_64.</li>\n<li>The issue itself is fixed by bailing out of static memory initialization should the host page size exceed the wasm page size which can now happen on aarch64 Linux with smaller page sizes.</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 449974003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720470100
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8918\">PR #8918</a>.</p>",
        "id": 449974006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720470100
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8918\">PR #8918</a>.</p>",
        "id": 449974009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720470101
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8918#pullrequestreview-2164418989\">PR review</a>:</p>\n<blockquote>\n<p>Nice! Thank you!</p>\n</blockquote>",
        "id": 449981549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720472698
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8918\">PR #8918</a>.</p>",
        "id": 449984977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1720473687
    }
]