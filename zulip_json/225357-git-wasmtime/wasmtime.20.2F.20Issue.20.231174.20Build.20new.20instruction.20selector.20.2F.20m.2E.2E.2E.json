[
    {
        "content": "<p>stefson <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595172291\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595172291\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>@cfallin </p>\n<p>I'm getting a compile error with building for aarch64-unknown-linux-gnu on current master, and found this pullrequest as the culprit when bisecting the issue. Here's the error: </p>\n<div class=\"codehilite\"><pre><span></span>   Compiling cranelift-codegen-meta v0.59.0 (/tmp/wasmtime/cranelift/codegen/meta)\n   Compiling cranelift-bforest v0.59.0 (/tmp/wasmtime/cranelift/bforest)\n   Compiling wasi-common v0.12.0 (/tmp/wasmtime/crates/wasi-common)\n   Compiling cranelift-codegen v0.59.0 (/tmp/wasmtime/cranelift/codegen)\nwarning: unused import: `self::call::expand_call`\n  --&gt; cranelift/codegen/src/legalizer/mod.rs:35:5\n   |\n35 | use self::call::expand_call;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused import: `self::globalvalue::expand_global_value`\n  --&gt; cranelift/codegen/src/legalizer/mod.rs:36:5\n   |\n36 | use self::globalvalue::expand_global_value;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused import: `self::heap::expand_heap_addr`\n  --&gt; cranelift/codegen/src/legalizer/mod.rs:37:5\n   |\n37 | use self::heap::expand_heap_addr;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nwarning: unused import: `self::table::expand_table_addr`\n  --&gt; cranelift/codegen/src/legalizer/mod.rs:39:5\n   |\n39 | use self::table::expand_table_addr;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0599]: no variant or associated item named `X86ElfTlsGetAddr` found for type `ir::instructions::Opcode` in the current scope\n    --&gt; cranelift/codegen/src/regalloc/spilling.rs:272:45\n     |\n272  |             || opcode == crate::ir::Opcode::X86ElfTlsGetAddr\n     |                                             ^^^^^^^^^^^^^^^^ variant or associated item not found in `ir::instructions::Opcode`\n     |\n    ::: /tmp/wasmtime/target/aarch64-unknown-linux-gnu/debug/build/cranelift-codegen-dd375821e82eb469/out/opcodes.rs:1427:1\n     |\n1427 | pub enum Opcode {\n     | --------------- variant or associated item `X86ElfTlsGetAddr` not found here\n\nerror[E0599]: no variant or associated item named `X86MachoTlsGetAddr` found for type `ir::instructions::Opcode` in the current scope\n    --&gt; cranelift/codegen/src/regalloc/spilling.rs:273:45\n     |\n273  |             || opcode == crate::ir::Opcode::X86MachoTlsGetAddr\n     |                                             ^^^^^^^^^^^^^^^^^^ variant or associated item not found in `ir::instructions::Opcode`\n     |\n    ::: /tmp/wasmtime/target/aarch64-unknown-linux-gnu/debug/build/cranelift-codegen-dd375821e82eb469/out/opcodes.rs:1427:1\n     |\n1427 | pub enum Opcode {\n     | --------------- variant or associated item `X86MachoTlsGetAddr` not found here\n\nerror: aborting due to 2 previous errors\n\nFor more information about this error, try `rustc --explain E0599`.\nerror: could not compile `cranelift-codegen`.\n</pre></div>\n\n\n<p>It's propably worth noting that this only happens when executing <code>cargo build</code> from the wasmtime dir, and it doesn't when <code>cd wasmtime/cranelift &amp; cargo build</code>. Still the error seems to be from cranelift. </p>\n</blockquote>",
        "id": 189780160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583406505
    },
    {
        "content": "<p>stefson <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595173001\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595173001\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>verbose log from --verbose: <a href=\"https://github.com/bytecodealliance/wasmtime/files/4292580/verbose-log.gz\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/files/4292580/verbose-log.gz\">verbose-log.gz</a></p>\n<p>is it okay to discuss this matter here, or would you like to see a new issue for it? </p>\n</blockquote>",
        "id": 189780263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583406609
    },
    {
        "content": "<p>philipc <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595187625\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595187625\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>@stefson This is an issue, not a pull request. I think you want <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">https://github.com/bytecodealliance/cranelift/pull/1174</a> instead. The PR number you are looking at is from before cranelift was moved into wasmtime. Also, I'm pretty sure cranelift doesn't support aarch64 yet, even if it happened to compile before that PR (in fact, this issue is about enabling an arm64 backend, but see also #1075). Also related, it doesn't support arm32 either (#1173), which I think you have also been trying to build for.</p>\n</blockquote>",
        "id": 189782402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583408581
    },
    {
        "content": "<p>stefson <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595199887\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595199887\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>Where's the sense in arguing about issue and pullrequest please, especially since #1174 is clearly linked to this thread. It's rather unlikely that the backends work yet, but can't say for sure if they do without building them from source and do some testing. </p>\n<p>This patch clearly regressed big time, my message is meant to inform the author about the possibly unintended breakage. </p>\n</blockquote>",
        "id": 189784412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583410566
    },
    {
        "content": "<p>philipc <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595202045\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595202045\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>I was trying to be helpful and point out a misunderstanding, not argue. You want <a href=\"https://github.com/bytecodealliance/cranelift/pull/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/cranelift/pull/1174\">https://github.com/bytecodealliance/cranelift/pull/1174</a>, not this issue. The author of this issue was not the author of that PR.</p>\n</blockquote>",
        "id": 189784740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583410920
    },
    {
        "content": "<p>stefson <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595205145\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595205145\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>it's this commit that caused the regression: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/0a1bb3ba6ccadd4b716cd259a097bb31435c0c6d\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/commit/0a1bb3ba6ccadd4b716cd259a097bb31435c0c6d\">https://github.com/bytecodealliance/wasmtime/commit/0a1bb3ba6ccadd4b716cd259a097bb31435c0c6d</a></p>\n<p>something at github seems to have been broken by integrating cranelift, making me turning up here if I try to follow the linked issue from that very commit. I'll continue to post over there. </p>\n</blockquote>",
        "id": 189785417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583411431
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595290793\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174#issuecomment-595290793\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>@stefson: To clear up one additional thing: the ARM64 backend is not on mainline yet, so notwithstanding any other recent commits or other changes, one should not expect a build on ARM64 to work quite yet. We're getting close though :-)</p>\n</blockquote>",
        "id": 189802868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583422271
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1174\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1174\">Issue #1174</a>:</p>\n<blockquote>\n<p>This issue will track progress on our new instruction selector / machine-code emission work, which has been ongoing (in design and initial implementation).</p>\n<p>The scope of the work is:</p>\n<ul>\n<li>Build a new instruction selector, to replace the recipes and meta-DSL system that adds encodings to existing Cranelift IR instructions.</li>\n<li>Develop a low-level encoding of machine instructions, with virtual registers prior to register allocation (an \"IR\" of sorts)</li>\n<li>Interface the above to a new register allocator infrastructure, <a href=\"https://github.com/bnjbvr/minira\" title=\"https://github.com/bnjbvr/minira\"><code>minira</code></a></li>\n<li>Develop the binary-encoding pass that emits into a <code>CodeSink</code> from the above representation</li>\n</ul>\n<p>As discussed among @sunfishcode, @julian-seward1, @bnjbvr, and others, we want to do this work in order to clean up the story for a new machine backend, as recipes had become difficult to write and maintain.</p>\n<p>The system will be co-developed with an initial backend for ARM64 using the new interfaces.</p>\n</blockquote>",
        "id": 194336005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587056524
    }
]