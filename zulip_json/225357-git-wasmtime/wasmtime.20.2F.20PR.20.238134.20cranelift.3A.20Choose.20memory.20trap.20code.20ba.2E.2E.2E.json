[
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a>.</p>",
        "id": 426586395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710435498
    },
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a> from <code>jameysharp:memflags-trapcode</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Ideally we'd allow the frontend to specify what trap code a memory access instruction can produce, but we don't have room to store that information.</p>\n<p>Instead, I'm adding additional meaning to the <code>table</code> and <code>heap</code> memflags. Besides being used in alias analysis, these flags now also indicate whether the instruction should produce a trap code of TableOutOfBounds or HeapOutOfBounds, respectively.</p>\n<p>In the Cranelift weekly meeting we discussed that it would be nice to assert that either <code>table</code> or <code>heap</code> is set when the trap-code is requested, but I don't know if all users of the instruction encodings (such as cg-clif or Winch) set those flags, so I've chosen to default to the old behavior if none of the alias-analysis flags are set.</p>\n<p>Currently, memory accesses with the <code>table</code> flag set always have <code>notrap</code> set as well, so the TableOutOfBounds case is never hit, but I wanted to separate this change out from the cranelift-wasm changes which will use it.</p>\n</blockquote>",
        "id": 426586396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710435498
    },
    {
        "content": "<p><strong>jameysharp</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a>.</p>",
        "id": 426586398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710435498
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#issuecomment-1997983304\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a>:</p>\n<blockquote>\n<p>@cfallin, @elliottt: do you want to review this instead? I am not as familiar with these trapping bits as I should be.</p>\n</blockquote>",
        "id": 426593381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710437541
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a>.</p>",
        "id": 426594751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710438005
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#pullrequestreview-1937376590\">PR review</a>.</p>",
        "id": 426595295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710438206
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#pullrequestreview-1937376590\">PR review</a>.</p>",
        "id": 426595296,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710438206
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#discussion_r1525279571\">PR review comment</a>:</p>\n<blockquote>\n<p>I like the idea of this riding along with <code>MemFlags</code> -- it seems the most appropriate place to put it. However I'm not so sure about overloading the meaning of the alias-analysis bits; that feels like a future bug waiting to happen. Or at the very least, ties together a correctness-bearing concern with the particular implementation details of this version of an optimization pass. (E.g., what if we have a more detailed alias analysis in the future?)</p>\n<p>We have a <code>u16</code> for bitflags and only 9 flags defined currently; would you mind adding another two for <code>table_trap</code> and <code>heap_trap</code>?</p>\n</blockquote>",
        "id": 426595298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710438206
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a>.</p>",
        "id": 426601408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710440184
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#pullrequestreview-1937440093\">PR review</a>.</p>",
        "id": 426601785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710440312
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#discussion_r1525319519\">PR review comment</a>:</p>\n<blockquote>\n<p>That concern makes sense, although I don't think we should define both <code>table_trap</code> and <code>heap_trap</code> as separate bits, because then what trap code should we return if neither is set? So instead I've introduced a single <code>tabletrap</code> bit, and if it's not set, the trap code is <code>heap_oob</code> as usual.</p>\n</blockquote>",
        "id": 426601786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710440312
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#pullrequestreview-1937457128\">PR review</a>.</p>",
        "id": 426603459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710440912
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#discussion_r1525330329\">PR review comment</a>:</p>\n<blockquote>\n<p>OK, yep, that seems reasonable -- thanks!</p>\n</blockquote>",
        "id": 426603462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710440912
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134#pullrequestreview-1937457490\">PR review</a>:</p>\n<blockquote>\n<p>LGTM!</p>\n</blockquote>",
        "id": 426603499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710440923
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a>.</p>",
        "id": 426603511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710440929
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8134\">PR #8134</a>.</p>",
        "id": 426610316,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710443226
    }
]