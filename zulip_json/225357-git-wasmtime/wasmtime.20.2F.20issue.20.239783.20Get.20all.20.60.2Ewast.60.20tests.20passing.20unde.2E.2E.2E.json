[
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>.</p>",
        "id": 488110403,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733927045
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2536145792\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 488110545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733927083
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>Let's get all <code>.wast</code> tests passing under Pulley!</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/README.md\">Pulley</a> is Wasmtime's portable, optimizing interpreter.</p>\n<p>This is a good first issue for new contributors that are somewhat familiar with Rust development and are excited to dive into Wasmtime/Cranelift/compilers/interpreters/etc.</p>\n<h3><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/CONTRIBUTING.md\">Guide: How to Add Missing Instructions to Pulley and Get <code>.wast</code> Tests Passing</a></h3>\n</blockquote>",
        "id": 488111526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733927292
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>Let's get all <code>.wast</code> tests passing under Pulley!</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/README.md\">Pulley</a> is Wasmtime's portable, optimizing interpreter. When using Pulley, Wasmtime still uses Cranelift for optimizations, but Cranelift ultimately emits Pulley bytecode instead of machine code. Then, Wasmtime uses Pulley's interpreter to interpret the bytecode, instead of executing native machine code.</p>\n<p>&lt;details&gt; &lt;summary&gt;Diagram of the compiler pipeline with Pulley&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Wasm</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"n\">translation</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Wasmtime</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"n\">mid</span><span class=\"o\">-</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"n\">optimizations</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">ISLE</span><span class=\"w\"> </span><span class=\"n\">lowering</span><span class=\"w\"> </span><span class=\"n\">rules</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Pulley</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>This is a good first issue for new contributors that are already somewhat familiar with Rust development and are excited to dive into Wasmtime/Cranelift/compilers/interpreters/etc. To help out with this effort, follow this guide:</p>\n<h3><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/CONTRIBUTING.md\">Guide: How to Add Missing Instructions to Pulley and Get <code>.wast</code> Tests Passing</a></h3>\n<p>Note that we have <a href=\"https://docs.wasmtime.dev/contributing.html\">docs for contributing to Wasmtime and Cranelift in general</a> as well.</p>\n</blockquote>",
        "id": 488114383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733928040
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>Let's get all <code>.wast</code> tests passing under Pulley!</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/README.md\">Pulley</a> is Wasmtime's portable, optimizing interpreter. When using Pulley, Wasmtime still uses Cranelift for optimizations, but Cranelift ultimately emits Pulley bytecode instead of machine code. Then, Wasmtime uses Pulley's interpreter to interpret the bytecode, instead of executing native machine code.</p>\n<p>&lt;details&gt; &lt;summary&gt;Diagram of the compiler pipeline with Pulley&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Wasm</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"n\">translation</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Wasmtime</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"n\">mid</span><span class=\"o\">-</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"n\">optimizations</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">ISLE</span><span class=\"w\"> </span><span class=\"n\">lowering</span><span class=\"w\"> </span><span class=\"n\">rules</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Pulley</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>This is a good first issue for new contributors that are already somewhat familiar with Rust development and are excited to dive into Wasmtime/Cranelift/compilers/interpreters/etc. To help out with this effort, follow this guide:</p>\n<h3><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/CONTRIBUTING.md\">Guide: How to Add Missing Instructions to Pulley and Get <code>.wast</code> Tests Passing</a></h3>\n<p>Note that we have <a href=\"https://docs.wasmtime.dev/contributing.html\">docs for contributing to Wasmtime and Cranelift in general</a> as well.</p>\n<p>For the most up-to-date list of which <code>.wast</code> tests are passing and which are failing under Pulley, see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wast-util/src/lib.rs#L405\">the <code>WastTest::should_fail</code> method in <code>crates/wast-util/src/lib.rs</code></a>.</p>\n</blockquote>",
        "id": 488115269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733928272
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>Let's get all <code>.wast</code> tests passing under Pulley!</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/README.md\">Pulley</a> is Wasmtime's portable, optimizing interpreter. When using Pulley, Wasmtime still uses Cranelift (our optimizing compiler) for optimizations, but Cranelift ultimately emits Pulley bytecode instead of machine code. Then, Wasmtime uses Pulley's interpreter to interpret the bytecode, instead of executing native machine code.</p>\n<p>&lt;details&gt; &lt;summary&gt;Diagram of the compiler pipeline with Pulley&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Wasm</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"n\">translation</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Wasmtime</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"n\">mid</span><span class=\"o\">-</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"n\">optimizations</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">ISLE</span><span class=\"w\"> </span><span class=\"n\">lowering</span><span class=\"w\"> </span><span class=\"n\">rules</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Pulley</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>This is a good first issue for new contributors that are already somewhat familiar with Rust development and are excited to dive into Wasmtime/Cranelift/compilers/interpreters/etc. To help out with this effort, follow this guide:</p>\n<h3><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/CONTRIBUTING.md\">Guide: How to Add Missing Instructions to Pulley and Get <code>.wast</code> Tests Passing</a></h3>\n<p>Note that we have <a href=\"https://docs.wasmtime.dev/contributing.html\">docs for contributing to Wasmtime and Cranelift in general</a> as well.</p>\n<p>For the most up-to-date list of which <code>.wast</code> tests are passing and which are failing under Pulley, see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wast-util/src/lib.rs#L405\">the <code>WastTest::should_fail</code> method in <code>crates/wast-util/src/lib.rs</code></a>.</p>\n</blockquote>",
        "id": 488115440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733928318
    },
    {
        "content": "<p>Xuanwo <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2564197255\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>For newcomers to this issue:</p>\n<ul>\n<li>[ ] \"misc_testsuite/simd/canonicalize-nan.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/issue_3327_bnot_lowering.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/v128-select.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/annotations/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9897\">https://github.com/bytecodealliance/wasmtime/pull/9897</a></li>\n<li>[ ] \"spec_testsuite/simd_f32x4_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_extadd_pairwise_i8x16.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_q15mulr_sat_s.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_sat_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9907\">https://github.com/bytecodealliance/wasmtime/pull/9907</a></li>\n<li>[ ] \"spec_testsuite/simd_i32x4_dot_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_extadd_pairwise_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f32x4.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f64x2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i64x2_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_sat_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_load.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_splat.wast\"</li>\n</ul>\n</blockquote>",
        "id": 491062651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735364039
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2564197255\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>For newcomers to this issue:</p>\n<ul>\n<li>[ ] \"misc_testsuite/simd/canonicalize-nan.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/issue_3327_bnot_lowering.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/v128-select.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/annotations/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i32x4_relaxed_trunc.wast\"</li>\n<li>[x] \"spec_testsuite/simd_f32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9897\">https://github.com/bytecodealliance/wasmtime/pull/9897</a></li>\n<li>[ ] \"spec_testsuite/simd_f32x4_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_extadd_pairwise_i8x16.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_q15mulr_sat_s.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_sat_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9907\">https://github.com/bytecodealliance/wasmtime/pull/9907</a></li>\n<li>[ ] \"spec_testsuite/simd_i32x4_dot_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_extadd_pairwise_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f32x4.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f64x2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i64x2_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_sat_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_load.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_splat.wast\"</li>\n</ul>\n</blockquote>",
        "id": 491203172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735502586
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2564197255\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>For newcomers to this issue:</p>\n<ul>\n<li>[ ] \"misc_testsuite/simd/canonicalize-nan.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/issue_3327_bnot_lowering.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/v128-select.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/annotations/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i32x4_relaxed_trunc.wast\"</li>\n<li>[x] \"spec_testsuite/simd_f32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9897\">https://github.com/bytecodealliance/wasmtime/pull/9897</a></li>\n<li>[ ] \"spec_testsuite/simd_f32x4_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_extadd_pairwise_i8x16.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_q15mulr_sat_s.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_sat_arith.wast\"</li>\n<li>[x] \"spec_testsuite/simd_i32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9907\">https://github.com/bytecodealliance/wasmtime/pull/9907</a></li>\n<li>[ ] \"spec_testsuite/simd_i32x4_dot_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_extadd_pairwise_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f32x4.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f64x2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i64x2_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_sat_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_lane.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_load.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_splat.wast\"</li>\n</ul>\n</blockquote>",
        "id": 491203173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735502587
    },
    {
        "content": "<p>Xuanwo edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2564197255\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>For newcomers to this issue:</p>\n<ul>\n<li>[ ] \"misc_testsuite/simd/canonicalize-nan.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/issue_3327_bnot_lowering.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/v128-select.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_dot_product.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i32x4_relaxed_trunc.wast\"</li>\n<li>[x] \"spec_testsuite/simd_f32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9897\">https://github.com/bytecodealliance/wasmtime/pull/9897</a></li>\n<li>[ ] \"spec_testsuite/simd_f32x4_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_extadd_pairwise_i8x16.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_q15mulr_sat_s.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_sat_arith.wast\"</li>\n<li>[x] \"spec_testsuite/simd_i32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9907\">https://github.com/bytecodealliance/wasmtime/pull/9907</a></li>\n<li>[ ] \"spec_testsuite/simd_i32x4_dot_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_extadd_pairwise_i16x8.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f32x4.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f64x2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i64x2_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_sat_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_load.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_splat.wast\"</li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9910\">https://github.com/bytecodealliance/wasmtime/pull/9910</a><br>\n    - [ ] \"spec_testsuite/simd_lane.wast\"<br>\n    - [ ] \"spec_testsuite/proposals/memory64/simd_lane.wast\"<br>\n    - [ ] \"spec_testsuite/proposals/annotations/simd_lane.wast\"</li>\n</ul>\n</blockquote>",
        "id": 491227464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735525897
    },
    {
        "content": "<p>Xuanwo edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2564197255\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>For newcomers to this issue:</p>\n<ul>\n<li>[ ] \"misc_testsuite/simd/canonicalize-nan.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/issue_3327_bnot_lowering.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/v128-select.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i32x4_relaxed_trunc.wast\"</li>\n<li>[x] \"spec_testsuite/simd_f32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9897\">https://github.com/bytecodealliance/wasmtime/pull/9897</a></li>\n<li>[ ] \"spec_testsuite/simd_f32x4_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_q15mulr_sat_s.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_sat_arith.wast\"</li>\n<li>[x] \"spec_testsuite/simd_i32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9907\">https://github.com/bytecodealliance/wasmtime/pull/9907</a></li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f32x4.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f64x2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i64x2_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_arith2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i8x16_sat_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_load.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_splat.wast\"</li>\n<li>\n<p>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9910\">https://github.com/bytecodealliance/wasmtime/pull/9910</a><br>\n    - \"spec_testsuite/simd_lane.wast\"<br>\n    - \"spec_testsuite/proposals/memory64/simd_lane.wast\"<br>\n    - \"spec_testsuite/proposals/annotations/simd_lane.wast\"</p>\n</li>\n<li>\n<p>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9912\">https://github.com/bytecodealliance/wasmtime/pull/9912</a></p>\n<ul>\n<li>\"spec_testsuite/proposals/relaxed-simd/relaxed_dot_product.wast\"</li>\n<li>\"spec_testsuite/proposals/memory64/relaxed_dot_product.wast\"</li>\n<li>\"spec_testsuite/simd_i16x8_extadd_pairwise_i8x16.wast\"</li>\n<li>\"spec_testsuite/simd_i32x4_dot_i16x8.wast\"</li>\n<li>\"spec_testsuite/simd_i32x4_extadd_pairwise_i16x8.wast\"</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 491227565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735525994
    },
    {
        "content": "<p>Xuanwo edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2564197255\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>For newcomers to this issue:</p>\n<ul>\n<li>[ ] \"misc_testsuite/simd/canonicalize-nan.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/issue_3327_bnot_lowering.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/v128-select.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i32x4_relaxed_trunc.wast\"</li>\n<li>[x] \"spec_testsuite/simd_f32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9897\">https://github.com/bytecodealliance/wasmtime/pull/9897</a></li>\n<li>[ ] \"spec_testsuite/simd_f32x4_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_q15mulr_sat_s.wast\"</li>\n<li>[x] \"spec_testsuite/simd_i32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9907\">https://github.com/bytecodealliance/wasmtime/pull/9907</a></li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f32x4.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f64x2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_load.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_splat.wast\"</li>\n<li>\n<p>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9910\">https://github.com/bytecodealliance/wasmtime/pull/9910</a><br>\n    - \"spec_testsuite/simd_lane.wast\"<br>\n    - \"spec_testsuite/proposals/memory64/simd_lane.wast\"<br>\n    - \"spec_testsuite/proposals/annotations/simd_lane.wast\"</p>\n</li>\n<li>\n<p>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9912\">https://github.com/bytecodealliance/wasmtime/pull/9912</a></p>\n<ul>\n<li>\"spec_testsuite/proposals/relaxed-simd/relaxed_dot_product.wast\"</li>\n<li>\"spec_testsuite/proposals/memory64/relaxed_dot_product.wast\"</li>\n<li>\"spec_testsuite/simd_i16x8_extadd_pairwise_i8x16.wast\"</li>\n<li>\"spec_testsuite/simd_i32x4_dot_i16x8.wast\"</li>\n<li>\"spec_testsuite/simd_i32x4_extadd_pairwise_i16x8.wast\"</li>\n</ul>\n</li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9908\">https://github.com/bytecodealliance/wasmtime/pull/9908</a><ul>\n<li>\"spec_testsuite/simd_i16x8_sat_arith.wast\"</li>\n<li>\"spec_testsuite/simd_i64x2_arith2.wast\"</li>\n<li>\"spec_testsuite/simd_i8x16_arith2.wast\"</li>\n<li>\"spec_testsuite/simd_i8x16_sat_arith.wast\"</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 491227698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735526120
    },
    {
        "content": "<p>Xuanwo edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2564197255\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>For newcomers to this issue, here is all the remaining tasks avaiable:</p>\n<ul>\n<li>[ ] \"misc_testsuite/simd/canonicalize-nan.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/issue_3327_bnot_lowering.wast\"</li>\n<li>[ ] \"misc_testsuite/simd/v128-select.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/i32x4_relaxed_trunc.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/relaxed-simd/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/relaxed_madd_nmadd.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i16x8_relaxed_q15mulr_s.wast\"</li>\n<li>[ ] \"spec_testsuite/proposals/memory64/i32x4_relaxed_trunc.wast\"</li>\n<li>[x] \"spec_testsuite/simd_f32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9897\">https://github.com/bytecodealliance/wasmtime/pull/9897</a></li>\n<li>[ ] \"spec_testsuite/simd_f32x4_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f32x4_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_arith.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_cmp.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_f64x2_pmin_pmax.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i16x8_q15mulr_sat_s.wast\"</li>\n<li>[x] \"spec_testsuite/simd_i32x4_arith.wast\" <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9907\">https://github.com/bytecodealliance/wasmtime/pull/9907</a></li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f32x4.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_i32x4_trunc_sat_f64x2.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_load.wast\"</li>\n<li>[ ] \"spec_testsuite/simd_splat.wast\"</li>\n<li>\n<p>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9910\">https://github.com/bytecodealliance/wasmtime/pull/9910</a><br>\n    - \"spec_testsuite/simd_lane.wast\"<br>\n    - \"spec_testsuite/proposals/memory64/simd_lane.wast\"<br>\n    - \"spec_testsuite/proposals/annotations/simd_lane.wast\"</p>\n</li>\n<li>\n<p>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9912\">https://github.com/bytecodealliance/wasmtime/pull/9912</a></p>\n<ul>\n<li>\"spec_testsuite/proposals/relaxed-simd/relaxed_dot_product.wast\"</li>\n<li>\"spec_testsuite/proposals/memory64/relaxed_dot_product.wast\"</li>\n<li>\"spec_testsuite/simd_i16x8_extadd_pairwise_i8x16.wast\"</li>\n<li>\"spec_testsuite/simd_i32x4_dot_i16x8.wast\"</li>\n<li>\"spec_testsuite/simd_i32x4_extadd_pairwise_i16x8.wast\"</li>\n</ul>\n</li>\n<li>[ ] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9908\">https://github.com/bytecodealliance/wasmtime/pull/9908</a><ul>\n<li>\"spec_testsuite/simd_i16x8_sat_arith.wast\"</li>\n<li>\"spec_testsuite/simd_i64x2_arith2.wast\"</li>\n<li>\"spec_testsuite/simd_i8x16_arith2.wast\"</li>\n<li>\"spec_testsuite/simd_i8x16_sat_arith.wast\"</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 491227731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735526154
    },
    {
        "content": "<p>takaebato <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2565413301\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>Hi! I'd like to try tackling some of them!</p>\n</blockquote>",
        "id": 491275688,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1735561193
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>Let's get all <code>.wast</code> tests passing under Pulley!</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/README.md\">Pulley</a> is Wasmtime's portable, optimizing interpreter. When using Pulley, Wasmtime still uses Cranelift (our optimizing compiler) for optimizations, but Cranelift ultimately emits Pulley bytecode instead of machine code. Then, Wasmtime uses Pulley's interpreter to interpret the bytecode, instead of executing native machine code.</p>\n<p>&lt;details&gt; &lt;summary&gt;Diagram of the compiler pipeline with Pulley&lt;/summary&gt;</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"n\">Wasm</span><span class=\"o\">-</span><span class=\"n\">to</span><span class=\"o\">-</span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"n\">translation</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Wasmtime</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"n\">mid</span><span class=\"o\">-</span><span class=\"n\">end</span><span class=\"w\"> </span><span class=\"n\">optimizations</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">         </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">CLIF</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">         </span><span class=\"o\">+------+</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">    </span><span class=\"n\">ISLE</span><span class=\"w\"> </span><span class=\"n\">lowering</span><span class=\"w\"> </span><span class=\"n\">rules</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Cranelift</span><span class=\"p\">)</span>\n<span class=\"w\">            </span><span class=\"o\">|</span>\n<span class=\"w\">            </span><span class=\"n\">V</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">Pulley</span><span class=\"w\"> </span><span class=\"n\">bytecode</span><span class=\"w\"> </span><span class=\"o\">|</span>\n<span class=\"w\">   </span><span class=\"o\">+-----------------+</span>\n</code></pre></div>\n<p>&lt;/details&gt;</p>\n<p>This is a good first issue for new contributors that are already somewhat familiar with Rust development and are excited to dive into Wasmtime/Cranelift/compilers/interpreters/etc. To help out with this effort, follow this guide:</p>\n<h3><a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/pulley/CONTRIBUTING.md\">Guide: How to Add Missing Instructions to Pulley and Get <code>.wast</code> Tests Passing</a></h3>\n<p>Note that we have <a href=\"https://docs.wasmtime.dev/contributing.html\">docs for contributing to Wasmtime and Cranelift in general</a> as well.</p>\n<p>For the most up-to-date list of which <code>.wast</code> tests are passing and which are failing under Pulley, see <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/wast-util/src/lib.rs#L405\">the <code>WastTest::should_fail</code> method in <code>crates/wast-util/src/lib.rs</code></a>.</p>\n</blockquote>",
        "id": 493426906,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736795182
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783#issuecomment-2587977106\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9783\">issue #9783</a>:</p>\n<blockquote>\n<p>Thanks again to everyone who helped out with this!</p>\n</blockquote>",
        "id": 493427562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736795407
    }
]