[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221727009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609899808
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221727417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609900313
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550#pullrequestreview-562776453\">PR Review</a>.</p>",
        "id": 221776467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609945230
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221807119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609959456
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221815138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609963271
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221825796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609968357
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221828127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609969797
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221830217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609970955
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 221991086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610048746
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This improves the design of Wiggle's ability to terminate WebAssembly execution by introducing a new<br>\n<code>enum Trap { I32Exit(i32), String(String) }</code>.</p>\n<p>Previously, Wiggle users could terminate WebAssembly by giving an <code>Err(String)</code> in the <code>UserErrorConversion</code> impl. This has evolved into <code>Err(wiggle::Trap)</code>, so that the termination can either give a human-readable trap, or an i32 exit code.</p>\n<p>The big win here is we can finally implement wasi's <code>proc_exit</code> function in \"pure\" Wiggle, without the function override facility. So, this change has been threaded through the <code>wasi-common</code> crate and then into <code>wasi-wasmtime</code>.</p>\n<p>I even uncovered some cli tests that technically didn't conform to the Wasi command spec because they didn't export a memory - wiggle now catches this, the old proc_exit override did not. These were trivially fixed.</p>\n<p>The function override facility has been left in Wiggle for the time being, but I expect to remove it soon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 222006134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610056191
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This improves the design of Wiggle's ability to terminate WebAssembly execution by introducing a new<br>\n<code>enum Trap { I32Exit(i32), String(String) }</code>.</p>\n<p>Previously, Wiggle users could terminate WebAssembly by giving an <code>Err(String)</code> in the <code>UserErrorConversion</code> impl. This has evolved into <code>Err(wiggle::Trap)</code>, so that the termination can either give a human-readable trap, or an i32 exit code.</p>\n<p>The big win here is we can finally implement wasi's <code>proc_exit</code> function in \"pure\" Wiggle, without the function override facility. So, this change has been threaded through the <code>wasi-common</code> crate and then into <code>wasi-wasmtime</code>.</p>\n<p>I even uncovered some cli tests that technically didn't conform to the Wasi command spec because they didn't export a memory - wiggle now catches this, the old proc_exit override did not. These were trivially fixed.</p>\n<p>Finally, instead of leaving the <code>unimplemented!</code> macro in the several spots in the wasi trait, I replaced them with an <code>Error::Unsupported</code> variant that produces a <code>Trap</code>.</p>\n<p>The function override facility has been left in Wiggle for the time being, but I expect to remove it soon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 222008177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610057128
    },
    {
        "content": "<p><strong>pchickey</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> as ready for review.</p>",
        "id": 222008211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610057142
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This improves the design of Wiggle's ability to terminate WebAssembly execution by introducing a new<br>\n<code>enum Trap { I32Exit(i32), String(String) }</code>.</p>\n<p>Previously, Wiggle users could terminate WebAssembly by giving an <code>Err(String)</code> in the <code>UserErrorConversion</code> impl. This has evolved into <code>Err(wiggle::Trap)</code>, so that the termination can either give a human-readable trap, or an i32 exit code.</p>\n<p>The big win here is we can finally implement wasi's <code>proc_exit</code> function in \"pure\" Wiggle, without the function override facility. So, this change has been threaded through the <code>wasi-common</code> crate and then into <code>wasi-wasmtime</code>.</p>\n<p>I even uncovered some cli tests that technically didn't conform to the Wasi command spec because they didn't export a memory - wiggle now catches this, the old proc_exit override did not. These were trivially fixed.</p>\n<p>Finally, instead of leaving the <code>unimplemented!</code> macro in the several spots in the wasi trait, I replaced them with an <code>Error::Unsupported</code> variant that produces a <code>Trap</code>.</p>\n<p>The function override facility has been left in Wiggle for the time being, but I expect to remove it soon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 222008326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610057177
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a>.</p>",
        "id": 222008345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610057187
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This improves the design of Wiggle's ability to terminate WebAssembly execution by introducing a new<br>\n<code>enum Trap { I32Exit(i32), String(String) }</code>. This is just a simple version of Wasmtime's own <code>Trap</code>, which will be compatible with Lucet as well.</p>\n<p>Previously, Wiggle users could terminate WebAssembly by giving an <code>Err(String)</code> in the <code>UserErrorConversion</code> impl. This has evolved into <code>Err(wiggle::Trap)</code>, so that the termination can either give a human-readable trap, or an i32 exit code.</p>\n<p>The big win here is we can finally implement wasi's <code>proc_exit</code> function in \"pure\" Wiggle, without the function override facility. So, this change has been threaded through the <code>wasi-common</code> crate and then into <code>wasi-wasmtime</code>.</p>\n<p>I even uncovered some cli tests that technically didn't conform to the Wasi command spec because they didn't export a memory - wiggle now catches this, the old proc_exit override did not. These were trivially fixed.</p>\n<p>Finally, instead of leaving the <code>unimplemented!</code> macro in the several spots in the wasi trait, I replaced them with an <code>Error::Unsupported</code> variant that produces a <code>Trap</code>.</p>\n<p>The function override facility has been left in Wiggle for the time being, but I expect to remove it soon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 222008447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610057239
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This improves the design of Wiggle's ability to terminate WebAssembly execution by introducing a new<br>\n<code>enum Trap { I32Exit(i32), String(String) }</code>. This is just a simple version of Wasmtime's own <code>Trap</code>, which will be compatible with Lucet as well.</p>\n<p>Previously, Wiggle users could terminate WebAssembly by giving an <code>Err(String)</code> in the <code>UserErrorConversion</code> impl. This has evolved into <code>Err(wiggle::Trap)</code>, so that the termination can either give a human-readable trap, or an i32 exit code.</p>\n<p>Additionally, functions which are <code>(@witx noreturn)</code> now have a return type of <code>wiggle::Trap</code>, using the type system to enforce that they terminate WebAssembly execution.</p>\n<p>The big win here is we can finally implement wasi's <code>proc_exit</code> function in \"pure\" Wiggle, without the function override facility. So, this change has been threaded through the <code>wasi-common</code> crate and then into <code>wasi-wasmtime</code>.</p>\n<p>I even uncovered some cli tests that technically didn't conform to the Wasi command spec because they didn't export a memory - wiggle now catches this, the old proc_exit override did not. These were trivially fixed.</p>\n<p>Finally, instead of leaving the <code>unimplemented!</code> macro in the several spots in the wasi trait, I replaced them with an <code>Error::Unsupported</code> variant that produces a <code>Trap</code>.</p>\n<p>The function override facility has been left in Wiggle for the time being, but I expect to remove it soon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 222012319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610059341
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550#pullrequestreview-563884376\">PR Review</a>.</p>",
        "id": 222012703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610059576
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This improves the design of Wiggle's ability to terminate WebAssembly execution by introducing a new<br>\n<code>enum Trap { I32Exit(i32), String(String) }</code>. This is just a simple version of Wasmtime's own <code>Trap</code>, which will be compatible with Lucet as well.</p>\n<p>Previously, Wiggle users could terminate WebAssembly by giving an <code>Err(String)</code> in the <code>UserErrorConversion</code> impl. This has evolved into <code>Err(wiggle::Trap)</code>, so that the termination can either give a human-readable trap, or an i32 exit code.</p>\n<p>Additionally, functions which are <code>(@witx noreturn)</code> now have a return type of <code>wiggle::Trap</code>, using the type system to enforce that they terminate WebAssembly execution.</p>\n<p>The big win here is we can finally implement wasi's <code>proc_exit</code> function in \"pure\" Wiggle, without the function override facility. So, this change has been threaded through the <code>wasi-common</code> crate and then into <code>wasi-wasmtime</code>.</p>\n<p>I even uncovered some cli tests that technically didn't conform to the Wasi command spec because they didn't export a memory - wiggle now catches this, the old proc_exit override did not. These were trivially fixed.</p>\n<p>Finally, instead of leaving the <code>unimplemented!</code> macro in the several spots in the wasi trait, I replaced them with an <code>Error::Unsupported</code> variant that produces a <code>Trap</code>.</p>\n<p>The function override facility has been left in Wiggle for the time being, but I expect to remove it soon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 222012826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610059657
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a> from <code>pch/wiggle_trapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This improves the design of Wiggle's ability to terminate WebAssembly execution by introducing a new<br>\n<code>enum Trap { I32Exit(i32), String(String) }</code>. This is just a simple version of Wasmtime's own <code>Trap</code>, which will be compatible with Lucet as well.</p>\n<p>Previously, Wiggle users could terminate WebAssembly by giving an <code>Err(String)</code> in the <code>UserErrorConversion</code> impl. This has evolved into <code>Err(wiggle::Trap)</code>, so that the termination can either give a human-readable trap, or an i32 exit code.</p>\n<p>Additionally, functions which are <code>(@witx noreturn)</code> now have a return type of <code>wiggle::Trap</code>, using the type system to enforce that they terminate WebAssembly execution.</p>\n<p>The big win here is we can finally implement wasi's <code>proc_exit</code> function in \"pure\" Wiggle, without the function override facility. So, this change has been threaded through the <code>wasi-common</code> crate and then into <code>wasi-wasmtime</code>.</p>\n<p>I even uncovered some cli tests that technically didn't conform to the Wasi command spec because they didn't export a memory - wiggle now catches this, the old proc_exit override did not. These were trivially fixed.</p>\n<p>Finally, instead of leaving the <code>unimplemented!</code> macro in the several spots in the wasi trait, I replaced them with an <code>Error::Unsupported</code> variant that produces a <code>Trap</code>.</p>\n<p>The function override facility has been left in Wiggle for the time being, but I expect to remove it soon.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 222013812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610060249
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2550\">PR #2550</a>.</p>",
        "id": 222020725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1610065403
    }
]