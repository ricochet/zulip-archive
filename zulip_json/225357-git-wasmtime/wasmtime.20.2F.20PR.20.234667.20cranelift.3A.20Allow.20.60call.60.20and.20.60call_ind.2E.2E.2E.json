[
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>Reuse trampolines based on signature</li>\n<li>Renames function to <code>User</code> so that they are linkable in JIT</li>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n</ul>\n</blockquote>",
        "id": 292653398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660077382
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>Reuse trampolines based on signature</li>\n<li>Rename functions to <code>User</code> so that they are linkable in JIT</li>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n</ul>\n</blockquote>",
        "id": 292654208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660077719
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>Reuse trampolines based on signature</li>\n<li>Auto rename functions to <code>ExtName::User</code> so that they are linkable in JIT</li>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n</ul>\n</blockquote>",
        "id": 292654309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660077740
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>Reuse trampolines based on signature</li>\n<li>Auto rename functions to <code>ExtName::User</code> so that they are linkable in JIT</li>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n<li>Generate <code>call</code>'s in the fuzzer</li>\n</ul>\n</blockquote>",
        "id": 292654665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660077901
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>Reuse trampolines based on signature</li>\n<li>Auto rename functions to <code>ExtName::User</code> so that they are callable in JIT</li>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n<li>Generate <code>call</code>'s in the fuzzer</li>\n</ul>\n</blockquote>",
        "id": 292659611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660079993
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293815158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660691337
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n<li>Reuse trampolines based on signature</li>\n<li>Auto rename functions to <code>ExtName::User</code> so that they are callable in JIT</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n<li>Generate <code>call</code>'s in the fuzzer</li>\n</ul>\n</blockquote>",
        "id": 293815524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660691555
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n<li>Reuses trampolines based on signature (something we lost in #4453)</li>\n<li>Internally auto renames functions to <code>ExtName::User</code> so that they are callable in JIT.</li>\n</ul>\n<p>TODO:</p>\n<ul>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n<li>Generate <code>call</code>'s in the fuzzer</li>\n</ul>\n</blockquote>",
        "id": 293816218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660692055
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293816581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660692318
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293849247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660722039
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293851516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660723286
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This is an in progress PR just to share my current ideas for where to take the runtest suite.</p>\n<p>It is based on top of #4453 and rewrites a lot of the code, but I felt it would be easier to review as a separate PR.</p>\n<p>This PR does a number of things.</p>\n<ul>\n<li>Changes the order that we run tests from per func, per target to per target, per func.</li>\n<li>Compiles the entire file once per target and then calls the trampolines for each run invocation</li>\n<li>Renames functions in runtest files, since they must now be unique.</li>\n<li>Reuses trampolines based on signature (something we lost in #4453)</li>\n<li>Internally auto renames functions to <code>ExtName::User</code> so that they are callable in JIT.</li>\n<li>Adds tests with <code>call</code> and <code>call_indirect</code> !</li>\n</ul>\n<p>TODO (for a future PR):</p>\n<ul>\n<li>Register all functions at once in <code>test interpreter</code> so that we can also enable <code>call</code> tests there</li>\n<li>Add a list of allowed CallConv's per target, so that we can test calling between different CallConv's</li>\n<li>Generate <code>call</code>'s in the fuzzer</li>\n</ul>\n</blockquote>",
        "id": 293851653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660723331
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293855682,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660725225
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293856540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660725648
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293863139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660728731
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1075393871\">PR review</a>.</p>",
        "id": 293864818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660729581
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r947699741\">PR review comment</a>:</p>\n<blockquote>\n<p>@akirilov-arm Do we need more variations of this?</p>\n<p>Right now this runs the tests with both <code>sign_return_address</code> on and off, but with <code>has_pauth</code> always disabled (even if the host supports it). </p>\n<p>My questions here are more directed towards, do we need <code>sign_return_address_all</code>? And if we have <code>has_pauth</code> enabled and we start validating addresses, can we trust that the A key is the correct one to use (unless specified otherwise like it is for MacOSX)?</p>\n</blockquote>",
        "id": 293864819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660729581
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r947699741\">PR review comment</a>.</p>",
        "id": 293865007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660729692
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r947699741\">PR review comment</a>.</p>",
        "id": 293865048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660729713
    },
    {
        "content": "<p><strong>afonso360</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> as ready for review.</p>",
        "id": 293866364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660730322
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r948045392\">PR review comment</a>:</p>\n<blockquote>\n<p>While it is always better to check more options, <code>sign_return_address</code> covers probably at least 90% of the problem space. As for <code>has_pauth</code>, I am not sure what you mean - currently that setting changes just one small code generation detail (whether to use <code>RETAA</code>/<code>RETAB</code> instead of <code>AUTIASP</code>/<code>AUTIBSP</code> + <code>RET</code>), and only when used in combination with <code>sign_return_address</code> (it has no effect otherwise). Concerning the A key, Linux does not impose any particular key choice, even within the same process - the only important detail is to be consistent, that is sign and authenticate a specific pointer value with the same key.</p>\n</blockquote>",
        "id": 293913077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660747940
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1075888129\">PR review</a>.</p>",
        "id": 293913078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660747940
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r948194028\">PR review comment</a>:</p>\n<blockquote>\n<p>Tell me if I have this right: these tests only worked before because the actual function name was ignored, so it didn't matter that the <code>run</code> comments said <code>little</code> when the function declaration said <code>big</code>.</p>\n</blockquote>",
        "id": 293944081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757768
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1076090502\">PR review</a>.</p>",
        "id": 293944083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757768
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1076090502\">PR review</a>.</p>",
        "id": 293944084,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660757768
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1076174602\">PR review</a>.</p>",
        "id": 293946789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660758738
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r948256581\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, <code>test run</code> (used to) ignore the actual name of the function.</p>\n<p>We have had similar issues when we started adding <code>test interpret</code> to the runtests, since it calls functions by their <code>ExternalName</code>, however the interpreter also isn't used in this file.</p>\n</blockquote>",
        "id": 293946790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660758738
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r948278572\">PR review comment</a>:</p>\n<blockquote>\n<p>That's good to know! I didn't know if adding <code>has_pauth</code> would affect these test cases in any meaningful way. But we might as well test those other cases with <code>has_pauth</code>.</p>\n<p>I guess we can leave the more advanced cases for later.<br>\n</p>\n</blockquote>",
        "id": 293950946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660760348
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1076206199\">PR review</a>.</p>",
        "id": 293950947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660760348
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 293952341,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660760891
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r949027601\">PR review comment</a>:</p>\n<blockquote>\n<p>I am sorry, but I forgot to mention one important detail - the <code>RETAA</code>/<code>RETAB</code> instruction won't be recognized by hardware that does not support pointer authentication, so it will cause a processor exception, and that's why we can't just enable <code>has_pauth</code> here. Given that <code>sign_return_address</code> is also enabled, <code>has_pauth</code> basically implies generating code that is <strong>not</strong> backward compatible, , i.e. non-<code>HINT</code> instructions, so it is similar to, say, <code>has_avx512vl</code>.</p>\n<p>Note that this is <strong>not</strong> an issue with <code>sign_return_address</code> by itself.</p>\n</blockquote>",
        "id": 294059459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660823041
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1077198364\">PR review</a>.</p>",
        "id": 294059460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660823041
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1077236395\">PR review</a>.</p>",
        "id": 294064409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660824923
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r949054324\">PR review comment</a>:</p>\n<blockquote>\n<p>That should be ok, we only run these tests if <code>cranelift-native</code> detects that the host <code>has_pauth</code>, otherwise they get skipped in the runtest suite. It won't run the test on every machine, but at least qemu seem to emulate pauth and should run all of these (I haven't confirmed this though).</p>\n</blockquote>",
        "id": 294064411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660824923
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r949058171\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I didn't realize that the feature detection logic in <code>cranelift-native</code> overrode the directives in the test files. In that case there is no issue, indeed, and you are absolutely correct that QEMU supports pretty much all ISA extensions that we use.</p>\n</blockquote>",
        "id": 294065038,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660825172
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1077243939\">PR review</a>.</p>",
        "id": 294065039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660825172
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 295021102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661338447
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 295021433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661338588
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 295045225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661347245
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 295238758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437468
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 295238985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661437538
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r955229921\">PR review comment</a>:</p>\n<blockquote>\n<p>semicolon at end of statement? (I guess here rustc let it slide because it's the end of the block)</p>\n</blockquote>",
        "id": 295276908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661448622
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r955228295\">PR review comment</a>:</p>\n<blockquote>\n<p>Any particular reason for this test to be deleted?</p>\n</blockquote>",
        "id": 295276909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661448622
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1085824675\">PR review</a>.</p>",
        "id": 295276910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661448622
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1085824675\">PR review</a>.</p>",
        "id": 295276911,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661448622
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1085862357\">PR review</a>.</p>",
        "id": 295278837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661449334
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r955253847\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, s390x crashes when compiling it.</p>\n<p>It didn't so far because it didn't have a <code>; run</code> declaration so we never compiled it.</p>\n<p>It also looks like a artifact from when it was moved to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/i128-bricmp-overflow.clif\">i128-bricmp-overflow.clif</a></p>\n</blockquote>",
        "id": 295278838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661449334
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a> from <code>runtest-multifunc</code> to <code>main</code>.</p>",
        "id": 295279232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661449485
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#discussion_r956392048\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I see, thanks; this seems reasonable then.</p>\n</blockquote>",
        "id": 295500114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542871
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667#pullrequestreview-1087452090\">PR review</a>.</p>",
        "id": 295500115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542871
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4667\">PR #4667</a>.</p>",
        "id": 295500297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661542938
    }
]