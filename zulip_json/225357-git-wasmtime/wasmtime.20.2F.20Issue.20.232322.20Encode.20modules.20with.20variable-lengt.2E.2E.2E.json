[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322#issuecomment-716261718\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322\">Issue #2322</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 214525491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603677761
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322#issuecomment-721910896\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322\">Issue #2322</a>:</p>\n<blockquote>\n<p>To be clear this is just enabling variable length encoding for integers, right? It is <em>not</em> switching to a delta encoding (which would ensure that essentially all addresses are 1-byte encoded) correct?</p>\n</blockquote>",
        "id": 215625240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604515949
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322#issuecomment-721928245\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322\">Issue #2322</a>:</p>\n<blockquote>\n<p>Ah yes indeed, a delta encoding might make it even more further compact.</p>\n<p>I've so far shied away from big changes like that though. I think we may want to do it eventually, but it trades-off in-memory footprint for lookup speed since we can no longer quickly do a random lookup for a particular trapping pc. Not that we necessarily need that to be <em>too</em> too fast.</p>\n</blockquote>",
        "id": 215629583,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604517991
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322#issuecomment-721930673\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322\">Issue #2322</a>:</p>\n<blockquote>\n<p>I'm only advocating for delta encoding in the serialized format, not the in-memory representation.</p>\n</blockquote>",
        "id": 215630152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604518271
    },
    {
        "content": "<p>tschneidereit <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322#issuecomment-722329207\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2322\">Issue #2322</a>:</p>\n<blockquote>\n<blockquote>\n<p>I'm only advocating for delta encoding in the serialized format, not the in-memory representation.</p>\n</blockquote>\n<p>I think it'd be good to try not to have those two deviate too much: ideally we should at some point be able to mmap the on-disk representation entirely or almost entirely instead of having to read and deserialize it.</p>\n<p>There clearly are size/speed tradeoffs to be had here, so that might not be the <em>only</em> thing we support, but I hope it can become <em>a</em> thing we support :)</p>\n</blockquote>",
        "id": 215701033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1604576988
    }
]