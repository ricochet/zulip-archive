[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a> from <code>elliottt:trevor/s390x-avoid-copy</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>After the switch to providing SSA input to RA2, these uses of <code>copy_reg</code> should no longer be necessary. Additionally, as RA2-0.7.0 has removed support for program moves, these moves will no longer be optimized away.<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 351388775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682011797
    },
    {
        "content": "<p><strong>elliottt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a> as ready for review.</p>",
        "id": 351396995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014152
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a>.</p>",
        "id": 351396996,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014153
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a>.</p>",
        "id": 351396997,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014153
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a>:</p>\n<blockquote>\n<p>After the switch to providing SSA input to RA2, these uses of <code>copy_reg</code> should no longer be necessary. Additionally, as RA2-0.7.0 has removed support for program moves, these moves will no longer be optimized away.</p>\n<p>@uweigand, could you take a look as well? These uses of <code>copy_reg</code> all looked like they'd be fine to remove, but I could be missing something.<br>\n&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 351397142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682014199
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253#pullrequestreview-1394584063\">PR review</a>:</p>\n<blockquote>\n<p>This seems reasonable to me, and Ulrich okayed it, so I'm happy.</p>\n<p>I would like to understand the two cases where this adds an extra move though, ideally before merging.</p>\n</blockquote>",
        "id": 351408305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682017481
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253#pullrequestreview-1394584063\">PR review</a>:</p>\n<blockquote>\n<p>This seems reasonable to me, and Ulrich okayed it, so I'm happy.</p>\n<p>I would like to understand the two cases where this adds an extra move though, ideally before merging.</p>\n</blockquote>",
        "id": 351408306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682017481
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253#discussion_r1172980886\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm curious about the extra move here too.</p>\n</blockquote>",
        "id": 351408308,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682017481
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253#discussion_r1172972664\">PR review comment</a>:</p>\n<blockquote>\n<p>Any idea why this is inserting an extra move?</p>\n</blockquote>",
        "id": 351408309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682017481
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253#discussion_r1173052767\">PR review comment</a>:</p>\n<blockquote>\n<p>The moves not existing in the input removes a degree of freedom for RA2, and as a result the tight constraints imposed from the abi end up forcing a move in the middle of the program. If we instead compile this function:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">srem_i16</span><span class=\"p\">(</span><span class=\"kt\">i16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i16</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i16</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i16</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i16</span><span class=\"p\">)</span>:\n  <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iadd</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>\n<span class=\"w\">  </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">srem</span><span class=\"p\">.</span><span class=\"kt\">i16</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>\n<span class=\"w\">  </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>The output looks much better, as the indirection of <code>v1</code> through a register other than <code>r3</code> allows for better allocation:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"mi\">0</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"n\">f8</span><span class=\"w\"> </span><span class=\"mi\">30</span><span class=\"w\"> </span><span class=\"mi\">53</span><span class=\"w\">             </span><span class=\"n\">ark</span><span class=\"w\">     </span><span class=\"o\">%</span><span class=\"n\">r5</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r3</span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">07</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">32</span><span class=\"w\">             </span><span class=\"n\">lghr</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r3</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r2</span>\n<span class=\"w\">   </span><span class=\"mi\">8</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">27</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">45</span><span class=\"w\">             </span><span class=\"n\">lhr</span><span class=\"w\">     </span><span class=\"o\">%</span><span class=\"n\">r4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r5</span>\n<span class=\"w\">   </span><span class=\"n\">c</span>:   <span class=\"nc\">b9</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"n\">d</span><span class=\"w\"> </span><span class=\"mi\">00</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"w\">             </span><span class=\"n\">dsgfr</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">r2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r4</span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>:   <span class=\"mi\">07</span><span class=\"w\"> </span><span class=\"n\">fe</span><span class=\"w\">                   </span><span class=\"n\">br</span><span class=\"w\">      </span><span class=\"o\">%</span><span class=\"n\">r14</span>\n<span class=\"w\">  </span><span class=\"err\">```</span>\n<span class=\"o\">~~~</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 351420894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682022036
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253#discussion_r1173114202\">PR review comment</a>:</p>\n<blockquote>\n<p>I think removing the copies had the effect of shuffling the order that the registers are picked, which caused the allocator to find a case where it needed to insert a move. Additionally, adding the move on <code>res_0</code> back caused the second move to disappear again (even on the RA2-0.7.0 branch), so I'm going to put that one back and call this good.</p>\n</blockquote>",
        "id": 351431871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682026534
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a>.</p>",
        "id": 351432114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682026648
    },
    {
        "content": "<p>elliottt has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a>.</p>",
        "id": 351432591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682026904
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6253\">PR #6253</a>.</p>",
        "id": 351472378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682030758
    }
]