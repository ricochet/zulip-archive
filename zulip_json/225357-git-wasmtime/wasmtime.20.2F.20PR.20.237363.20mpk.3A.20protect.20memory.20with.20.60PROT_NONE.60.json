[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7363\">PR #7363</a> from <code>abrown:pku-prot-none</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This change fixes a bug with <code>ProtectionKey::protect</code>: previously it initialized each stripe with read and write permissions (i.e., <code>pkey_mprotect(..., PROT_READ | PROT_WRITE)</code> under the mistaken assumption that these permissions were MPK-specific, \"what MPK permissions will we be allowed to set in the PKRU for these regions in the future?\". This assumption is incorrect: the regions were immediately made accessible for reading and writing. The fix is to initially protect the regions with <code>PROT_NONE</code> and allow Wasmtime's <code>memory.grow</code> implementation to mark pages with <code>mprotect(..., PROT_READ | PROT_WRITE)</code> as usual. Whether a store can access a slice is still determined by the CPU state set in <code>mpk::allow</code>.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 398535789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698256547
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7363\">PR #7363</a>.</p>",
        "id": 398535790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698256547
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7363\">PR #7363</a>.</p>",
        "id": 398535791,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698256547
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7363\">PR #7363</a>.</p>",
        "id": 398541527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698258937
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7363#pullrequestreview-1698027111\">PR review</a>:</p>\n<blockquote>\n<p>Nice! Is it possible to have a test in this regard? For example if mpk is enabled does that mean that guard pages were accidentally read/write?</p>\n</blockquote>",
        "id": 398541582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698258963
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7363\">PR #7363</a>.</p>",
        "id": 398557336,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698266256
    }
]