[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977#issuecomment-1261542476\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977\">issue #4977</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:machinst\", \"cranelift:area:x64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 301341545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664405419
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977#issuecomment-1261587777\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977\">issue #4977</a>:</p>\n<blockquote>\n<blockquote>\n<p>good confirmation that the changes are benign</p>\n</blockquote>\n<p>I spoke too soon actually; it seems that the <code>simd_lane</code> test is failing, but hopefully it's an easy reordering/fix...</p>\n</blockquote>",
        "id": 301348951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664410082
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977#issuecomment-1261596232\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977\">issue #4977</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>good confirmation that the changes are benign</p>\n</blockquote>\n<p>I spoke too soon actually; it seems that the <code>simd_lane</code> test is failing, but hopefully it's an easy reordering/fix...</p>\n</blockquote>\n<p>Yep, I'll make sure to add a filetest once I diagnose the problem <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 301350115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664410952
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977#issuecomment-1261670898\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977\">issue #4977</a>:</p>\n<blockquote>\n<p>Fixed in 3b7b4ce4fff71159176b112b86122c45a60a46bf. I was trying to avoid using a priority when I could add a negative assertion on a flag value, but given that the branch I was trying to assert the negation of used an <code>and</code> with two flags, this just wasn't sound: I would need an <code>or</code> here to make it work.</p>\n</blockquote>",
        "id": 301359031,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664419354
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977#issuecomment-1262564390\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4977\">issue #4977</a>:</p>\n<blockquote>\n<p>Performance seems pretty unaffected:</p>\n<p>Here's a measurement on my laptop (which is admittedly noisy) for compiling the bz2 benchmark:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">hyperfine</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">runs</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">warmup</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">show</span><span class=\"o\">-</span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"s\">\"taskset 0x1 ./target/release/wasmtime compile ../sightglass/benchmarks/bz2/benchmark.wasm\"</span><span class=\"w\"></span>\n<span class=\"n\">Benchmark</span><span class=\"w\"> </span><span class=\"mi\">1</span>: <span class=\"nc\">taskset</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">sightglass</span><span class=\"o\">/</span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:     <span class=\"mf\">102.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">96.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">5.3</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">99.7</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"mf\">105.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">runs</span><span class=\"w\"></span>\n</code></pre></div>\n<p>And here's the same measurement on <code>main</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">hyperfine</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">runs</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">warmup</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">show</span><span class=\"o\">-</span><span class=\"n\">output</span><span class=\"w\"> </span><span class=\"s\">\"taskset 0x1 ./target/release/wasmtime compile ../sightglass/benchmarks/bz2/benchmark.wasm\"</span><span class=\"w\"></span>\n<span class=\"n\">Benchmark</span><span class=\"w\"> </span><span class=\"mi\">1</span>: <span class=\"nc\">taskset</span><span class=\"w\"> </span><span class=\"mh\">0x1</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">release</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"o\">../</span><span class=\"n\">sightglass</span><span class=\"o\">/</span><span class=\"n\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Time</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">mean</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"err\">σ</span><span class=\"p\">)</span>:     <span class=\"mf\">100.8</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\">   </span><span class=\"mf\">1.2</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">User</span>: <span class=\"mf\">95.1</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">System</span>: <span class=\"mf\">5.6</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Range</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">min</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"n\">max</span><span class=\"p\">)</span>:    <span class=\"mf\">98.9</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"err\">…</span><span class=\"w\"> </span><span class=\"mf\">103.6</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\">    </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">runs</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I got pretty large variance between individual runs, but both were pretty consistently close.</p>\n</blockquote>",
        "id": 301488884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664471343
    }
]