[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648424667\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:c-api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:c-api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 378240556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690224285
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648429741\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>Thanks! Can you elaborate a bit more on how this is used though? Async isn't exposed through the C API so in theory this configuration option shouldn't do anything in the C API, but if it's causing issues then that's a bug where when async is turned off it shouldn't be consulted.</p>\n</blockquote>",
        "id": 378241080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690224411
    },
    {
        "content": "<p>guregu <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648448071\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>@alexcrichton I agree that's it's more likely a bug somewhere else.</p>\n<p>Basically, if I try to set the stack size to 8MB in wasmtime-go it will fail with this message:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">max_wasm_stack</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"n\">exceed</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">async_stack_size</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">engine</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">33</span>:<span class=\"mi\">38</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"n\">fatal</span><span class=\"w\"> </span><span class=\"n\">runtime</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">initiate</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"mi\">5</span>\n<span class=\"n\">SIGABRT</span>: <span class=\"nc\">abort</span>\n<span class=\"n\">PC</span><span class=\"o\">=</span><span class=\"mh\">0x198cf4724</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">sigcode</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"n\">arrived</span><span class=\"w\"> </span><span class=\"n\">during</span><span class=\"w\"> </span><span class=\"n\">cgo</span><span class=\"w\"> </span><span class=\"n\">execution</span>\n</code></pre></div>\n<p>So I figured exposing this knob could work around that. But perhaps the issue lies elsewhere <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> </p>\n</blockquote>",
        "id": 378243067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690224936
    },
    {
        "content": "<p>guregu edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648448071\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>@alexcrichton I agree that's it's more likely a bug (or maybe misconfiguration?) somewhere else.</p>\n<p>Basically, if I try to set the stack size to 8MB in wasmtime-go it will fail with this message:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">called</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Result</span>::<span class=\"n\">unwrap</span><span class=\"p\">()</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Err</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">value</span>: <span class=\"nc\">max_wasm_stack</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"n\">exceed</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">async_stack_size</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">c</span><span class=\"o\">-</span><span class=\"n\">api</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">engine</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">33</span>:<span class=\"mi\">38</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"n\">fatal</span><span class=\"w\"> </span><span class=\"n\">runtime</span><span class=\"w\"> </span><span class=\"n\">error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">initiate</span><span class=\"w\"> </span><span class=\"n\">panic</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"mi\">5</span>\n<span class=\"n\">SIGABRT</span>: <span class=\"nc\">abort</span>\n<span class=\"n\">PC</span><span class=\"o\">=</span><span class=\"mh\">0x198cf4724</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">sigcode</span><span class=\"o\">=</span><span class=\"mi\">0</span>\n<span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"n\">arrived</span><span class=\"w\"> </span><span class=\"n\">during</span><span class=\"w\"> </span><span class=\"n\">cgo</span><span class=\"w\"> </span><span class=\"n\">execution</span>\n</code></pre></div>\n<p>So I figured exposing this knob could work around that. But perhaps the issue lies elsewhere <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> </p>\n<p>Would be happy to move this to wasmtime-go issue if that is the case!</p>\n</blockquote>",
        "id": 378243638,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690225100
    },
    {
        "content": "<p>guregu <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648460730\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>@alexcrichton I made an issue here for the wasmtime-go problem: <a href=\"https://github.com/bytecodealliance/wasmtime-go/issues/182\">https://github.com/bytecodealliance/wasmtime-go/issues/182</a>. Please feel free to close this if it's not needed after all!</p>\n</blockquote>",
        "id": 378245311,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690225535
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648493719\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>Oh no you're all good, I think that this is still a bug in Wasmtime, so this is the right place to fix it. I don't think there's a way to work around that from wasmtime-go right now.</p>\n<p>I think the fix though is to update <a href=\"https://github.com/bytecodealliance/wasmtime/blob/0f9ac11bfbb8c6c876813781af484e07f998a25c/crates/wasmtime/src/config.rs#L1500-L1503\">this condition</a> to additionally check <code>async_support</code> because if that's disabled then there's no need to test anything about the async stack size, which I think would fix your use case because <code>async_support</code> is <code>false</code> for the C API.</p>\n</blockquote>",
        "id": 378251423,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690227175
    },
    {
        "content": "<p>guregu <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648508788\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>Aha, that makes sense! I will take that approach in a new PR. Thank you for the help <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span> </p>\n</blockquote>",
        "id": 378254430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690227973
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1648516467\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>I think that's a good fix to apply. In addition it occurs to me that perhaps the C API should build the <code>wasmtime</code> crate with the <code>async</code> feature disabled, since it can't make use of the async support anyway. That would have avoided this bug because the <code>if</code> statement in question wouldn't have been compiled in at all.</p>\n</blockquote>",
        "id": 378255655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690228380
    },
    {
        "content": "<p>guregu <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762#issuecomment-1650146658\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6762\">issue #6762</a>:</p>\n<blockquote>\n<p>New PR that takes the suggested approach: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6771\">https://github.com/bytecodealliance/wasmtime/pull/6771</a></p>\n</blockquote>",
        "id": 378535600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1690301970
    }
]