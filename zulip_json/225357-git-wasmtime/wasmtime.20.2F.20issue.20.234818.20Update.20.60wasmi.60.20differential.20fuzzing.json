[
    {
        "content": "<p>Robbepop opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818\">issue #4818</a>:</p>\n<blockquote>\n<p>Wasmtime has implemented differential fuzzing against  the <code>wasmi</code> interpreter. However, the currently supported <code>wasmi</code> version is very old and outdated.</p>\n<h4>Benefits</h4>\n<p>The <code>wasmi</code> interpreter has since evolved quite a lot and could be helpful to more extensively fuzzy test against Wasmtime's feature set.</p>\n<ul>\n<li>Fuzz test against modern <code>wasmi</code> versions instead of ancient one.</li>\n<li>Being able to fuzz test against some Wasm proposals whereas the old <code>wasmi</code> only supported Wasm MVP.</li>\n<li>Higher fuzz testing throughput since the newer <code>wasmi</code> versions are a lot faster.</li>\n<li>New <code>wasmi</code> versions offer an API similar to the API of Wasmtime, therefore fuzz testing code should become slightly cleaner.</li>\n</ul>\n<h4>Downsides</h4>\n<p>The biggest downside is that the newer <code>wasmi</code> versions are not as battle tested as the old ones and therefore we might risk some false positives on the <code>wasmi</code> side which could introduce noise.</p>\n<h4>Implementation</h4>\n<p>I would open a PR myself if this issue is accepted. Shouldn't be too hard to update.</p>\n<h4>Alternatives</h4>\n<p>Stay on the current old <code>wasmi</code> version since it is quite stable and battle tested.<br>\n</p>\n</blockquote>",
        "id": 296067718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661852679
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818#issuecomment-1231747354\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818\">issue #4818</a>:</p>\n<blockquote>\n<p>Updating would be great! If you'd like to send a PR I'd be happy to review. If you've got ideas about how to improve the differential fuzzing interface feel free to throw those in as well!</p>\n</blockquote>",
        "id": 296134256,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661869680
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818\">issue #4818</a>:</p>\n<blockquote>\n<p>Wasmtime has implemented differential fuzzing against  the <code>wasmi</code> interpreter. However, the currently supported <code>wasmi</code> version is very old and outdated.</p>\n<h4>Benefits</h4>\n<p>The <code>wasmi</code> interpreter has since evolved quite a lot and could be helpful to more extensively fuzzy test against Wasmtime's feature set.</p>\n<ul>\n<li>Fuzz test against modern <code>wasmi</code> versions instead of ancient one.</li>\n<li>Being able to fuzz test against some Wasm proposals whereas the old <code>wasmi</code> only supported Wasm MVP.</li>\n<li>Higher fuzz testing throughput since the newer <code>wasmi</code> versions are a lot faster.</li>\n<li>New <code>wasmi</code> versions offer an API similar to the API of Wasmtime, therefore fuzz testing code should become slightly cleaner.</li>\n</ul>\n<h4>Downsides</h4>\n<p>The biggest downside is that the newer <code>wasmi</code> versions are not as battle tested as the old ones and therefore we might risk some false positives on the <code>wasmi</code> side which could introduce noise.</p>\n<h4>Implementation</h4>\n<p>I would open a PR myself if this issue is accepted. Shouldn't be too hard to update.</p>\n<h4>Alternatives</h4>\n<p>Stay on the current old <code>wasmi</code> version since it is quite stable and battle tested.<br>\n</p>\n</blockquote>",
        "id": 296134263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661869682
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818#issuecomment-1231748904\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818\">issue #4818</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 296134538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661869747
    },
    {
        "content": "<p>Robbepop <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818#issuecomment-1231803173\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818\">issue #4818</a>:</p>\n<blockquote>\n<p>&gt; </p>\n<p>Cool, I will come up with a PR in the next days. I have not yet taken an in-depth look at the Wasmtime fuzzing interface but will do when I am working on it and maybe come up with improvements. :)</p>\n</blockquote>",
        "id": 296142818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661872214
    },
    {
        "content": "<p>Robbepop edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818#issuecomment-1231803173\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818\">issue #4818</a>:</p>\n<blockquote>\n<blockquote>\n<p>Updating would be great! If you'd like to send a PR I'd be happy to review. If you've got ideas about how to improve the differential fuzzing interface feel free to throw those in as well!</p>\n</blockquote>\n<p>Cool, I will come up with a PR in the next days. I have not yet taken an in-depth look at the Wasmtime fuzzing interface but will do when I am working on it and maybe come up with improvements. :)</p>\n</blockquote>",
        "id": 296142837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661872223
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4818\">issue #4818</a>:</p>\n<blockquote>\n<p>Wasmtime has implemented differential fuzzing against  the <code>wasmi</code> interpreter. However, the currently supported <code>wasmi</code> version is very old and outdated.</p>\n<h4>Benefits</h4>\n<p>The <code>wasmi</code> interpreter has since evolved quite a lot and could be helpful to more extensively fuzzy test against Wasmtime's feature set.</p>\n<ul>\n<li>Fuzz test against modern <code>wasmi</code> versions instead of ancient one.</li>\n<li>Being able to fuzz test against some Wasm proposals whereas the old <code>wasmi</code> only supported Wasm MVP.</li>\n<li>Higher fuzz testing throughput since the newer <code>wasmi</code> versions are a lot faster.</li>\n<li>New <code>wasmi</code> versions offer an API similar to the API of Wasmtime, therefore fuzz testing code should become slightly cleaner.</li>\n</ul>\n<h4>Downsides</h4>\n<p>The biggest downside is that the newer <code>wasmi</code> versions are not as battle tested as the old ones and therefore we might risk some false positives on the <code>wasmi</code> side which could introduce noise.</p>\n<h4>Implementation</h4>\n<p>I would open a PR myself if this issue is accepted. Shouldn't be too hard to update.</p>\n<h4>Alternatives</h4>\n<p>Stay on the current old <code>wasmi</code> version since it is quite stable and battle tested.<br>\n</p>\n</blockquote>",
        "id": 305861459,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666629703
    }
]