[
    {
        "content": "<p>jlb6740 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943\">Issue #1943</a>:</p>\n<blockquote>\n<p>@bnjbvr @julian-seward1</p>\n<p>Hi, I believe the recent patch <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1915\">https://github.com/bytecodealliance/wasmtime/pull/1915</a> introduce different behavior with register allocation. Before the patch a floating point add lowered to this:</p>\n<blockquote>\n<p>Disassembly of 10 bytes:<br>\n   0:   55                      push    rbp<br>\n   1:   48 89 e5                mov     rbp, rsp<br>\n   4:   f3 0f 58 c1             addss   xmm0, xmm1<br>\n   8:   5d                      pop     rbp<br>\n   9:   c3                      ret</p>\n</blockquote>\n<p>But afterwards it lowered to this:</p>\n<blockquote>\n<p>Disassembly of 18 bytes:<br>\n   0:   55                      push    rbp<br>\n   1:   48 89 e5                mov     rbp, rsp<br>\n   4:   f3 0f 10 c8             movss   xmm1, xmm0<br>\n   8:   f3 0f 58 c8             addss   xmm1, xmm0<br>\n   c:   f3 0f 10 c1             movss   xmm0, xmm1<br>\n  10:   5d                      pop     rbp<br>\n  11:   c3                      ret</p>\n</blockquote>\n<p>It is not clear to me what change in this patch introduces these moves nor how to fix them. Any suggestions?</p>\n</blockquote>",
        "id": 202380571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593473991
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943#issuecomment-651694346\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943\">Issue #1943</a>:</p>\n<blockquote>\n<p>Weird, <code>Inst::is_move</code> should identify the movss instructions as moves, unless we missed something when rejiggering the float moves.</p>\n</blockquote>",
        "id": 202415738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593511316
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943#issuecomment-651697984\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943\">Issue #1943</a>:</p>\n<blockquote>\n<blockquote>\n<p><code>asm\n4: f3 0f 10 c8 movss xmm1, xmm0\n8: f3 0f 58 c8 addss xmm1, xmm0\nc: f3 0f 10 c1 movss xmm0, xmm1\n</code></p>\n</blockquote>\n<p>This is equivalent to <code>xmm0 = xmm0 + xmm0</code>, not <code>xmm0 = xmm0 + xmm1</code> like it was before.</p>\n</blockquote>",
        "id": 202416306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593511777
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943#issuecomment-651704603\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943\">Issue #1943</a>:</p>\n<blockquote>\n<p>I think I found the problem: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1915/files#r447576280\">https://github.com/bytecodealliance/wasmtime/pull/1915/files#r447576280</a></p>\n</blockquote>",
        "id": 202417318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593512543
    },
    {
        "content": "<p>julian-seward1 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943#issuecomment-651709324\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1943\">Issue #1943</a>:</p>\n<blockquote>\n<p>Yeah, I can believe that explanation.  It will have messed up the live ranges, which will have (correctly) defeated the RA's coalescer, hence the extra moves, and the incorrect resulting computation.</p>\n</blockquote>",
        "id": 202418070,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593513119
    }
]