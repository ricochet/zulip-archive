[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_rmw\"><code>AtomicRMW</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1190\">here</a>.</p>\n<p>AtomicRMW usually performs some <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/enum.AtomicRmwOp.html\">operation</a> atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a></li>\n<li>Perform the operation using the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/value.rs#L688-L702\">pre existing methods on <code>DataValue</code></a></li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value to the same address</a></li>\n</ol>\n<p>I'm hesitant to mark this as E-Easy mostly due to there being a large number of steps in this task, especially getting all the values and addresses from the instruction, but if someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328488462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676645407
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_rmw\"><code>AtomicRMW</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1190\">here</a>.</p>\n<p>AtomicRMW usually performs some <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/enum.AtomicRmwOp.html\">operation</a> atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a></li>\n<li>Perform the operation using the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/value.rs#L688-L702\">pre existing methods on <code>DataValue</code></a></li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value to the same address</a></li>\n</ol>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328489197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676645606
    },
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_rmw\"><code>AtomicRMW</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1190\">here</a>.</p>\n<p>AtomicRMW usually performs some <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/enum.AtomicRmwOp.html\">operation</a> atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a></li>\n<li>Perform the operation using the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/value.rs#L688-L702\">pre existing methods on <code>DataValue</code></a></li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value to the same address</a></li>\n</ol>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328489222,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676645614
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_rmw\"><code>AtomicRMW</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1190\">here</a>.</p>\n<p>AtomicRMW usually performs some <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/enum.AtomicRmwOp.html\">operation</a> atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a></li>\n<li>Perform the operation using the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/value.rs#L688-L702\">pre existing methods on <code>DataValue</code></a></li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value to the same address</a></li>\n</ol>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-rmw-little.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328489753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676645758
    },
    {
        "content": "<p>jameysharp labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_rmw\"><code>AtomicRMW</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1190\">here</a>.</p>\n<p>AtomicRMW usually performs some <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/enum.AtomicRmwOp.html\">operation</a> atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a></li>\n<li>Perform the operation using the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/value.rs#L688-L702\">pre existing methods on <code>DataValue</code></a></li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value to the same address</a></li>\n</ol>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-rmw-little.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 328553461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1676664159
    },
    {
        "content": "<p>jan-justin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817#issuecomment-1439042593\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p>Hey @afonso360 <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span>  ,</p>\n<p>I am a first-time contributor and keen to take a look at it.</p>\n<p>I have a question regarding the tests, specifically <a href=\"https://github.com/bytecodealliance/wasmtime/blob/c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794/cranelift/filetests/filetests/runtests/atomic-rmw-little.clif#L119-L123\">these tests</a>. Are they meant to be <code>%atomic_rmw_and_i64</code> or <code>%atomic_rmw_and_i32</code>? The tests panic with the former, but pass with the latter.</p>\n</blockquote>",
        "id": 329283468,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677010725
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817#issuecomment-1439154367\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<blockquote>\n<p>I have a question regarding the tests, specifically <a href=\"https://github.com/bytecodealliance/wasmtime/blob/c65de1f1b1a59155abbb9cbbe5aaa5abacd8e794/cranelift/filetests/filetests/runtests/atomic-rmw-little.clif#L119-L123\">these tests</a>. Are they meant to be %atomic_rmw_and_i64 or %atomic_rmw_and_i32? The tests panic with the former, but pass with the latter.</p>\n</blockquote>\n<p>Wow, those should definitely call <code>atomic_rmw_and_i32</code>, Good catch!</p>\n<blockquote>\n<p>I'm surprised that these runtests didn't fail before.</p>\n</blockquote>\n<p>I suspect we just zero extend all of these values up to <code>i64</code> and since it's an <code>and</code> operation everything aligns and works correctly? I'm not sure</p>\n<blockquote>\n<p>I think I remember something about our test-runner ignoring function names and just calling the last-defined function sometimes, which would explain this.</p>\n</blockquote>\n<p>I think that used to be how our test runner worked, but IIRC (this was a while ago) this was changed in #4667 and we now require the function names to exist in the testcase.</p>\n</blockquote>",
        "id": 329301896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677017366
    },
    {
        "content": "<p>jan-justin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817#issuecomment-1439717603\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p>Thank you both for the clarification!</p>\n<p>Given the other tests I suspected as much, however, I did not want to make any assumptions.</p>\n</blockquote>",
        "id": 329379756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677059236
    },
    {
        "content": "<p>afonso360 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5817\">issue #5817</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>Our interpreter implementation is missing the <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/trait.InstBuilder.html#method.atomic_rmw\"><code>AtomicRMW</code></a> instruction <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1190\">here</a>.</p>\n<p>AtomicRMW usually performs some <a href=\"https://docs.rs/cranelift-codegen/latest/cranelift_codegen/ir/enum.AtomicRmwOp.html\">operation</a> atomically, but we've decided that our interpreter is thread unsafe and should be able to do this non atomically.</p>\n<p>This means that the implementation of this instruction is fairly straight forward.</p>\n<ol>\n<li>We do a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1197\">load to an address</a></li>\n<li>Perform the operation using the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/value.rs#L688-L702\">pre existing methods on <code>DataValue</code></a></li>\n<li>We <a href=\"https://github.com/bytecodealliance/wasmtime/blob/db9efcb099e07dbb3b433668a5404deefc0eb709/cranelift/interpreter/src/step.rs#L1205\">store the new value to the same address</a></li>\n</ol>\n<p>We already have a <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/runtests/atomic-rmw-little.clif\">pre-existing testsuite</a> for this functionality so, it should just be enabling those tests for the interpreter by adding a <code>test interpret</code> to the top of the file.</p>\n<p>If someone wants to give this a go and has any questions let me know!</p>\n</blockquote>",
        "id": 329687180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677150179
    }
]