[
    {
        "content": "<p>kubkon opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430\">PR #1430</a> from <code>trace-logs</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit augments <code>wiggle</code> with trace log generation for the shims,<br>\nreturned errno values, and returned values proper (if any, i.e.,<br>\ndifferent than unit type <code>()</code>). What that means is that every syscall<br>\nwill have auto-generated up to 3 traces, for instance,</p>\n<div class=\"codehilite\"><pre><span></span> TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt; fd_prestat_get(fd=Fd(3))\n TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt;      | result=(buf=Dir(PrestatDir { pr_name_len: 1 }))\n TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt;      | errno=No error occurred. System call completed successfully. (Errno::Success(0))\n</pre></div>\n\n\n<p>Putting logging behind a feature gate in this case means that the log calls<br>\nare generated by the <code>wiggle</code> crate regardless if the client requested<br>\nthe feature or not, however, then their usage in the client lib is<br>\ndictated by the presence of the feature flag. So, for instance, <code>wasi-common</code><br>\nhas this feature enabled by default, while any other client lib<br>\nusing <code>wiggle</code> if they don't want tracing enabled, they will just<br>\nleave the feature off. I'm not sure if this is what we wanted<br>\nbut seemed easiest to implement quickly. Lemme y'all know your thoughts<br>\nabout this!</p>\n<p>Closes #1420.</p>\n</blockquote>",
        "id": 192132903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585416006
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" title=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/pchickey\" title=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430\">PR #1430</a>.</p>",
        "id": 192132904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585416006
    },
    {
        "content": "<p><strong>kubkon</strong> requested <a href=\"https://github.com/alexcrichton\" title=\"https://github.com/alexcrichton\">alexcrichton</a> and <a href=\"https://github.com/pchickey\" title=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430\">PR #1430</a>.</p>",
        "id": 192132905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585416006
    },
    {
        "content": "<p>kubkon edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430\">PR #1430</a> from <code>trace-logs</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit augments <code>wiggle</code> with trace log generation for the shims,<br>\nreturned errno values, and returned values proper (if any, i.e.,<br>\ndifferent than unit type <code>()</code>). What that means is that every syscall<br>\nwill have auto-generated up to 3 traces, for instance,</p>\n<div class=\"codehilite\"><pre><span></span> TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt; fd_prestat_get(fd=Fd(3))\n TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt;      | result=(buf=Dir(PrestatDir { pr_name_len: 1 }))\n TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt;      | errno=No error occurred. System call completed successfully. (Errno::Success(0))\n</pre></div>\n\n\n<p>Putting logging behind a feature gate in this case means that the log calls<br>\nare generated by the <code>wiggle</code> crate regardless if the client requested<br>\nthe feature or not, however, then their usage in the client lib is<br>\ndictated by the presence of the feature flag. So, for instance, <code>wasi-common</code><br>\nhas this feature enabled by default, while any other client lib<br>\nusing <code>wiggle</code> if they don't want tracing enabled, they will just<br>\nleave the feature off. I'm not sure if this is what we wanted<br>\nbut seemed easiest to implement quickly. Lemme y'all know your thoughts<br>\nabout this!</p>\n<p>Closes #1420.</p>\n</blockquote>",
        "id": 192132925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585416035
    },
    {
        "content": "<p>kubkon edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430\">PR #1430</a> from <code>trace-logs</code> to <code>master</code>:</p>\n<blockquote>\n<p>This commit augments <code>wiggle</code> with trace log generation for the shims,<br>\nreturned errno values, and returned values proper (if any, i.e.,<br>\ndifferent than unit type <code>()</code>). What that means is that every syscall<br>\nwill have auto-generated up to 3 traces, for instance,</p>\n<div class=\"codehilite\"><pre><span></span> TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt; fd_prestat_get(fd=Fd(3))\n TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt;      | result=(buf=Dir(PrestatDir { pr_name_len: 1 }))\n TRACE wasi_common::wasi::wasi_snapshot_preview1 &gt;      | errno=No error occurred. System call completed successfully. (Errno::Success(0))\n</pre></div>\n\n\n<p>Putting logging behind a feature flag in this case means that the log calls<br>\nare generated by the <code>wiggle</code> crate regardless if the client requested<br>\nthe feature or not, however, then their usage in the client lib is<br>\ndictated by the presence of the feature flag. So, for instance, <code>wasi-common</code><br>\nhas this feature enabled by default, while any other client lib<br>\nusing <code>wiggle</code> if they don't want tracing enabled, they will just<br>\nleave the feature off. I'm not sure if this is what we wanted<br>\nbut seemed easiest to implement quickly. Lemme y'all know your thoughts<br>\nabout this!</p>\n<p>Closes #1420.</p>\n</blockquote>",
        "id": 192132930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585416043
    },
    {
        "content": "<p>marmistrz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430#pullrequestreview-383347057\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430#pullrequestreview-383347057\">PR Review</a>.</p>",
        "id": 192140342,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585427455
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430#pullrequestreview-383957086\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430#pullrequestreview-383957086\">PR Review</a>.</p>",
        "id": 192269956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585581188
    },
    {
        "content": "<p>kubkon merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1430\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1430\">PR #1430</a>.</p>",
        "id": 192293925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585591098
    }
]