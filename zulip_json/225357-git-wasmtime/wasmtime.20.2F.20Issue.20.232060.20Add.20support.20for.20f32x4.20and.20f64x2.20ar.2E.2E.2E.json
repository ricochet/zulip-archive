[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060#issuecomment-662171389\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060\">Issue #2060</a>:</p>\n<blockquote>\n<p>@abrown, I haven't looked at the patch, but regarding the regalloc error: this happens when a register is used before any defs in the vcode, so it's upward-exposed to the entry. Probably one of the lowerings is missing a move, or has the wrong destination?</p>\n</blockquote>",
        "id": 204618319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595377201
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060#issuecomment-662171990\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060\">Issue #2060</a>:</p>\n<blockquote>\n<p>... and on review, this is probably coming from your <code>RawBitcast</code> lowering: if an op does nothing, it still needs to emit a move, because each SSA value (i.e. the input and output of the bitcast op) is allocated a new vreg; so the output needs a def somewhere.</p>\n</blockquote>",
        "id": 204618421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595377316
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060#issuecomment-662171990\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060\">Issue #2060</a>:</p>\n<blockquote>\n<p>... and on review, this is probably coming from your <code>RawBitcast</code> lowering: if an op does nothing, it still needs to emit a move, because each SSA value (i.e. the input and output of the bitcast op) is allocated a new vreg; so the output needs a def somewhere. (These moves are often/usually elided before emission by the regalloc if it can coalesce the vregs.)</p>\n</blockquote>",
        "id": 204618527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595377414
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060#issuecomment-662178235\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060\">Issue #2060</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:x64\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 204619712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595378733
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060#issuecomment-663724094\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060\">Issue #2060</a>:</p>\n<blockquote>\n<p>This should be ready for review; obviously some of this will have to be refined as more instructions are added (I added TODOs as appropriate).</p>\n</blockquote>",
        "id": 204963737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595623082
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060#issuecomment-665332798\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060\">Issue #2060</a>:</p>\n<blockquote>\n<p>@bnjbvr, I've made changes from the comments above but there are two larger issues to be resolved (and some renaming and refactoring comments left unresolved above):</p>\n<ol>\n<li>The get/map_regs could should be refactored and will be in #2071; I propose that we merge this first so that #2071 can then include both the XOR case (existing) and the CMPP* case (from this PR).</li>\n<li>The other issue is this:</li>\n</ol>\n<div class=\"codehilite\"><pre><span></span><code>$ cargo run --color=always --features experimental_x64 -- wast --enable-simd tests/spec_testsuite/proposals/simd/simd_f64x2_arith.wast\n    Finished dev [unoptimized + debuginfo] target(s) in 0.07s\n     Running `target/debug/wasmtime wast --enable-simd tests/spec_testsuite/proposals/simd/simd_f64x2_arith.wast`\nError: failed to run script file &#39;tests/spec_testsuite/proposals/simd/simd_f64x2_arith.wast&#39;\n\nCaused by:\n    0: failed directive on tests/spec_testsuite/proposals/simd/simd_f64x2_arith.wast:5189:1\n    1: wasm trap: call stack exhausted\n       wasm backtrace:\n         0:   0x9a - &lt;unknown&gt;!&lt;wasm function 4&gt;\n</code></pre></div>\n\n\n<p>I've tried debugging with GDB but I just end up with a few waiting threads after a <code>SIGUSR1</code> signal--no hint of the compiled code. I've looked into <code>rr</code> but I don't exactly see how this helps; perhaps we can discuss more?</p>\n</blockquote>",
        "id": 205299844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595976399
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060#issuecomment-665936080\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2060\">Issue #2060</a>:</p>\n<blockquote>\n<p>@bnjbvr, I resolved the failures I was seeing (a combination of incorrect shift emission and missing a lowering for <code>vconst</code>). For future reference, I was able to side-step the weird signal error by running the binary directly: <code>target/debug/wasmtime wast --enable-simd -g tests/spec_testsuite/proposals/simd/simd_f32x4_arith.wast</code>. With some fixes and the addition of some initial 128-bit constant support in 3402400 (thanks @cfallin!), the <code>simd_f32x4_arith.wast</code> and <code>simd_f64x2_arith.wast</code> spec tests now pass:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">experimental_x64</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">proposals</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">simd_f64x2_arith</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.07</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">proposals</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">simd_f64x2_arith</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">features</span><span class=\"w\"> </span><span class=\"n\">experimental_x64</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">proposals</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">simd_f32x4_arith</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Finished</span><span class=\"w\"> </span><span class=\"n\">dev</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">unoptimized</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">debuginfo</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"mf\">0.07</span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"n\">Running</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">target</span><span class=\"o\">/</span><span class=\"n\">debug</span><span class=\"o\">/</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">simd</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">spec_testsuite</span><span class=\"o\">/</span><span class=\"n\">proposals</span><span class=\"o\">/</span><span class=\"n\">simd</span><span class=\"o\">/</span><span class=\"n\">simd_f32x4_arith</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"err\">`</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 205415525,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596057833
    }
]