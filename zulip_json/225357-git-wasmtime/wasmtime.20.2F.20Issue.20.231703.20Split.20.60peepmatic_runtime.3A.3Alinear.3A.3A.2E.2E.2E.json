[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1703\">Issue #1703</a>:</p>\n<blockquote>\n<p>Right now we have an <code>Increment</code> that represents both the linearized LHS and linearized RHS of an optimization. This is a historical accident from an earlier design where they were interleaved with each other. Now that they are not, and only the first increment has any RHS <code>Action</code>s, we should just split <code>Increment</code> into two types: one for LHSes and one for RHSes. The <code>linear::Optimization</code> would have a member of each type, instead of just a vec of increments.</p>\n</blockquote>",
        "id": 197581954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589473991
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1703\">Issue #1703</a>:</p>\n<blockquote>\n<p>Right now we have an <code>Increment</code> that represents both the linearized LHS and linearized RHS of an optimization. This is a historical accident from an earlier design where they were interleaved with each other. Now that they are not, and only the first increment has any RHS <code>Action</code>s, we should just split <code>Increment</code> into two types: one for LHSes and one for RHSes. The <code>linear::Optimization</code> would have a member of each type, instead of just a vec of increments.</p>\n</blockquote>",
        "id": 197581955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589473991
    }
]