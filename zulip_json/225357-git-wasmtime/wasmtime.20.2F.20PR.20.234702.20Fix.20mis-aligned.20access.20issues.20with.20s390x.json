[
    {
        "content": "<p>uweigand opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702\">PR #4702</a> from <code>s390x-align-fixes</code> to <code>main</code>:</p>\n<blockquote>\n<p>This fixes two problems: minimum symbol alignment for the LARL<br>\ninstruction, and alignment requirements for LRL/LGRL etc.</p>\n<p>The first problem is that the LARL instruction used to load a<br>\nsymbol address (PC relative) requires that the target symbol<br>\nis at least 2-byte aligned.  This is always guaranteed for code<br>\nsymbols (all instructions must be 2-aligned anyway), but not<br>\nnecessarily for data symbols.</p>\n<p>Other s390x compilers fix this problem by ensuring that all<br>\nglobal symbols are always emitted with a minimum 2-byte<br>\nalignment.  This patch introduces an equivalent mechanism<br>\nfor cranelift:</p>\n<ul>\n<li>\n<p>Add a symbol_alignment routine to TargetIsa, similar to the<br>\n  existing code_section_alignment routine.</p>\n</li>\n<li>\n<p>Respect symbol_alignment as minimum alignment for all symbols<br>\n  emitted in the object backend (code and data).</p>\n</li>\n</ul>\n<p>The second problem is that PC-relative instructions that<br>\ndirectly <em>access</em> data (like LRL/LGRL, STRL/STGRL etc.)<br>\nnot only have the 2-byte requirement like LARL, but actually<br>\nrequire that their memory operand is <em>naturally</em> aligned<br>\n(i.e. alignment is at least the size of the access).</p>\n<p>This property (natural alignment for memory accesses) is<br>\nsupposed to be provided by the \"aligned\" flag in MemFlags;<br>\nhowever, this is not implemented correctly at the moment.</p>\n<p>To fix this, this patch:</p>\n<ul>\n<li>\n<p>Only emits PC-relative memory access instructions if the<br>\n  \"aligned\" flag is set in the associated MemFlags.</p>\n</li>\n<li>\n<p>Fixes a bug in emit_small_memory_copy and emit_small_memset<br>\n  which currently set the aligned flag unconditionally, ignoring<br>\n  the actual alignment info passed by their caller.</p>\n</li>\n</ul>\n<p>Tested with wasmtime and cg_clif.</p>\n<p>FYI @cfallin @bjorn3 - this is the last missing cranelift patch to make cg_clif work on s390x.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 293081340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660300297
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#pullrequestreview-1070909597\">PR review</a>.</p>",
        "id": 293082733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660300982
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#discussion_r944340321\">PR review comment</a>:</p>\n<blockquote>\n<p>I think you should default <code>function_alignment</code> to <code>isa.symbol_alignment()</code>.</p>\n</blockquote>",
        "id": 293082734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660300983
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#discussion_r944341459\">PR review comment</a>:</p>\n<blockquote>\n<p>I didn't do that because it seemed that would allow a caller to override the function alignment to <em>smaller</em> than <code>isa.symbol_alignment()</code>, and that simply doesn't work on s390x.</p>\n</blockquote>",
        "id": 293082958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660301096
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#pullrequestreview-1070911324\">PR review</a>.</p>",
        "id": 293082959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660301096
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#discussion_r945978544\">PR review comment</a>:</p>\n<blockquote>\n<p>This list of flags is long enough now that it's starting to feel a bit error-prone; and e.g. the diff adding <code>false</code> in the right places is hard to review carefully. Could we turn this into a struct of flags?</p>\n</blockquote>",
        "id": 293590187,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660585083
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#pullrequestreview-1072985200\">PR review</a>.</p>",
        "id": 293590190,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660585083
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#pullrequestreview-1072985200\">PR review</a>.</p>",
        "id": 293590197,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660585083
    },
    {
        "content": "<p>uweigand updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702\">PR #4702</a> from <code>s390x-align-fixes</code> to <code>main</code>.</p>",
        "id": 293738444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660663085
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#pullrequestreview-1074314563\">PR review</a>.</p>",
        "id": 293738547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660663129
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#discussion_r946915118\">PR review comment</a>:</p>\n<blockquote>\n<p>Agreed, that makes sense.  Like this?</p>\n</blockquote>",
        "id": 293738548,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660663129
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702#pullrequestreview-1074684413\">PR review</a>.</p>",
        "id": 293787182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660678773
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4702\">PR #4702</a>.</p>",
        "id": 293787202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1660678784
    }
]