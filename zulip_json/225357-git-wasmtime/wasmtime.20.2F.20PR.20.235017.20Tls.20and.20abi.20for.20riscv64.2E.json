[
    {
        "content": "<p>yuyang-ok opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is try to fix <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4994\">https://github.com/bytecodealliance/wasmtime/issues/4994</a> and <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5008\">https://github.com/bytecodealliance/wasmtime/issues/5008</a>.</p>\n<p>But still working.</p>\n</blockquote>",
        "id": 302375267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664934635
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r987568386\">PR review comment</a>:</p>\n<blockquote>\n<p>This should take the clobber set from the C call conv (and remove a0)</p>\n</blockquote>",
        "id": 302393685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664951184
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r987568663\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this also be a fixed use?</p>\n</blockquote>",
        "id": 302394091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664951430
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1130929474\">PR review</a>.</p>",
        "id": 302394117,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664951451
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1130929124\">PR review</a>.</p>",
        "id": 302394338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664951587
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302402564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664955722
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1131004549\">PR review</a>.</p>",
        "id": 302402833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664955848
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r987622249\">PR review comment</a>:</p>\n<blockquote>\n<p>@bjorn3 , I forget this.<br>\n</p>\n</blockquote>",
        "id": 302402834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664955848
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302404842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664956621
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1131018926\">PR review</a>.</p>",
        "id": 302405026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664956691
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r987632271\">PR review comment</a>:</p>\n<blockquote>\n<p>This should do at <code>riscv64_get_operands</code>.</p>\n</blockquote>",
        "id": 302405028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664956692
    },
    {
        "content": "<p><strong>yuyang-ok</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> as ready for review.</p>",
        "id": 302405794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664956974
    },
    {
        "content": "<p><strong>yuyang-ok</strong> requested <a href=\"https://github.com/bjorn3\">bjorn3</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a>.</p>",
        "id": 302406739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664957363
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302407558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664957673
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302407649,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664957710
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302410090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664958633
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302411370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664959137
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302429798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664966407
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302430105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664966549
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302431981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664967408
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302439532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664970673
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1131347627\">PR review</a>.</p>",
        "id": 302446105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664973061
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r987866220\">PR review comment</a>:</p>\n<blockquote>\n<p>It would be nice if we could add some compile tests for this</p>\n</blockquote>",
        "id": 302446107,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664973061
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302565372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665015012
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1132172976\">PR review</a>.</p>",
        "id": 302565464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665015087
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r988447849\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes,I have add one test just like other platform, But that one test doesn't mean a lot to me.</p>\n</blockquote>",
        "id": 302565465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665015087
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 302781703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665119657
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1133910414\">PR review</a>.</p>",
        "id": 302781728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665119694
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r989688426\">PR review comment</a>:</p>\n<blockquote>\n<p>I already have the float abi and tls tested.</p>\n</blockquote>",
        "id": 302781730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665119695
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135245844\">PR review</a>.</p>",
        "id": 303045075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665249966
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990666958\">PR review comment</a>:</p>\n<blockquote>\n<p>The relocations here don't seem to be correct. You first need an <code>auipc</code> with <code>R_RISCV_TLS_GD_HI20</code> and then an <code>addi</code> with <code>R_RISCV_PCREL_LO12_I</code>. You only have the first one.</p>\n</blockquote>",
        "id": 303045076,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665249966
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990667005\">PR review comment</a>:</p>\n<blockquote>\n<p>nit:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                        // We are already done with register alloc.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 303045093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665249987
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135245875\">PR review</a>.</p>",
        "id": 303045094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665249987
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990667098\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you also add a use for <code>a0</code>?</p>\n</blockquote>",
        "id": 303045134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665250026
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135245944\">PR review</a>.</p>",
        "id": 303045135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665250026
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990667255\">PR review comment</a>:</p>\n<blockquote>\n<p>Support for this needs to be implemented in cranelift_object. Should be pretty similar to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4995/files#diff-b825ad4c01be6ae3d42dd6ace012f2815e5e52458abc4f436526a5c4aaa769adR711\">https://github.com/bytecodealliance/wasmtime/pull/4995/files#diff-b825ad4c01be6ae3d42dd6ace012f2815e5e52458abc4f436526a5c4aaa769adR711</a></p>\n</blockquote>",
        "id": 303045262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665250122
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135246079\">PR review</a>.</p>",
        "id": 303045263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665250122
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990674396\">PR review comment</a>:</p>\n<blockquote>\n<p>@bjorn3 to clarify, what would the use be for? The instruction only has one register arg (<code>rd</code>), which is output-only; does something else flow in?</p>\n</blockquote>",
        "id": 303051175,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665254114
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135252486\">PR review</a>.</p>",
        "id": 303051176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665254114
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135252832\">PR review</a>.</p>",
        "id": 303051591,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665254356
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990674808\">PR review comment</a>:</p>\n<blockquote>\n<p>Right, the call contained within it uses <code>a0</code>, but that one is defined earlier in this macro instruction.</p>\n</blockquote>",
        "id": 303051592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665254356
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135286343\">PR review</a>.</p>",
        "id": 303079263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278259
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990715689\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, and given that, <code>a0</code> is not a use of the pseudoinstruction: it is not live-in, and the register allocator does not need to track a liverange for an input that ends up in <code>a0</code>. Purely internal operations can read and write <code>a0</code> as many times as they like, since the def constrained to <code>a0</code> allows the instruction to have an overall effect of \"overwrites <code>a0</code> with output value resulting\".</p>\n<p>So, @yuyang-ok: this code is correct as-is, no worries!</p>\n</blockquote>",
        "id": 303079264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278259
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990716090\">PR review comment</a>:</p>\n<blockquote>\n<p>ok.</p>\n</blockquote>",
        "id": 303079556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278562
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135286613\">PR review</a>.</p>",
        "id": 303079557,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278562
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135286620\">PR review</a>.</p>",
        "id": 303079561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278570
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990716108\">PR review comment</a>:</p>\n<blockquote>\n<p>sorry.</p>\n</blockquote>",
        "id": 303079562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278570
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990716146\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes ,a0 is aslo used.</p>\n</blockquote>",
        "id": 303079584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278600
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135286653\">PR review</a>.</p>",
        "id": 303079585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278600
    },
    {
        "content": "<p>yuyang-ok edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990716146\">PR review comment</a>.</p>",
        "id": 303079592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278611
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990716257\">PR review comment</a>:</p>\n<blockquote>\n<p>@bjorn3  Do you mean the name <code>Reloc::RiscvCall </code> should be <code>Reloc::R_RISCV_CALL</code>????</p>\n</blockquote>",
        "id": 303079665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278694
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135286742\">PR review</a>.</p>",
        "id": 303079666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665278694
    },
    {
        "content": "<p>yuyang-ok deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990716146\">PR review comment</a>.</p>",
        "id": 303082603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665281800
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135289564\">PR review</a>.</p>",
        "id": 303082642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665281838
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990720535\">PR review comment</a>:</p>\n<blockquote>\n<p>@cfallin Yes, no need use,<code>aarch64</code> did the same.</p>\n</blockquote>",
        "id": 303082643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665281838
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 303083372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665282609
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135338222\">PR review</a>.</p>",
        "id": 303123086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665316035
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990778067\">PR review comment</a>:</p>\n<blockquote>\n<p>This is what I meant:</p>\n<p><div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/cranelift/object/src/backend.rs b/cranelift/object/src/backend.rs</span><span class=\"w\"></span>\n<span class=\"gh\">index f40a75822..c06c2e3e4 100644</span><span class=\"w\"></span>\n<span class=\"gd\">--- a/cranelift/object/src/backend.rs</span><span class=\"w\"></span>\n<span class=\"gi\">+++ b/cranelift/object/src/backend.rs</span><span class=\"w\"></span>\n<span class=\"gu\">@@ -720,6 +720,32 @@ impl ObjectModule {</span><span class=\"w\"></span>\n<span class=\"w\"> </span>                    0,<span class=\"w\"></span>\n<span class=\"w\"> </span>                )<span class=\"w\"></span>\n<span class=\"w\"> </span>            }<span class=\"w\"></span>\n<span class=\"gi\">+            Reloc::RiscvTlsGdHi20 =&gt; {</span><span class=\"w\"></span>\n<span class=\"gi\">+                assert_eq!(</span><span class=\"w\"></span>\n<span class=\"gi\">+                    self.object.format(),</span><span class=\"w\"></span>\n<span class=\"gi\">+                    object::BinaryFormat::Elf,</span><span class=\"w\"></span>\n<span class=\"gi\">+                    \"RiscvTlsGdHi20 is not supported for this file format\"</span><span class=\"w\"></span>\n<span class=\"gi\">+                );</span><span class=\"w\"></span>\n<span class=\"gi\">+                (</span><span class=\"w\"></span>\n<span class=\"gi\">+                    RelocationKind::Elf(object::elf::R_RISCV_TLS_GD_HI20),</span><span class=\"w\"></span>\n<span class=\"gi\">+                    RelocationEncoding::Generic,</span><span class=\"w\"></span>\n<span class=\"gi\">+                    0,</span><span class=\"w\"></span>\n<span class=\"gi\">+                )</span><span class=\"w\"></span>\n<span class=\"gi\">+</span><span class=\"w\"></span>\n<span class=\"gi\">+            }</span><span class=\"w\"></span>\n<span class=\"gi\">+            Reloc::RiscvPCRelLo12I =&gt; {</span><span class=\"w\"></span>\n<span class=\"gi\">+                assert_eq!(</span><span class=\"w\"></span>\n<span class=\"gi\">+                    self.object.format(),</span><span class=\"w\"></span>\n<span class=\"gi\">+                    object::BinaryFormat::Elf,</span><span class=\"w\"></span>\n<span class=\"gi\">+                    \"RiscvPCRelLo12I is not supported for this file format\"</span><span class=\"w\"></span>\n<span class=\"gi\">+                );</span><span class=\"w\"></span>\n<span class=\"gi\">+                (</span><span class=\"w\"></span>\n<span class=\"gi\">+                    RelocationKind::Elf(object::elf::R_RISCV_PCREL_LO12_I),</span><span class=\"w\"></span>\n<span class=\"gi\">+                    RelocationEncoding::Generic,</span><span class=\"w\"></span>\n<span class=\"gi\">+                    0,</span><span class=\"w\"></span>\n<span class=\"gi\">+                )</span><span class=\"w\"></span>\n<span class=\"gi\">+</span><span class=\"w\"></span>\n<span class=\"gi\">+            }</span><span class=\"w\"></span>\n<span class=\"w\"> </span>            // FIXME<span class=\"w\"></span>\n<span class=\"w\"> </span>            reloc =&gt; unimplemented!(\"{:?}\", reloc),<span class=\"w\"></span>\n<span class=\"w\"> </span>        };<span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 303123087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665316035
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135338427\">PR review</a>.</p>",
        "id": 303123312,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665316186
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990778354\">PR review comment</a>:</p>\n<blockquote>\n<p>So I just tried this and the linker gave an error. When I tried comparing it with what LLVM produces I found that this relocation needs to have a label pointing to the previous instruction as target: <a href=\"https://godbolt.org/z/8P31Gcc7Y\">https://godbolt.org/z/8P31Gcc7Y</a> @cfallin how should an api for allowing backends to produce this kind of labels look like?</p>\n</blockquote>",
        "id": 303123313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665316186
    },
    {
        "content": "<p>yuyang-ok deleted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990716257\">PR review comment</a>.</p>",
        "id": 303180220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665359107
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r990872718\">PR review comment</a>:</p>\n<blockquote>\n<p>@bjorn3  In that case I think one reloc maybe be  more reasonable like <code>ElfTlsGD</code>,<code>ElfTlsGD</code> means </p>\n</blockquote>\n<p>.LBB0_1:<br>\n        auipc   a0, %tls_gd_pcrel_hi(example::FOO)<br>\n        addi    a0, a0, %pcrel_lo(.LBB0_1)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">whole</span><span class=\"w\"> </span><span class=\"n\">bunch</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">things</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"err\">`</span><span class=\"n\">ElfTlsGD</span><span class=\"o\">+</span><span class=\"mi\">0</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">means</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">label</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">tls_gd_pcrel_hi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ElfTlsGD</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">means</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">pcrel_lo</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 303185427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665365362
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135421907\">PR review</a>.</p>",
        "id": 303185428,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665365362
    },
    {
        "content": "<p>yuyang-ok submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135604425\">PR review</a>.</p>",
        "id": 303211912,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665388464
    },
    {
        "content": "<p>yuyang-ok created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r991000928\">PR review comment</a>:</p>\n<blockquote>\n<p>ok.</p>\n</blockquote>",
        "id": 303211913,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665388464
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r991263164\">PR review comment</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/llvm/llvm-project/blob/9c626d4a0d4d75c976c9a7c9093ea885fcbd98d5/lld/ELF/InputSection.cpp#L542-L580\">https://github.com/llvm/llvm-project/blob/9c626d4a0d4d75c976c9a7c9093ea885fcbd98d5/lld/ELF/InputSection.cpp#L542-L580</a></p>\n<p>It doesn't seem to work that way it seems. For R_RISCV_PCREL_LO12_{I,S} the target is always a label pointing to a place with a R_RISCV_PCREL_HI20, R_RISCV_GOT_HI20, R_RISCV_TLS_GD_HI20 or R_RISCV_TLS_GOT_HI20. The actual symbol for which the R_RISCV_PCREL_LO12_{I,S} works on is taken from this relocation, rather than from the R_RISCV_PCREL_LO12_{I,S} itself. In other words it uses <code>example::FOO</code> as symbol rather than <code>.LBB0_1</code>.</p>\n</blockquote>",
        "id": 303255945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665406875
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1135982394\">PR review</a>.</p>",
        "id": 303255953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665406877
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r991603235\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin how should an api for allowing backends to produce this kind of labels look like?</p>\n</blockquote>\n<p>In this case the <code>MachInst</code> should generate both instructions I think (<code>auipc</code> and <code>addi</code>); that way the label use is internal to the <code>MachInst</code>. Anything more complex than that needs a lot of additional plumbing that we don't have...</p>\n</blockquote>",
        "id": 303318701,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665432019
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1136476405\">PR review</a>.</p>",
        "id": 303318702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665432019
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#pullrequestreview-1136477715\">PR review</a>.</p>",
        "id": 303318851,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665432106
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017#discussion_r991604171\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, the label needs to be exported as entry in the ELF symbol table.</p>\n</blockquote>",
        "id": 303318852,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665432106
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 303535130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665529974
    },
    {
        "content": "<p>yuyang-ok updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a> from <code>tls_and_abi</code> to <code>main</code>.</p>",
        "id": 310539213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668655477
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5017\">PR #5017</a>.</p>",
        "id": 395265283,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696600510
    }
]