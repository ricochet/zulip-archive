[
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1447432916\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@afonso360, you've been working on the sign-extension bits this PR relies on, as well as the <code>select</code> lowerings that this affects. What are your thoughts on this PR?</p>\n<p>I was wondering if it would be better to pass an <code>ExtendOp</code> to <code>normalize_cmp_value</code>, instead of an <code>IntCC</code>. Most of the callers always want a zero-extend and some of them have to fake a condition code in this PR, so maybe passing the choice of sign-extending or zero-extending directly would be more clear.</p>\n<p>I don't know what the best way to do this is. I think I understand this PR though, and if it looks good to @afonso360 then it looks good to me.</p>\n</blockquote>",
        "id": 338485391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677548241
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1447471296\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@jameysharp  It is hard to decide use <code>IntCC</code> or <code>ExtendOp</code> as  parameter to <code>normalize_cmp_value</code> too.<br>\nBecause the function named <code>normalize_cmp_value</code> I thought maybe better pass the <code>IntCC</code>.<br>\nActualy <code>IntCC.Equal</code> and <code>IntCC.NotEqual</code> make no differrence.</p>\n</blockquote>",
        "id": 338489427,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677551167
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1447471296\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@jameysharp  It is hard to decide use <code>IntCC</code> or <code>ExtendOp</code> as  parameter to <code>normalize_cmp_value</code> to me too.<br>\nBecause the function named <code>normalize_cmp_value</code> I thought maybe better pass the <code>IntCC</code>.<br>\nActualy <code>IntCC.Equal</code> and <code>IntCC.NotEqual</code> make no differrence.</p>\n</blockquote>",
        "id": 338489631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677551337
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1447479553\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@jameysharp Maybe a <code>convert</code> So we can accept <code>IntCC</code> and <code>ExtendOP</code> both.</p>\n</blockquote>",
        "id": 338490325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677551860
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1447479553\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@jameysharp Maybe a <code>convert</code> So we can accept <code>IntCC</code> and <code>ExtendOP</code> both.<br>\nLike <code>convert Intcc ExtendOp convert_intcc_to_extend_op</code> and <code>normalize_cmp_value</code> accept <code>ExtendOp</code> as parameter.</p>\n</blockquote>",
        "id": 338490469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677551948
    },
    {
        "content": "<p>yuyang-ok edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1447479553\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@jameysharp Maybe a <code>convert</code> So we can accept <code>IntCC</code> and <code>ExtendOP</code> both.<br>\nLike <code>(convert Intcc ExtendOp convert_intcc_to_extend_op)</code> and <code>normalize_cmp_value</code> accept <code>ExtendOp</code> as parameter.</p>\n</blockquote>",
        "id": 338490773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677552192
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1447696300\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@jameysharp I have changed the parameter to <code>ExtendOp</code>.</p>\n</blockquote>",
        "id": 338514127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677568701
    },
    {
        "content": "<p>yuyang-ok <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873#issuecomment-1449024516\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5873\">issue #5873</a>:</p>\n<blockquote>\n<p>@jameysharp @afonso360 I think we are ready.</p>\n</blockquote>",
        "id": 338704567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1677623397
    }
]