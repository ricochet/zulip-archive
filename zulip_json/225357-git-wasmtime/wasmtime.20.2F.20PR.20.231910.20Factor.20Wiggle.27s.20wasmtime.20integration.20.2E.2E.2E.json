[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which I'll rename shortly.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 201682953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592879795
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a>.</p>",
        "id": 201682956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592879799
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on (<code>lucet-wiggle</code>)[https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle], which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201683035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592879979
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201683152,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592880133
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-436091065\">PR Review</a>.</p>",
        "id": 201771409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592940628
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#discussion_r444457897\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Technically this isn't quite true since wasi-common supports virtual handles, right?</p>\n</blockquote>",
        "id": 201771410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592940628
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-436091065\">PR Review</a>.</p>",
        "id": 201771412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592940629
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#discussion_r444491688\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The <code>Handle</code> trait doesn't expose <code>GuestPtr</code> or any types which contain one, so I think technically we are ok. All of the interesting uses of <code>GuestPtr</code> get translated into <code>std::io::IoSlice{Mut}</code> before being passed to the <code>Handle</code> methods.</p>\n</blockquote>",
        "id": 201779305,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592944614
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-436135751\">PR Review</a>.</p>",
        "id": 201779306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592944614
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-436167378\">PR Review</a>.</p>",
        "id": 201785093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592947282
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#discussion_r444515759\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm not necessarily worried about <code>GuestPtr</code>, moreso that if you run arbitrary code it could reenter wasm which could invalidate <code>GuestPtr</code> values on the stack previously. The <code>Handle</code> type I think can run arbitrary code, right? (and internally it can call something which reenters the original wasm module)</p>\n</blockquote>",
        "id": 201785094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592947282
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-436182062\">PR Review</a>.</p>",
        "id": 201787969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592948796
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#discussion_r444527476\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, right, I forgot about that aspect. Yes, <code>Handle</code> impls can execute whatever code they like, so it is definitely possible for them to re-enter the instance. That means we should be finding some way to provide a <code>BorrowChecker</code> that has the same lifetime as the instance, because the lifetime of the call into these functions is no longer sufficient.</p>\n<p>I'm not sure how to do that, but I can fix it in this PR if you can outline how I should, or we can leave it for a separate PR.</p>\n</blockquote>",
        "id": 201787970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592948796
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201791932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592951256
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201792010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592951290
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201797157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592954966
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201801548,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592959348
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201803115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592961105
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-436739275\">PR Review</a>.</p>",
        "id": 201859488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593011084
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#discussion_r444963814\">PR Review Comment</a>:</p>\n<blockquote>\n<p>There's a number of ways that we could do this, but I don't think any of them are relatively easy. What we probably want to do is to integrate this into <code>wasmtime</code>-the-crate itself, and that way entering into wasm could <em>always</em> check to make sure there are no active borrows because we have tight control over the wasm entry points.</p>\n<p>Perhaps we could have a discussion in an issue about how to best integrate this tightly with the wasmtime crate itself? I feel like borrowing from guest memory is so common it's justified to put this in the core functionality.</p>\n</blockquote>",
        "id": 201859490,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593011084
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201894702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593028071
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> from <code>pch/separate_wasmtime_wiggle_crate</code> to <code>master</code>:</p>\n<blockquote>\n<p>Presently, integrating wiggle with wasmtime is taken care of as a one-off proc macro in wasi-common's <code>wig</code> crate.</p>\n<p>It would be ideal to provide a single proc macro that generates the adapter between <code>wiggle::from_witx!</code> -generated code and Wasmtime. This can be used as a substitute for the <code>wig</code> code in <code>wasmtime-wasi</code>, and in other crates.</p>\n<p>The design of this crate is based on <a href=\"https://github.com/bytecodealliance/lucet/tree/master/lucet-wiggle\"><code>lucet-wiggle</code></a>, which provides the same adapter between wiggle and <code>lucet-runtime</code>.</p>\n<p>This PR moves and refactors the <code>wig</code> implementation of this adapter code to be general purpose.</p>\n<ul>\n<li>Creates a new crate <code>wasmtime-wiggle</code> at <code>crates/wiggle/wasmtime</code>. This re-exports <code>wiggle</code> (so users of the adapter only need to track one dep), defines the reusable runtime component <code>WasmtimeGuestMemory</code>, which has an <code>impl GuestMemory</code>, and exports the adapter macro</li>\n<li>New crate <code>wasmtime-wiggle-macro</code> is a proc-macro lib at <code>crates/wiggle/wasmtime/macro</code>. This exports <code>define_struct_for_wiggle</code>, which isn't an ideal name anymore, and I'll have to fix.</li>\n</ul>\n<p>The configuration options for <code>define_struct_for_wiggle</code> are dramatically expanded, and re-use some code and the style of parsing configuration options from <code>wiggle_generate</code>.</p>\n</blockquote>",
        "id": 201906807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593034489
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-437032635\">PR Review</a>.</p>",
        "id": 201908374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593035525
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#discussion_r445192658\">PR Review Comment</a>:</p>\n<blockquote>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/issues/1917\">https://github.com/bytecodealliance/wasmtime/issues/1917</a></p>\n</blockquote>",
        "id": 201908375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593035526
    },
    {
        "content": "<p><strong>pchickey</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a> as ready for review.</p>",
        "id": 201908390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593035539
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a>.</p>",
        "id": 201908396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593035544
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910#pullrequestreview-437543166\">PR Review</a>.</p>",
        "id": 201975207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593094844
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1910\">PR #1910</a>.</p>",
        "id": 201993041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593102875
    }
]