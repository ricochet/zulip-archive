[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1677\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1677\">Issue #1677</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Currently the generated unwinding information only restores registers. This issue proposes to make it possible to also run cleanup actions like running destructors during unwinding.</p>\n<h4>Benefit</h4>\n<p>This is necessary to support unwinding after a panic in rustc_codegen_cranelift.</p>\n<h4>Implementation</h4>\n<p>Add a new <code>invoke</code> terminator that is similar to the <code>call</code> instruction, but has an additional cleanup edge. This cleanup edge will be ignored when emitting actual machine instructions, but it will take part in the regalloc. Next add a way to mark a block as \"landing pad\". Only \"landing pad\" blocks can be used as cleanup edge of an <code>invoke</code> terminator. At the start of a \"cleanup\" block all values are stored either on stack or in any of the registers restored by the system unwinder. The \"landing pad\" block can also take several arguments. Those will be the values stored in the registers that are allowed for arguments to the landing pad received from the personality function. After codegen the location of every \"landing pad\" block will be stored in a variable. This will allow the embedder to generate the appropriate LSDA (language specific data area) to reference from the unwinding table.</p>\n<h4>Alternatives</h4>\n<p>It is basically impossible to implement cleanup during unwinding without Cranelift support.</p>\n<h4>References</h4>\n<p>The \"Transferring Control to a Landing Pad\" section of <a href=\"https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf\" title=\"https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf\">https://software.intel.com/sites/default/files/article/402129/mpx-linux64-abi.pdf</a></p>\n</blockquote>",
        "id": 197073263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589138452
    }
]