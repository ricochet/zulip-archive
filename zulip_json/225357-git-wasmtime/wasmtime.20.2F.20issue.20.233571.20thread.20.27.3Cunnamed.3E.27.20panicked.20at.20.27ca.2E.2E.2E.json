[
    {
        "content": "<p>bxq2011hust labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>upload Wasm file here</p>\n<h3>Steps to Reproduce</h3>\n<p>first, call a wasm function<br>\nsecond, in the called wasm function, call host function, host function call a function in another wasm instance, then calll a host function which return a trap to interrupt the execution and return result to first wasm call.<br>\nthird, the second wasm call maybe in the <strong>same thread</strong> as the first wasm call, because we use boost coroutine</p>\n<h3>Expected Results</h3>\n<p>What do you expect to happen?</p>\n<p>just return the trap with user defined message</p>\n<h3>Actual Results</h3>\n<p><code>thread '&lt;unnamed&gt;' panicked at 'called </code>Option::unwrap()<code> on a </code>None<code> value', crates/runtime/src/traphandlers.rs:84:27</code></p>\n<p>and wasmtime return a trap with <code>called </code>Option::unwrap()<code> on a </code>None<code> value</code></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v0.31.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture:  x86_64</p>\n<h3>Extra Info</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>thread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, crates/runtime/src/traphandlers.rs:84:27\nstack backtrace:\n   <span class=\"m\">0</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::libunwind::trace::hfa838fc631229987\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\n   <span class=\"m\">1</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::trace_unsynchronized::h93a23e36ec026219\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x55f8b0151850 - std::sys_common::backtrace::_print_fmt::hba56c7f796a4152f\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:67:5\n   <span class=\"m\">3</span>:     0x55f8b0151850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h214637f1e26310e1\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:46:22\n   <span class=\"m\">4</span>:     0x55f8b01be22c - core::fmt::write::h7aa6cd0067dca82a\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/fmt/mod.rs:1110:17\n   <span class=\"m\">5</span>:     0x55f8b01431e5 - std::io::Write::write_fmt::heb07fc0616bbd06d\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/io/mod.rs:1588:15\n   <span class=\"m\">6</span>:     0x55f8b01556db - std::sys_common::backtrace::_print::h2c2441c37e894fb5\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:49:5\n   <span class=\"m\">7</span>:     0x55f8b01556db - std::sys_common::backtrace::print::h4fb679ac439362ea\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:36:9\n   <span class=\"m\">8</span>:     0x55f8b01556db - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h56bbadec2356e5d2\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:208:50\n   <span class=\"m\">9</span>:     0x55f8b01551b1 - std::panicking::default_hook::hb25822b45f6fdc4e\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:225:9\n  <span class=\"m\">10</span>:     0x55f8b0155f04 - std::panicking::rust_panic_with_hook::h4da5578e7277d2d4\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:622:17\n  <span class=\"m\">11</span>:     0x55f8b01559a7 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h003783ddb3cba4e8\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:517:13\n  <span class=\"m\">12</span>:     0x55f8b0151d2c - std::sys_common::backtrace::__rust_end_short_backtrace::hd138d2032731ed21\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:141:18\n  <span class=\"m\">13</span>:     0x55f8b0155939 - rust_begin_unwind\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:515:5\n  <span class=\"m\">14</span>:     0x55f8af240cd1 - core::panicking::panic_fmt::hbe99dddd3092ba3c\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:92:14\n  <span class=\"m\">15</span>:     0x55f8af240c1d - core::panicking::panic::h3de4db67bd397eb3\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:50:5\n  <span class=\"m\">16</span>:     0x55f8b07c98d7 - wasmtime_runtime::traphandlers::raise_user_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h379a9d8be1f58dd1\n  <span class=\"m\">17</span>:     0x55f8b07c9bec - wasmtime_runtime::traphandlers::tls::with::he8d24e4beebeef49\n  <span class=\"m\">18</span>:     0x55f8b07c7f96 - wasmtime_runtime::traphandlers::raise_user_trap::h551a36e7a2d8cd18\n  <span class=\"m\">19</span>:     0x55f8b0281638 - wasmtime::trampoline::func::stub_fn::hb6d8bd05900c5561\n  <span class=\"m\">20</span>:     0x7fd2140a8033 - &lt;unknown&gt;\n  <span class=\"m\">21</span>:     0x7fd2140f1ddd - &lt;unknown&gt;\n  <span class=\"m\">22</span>:     0x7fd2140e6938 - &lt;unknown&gt;\n  <span class=\"m\">23</span>:     0x7fd2140eed0a - &lt;unknown&gt;\n  <span class=\"m\">24</span>:     0x7fd2140e26b3 - &lt;unknown&gt;\n  <span class=\"m\">25</span>:     0x7fd2140ee293 - &lt;unknown&gt;\n  <span class=\"m\">26</span>:     0x7fd2140a2006 - &lt;unknown&gt;\n  <span class=\"m\">27</span>:     0x55f8b07de82c - wasmtime_setjmp\n  <span class=\"m\">28</span>:     0x55f8b027aef6 - wasmtime_runtime::traphandlers::catch_traps::hf8385270d50bd059\n  <span class=\"m\">29</span>:     0x55f8b08c93bb - wasmtime::func::Func::call::hfad085cecac9e549\n  <span class=\"m\">30</span>:     0x55f8b0322551 - wasm_func_call\n  <span class=\"m\">31</span>:     0x55f8b0269fd1 - _ZN4hera11WasmcEngine7executeERN4evmc11HostContextESt17basic_string_viewIhSt11char_traitsIhEES7_RK12evmc_messageb\n</code></pre></div>\n<p>Maybe call two wasm instance use one thread is not permitted? or there is a problem use trap to interrupt execution?<br>\n</p>\n</blockquote>",
        "id": 263097794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638242516
    },
    {
        "content": "<p>bxq2011hust opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>upload Wasm file here</p>\n<h3>Steps to Reproduce</h3>\n<p>first, call a wasm function<br>\nsecond, in the called wasm function, call host function, host function call a function in another wasm instance, then calll a host function which return a trap to interrupt the execution and return result to first wasm call.<br>\nthird, the second wasm call maybe in the <strong>same thread</strong> as the first wasm call, because we use boost coroutine</p>\n<h3>Expected Results</h3>\n<p>What do you expect to happen?</p>\n<p>just return the trap with user defined message</p>\n<h3>Actual Results</h3>\n<p><code>thread '&lt;unnamed&gt;' panicked at 'called </code>Option::unwrap()<code> on a </code>None<code> value', crates/runtime/src/traphandlers.rs:84:27</code></p>\n<p>and wasmtime return a trap with <code>called </code>Option::unwrap()<code> on a </code>None<code> value</code></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v0.31.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture:  x86_64</p>\n<h3>Extra Info</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>thread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, crates/runtime/src/traphandlers.rs:84:27\nstack backtrace:\n   <span class=\"m\">0</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::libunwind::trace::hfa838fc631229987\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\n   <span class=\"m\">1</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::trace_unsynchronized::h93a23e36ec026219\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x55f8b0151850 - std::sys_common::backtrace::_print_fmt::hba56c7f796a4152f\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:67:5\n   <span class=\"m\">3</span>:     0x55f8b0151850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h214637f1e26310e1\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:46:22\n   <span class=\"m\">4</span>:     0x55f8b01be22c - core::fmt::write::h7aa6cd0067dca82a\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/fmt/mod.rs:1110:17\n   <span class=\"m\">5</span>:     0x55f8b01431e5 - std::io::Write::write_fmt::heb07fc0616bbd06d\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/io/mod.rs:1588:15\n   <span class=\"m\">6</span>:     0x55f8b01556db - std::sys_common::backtrace::_print::h2c2441c37e894fb5\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:49:5\n   <span class=\"m\">7</span>:     0x55f8b01556db - std::sys_common::backtrace::print::h4fb679ac439362ea\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:36:9\n   <span class=\"m\">8</span>:     0x55f8b01556db - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h56bbadec2356e5d2\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:208:50\n   <span class=\"m\">9</span>:     0x55f8b01551b1 - std::panicking::default_hook::hb25822b45f6fdc4e\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:225:9\n  <span class=\"m\">10</span>:     0x55f8b0155f04 - std::panicking::rust_panic_with_hook::h4da5578e7277d2d4\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:622:17\n  <span class=\"m\">11</span>:     0x55f8b01559a7 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h003783ddb3cba4e8\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:517:13\n  <span class=\"m\">12</span>:     0x55f8b0151d2c - std::sys_common::backtrace::__rust_end_short_backtrace::hd138d2032731ed21\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:141:18\n  <span class=\"m\">13</span>:     0x55f8b0155939 - rust_begin_unwind\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:515:5\n  <span class=\"m\">14</span>:     0x55f8af240cd1 - core::panicking::panic_fmt::hbe99dddd3092ba3c\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:92:14\n  <span class=\"m\">15</span>:     0x55f8af240c1d - core::panicking::panic::h3de4db67bd397eb3\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:50:5\n  <span class=\"m\">16</span>:     0x55f8b07c98d7 - wasmtime_runtime::traphandlers::raise_user_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h379a9d8be1f58dd1\n  <span class=\"m\">17</span>:     0x55f8b07c9bec - wasmtime_runtime::traphandlers::tls::with::he8d24e4beebeef49\n  <span class=\"m\">18</span>:     0x55f8b07c7f96 - wasmtime_runtime::traphandlers::raise_user_trap::h551a36e7a2d8cd18\n  <span class=\"m\">19</span>:     0x55f8b0281638 - wasmtime::trampoline::func::stub_fn::hb6d8bd05900c5561\n  <span class=\"m\">20</span>:     0x7fd2140a8033 - &lt;unknown&gt;\n  <span class=\"m\">21</span>:     0x7fd2140f1ddd - &lt;unknown&gt;\n  <span class=\"m\">22</span>:     0x7fd2140e6938 - &lt;unknown&gt;\n  <span class=\"m\">23</span>:     0x7fd2140eed0a - &lt;unknown&gt;\n  <span class=\"m\">24</span>:     0x7fd2140e26b3 - &lt;unknown&gt;\n  <span class=\"m\">25</span>:     0x7fd2140ee293 - &lt;unknown&gt;\n  <span class=\"m\">26</span>:     0x7fd2140a2006 - &lt;unknown&gt;\n  <span class=\"m\">27</span>:     0x55f8b07de82c - wasmtime_setjmp\n  <span class=\"m\">28</span>:     0x55f8b027aef6 - wasmtime_runtime::traphandlers::catch_traps::hf8385270d50bd059\n  <span class=\"m\">29</span>:     0x55f8b08c93bb - wasmtime::func::Func::call::hfad085cecac9e549\n  <span class=\"m\">30</span>:     0x55f8b0322551 - wasm_func_call\n  <span class=\"m\">31</span>:     0x55f8b0269fd1 - _ZN4hera11WasmcEngine7executeERN4evmc11HostContextESt17basic_string_viewIhSt11char_traitsIhEES7_RK12evmc_messageb\n</code></pre></div>\n<p>Maybe call two wasm instance use one thread is not permitted? or there is a problem use trap to interrupt execution?<br>\n</p>\n</blockquote>",
        "id": 263097795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638242516
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-982328774\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>Boost coroutines don't save and restore the required TLS variables. If you want to interleave multiple wasm module executions on the same thread you will have to use rust async and the dedicated api for wasmtime's async support. This saves and restores all TLS variables as necessafy and switches the wasm stack for you. See <a href=\"https://github.com/bytecodealliance/wasmtime/blob/06a93d33462f5460a1c5289f4001ccde49bf562d/crates/wasmtime/src/store.rs#L1259\">https://github.com/bytecodealliance/wasmtime/blob/06a93d33462f5460a1c5289f4001ccde49bf562d/crates/wasmtime/src/store.rs#L1259</a> and the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/examples/tokio/main.rs\">https://github.com/bytecodealliance/wasmtime/blob/main/examples/tokio/main.rs</a> example.</p>\n</blockquote>",
        "id": 263106357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638253933
    },
    {
        "content": "<p>bxq2011hust <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-982381219\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<blockquote>\n<p>Boost coroutines don't save and restore the required TLS variables. If you want to interleave multiple wasm module executions on the same thread you will have to use rust async and the dedicated api for wasmtime's async support. This saves and restores all TLS variables as necessafy and switches the wasm stack for you. See</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/06a93d33462f5460a1c5289f4001ccde49bf562d/crates/wasmtime/src/store.rs#L1259\">https://github.com/bytecodealliance/wasmtime/blob/06a93d33462f5460a1c5289f4001ccde49bf562d/crates/wasmtime/src/store.rs#L1259</a></p>\n<p>and the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/examples/tokio/main.rs\">https://github.com/bytecodealliance/wasmtime/blob/main/examples/tokio/main.rs</a> example.</p>\n</blockquote>\n<p>ok, got it, thanks</p>\n</blockquote>",
        "id": 263111422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638259706
    },
    {
        "content": "<p>bxq2011hust closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>upload Wasm file here</p>\n<h3>Steps to Reproduce</h3>\n<p>first, call a wasm function<br>\nsecond, in the called wasm function, call host function, host function call a function in another wasm instance, then calll a host function which return a trap to interrupt the execution and return result to first wasm call.<br>\nthird, the second wasm call maybe in the <strong>same thread</strong> as the first wasm call, because we use boost coroutine</p>\n<h3>Expected Results</h3>\n<p>What do you expect to happen?</p>\n<p>just return the trap with user defined message</p>\n<h3>Actual Results</h3>\n<p><code>thread '&lt;unnamed&gt;' panicked at 'called </code>Option::unwrap()<code> on a </code>None<code> value', crates/runtime/src/traphandlers.rs:84:27</code></p>\n<p>and wasmtime return a trap with <code>called </code>Option::unwrap()<code> on a </code>None<code> value</code></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v0.31.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture:  x86_64</p>\n<h3>Extra Info</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>thread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, crates/runtime/src/traphandlers.rs:84:27\nstack backtrace:\n   <span class=\"m\">0</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::libunwind::trace::hfa838fc631229987\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\n   <span class=\"m\">1</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::trace_unsynchronized::h93a23e36ec026219\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x55f8b0151850 - std::sys_common::backtrace::_print_fmt::hba56c7f796a4152f\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:67:5\n   <span class=\"m\">3</span>:     0x55f8b0151850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h214637f1e26310e1\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:46:22\n   <span class=\"m\">4</span>:     0x55f8b01be22c - core::fmt::write::h7aa6cd0067dca82a\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/fmt/mod.rs:1110:17\n   <span class=\"m\">5</span>:     0x55f8b01431e5 - std::io::Write::write_fmt::heb07fc0616bbd06d\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/io/mod.rs:1588:15\n   <span class=\"m\">6</span>:     0x55f8b01556db - std::sys_common::backtrace::_print::h2c2441c37e894fb5\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:49:5\n   <span class=\"m\">7</span>:     0x55f8b01556db - std::sys_common::backtrace::print::h4fb679ac439362ea\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:36:9\n   <span class=\"m\">8</span>:     0x55f8b01556db - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h56bbadec2356e5d2\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:208:50\n   <span class=\"m\">9</span>:     0x55f8b01551b1 - std::panicking::default_hook::hb25822b45f6fdc4e\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:225:9\n  <span class=\"m\">10</span>:     0x55f8b0155f04 - std::panicking::rust_panic_with_hook::h4da5578e7277d2d4\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:622:17\n  <span class=\"m\">11</span>:     0x55f8b01559a7 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h003783ddb3cba4e8\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:517:13\n  <span class=\"m\">12</span>:     0x55f8b0151d2c - std::sys_common::backtrace::__rust_end_short_backtrace::hd138d2032731ed21\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:141:18\n  <span class=\"m\">13</span>:     0x55f8b0155939 - rust_begin_unwind\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:515:5\n  <span class=\"m\">14</span>:     0x55f8af240cd1 - core::panicking::panic_fmt::hbe99dddd3092ba3c\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:92:14\n  <span class=\"m\">15</span>:     0x55f8af240c1d - core::panicking::panic::h3de4db67bd397eb3\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:50:5\n  <span class=\"m\">16</span>:     0x55f8b07c98d7 - wasmtime_runtime::traphandlers::raise_user_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h379a9d8be1f58dd1\n  <span class=\"m\">17</span>:     0x55f8b07c9bec - wasmtime_runtime::traphandlers::tls::with::he8d24e4beebeef49\n  <span class=\"m\">18</span>:     0x55f8b07c7f96 - wasmtime_runtime::traphandlers::raise_user_trap::h551a36e7a2d8cd18\n  <span class=\"m\">19</span>:     0x55f8b0281638 - wasmtime::trampoline::func::stub_fn::hb6d8bd05900c5561\n  <span class=\"m\">20</span>:     0x7fd2140a8033 - &lt;unknown&gt;\n  <span class=\"m\">21</span>:     0x7fd2140f1ddd - &lt;unknown&gt;\n  <span class=\"m\">22</span>:     0x7fd2140e6938 - &lt;unknown&gt;\n  <span class=\"m\">23</span>:     0x7fd2140eed0a - &lt;unknown&gt;\n  <span class=\"m\">24</span>:     0x7fd2140e26b3 - &lt;unknown&gt;\n  <span class=\"m\">25</span>:     0x7fd2140ee293 - &lt;unknown&gt;\n  <span class=\"m\">26</span>:     0x7fd2140a2006 - &lt;unknown&gt;\n  <span class=\"m\">27</span>:     0x55f8b07de82c - wasmtime_setjmp\n  <span class=\"m\">28</span>:     0x55f8b027aef6 - wasmtime_runtime::traphandlers::catch_traps::hf8385270d50bd059\n  <span class=\"m\">29</span>:     0x55f8b08c93bb - wasmtime::func::Func::call::hfad085cecac9e549\n  <span class=\"m\">30</span>:     0x55f8b0322551 - wasm_func_call\n  <span class=\"m\">31</span>:     0x55f8b0269fd1 - _ZN4hera11WasmcEngine7executeERN4evmc11HostContextESt17basic_string_viewIhSt11char_traitsIhEES7_RK12evmc_messageb\n</code></pre></div>\n<p>Maybe call two wasm instance use one thread is not permitted? or there is a problem use trap to interrupt execution?<br>\n</p>\n</blockquote>",
        "id": 263111424,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638259706
    },
    {
        "content": "<p>bxq2011hust <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-1251168955\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>hello, I use the rust wrapper wasmtime's async interface <code>instantiate_async</code> and <code>call_async</code>, also called by boost coroutines, but still got the same error when host function returns a Trap. Any suggestions?</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Process <span class=\"m\">99864</span> resuming\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, /Users/baixingqiang/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-runtime-0.40.1/src/traphandlers.rs:84:22\nstack backtrace:\n   <span class=\"m\">0</span>:        0x100615a28 - std::backtrace_rs::backtrace::libunwind::trace::h131b1d2b50b7c0eb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:        0x100615a28 - std::backtrace_rs::backtrace::trace_unsynchronized::h9ef9f6d47e4a5c40\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:        0x100615a28 - std::sys_common::backtrace::_print_fmt::hae9bffa833e2d615\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:        0x100615a28 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h53309d90f6cc2c13\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:        0x10065a21c - core::fmt::write::h40b2bc7dd3851337\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:        0x1006088c0 - std::io::Write::write_fmt::hd8ce10e2be917d3e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:        0x10061852c - std::sys_common::backtrace::_print::hb50c5f98c12dd1cb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:        0x10061852c - std::sys_common::backtrace::print::he2182b4a2ed0c13b\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:        0x10061852c - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h09f2eab8666e3c6e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:        0x100618250 - std::panicking::default_hook::h7d3a44c15ae9a1cf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:        0x100618b64 - std::panicking::rust_panic_with_hook::h53cf0f5de8678eab\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:        0x100618a60 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h9aabdb3a8b938975\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:        0x100615f34 - std::sys_common::backtrace::__rust_end_short_backtrace::h7e2931504cf15b78\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:        0x1006187f0 - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:        0x1028f0468 - core::panicking::panic_fmt::h933972a421d72558\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:        0x1028f0388 - core::panicking::panic::h02442e675d4079e6\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:48:5\n  <span class=\"m\">16</span>:        0x100cc7408 - wasmtime_runtime::traphandlers::raise_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::heabf4d6e766b2e45\n  <span class=\"m\">17</span>:        0x100cc771c - wasmtime_runtime::traphandlers::tls::with::h06d21890d7c20a37\n  <span class=\"m\">18</span>:        0x100cd6d88 - wasmtime_runtime::traphandlers::raise_trap::h895067d64d3f4f72\n  <span class=\"m\">19</span>:        0x100cd6da4 - wasmtime_runtime::traphandlers::raise_user_trap::h85cbe8cba4567dba\n  <span class=\"m\">20</span>:        0x1006b8d24 - &lt;F as wasmtime::func::IntoFunc&lt;T,<span class=\"o\">(</span>wasmtime::func::Caller&lt;T&gt;,<span class=\"o\">)</span>,R&gt;&gt;::into_func::wasm_to_host_shim::h02b614e7c13b5d6c\n  <span class=\"m\">21</span>:        0x10ac36fb8 - &lt;unknown&gt;\nfatal runtime error: failed to initiate panic, error <span class=\"m\">3</span>\nProcess <span class=\"m\">99864</span> stopped\n</code></pre></div>\n<p>The wrapper project is in<br>\n<a href=\"https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648\">https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648</a></p>\n</blockquote>",
        "id": 299584240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663600727
    },
    {
        "content": "<p>bxq2011hust reopened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>upload Wasm file here</p>\n<h3>Steps to Reproduce</h3>\n<p>first, call a wasm function<br>\nsecond, in the called wasm function, call host function, host function call a function in another wasm instance, then calll a host function which return a trap to interrupt the execution and return result to first wasm call.<br>\nthird, the second wasm call maybe in the <strong>same thread</strong> as the first wasm call, because we use boost coroutine</p>\n<h3>Expected Results</h3>\n<p>What do you expect to happen?</p>\n<p>just return the trap with user defined message</p>\n<h3>Actual Results</h3>\n<p><code>thread '&lt;unnamed&gt;' panicked at 'called </code>Option::unwrap()<code> on a </code>None<code> value', crates/runtime/src/traphandlers.rs:84:27</code></p>\n<p>and wasmtime return a trap with <code>called </code>Option::unwrap()<code> on a </code>None<code> value</code></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v0.31.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture:  x86_64</p>\n<h3>Extra Info</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>thread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, crates/runtime/src/traphandlers.rs:84:27\nstack backtrace:\n   <span class=\"m\">0</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::libunwind::trace::hfa838fc631229987\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\n   <span class=\"m\">1</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::trace_unsynchronized::h93a23e36ec026219\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x55f8b0151850 - std::sys_common::backtrace::_print_fmt::hba56c7f796a4152f\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:67:5\n   <span class=\"m\">3</span>:     0x55f8b0151850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h214637f1e26310e1\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:46:22\n   <span class=\"m\">4</span>:     0x55f8b01be22c - core::fmt::write::h7aa6cd0067dca82a\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/fmt/mod.rs:1110:17\n   <span class=\"m\">5</span>:     0x55f8b01431e5 - std::io::Write::write_fmt::heb07fc0616bbd06d\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/io/mod.rs:1588:15\n   <span class=\"m\">6</span>:     0x55f8b01556db - std::sys_common::backtrace::_print::h2c2441c37e894fb5\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:49:5\n   <span class=\"m\">7</span>:     0x55f8b01556db - std::sys_common::backtrace::print::h4fb679ac439362ea\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:36:9\n   <span class=\"m\">8</span>:     0x55f8b01556db - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h56bbadec2356e5d2\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:208:50\n   <span class=\"m\">9</span>:     0x55f8b01551b1 - std::panicking::default_hook::hb25822b45f6fdc4e\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:225:9\n  <span class=\"m\">10</span>:     0x55f8b0155f04 - std::panicking::rust_panic_with_hook::h4da5578e7277d2d4\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:622:17\n  <span class=\"m\">11</span>:     0x55f8b01559a7 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h003783ddb3cba4e8\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:517:13\n  <span class=\"m\">12</span>:     0x55f8b0151d2c - std::sys_common::backtrace::__rust_end_short_backtrace::hd138d2032731ed21\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:141:18\n  <span class=\"m\">13</span>:     0x55f8b0155939 - rust_begin_unwind\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:515:5\n  <span class=\"m\">14</span>:     0x55f8af240cd1 - core::panicking::panic_fmt::hbe99dddd3092ba3c\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:92:14\n  <span class=\"m\">15</span>:     0x55f8af240c1d - core::panicking::panic::h3de4db67bd397eb3\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:50:5\n  <span class=\"m\">16</span>:     0x55f8b07c98d7 - wasmtime_runtime::traphandlers::raise_user_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h379a9d8be1f58dd1\n  <span class=\"m\">17</span>:     0x55f8b07c9bec - wasmtime_runtime::traphandlers::tls::with::he8d24e4beebeef49\n  <span class=\"m\">18</span>:     0x55f8b07c7f96 - wasmtime_runtime::traphandlers::raise_user_trap::h551a36e7a2d8cd18\n  <span class=\"m\">19</span>:     0x55f8b0281638 - wasmtime::trampoline::func::stub_fn::hb6d8bd05900c5561\n  <span class=\"m\">20</span>:     0x7fd2140a8033 - &lt;unknown&gt;\n  <span class=\"m\">21</span>:     0x7fd2140f1ddd - &lt;unknown&gt;\n  <span class=\"m\">22</span>:     0x7fd2140e6938 - &lt;unknown&gt;\n  <span class=\"m\">23</span>:     0x7fd2140eed0a - &lt;unknown&gt;\n  <span class=\"m\">24</span>:     0x7fd2140e26b3 - &lt;unknown&gt;\n  <span class=\"m\">25</span>:     0x7fd2140ee293 - &lt;unknown&gt;\n  <span class=\"m\">26</span>:     0x7fd2140a2006 - &lt;unknown&gt;\n  <span class=\"m\">27</span>:     0x55f8b07de82c - wasmtime_setjmp\n  <span class=\"m\">28</span>:     0x55f8b027aef6 - wasmtime_runtime::traphandlers::catch_traps::hf8385270d50bd059\n  <span class=\"m\">29</span>:     0x55f8b08c93bb - wasmtime::func::Func::call::hfad085cecac9e549\n  <span class=\"m\">30</span>:     0x55f8b0322551 - wasm_func_call\n  <span class=\"m\">31</span>:     0x55f8b0269fd1 - _ZN4hera11WasmcEngine7executeERN4evmc11HostContextESt17basic_string_viewIhSt11char_traitsIhEES7_RK12evmc_messageb\n</code></pre></div>\n<p>Maybe call two wasm instance use one thread is not permitted? or there is a problem use trap to interrupt execution?<br>\n</p>\n</blockquote>",
        "id": 299584241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663600727
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-1251168955\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>hello, I use the rust wrapper wasmtime's async interface <code>instantiate_async</code> and <code>call_async</code>, also called by boost coroutines, but still got the same error when host function returns a Trap. Any suggestions?</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Process <span class=\"m\">99864</span> resuming\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, /Users/baixingqiang/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-runtime-0.40.1/src/traphandlers.rs:84:22\nstack backtrace:\n   <span class=\"m\">0</span>:        0x100615a28 - std::backtrace_rs::backtrace::libunwind::trace::h131b1d2b50b7c0eb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:        0x100615a28 - std::backtrace_rs::backtrace::trace_unsynchronized::h9ef9f6d47e4a5c40\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:        0x100615a28 - std::sys_common::backtrace::_print_fmt::hae9bffa833e2d615\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:        0x100615a28 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h53309d90f6cc2c13\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:        0x10065a21c - core::fmt::write::h40b2bc7dd3851337\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:        0x1006088c0 - std::io::Write::write_fmt::hd8ce10e2be917d3e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:        0x10061852c - std::sys_common::backtrace::_print::hb50c5f98c12dd1cb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:        0x10061852c - std::sys_common::backtrace::print::he2182b4a2ed0c13b\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:        0x10061852c - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h09f2eab8666e3c6e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:        0x100618250 - std::panicking::default_hook::h7d3a44c15ae9a1cf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:        0x100618b64 - std::panicking::rust_panic_with_hook::h53cf0f5de8678eab\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:        0x100618a60 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h9aabdb3a8b938975\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:        0x100615f34 - std::sys_common::backtrace::__rust_end_short_backtrace::h7e2931504cf15b78\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:        0x1006187f0 - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:        0x1028f0468 - core::panicking::panic_fmt::h933972a421d72558\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:        0x1028f0388 - core::panicking::panic::h02442e675d4079e6\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:48:5\n  <span class=\"m\">16</span>:        0x100cc7408 - wasmtime_runtime::traphandlers::raise_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::heabf4d6e766b2e45\n  <span class=\"m\">17</span>:        0x100cc771c - wasmtime_runtime::traphandlers::tls::with::h06d21890d7c20a37\n  <span class=\"m\">18</span>:        0x100cd6d88 - wasmtime_runtime::traphandlers::raise_trap::h895067d64d3f4f72\n  <span class=\"m\">19</span>:        0x100cd6da4 - wasmtime_runtime::traphandlers::raise_user_trap::h85cbe8cba4567dba\n  <span class=\"m\">20</span>:        0x1006b8d24 - &lt;F as wasmtime::func::IntoFunc&lt;T,<span class=\"o\">(</span>wasmtime::func::Caller&lt;T&gt;,<span class=\"o\">)</span>,R&gt;&gt;::into_func::wasm_to_host_shim::h02b614e7c13b5d6c\n  <span class=\"m\">21</span>:        0x10ac36fb8 - &lt;unknown&gt;\nfatal runtime error: failed to initiate panic, error <span class=\"m\">3</span>\nProcess <span class=\"m\">99864</span> stopped\n</code></pre></div>\n<p>The wrapper project is in</p>\n<p><a href=\"https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648\">https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648</a></p>\n</blockquote>",
        "id": 299584366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663600766
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-1251168955\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>hello, I use the rust wrapper wasmtime's async interface <code>instantiate_async</code> and <code>call_async</code>, also called by boost coroutines, but still got the same error when host function returns a Trap. Any suggestions? @alexcrichton @bjorn3 </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Process <span class=\"m\">99864</span> resuming\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, /Users/baixingqiang/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-runtime-0.40.1/src/traphandlers.rs:84:22\nstack backtrace:\n   <span class=\"m\">0</span>:        0x100615a28 - std::backtrace_rs::backtrace::libunwind::trace::h131b1d2b50b7c0eb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:        0x100615a28 - std::backtrace_rs::backtrace::trace_unsynchronized::h9ef9f6d47e4a5c40\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:        0x100615a28 - std::sys_common::backtrace::_print_fmt::hae9bffa833e2d615\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:        0x100615a28 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h53309d90f6cc2c13\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:        0x10065a21c - core::fmt::write::h40b2bc7dd3851337\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:        0x1006088c0 - std::io::Write::write_fmt::hd8ce10e2be917d3e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:        0x10061852c - std::sys_common::backtrace::_print::hb50c5f98c12dd1cb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:        0x10061852c - std::sys_common::backtrace::print::he2182b4a2ed0c13b\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:        0x10061852c - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h09f2eab8666e3c6e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:        0x100618250 - std::panicking::default_hook::h7d3a44c15ae9a1cf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:        0x100618b64 - std::panicking::rust_panic_with_hook::h53cf0f5de8678eab\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:        0x100618a60 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h9aabdb3a8b938975\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:        0x100615f34 - std::sys_common::backtrace::__rust_end_short_backtrace::h7e2931504cf15b78\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:        0x1006187f0 - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:        0x1028f0468 - core::panicking::panic_fmt::h933972a421d72558\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:        0x1028f0388 - core::panicking::panic::h02442e675d4079e6\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:48:5\n  <span class=\"m\">16</span>:        0x100cc7408 - wasmtime_runtime::traphandlers::raise_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::heabf4d6e766b2e45\n  <span class=\"m\">17</span>:        0x100cc771c - wasmtime_runtime::traphandlers::tls::with::h06d21890d7c20a37\n  <span class=\"m\">18</span>:        0x100cd6d88 - wasmtime_runtime::traphandlers::raise_trap::h895067d64d3f4f72\n  <span class=\"m\">19</span>:        0x100cd6da4 - wasmtime_runtime::traphandlers::raise_user_trap::h85cbe8cba4567dba\n  <span class=\"m\">20</span>:        0x1006b8d24 - &lt;F as wasmtime::func::IntoFunc&lt;T,<span class=\"o\">(</span>wasmtime::func::Caller&lt;T&gt;,<span class=\"o\">)</span>,R&gt;&gt;::into_func::wasm_to_host_shim::h02b614e7c13b5d6c\n  <span class=\"m\">21</span>:        0x10ac36fb8 - &lt;unknown&gt;\nfatal runtime error: failed to initiate panic, error <span class=\"m\">3</span>\nProcess <span class=\"m\">99864</span> stopped\n</code></pre></div>\n<p>The wrapper project is in</p>\n<p><a href=\"https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648\">https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648</a></p>\n</blockquote>",
        "id": 299584563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663600829
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-1251168955\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>hello, I use rust wrap the wasmtime's async interface <code>instantiate_async</code> and <code>call_async</code>, also called by boost coroutines, but still got the same error when host function returns a Trap. Any suggestions? @alexcrichton @bjorn3 </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Process <span class=\"m\">99864</span> resuming\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, /Users/baixingqiang/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-runtime-0.40.1/src/traphandlers.rs:84:22\nstack backtrace:\n   <span class=\"m\">0</span>:        0x100615a28 - std::backtrace_rs::backtrace::libunwind::trace::h131b1d2b50b7c0eb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:        0x100615a28 - std::backtrace_rs::backtrace::trace_unsynchronized::h9ef9f6d47e4a5c40\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:        0x100615a28 - std::sys_common::backtrace::_print_fmt::hae9bffa833e2d615\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:        0x100615a28 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h53309d90f6cc2c13\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:        0x10065a21c - core::fmt::write::h40b2bc7dd3851337\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:        0x1006088c0 - std::io::Write::write_fmt::hd8ce10e2be917d3e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:        0x10061852c - std::sys_common::backtrace::_print::hb50c5f98c12dd1cb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:        0x10061852c - std::sys_common::backtrace::print::he2182b4a2ed0c13b\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:        0x10061852c - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h09f2eab8666e3c6e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:        0x100618250 - std::panicking::default_hook::h7d3a44c15ae9a1cf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:        0x100618b64 - std::panicking::rust_panic_with_hook::h53cf0f5de8678eab\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:        0x100618a60 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h9aabdb3a8b938975\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:        0x100615f34 - std::sys_common::backtrace::__rust_end_short_backtrace::h7e2931504cf15b78\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:        0x1006187f0 - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:        0x1028f0468 - core::panicking::panic_fmt::h933972a421d72558\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:        0x1028f0388 - core::panicking::panic::h02442e675d4079e6\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:48:5\n  <span class=\"m\">16</span>:        0x100cc7408 - wasmtime_runtime::traphandlers::raise_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::heabf4d6e766b2e45\n  <span class=\"m\">17</span>:        0x100cc771c - wasmtime_runtime::traphandlers::tls::with::h06d21890d7c20a37\n  <span class=\"m\">18</span>:        0x100cd6d88 - wasmtime_runtime::traphandlers::raise_trap::h895067d64d3f4f72\n  <span class=\"m\">19</span>:        0x100cd6da4 - wasmtime_runtime::traphandlers::raise_user_trap::h85cbe8cba4567dba\n  <span class=\"m\">20</span>:        0x1006b8d24 - &lt;F as wasmtime::func::IntoFunc&lt;T,<span class=\"o\">(</span>wasmtime::func::Caller&lt;T&gt;,<span class=\"o\">)</span>,R&gt;&gt;::into_func::wasm_to_host_shim::h02b614e7c13b5d6c\n  <span class=\"m\">21</span>:        0x10ac36fb8 - &lt;unknown&gt;\nfatal runtime error: failed to initiate panic, error <span class=\"m\">3</span>\nProcess <span class=\"m\">99864</span> stopped\n</code></pre></div>\n<p>The wrapper project is in</p>\n<p><a href=\"https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648\">https://github.com/bxq2011hust/bcos-wasm/blob/d0813e5e5156148acdca55ba286603802a5d01b6/src/lib.rs#L379-L648</a></p>\n</blockquote>",
        "id": 299584764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663600904
    },
    {
        "content": "<p>bxq2011hust edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-1251168955\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>hello, I use rust wrap the wasmtime's async interface <code>instantiate_async</code> and <code>call_async</code>, also called by boost coroutines, but still got the same error when host function returns a Trap. Any suggestions? @alexcrichton @bjorn3 </p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>Process <span class=\"m\">99864</span> resuming\nthread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, /Users/baixingqiang/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmtime-runtime-0.40.1/src/traphandlers.rs:84:22\nstack backtrace:\n   <span class=\"m\">0</span>:        0x100615a28 - std::backtrace_rs::backtrace::libunwind::trace::h131b1d2b50b7c0eb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">1</span>:        0x100615a28 - std::backtrace_rs::backtrace::trace_unsynchronized::h9ef9f6d47e4a5c40\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:        0x100615a28 - std::sys_common::backtrace::_print_fmt::hae9bffa833e2d615\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:        0x100615a28 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h53309d90f6cc2c13\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:        0x10065a21c - core::fmt::write::h40b2bc7dd3851337\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/fmt/mod.rs:1198:17\n   <span class=\"m\">5</span>:        0x1006088c0 - std::io::Write::write_fmt::hd8ce10e2be917d3e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/io/mod.rs:1672:15\n   <span class=\"m\">6</span>:        0x10061852c - std::sys_common::backtrace::_print::hb50c5f98c12dd1cb\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:        0x10061852c - std::sys_common::backtrace::print::he2182b4a2ed0c13b\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:        0x10061852c - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h09f2eab8666e3c6e\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:        0x100618250 - std::panicking::default_hook::h7d3a44c15ae9a1cf\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:        0x100618b64 - std::panicking::rust_panic_with_hook::h53cf0f5de8678eab\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:        0x100618a60 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h9aabdb3a8b938975\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:        0x100615f34 - std::sys_common::backtrace::__rust_end_short_backtrace::h7e2931504cf15b78\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:        0x1006187f0 - rust_begin_unwind\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:        0x1028f0468 - core::panicking::panic_fmt::h933972a421d72558\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:        0x1028f0388 - core::panicking::panic::h02442e675d4079e6\n                               at /rustc/2643b16468fda787470340890212591d8bc832b7/library/core/src/panicking.rs:48:5\n  <span class=\"m\">16</span>:        0x100cc7408 - wasmtime_runtime::traphandlers::raise_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::heabf4d6e766b2e45\n  <span class=\"m\">17</span>:        0x100cc771c - wasmtime_runtime::traphandlers::tls::with::h06d21890d7c20a37\n  <span class=\"m\">18</span>:        0x100cd6d88 - wasmtime_runtime::traphandlers::raise_trap::h895067d64d3f4f72\n  <span class=\"m\">19</span>:        0x100cd6da4 - wasmtime_runtime::traphandlers::raise_user_trap::h85cbe8cba4567dba\n  <span class=\"m\">20</span>:        0x1006b8d24 - &lt;F as wasmtime::func::IntoFunc&lt;T,<span class=\"o\">(</span>wasmtime::func::Caller&lt;T&gt;,<span class=\"o\">)</span>,R&gt;&gt;::into_func::wasm_to_host_shim::h02b614e7c13b5d6c\n  <span class=\"m\">21</span>:        0x10ac36fb8 - &lt;unknown&gt;\nfatal runtime error: failed to initiate panic, error <span class=\"m\">3</span>\nProcess <span class=\"m\">99864</span> stopped\n</code></pre></div>\n<p><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>* thread <span class=\"c1\">#194, stop reason = signal SIGABRT</span>\n    frame <span class=\"c1\">#0: 0x0000000195f96d98 libsystem_kernel.dylib`__pthread_kill + 8</span>\nlibsystem_kernel.dylib<span class=\"sb\">`</span>__pthread_kill:\n-&gt;  0x195f96d98 &lt;+8&gt;:  b.lo   0x195f96db8               <span class=\"p\">;</span> &lt;+40&gt;\n    0x195f96d9c &lt;+12&gt;: pacibsp\n    0x195f96da0 &lt;+16&gt;: stp    x29, x30, <span class=\"o\">[</span>sp, <span class=\"c1\">#-0x10]!</span>\n    0x195f96da4 &lt;+20&gt;: mov    x29, sp\nTarget <span class=\"m\">0</span>: <span class=\"o\">(</span>fisco-bcos<span class=\"o\">)</span> stopped.\n<span class=\"o\">(</span>lldb<span class=\"o\">)</span> bt\n* thread <span class=\"c1\">#194, stop reason = signal SIGABRT</span>\n  * frame <span class=\"c1\">#0: 0x0000000195f96d98 libsystem_kernel.dylib`__pthread_kill + 8</span>\n    frame <span class=\"c1\">#1: 0x0000000195fcbee0 libsystem_pthread.dylib`pthread_kill + 288</span>\n    frame <span class=\"c1\">#2: 0x0000000195f06340 libsystem_c.dylib`abort + 168</span>\n    frame <span class=\"c1\">#3: 0x00000001006214c8 fisco-bcos`std::sys::unix::abort_internal::h8751881e49172a67 at mod.rs:293:14 [opt]</span>\n    frame <span class=\"c1\">#4: 0x0000000100618e60 fisco-bcos`rust_panic at panicking.rs:748:5 [opt]</span>\n    frame <span class=\"c1\">#5: 0x0000000100618c1c fisco-bcos`std::panicking::rust_panic_with_hook::h53cf0f5de8678eab at panicking.rs:716:5 [opt]</span>\n    frame <span class=\"c1\">#6: 0x0000000100618a60 fisco-bcos`std::panicking::begin_panic_handler::_$u7b$$u7b$closure$u7d$$u7d$::h9aabdb3a8b938975 at panicking.rs:586:13 [opt]</span>\n    frame <span class=\"c1\">#7: 0x0000000100615f34 fisco-bcos`std::sys_common::backtrace::__rust_end_short_backtrace::h7e2931504cf15b78 at backtrace.rs:138:18 [opt]</span>\n    frame <span class=\"c1\">#8: 0x00000001006187f0 fisco-bcos`rust_begin_unwind at panicking.rs:584:5 [opt]</span>\n    frame <span class=\"c1\">#9: 0x00000001028f0468 fisco-bcos`core::panicking::panic_fmt::h933972a421d72558 at panicking.rs:142:14 [opt]</span>\n    frame <span class=\"c1\">#10: 0x00000001028f0388 fisco-bcos`core::panicking::panic::h02442e675d4079e6 at panicking.rs:48:5 [opt]</span>\n    frame <span class=\"c1\">#11: 0x0000000100cc7408 fisco-bcos`wasmtime_runtime::traphandlers::raise_trap::_$u7b$$u7b$closure$u7d$$u7d$::heabf4d6e766b2e45 + 48</span>\n    frame <span class=\"c1\">#12: 0x0000000100cc771c fisco-bcos`wasmtime_runtime::traphandlers::tls::with::h06d21890d7c20a37 + 44</span>\n    frame <span class=\"c1\">#13: 0x0000000100cd6d88 fisco-bcos`wasmtime_runtime::traphandlers::raise_trap::h895067d64d3f4f72 + 28</span>\n    frame <span class=\"c1\">#14: 0x0000000100cd6da4 fisco-bcos`wasmtime_runtime::traphandlers::raise_user_trap::h85cbe8cba4567dba + 28</span>\n    frame <span class=\"c1\">#15: 0x00000001006b8d24 fisco-bcos`_$LT$F$u20$as$u20$wasmtime..func..IntoFunc$LT$T$C$$LP$wasmtime..func..Caller$LT$T$GT$$C$$RP$$C$R$GT$$GT$::into_func::wasm_to_host_shim::h02b614e7c13b5d6c + 200</span>\n    frame <span class=\"c1\">#16: 0x000000010ac36fb8</span>\n    frame <span class=\"c1\">#17: 0x000000010ac24ae4</span>\n    frame <span class=\"c1\">#18: 0x000000010ac25190</span>\n    frame <span class=\"c1\">#19: 0x000000010ac109c8</span>\n    frame <span class=\"c1\">#20: 0x000000010ac1ccb8</span>\n    frame <span class=\"c1\">#21: 0x000000010ac05e4c</span>\n    frame <span class=\"c1\">#22: 0x000000010ac0e73c</span>\n    frame <span class=\"c1\">#23: 0x000000010ac0a1bc</span>\n    frame <span class=\"c1\">#24: 0x000000010ac0e2a8</span>\n    frame <span class=\"c1\">#25: 0x0000000100697ca4 fisco-bcos`wasmtime_runtime::traphandlers::catch_traps::call_closure::h0b42f9214e97f261 + 56</span>\n    frame <span class=\"c1\">#26: 0x0000000100ce2f7c fisco-bcos`wasmtime_setjmp + 100</span>\n    frame <span class=\"c1\">#27: 0x00000001006c3978 fisco-bcos`wasmtime_runtime::traphandlers::_$LT$impl$u20$wasmtime_runtime..traphandlers..call_thread_state..CallThreadState$GT$::with::hdb0d5a000b4f1065 + 80</span>\n    frame <span class=\"c1\">#28: 0x0000000100697da8 fisco-bcos`wasmtime_runtime::traphandlers::catch_traps::h2ccbf2e4c0be9210 + 92</span>\n    frame <span class=\"c1\">#29: 0x00000001006ba290 fisco-bcos`wasmtime::func::invoke_wasm_and_catch_traps::h4ef3e159fa04bdc9 + 204</span>\n    frame <span class=\"c1\">#30: 0x00000001006c515c fisco-bcos`_$LT$alloc..boxed..Box$LT$F$C$A$GT$$u20$as$u20$core..ops..function..FnOnce$LT$Args$GT$$GT$::call_once::h2e521dd943b096f2 + 212</span>\n    frame <span class=\"c1\">#31: 0x000000010069cea4 fisco-bcos`wasmtime_fiber::unix::fiber_start::h3af38fcf9bd94bf1 + 76</span>\n    frame <span class=\"c1\">#32: 0x0000000100ce325c fisco-bcos`wasmtime_fiber_start + 12</span>\n    frame <span class=\"c1\">#33: 0x0000000100772ef0 fisco-bcos`wasmtime_fiber::Fiber$LT$Resume$C$Yield$C$Return$GT$::resume::he6bf02490fa51ec1 + 68</span>\n    frame <span class=\"c1\">#34: 0x00000001007a8e98 fisco-bcos`_$LT$wasmtime..store..$LT$impl$u20$wasmtime..store..context..StoreContextMut$LT$T$GT$$GT$..on_fiber..$u7b$$u7b$closure$u7d$$u7d$..FiberFuture$u20$as$u20$core..future..future..Future$GT$::poll::h77c36198dd2a3df3 + 40</span>\n    frame <span class=\"c1\">#35: 0x00000001006a06fc fisco-bcos`_$LT$core..future..from_generator..GenFuture$LT$T$GT$$u20$as$u20$core..future..future..Future$GT$::poll::ha175e17d428274ec + 412</span>\n    frame <span class=\"c1\">#36: 0x00000001006aaf70 fisco-bcos`std::thread::local::LocalKey$LT$T$GT$::with::h02c9f49018aa9f14 + 88</span>\n    frame <span class=\"c1\">#37: 0x00000001006a0b28 fisco-bcos`_$LT$core..future..from_generator..GenFuture$LT$T$GT$$u20$as$u20$core..future..future..Future$GT$::poll::hcac783e9c673b7cf + 476</span>\n    frame <span class=\"c1\">#38: 0x00000001006a7828 fisco-bcos`async_io::driver::block_on::h60ffcea78eed64fa + 336</span>\n    frame <span class=\"c1\">#39: 0x00000001006b5098 fisco-bcos`async_global_executor::executor::block_on::h26c24b6e3f486f9b + 200</span>\n    frame <span class=\"c1\">#40: 0x00000001006abddc fisco-bcos`std::thread::local::LocalKey$LT$T$GT$::with::hb248c29ad05b3c99 + 228</span>\n    frame <span class=\"c1\">#41: 0x00000001006b0904 fisco-bcos`async_std::task::builder::Builder::blocking::h8b76b48f833c2dae + 744</span>\n    frame <span class=\"c1\">#42: 0x00000001006922f0 fisco-bcos`_$LT$bcos_wasm..BcosWasm$u20$as$u20$evmc_vm..EvmcVm$GT$::execute::h4262a19fd4d3c41b + 5876</span>\n    frame <span class=\"c1\">#43: 0x00000001006c4558 fisco-bcos`std::panicking::try::h9775df534a3e806f + 316</span>\n    frame <span class=\"c1\">#44: 0x0000000100692cfc fisco-bcos`bcos_wasm::__evmc_execute::ha83c4d76d2fe28b0 + 220</span>\n    frame <span class=\"c1\">#45: 0x000000010050e34c fisco-bcos`bcos::executor::VMInstance::exec(this=&lt;unavaila</span>\n<span class=\"o\">[</span>message truncated<span class=\"o\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 299584993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663600974
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-1251308315\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>@bxq2011hust if you're using boost coroutines then this is the same issue as before I believe. Wasmtime has a TLS variable which must be saved/restored across coroutine switches which I suspect that boost does not have support for. Wasmtime, at this time, does not support being called from an external coroutine library.</p>\n</blockquote>",
        "id": 299608571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663607569
    },
    {
        "content": "<p>bxq2011hust <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571#issuecomment-1251890895\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<blockquote>\n<p>@bxq2011hust if you're using boost coroutines then this is the same issue as before I believe. Wasmtime has a TLS variable which must be saved/restored across coroutine switches which I suspect that boost does not have support for. Wasmtime, at this time, does not support being called from an external coroutine library.</p>\n</blockquote>\n<p>ok, got it, thanks</p>\n</blockquote>",
        "id": 299689907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663654792
    },
    {
        "content": "<p>bxq2011hust closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3571\">issue #3571</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>upload Wasm file here</p>\n<h3>Steps to Reproduce</h3>\n<p>first, call a wasm function<br>\nsecond, in the called wasm function, call host function, host function call a function in another wasm instance, then calll a host function which return a trap to interrupt the execution and return result to first wasm call.<br>\nthird, the second wasm call maybe in the <strong>same thread</strong> as the first wasm call, because we use boost coroutine</p>\n<h3>Expected Results</h3>\n<p>What do you expect to happen?</p>\n<p>just return the trap with user defined message</p>\n<h3>Actual Results</h3>\n<p><code>thread '&lt;unnamed&gt;' panicked at 'called </code>Option::unwrap()<code> on a </code>None<code> value', crates/runtime/src/traphandlers.rs:84:27</code></p>\n<p>and wasmtime return a trap with <code>called </code>Option::unwrap()<code> on a </code>None<code> value</code></p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v0.31.0</p>\n<p>Operating system: Ubuntu 20.04</p>\n<p>Architecture:  x86_64</p>\n<h3>Extra Info</h3>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>thread <span class=\"s1\">'&lt;unnamed&gt;'</span> panicked at <span class=\"s1\">'called `Option::unwrap()` on a `None` value'</span>, crates/runtime/src/traphandlers.rs:84:27\nstack backtrace:\n   <span class=\"m\">0</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::libunwind::trace::hfa838fc631229987\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/libunwind.rs:90:5\n   <span class=\"m\">1</span>:     0x55f8b0151850 - std::backtrace_rs::backtrace::trace_unsynchronized::h93a23e36ec026219\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x55f8b0151850 - std::sys_common::backtrace::_print_fmt::hba56c7f796a4152f\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:67:5\n   <span class=\"m\">3</span>:     0x55f8b0151850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::h214637f1e26310e1\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:46:22\n   <span class=\"m\">4</span>:     0x55f8b01be22c - core::fmt::write::h7aa6cd0067dca82a\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/fmt/mod.rs:1110:17\n   <span class=\"m\">5</span>:     0x55f8b01431e5 - std::io::Write::write_fmt::heb07fc0616bbd06d\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/io/mod.rs:1588:15\n   <span class=\"m\">6</span>:     0x55f8b01556db - std::sys_common::backtrace::_print::h2c2441c37e894fb5\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:49:5\n   <span class=\"m\">7</span>:     0x55f8b01556db - std::sys_common::backtrace::print::h4fb679ac439362ea\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:36:9\n   <span class=\"m\">8</span>:     0x55f8b01556db - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h56bbadec2356e5d2\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:208:50\n   <span class=\"m\">9</span>:     0x55f8b01551b1 - std::panicking::default_hook::hb25822b45f6fdc4e\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:225:9\n  <span class=\"m\">10</span>:     0x55f8b0155f04 - std::panicking::rust_panic_with_hook::h4da5578e7277d2d4\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:622:17\n  <span class=\"m\">11</span>:     0x55f8b01559a7 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h003783ddb3cba4e8\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:517:13\n  <span class=\"m\">12</span>:     0x55f8b0151d2c - std::sys_common::backtrace::__rust_end_short_backtrace::hd138d2032731ed21\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/sys_common/backtrace.rs:141:18\n  <span class=\"m\">13</span>:     0x55f8b0155939 - rust_begin_unwind\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/std/src/panicking.rs:515:5\n  <span class=\"m\">14</span>:     0x55f8af240cd1 - core::panicking::panic_fmt::hbe99dddd3092ba3c\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:92:14\n  <span class=\"m\">15</span>:     0x55f8af240c1d - core::panicking::panic::h3de4db67bd397eb3\n                               at /rustc/a85f584aebd9b08314bf30b9adc17b4a752143e5/library/core/src/panicking.rs:50:5\n  <span class=\"m\">16</span>:     0x55f8b07c98d7 - wasmtime_runtime::traphandlers::raise_user_trap::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h379a9d8be1f58dd1\n  <span class=\"m\">17</span>:     0x55f8b07c9bec - wasmtime_runtime::traphandlers::tls::with::he8d24e4beebeef49\n  <span class=\"m\">18</span>:     0x55f8b07c7f96 - wasmtime_runtime::traphandlers::raise_user_trap::h551a36e7a2d8cd18\n  <span class=\"m\">19</span>:     0x55f8b0281638 - wasmtime::trampoline::func::stub_fn::hb6d8bd05900c5561\n  <span class=\"m\">20</span>:     0x7fd2140a8033 - &lt;unknown&gt;\n  <span class=\"m\">21</span>:     0x7fd2140f1ddd - &lt;unknown&gt;\n  <span class=\"m\">22</span>:     0x7fd2140e6938 - &lt;unknown&gt;\n  <span class=\"m\">23</span>:     0x7fd2140eed0a - &lt;unknown&gt;\n  <span class=\"m\">24</span>:     0x7fd2140e26b3 - &lt;unknown&gt;\n  <span class=\"m\">25</span>:     0x7fd2140ee293 - &lt;unknown&gt;\n  <span class=\"m\">26</span>:     0x7fd2140a2006 - &lt;unknown&gt;\n  <span class=\"m\">27</span>:     0x55f8b07de82c - wasmtime_setjmp\n  <span class=\"m\">28</span>:     0x55f8b027aef6 - wasmtime_runtime::traphandlers::catch_traps::hf8385270d50bd059\n  <span class=\"m\">29</span>:     0x55f8b08c93bb - wasmtime::func::Func::call::hfad085cecac9e549\n  <span class=\"m\">30</span>:     0x55f8b0322551 - wasm_func_call\n  <span class=\"m\">31</span>:     0x55f8b0269fd1 - _ZN4hera11WasmcEngine7executeERN4evmc11HostContextESt17basic_string_viewIhSt11char_traitsIhEES7_RK12evmc_messageb\n</code></pre></div>\n<p>Maybe call two wasm instance use one thread is not permitted? or there is a problem use trap to interrupt execution?<br>\n</p>\n</blockquote>",
        "id": 299690047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1663654906
    }
]