[
    {
        "content": "<p>jeffcharles opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531\">PR #7531</a> from <code>jeffcharles:winch-materialize-latent-locals</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nWinch has a bug where when setting or teeing a local, and that local is in the value stack but not at the top of the value stack, the local on the stack will pop with an incorrect value because the value of the local is determined lazily (that is, when it's needed). To address that, we can detect if the value stack contains a reference to the local that is not the top-most element, and spill registers and locals into memory if it does, which will materialize the value in the local before the value of the local is changed.</p>\n</blockquote>",
        "id": 401830533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699903351
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531\">PR #7531</a>.</p>",
        "id": 401830535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699903351
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531\">PR #7531</a>.</p>",
        "id": 401830536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699903351
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#pullrequestreview-1728085278\">PR review</a>.</p>",
        "id": 401830629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699903388
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#discussion_r1391584299\">PR review comment</a>:</p>\n<blockquote>\n<p>I added this because it made some of my debugging a little easier and all the address implementations implement <code>Debug</code>.</p>\n</blockquote>",
        "id": 401830630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699903388
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#pullrequestreview-1728090761\">PR review</a>.</p>",
        "id": 401831113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699903540
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#discussion_r1391587394\">PR review comment</a>:</p>\n<blockquote>\n<p>I looked at using <code>peekn</code> but the iterator it returns is in bottom-most to top-most order and the return type is not a trait that allows me to reverse the order of the entries so I can ignore the top-most element of the stack.</p>\n</blockquote>",
        "id": 401831114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699903540
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#pullrequestreview-1728109127\">PR review</a>.</p>",
        "id": 401832500,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699904158
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#pullrequestreview-1728109127\">PR review</a>.</p>",
        "id": 401832501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699904159
    },
    {
        "content": "<p>saulecabrera created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#discussion_r1391599810\">PR review comment</a>:</p>\n<blockquote>\n<p>Some thoughts on this snippet:</p>\n<ul>\n<li>I was hoping that we would be able to avoid iterating over all the entries in the stack every time we do this check, as it could get quite expensive plus we really don't have to: the stack must hold the invariant that memory entries precede locals and registers, in that sense, if we're able to track down the index of the last memory entry, we can optimize this check so that it only accounts for entries beyond such index. </li>\n<li>Can we make this a method on <code>Stack</code>? Something like <code>Stack::has_local(index)</code>?</li>\n</ul>\n</blockquote>",
        "id": 401832503,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699904159
    },
    {
        "content": "<p>jeffcharles submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#pullrequestreview-1728290077\">PR review</a>.</p>",
        "id": 401845774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699909779
    },
    {
        "content": "<p>jeffcharles created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#discussion_r1391709462\">PR review comment</a>:</p>\n<blockquote>\n<p>We talked offline.</p>\n<p>We can use an <code>iter().rev().take_while(|v| /* v is not mem or a const */)</code> approach to avoid iterating over the entire stack. And the stack method I'm adding will be named in such a way that it indicates it does not check the top element. This is because we can safely avoid spilling if it's only the top element that references the local since we're going to pop the top element immediately after performing the check to see if the stack contains the local.</p>\n</blockquote>",
        "id": 401845775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699909779
    },
    {
        "content": "<p>jeffcharles edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#discussion_r1391709462\">PR review comment</a>.</p>",
        "id": 401846018,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699909880
    },
    {
        "content": "<p>jeffcharles updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531\">PR #7531</a>.</p>",
        "id": 401848622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699911130
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/saulecabrera\">saulecabrera</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531\">PR #7531</a>.</p>",
        "id": 401848731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699911199
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531#pullrequestreview-1729557936\">PR review</a>.</p>",
        "id": 401968939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699962400
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7531\">PR #7531</a>.</p>",
        "id": 401976358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699965009
    }
]