[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a> from <code>single-inst-module</code> to <code>main</code>:</p>\n<blockquote>\n<p>As proposed by @cfallin in #3251, this change adds a way to generate a<br>\nWasm module for a single instruction. It captures the necessary<br>\nparameter and result types so that fuzzing can not only choose which<br>\ninstruction to check but also generate values to pass to the<br>\ninstruction. Not all instructions are available yet, but a significant<br>\nportion of scalar instructions are implemented in this change.</p>\n<p>This does not wire the generator up to any fuzz targets.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 288849217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657219536
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032029573\">PR review</a>.</p>",
        "id": 288850120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657219982
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916188369\">PR review comment</a>:</p>\n<blockquote>\n<p>You can use a raw string here to avoid the <code>\\n</code> and put things on multiple lines.</p>\n</blockquote>",
        "id": 288850121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657219982
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032029573\">PR review</a>.</p>",
        "id": 288850122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657219982
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032068464\">PR review</a>.</p>",
        "id": 288858001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657223972
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916220527\">PR review comment</a>:</p>\n<blockquote>\n<p>I like this set of macros!</p>\n<p>I notice none of the <code>rust_ty</code> macro arguments are used currently. As an alternative, what about a helper macro like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">wasm_type</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">ValType</span>::<span class=\"n\">I32</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">f64</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">ValType</span>::<span class=\"n\">F64</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Then use Rust types in all macro arguments, and convert them using <code>wasm_type!</code> only when constructing the <code>parameters</code> and <code>results</code> arrays. That makes the macro invocations less verbose and also means you can enhance the macros to make use of the Rust types later. You could define <code>convert!</code> and <code>compare!</code> in one line each at that point.</p>\n<p>You could also collapse all the current macros into one like <code>inst!(F64Sub (f64, f64) -&gt; (f64))</code>:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"fm\">macro_rules!</span><span class=\"w\"> </span><span class=\"n\">inst</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"cp\">$inst</span>:<span class=\"nc\">ident</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"cp\">$($param_ty</span>:<span class=\"nc\">ident</span><span class=\"p\">),</span><span class=\"o\">*</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"p\">(</span><span class=\"cp\">$($ret_ty</span>:<span class=\"nc\">ident</span><span class=\"p\">),</span><span class=\"o\">*</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">SingleInstModule</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">instruction</span>: <span class=\"cp\">$inst</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">parameters</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"cp\">$(</span><span class=\"n\">wasm_type</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"cp\">$param_ty</span><span class=\"p\">)),</span><span class=\"o\">*</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">results</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"cp\">$(</span><span class=\"n\">wasm_type</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"cp\">$ret_ty</span><span class=\"p\">)),</span><span class=\"o\">*</span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 288858002,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657223972
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032068464\">PR review</a>.</p>",
        "id": 288858003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657223972
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916215443\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it might be an improvement to avoid the use of <code>once_cell</code> in this module by making <code>parameters</code> and <code>results</code> be <code>&amp;'a [ValType]</code> instead. (Or drop the <code>'a</code> lifetime parameter and just use <code>'static</code>.) The macros below would then use <code>&amp;[...]</code> instead of <code>vec![...]</code>, and the instructions would be declared like:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">static</span><span class=\"w\"> </span><span class=\"n\">INSTRUCTIONS</span>: <span class=\"kp\">&amp;</span><span class=\"p\">[</span><span class=\"n\">SingleInstModule</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">unary</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">I32Clz</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n<span class=\"p\">];</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 288858004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657223972
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916224495\">PR review comment</a>:</p>\n<blockquote>\n<p>Does the module need to be cloned, or can this be implemented for <code>&amp;SingleInstModule&lt;'_&gt;</code> instead?</p>\n</blockquote>",
        "id": 288858005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657223972
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916263484\">PR review comment</a>:</p>\n<blockquote>\n<p>Good suggestion! Done.</p>\n</blockquote>",
        "id": 288862628,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657226389
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032137906\">PR review</a>.</p>",
        "id": 288862630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657226389
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a> from <code>single-inst-module</code> to <code>main</code>.</p>",
        "id": 288863925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227009
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032152805\">PR review</a>.</p>",
        "id": 288864516,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227307
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916273932\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, thanks for the comment; I cleaned things up a bit but not all the way to the final <code>inst!</code> suggestion. In the project this came from, there was more involved and so this was an exercise in \"paring down\" the original code. I'll leave it as it is in 28f2636 until I see a bit more clearly how this will be used in the actual fuzz target, since that might change the shape of this again.</p>\n</blockquote>",
        "id": 288864517,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227307
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a> from <code>single-inst-module</code> to <code>main</code>.</p>",
        "id": 288864668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227383
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a> as ready for review.</p>",
        "id": 288864687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227392
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916273932\">PR review comment</a>.</p>",
        "id": 288864714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227410
    },
    {
        "content": "<p>abrown has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a>.</p>",
        "id": 288864727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227417
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916277215\">PR review comment</a>:</p>\n<blockquote>\n<p>One nice test to add here as well might be iterating over <code>super::INSTRUCTIONS</code> and verifying that everything which pops out is a valid module.</p>\n</blockquote>",
        "id": 288865081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227604
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032157444\">PR review</a>.</p>",
        "id": 288865082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657227604
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032165375\">PR review</a>.</p>",
        "id": 288867564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657228844
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032165375\">PR review</a>.</p>",
        "id": 288867565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657228844
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916287356\">PR review comment</a>:</p>\n<blockquote>\n<p>This hardly matters but I'll mention it anyway: <code>locals</code> doesn't need to be a <code>Vec</code>. Since Rust 1.53 there's an <code>impl&lt;T, const N: usize&gt; IntoIterator for [T; N]</code>, so you can just call <code>Function::new([])</code>.</p>\n</blockquote>",
        "id": 288867566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657228844
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916282749\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess the changes to <code>Cargo.lock</code> should be removed too.</p>\n</blockquote>",
        "id": 288867567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657228844
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032184085\">PR review</a>.</p>",
        "id": 288868568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657229438
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#discussion_r916296091\">PR review comment</a>:</p>\n<blockquote>\n<p>Hm, interesting that this didn't go away....</p>\n</blockquote>",
        "id": 288868569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657229438
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a> from <code>single-inst-module</code> to <code>main</code>.</p>",
        "id": 288868613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657229467
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a> from <code>single-inst-module</code> to <code>main</code>.</p>",
        "id": 288868738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657229527
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409#pullrequestreview-1032207123\">PR review</a>.</p>",
        "id": 288871807,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657231313
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4409\">PR #4409</a>.</p>",
        "id": 288876151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657234260
    }
]