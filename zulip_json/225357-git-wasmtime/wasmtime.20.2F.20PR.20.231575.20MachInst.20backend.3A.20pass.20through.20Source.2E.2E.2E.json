[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a> from <code>test-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<p>This change adds SourceLoc information per instruction in a <code>VCode&lt;Inst&gt;</code><br>\ncontainer, and keeps this information up-to-date across register allocation<br>\nand branch reordering. The information is initially collected during<br>\ninstruction lowering, eventually collected on the MachSection, and finally<br>\nprovided to the environment that wraps the codegen crate for wasmtime.</p>\n<p>This PR is based on top of #1570 and #1571 (part of a series fixing tests).</p>\n<p>This PR depends on wasmtime/regalloc.rs#50, a change to the register<br>\nallocator to provide instruction-granularity info on the rewritten<br>\ninstruction stream (rather than block-granularity).</p>\n<p>With the prior PRs applied as well, quite a few more unit tests pass;<br>\nthe exclusion list in #1526 should be updated if this PR lands first.</p>\n</blockquote>",
        "id": 194880536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587519432
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\" title=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\" title=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a>.</p>",
        "id": 194880537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587519432
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\" title=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\" title=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a>.</p>",
        "id": 194880538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587519432
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a> from <code>test-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<p>This change adds SourceLoc information per instruction in a <code>VCode&lt;Inst&gt;</code><br>\ncontainer, and keeps this information up-to-date across register allocation<br>\nand branch reordering. The information is initially collected during<br>\ninstruction lowering, eventually collected on the MachSection, and finally<br>\nprovided to the environment that wraps the codegen crate for wasmtime.</p>\n<p>This PR is based on top of #1570 and #1571 (part of a series fixing tests).</p>\n<p>This PR depends on bytecodealliance/regalloc.rs#50, a change to the register<br>\nallocator to provide instruction-granularity info on the rewritten<br>\ninstruction stream (rather than block-granularity).</p>\n<p>With the prior PRs applied as well, quite a few more unit tests pass;<br>\nthe exclusion list in #1526 should be updated if this PR lands first.</p>\n</blockquote>",
        "id": 194880542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587519455
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a> from <code>test-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<p>This change adds SourceLoc information per instruction in a <code>VCode&lt;Inst&gt;</code><br>\ncontainer, and keeps this information up-to-date across register allocation<br>\nand branch reordering. The information is initially collected during<br>\ninstruction lowering, eventually collected on the MachSection, and finally<br>\nprovided to the environment that wraps the codegen crate for wasmtime.</p>\n<p>This PR is based on top of #1570 and #1571 (part of a series fixing tests).</p>\n<p>This PR depends on bytecodealliance/regalloc.rs#50, a change to the register<br>\nallocator to provide instruction-granularity info on the rewritten<br>\ninstruction stream (rather than block-granularity). I have not yet<br>\nupdated <code>cranelift/codegen/Cargo.toml</code>; we will need to land that PR<br>\nand do a release first.</p>\n<p>With the prior PRs applied as well, quite a few more unit tests pass;<br>\nthe exclusion list in #1526 should be updated if this PR lands first.</p>\n</blockquote>",
        "id": 194880593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587519509
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a> from <code>test-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<p>This change adds SourceLoc information per instruction in a <code>VCode&lt;Inst&gt;</code><br>\ncontainer, and keeps this information up-to-date across register allocation<br>\nand branch reordering. The information is initially collected during<br>\ninstruction lowering, eventually collected on the MachSection, and finally<br>\nprovided to the environment that wraps the codegen crate for wasmtime.</p>\n<p>This PR is based on top of #1570 and #1571 (part of a series fixing tests).</p>\n<p>This PR depends on bytecodealliance/regalloc.rs#50, a change to the register<br>\nallocator to provide instruction-granularity info on the rewritten<br>\ninstruction stream (rather than block-granularity). I have not yet<br>\nupdated <code>cranelift/codegen/Cargo.toml</code>; we will need to land that PR<br>\nand do a release first.</p>\n<p>With the prior PRs applied as well, quite a few more unit tests pass;<br>\nthe exclusion list in #1526 should be updated if this PR lands first.</p>\n<p>Addresses part of #1523 (debug info), though debug info consists of<br>\nmore than just source-location mapping.</p>\n</blockquote>",
        "id": 194880615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587519595
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-397984665\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-397984665\">PR Review</a>.</p>",
        "id": 194903906,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587545999
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-397984665\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-397984665\">PR Review</a>.</p>",
        "id": 194903907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587545999
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412801946\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412801946\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Every function is compiled separately without knowledge of the final location in memory, so this can never be absolute. Did you mean relative tot the start of the function?</p>\n</blockquote>",
        "id": 194903909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587545999
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412802338\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412802338\">PR Review Comment</a>:</p>\n<blockquote>\n<p>There is already a SourceLoc reserved for when the source loc is unknown: SourceLoc::default().</p>\n</blockquote>",
        "id": 194903910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587545999
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398157665\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398157665\">PR Review</a>.</p>",
        "id": 194930714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398157665\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398157665\">PR Review</a>.</p>",
        "id": 194930715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412954692\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412954692\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: current</p>\n</blockquote>",
        "id": 194930716,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412981285\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412981285\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: to remove one extra level of indent, use <code>expect</code> on the result of take.</p>\n</blockquote>",
        "id": 194930718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412969258\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412969258\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the copy be avoided here? (Either by letting the one client iterate on the sections, or return a Map iterator with <code>self.sections.iter().map(|section| &amp;section.srclocs)</code> or something like this)</p>\n<p>I think this requires sorting the srclocs before we actually sort them, but this is doable.</p>\n</blockquote>",
        "id": 194930719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412957901\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412957901\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Agreed, it'd be nice to reuse it in lieu of all the <code>Option&lt;SourceLoc&gt;</code> in this patch.</p>\n</blockquote>",
        "id": 194930720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412983613\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412983613\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could <code>final_srclocs</code> (and thus <code>srclocs</code>) store range of instructions mapping to a single srcloc, instead? (Just the start instruction should be enough, since the next entry's start instruction would be next to the previous' entry end)</p>\n</blockquote>",
        "id": 194930721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412956785\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412956785\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: double space between <code>the</code> and <code>region</code></p>\n</blockquote>",
        "id": 194930722,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412985557\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r412985557\">PR Review Comment</a>:</p>\n<blockquote>\n<p>could you debug_assert that <code>end &gt;= start</code>, for sanity?</p>\n</blockquote>",
        "id": 194930723,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587562480
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398672879\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398672879\">PR Review</a>.</p>",
        "id": 195005842,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600278
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413414785\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413414785\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I thought about this briefly, but it makes the rearranging after regalloc somewhat more complicated: we have to reconstitute the original per-instruction <code>srcloc</code>s because the block reordering may have split one of the same-location extents in two. I'd rather avoid that complexity (and branchiness), at the cost of slightly more memory... (but perhaps there's another way I've missed).</p>\n</blockquote>",
        "id": 195005843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600279
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a> from <code>test-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<p>This change adds SourceLoc information per instruction in a <code>VCode&lt;Inst&gt;</code><br>\ncontainer, and keeps this information up-to-date across register allocation<br>\nand branch reordering. The information is initially collected during<br>\ninstruction lowering, eventually collected on the MachSection, and finally<br>\nprovided to the environment that wraps the codegen crate for wasmtime.</p>\n<p>This PR is based on top of #1570 and #1571 (part of a series fixing tests).</p>\n<p>This PR depends on bytecodealliance/regalloc.rs#50, a change to the register<br>\nallocator to provide instruction-granularity info on the rewritten<br>\ninstruction stream (rather than block-granularity). I have not yet<br>\nupdated <code>cranelift/codegen/Cargo.toml</code>; we will need to land that PR<br>\nand do a release first.</p>\n<p>With the prior PRs applied as well, quite a few more unit tests pass;<br>\nthe exclusion list in #1526 should be updated if this PR lands first.</p>\n<p>Addresses part of #1523 (debug info), though debug info consists of<br>\nmore than just source-location mapping.</p>\n</blockquote>",
        "id": 195005894,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600320
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398673194\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398673194\">PR Review</a>.</p>",
        "id": 195005904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600330
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413415126\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413415126\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yup, fixed, thanks!</p>\n</blockquote>",
        "id": 195005905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600330
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398673421\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398673421\">PR Review</a>.</p>",
        "id": 195005978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600370
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413415383\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413415383\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, yes, this is much nicer (as well as the corresponding change to not-present indices on the regalloc side) -- done.</p>\n</blockquote>",
        "id": 195005980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600370
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398674059\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-398674059\">PR Review</a>.</p>",
        "id": 195006072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600481
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413416042\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r413416042\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yup, done; wrote a little custom iterator. (I might have been able to get it to work returning an <code>impl Iterator&lt;Item = &amp;'a MachSrcLoc&gt;</code> but getting the types to align for the zero-sections case and otherwise is tricky, since impl-returns must match on all returning paths...)</p>\n</blockquote>",
        "id": 195006074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587600481
    },
    {
        "content": "<p><strong>bnjbvr</strong> requested <a href=\"https://github.com/bnjbvr\" title=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\" title=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a>.</p>",
        "id": 195036478,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587634053
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-399981126\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-399981126\">PR Review</a>.</p>",
        "id": 195192833,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587737413
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a> from <code>test-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<p>This change adds SourceLoc information per instruction in a <code>VCode&lt;Inst&gt;</code><br>\ncontainer, and keeps this information up-to-date across register allocation<br>\nand branch reordering. The information is initially collected during<br>\ninstruction lowering, eventually collected on the MachSection, and finally<br>\nprovided to the environment that wraps the codegen crate for wasmtime.</p>\n<p>This PR is based on top of #1570 and #1571 (part of a series fixing tests).</p>\n<p>This PR depends on bytecodealliance/regalloc.rs#50, a change to the register<br>\nallocator to provide instruction-granularity info on the rewritten<br>\ninstruction stream (rather than block-granularity). I have not yet<br>\nupdated <code>cranelift/codegen/Cargo.toml</code>; we will need to land that PR<br>\nand do a release first.</p>\n<p>With the prior PRs applied as well, quite a few more unit tests pass;<br>\nthe exclusion list in #1526 should be updated if this PR lands first.</p>\n<p>Addresses part of #1523 (debug info), though debug info consists of<br>\nmore than just source-location mapping.</p>\n</blockquote>",
        "id": 195238431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587758853
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a> from <code>test-fixes</code> to <code>master</code>:</p>\n<blockquote>\n<p>This change adds SourceLoc information per instruction in a <code>VCode&lt;Inst&gt;</code><br>\ncontainer, and keeps this information up-to-date across register allocation<br>\nand branch reordering. The information is initially collected during<br>\ninstruction lowering, eventually collected on the MachSection, and finally<br>\nprovided to the environment that wraps the codegen crate for wasmtime.</p>\n<p>This PR is based on top of #1570 and #1571 (part of a series fixing tests).</p>\n<p>This PR depends on bytecodealliance/regalloc.rs#50, a change to the register<br>\nallocator to provide instruction-granularity info on the rewritten<br>\ninstruction stream (rather than block-granularity). I have not yet<br>\nupdated <code>cranelift/codegen/Cargo.toml</code>; we will need to land that PR<br>\nand do a release first.</p>\n<p>With the prior PRs applied as well, quite a few more unit tests pass;<br>\nthe exclusion list in #1526 should be updated if this PR lands first.</p>\n<p>Addresses part of #1523 (debug info), though debug info consists of<br>\nmore than just source-location mapping.</p>\n</blockquote>",
        "id": 195239623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587759500
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575\">PR #1575</a>.</p>",
        "id": 195251702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587767157
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-400385205\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-400385205\">PR Review</a>.</p>",
        "id": 195281105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587814531
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r415044360\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r415044360\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I actually want to know about all instructions, not just those with a non-default srcloc.</p>\n</blockquote>",
        "id": 195281106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587814531
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-402911975\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#pullrequestreview-402911975\">PR Review</a>.</p>",
        "id": 195748046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588183446
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r417509624\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1575#discussion_r417509624\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Thanks for pointing this out -- you're right! New PR here: #1632</p>\n</blockquote>",
        "id": 195748047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588183446
    }
]