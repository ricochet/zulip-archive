[
    {
        "content": "<p>yagehu opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7051\">issue #7051</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi_snapshot_preview1\"</span> <span class=\"s2\">\"fd_fdstat_set_rights\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$fd_fdstat_set_rights</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi_snapshot_preview1\"</span> <span class=\"s2\">\"proc_exit\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$proc_exit</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$_start</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">i64.const</span> <span class=\"mi\">3</span>\n    <span class=\"nb\">i64.const</span> <span class=\"mi\">3</span>\n    <span class=\"nb\">call</span> <span class=\"nv\">$fd_fdstat_set_rights</span>\n    <span class=\"nb\">call</span> <span class=\"nv\">$proc_exit</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"cm\">(;0;)</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"memory\"</span> <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"_start\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$_start</span><span class=\"p\">))</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above WAT code with Wasmtime and print the error code. For example:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"o\">?</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>stdin</code> (fd value 0) starts with a fs_rights_base value of 2 (read). The above WAT snippet attempts to add a right to it by setting it to 3 (read + seek).</p>\n<p>According the preview1 spec for <a href=\"https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md#-fd_fdstat_set_rightsfd-fd-fs_rights_base-rights-fs_rights_inheriting-rights---result-errno\"><code>fd_fdstat_set_rights</code></a>:</p>\n<blockquote>\n<p>Adjust the rights associated with a file descriptor. This can only be used to remove rights, and returns <a href=\"https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md#errno.notcapable\"><code>errno::notcapable</code></a> if called in a way that would attempt to add rights</p>\n</blockquote>\n<p>So the expected exit status is 76 (notcapable).</p>\n<h3>Actual Results</h3>\n<p>The snippet exits with errno 0.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v12.0.2</p>\n<p>Operating system: Mac OSX Ventura 13.5.2</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>This is not a security vulnerability because, in my limited testing, the right does not actually get updated.<br>\n</p>\n</blockquote>",
        "id": 391263552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694812063
    },
    {
        "content": "<p><a href=\"https://github.com/yagehu\">yagehu</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7051\">Issue #7051</a>.</p>",
        "id": 391263554,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694812063
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7051#issuecomment-1723602799\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7051\">issue #7051</a>:</p>\n<blockquote>\n<p>Thanks for the report! The <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6265\">rights system has been removed from Wasmtime however</a> in preparation of the removal of rights in WASI preview 2. That means that the documentation of preview1 is probably a bit out of date since it theoretically should be updated to mention this, but development work is centered around preview2 at this time instead of preview1.</p>\n<p>Since this is intended behavior though I'm going to go ahead and close this, but I can reopen if there are other questions.</p>\n</blockquote>",
        "id": 391717062,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695048580
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7051\">issue #7051</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;0;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span> <span class=\"kt\">i64</span> <span class=\"kt\">i64</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;1;)</span> <span class=\"p\">(</span><span class=\"k\">func</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"cm\">(;2;)</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">param</span> <span class=\"kt\">i32</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi_snapshot_preview1\"</span> <span class=\"s2\">\"fd_fdstat_set_rights\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$fd_fdstat_set_rights</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">import</span> <span class=\"s2\">\"wasi_snapshot_preview1\"</span> <span class=\"s2\">\"proc_exit\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$proc_exit</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">2</span><span class=\"p\">)))</span>\n  <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$_start</span> <span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"nb\">i32.const</span> <span class=\"mi\">0</span>\n    <span class=\"nb\">i64.const</span> <span class=\"mi\">3</span>\n    <span class=\"nb\">i64.const</span> <span class=\"mi\">3</span>\n    <span class=\"nb\">call</span> <span class=\"nv\">$fd_fdstat_set_rights</span>\n    <span class=\"nb\">call</span> <span class=\"nv\">$proc_exit</span>\n  <span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"cm\">(;0;)</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"memory\"</span> <span class=\"p\">(</span><span class=\"k\">memory</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n  <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"_start\"</span> <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"nv\">$_start</span><span class=\"p\">))</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above WAT code with Wasmtime and print the error code. For example:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">wat</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"o\">?</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>stdin</code> (fd value 0) starts with a fs_rights_base value of 2 (read). The above WAT snippet attempts to add a right to it by setting it to 3 (read + seek).</p>\n<p>According the preview1 spec for <a href=\"https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md#-fd_fdstat_set_rightsfd-fd-fs_rights_base-rights-fs_rights_inheriting-rights---result-errno\"><code>fd_fdstat_set_rights</code></a>:</p>\n<blockquote>\n<p>Adjust the rights associated with a file descriptor. This can only be used to remove rights, and returns <a href=\"https://github.com/WebAssembly/WASI/blob/main/legacy/preview1/docs.md#errno.notcapable\"><code>errno::notcapable</code></a> if called in a way that would attempt to add rights</p>\n</blockquote>\n<p>So the expected exit status is 76 (notcapable).</p>\n<h3>Actual Results</h3>\n<p>The snippet exits with errno 0.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v12.0.2</p>\n<p>Operating system: Mac OSX Ventura 13.5.2</p>\n<p>Architecture: amd64</p>\n<h3>Extra Info</h3>\n<p>This is not a security vulnerability because, in my limited testing, the right does not actually get updated.<br>\n</p>\n</blockquote>",
        "id": 391717063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695048580
    }
]