[
    {
        "content": "<p>cr0sh opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342\">PR #5342</a> from <code>run-piped-modules</code> to <code>main</code>:</p>\n<blockquote>\n<p>Previously, wasmtime-cli checked the module to be loaded is<br>\nprecompiled or not, by pre-opening the given file path to<br>\ncheck if the \"\\x7FELF\" header exists.<br>\nThis commit moves this branch into the <code>Module::from_trusted_file</code>,<br>\nwhich is only invoked with <code>--allow-precompiled</code> flag on CLI.</p>\n<p>The initial motivation of the commit is, feeding a module to wasmtime<br>\nfrom piped inputs, is blocked by the pre-opening of the module.<br>\nThe <code>Module::from_trusted_file</code>, assumes the --allow-precompiled flag<br>\nso there is no piped inputs, happily mmap-ing the module to test<br>\nif the header exists.<br>\nIf --allow-precompiled is not supplied, the existing <code>Module::from_file</code><br>\nwill be used, without the additional header check as the precompiled<br>\nmodules are intentionally not allowed on piped inputs for security measures.</p>\n<p>One caveat of this approach is that the user may be confused if<br>\nhe or she tries to execute a precompiled module without<br>\n--allow-precompiled, as wasmtime shows an 'input bytes aren't valid<br>\nutf-8' error, not directly getting what's going wrong.<br>\nSo this commit includes a hack-ish workaround for this: If the error<br>\non <code>Module::new</code> ends with \"input bytes aren't valid utf-8\" strings,<br>\nshow a simple note to the standard error stream.</p>\n<p>This might be a small hiccup on preparing i18n or changing error<br>\nformat on the <code>wat</code> crate, but I feel comfortable (yet) this strategy<br>\nbecause the <code>wat</code> crate includes tests for the error messages, so one<br>\nwould notice the breakage if the error message have changed.</p>\n<p>Thanks to @jameysharp for suggesting this idea with a detailed guidance.</p>\n<p>Note: this supercedes #5035.</p>\n</blockquote>",
        "id": 312880777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669739168
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198035363\">PR review</a>.</p>",
        "id": 312905937,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669746150
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035092032\">PR review comment</a>:</p>\n<blockquote>\n<p>As a matter of style, let's avoid suggesting anything about the mental health of our users. Here's an alternative, with more context copied from the documentation for <code>deserialize_file</code>, which has the same sources of unsafety. Can you think of anything this is missing that callers need to know?</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    /// Creates a new WebAssembly `Module` from the contents of the given `file`\n    /// on disk, but with assumptions that the file is from a trusted source.\n    /// The file should be a binary- or text-format WebAssembly module, or a\n    /// precompiled artifact generated by the same version of Wasmtime.\n    ///\n    /// # Unsafety\n    ///\n    /// All of the reasons that [`deserialize`] is `unsafe` apply to this\n    /// function as well. Arbitrary data loaded from a file may trick Wasmtime\n    /// into arbitrary code execution since the contents of the file are not\n    /// validated to be a valid precompiled module.\n    ///\n    /// [`deserialize`]: Module::deserialize\n    ///\n    /// Additionally though this function is also `unsafe` because the file\n    /// referenced must remain unchanged and a valid precompiled module for the\n    /// entire lifetime of the [`Module`] returned. Any changes to the file on\n    /// disk may change future instantiations of the module to be incorrect.\n    /// This is because the file is mapped into memory and lazily loaded pages\n    /// reflect the current state of the file, not necessarily the origianl\n    /// state of the file.\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 312905938,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669746150
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035058008\">PR review comment</a>:</p>\n<blockquote>\n<p>I think you meant <code>--allow-precompiled</code> here:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                            eprintln!(\"note: wasmtime might be trying to load a precompiled binary without --allow-precompiled.\");\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 312905939,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669746150
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035098671\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately, things changed underneath you (in #5153), so <code>SerializedModule</code> doesn't exist any more. Fortunately, I think this is an easy fix. In <code>crates/wasmtime/src/engine.rs</code>, make <code>fn load_code</code> be <code>pub(crate)</code>. Then here you can call <code>engine.load_code(mmap, ObjectKind::Module)</code>. See <code>deserialize</code> and <code>deserialize_file</code> for examples of the current pattern.</p>\n</blockquote>",
        "id": 312905940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669746150
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198035363\">PR review</a>.</p>",
        "id": 312905941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669746150
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035100662\">PR review comment</a>:</p>\n<blockquote>\n<p>Out of curiosity, is the <code>*</code> necessary here? I think if you write <code>&amp;mmap</code>, Rust will still figure out that you want the dereferenced type. But I think the <code>&amp;</code> is necessary either way.</p>\n</blockquote>",
        "id": 312905943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669746150
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198271072\">PR review</a>.</p>",
        "id": 312928085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669752445
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035227892\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think the wasmtime library should print to stderr. There is no way for a binary to suppress this.</p>\n</blockquote>",
        "id": 312928086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669752445
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035229667\">PR review comment</a>:</p>\n<blockquote>\n<p>It needs a type implementing <code>AsRef&lt;[u8]&gt;</code> as argument. <code>&amp;MmapVec</code> doesn't implement this. <code>MmapVec</code> only implements <code>Deref</code> and <code>DerefMut</code>.</p>\n</blockquote>",
        "id": 312928472,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669752562
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198273647\">PR review</a>.</p>",
        "id": 312928473,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669752562
    },
    {
        "content": "<p>cr0sh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198565251\">PR review</a>.</p>",
        "id": 312970260,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669771378
    },
    {
        "content": "<p>cr0sh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035439311\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops, I forgot to <code>cargo check</code> again after rebasing. I'll fix eod today</p>\n</blockquote>",
        "id": 312970261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669771378
    },
    {
        "content": "<p>cr0sh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035439311\">PR review comment</a>.</p>",
        "id": 312970276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669771387
    },
    {
        "content": "<p>cr0sh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198576053\">PR review</a>.</p>",
        "id": 312971604,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669772481
    },
    {
        "content": "<p>cr0sh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035447217\">PR review comment</a>:</p>\n<blockquote>\n<p>You're right, wasmtime is a library so eprintln should be avoided if possible. How about deferring this eprintln to the wasmtime-cli? This would make wasmtime-cli add <code>wat</code> dependency to downcast error.<br>\nAlso the <code>#[cfg(feature = \"wat\")]</code> branch condition cannot be used on wasmtime-cli, so this eprintln would be fired unconditionally.</p>\n</blockquote>",
        "id": 312971605,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669772481
    },
    {
        "content": "<p>cr0sh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198577527\">PR review</a>.</p>",
        "id": 312971771,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669772634
    },
    {
        "content": "<p>cr0sh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035448385\">PR review comment</a>:</p>\n<blockquote>\n<p>Great! Didn't think the scenario that the file would be modified after mmaping. Nice catch.</p>\n</blockquote>",
        "id": 312971772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669772634
    },
    {
        "content": "<p>cr0sh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342\">PR #5342</a> from <code>run-piped-modules</code> to <code>main</code>.</p>",
        "id": 312971858,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669772673
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198586775\">PR review</a>.</p>",
        "id": 312973056,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669773639
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035455955\">PR review comment</a>:</p>\n<blockquote>\n<p>Let's keep the error reporting simple here. If somebody has a more user-friendly way to handle this, we can do that in a later PR.</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            Module::from_file(engine, path).context(\"if you're trying to run a precompiled module, pass --allow-precompiled\")\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 312973057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669773640
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1198587690\">PR review</a>.</p>",
        "id": 312973248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669773742
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035456658\">PR review comment</a>:</p>\n<blockquote>\n<p>I've just suggested a different way to report this error, so let's delete this <code>eprintln</code> in favor of that alternative.</p>\n</blockquote>",
        "id": 312973249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669773742
    },
    {
        "content": "<p>cr0sh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1199206314\">PR review</a>.</p>",
        "id": 313044393,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669810076
    },
    {
        "content": "<p>cr0sh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035889222\">PR review comment</a>:</p>\n<blockquote>\n<p>Awesome.</p>\n</blockquote>",
        "id": 313044395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669810076
    },
    {
        "content": "<p>cr0sh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342\">PR #5342</a> from <code>run-piped-modules</code> to <code>main</code>.</p>",
        "id": 313044542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669810112
    },
    {
        "content": "<p>cr0sh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342\">PR #5342</a> from <code>run-piped-modules</code> to <code>main</code>.</p>",
        "id": 313046738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669810812
    },
    {
        "content": "<p>cr0sh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1199224017\">PR review</a>.</p>",
        "id": 313046788,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669810834
    },
    {
        "content": "<p>cr0sh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1035900960\">PR review comment</a>:</p>\n<blockquote>\n<p>This is done and I found a small typo near load_code so fixed it too ;)</p>\n</blockquote>",
        "id": 313046789,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669810834
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1036606538\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe GitHub is confusing me here. It looks like you applied this suggestion, then force-pushed a version that didn't have this suggestion any more. Could you add it again?</p>\n</blockquote>",
        "id": 313189095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669858258
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1200247988\">PR review</a>.</p>",
        "id": 313189096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669858258
    },
    {
        "content": "<p>cr0sh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342\">PR #5342</a> from <code>run-piped-modules</code> to <code>main</code>.</p>",
        "id": 313204258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669870647
    },
    {
        "content": "<p>cr0sh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1200364572\">PR review</a>.</p>",
        "id": 313204324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669870699
    },
    {
        "content": "<p>cr0sh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#discussion_r1036691704\">PR review comment</a>:</p>\n<blockquote>\n<p>Might be a mistake while rebasing. Thanks for pointing out.</p>\n</blockquote>",
        "id": 313204325,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669870699
    },
    {
        "content": "<p>cr0sh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342\">PR #5342</a> from <code>run-piped-modules</code> to <code>main</code>.</p>",
        "id": 313207040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669872776
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342#pullrequestreview-1201383905\">PR review</a>.</p>",
        "id": 313328960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669914721
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5342\">PR #5342</a>.</p>",
        "id": 313329307,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669914821
    }
]