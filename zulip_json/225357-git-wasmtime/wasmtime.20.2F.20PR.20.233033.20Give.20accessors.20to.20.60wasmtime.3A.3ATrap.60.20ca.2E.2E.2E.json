[
    {
        "content": "<p>bnjbvr opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033\">PR #3033</a> from <code>trap-errors</code> to <code>main</code>:</p>\n<blockquote>\n<p>It wasn't possible to just retrieve a user-created error description in <code>wasmtime::Trap</code> (i.e. created with <code>wasmtime::Trap::new(\"hi there\")</code>). This user message would only show up as part of the full <code>Display</code> impl for <code>Trap</code>, which also prints out the unmangled backtrace and other information. A first commit adds a <code>user_message()</code> accessor to retrieve it, if it was set.</p>\n<p>As I was trying to find another way to get a custom error message, I saw that <code>Trap</code> implemented <code>std::error::Error</code> if the trap was created from an <code>StdError</code>. Unfortunately, it doesn't give access to it directly either, but it gives access to the underlying <code>source()</code> of the error itself. It would be nice to have access to the error itself, to not lose one layer of error information. As a result, I've tweaked <code>source()</code> so it returns the error that was used to create the trap, and not the error's source directly. Conceptually it makes sense that the first source of the trap is the error that it was converted from, but it would also be reasonable to say that the trap <em>is</em> the error (so instead, we could just add another accessor to get the error). Discuss. :)</p>\n</blockquote>",
        "id": 243895155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624614664
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033\">PR #3033</a> from <code>trap-errors</code> to <code>main</code>.</p>",
        "id": 243935007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624636567
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033#pullrequestreview-692974047\">PR review</a>.</p>",
        "id": 243935697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624636850
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033#discussion_r658874162\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this return <code>impl Display</code> so if necessary we can change this in the future to returning something that isn't necessarily stored on <code>Self</code>?</p>\n</blockquote>",
        "id": 243935698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624636850
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033#pullrequestreview-692974047\">PR review</a>.</p>",
        "id": 243935699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624636850
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033#discussion_r658874511\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this elaborate a bit on what the method does? For example I think this should explain how this is different from <code>Display for Trap</code> and an example situation you might end up using this.</p>\n</blockquote>",
        "id": 243935700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624636850
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033\">PR #3033</a> from <code>trap-errors</code> to <code>main</code>.</p>",
        "id": 244124275,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624875052
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3033\">PR #3033</a>.</p>",
        "id": 244432673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625063688
    }
]