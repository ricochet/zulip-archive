[
    {
        "content": "<p><a href=\"https://github.com/Licenser\">Licenser</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781\">Issue #8781</a>.</p>",
        "id": 444193153,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718185990
    },
    {
        "content": "<p>Licenser opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781\">issue #8781</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>A full reproduction, including the test case, can be found here: <a href=\"https://github.com/Licenser/wasi-io-hang\">https://github.com/Licenser/wasi-io-hang</a></p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Create WASI environment</li>\n<li>Create an AsyncStdoutStream and use it as stdout</li>\n<li>load a wasi program that writes more than once to stdout</li>\n<li>in the wasi program, write to stdout</li>\n<li>read once and observe a correct result</li>\n<li>in the wasi program, the write call never returns</li>\n<li>the whole program hangs</li>\n<li></li>\n</ul>\n<h3>Expected Results</h3>\n<p>I would expect to be able to write multiple times from withtin the wasi program when using an <code>AsyncStdoutStream</code> as stdout.</p>\n<h3>Actual Results</h3>\n<p>The first write to stdout never finishes, and the wasi program hangs.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 21.0.1</p>\n<p>Operating system: OSX</p>\n<p>Architecture: ARMv8 (M3)</p>\n<h3>Extra Info</h3>\n<p>I have looked for other examples of using <code>AsyncStdoutStream</code>, the main repository doesn't seem to have any more is it used in tests, I might be doing something wrong but this could be a genuine bug.</p>\n</blockquote>",
        "id": 444193158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718185991
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781#issuecomment-2163464611\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781\">issue #8781</a>:</p>\n<blockquote>\n<p>Thanks for the report and reproduction! I think this should be fixed by <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8782\">https://github.com/bytecodealliance/wasmtime/pull/8782</a>. Is that something you'd like to see backported to the Wasmtime 22 release happening on June 20? Otherwise it'll get released on July 20.</p>\n</blockquote>",
        "id": 444280437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718209874
    },
    {
        "content": "<p>Licenser <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781#issuecomment-2163478188\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781\">issue #8781</a>:</p>\n<blockquote>\n<p>Heya, thanks for the quick fix! </p>\n<p>No need to backport it :) I appreciate the offer, but it's totally okay for me to point to a GitHub ref until the end of July - it's exploratory nonproduction code at the moment anyway, so I don't want to cause extra work for you.</p>\n</blockquote>",
        "id": 444282213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718210356
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781\">issue #8781</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<p>A full reproduction, including the test case, can be found here: <a href=\"https://github.com/Licenser/wasi-io-hang\">https://github.com/Licenser/wasi-io-hang</a></p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Create WASI environment</li>\n<li>Create an AsyncStdoutStream and use it as stdout</li>\n<li>load a wasi program that writes more than once to stdout</li>\n<li>in the wasi program, write to stdout</li>\n<li>read once and observe a correct result</li>\n<li>in the wasi program, the write call never returns</li>\n<li>the whole program hangs</li>\n<li></li>\n</ul>\n<h3>Expected Results</h3>\n<p>I would expect to be able to write multiple times from withtin the wasi program when using an <code>AsyncStdoutStream</code> as stdout.</p>\n<h3>Actual Results</h3>\n<p>The first write to stdout never finishes, and the wasi program hangs.</p>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 21.0.1</p>\n<p>Operating system: OSX</p>\n<p>Architecture: ARMv8 (M3)</p>\n<h3>Extra Info</h3>\n<p>I have looked for other examples of using <code>AsyncStdoutStream</code>, the main repository doesn't seem to have any more is it used in tests, I might be doing something wrong but this could be a genuine bug.</p>\n</blockquote>",
        "id": 444326596,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718224272
    },
    {
        "content": "<p>Licenser <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781#issuecomment-2164712608\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8781\">issue #8781</a>:</p>\n<blockquote>\n<p>I just wanted to confirm the fix <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>. I tried it this morning, and it works like a charm. Thanks a lot Alex!</p>\n</blockquote>",
        "id": 444396528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718261922
    }
]