[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a> from <code>limit-component-recursion</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is aimed at fixing #4814 by placing a hard limit on the<br>\nmaximal recursive depth a type may have in the component model. The<br>\ncomponent model theoretically allows for infinite recursion but many<br>\nvarious types of operations within the component model are naturally<br>\nwritten as recursion over the structure of a type which can lead to<br>\nstack overflow with deeply recursive types. Some examples of recursive<br>\noperations are:</p>\n<ul>\n<li>\n<p>Lifting and lowering a type - currently the recursion here is modeled<br>\n  in Rust directly with <code>#[derive]</code> implementations as well as the<br>\n  implementations for the <code>Val</code> type.</p>\n</li>\n<li>\n<p>Compilation of adapter trampolines which iterates over the type<br>\n  structure recursively.</p>\n</li>\n<li>\n<p>Historically many various calculations like the size of a type, the<br>\n  flattened representation of a type, etc, were all done recursively.<br>\n  Many of these are more efficiently done via other means but it was<br>\n  still natural to implement these recursively initially.</p>\n</li>\n</ul>\n<p>By placing a hard limit on type recursion Wasmtime won't be able to load<br>\nsome otherwise-valid modules. The hope, though, is that no human-written<br>\nprogram is likely to ever reach this limit. This limit can be revised<br>\nand/or the locations with recursion revised if it's ever reached.</p>\n<p>The implementation of this feature is done by generalizing the current<br>\nflattened-representation calculation which now keeps track of a type's<br>\ndepth and size. The size calculation isn't used just yet but I plan to<br>\nuse it in fixing #4816 and it was natural enough to write here as well.<br>\nThe depth is checked after a type is translated and if it exceeds the<br>\nmaximum then an error is returned.</p>\n<p>Additionally the <code>Arbitrary for Type</code> implementation was updated to<br>\nprevent generation of a type that's too-recursive.</p>\n<p>Closes #4814</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 296196515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661886776
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a>.</p>",
        "id": 296227157,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661896394
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a> from <code>limit-component-recursion</code> to <code>main</code>.</p>",
        "id": 296354461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661959116
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#discussion_r959806504\">PR review comment</a>:</p>\n<blockquote>\n<p>Why not 99?</p>\n</blockquote>",
        "id": 296405170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964384
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#discussion_r959805212\">PR review comment</a>:</p>\n<blockquote>\n<p>todo</p>\n</blockquote>",
        "id": 296405171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964384
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#pullrequestreview-1092199058\">PR review</a>.</p>",
        "id": 296405172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964384
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#pullrequestreview-1092199058\">PR review</a>.</p>",
        "id": 296405173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964384
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a> from <code>limit-component-recursion</code> to <code>main</code>.</p>",
        "id": 296406178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964689
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#discussion_r959813326\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops this was actually intended for a separate PR so I'm going to remove this</p>\n</blockquote>",
        "id": 296406199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964700
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#pullrequestreview-1092211782\">PR review</a>.</p>",
        "id": 296406200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964700
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a> from <code>limit-component-recursion</code> to <code>main</code>.</p>",
        "id": 296406470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964781
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#pullrequestreview-1092214073\">PR review</a>.</p>",
        "id": 296406600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964812
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825#discussion_r959815079\">PR review comment</a>:</p>\n<blockquote>\n<p>Originally I didn't really want to deal with off-by-one bugs with these sorts of arbitrary limits, but I suppose there's no harm in fixing them if they come up.</p>\n</blockquote>",
        "id": 296406601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964812
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a>.</p>",
        "id": 296406629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661964825
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a> from <code>limit-component-recursion</code> to <code>main</code>.</p>",
        "id": 296410164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661965890
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4825\">PR #4825</a>.</p>",
        "id": 296424575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1661970545
    }
]