[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>Add the ability to link <code>SettingPredicateNumber</code>s with AND and OR.</p>\n<p>&lt;!-- What is the feature or code improvement you would like to do in<br>\nCranelift/Wasmtime? --&gt;</p>\n<h4>Benefit</h4>\n<p>When passing around <code>SettingPredicateNumber</code>s (i.e. the identifiers for CPU features), I do not see a way to create an OR expression for various CPU features. This functionality is available for <code>InstructionPredicationNode</code>s (which are used in, e.g., <code>EncodingBuilder::inst_predicate</code>), but not for <code>SettingPredicateNumber</code>s (which are used in, e.g., <code>EncodingBuilder::isa_predicate</code>). Since some encodings are present under more than one CPU feature, it would be good to be able to express this.<br>\n&lt;!-- What is the value of adding this in Cranelift/Wasmtime? --&gt;</p>\n<h4>Implementation</h4>\n<p>Unsure, but:</p>\n<ul>\n<li>perhaps there is a way to unify the <code>inst_</code> and <code>isa_</code> predicates?</li>\n</ul>\n<p>&lt;!-- Do you have an implementation plan, and/or ideas for data structures or<br>\nalgorithms to use? --&gt;</p>\n<h4>Alternatives</h4>\n<p>I don't yet see any.<br>\n&lt;!-- Have you considered alternative implementations? If so, how are they<br>\nbetter or worse than your proposal? --&gt;</p>\n</blockquote>",
        "id": 198832917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590534570
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766#issuecomment-634327620\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>cc: @bnjbvr, @iximeow, @sunfishcode </p>\n</blockquote>",
        "id": 198832977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590534602
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766#issuecomment-634769012\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>Needed in order to add correct predicates for <a href=\"https://github.com/bytecodealliance/wasmtime/blob/4ec16fa057774dcd0d82dce05f8160689f0fe050/cranelift/codegen/meta/src/isa/x86/encodings.rs#L2091\"><code>VPMULLQ</code></a> eventually <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1765/commits/7baedd9d65437b495a56a5d19239b4f0c0da06ba#diff-fe2a612bc8d9beb9107cd41f353e61d5R1878\"><code>VCVTTUDQ2PS</code></a></p>\n</blockquote>",
        "id": 198914145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590595651
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766#issuecomment-634769012\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>Needed in order to add correct predicates for <a href=\"https://github.com/bytecodealliance/wasmtime/blob/4ec16fa057774dcd0d82dce05f8160689f0fe050/cranelift/codegen/meta/src/isa/x86/encodings.rs#L2091\"><code>VPMULLQ</code></a> eventually <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1765/commits/7baedd9d65437b495a56a5d19239b4f0c0da06ba#diff-fe2a612bc8d9beb9107cd41f353e61d5R1878\"><code>VCVTUDQ2PS</code></a></p>\n</blockquote>",
        "id": 198914173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590595669
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766#issuecomment-638256825\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>It's a bit hidden, but I think you can already do this: does something like this work for your use case? <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/codegen/meta/src/isa/x86/settings.rs#L54\">https://github.com/bytecodealliance/wasmtime/blob/master/cranelift/codegen/meta/src/isa/x86/settings.rs#L54</a></p>\n</blockquote>",
        "id": 199630952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591196617
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766#issuecomment-638345625\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>That creates a new flag, which isn't exactly what I was trying to do--in the extreme that could create a flag explosion if I start combining different flags together. And I don't see a way for that to support OR-ing of predicates. What I am trying to do is to \"add this encoding that is valid when either flag A OR flag B is enabled.\" </p>\n</blockquote>",
        "id": 199650944,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1591205685
    },
    {
        "content": "<p>bnjbvr labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>Add the ability to link <code>SettingPredicateNumber</code>s with AND and OR.</p>\n<p>&lt;!-- What is the feature or code improvement you would like to do in<br>\nCranelift/Wasmtime? --&gt;</p>\n<h4>Benefit</h4>\n<p>When passing around <code>SettingPredicateNumber</code>s (i.e. the identifiers for CPU features), I do not see a way to create an OR expression for various CPU features. This functionality is available for <code>InstructionPredicationNode</code>s (which are used in, e.g., <code>EncodingBuilder::inst_predicate</code>), but not for <code>SettingPredicateNumber</code>s (which are used in, e.g., <code>EncodingBuilder::isa_predicate</code>). Since some encodings are present under more than one CPU feature, it would be good to be able to express this.<br>\n&lt;!-- What is the value of adding this in Cranelift/Wasmtime? --&gt;</p>\n<h4>Implementation</h4>\n<p>Unsure, but:</p>\n<ul>\n<li>perhaps there is a way to unify the <code>inst_</code> and <code>isa_</code> predicates?</li>\n</ul>\n<p>&lt;!-- Do you have an implementation plan, and/or ideas for data structures or<br>\nalgorithms to use? --&gt;</p>\n<h4>Alternatives</h4>\n<p>I don't yet see any.<br>\n&lt;!-- Have you considered alternative implementations? If so, how are they<br>\nbetter or worse than your proposal? --&gt;</p>\n</blockquote>",
        "id": 202329884,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593446087
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766#issuecomment-651209024\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 202329903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593446098
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766#issuecomment-772722825\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>I don't think this is necessary anymore for the new backend framework.</p>\n</blockquote>",
        "id": 225058767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612376848
    },
    {
        "content": "<p>abrown closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1766\">Issue #1766</a>:</p>\n<blockquote>\n<p>&lt;!-- Please try to describe precisely what you would like to do in<br>\nCranelift/Wasmtime and/or expect from it. You can answer the questions below if<br>\nthey're relevant and delete this text before submitting. Thanks for opening an<br>\nissue! --&gt;</p>\n<h4>Feature</h4>\n<p>Add the ability to link <code>SettingPredicateNumber</code>s with AND and OR.</p>\n<p>&lt;!-- What is the feature or code improvement you would like to do in<br>\nCranelift/Wasmtime? --&gt;</p>\n<h4>Benefit</h4>\n<p>When passing around <code>SettingPredicateNumber</code>s (i.e. the identifiers for CPU features), I do not see a way to create an OR expression for various CPU features. This functionality is available for <code>InstructionPredicationNode</code>s (which are used in, e.g., <code>EncodingBuilder::inst_predicate</code>), but not for <code>SettingPredicateNumber</code>s (which are used in, e.g., <code>EncodingBuilder::isa_predicate</code>). Since some encodings are present under more than one CPU feature, it would be good to be able to express this.<br>\n&lt;!-- What is the value of adding this in Cranelift/Wasmtime? --&gt;</p>\n<h4>Implementation</h4>\n<p>Unsure, but:</p>\n<ul>\n<li>perhaps there is a way to unify the <code>inst_</code> and <code>isa_</code> predicates?</li>\n</ul>\n<p>&lt;!-- Do you have an implementation plan, and/or ideas for data structures or<br>\nalgorithms to use? --&gt;</p>\n<h4>Alternatives</h4>\n<p>I don't yet see any.<br>\n&lt;!-- Have you considered alternative implementations? If so, how are they<br>\nbetter or worse than your proposal? --&gt;<br>\n</p>\n</blockquote>",
        "id": 225058924,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612376907
    }
]