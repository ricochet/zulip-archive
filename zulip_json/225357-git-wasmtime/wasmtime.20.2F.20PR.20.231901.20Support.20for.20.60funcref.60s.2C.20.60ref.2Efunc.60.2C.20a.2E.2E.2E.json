[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201308340,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592505307
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a>.</p>",
        "id": 201308341,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592505307
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-433566902\">PR Review</a>.</p>",
        "id": 201312930,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592507491
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-433566902\">PR Review</a>.</p>",
        "id": 201312931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592507491
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r442440635\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW this pattern with <code>#[cfg]</code> might be good to encapsulate somewhere with something like <code>ir::types::rsize()</code></p>\n</blockquote>",
        "id": 201312932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592507492
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201338845,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592523707
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201665172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592862489
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201670627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592866279
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a>.</p>",
        "id": 201670724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592866347
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201672949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592868158
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201675812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592870650
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-435822900\">PR Review</a>.</p>",
        "id": 201734086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-435822900\">PR Review</a>.</p>",
        "id": 201734087,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444254421\">PR Review Comment</a>:</p>\n<blockquote>\n<p>The fallout from this change seems quite large (affecting the C API and many callers of the default API), but I can't figure out why this changed? </p>\n<p>While this makes sense for <code>Val</code> I don't think this makes sense for <code>Extern</code> which is acquired from an instance, and I don't think that instances can export a <code>null</code> funcref, right?</p>\n</blockquote>",
        "id": 201734088,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444259607\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think there's a safe conversion from <code>&amp;T</code> to <code>NonNull&lt;T&gt;</code> to use here?</p>\n</blockquote>",
        "id": 201734089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444258347\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I saw somewhere else that this was store-local, but it's also here per-instance? Could this perhaps be <code>*mut</code> and stored in the <code>Store</code> instad?</p>\n</blockquote>",
        "id": 201734090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444255152\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could <code>u64::from</code> be used still to avoid <code>as</code>?</p>\n</blockquote>",
        "id": 201734091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444262178\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>\"b\"</code></p>\n</blockquote>",
        "id": 201734092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444262355\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>\"c\"</code></p>\n</blockquote>",
        "id": 201734093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444263060\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This expression happens a lot in this block, so perhaps this could do this at the top?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">anyfunc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">export</span><span class=\"p\">.</span><span class=\"n\">anyfunc</span><span class=\"p\">.</span><span class=\"n\">as_ref</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"c1\">// ...</span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 201734094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922957
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444264722\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>\"a\"</code></p>\n</blockquote>",
        "id": 201734095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444265017\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Since there's already a lifetime here, perhaps this could be <code>&amp;'a Store</code>?</p>\n</blockquote>",
        "id": 201734096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444264589\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this answers my question about where the <code>None</code> came from, but I think that we're guaranteed <code>ExportFunction</code> is never a \"null function\", right?</p>\n</blockquote>",
        "id": 201734097,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444265297\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This got a little gnarly, mind annotating the <code>_</code> here?</p>\n</blockquote>",
        "id": 201734098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444271886\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Nice <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 201734099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444270660\">PR Review Comment</a>:</p>\n<blockquote>\n<p>An idle thought, but we could perhaps have something like:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Func</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">crate</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">into_raw</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">dst</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">Store</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"n\">NonNull</span><span class=\"o\">&lt;</span><span class=\"n\">VMCallerCheckedAnyfunc</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"c1\">// ...</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n<p>to bake in how you can't access the raw value without using the right store. Anyway not necessary to do here, just a thought!</p>\n</blockquote>",
        "id": 201734100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444267721\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this should write the store \"null funcref\" singleton instead of a null pointer, right?</p>\n</blockquote>",
        "id": 201734101,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444271175\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Another passing though, perhaps <code>fn is_null(&amp;self) -&gt; bool</code> could be added to <code>VMCallerCheckedAnyfunc</code></p>\n</blockquote>",
        "id": 201734102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444269372\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is <code>NonNull::new</code> here necessary?  This is related to my question above too I think.</p>\n<p>I figured that <code>ref.null</code> would be implemented as returning the null singleton rather than a literal null pointer. (to make <code>table.set</code> a simple store instead of having a branch to store a non-null value)</p>\n</blockquote>",
        "id": 201734103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444265905\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah it looks like there is indeed a null funcref per-store, but perhaps this could be reused for each <code>Instance</code>?</p>\n</blockquote>",
        "id": 201734104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444267048\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could this perhaps go through the <code>Store</code> instead? One day if we ever support cross-compilation this'd be through that instead of <code>wasmtime-runtime</code></p>\n</blockquote>",
        "id": 201734106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592922958
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-435954202\">PR Review</a>.</p>",
        "id": 201749262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592929764
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444354358\">PR Review Comment</a>:</p>\n<blockquote>\n<p><code>wasmtime-environ</code> is the thing that should handle the cross compilation as it is about the environment of the compilation target, while <code>wasmtime-runtime</code> is always compiled into the target. So if we put it in <code>wasmtime-runtime</code>, then it is always going to reflect the compilation target.</p>\n<p>If we wanted to support cross compilation at the <code>wasmtime</code> API level, then we would have to stop linking <code>wasmtime-runtime</code> directly, which would force us to (correctly) revisit calls to this function from the <code>wasmtime</code> crate. So I think we should be good here.</p>\n</blockquote>",
        "id": 201749263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592929764
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436004492\">PR Review</a>.</p>",
        "id": 201757163,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592933623
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444392541\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I... <em>think</em> you are correct. I'll look into it.</p>\n</blockquote>",
        "id": 201757164,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592933623
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436019013\">PR Review</a>.</p>",
        "id": 201758887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592934601
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444402571\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I didn't realize that <code>NonNull&lt;T&gt;</code> implements <code>From&lt;&amp;T&gt;</code>!</p>\n</blockquote>",
        "id": 201758888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592934601
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436020337\">PR Review</a>.</p>",
        "id": 201759081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592934701
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444403530\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW, we don't use pointer equality for <code>VMCallerCheckedAnyfunc</code>s, so this would just be a memory optimization that saves two words per instance.</p>\n</blockquote>",
        "id": 201759082,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592934702
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436029561\">PR Review</a>.</p>",
        "id": 201760526,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592935386
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444410347\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah yeah that's all I'm imagining, fewer small allocations here-and-there. It also sort of helps the case of \"I precompiled my wasm\" since we'd presumably statically allocate this anyfunc instead of trying to dynamically allocate it.</p>\n</blockquote>",
        "id": 201760527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592935386
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444410810\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It's true yeah we're a <em>long</em> way away from wasmtime supporting AOT compilation, but I just figured this'd be a relatively easy future-proofing.</p>\n</blockquote>",
        "id": 201760602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592935436
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436030157\">PR Review</a>.</p>",
        "id": 201760603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592935436
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436056877\">PR Review</a>.</p>",
        "id": 201765180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592937692
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444431268\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think we are as future proofed as it makes sense to be given that this function is safely inside <code>wasmtime-runtime</code>, as mentioned above.</p>\n<p>I think our best path forward for AOT cross compilation is a <code>wasmtime-aot</code> crate.</p>\n</blockquote>",
        "id": 201765181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592937692
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201766519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592938372
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a>.</p>",
        "id": 201766590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592938408
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201767263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592938664
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201797739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592955474
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201800759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1592958498
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436669006\">PR Review</a>.</p>",
        "id": 201849541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593006869
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#pullrequestreview-436669006\">PR Review</a>.</p>",
        "id": 201849542,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593006869
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901#discussion_r444910610\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think the <code>return</code> here can go away, or this may also benefit from a early-return <code>match</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">anyfunc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"n\">NonNull</span>:<span class=\"nc\">new</span><span class=\"p\">(</span><span class=\"n\">anyfunc</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nb\">None</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">Val</span>::<span class=\"n\">FuncRef</span><span class=\"p\">(</span><span class=\"nb\">None</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"c1\">// ...</span>\n<span class=\"o\">~~~</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 201849544,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593006869
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201867223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593014385
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201874837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593018112
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a> from <code>ref-func</code> to <code>master</code>.</p>",
        "id": 201875726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593018525
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1901\">PR #1901</a>.</p>",
        "id": 201881280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593021201
    }
]