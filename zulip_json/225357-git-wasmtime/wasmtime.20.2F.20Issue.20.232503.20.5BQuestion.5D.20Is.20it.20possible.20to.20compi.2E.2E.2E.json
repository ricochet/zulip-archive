[
    {
        "content": "<p>Zaid-Ajaj opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2503\">Issue #2503</a>:</p>\n<blockquote>\n<p>Hi there, I was going through the docs and saw the examples that allow using wasm by going from <code>rust</code> -&gt; <code>wasm</code> -&gt; <code>node.js</code>.  Is it possible to go the other way around? I would like to use a JS module in .NET and compiling it first to wasm sounds like the best way to go:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">JS</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">WASM</span><span class=\"w\"> </span>-&gt; <span class=\"p\">.</span><span class=\"n\">NET</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is this currently possible? Any pointers would be greatly appreciated <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span> </p>\n<p>Thanks in advance!</p>\n</blockquote>",
        "id": 219725479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607803566
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2503#issuecomment-743823415\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2503\">Issue #2503</a>:</p>\n<blockquote>\n<p>Yes and no. Yes, it is possible to compile a javascript interpreter to wasm. No, it is not possible to make it go fast. Javascript is a dynamic language, which means that it is basically impossible to make it go fast without jitting specializations of functions for specific types and using on stack replacement to fallback to an interpreter when a type was guessed incorrectly. Webassembly neither supports on stack replacement, nor does it natively support dynamic generation of code as necessary to implement a jit. While depending on the runtime it may be possible to provide a jit function from the embedder, this will have a way too big overhead in most cases.</p>\n</blockquote>",
        "id": 219726049,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607804491
    },
    {
        "content": "<p>Zaid-Ajaj <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2503#issuecomment-743829007\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2503\">Issue #2503</a>:</p>\n<blockquote>\n<p>Thanks a lot for the quick response @bjorn3 <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span> it sounds like using a JS interpreter in .net directly would be a lot easier than compiling the interpreter itself to wasm just to use it again. I will be investigating the former approach. Thanks again! </p>\n</blockquote>",
        "id": 219726243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607804816
    },
    {
        "content": "<p>Zaid-Ajaj closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2503\">Issue #2503</a>:</p>\n<blockquote>\n<p>Hi there, I was going through the docs and saw the examples that allow using wasm by going from <code>rust</code> -&gt; <code>wasm</code> -&gt; <code>node.js</code>.  Is it possible to go the other way around? I would like to use a JS module in .NET and compiling it first to wasm sounds like the best way to go:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">JS</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">WASM</span><span class=\"w\"> </span>-&gt; <span class=\"p\">.</span><span class=\"n\">NET</span><span class=\"w\"></span>\n</code></pre></div>\n<p>is this currently possible? Any pointers would be greatly appreciated <span aria-label=\"pray\" class=\"emoji emoji-1f64f\" role=\"img\" title=\"pray\">:pray:</span> </p>\n<p>Thanks in advance!</p>\n</blockquote>",
        "id": 219726244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607804816
    }
]