[
    {
        "content": "<p>tmtbe opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>This is WIT:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">local</span>:<span class=\"nc\">demo</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">log</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span>: <span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"nc\">func</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This is component code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">local</span>::<span class=\"n\">demo</span>::<span class=\"n\">host</span>::<span class=\"n\">log</span><span class=\"p\">;</span>\n<span class=\"c1\">// Use a procedural macro to generate bindings for the world we specified in</span>\n<span class=\"c1\">// `host.wit`</span>\n<span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"c1\">// the name of the world in the `*.wit` input file</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"my-world\"</span><span class=\"p\">,</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// For all exported worlds, interfaces, and resources, this specifies what</span>\n<span class=\"w\">    </span><span class=\"c1\">// type they're corresponding to in this module. In this case the `MyHost`</span>\n<span class=\"w\">    </span><span class=\"c1\">// struct defined below is going to define the exports of the `world`,</span>\n<span class=\"w\">    </span><span class=\"c1\">// namely the `run` function.</span>\n<span class=\"w\">    </span><span class=\"n\">exports</span>: <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">world</span>: <span class=\"nc\">MyWord</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Define a custom type and implement the generated `Guest` trait for it which</span>\n<span class=\"c1\">// represents implementing all the necessary exported interfaces for this</span>\n<span class=\"c1\">// component.</span>\n<span class=\"k\">struct</span> <span class=\"nc\">MyWord</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyWord</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasm-tools<span class=\"w\"> </span>component<span class=\"w\"> </span>new<span class=\"w\"> </span>./target/wasm32-wasi/debug/wasm_test2.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>my-world.wasm<span class=\"w\"> </span>--adapt<span class=\"w\"> </span>./wasi_snapshot_preview1.reactor.wasm\n</code></pre></div>\n<p>This is the relevant call codeï¼š</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Component</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">local</span>::<span class=\"n\">demo</span>::<span class=\"n\">host</span>::<span class=\"n\">Host</span><span class=\"p\">;</span>\n\n<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">();</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">MyState</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyState</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">msg</span>: <span class=\"nb\">String</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{msg}\"</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Configure an `Engine` and compile the `Component` that is being run for</span>\n<span class=\"w\">    </span><span class=\"c1\">// the application.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./my-world.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">MyState</span><span class=\"w\"> </span><span class=\"p\">{},</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span>:<span class=\"nc\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">MyState</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">MyWorld</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">state</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">MyState</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MyWorld</span>::<span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">.</span><span class=\"n\">call_run</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">error</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"o\">-</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n\n<span class=\"nc\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">error</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">nothing</span>\n</code></pre></div>\n</blockquote>",
        "id": 403738917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700727834
    },
    {
        "content": "<p>tmtbe <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1823978054\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>My wasmtime version is 15.0.0 ,the adpate wasm version is 15.0.0 too.</p>\n</blockquote>",
        "id": 403740209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700728375
    },
    {
        "content": "<p>tmtbe <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1824023846\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>When I switch to 14.0.4 I still get the error, I don't know what caused itï¼š</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">streams</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"o\">-</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"o\">-</span><span class=\"mi\">18</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n\n<span class=\"nc\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">output</span><span class=\"o\">-</span><span class=\"n\">stream</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">nothing</span>\n</code></pre></div>\n<p>The version of the adapter is consistent with the wasmtime library.</p>\n</blockquote>",
        "id": 403744772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700730139
    },
    {
        "content": "<p>tmtbe <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1824061504\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>I forgot to add wasmtime-wasi = \"15.0.0\" dependency, now no problem</p>\n</blockquote>",
        "id": 403749221,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700731848
    },
    {
        "content": "<p>tmtbe closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>This is WIT:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">local</span>:<span class=\"nc\">demo</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">log</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span>: <span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"nc\">func</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This is component code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">local</span>::<span class=\"n\">demo</span>::<span class=\"n\">host</span>::<span class=\"n\">log</span><span class=\"p\">;</span>\n<span class=\"c1\">// Use a procedural macro to generate bindings for the world we specified in</span>\n<span class=\"c1\">// `host.wit`</span>\n<span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"c1\">// the name of the world in the `*.wit` input file</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"my-world\"</span><span class=\"p\">,</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// For all exported worlds, interfaces, and resources, this specifies what</span>\n<span class=\"w\">    </span><span class=\"c1\">// type they're corresponding to in this module. In this case the `MyHost`</span>\n<span class=\"w\">    </span><span class=\"c1\">// struct defined below is going to define the exports of the `world`,</span>\n<span class=\"w\">    </span><span class=\"c1\">// namely the `run` function.</span>\n<span class=\"w\">    </span><span class=\"n\">exports</span>: <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">world</span>: <span class=\"nc\">MyWord</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Define a custom type and implement the generated `Guest` trait for it which</span>\n<span class=\"c1\">// represents implementing all the necessary exported interfaces for this</span>\n<span class=\"c1\">// component.</span>\n<span class=\"k\">struct</span> <span class=\"nc\">MyWord</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyWord</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasm-tools<span class=\"w\"> </span>component<span class=\"w\"> </span>new<span class=\"w\"> </span>./target/wasm32-wasi/debug/wasm_test2.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>my-world.wasm<span class=\"w\"> </span>--adapt<span class=\"w\"> </span>./wasi_snapshot_preview1.reactor.wasm\n</code></pre></div>\n<p>This is the relevant call codeï¼š</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Component</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">local</span>::<span class=\"n\">demo</span>::<span class=\"n\">host</span>::<span class=\"n\">Host</span><span class=\"p\">;</span>\n\n<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">();</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">MyState</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyState</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">msg</span>: <span class=\"nb\">String</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{msg}\"</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Configure an `Engine` and compile the `Component` that is being run for</span>\n<span class=\"w\">    </span><span class=\"c1\">// the application.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./my-world.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">MyState</span><span class=\"w\"> </span><span class=\"p\">{},</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span>:<span class=\"nc\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">MyState</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">MyWorld</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">state</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">MyState</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MyWorld</span>::<span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">.</span><span class=\"n\">call_run</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">error</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"o\">-</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n\n<span class=\"nc\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">error</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">nothing</span>\n</code></pre></div>\n</blockquote>",
        "id": 403749227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700731850
    },
    {
        "content": "<p>tmtbe deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1824061504\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>I forgot to add wasmtime-wasi = \"15.0.0\" dependency, now no problem</p>\n</blockquote>",
        "id": 403751075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700732418
    },
    {
        "content": "<p>tmtbe reopened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>This is WIT:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">local</span>:<span class=\"nc\">demo</span><span class=\"p\">;</span>\n\n<span class=\"n\">interface</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">log</span>: <span class=\"nc\">func</span><span class=\"p\">(</span><span class=\"n\">msg</span>: <span class=\"nc\">string</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">world</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"o\">-</span><span class=\"n\">world</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"n\">host</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"nc\">func</span><span class=\"p\">();</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>This is component code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">local</span>::<span class=\"n\">demo</span>::<span class=\"n\">host</span>::<span class=\"n\">log</span><span class=\"p\">;</span>\n<span class=\"c1\">// Use a procedural macro to generate bindings for the world we specified in</span>\n<span class=\"c1\">// `host.wit`</span>\n<span class=\"n\">wit_bindgen</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">({</span>\n<span class=\"w\">    </span><span class=\"c1\">// the name of the world in the `*.wit` input file</span>\n<span class=\"w\">    </span><span class=\"n\">world</span>: <span class=\"s\">\"my-world\"</span><span class=\"p\">,</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// For all exported worlds, interfaces, and resources, this specifies what</span>\n<span class=\"w\">    </span><span class=\"c1\">// type they're corresponding to in this module. In this case the `MyHost`</span>\n<span class=\"w\">    </span><span class=\"c1\">// struct defined below is going to define the exports of the `world`,</span>\n<span class=\"w\">    </span><span class=\"c1\">// namely the `run` function.</span>\n<span class=\"w\">    </span><span class=\"n\">exports</span>: <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">world</span>: <span class=\"nc\">MyWord</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"p\">});</span>\n\n<span class=\"c1\">// Define a custom type and implement the generated `Guest` trait for it which</span>\n<span class=\"c1\">// represents implementing all the necessary exported interfaces for this</span>\n<span class=\"c1\">// component.</span>\n<span class=\"k\">struct</span> <span class=\"nc\">MyWord</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyWord</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">run</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"s\">\"Hello, world!\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>wasm-tools<span class=\"w\"> </span>component<span class=\"w\"> </span>new<span class=\"w\"> </span>./target/wasm32-wasi/debug/wasm_test2.wasm<span class=\"w\"> </span>-o<span class=\"w\"> </span>my-world.wasm<span class=\"w\"> </span>--adapt<span class=\"w\"> </span>./wasi_snapshot_preview1.reactor.wasm\n</code></pre></div>\n<p>This is the relevant call codeï¼š</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"p\">{</span><span class=\"n\">Config</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Store</span><span class=\"p\">};</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">bindgen</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Component</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">component</span>::<span class=\"n\">Linker</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">local</span>::<span class=\"n\">demo</span>::<span class=\"n\">host</span>::<span class=\"n\">Host</span><span class=\"p\">;</span>\n\n<span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">();</span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">MyState</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">Host</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">MyState</span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">msg</span>: <span class=\"nb\">String</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"fm\">println!</span><span class=\"p\">(</span><span class=\"s\">\"{msg}\"</span><span class=\"p\">))</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">wasmtime</span>::<span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"c1\">// Configure an `Engine` and compile the `Component` that is being run for</span>\n<span class=\"w\">    </span><span class=\"c1\">// the application.</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Config</span>::<span class=\"n\">new</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"n\">wasm_component_model</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">engine</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Engine</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">component</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Component</span>::<span class=\"n\">from_file</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"./my-world.wasm\"</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Store</span>::<span class=\"n\">new</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">,</span>\n<span class=\"w\">        </span><span class=\"n\">MyState</span><span class=\"w\"> </span><span class=\"p\">{},</span>\n<span class=\"w\">    </span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span>:<span class=\"nc\">Linker</span><span class=\"o\">&lt;</span><span class=\"n\">MyState</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Linker</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">engine</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"n\">MyWorld</span>::<span class=\"n\">add_to_linker</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">linker</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">state</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"n\">MyState</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">state</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">MyWorld</span>::<span class=\"n\">instantiate</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">component</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">linker</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"nb\">Ok</span><span class=\"p\">(</span><span class=\"n\">bindings</span><span class=\"p\">.</span><span class=\"n\">call_run</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">store</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Error</span>: <span class=\"nc\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">wasi</span>:<span class=\"nc\">io</span><span class=\"o\">/</span><span class=\"n\">error</span><span class=\"o\">@</span><span class=\"mf\">0.2.0</span><span class=\"o\">-</span><span class=\"n\">rc</span><span class=\"o\">-</span><span class=\"mi\">2023</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n\n<span class=\"nc\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">instance</span><span class=\"w\"> </span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">error</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">wrong</span><span class=\"w\"> </span><span class=\"k\">type</span>\n    <span class=\"mi\">1</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">resource</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">nothing</span>\n</code></pre></div>\n</blockquote>",
        "id": 403751085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700732421
    },
    {
        "content": "<p>tmtbe <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1824088484\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>It needs <code>wasmtime_wasi::preview2::command::sync::add_to_linker(&amp;mut linker)?;</code> for it to work but I don't know where the documentation is.</p>\n</blockquote>",
        "id": 403753043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1700732966
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1827104495\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>Yes the \"problem\" here in a sense is the <code>--adapt ./wasi_snapshot_preview1.reactor.wasm</code> argument you're passing. The <code>world my-world</code> annotation doesn't actually fully describe the world of this component because through the adapter the component is going to need to additionally import WASI interfaces. If you use <code>wasm-tools component wit my-world.wasm</code> you'll see that the component imports WASI interfaces.</p>\n<p>To provide WASI interfaces in the linker you're going to want to use the <code>wasmtime_wasi::preview2::*</code> APIs.</p>\n</blockquote>",
        "id": 404331782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701059015
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579#issuecomment-1827104741\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7579\">issue #7579</a>:</p>\n<blockquote>\n<p>Ah sorry, you've already found this. Currently WASI is not documented well, and that's something we should improve.</p>\n</blockquote>",
        "id": 404331812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701059039
    }
]