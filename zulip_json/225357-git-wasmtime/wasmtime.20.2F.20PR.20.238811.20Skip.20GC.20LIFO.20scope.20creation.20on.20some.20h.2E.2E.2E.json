[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811\">PR #8811</a> from <code>alexcrichton:no-gc-scope-without-gc-values</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit skips the creation of a LIFO scope for GC <code>Rooted&lt;T&gt;</code> values for hostcalls using statically typed arguments/results (e.g. <code>Func::wrap</code>) where none of the arguments/results have GC values. This removes the last bit of \"GC business\" on <code>Func::wrap</code> calls that don't do anything related to GC.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 444776150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718394235
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811\">PR #8811</a>.</p>",
        "id": 444776154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718394235
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811\">PR #8811</a>.</p>",
        "id": 444776155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718394235
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#pullrequestreview-2119153722\">PR review</a>.</p>",
        "id": 444777953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718394939
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#pullrequestreview-2119153722\">PR review</a>.</p>",
        "id": 444777954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718394940
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#discussion_r1640280312\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this could actually be bad: if I define a host call with only integer params and results, but then create an <code>externref</code> inside it[^0], then that <code>externref</code> will be rooted in the outer LIFO scope, rather than just being rooted in the <code>Caller</code>'s scope, which is probably the store's scope. That means the <code>externref</code> is going to leak for the whole extent of the program. So I don't think we can actually do this.</p>\n<p>Is <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9ffc9e67f6c19b8a3a80a4bd31aac8a08e628d3f/crates/wasmtime/src/runtime/gc/enabled/rooting.rs#L409\">reading a vec's length</a> and then later <a href=\"https://github.com/bytecodealliance/wasmtime/blob/9ffc9e67f6c19b8a3a80a4bd31aac8a08e628d3f/crates/wasmtime/src/runtime/gc/enabled/rooting.rs#L420-L427\">a well-predicted compare-and-branch to out-of-line code</a> really that expensive?</p>\n<p>[^0]: Maybe I then re-entrantly call some other Wasm export, giving it that <code>externref</code>. Doesn't really matter <em>why</em> I did it, just that I did it.</p>\n</blockquote>",
        "id": 444777956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718394940
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#pullrequestreview-2119320805\">PR review</a>.</p>",
        "id": 444791785,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718400011
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#discussion_r1640365309\">PR review comment</a>:</p>\n<blockquote>\n<p>My thinking was that it's still safe in that case, right? It means it'll be rooted long but a manual rooting scope can always be created to avoid that.</p>\n<p>Perf-wise this was locally showing a 40% perf improvement but I cannot reproduce it against the latest <code>main</code>. Turns out that I was testing before #8806 landed, and now that that PR has landed this PR is largely perf-neutral. The benchmark here is pretty micro-benchmark-y but at the same time I think it's a nice feature of Wasmtime that the overhead for calling the host is as low as possible, so cleaning up the assembly as much as we can I think is reasonable.</p>\n</blockquote>",
        "id": 444791786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718400011
    },
    {
        "content": "<p>alexcrichton edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#discussion_r1640365309\">PR review comment</a>.</p>",
        "id": 444792108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718400196
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#pullrequestreview-2119340911\">PR review</a>.</p>",
        "id": 444792671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718400468
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#discussion_r1640370813\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>it's a nice feature of Wasmtime that the overhead for calling the host is as low as possible, so cleaning up the assembly as much as we can I think is reasonable.</p>\n</blockquote>\n<p>Agreed in general.</p>\n<blockquote>\n<p>My thinking was that it's still safe in that case, right? It means it'll be rooted longer but a manual rooting scope can always be created to avoid that.</p>\n</blockquote>\n<p>It is memory safe, yes, but it is a fairly big footgun, IMO. At minimum, we would need to be very clear about when a <code>Caller</code> is vs. isn't a rooting scope in our existing docs around rooting and scopes (I think on <code>Rooted</code>? maybe on <code>RootScope</code>? I forget)</p>\n<p>But if this isn't a perf win anymore, then is it really worth adding the footgun?</p>\n</blockquote>",
        "id": 444792673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718400468
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#pullrequestreview-2121608663\">PR review</a>.</p>",
        "id": 445024259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718575187
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811#discussion_r1641991044\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok I think that's reasonable yeah. I'll close this and we can revisit if it ever becomes necessary but that seems unlikely too.</p>\n</blockquote>",
        "id": 445024263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718575188
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8811\">PR #8811</a>.</p>",
        "id": 445024276,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1718575192
    }
]