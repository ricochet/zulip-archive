[
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a>, <a href=\"https://github.com/fitzgen\">fitzgen</a>, <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/jlb6740\">jlb6740</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a>.</p>",
        "id": 217450140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901621
    },
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> from <code>bench-api</code> to <code>main</code>:</p>\n<blockquote>\n<p>The new crate introduced here, <code>wasmtime-bench-api</code>, creates a shared library, e.g. <code>wasmtime_bench_api.so</code>, for executing Wasm benchmarks using Wasmtime. It allows us to measure several phases separately by exposing <code>engine_compile_module</code>, <code>engine_instantiate_module</code>, and <code>engine_execute_module</code>, which pass around an opaque pointer to the internally initialized state. This state is initialized and freed by <code>engine_create</code> and <code>engine_free</code>, respectively. The API also introduces a way of passing in functions to satisfy the <code>\"bench\" \"start\"</code> and <code>\"bench\" \"end\"</code> symbols that we expect Wasm benchmarks to import. The API is exposed in a C-compatible way so that we can dynamically load it (carefully) in our benchmark runner.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217450141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901621
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a>, <a href=\"https://github.com/fitzgen\">fitzgen</a>, <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/jlb6740\">jlb6740</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a>.</p>",
        "id": 217450142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901621
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a>, <a href=\"https://github.com/fitzgen\">fitzgen</a>, <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/jlb6740\">jlb6740</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a>.</p>",
        "id": 217450143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901621
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a>, <a href=\"https://github.com/fitzgen\">fitzgen</a>, <a href=\"https://github.com/cfallin\">cfallin</a> and <a href=\"https://github.com/jlb6740\">jlb6740</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a>.</p>",
        "id": 217450144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901621
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> from <code>bench-api</code> to <code>main</code>:</p>\n<blockquote>\n<p>The new crate introduced here, <code>wasmtime-bench-api</code>, creates a shared library, e.g. <code>wasmtime_bench_api.so</code>, for executing Wasm benchmarks using Wasmtime. It allows us to measure several phases separately by exposing <code>engine_compile_module</code>, <code>engine_instantiate_module</code>, and <code>engine_execute_module</code>, which pass around an opaque pointer to the internally initialized state. This state is initialized and freed by <code>engine_create</code> and <code>engine_free</code>, respectively. The API also introduces a way of passing in functions to satisfy the <code>\"bench\" \"start\"</code> and <code>\"bench\" \"end\"</code> symbols that we expect Wasm benchmarks to import. The API is exposed in a C-compatible way so that we can dynamically load it (carefully) in our benchmark runner.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217450195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901653
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437#pullrequestreview-535731055\">PR Review</a>.</p>",
        "id": 217450383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901749
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437#discussion_r527935374\">PR Review Comment</a>:</p>\n<blockquote>\n<p>nit: missing trailing newline</p>\n</blockquote>",
        "id": 217450385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605901749
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> from <code>bench-api</code> to <code>main</code>:</p>\n<blockquote>\n<p>The new crate introduced here, <code>wasmtime-bench-api</code>, creates a shared library, e.g. <code>wasmtime_bench_api.so</code>, for executing Wasm benchmarks using Wasmtime. It allows us to measure several phases separately by exposing <code>engine_compile_module</code>, <code>engine_instantiate_module</code>, and <code>engine_execute_module</code>, which pass around an opaque pointer to the internally initialized state. This state is initialized and freed by <code>engine_create</code> and <code>engine_free</code>, respectively. The API also introduces a way of passing in functions to satisfy the <code>\"bench\" \"start\"</code> and <code>\"bench\" \"end\"</code> symbols that we expect Wasm benchmarks to import. The API is exposed in a C-compatible way so that we can dynamically load it (carefully) in our benchmark runner.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217451165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605902151
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> from <code>bench-api</code> to <code>main</code>:</p>\n<blockquote>\n<p>The new crate introduced here, <code>wasmtime-bench-api</code>, creates a shared library, e.g. <code>wasmtime_bench_api.so</code>, for executing Wasm benchmarks using Wasmtime. It allows us to measure several phases separately by exposing <code>engine_compile_module</code>, <code>engine_instantiate_module</code>, and <code>engine_execute_module</code>, which pass around an opaque pointer to the internally initialized state. This state is initialized and freed by <code>engine_create</code> and <code>engine_free</code>, respectively. The API also introduces a way of passing in functions to satisfy the <code>\"bench\" \"start\"</code> and <code>\"bench\" \"end\"</code> symbols that we expect Wasm benchmarks to import. The API is exposed in a C-compatible way so that we can dynamically load it (carefully) in our benchmark runner.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 217451309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605902190
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437#pullrequestreview-536777660\">PR Review</a>.</p>",
        "id": 217678292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606162927
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437#discussion_r528941910\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I don't think we need to actually have a new type here. We should be able to pass <code>*mut EngineState</code> out and expect that callers won't know how to access its fields or anything.</p>\n</blockquote>",
        "id": 217678293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606162927
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437#pullrequestreview-536777660\">PR Review</a>.</p>",
        "id": 217678294,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606162927
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437#discussion_r528968747\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Worth noting in a comment that if we ever want to measure more than one instantiation per process, we will probably want to create a new store for each instantiation.</p>\n</blockquote>",
        "id": 217678295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606162927
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> from <code>bench-api</code> to <code>main</code>:</p>\n<blockquote>\n<p>The new crate introduced here, <code>wasmtime-bench-api</code>, creates a shared library, e.g. <code>wasmtime_bench_api.so</code>, for executing Wasm benchmarks using Wasmtime. It allows us to measure several phases separately by exposing <code>engine_compile_module</code>, <code>engine_instantiate_module</code>, and <code>engine_execute_module</code>, which pass around an opaque pointer to the internally initialized state. This state is initialized and freed by <code>engine_create</code> and <code>engine_free</code>, respectively. The API also introduces a way of passing in functions to satisfy the <code>\"bench\" \"start\"</code> and <code>\"bench\" \"end\"</code> symbols that we expect Wasm benchmarks to import. The API is exposed in a C-compatible way so that we can dynamically load it (carefully) in our benchmark runner.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 218247477,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606710066
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> from <code>bench-api</code> to <code>main</code>:</p>\n<blockquote>\n<p>The new crate introduced here, <code>wasmtime-bench-api</code>, creates a shared library, e.g. <code>wasmtime_bench_api.so</code>, for executing Wasm benchmarks using Wasmtime. It allows us to measure several phases separately by exposing <code>engine_compile_module</code>, <code>engine_instantiate_module</code>, and <code>engine_execute_module</code>, which pass around an opaque pointer to the internally initialized state. This state is initialized and freed by <code>engine_create</code> and <code>engine_free</code>, respectively. The API also introduces a way of passing in functions to satisfy the <code>\"bench\" \"start\"</code> and <code>\"bench\" \"end\"</code> symbols that we expect Wasm benchmarks to import. The API is exposed in a C-compatible way so that we can dynamically load it (carefully) in our benchmark runner.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 219266520,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607463593
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> from <code>bench-api</code> to <code>main</code>:</p>\n<blockquote>\n<p>The new crate introduced here, <code>wasmtime-bench-api</code>, creates a shared library, e.g. <code>wasmtime_bench_api.so</code>, for executing Wasm benchmarks using Wasmtime. It allows us to measure several phases separately by exposing <code>engine_compile_module</code>, <code>engine_instantiate_module</code>, and <code>engine_execute_module</code>, which pass around an opaque pointer to the internally initialized state. This state is initialized and freed by <code>engine_create</code> and <code>engine_free</code>, respectively. The API also introduces a way of passing in functions to satisfy the <code>\"bench\" \"start\"</code> and <code>\"bench\" \"end\"</code> symbols that we expect Wasm benchmarks to import. The API is exposed in a C-compatible way so that we can dynamically load it (carefully) in our benchmark runner.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 219546292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607641339
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437#pullrequestreview-552709921\">PR Review</a>.</p>",
        "id": 220015085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608054140
    },
    {
        "content": "<p><strong>fitzgen</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a> as ready for review.</p>",
        "id": 220015094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608054145
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2437\">PR #2437</a>.</p>",
        "id": 220015134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608054169
    }
]