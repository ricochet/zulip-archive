[
    {
        "content": "<p>julian-seward1 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<p>The names <code>PrimaryMap</code> and <code>SecondaryMap</code> are misleading and un-descriptive.  For the benefit of readers and maintainers of Cranelift, and especially newcomers, I propose we give them better names.</p>\n<ul>\n<li>\n<p>The <code>Map</code> component is misleading.  Neither type possesses what I think of as the primary characteristic of a map (in the sense of Rust <code>HashMap</code>, libstdc++ <code>map</code>, etc), which is O(1 + epsilon) access time for sparse keys.  The new names shouldn't include the text <code>Map</code>.</p>\n</li>\n<li>\n<p>These types are in fact vectors, and you need to know that to use them reasonably (meaning, they only work well for dense zero-based key ranges) but there's nothing in the name to suggest that.</p>\n</li>\n<li>\n<p><code>Primary</code> and <code>Secondary</code> suggest some relationship between individual maps which simply doesn't exist.  This confused me for some time when I first came to the code base.  I thought: how do I find all the <code>SecondaryMaps</code> associated with a <code>PrimaryMap</code>?  Are they connected via some Rust type system magic?  Or is it done at run time; if so is there some registry I should consult?  This is of course totally irrelevant; there is no such connection.</p>\n</li>\n</ul>\n<p>I suggest to rename <code>PrimaryMap</code> to <code>FixedSizeVec</code> and <code>SecondaryMap</code> to <code>AutoResizeVec</code>:</p>\n<ul>\n<li>\n<p>it doesn't claim they are maps, which they aren't</p>\n</li>\n<li>\n<p>it does claim they are vectors, which they are</p>\n</li>\n<li>\n<p>it doesn't claim any relationship between them, which there isn't</p>\n</li>\n<li>\n<p>it correctly summarises the essential difference between them: one is fixed size, the other resizes (upwards) on demand.</p>\n</li>\n</ul>\n<p>I believe that accurate naming is important, and this would be a small but important step in making Cranelift easier to understand.  If there is general support I will happily prepare a patch.</p>\n</blockquote>",
        "id": 195019567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587619176
    },
    {
        "content": "<p>julian-seward1 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<p>The names <code>PrimaryMap</code> and <code>SecondaryMap</code> are misleading and un-descriptive.  For the benefit of readers and maintainers of Cranelift, and especially newcomers, I propose we give them better names.</p>\n<ul>\n<li>\n<p>The <code>Map</code> component is misleading.  Neither type possesses what I think of as the primary characteristic of a map (in the sense of Rust <code>HashMap</code>, libstdc++ <code>map</code>, etc), which is O(1 + epsilon) access time for sparse keys.  The new names shouldn't include the text <code>Map</code>.</p>\n</li>\n<li>\n<p>These types are in fact vectors, and you need to know that to use them reasonably (meaning, they only work well for dense zero-based key ranges) but there's nothing in the name to suggest that.</p>\n</li>\n<li>\n<p><code>Primary</code> and <code>Secondary</code> suggest some relationship between individual maps which simply doesn't exist.  This confused me for some time when I first came to the code base.  I thought: how do I find all the <code>SecondaryMaps</code> associated with a <code>PrimaryMap</code>?  Are they connected via some Rust type system magic?  Or is it done at run time; if so is there some registry I should consult?  This is of course totally irrelevant; there is no such connection.</p>\n</li>\n</ul>\n<p>I suggest to rename <code>PrimaryMap</code> to <code>FixedSizeVec</code> and <code>SecondaryMap</code> to <code>AutoResizeVec</code>:</p>\n<ul>\n<li>\n<p>it doesn't claim they are maps, which they aren't</p>\n</li>\n<li>\n<p>it does claim they are vectors, which they are</p>\n</li>\n<li>\n<p>it doesn't claim any relationship between them, which there isn't</p>\n</li>\n<li>\n<p>it correctly summarises the essential difference between them: one is fixed size, the other resizes (upwards) on demand.</p>\n</li>\n</ul>\n<p>I believe that accurate naming is important, and this would be a small but important step in making Cranelift easier to understand.  If there is general support I will happily prepare a patch.</p>\n</blockquote>",
        "id": 195019621,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587619237
    },
    {
        "content": "<p>julian-seward1 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618186488\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618186488\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<p>The change could be done incrementally, so as to avoid massive merge conflicts.  First create the new names as (<code>type</code>) aliases of the old ones.  Then we can incrementally move smaller sections of the code base to the new names, and remove the old ones when all sections have been changed.</p>\n</blockquote>",
        "id": 195019925,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587619703
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618286768\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618286768\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<blockquote>\n<p>it doesn't claim they are maps, which they aren't</p>\n</blockquote>\n<p>It maps from a key (the index) to a value.</p>\n<blockquote>\n<p>Primary and Secondary suggest some relationship between individual maps which simply doesn't exist.</p>\n</blockquote>\n<p>To me a relationship does exists: A <code>PrimaryMap</code> contains entity definitions, while a <code>SecundaryMap</code> contains metadata about (some of) those definitions.</p>\n<blockquote>\n<p>I thought: how do I find all the SecondaryMaps associated with a PrimaryMap?</p>\n</blockquote>\n<p>Look at all <code>SecundaryMap</code>s with the same index type as the <code>PrimaryMap</code>.</p>\n</blockquote>",
        "id": 195035773,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587633598
    },
    {
        "content": "<p>froydnj <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618373866\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618373866\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<blockquote>\n<p>To me a relationship does exists: A <code>PrimaryMap</code> contains entity definitions, while a <code>SecundaryMap</code> contains metadata about (some of) those definitions.</p>\n</blockquote>\n<p>I also found this naming convention confusing when trying to figure out the codebase.  Maybe <code>EntityMap</code> and <code>AttributeMap</code> (or something like it) would be more evocative names, then?</p>\n</blockquote>",
        "id": 195052964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587644943
    },
    {
        "content": "<p>julian-seward1 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618386891\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618386891\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I thought: how do I find all the SecondaryMaps associated with a PrimaryMap?<br>\nLook at all <code>SecundaryMap</code>s with the same index type as the <code>PrimaryMap</code>.</p>\n</blockquote>\n</blockquote>\n<p>But that's mere programming convention, right?  There's no particular reason why a <code>PrimaryMap&lt;K, U&gt;</code> should have any particular relationship with some other <code>SecondaryMap&lt;K, V&gt;</code>.  It might, but it might not.  If there is to be a relationship, that should be shown through the variable names, not the type names.</p>\n</blockquote>",
        "id": 195055992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587646568
    },
    {
        "content": "<p>julian-seward1 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618386891\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618386891\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I thought: how do I find all the SecondaryMaps associated with a PrimaryMap?<br>\nLook at all <code>SecundaryMap</code>s with the same index type as the <code>PrimaryMap</code>.</p>\n</blockquote>\n</blockquote>\n<p>But that's mere programming convention, right?  There's no particular reason why a <code>PrimaryMap&lt;K, U&gt;</code> should have a relationship with some other <code>SecondaryMap&lt;K, V&gt;</code>.  It might, but it might not.  If there is to be a relationship, that should be shown through the variable names, not the type names.</p>\n</blockquote>",
        "id": 195056035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587646593
    },
    {
        "content": "<p>julian-seward1 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618386891\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618386891\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>I thought: how do I find all the SecondaryMaps associated with a PrimaryMap?<br>\nLook at all <code>SecundaryMap</code>s with the same index type as the <code>PrimaryMap</code>.</p>\n</blockquote>\n</blockquote>\n<p>But that's really something that just happens to mostly be true inside small sections of code, maybe a function or a group of functions, right?  There's no particular reason why a <code>PrimaryMap&lt;K, U&gt;</code> should in general be interpreted as having a relationship with some other <code>SecondaryMap&lt;K, V&gt;</code>.  It might, but it might not.  If there is to be a relationship, that should be shown through the variable names, not the type names.</p>\n</blockquote>",
        "id": 195056697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587646910
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618459593\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618459593\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<p>The way we use <code>PrimaryMap</code>, we give it a distinct key type which identifies a conceptual index space. It isn't an arbitrary type that unrelated code might happen to use; it's a \"newtype\" created for a particular purpose which ensures that you don't accidentally use an index meant for one index space in another.</p>\n<p>For example, anywhere in Cranelift you see a <code>Value</code>, it's related to <code>Function</code>'s <code>values</code> <code>PrimaryMap</code>. We don't always make this explicit in variable names, because it's clear from the type. Similarly, anywhere you see a <code>SecondaryMap&lt;Value, Foo&gt;</code>, it's associating a <code>Foo</code> with each value in a function. The auto-resize behavior is almost an implementation detail which we don't currently have a way to fully hide -- we don't want <code>PrimaryMap</code>s to have to maintain lists of associated <code>SecondaryMap</code>s to update when they resize.</p>\n<p><code>EntityMap</code> and <code>AttributeMap</code> would also make sense to me.</p>\n</blockquote>",
        "id": 195076986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587655247
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618866895\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583#issuecomment-618866895\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1583\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1583\">Issue #1583</a>:</p>\n<blockquote>\n<p>I like <code>EntityMap</code> and <code>AttributeMap</code> too. I think the original naming may come from the entity-component-system world, where \"secondary\" data structures hold external information about entities, as Dan describes.</p>\n<p>(And a Vector is effectively one way to implement a Map of integer indexes to something, so the Map component in the name seems to make sense here.)</p>\n</blockquote>",
        "id": 195156620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587715403
    }
]