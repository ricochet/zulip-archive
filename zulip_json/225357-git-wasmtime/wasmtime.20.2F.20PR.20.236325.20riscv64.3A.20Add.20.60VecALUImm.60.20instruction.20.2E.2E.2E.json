[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325\">PR #6325</a> from <code>afonso360:riscv-vec-imm</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR adds a new vector instruction format <code>Vector+Imm</code>. The encoding is exactly the same as <code>v*.vv</code> but the second register is instead a 5 bit field. This immediate is signed for most ops, but unsigned for some.</p>\n</blockquote>",
        "id": 355158800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683035686
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325\">PR #6325</a>.</p>",
        "id": 355158808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683035687
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325\">PR #6325</a>.</p>",
        "id": 355158809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683035688
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#pullrequestreview-1409556184\">PR review</a>.</p>",
        "id": 355575724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683137866
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#pullrequestreview-1409556184\">PR review</a>.</p>",
        "id": 355575725,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683137867
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1182843098\">PR review comment</a>:</p>\n<blockquote>\n<p>Should this do <code>i8::try_from(arg0 as i64).ok()?</code>?</p>\n<p>Otherwise I think <code>i64::MIN</code> would accidentally get truncated to 0?</p>\n</blockquote>",
        "id": 355575726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683137867
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1182847168\">PR review comment</a>:</p>\n<blockquote>\n<p>The mask here shouldn't be required, right? Or otherwise this would be ok to perhaps <code>debug_assert!</code> that the masked-out bits are all not set?</p>\n<p>(similar for <code>funct6</code> above too maybe?)</p>\n</blockquote>",
        "id": 355575727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683137867
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184091526\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh I see now my thoughts are very much related to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6324#discussion_r1182744349\">https://github.com/bytecodealliance/wasmtime/pull/6324#discussion_r1182744349</a></p>\n</blockquote>",
        "id": 355575728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683137867
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1182844535\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't know much about RISC-V, but should this <code>AluOp</code> be different than <code>VecAluOpRRR</code> or the same? The single data point of <code>Vadd</code> has the encodings the same, but I'm not sure if the pattern holds up elsewhere. </p>\n</blockquote>",
        "id": 355575729,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683137867
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1182849496\">PR review comment</a>:</p>\n<blockquote>\n<p>My curiosity has been piqued if you're willing to oblige -- according <a href=\"https://github.com/riscv/riscv-v-spec/blob/master/inst-table.adoc\">to this doc</a> I see a bunch of V/X/I columns but I'm not sure how that translates to the encoding. Is there a different document that explains how these columns relate to the encoding?</p>\n</blockquote>",
        "id": 355575730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683137867
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184134793\">PR review comment</a>:</p>\n<blockquote>\n<p>That table does not seem to be explained anywhere, which is weird  the closest thing is <a href=\"https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#10-vector-arithmetic-instruction-formats\">10. Vector Arithmetic Instruction Formats</a> which only really explains the format, but not the encoding in that table. The way I understand it is the following.</p>\n<p>There are 3 columns, which correspond to the 3 columns for the minor opcodes at the top (i.e. OPIVV, OPIVX, OPMVX, etc..). The minor opcode corresponds to the funct3 field. (The exact encoding is specified <a href=\"https://github.com/riscv/riscv-v-spec/blob/master/v-spec.adoc#101-vector-arithmetic-instruction-encoding\">here</a>)</p>\n<p>The minor opcodes correspond to the operands that instruction takes. <code>OPIVV</code> is for Vector/Vector instructions (i.e. <code>vadd.vv</code>), <code>OPIVX</code> is for Vector/X Register instructions (i.e. <code>vadd.vx</code>) and <code>OPIVI</code> is for Vector/Immediate instruction (i.e. <code>vadd.vi</code>) which is what is implemented in this PR.</p>\n<p>I'm only planning on having 2 instruction formats, since <code>OP*VV</code>,<code>OP*VX</code> and <code>OPFVF</code> can share the same instruction format in cranelift. Just with an assert that we are using the correct regclass. <code>OPIVI</code> is the only special one here.</p>\n<p>The big table displays the funct6 field. Take for example the <code>vrsub</code> instruction. It is in the leftmost column, and only has <code>X</code> and <code>I</code> formats. So we know that it only takes the minor opcode formats of <code>OPIVX</code> and <code>OPIVI</code>. <code>vrsub</code> itself has a funct6 of <code>0b000011</code> with both of those minor opcodes.</p>\n<p>There are additional encoding spaces, at the bottom, but my understanding is that these are all OPIVI instructions and that encoding gets put in the immediate field (not 100% sure on this yet).<br>\n</p>\n</blockquote>",
        "id": 355585598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683140623
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184134793\">PR review comment</a>.</p>",
        "id": 355585640,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683140639
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184136954\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I probably don't need the masking everywhere. I think I might take the approach that @jameysharp is suggesting and switch to <code>debug_assert</code> and try to figure out how to get better type safety in the future.</p>\n</blockquote>",
        "id": 355586134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683140773
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184136954\">PR review comment</a>.</p>",
        "id": 355586179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683140788
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184139389\">PR review comment</a>:</p>\n<blockquote>\n<p>Well, It is the same, but not all Opcodes work on both formats. <code>vadd</code> works for both, but <code>vsub</code> does not have a <code>vsub.vi</code> format. It would be nice if we could share the funct6 mapping somehow though since it is exactly the same on both.</p>\n</blockquote>",
        "id": 355586629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683140945
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184139389\">PR review comment</a>.</p>",
        "id": 355586684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683140962
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184134793\">PR review comment</a>.</p>",
        "id": 355586922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683141026
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184139389\">PR review comment</a>.</p>",
        "id": 355602790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683146162
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184139389\">PR review comment</a>.</p>",
        "id": 355602948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683146218
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184139389\">PR review comment</a>.</p>",
        "id": 355603376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683146380
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184287551\">PR review comment</a>:</p>\n<blockquote>\n<p>I've now put these into a <code>VecOpCategory</code> struct so that their encoding is somewhat centralized.</p>\n</blockquote>",
        "id": 355608416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683148219
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325\">PR #6325</a>.</p>",
        "id": 355608446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683148234
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325\">PR #6325</a>.</p>",
        "id": 355608593,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683148319
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1184287551\">PR review comment</a>.</p>",
        "id": 355609765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683148739
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325\">PR #6325</a>.</p>",
        "id": 355610935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683149172
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#discussion_r1185466949\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah ok makes sense, in that case sounds good to me to have a minor amount of duplication <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 355875634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683230990
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325#pullrequestreview-1413839786\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for taking the time to explain! That all sounds good to me and everything looks good to me as well <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 355876303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683231207
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6325\">PR #6325</a>.</p>",
        "id": 355896510,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683239477
    }
]