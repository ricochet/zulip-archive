[
    {
        "content": "<p>haraldh opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:<br>\n[ ] Windows support<br>\n[ ] Put the <code>ListenFd</code> feature behind a cli options<br>\n[ ] Document the <code>ListenFd</code> feature</p>\n</blockquote>",
        "id": 268845569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642773414
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:<br>\n[ ] Windows support<br>\n[ ] Put the <code>ListenFd</code> feature behind a cli option<br>\n[ ] Document the <code>ListenFd</code> feature</p>\n</blockquote>",
        "id": 268846242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642773666
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#discussion_r789707608\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this shouldn't be done by default. I think it should only give access if a commandline argument is passed to enable it. In addition it would be nice to have a commandline argument to manually specify ports to listen to without having to use systemd or some other external program to create the socket.</p>\n</blockquote>",
        "id": 268850302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775636
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#pullrequestreview-859616931\">PR review</a>.</p>",
        "id": 268850303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775636
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] Windows support</li>\n<li>[ ] Put the <code>ListenFd</code> feature behind a cli option</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n</ul>\n</blockquote>",
        "id": 268850631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775779
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#pullrequestreview-859621093\">PR review</a>.</p>",
        "id": 268850712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775838
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#discussion_r789710370\">PR review comment</a>:</p>\n<blockquote>\n<p>See the <code>TODO</code> section in the PR comment :)</p>\n</blockquote>",
        "id": 268850713,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775839
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] Windows support</li>\n<li>[ ] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[ ] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n</ul>\n</blockquote>",
        "id": 268850863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775906
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#pullrequestreview-859623630\">PR review</a>.</p>",
        "id": 268850974,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775965
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#discussion_r789712103\">PR review comment</a>:</p>\n<blockquote>\n<p>Happy to receive PRs to this draft :) Will add you as a co-author</p>\n</blockquote>",
        "id": 268850975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642775965
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#pullrequestreview-859624705\">PR review</a>.</p>",
        "id": 268851098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642776018
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#discussion_r789712860\">PR review comment</a>:</p>\n<blockquote>\n<p>Right. I honestly only looked at the source and barely at the description <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> </p>\n</blockquote>",
        "id": 268851099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642776018
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] Windows support</li>\n<li>[ ] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[ ] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 268852568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1642776695
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269256760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643117664
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269259151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643118786
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[ ] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[ ] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 269259173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643118800
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[x] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[ ] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 269259174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643118802
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269261130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643119677
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269267531,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643122377
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269269266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643123091
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[ ] Tokio implementation</li>\n<li>[x] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[ ] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 269273495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643124756
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269283635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643128592
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269387281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643192083
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269427455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643210275
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[x] Tokio implementation</li>\n<li>[x] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[ ] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 269427877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643210424
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[x] Tokio implementation</li>\n<li>[x] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[x] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 269427882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643210426
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[x] Tokio implementation</li>\n<li>[x] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[x] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Document the <code>ListenFd</code> feature</li>\n<li>[ ] Non-busy polling on Windows</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 269428213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643210537
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[x] Tokio implementation</li>\n<li>[x] Put the <code>ListenFd</code> feature behind a CLI option</li>\n<li>[x] Add CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Non-busy polling on Windows</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 269428444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643210627
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#pullrequestreview-863734707\">PR review</a>.</p>",
        "id": 269432160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643212072
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#discussion_r792777785\">PR review comment</a>:</p>\n<blockquote>\n<p>Wouldn't it make more sense to add a new preopen type returned by <code>fd_prestat_get</code> rather than using env vars? Also won't the current code conflict with the fds for pre-opened dirs?</p>\n</blockquote>",
        "id": 269432161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643212072
    },
    {
        "content": "<p>haraldh submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#pullrequestreview-863796686\">PR review</a>.</p>",
        "id": 269440127,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643214719
    },
    {
        "content": "<p>haraldh created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711#discussion_r792823067\">PR review comment</a>:</p>\n<blockquote>\n<p>My goal was to mimic the listenfd behavior 1:1 so you could reuse already written code.</p>\n<p>The preopened dirs are inserted later on, IIRC.. I can recheck again.</p>\n</blockquote>",
        "id": 269440128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643214719
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269441466,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643215159
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269447033,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643217253
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269545119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643275844
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[x] Tokio implementation</li>\n<li>[ ] Followup PR with CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Non-busy polling on Windows</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 269545202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643275892
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[x] Windows support</li>\n<li>[x] Tokio implementation</li>\n<li>[ ] Followup PR with CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Wasi definition of <code>Preopentype</code> for sockets (listener and stream, tcp and unix)</li>\n<li>[ ] Non-busy polling on Windows</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 269545388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643275975
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>The split of <code>listen</code> and <code>stream</code> modules where mainly done because of the difference in <code>::num_ready_bytes()</code>.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] Followup PR with CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Wasi definition of <code>Preopentype</code> for sockets (listener and stream, tcp and unix)</li>\n<li>[ ] Non-busy polling on Windows</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 269545467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643276013
    },
    {
        "content": "<p>haraldh updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>.</p>",
        "id": 269551333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643279133
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] Followup PR with CLI option to specify <code>ListenFd</code>s</li>\n<li>[ ] Wasi definition of <code>Preopentype</code> for sockets (listener and stream, tcp and unix)</li>\n<li>[ ] Non-busy polling on Windows</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 269552528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643279780
    },
    {
        "content": "<p>haraldh edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3711\">PR #3711</a> from <code>wasmtime_sock_accept</code> to <code>main</code>:</p>\n<blockquote>\n<p>Together with <a href=\"https://github.com/rust-lang/rust/pull/93158\">https://github.com/rust-lang/rust/pull/93158</a> this enables basic networking in rust.</p>\n<p>TODO:</p>\n<ul>\n<li>[ ] Test cases</li>\n<li>[ ] Discussion of <code>SocketAddr</code> return value for <code>::accept()</code> in the <a href=\"https://github.com/rust-lang/rust/pull/93158\">rustsrc PR</a></li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">((</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">TcpStream</span>::<span class=\"n\">from_inner</span><span class=\"p\">(</span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Socket</span>::<span class=\"n\">from_raw_fd</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">}),</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"c1\">// WASI has no concept of SocketAddr yet</span>\n<span class=\"w\">            </span><span class=\"c1\">// return an unspecified IPv4Addr</span>\n<span class=\"w\">            </span><span class=\"n\">SocketAddr</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Ipv4Addr</span>::<span class=\"n\">UNSPECIFIED</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">(),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Followup Todo:\n* [ ] PR with CLI option to specify <code>ListenFd</code>s\n* [ ] Wasi definition of <code>Preopentype</code> for sockets (listener and stream, tcp and unix)\n* [ ] Non-busy polling on Windows<br>\n</p>\n</blockquote>",
        "id": 269561419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1643284276
    }
]