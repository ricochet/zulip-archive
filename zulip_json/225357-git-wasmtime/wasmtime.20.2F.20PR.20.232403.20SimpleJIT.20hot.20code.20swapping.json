[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 216509802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605206327
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 216509905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605206394
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 216511042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605206992
    },
    {
        "content": "<p><strong>pchickey</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a>.</p>",
        "id": 216512897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605207780
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#pullrequestreview-529480193\">PR Review</a>.</p>",
        "id": 216525953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605213978
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#pullrequestreview-529480193\">PR Review</a>.</p>",
        "id": 216525955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605213978
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#discussion_r522412829\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm not clear on how 16 bytes was arrived at, and how platform specific this is - is it due to 16-byte alignment on x86_64? does some other sequence of instructions have to fit in here besides the plt_val at line 179?</p>\n</blockquote>",
        "id": 216525956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605213978
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#discussion_r522412829\">PR Review Comment</a>.</p>",
        "id": 216526006,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605214004
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#pullrequestreview-529499595\">PR Review</a>.</p>",
        "id": 216529020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605215409
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#discussion_r522428142\">PR Review Comment</a>:</p>\n<blockquote>\n<p>In the future I may extend it to be more like the lazy symbol binding used by ELF. In that case the GOT entry will initially point just after the jump instruction in the PLT. After this jump instruction it pushes a specific value to the stack depending on which PLT entry it is and then it jumps to a function common between all entries in a module. This function then resolves the symbol. This avoids having to create a new wrapper function for each lazily compiled function.</p>\n</blockquote>",
        "id": 216529022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605215409
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 216579504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605256146
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#pullrequestreview-531597612\">PR Review</a>.</p>",
        "id": 216912662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605551657
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#discussion_r524486973\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That makes sense. a comment to this effect would be appreciated :) </p>\n</blockquote>",
        "id": 216912664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605551657
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403#pullrequestreview-532904718\">PR Review</a>.</p>",
        "id": 217078901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605656704
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 218729758,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607017767
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 218730865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607018232
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 218732401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607018874
    },
    {
        "content": "<p>bjorn3 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a> from <code>simplejit_hot_swapping</code> to <code>main</code>:</p>\n<blockquote>\n<p>This makes it possible to change functions when using SimpleJIT without having to recompile everything or even restart the jitted code. When a changed function is currently on the stack, the old version will be returned to, but all new calls will be redirected to the new version. It is not yet possible to swap data objects.</p>\n<p>This is a prerequisite of <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087\">https://github.com/bjorn3/rustc_codegen_cranelift/issues/1087</a>.</p>\n<p>I have tested this PR by implementing lazy compilation in cg_clif as suggested by @flodiebold in <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798\">https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/cranelift.20backend.20work/near/187645798</a> in February.</p>\n<p>r? @pchickey (By the way, is it deliberate that you are marked as unavailable on zulip? I sent you a PM)<br>\ncc <a href=\"#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/hot.20code.20swapping.20for.20simplejit/near/216403611</a></p>\n</blockquote>",
        "id": 218734508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607019909
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2403\">PR #2403</a>.</p>",
        "id": 218757834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607031398
    }
]