[
    {
        "content": "<p>Berrysoft opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>As far as I know, wasmer can target Windows ARM64, and so do cranelift.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f242975c49385edafe4f72dfa5f0ff6aae23eda3/crates/runtime/src/traphandlers/windows.rs#L54-L62\">https://github.com/bytecodealliance/wasmtime/blob/f242975c49385edafe4f72dfa5f0ff6aae23eda3/crates/runtime/src/traphandlers/windows.rs#L54-L62</a></p>\n</blockquote>",
        "id": 289332576,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657636295
    },
    {
        "content": "<p>alexcrichton labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>As far as I know, wasmer can target Windows ARM64, and so do cranelift.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f242975c49385edafe4f72dfa5f0ff6aae23eda3/crates/runtime/src/traphandlers/windows.rs#L54-L62\">https://github.com/bytecodealliance/wasmtime/blob/f242975c49385edafe4f72dfa5f0ff6aae23eda3/crates/runtime/src/traphandlers/windows.rs#L54-L62</a></p>\n</blockquote>",
        "id": 289333836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657636744
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1181844942\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>This is not currently a supported platform, but unlike <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4434\">https://github.com/bytecodealliance/wasmtime/issues/4434</a> Cranelift does have an AArch64 backend. I don't believe anyone's tested the Windows support of the backend, however. If you'd like feel free to test locally and we can review patches.</p>\n</blockquote>",
        "id": 289333940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1657636789
    },
    {
        "content": "<p>kpreisser <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1261917786\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Hi there! Are there plans to include Windows ARM64 (AArch64) as supported platform im Wasmtime?</p>\n<p>We plan to integrate <code>wasmtime-dotnet</code> into an application that we currently ship for Windows x64/x86/Arm64 and Linux x64/Arm64/Arm32. I understand that the 32-bit archs are not supported by wasmtime, but it would be great to have Windows ARM64 support.</p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 301388216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664438854
    },
    {
        "content": "<p>kpreisser edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1261917786\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Hi there! Are there plans to include Windows ARM64 (AArch64) as supported platform im Wasmtime?</p>\n<p>We plan to integrate <code>wasmtime-dotnet</code> into an application that we currently ship for Windows x64/x86/Arm64 and Linux x64/Arm64/Arm32. I understand that the 32-bit archs are not supported by wasmtime/cranelift, but it would be great to have Windows ARM64 support.</p>\n<p>Thank you!</p>\n</blockquote>",
        "id": 301422838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664452439
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1262644208\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>@kpreisser I would say we'd be very interested in contributions for this support, but no one currently involved with the project has the time to work on it, as far as I'm aware.</p>\n<p>I actually don't know how much work it would be -- does Windows/aarch64 use a different calling convention, like fastcall on x86-64? It could be the case that it almost works already and just needs a few config changes; I don't know.</p>\n<p>There's also the question of testing in CI: we have Windows/x86-64 runners, but does Windows have a \"reverse emulator\" that can run aarch64 <code>.exe</code>s on x86-64, like it can the other way around? If not, I suppose we could treat this the same as macOS/aarch64: support in-tree, but not tested so best-effort.</p>\n</blockquote>",
        "id": 301502812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664475298
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1262652184\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>In addition to what Chris said, check out our <a href=\"https://docs.wasmtime.dev/stability-tiers.html\">tiers of support</a>. If someone can get Windows/aarch64 tested in CI then it would be most of the way to tier 2 support. At that point, other contributors can take care of small changes affecting the new target and rely on CI to catch mistakes. Then we just need someone to be available to answer questions about the target and help with occasional bigger changes.</p>\n</blockquote>",
        "id": 301504132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664475721
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1262674224\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Windows on AArch64 has two possible abi's. The first is I believe AAPCS compatible except with SEH instead of DWARF based unwinding tables. The second is the \"emulator compatible\" abi, which as far as I understand it is basically the x86_64 abi except with x86_64 registers mapped onto AArch64 registers. This makes it easy to translate x86_64 to AArch64 with the \"emulator compatible\" abi and allow this translated code to be used in the same process as native AArch64 code with this abi in case you still have x86_64 dll's you need to use.</p>\n</blockquote>",
        "id": 301507949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664476876
    },
    {
        "content": "<p>Berrysoft <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263034984\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>The latter one is ARM64EC ABI, which seems not supported by Rust. I suggest focursing on the normal ARM64 ABI.</p>\n</blockquote>",
        "id": 301563045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664505434
    },
    {
        "content": "<p>Berrysoft edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263034984\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>The latter one is ARM64EC ABI, which seems to be not supported by Rust. I suggest focusing on the normal ARM64 ABI.</p>\n</blockquote>",
        "id": 301563280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664505633
    },
    {
        "content": "<p>kpreisser <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263230256\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Hi, thanks for your replies!</p>\n<blockquote>\n<p>Windows on AArch64 has two possible abi's. The first is I believe AAPCS compatible except with SEH instead of DWARF based unwinding tables. The second is the \"emulator compatible\" abi, which as far as I understand it is basically the x86_64 abi except with x86_64 registers mapped onto AArch64 registers.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span><br>\nSee also the Microsoft Documentation about the Windows ARM64 ABI convention: <a href=\"https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions\">https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions</a></p>\n<blockquote>\n<p>The latter one is ARM64EC ABI, which seems to be not supported by Rust. I suggest focusing on the normal ARM64 ABI.</p>\n</blockquote>\n<p>Yes, ARM64 would also be the one we are interested in (.NET for example doesn't support ARM64EC).</p>\n<blockquote>\n<p>There's also the question of testing in CI: we have Windows/x86-64 runners, but does Windows have a \"reverse emulator\" that can run aarch64 <code>.exe</code>s on x86-64, like it can the other way around? If not, I suppose we could treat this the same as macOS/aarch64: support in-tree, but not tested so best-effort.</p>\n</blockquote>\n<p>To my knowledge, Window ARM64 supports emulation for x86/64 processes, but unfortunately not the other way round. The only way I can think of to run Windows Arm64 binaries on x86-64 hardware would be using a VM with emulation, e.g. QEMU.</p>\n<p>I would be happy to try to build wasmtime for Windows ARM64 and test it locally, to see if it basically works. Unfortunaltey I don't know Rust and am not very experienced with low-level handling. When I try to build using <code>cargo build --target aarch64-pc-windows-msvc</code>, I get the <code>\"unsupported platform\"</code> error as mentioned by @Berrysoft:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">environ</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Administrator</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">Wasmtime</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">environ</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">62</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">62</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported platform\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">65</span>:<span class=\"mi\">49</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">65</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">jmp_buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">take_jmp_buf_if_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">handler</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">exception_info</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                 </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">31</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                               </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fp</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">35</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                   </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I think the <code>(*(*exception_info).ContextRecord)</code> refers to the platform-specific <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-context\"><code>CONTEXT</code></a> structure (here for x86_64), which for ARM64 is defined as alias for <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-arm64_nt_context\"><code>ARM64_NT_CONTEXT</code></a>. However, I'm not sure which values/registers to use from that struct for the <code>ip</code> and <code>fp</code> variables, or if there are other changes required.</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 301588558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664524182
    },
    {
        "content": "<p>kpreisser edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263230256\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Hi, thanks for your replies!</p>\n<blockquote>\n<p>Windows on AArch64 has two possible abi's. The first is I believe AAPCS compatible except with SEH instead of DWARF based unwinding tables. The second is the \"emulator compatible\" abi, which as far as I understand it is basically the x86_64 abi except with x86_64 registers mapped onto AArch64 registers.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span><br>\nSee also the Microsoft Documentation about the Windows ARM64 ABI convention: <a href=\"https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions\">https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions</a></p>\n<blockquote>\n<p>The latter one is ARM64EC ABI, which seems to be not supported by Rust. I suggest focusing on the normal ARM64 ABI.</p>\n</blockquote>\n<p>Yes, ARM64 would also be the one we are interested in (.NET for example doesn't support ARM64EC).</p>\n<blockquote>\n<p>There's also the question of testing in CI: we have Windows/x86-64 runners, but does Windows have a \"reverse emulator\" that can run aarch64 <code>.exe</code>s on x86-64, like it can the other way around? If not, I suppose we could treat this the same as macOS/aarch64: support in-tree, but not tested so best-effort.</p>\n</blockquote>\n<p>To my knowledge, Window ARM64 supports emulation for x86/64 processes, but unfortunately not the other way round. The only way I can think of to run Windows Arm64 binaries on x86-64 hardware would be using a VM with emulation, e.g. QEMU.</p>\n<p>I would be happy to try to build wasmtime for Windows ARM64 and test it locally, to see if it basically works. Unfortunaltey I don't know Rust and am not very experienced with low-level handling. When I try to build using <code>cargo build --target aarch64-pc-windows-msvc</code>, I get the <code>\"unsupported platform\"</code> error as mentioned by @Berrysoft:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">environ</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Administrator</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">Wasmtime</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">environ</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">62</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">62</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported platform\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">65</span>:<span class=\"mi\">49</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">65</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">jmp_buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">take_jmp_buf_if_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">handler</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">exception_info</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                 </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">31</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                               </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fp</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">35</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                   </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73\">https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73</a></p>\n<p>I think the <code>(*(*exception_info).ContextRecord)</code> refers to the platform-specific <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-context\"><code>CONTEXT</code></a> structure (here for x86_64), which for ARM64 is defined as alias for <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-arm64_nt_context\"><code>ARM64_NT_CONTEXT</code></a>. However, I'm not sure which values/registers to use from that struct for the <code>ip</code> and <code>fp</code> variables, or if there are other changes required.</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 301588800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664524302
    },
    {
        "content": "<p>kpreisser edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263230256\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Hi, thanks for your replies!</p>\n<blockquote>\n<p>Windows on AArch64 has two possible abi's. The first is I believe AAPCS compatible except with SEH instead of DWARF based unwinding tables. The second is the \"emulator compatible\" abi, which as far as I understand it is basically the x86_64 abi except with x86_64 registers mapped onto AArch64 registers.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span><br>\nSee also the Microsoft Documentation about the Windows ARM64 ABI convention: <a href=\"https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions\">https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions</a></p>\n<blockquote>\n<p>The latter one is ARM64EC ABI, which seems to be not supported by Rust. I suggest focusing on the normal ARM64 ABI.</p>\n</blockquote>\n<p>Yes, ARM64 would also be the one we are interested in (.NET for example doesn't support ARM64EC).</p>\n<blockquote>\n<p>There's also the question of testing in CI: we have Windows/x86-64 runners, but does Windows have a \"reverse emulator\" that can run aarch64 <code>.exe</code>s on x86-64, like it can the other way around? If not, I suppose we could treat this the same as macOS/aarch64: support in-tree, but not tested so best-effort.</p>\n</blockquote>\n<p>To my knowledge, Window ARM64 supports emulation for x86/64 processes, but unfortunately not the other way round. The only way I can think of to run Windows Arm64 binaries on x86-64 hardware would be using a VM with emulation, e.g. QEMU.</p>\n<p>I would be happy to try to build wasmtime for Windows ARM64 and test it locally, to see if it basically works. Unfortunaltey I don't know Rust and am not very experienced with low-level handling. When I try to build using <code>cargo build --target aarch64-pc-windows-msvc</code>, I get the <code>\"unsupported platform\"</code> error as mentioned by @Berrysoft:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">environ</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Administrator</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">Wasmtime</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">environ</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">62</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">62</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported platform\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">65</span>:<span class=\"mi\">49</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">65</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">jmp_buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">take_jmp_buf_if_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">handler</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">exception_info</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                 </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">31</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                               </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fp</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">35</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                   </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73\">https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73</a></p>\n<p>I think the <code>(*(*exception_info).ContextRecord)</code> refers to the arch-specific <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-context\"><code>CONTEXT</code></a> structure (here for x86_64), which for ARM64 is defined as alias for <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-arm64_nt_context\"><code>ARM64_NT_CONTEXT</code></a>. However, I'm not sure which values/registers to use from that struct for the <code>ip</code> and <code>fp</code> variables, or if there are other changes required.</p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 301588953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664524363
    },
    {
        "content": "<p>kpreisser edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263230256\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Hi, thanks for your replies!</p>\n<blockquote>\n<p>Windows on AArch64 has two possible abi's. The first is I believe AAPCS compatible except with SEH instead of DWARF based unwinding tables. The second is the \"emulator compatible\" abi, which as far as I understand it is basically the x86_64 abi except with x86_64 registers mapped onto AArch64 registers.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span><br>\nSee also the Microsoft Documentation about the Windows ARM64 ABI convention: <a href=\"https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions\">https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions</a></p>\n<blockquote>\n<p>The latter one is ARM64EC ABI, which seems to be not supported by Rust. I suggest focusing on the normal ARM64 ABI.</p>\n</blockquote>\n<p>Yes, ARM64 would also be the one we are interested in (.NET for example doesn't support ARM64EC).</p>\n<blockquote>\n<p>There's also the question of testing in CI: we have Windows/x86-64 runners, but does Windows have a \"reverse emulator\" that can run aarch64 <code>.exe</code>s on x86-64, like it can the other way around? If not, I suppose we could treat this the same as macOS/aarch64: support in-tree, but not tested so best-effort.</p>\n</blockquote>\n<p>To my knowledge, Window ARM64 supports emulation for x86/64 processes, but unfortunately not the other way round. The only way I can think of to run Windows Arm64 binaries on x86-64 hardware would be using a VM with emulation, e.g. QEMU.</p>\n<p>I would be happy to try to build wasmtime for Windows ARM64 and test it locally, to see if it basically works. Unfortunaltey I don't know Rust and am not very experienced with low-level handling. When I try to build using <code>cargo build --target aarch64-pc-windows-msvc</code>, I get the <code>\"unsupported platform\"</code> error as mentioned by @Berrysoft:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">environ</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Administrator</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">Wasmtime</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">environ</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">62</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">62</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported platform\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">65</span>:<span class=\"mi\">49</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">65</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">jmp_buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">take_jmp_buf_if_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">handler</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">exception_info</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                 </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">31</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                               </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fp</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">35</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                   </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73\">https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73</a></p>\n<p>I think the <code>(*(*exception_info).ContextRecord)</code> refers to the arch-specific <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-context\"><code>CONTEXT</code></a> structure (here for x86_64), which for ARM64 is defined as alias for <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-arm64_nt_context\"><code>ARM64_NT_CONTEXT</code></a>. However, I'm not sure which values/registers to use from that struct for the <code>ip</code> and <code>fp</code> variables, or if there are other changes required.</p>\n<p><strong>Edit:</strong> When I try to avoid that error by using the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"c1\">//compile_error!(\"unsupported platform\");</span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ip</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I get another build error due to the unsupported platform:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Administrator</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">Wasmtime</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">unwind</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">unwind</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">12</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported target platform for unwind\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0432</span><span class=\"p\">]</span>: <span class=\"nc\">unresolved</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">crate</span>::<span class=\"n\">unwind</span>::<span class=\"n\">UnwindRegistration</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">code_memory</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">3</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">unwind</span>::<span class=\"n\">UnwindRegistration</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">UnwindRegistration</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unwind</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0282</span><span class=\"p\">]</span>: <span class=\"nc\">type</span><span class=\"w\"> </span><span class=\"n\">annotations</span><span class=\"w\"> </span><span class=\"n\">needed</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">code_memory</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">68</span>:<span class=\"mi\">52</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">68</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">unwind_registration</span>: <span class=\"nc\">ManuallyDrop</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"nb\">None</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"n\">infer</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">parameter</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">T</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">declared</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">help</span>: <span class=\"nc\">consider</span><span class=\"w\"> </span><span class=\"n\">specifying</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">generic</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">68</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">unwind_registration</span>: <span class=\"nc\">ManuallyDrop</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"nb\">None</span>::<span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                        </span><span class=\"o\">+++++</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Thanks!</p>\n</blockquote>",
        "id": 301590445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664524980
    },
    {
        "content": "<p>kpreisser edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263230256\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Hi, thanks for your replies!</p>\n<blockquote>\n<p>Windows on AArch64 has two possible abi's. The first is I believe AAPCS compatible except with SEH instead of DWARF based unwinding tables. The second is the \"emulator compatible\" abi, which as far as I understand it is basically the x86_64 abi except with x86_64 registers mapped onto AArch64 registers.</p>\n</blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span><br>\nSee also the Microsoft Documentation about the Windows ARM64 ABI convention: <a href=\"https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions\">https://learn.microsoft.com/en-us/cpp/build/arm64-windows-abi-conventions</a></p>\n<blockquote>\n<p>The latter one is ARM64EC ABI, which seems to be not supported by Rust. I suggest focusing on the normal ARM64 ABI.</p>\n</blockquote>\n<p>Yes, ARM64 would also be the one we are interested in (.NET for example doesn't support ARM64EC).</p>\n<blockquote>\n<p>There's also the question of testing in CI: we have Windows/x86-64 runners, but does Windows have a \"reverse emulator\" that can run aarch64 <code>.exe</code>s on x86-64, like it can the other way around? If not, I suppose we could treat this the same as macOS/aarch64: support in-tree, but not tested so best-effort.</p>\n</blockquote>\n<p>To my knowledge, Window ARM64 supports emulation for x86/64 processes, but unfortunately not the other way round. The only way I can think of to run Windows Arm64 binaries on x86-64 hardware would be using a VM with emulation, e.g. QEMU.</p>\n<p>I would be happy to try to build wasmtime for Windows ARM64 and test it locally, to see if it basically works. Unfortunaltey I don't know Rust and am not very experienced with low-level handling. When I try to build using <code>cargo build --target aarch64-pc-windows-msvc</code>, I get the <code>\"unsupported platform\"</code> error as mentioned by @Berrysoft:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">environ</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Administrator</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">Wasmtime</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">environ</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">62</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">62</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported platform\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                 </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">65</span>:<span class=\"mi\">49</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">65</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">jmp_buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">take_jmp_buf_if_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">handler</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">handler</span><span class=\"p\">(</span><span class=\"n\">exception_info</span><span class=\"p\">));</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                 </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ip</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">31</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                               </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0425</span><span class=\"p\">]</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">value</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">fp</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">71</span>:<span class=\"mi\">35</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">71</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">info</span><span class=\"p\">.</span><span class=\"n\">set_jit_trap</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                   </span><span class=\"o\">^^</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">scope</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73\">https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/runtime/src/traphandlers/windows.rs#L54-L73</a></p>\n<p>I think the <code>(*(*exception_info).ContextRecord)</code> refers to the arch-specific <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-context\"><code>CONTEXT</code></a> structure (here for x86_64), which for ARM64 is defined as alias for <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-arm64_nt_context\"><code>ARM64_NT_CONTEXT</code></a>. However, I'm not sure which values/registers to use from that struct for the <code>ip</code> and <code>fp</code> variables, or if there are other changes required.</p>\n<p><strong>Edit:</strong> When I try to avoid that error by using the following code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"c1\">//compile_error!(\"unsupported platform\");</span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ip</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fp</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>I get another build error due to the unsupported platform:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">jit</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Administrator</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">Wasmtime</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">error</span>: <span class=\"nc\">unsupported</span><span class=\"w\"> </span><span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">platform</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">unwind</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">unwind</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">12</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">12</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"fm\">compile_error!</span><span class=\"p\">(</span><span class=\"s\">\"unsupported target platform for unwind\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">         </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0432</span><span class=\"p\">]</span>: <span class=\"nc\">unresolved</span><span class=\"w\"> </span><span class=\"n\">import</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">crate</span>::<span class=\"n\">unwind</span>::<span class=\"n\">UnwindRegistration</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">code_memory</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">3</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"k\">crate</span>::<span class=\"n\">unwind</span>::<span class=\"n\">UnwindRegistration</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">no</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">UnwindRegistration</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unwind</span><span class=\"err\">`</span><span class=\"w\"></span>\n\n<span class=\"n\">error</span><span class=\"p\">[</span><span class=\"n\">E0282</span><span class=\"p\">]</span>: <span class=\"nc\">type</span><span class=\"w\"> </span><span class=\"n\">annotations</span><span class=\"w\"> </span><span class=\"n\">needed</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">crates</span><span class=\"err\">\\</span><span class=\"n\">jit</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">code_memory</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">68</span>:<span class=\"mi\">52</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">68</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">unwind_registration</span>: <span class=\"nc\">ManuallyDrop</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"nb\">None</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                    </span><span class=\"o\">^^^^</span><span class=\"w\"> </span><span class=\"n\">cannot</span><span class=\"w\"> </span><span class=\"n\">infer</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">parameter</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">T</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">declared</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"err\">`</span><span class=\"nb\">Option</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"n\">help</span>: <span class=\"nc\">consider</span><span class=\"w\"> </span><span class=\"n\">specifying</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">generic</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\"></span>\n<span class=\"mi\">68</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">             </span><span class=\"n\">unwind_registration</span>: <span class=\"nc\">ManuallyDrop</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"nb\">None</span>::<span class=\"o\">&lt;</span><span class=\"n\">T</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"o\">|</span><span class=\"w\">                                                        </span><span class=\"o\">+++++</span><span class=\"w\"></span>\n</code></pre></div>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/jit/src/unwind.rs#L1-L14\">https://github.com/bytecodealliance/wasmtime/blob/c1d6ca48a74ab6f356d08baa533b90b17ccb834a/crates/jit/src/unwind.rs#L1-L14</a></p>\n<p>Thanks!</p>\n</blockquote>",
        "id": 301590662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664525059
    },
    {
        "content": "<p>Berrysoft <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263435249\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>The value for <code>ip</code> and <code>fp</code> is here:</p>\n<p><div class=\"codehilite\" data-code-language=\"C\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"nc\">_ARM64_NT_CONTEXT</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// ...</span>\n<span class=\"w\">  </span><span class=\"k\">union</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">struct</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"c1\">// ...</span>\n<span class=\"w\">      </span><span class=\"n\">DWORD64</span><span class=\"w\"> </span><span class=\"n\">Fp</span><span class=\"p\">;</span><span class=\"w\">      </span><span class=\"c1\">// fp</span>\n<span class=\"w\">      </span><span class=\"c1\">// ...</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">DUMMYSTRUCTNAME</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">DUMMYUNIONNAME</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"c1\">// ...</span>\n<span class=\"w\">  </span><span class=\"n\">DWORD64</span><span class=\"w\">          </span><span class=\"n\">Pc</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// ip</span>\n<span class=\"w\">  </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">ARM64_NT_CONTEXT</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">PARM64_NT_CONTEXT</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 301619248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664535987
    },
    {
        "content": "<p>Berrysoft <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263443904\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>I'm not an expert to unwinding and don't have an ARM64 Windows device neither. But according to the docs I've seen recently, I think you can just try using the <code>winx64</code> mod for ARM64. I'm not sure if it will work, and it's just some silly advice:)</p>\n</blockquote>",
        "id": 301620726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664536558
    },
    {
        "content": "<p>Berrysoft edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263443904\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>I'm not an expert to unwinding and don't have an ARM64 Windows device neither. But according to the docs I've seen recently, I think you can just try using the <code>winx64</code> mod for ARM64. I'm not sure if it will work, and it's just some silly advice:)</p>\n<p>Edit: with a slight modify to <code>winx64</code> the wasmtime crate could be built targeting ARM64, but I cannot test it because I don't have ARM64 device.</p>\n<p><div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gu\">@@ -21,7 +21,7 @@</span><span class=\"w\"></span>\n<span class=\"w\"> </span>        if RtlAddFunctionTable(<span class=\"w\"></span>\n<span class=\"w\"> </span>            unwind_info as *mut _,<span class=\"w\"></span>\n<span class=\"w\"> </span>            (unwind_len / unit_len) as u32,<span class=\"w\"></span>\n<span class=\"gd\">-            base_address as u64,</span><span class=\"w\"></span>\n<span class=\"gi\">+            base_address as _,</span><span class=\"w\"></span>\n<span class=\"w\"> </span>        ) == 0<span class=\"w\"></span>\n<span class=\"w\"> </span>        {<span class=\"w\"></span>\n<span class=\"w\"> </span>            bail!(\"failed to register function table\");<span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 301626173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664538439
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263473848\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>I believe <code>RtlAddFunctionTable</code> is supposed to take a u64 argument as base address. What was the error you got without your change?</p>\n</blockquote>",
        "id": 301626783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664538648
    },
    {
        "content": "<p>Berrysoft <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263474806\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>To use it for ARM64. It uses <code>usize</code> on ARM64.</p>\n</blockquote>",
        "id": 301626962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664538712
    },
    {
        "content": "<p>kpreisser <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263828706\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Thank you! With these changes I'm able to build wasmtime for <code>aarch64-pc-windows-msvc</code> successfully as <code>debug</code>, based on commit c1d6ca48a74ab6f356d08baa533b90b17ccb834a.<br>\n![grafik](<a href=\"https://user-images.githubusercontent.com/13289184/193320914-e60be8c5-0b28-476d-8e86-7972e7feff39.png\">https://user-images.githubusercontent.com/13289184/193320914-e60be8c5-0b28-476d-8e86-7972e7feff39.png</a>)</p>\n<p>Testing the <code>debug</code> version on a Windows 11 Pro Version 22H2 (Build 22621) ARM64 machine, basic functionality seems to work, when I create a <code>myModule.wast</code> like this:</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"myTrap\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">unreachable</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"getVal\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n        <span class=\"nb\">i32.const</span> <span class=\"mf\">12345</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<p>and run it:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Name</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WasmTest</span><span class=\"o\">&gt;</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">myModule</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">getVal</span><span class=\"w\"></span>\n<span class=\"n\">warning</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"n\">values</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"k\">break</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"></span>\n<span class=\"mi\">12345</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Unfortunately, trap handling doesn't seem to work. When I call <code>wasmtime  myModule.wast --invoke myTrap</code>, wasmtime.exe crashes with the following error report in Windows Event Viewer:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"nc\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">version</span>: <span class=\"mf\">0.0.0.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">stamp</span>: <span class=\"mh\">0x63372295</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"nc\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">version</span>: <span class=\"mf\">10.0.22621.232</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">stamp</span>: <span class=\"mh\">0x0c898015</span><span class=\"w\"></span>\n<span class=\"n\">Exception</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mh\">0xc00000ff</span><span class=\"w\"></span>\n<span class=\"n\">Fault</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"mh\">0x0000000000129440</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"n\">id</span>: <span class=\"mh\">0x0</span><span class=\"n\">xBAC</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"n\">time</span>: <span class=\"mh\">0x0</span><span class=\"n\">x1D8D4EFB3551177</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">path</span>: <span class=\"nc\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Name</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WasmTest</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">path</span>: <span class=\"nc\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Windows</span><span class=\"err\">\\</span><span class=\"n\">SYSTEM32</span><span class=\"err\">\\</span><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"w\"></span>\n<span class=\"n\">Report</span><span class=\"w\"> </span><span class=\"n\">Id</span>: <span class=\"mi\">4</span><span class=\"n\">b0bd570</span><span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"n\">bc1</span><span class=\"o\">-</span><span class=\"mi\">48</span><span class=\"n\">ff</span><span class=\"o\">-</span><span class=\"mi\">86</span><span class=\"n\">a5</span><span class=\"o\">-</span><span class=\"n\">c28db648de5b</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">full</span><span class=\"w\"> </span><span class=\"n\">name</span>:\n<span class=\"nc\">Faulting</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"o\">-</span><span class=\"n\">relative</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">ID</span>:\n</code></pre></div>\n<p>When attaching Visual Studio 2022 as debugger, I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Unhandled</span><span class=\"w\"> </span><span class=\"n\">exception</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mh\">0x00007FFBD9119440</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span>: <span class=\"mh\">0xC00000FF</span>: <span class=\"nc\">A</span><span class=\"w\"> </span><span class=\"n\">malformed</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">encountered</span><span class=\"w\"> </span><span class=\"n\">during</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">unwind</span><span class=\"w\"> </span><span class=\"n\">operation</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The call stack is displayed as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">&gt;</span><span class=\"w\">   </span><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbd9119440</span><span class=\"p\">()</span><span class=\"w\">    </span><span class=\"n\">Unknown</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbd9025810</span><span class=\"p\">()</span><span class=\"w\">    </span><span class=\"n\">Unknown</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbd9096730</span><span class=\"p\">()</span><span class=\"w\">    </span><span class=\"n\">Unknown</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">vcruntime140</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbbbde1c5c</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"n\">Unknown</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">vcruntime140</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbbbde1bb8</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"n\">Unknown</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_longjmp</span><span class=\"p\">(</span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">JmpBuf</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"w\">    </span><span class=\"n\">C</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure_env</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">enum</span><span class=\"cp\">$</span><span class=\"o\">&lt;</span><span class=\"n\">core</span>::<span class=\"n\">option</span>::<span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"k\">ref</span><span class=\"cp\">$</span><span class=\"o\">&lt;</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">call_thread_state</span>::<span class=\"n\">CallThreadState</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">75</span><span class=\"w\">    </span><span class=\"n\">Rust</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">tls</span>::<span class=\"n\">with</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure_env</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure_env</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">closure</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">634</span><span class=\"w\">   </span><span class=\"n\">Rust</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span><span class=\"p\">(</span><span class=\"n\">windows_sys</span>::<span class=\"n\">Windows</span>::<span class=\"n\">Win32</span>::<span class=\"n\">System</span>::<span class=\"n\">Diagnostics</span>::<span class=\"n\">Debug</span>::<span class=\"n\">EXCEPTION_POINTERS</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">exception_info</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">49</span><span class=\"w\">   </span><span class=\"n\">Rust</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">[</span><span class=\"n\">External</span><span class=\"w\"> </span><span class=\"n\">Code</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 301697606,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664558605
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263831121\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>That's progress! Thanks @kpreisser for trying that out!</p>\n<p>The failure in trap handling is almost certainly to do with our lack of SEH (structured exception handling) metadata on aarch64; that will take some actual engineering work in the ABI code to do. It may not be too bad though, as we share many ABI details with x86-64 and most of the code is generic. I'm happy to point out the bits that are likely relevant if someone wants to work on it.</p>\n</blockquote>",
        "id": 301698169,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664558779
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263847511\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>In my opinion that's enough progress to be worth a pull request: if it not only builds but actually runs correctly as long as nothing traps, that's a big improvement. If implementing SEH turns out to be hard, then I'd love to at least merge what you have now.</p>\n<p>Also it occurs to me that if we could check in CI that Wasmtime at least builds for this target, that would give us _some_ confidence we haven't broken it, even though it's not as good as running the full test suite. We should be able to cross-compile without having to figure out how to run Windows/aarch64 binaries. This might be a good project if anybody else is looking to contribute but doesn't feel comfortable fiddling with ABI details.</p>\n</blockquote>",
        "id": 301701560,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664559873
    },
    {
        "content": "<p>kpreisser edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263828706\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Thank you! With these changes I'm able to build wasmtime for <code>aarch64-pc-windows-msvc</code> successfully as <code>debug</code>, based on commit c1d6ca48a74ab6f356d08baa533b90b17ccb834a.<br>\n![grafik](<a href=\"https://user-images.githubusercontent.com/13289184/193320914-e60be8c5-0b28-476d-8e86-7972e7feff39.png\">https://user-images.githubusercontent.com/13289184/193320914-e60be8c5-0b28-476d-8e86-7972e7feff39.png</a>)</p>\n<p>Testing the <code>debug</code> version on a Windows 11 Pro Version 22H2 (Build 22621) ARM64 machine, basic functionality seems to work, when I create a <code>myModule.wast</code> like this:</p>\n<div class=\"codehilite\" data-code-language=\"WebAssembly\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">module</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"myTrap\"</span><span class=\"p\">)</span>\n        <span class=\"nb\">unreachable</span>\n    <span class=\"p\">)</span>\n    <span class=\"p\">(</span><span class=\"k\">func</span> <span class=\"p\">(</span><span class=\"k\">export</span> <span class=\"s2\">\"getVal\"</span><span class=\"p\">)</span> <span class=\"p\">(</span><span class=\"k\">result</span> <span class=\"kt\">i32</span><span class=\"p\">)</span>\n        <span class=\"nb\">i32.const</span> <span class=\"mf\">12345</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<p>and run it:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Name</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WasmTest</span><span class=\"o\">&gt;</span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">myModule</span><span class=\"p\">.</span><span class=\"n\">wast</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">getVal</span><span class=\"w\"></span>\n<span class=\"n\">warning</span>: <span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">returns</span><span class=\"w\"> </span><span class=\"n\">values</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">experimental</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"k\">break</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"></span>\n<span class=\"mi\">12345</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Unfortunately, trap handling doesn't seem to work. When I call <code>wasmtime  myModule.wast --invoke myTrap</code>, wasmtime.exe crashes with the following error report in Windows Event Viewer:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"nc\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">version</span>: <span class=\"mf\">0.0.0.0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">stamp</span>: <span class=\"mh\">0x63372295</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">name</span>: <span class=\"nc\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">version</span>: <span class=\"mf\">10.0.22621.232</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">time</span><span class=\"w\"> </span><span class=\"n\">stamp</span>: <span class=\"mh\">0x0c898015</span><span class=\"w\"></span>\n<span class=\"n\">Exception</span><span class=\"w\"> </span><span class=\"n\">code</span>: <span class=\"mh\">0xc00000ff</span><span class=\"w\"></span>\n<span class=\"n\">Fault</span><span class=\"w\"> </span><span class=\"n\">offset</span>: <span class=\"mh\">0x0000000000129440</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">process</span><span class=\"w\"> </span><span class=\"n\">id</span>: <span class=\"mh\">0x0</span><span class=\"n\">xBAC</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">start</span><span class=\"w\"> </span><span class=\"n\">time</span>: <span class=\"mh\">0x0</span><span class=\"n\">x1D8D4EFB3551177</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">path</span>: <span class=\"nc\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">Name</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WasmTest</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"n\">path</span>: <span class=\"nc\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Windows</span><span class=\"err\">\\</span><span class=\"n\">SYSTEM32</span><span class=\"err\">\\</span><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"w\"></span>\n<span class=\"n\">Report</span><span class=\"w\"> </span><span class=\"n\">Id</span>: <span class=\"mi\">4</span><span class=\"n\">b0bd570</span><span class=\"o\">-</span><span class=\"mi\">7</span><span class=\"n\">bc1</span><span class=\"o\">-</span><span class=\"mi\">48</span><span class=\"n\">ff</span><span class=\"o\">-</span><span class=\"mi\">86</span><span class=\"n\">a5</span><span class=\"o\">-</span><span class=\"n\">c28db648de5b</span><span class=\"w\"></span>\n<span class=\"n\">Faulting</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"w\"> </span><span class=\"n\">full</span><span class=\"w\"> </span><span class=\"n\">name</span>:\n<span class=\"nc\">Faulting</span><span class=\"w\"> </span><span class=\"n\">package</span><span class=\"o\">-</span><span class=\"n\">relative</span><span class=\"w\"> </span><span class=\"n\">application</span><span class=\"w\"> </span><span class=\"n\">ID</span>:\n</code></pre></div>\n<p>When attaching Visual Studio 2022 as debugger, I get:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Unhandled</span><span class=\"w\"> </span><span class=\"n\">exception</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"mh\">0x00007FFBD9119440</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span>: <span class=\"mh\">0xC00000FF</span>: <span class=\"nc\">A</span><span class=\"w\"> </span><span class=\"n\">malformed</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">encountered</span><span class=\"w\"> </span><span class=\"n\">during</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">unwind</span><span class=\"w\"> </span><span class=\"n\">operation</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The call stack is displayed as follows:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbd9119440</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbd9025810</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">ntdll</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbd9096730</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">vcruntime140</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbbbde1c5c</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">vcruntime140</span><span class=\"p\">.</span><span class=\"n\">dll</span><span class=\"o\">!</span><span class=\"mi\">00007</span><span class=\"n\">ffbbbde1bb8</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_longjmp</span><span class=\"p\">(</span><span class=\"n\">void</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">JmpBuf</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">61</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">VPC</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WebAssembly</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">helpers</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">(</span><span class=\"mi\">61</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure_env</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">enum</span><span class=\"cp\">$</span><span class=\"o\">&lt;</span><span class=\"n\">core</span>::<span class=\"n\">option</span>::<span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"k\">ref</span><span class=\"cp\">$</span><span class=\"o\">&lt;</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">call_thread_state</span>::<span class=\"n\">CallThreadState</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">18446744073709551615</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">Some</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">75</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">VPC</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WebAssembly</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">(</span><span class=\"mi\">75</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">tls</span>::<span class=\"n\">with</span><span class=\"o\">&lt;</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure_env</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span>::<span class=\"n\">closure_env</span><span class=\"cp\">$</span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">closure</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">634</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">VPC</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WebAssembly</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">(</span><span class=\"mi\">634</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"n\">wasmtime</span><span class=\"p\">.</span><span class=\"n\">exe</span><span class=\"o\">!</span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">traphandlers</span>::<span class=\"n\">windows</span>::<span class=\"n\">exception_handler</span><span class=\"p\">(</span><span class=\"n\">windows_sys</span>::<span class=\"n\">Windows</span>::<span class=\"n\">Win32</span>::<span class=\"n\">System</span>::<span class=\"n\">Diagnostics</span>::<span class=\"n\">Debug</span>::<span class=\"n\">EXCEPTION_POINTERS</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">exception_info</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Line</span><span class=\"w\"> </span><span class=\"mi\">49</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">C</span>:<span class=\"err\">\\</span><span class=\"n\">Users</span><span class=\"err\">\\</span><span class=\"n\">VPC</span><span class=\"err\">\\</span><span class=\"n\">Desktop</span><span class=\"err\">\\</span><span class=\"n\">WebAssembly</span><span class=\"o\">-</span><span class=\"n\">Test</span><span class=\"err\">\\</span><span class=\"n\">wasmtime</span><span class=\"err\">\\</span><span class=\"n\">crates</span><span class=\"err\">\\</span><span class=\"n\">runtime</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">traphandlers</span><span class=\"err\">\\</span><span class=\"n\">windows</span><span class=\"p\">.</span><span class=\"n\">rs</span><span class=\"p\">(</span><span class=\"mi\">49</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">[</span><span class=\"n\">External</span><span class=\"w\"> </span><span class=\"n\">Code</span><span class=\"p\">]</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 301703760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664560574
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1263968085\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>A pull request to fix the compilation would be great, yeah -- let's get the above work in-tree!</p>\n<p>I do want to be a little cautious about what we put in CI and build, though: \"runs correctly as long as nothing traps\" is a pretty precarious and non-standards-compliant thing and I wouldn't want, e.g., a bundle of build artifacts published where someone takes the <code>.exe</code> then wonders why we have a broken engine. I'm not sure if that's what you were suggesting or not, but just to say it explicitly, \"passes core Wasm tests\" would be my threshold for published artifacts.</p>\n<p>I do think a <code>cargo check</code> for the platform wouldn't be a bad idea, though; that would prevent trivial regressions while this remains a pending task.</p>\n</blockquote>",
        "id": 301724699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664567971
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1264000382\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>Yeah, I think <code>cargo check</code> does everything I actually wanted there. I guess there could be bugs that wouldn't be detected until link-time, but for anything else, <code>cargo check</code> should probably be as good as <code>cargo build</code>.</p>\n</blockquote>",
        "id": 301730176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664570160
    },
    {
        "content": "<p>Berrysoft <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435#issuecomment-1264257222\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>I've opened PR to add this initial Windows ARM64 support. However, I don't know about the function table and the ARM64 SEH. I think we need some help from experts to improve the traps in the future.</p>\n</blockquote>",
        "id": 301772776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664604263
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/4435\">issue #4435</a>:</p>\n<blockquote>\n<p>As far as I know, wasmer can target Windows ARM64, and so do cranelift.</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f242975c49385edafe4f72dfa5f0ff6aae23eda3/crates/runtime/src/traphandlers/windows.rs#L54-L62\">https://github.com/bytecodealliance/wasmtime/blob/f242975c49385edafe4f72dfa5f0ff6aae23eda3/crates/runtime/src/traphandlers/windows.rs#L54-L62</a></p>\n</blockquote>",
        "id": 301991783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1664765144
    }
]