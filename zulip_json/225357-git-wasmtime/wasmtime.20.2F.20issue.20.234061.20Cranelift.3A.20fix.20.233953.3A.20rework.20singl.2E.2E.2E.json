[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061#issuecomment-1104748553\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061\">issue #4061</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"cranelift:area:machinst\", \"cranelift:area:x64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 279639655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650520751
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061#issuecomment-1104755747\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061\">issue #4061</a>:</p>\n<blockquote>\n<p>Some Sightglass results:</p>\n<ul>\n<li>Execution time (wallclock speedups, higher is faster):<ul>\n<li><code>pulldown-cmark</code>: no diff</li>\n<li>`spidermonkey: 1.01 - 1.02x (99% conf)</li>\n<li><code>bz2</code>: no diff</li>\n<li><code>meshoptimizer</code>: 1.16x - 1.19x (99% conf) (!)</li>\n<li><code>blake3-scalar</code>: no diff</li>\n<li><code>blake3-simd</code>: no diff</li>\n</ul>\n</li>\n<li>Compilation time (wallclock speedups, higher is faster):<ul>\n<li><code>pulldown-cmark</code>: no diff</li>\n<li><code>spidermonkey</code>: 0.89x - 0.95x (99% conf) (I will profile this tomorrow)</li>\n<li><code>bz2</code>: no diff</li>\n<li><code>meshoptimizer</code>: no diff</li>\n<li><code>blake3-scalar</code>: no diff</li>\n<li><code>blake3-simd</code>: no diff</li>\n</ul>\n</li>\n</ul>\n<p>So a speedup on two benchmarks, SpiderMonkey (1-2%) and meshoptimizer (16-19%); the latter I suspect is due to some opportunities for compare-load or compare-immediate merging in hot blocks (can double-check with hotblocks tool tomorrow).</p>\n<p>The compile time regression on SpiderMonkey I'll take a look at and resolve -- we don't want to take that hit. I suspect the multiple-use analysis can be made faster if needed.</p>\n</blockquote>",
        "id": 279640466,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650521534
    },
    {
        "content": "<p>cfallin edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061#issuecomment-1104755747\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061\">issue #4061</a>:</p>\n<blockquote>\n<p>Some Sightglass results:</p>\n<ul>\n<li>Execution time (wallclock speedups, higher is faster):<ul>\n<li><code>pulldown-cmark</code>: no diff</li>\n<li><code>spidermonkey</code>: 1.01 - 1.02x (99% conf)</li>\n<li><code>bz2</code>: no diff</li>\n<li><code>meshoptimizer</code>: 1.16x - 1.19x (99% conf) (!)</li>\n<li><code>blake3-scalar</code>: no diff</li>\n<li><code>blake3-simd</code>: no diff</li>\n</ul>\n</li>\n<li>Compilation time (wallclock speedups, higher is faster):<ul>\n<li><code>pulldown-cmark</code>: no diff</li>\n<li><code>spidermonkey</code>: 0.89x - 0.95x (99% conf) (I will profile this tomorrow)</li>\n<li><code>bz2</code>: no diff</li>\n<li><code>meshoptimizer</code>: no diff</li>\n<li><code>blake3-scalar</code>: no diff</li>\n<li><code>blake3-simd</code>: no diff</li>\n</ul>\n</li>\n</ul>\n<p>So a speedup on two benchmarks, SpiderMonkey (1-2%) and meshoptimizer (16-19%); the latter I suspect is due to some opportunities for compare-load or compare-immediate merging in hot blocks (can double-check with hotblocks tool tomorrow).</p>\n<p>The compile time regression on SpiderMonkey I'll take a look at and resolve -- we don't want to take that hit. I suspect the multiple-use analysis can be made faster if needed.</p>\n</blockquote>",
        "id": 279640469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650521550
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061#issuecomment-1105912375\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4061\">issue #4061</a>:</p>\n<blockquote>\n<p>@abrown I went ahead and reworked the <code>ValueUseState</code> analysis for better compile time; Sightglass now shows no difference in compile time with this PR vs baseline for SpiderMonkey (or the other benchmarks). Could you take another look at the new algorithm?</p>\n</blockquote>",
        "id": 279766141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1650590692
    }
]