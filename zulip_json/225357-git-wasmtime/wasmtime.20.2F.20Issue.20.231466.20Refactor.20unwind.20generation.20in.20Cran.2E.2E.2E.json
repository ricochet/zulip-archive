[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608655583\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608655583\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>This issue or pull request has been labeled: \"cranelift\", \"wasmtime:api\"</p>\n<p>&lt;details&gt; &lt;summary&gt;Users Subscribed to \"cranelift\"&lt;/summary&gt;</p>\n<ul>\n<li>@bnjbvr</li>\n</ul>\n<p>&lt;/details&gt;<br>\n&lt;details&gt; &lt;summary&gt;Users Subscribed to \"wasmtime:api\"&lt;/summary&gt;</p>\n<ul>\n<li>@peterhuene</li>\n</ul>\n<p>&lt;/details&gt;</p>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\" title=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a></p>\n</blockquote>",
        "id": 192863322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585947607
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608660814\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608660814\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>Let me fix the lightbeam build failure.</p>\n</blockquote>",
        "id": 192863867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585947902
    },
    {
        "content": "<p>peterhuene deleted a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608660814\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608660814\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>Let me fix the lightbeam build failure.</p>\n</blockquote>",
        "id": 192866156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585949311
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608683904\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-608683904\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>Refactoring to fix the arm64 build error in the file test utility.</p>\n</blockquote>",
        "id": 192866196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585949339
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-609963618\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-609963618\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>As this will conflict with #1216 (it adds additional unwind information on Windows for FPR restores), this will need to wait until #1216 goes in then I'll merge the changes.</p>\n</blockquote>",
        "id": 193082602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586197868
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-612261095\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-612261095\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>This will need some additional changes with recently merged PRs to get working again.  I'll see to it on Monday.</p>\n</blockquote>",
        "id": 193628741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586560575
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-613145662\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-613145662\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>This should now be ready for review again after merging in the FPR changes for Windows unwind information.</p>\n</blockquote>",
        "id": 193834630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586820445
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614331607\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614331607\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>I'll see about implementing <code>__register_frame_table</code> on platforms where it can be used so we only call it once.  On platforms where we can't use it, we'll walk the table registering each entry like we're doing now.</p>\n</blockquote>",
        "id": 194241643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586993756
    },
    {
        "content": "<p>bnjbvr <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614521807\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614521807\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>(Redirecting to @yurydelendik who seemed to have a first look already; please let me know if I need to look at this as well!)</p>\n</blockquote>",
        "id": 194276160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587028408
    },
    {
        "content": "<p>bnjbvr edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614521807\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614521807\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>(Redirecting review to @yurydelendik who seemed to have a first look already; please let me know if I need to look at this as well!)</p>\n</blockquote>",
        "id": 194276172,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587028416
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614810506\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614810506\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>@yurydelendik is it required around <code>__deregister_frame</code> though? In the non-macOS case, we only register the entire frame table once and deregister once because only one element was added to the <code>registrations</code> vec.</p>\n</blockquote>",
        "id": 194344779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587060444
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<blockquote>\n<p>@yurydelendik is it required around __deregister_frame though?</p>\n</blockquote>\n<p>Good question. I would expect the api the by \"symmetrical\", means that if whatever is fed to __register_frame shall be passed to __deregister_frame. (FWIW this hole API and confusing)</p>\n<p>Is it possible to check if 1) the current __deregister_frame code de-registers FDEs; 2) does not add addition O(n^2) complexity for gcc unwind ?</p>\n</blockquote>",
        "id": 194348217,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587061980
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<blockquote>\n<p>@yurydelendik is it required around __deregister_frame though?</p>\n</blockquote>\n<p>Good question. I would expect the api the by \"symmetrical\", means that if whatever is fed to __register_frame shall be passed to __deregister_frame. (FWIW this hole API confusing)</p>\n<p>Is it possible to check if 1) the current __deregister_frame code de-registers FDEs; 2) does not add addition O(n^2) complexity for gcc unwind ?</p>\n</blockquote>",
        "id": 194348244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587061993
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<blockquote>\n<p>@yurydelendik is it required around __deregister_frame though?</p>\n</blockquote>\n<p>Good question. I would expect the api be \"symmetrical\", means that if whatever is fed to __register_frame shall be passed to __deregister_frame. (FWIW this hole API confusing)</p>\n<p>Is it possible to check if 1) the current __deregister_frame code de-registers FDEs; 2) does not add addition O(n^2) complexity for gcc unwind ?</p>\n</blockquote>",
        "id": 194348273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587062007
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614824483\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<blockquote>\n<p>@yurydelendik is it required around __deregister_frame though?</p>\n</blockquote>\n<p>Good question. I would expect the api be \"symmetrical\", means that if whatever is fed to __register_frame shall be passed to __deregister_frame. (FWIW this hole API confusing)</p>\n<p>Is it possible to check if 1) the current __deregister_frame code de-registers FDEs; 2) does not add additional O(n^2) complexity for gcc unwind ?</p>\n</blockquote>",
        "id": 194348706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587062177
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614840735\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614840735\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<p>I agree that the underlying API here is a mess.  The code I have now should cause symmetrical invocations of <code>__register_frame</code> and <code>__deregister_frame</code>, but in the case of libgcc, only one invocation of each per code memory entry.</p>\n<p>From what I can decipher of the registration code in libgcc, <code>__register_frame</code> will walk all of the FDEs from the given \"base entry\" (skipping over CIEs), but it only stores the \"base entry\" address internally for deregistration and therefore only needs the single matching <code>__deregister_frame</code> call.  It appears that <code>__register_frame</code> effectively accepts what <em>we (and gimli) call a frame table</em>.</p>\n<p>What libgcc is calling a \"frame table\" for use with <code>__register_frame_table</code> seems to be an array of pointers to those \"base entries\", allowing you to register frames from multiple \"translation units\" with a single call.  To put it another way, this function would be used if we wanted to register <em>multiple frame tables</em> from our perspective.  Technically we could use <code>__register_frame_table</code> to register the frame tables for all code memory entries in a single call, but I think that would require a bit of refactoring to make work.</p>\n</blockquote>",
        "id": 194352749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587063982
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614860151\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614860151\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<blockquote>\n<p>_register_frame will walk all of the FDEs from the given \"base entry\" (skipping over CIEs)</p>\n</blockquote>\n<p>Yeah, that's confirms my analysis as well. Thanks. I guess we good to go. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 194357932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587066534
    },
    {
        "content": "<p>yurydelendik edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614860151\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466#issuecomment-614860151\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1466\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1466\">Issue #1466</a>:</p>\n<blockquote>\n<blockquote>\n<p>_register_frame will walk all of the FDEs from the given \"base entry\" (skipping over CIEs)</p>\n</blockquote>\n<p>Yeah, that confirms my analysis as well. Thanks. I guess we good to go. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 194358001,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587066582
    }
]