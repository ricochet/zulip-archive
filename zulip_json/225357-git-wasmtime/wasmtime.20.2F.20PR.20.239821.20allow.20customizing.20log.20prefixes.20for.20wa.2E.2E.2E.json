[
    {
        "content": "<p>jzhn opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a> from <code>jzhn:main</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<h3>What</h3>\n<p>As discussed in feature request: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9799\">https://github.com/bytecodealliance/wasmtime/issues/9799</a>, <code>wasmtime serve</code> command always prefixes stdout and stderr logs of wasi-http handler with hardcoded format. This prevents user to implement consistent logging formats like json logging.</p>\n<p>This PR adds two new optional flags, <code>--logging-prefix-stdout</code> and <code>--logging-prefix-stderr</code>, which allows users to customize the prefix, and possibly removing the prefix by providing empty strings. When the new flags are not provided, existing hehaviour is preserved (covered by existing test cases).</p>\n<h3>Test</h3>\n<ul>\n<li>Added test case to cover new flags</li>\n<li>Existing test case covers the existing behaviour when flags are absent.</li>\n</ul>\n<h3>Alternatives</h3>\n<p>I know adding flags to CLI creates long term promise, so I'm trying to be careful here and have considered a few alternatives.</p>\n<h4>boolean flags vs string</h4>\n<p>we could simply provide new boolean flags like <code>--no-logging-prefix</code>, that works well for the original purpose of allowing users to disable log prefixes. However, in the future, we might want to allow users to specify log prefixes with templates, as the <code>{ req_id }</code> could be useful. Using string flags preserves the possibility of such feature.</p>\n<h4>Debug options</h4>\n<p>The existing <code>DebugOptions</code> already contains some customization about logging<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/crates/cli-flags/src/lib.rs#L241-L244\">https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/crates/cli-flags/src/lib.rs#L241-L244</a></p>\n<p>While we could add the flags there, I feel the new flags in this PR are specific to <code>wasmtime serve</code> command. So adding them to the common flags might confuse people for other commands.<br>\n</p>\n</blockquote>",
        "id": 488948496,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734140659
    },
    {
        "content": "<p><strong>jzhn</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>.</p>",
        "id": 488948498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734140660
    },
    {
        "content": "<p><strong>jzhn</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>.</p>",
        "id": 488948499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734140660
    },
    {
        "content": "<p>jzhn edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>:</p>\n<blockquote>\n<h3>What</h3>\n<p>As discussed in feature request: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9799\">https://github.com/bytecodealliance/wasmtime/issues/9799</a>, <code>wasmtime serve</code> command always prefixes stdout and stderr logs of wasi-http handler with hardcoded format. This prevents user to implement consistent logging formats like json logging.</p>\n<p>This PR adds two new optional flags, <code>--logging-prefix-stdout</code> and <code>--logging-prefix-stderr</code>, which allows users to customize the prefix, and possibly removing the prefix by providing empty strings. When the new flags are not provided, existing hehaviour is preserved (covered by existing test cases).</p>\n<h3>Test</h3>\n<ul>\n<li>Added test case to cover new flags</li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/tests/all/cli_tests.rs#L1868\">Existing test case</a> covers the existing behaviour when flags are absent.</li>\n</ul>\n<h3>Alternatives</h3>\n<p>I know adding flags to CLI creates long term promise, so I'm trying to be careful here and have considered a few alternatives.</p>\n<h4>boolean flags vs string</h4>\n<p>we could simply provide new boolean flags like <code>--no-logging-prefix</code>, that works well for the original purpose of allowing users to disable log prefixes. However, in the future, we might want to allow users to specify log prefixes with templates, as the <code>{ req_id }</code> could be useful. Using string flags preserves the possibility of such feature.</p>\n<h4>Debug options</h4>\n<p>The existing <code>DebugOptions</code> already contains some customization about logging<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/crates/cli-flags/src/lib.rs#L241-L244\">https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/crates/cli-flags/src/lib.rs#L241-L244</a></p>\n<p>While we could add the flags there, I feel the new flags in this PR are specific to <code>wasmtime serve</code> command. So adding them to the common flags might confuse people for other commands.<br>\n</p>\n</blockquote>",
        "id": 488948581,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734140748
    },
    {
        "content": "<p>jzhn updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>.</p>",
        "id": 488948800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734140959
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821#pullrequestreview-2506583477\">PR review</a>:</p>\n<blockquote>\n<p>Thanks! I think the documentation may want to be updated though because using <code>{req_id}</code> could be confusing as the prefix here doesn't actually support interpolation of <code>req_id</code> or other variables. If there's no need to have acustom prefixes it might also be reasonable to have a single flag to disable prefixes perhaps?</p>\n</blockquote>",
        "id": 489271497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734364057
    },
    {
        "content": "<p>jzhn <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821#issuecomment-2546294055\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>:</p>\n<blockquote>\n<blockquote>\n<p>Thanks! I think the documentation may want to be updated though because using <code>{req_id}</code> could be confusing as the prefix here doesn't actually support interpolation of <code>req_id</code> or other variables. If there's no need to have acustom prefixes it might also be reasonable to have a single flag to disable prefixes perhaps?</p>\n</blockquote>\n<p>Thanks for the review. I see that you are suggesting two directions, one to keep the custom prefix flags but update the documentation to remove mention of <code>{req_id}</code> to avoid confusion, the other to replace those custom prefix flags and use a simple boolean flag like <code>--no-logging-prefix</code> to disable the prefix.</p>\n<p>I'm fine with either approach, so please just let me know which is your preference and I'll update accordingly. thanks :)</p>\n</blockquote>",
        "id": 489302299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734372060
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821#issuecomment-2546304122\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>:</p>\n<blockquote>\n<p>Ah yes sorry, I also don't have much of a preference. Since your goal is to just disable the prefix why don't we add that for now and consider adding customizable ones later.</p>\n</blockquote>",
        "id": 489303350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734372349
    },
    {
        "content": "<p>jzhn updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>.</p>",
        "id": 489316065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734374842
    },
    {
        "content": "<p>jzhn edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>:</p>\n<blockquote>\n<h3>What</h3>\n<p>As discussed in feature request: <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9799\">https://github.com/bytecodealliance/wasmtime/issues/9799</a>, <code>wasmtime serve</code> command always prefixes stdout and stderr logs of wasi-http handler with hardcoded format. This prevents user to implement consistent logging formats like json logging.</p>\n<p>This PR adds an optional flags, <code>--no-logging-prefix</code>, to stop adding log prefixes. When the new flags are not provided, existing hehaviour is preserved.</p>\n<h3>Test</h3>\n<ul>\n<li>Added test case to cover new flags</li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/tests/all/cli_tests.rs#L1868\">Existing test case</a> covers the existing behaviour when flags are absent.</li>\n</ul>\n<h3>Alternatives</h3>\n<p>I know adding flags to CLI creates long term promise, so I'm trying to be careful here and have considered a few alternatives.</p>\n<h4>boolean flags vs string</h4>\n<p>(original implementation in this PR) To allow better flexibility and future proof, we could add two string flags, <code>--logging-prefix-stdout</code> and <code>--logging-prefix-stderr</code>, which allows users to customize the prefix, and possibly removing the prefix by providing empty strings. This enables future possibilities like allow users to specify log prefixes with templates, as the <code>{ req_id }</code> could be useful. __this is replaced with simple boolean flag of <code>--no-logging-prefix</code> to avoid over engineering.__</p>\n<h4>Debug options</h4>\n<p>The existing <code>DebugOptions</code> already contains some customization about logging<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/crates/cli-flags/src/lib.rs#L241-L244\">https://github.com/bytecodealliance/wasmtime/blob/da93f647974518e111561b3b451ef8c4a576bf20/crates/cli-flags/src/lib.rs#L241-L244</a></p>\n<p>While we could add the flags there, I feel the new flags in this PR are specific to <code>wasmtime serve</code> command. So adding them to the common flags might confuse people for other commands.<br>\n</p>\n</blockquote>",
        "id": 489317191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734375176
    },
    {
        "content": "<p><strong>jzhn</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>.</p>",
        "id": 489319532,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734375901
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821#pullrequestreview-2507399271\">PR review</a>.</p>",
        "id": 489347202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734384676
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9821\">PR #9821</a>.</p>",
        "id": 489350635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1734385848
    }
]