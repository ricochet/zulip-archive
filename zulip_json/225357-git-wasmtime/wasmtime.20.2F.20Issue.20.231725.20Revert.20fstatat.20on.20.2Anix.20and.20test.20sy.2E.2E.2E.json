[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725#issuecomment-630924580\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725\">Issue #1725</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 198089806,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589904850
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725#issuecomment-630930756\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725\">Issue #1725</a>:</p>\n<blockquote>\n<p>@sunfishcode OK, this should now be it for *nixes. However, I see that symlink resolution fails on Windows, and I'll need to investigate whether this is something new, or whether this bug was already there in the past but we missed it due to lack of testing.</p>\n</blockquote>",
        "id": 198091233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589905528
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725#issuecomment-630932852\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725\">Issue #1725</a>:</p>\n<blockquote>\n<blockquote>\n<p>@sunfishcode OK, this should now be it for *nixes. However, I see that symlink resolution fails on Windows, and I'll need to investigate whether this is something new, or whether this bug was already there in the past but we missed it due to lack of testing.</p>\n</blockquote>\n<p>Oh, it seems I applied the wrong fillers into <code>windows::path::path_filestat_{get, set_times}</code> that's why it's failing. </p>\n</blockquote>",
        "id": 198091670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589905732
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725#issuecomment-631586274\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725\">Issue #1725</a>:</p>\n<blockquote>\n<p>@sunfishcode I've now found and fixed the bug on Windows. It turns out that you need to pass a special flag to stop Windows from automatically dereferencing a symlink when creating a handle for it. In essence, <code>File::open(\"/dir/symlink\")</code> or equivalently <code>OpenOptions::new().read(true).open(\"/dir/symlink\")</code> is not enough and will cause Windows to create a handle for the target <code>\"/dir/file\"</code>. To prevent Windows from doing so, we need to pass <code>FILE_FLAG_NO_REPARSE_POINT</code> to <code>OpenOptions::custom_flags</code> which will stop Windows from deref and will allow us to properly mine the file stat from the actual symlink and not the target.</p>\n</blockquote>",
        "id": 198223868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589992343
    },
    {
        "content": "<p>kubkon edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725#issuecomment-631586274\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725\">Issue #1725</a>:</p>\n<blockquote>\n<p>@sunfishcode I've now found and fixed the bug on Windows. It turns out that you need to pass a special flag to stop Windows from automatically dereferencing a symlink when creating a handle for it. In essence, <code>File::open(\"/dir/symlink\")</code> or equivalently <code>OpenOptions::new().read(true).open(\"/dir/symlink\")</code> is not enough and will cause Windows to create a handle for the target <code>\"/dir/file\"</code>. To prevent Windows from doing so, we need to pass <code>FILE_FLAG_NO_REPARSE_POINT</code> to <code>OpenOptions::custom_flags</code> which will stop Windows from deref and will allow us to properly mine the file stat from the actual symlink and not the target.</p>\n<p>Oh and it turns out we've had this bug all along, but didn't catch it as we didn't test for symlinks in <code>path_filestat</code> tests ;-}</p>\n</blockquote>",
        "id": 198223929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589992381
    },
    {
        "content": "<p>kubkon edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725#issuecomment-631586274\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725\">Issue #1725</a>:</p>\n<blockquote>\n<p>@sunfishcode I've now found and fixed the bug on Windows. It turns out that you need to pass a special flag to stop Windows from automatically dereferencing a symlink when creating a handle for it. In essence, <code>File::open(\"/dir/symlink\")</code> or equivalently <code>OpenOptions::new().read(true).open(\"/dir/symlink\")</code> is not enough and will cause Windows to create a handle for the target <code>\"/dir/file\"</code>. To prevent Windows from doing so, we need to pass <code>FILE_FLAG_OPEN_REPARSE_POINT</code> to <code>OpenOptions::custom_flags</code> which will stop Windows from deref and will allow us to properly mine the file stat from the actual symlink and not the target.</p>\n<p>Oh and it turns out we've had this bug all along, but didn't catch it as we didn't test for symlinks in <code>path_filestat</code> tests ;-}</p>\n</blockquote>",
        "id": 198224022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589992427
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725#issuecomment-631587744\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1725\">Issue #1725</a>:</p>\n<blockquote>\n<p>Oh and I guess we should reapply this fact to other syscalls targeting Windows which deref symlinks, but I guess in another PR.</p>\n</blockquote>",
        "id": 198224225,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589992509
    }
]