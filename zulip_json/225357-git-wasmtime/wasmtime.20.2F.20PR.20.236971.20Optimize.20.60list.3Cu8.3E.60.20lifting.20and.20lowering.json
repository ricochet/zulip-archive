[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6971\">PR #6971</a> from <code>alexcrichton:opt-lift-lower-for-primitives</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit optimizes the lifting and lowering routines for <code>list&lt;u8&gt;</code> and other similar primitive integer types. The current lifting/lowering is intended to be general-purpose and correct but doesn't optimize well with LLVM for a number of reasons. I first attempted to reshape the general-purpose code to be easier for LLVM to optimize but in the end was unable to convince LLVM that various pointers here don't alias which meant that the general-purpose lowering/lifting never optimized well.</p>\n<p>Instead, however, I've added new trait methods which are implemented the same way as the general purpose methods beforehand. The integer/primitive implementations overwrite these implementations with more specialized versions given knowledge of primitives.</p>\n<p>On a local benchmark this makes lifting/lowering disappear from a profile since memcpy is generally much faster than per-item processing.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 389499261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694026553
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6971\">PR #6971</a>.</p>",
        "id": 389499262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694026553
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6971\">PR #6971</a>.</p>",
        "id": 389499264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694026554
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6971#pullrequestreview-1614202628\">PR review</a>:</p>\n<blockquote>\n<p>Awesome!</p>\n</blockquote>",
        "id": 389514941,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694033759
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6971\">PR #6971</a>.</p>",
        "id": 389522908,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694037775
    }
]