[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a> from <code>alexcrichton:x64-int-to-float</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is a result of the investigation on #7085. The int-to-float conversion instructions used right now on the x64 backend will implicitly source the upper bits of the result from a different register. This implicitly creates a dependency on further consumers using the conversion result on whatever previously defined the upper bits, even though they aren't used. This false dependency is the primary reason for the slowdown witnessed in #7085.</p>\n<p>The fix chosen in this commit is to model the int-to-float instructions with a new shape of instruction instead of the previous <code>GprToXmm{,Vex}</code>. This previous shape was modeled as single-input and single-output, but this does not reflect the actual nature of the <code>cvtsi2s{s,d}</code> instructions. Instead these now use <code>CvtIntToFloat{,Vex}</code> which have two source operands and one destination operand, modeling how the upper bits of a different register are used. In lowerings using this instruction the upper bits to preserver are always sourced from a zero'd out register to force breaking dependencies between instructions.</p>\n<p>Closes #7085</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 393546811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695838723
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393546815,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695838723
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393546816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695838723
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393547215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695838832
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098#pullrequestreview-1647325583\">PR review</a>:</p>\n<blockquote>\n<p>This was a fun one!</p>\n</blockquote>",
        "id": 393548734,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695839338
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393550299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695839925
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393550993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695840228
    },
    {
        "content": "<p>cfallin has disabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393555251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695841944
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098#pullrequestreview-1647325844\">PR review</a>:</p>\n<blockquote>\n<p>LGTM with changes; I think some of the regalloc metadata (or uses of it) is out-of-order.</p>\n</blockquote>",
        "id": 393555631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695842109
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098#pullrequestreview-1647325844\">PR review</a>:</p>\n<blockquote>\n<p>LGTM with changes; I think some of the regalloc metadata (or uses of it) is out-of-order.</p>\n</blockquote>",
        "id": 393555632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695842109
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098#discussion_r1339037653\">PR review comment</a>:</p>\n<blockquote>\n<p>I think these might be flipped -- the order in the regalloc metadata method below is src1, dst, src2 (since dst is a reuse-def)?</p>\n</blockquote>",
        "id": 393555633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695842109
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098#discussion_r1339038732\">PR review comment</a>:</p>\n<blockquote>\n<p>I think these are flipped -- it won't matter here since they must be equal but we should match the order in the metadata method regardless.</p>\n</blockquote>",
        "id": 393555634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695842109
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098#discussion_r1339040322\">PR review comment</a>:</p>\n<blockquote>\n<p>We could note here that a mid-end rule could rewrite <code>fcvt_from_sint</code> and friends to an x86-specific opcode that uses a zero constant, then that would be subject to normal LICM and whatnot.</p>\n</blockquote>",
        "id": 393555635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695842109
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098#discussion_r1339091353\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess the reason we can't use an existing format above is that the sources are Xmm and GprMem rather than, say, Xmm/XmmMem or Gpr/GprMem? Could we have a comment here noting that?</p>\n</blockquote>",
        "id": 393555637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695842109
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393735271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695911069
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393735292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695911073
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7098\">PR #7098</a>.</p>",
        "id": 393754465,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695915940
    }
]