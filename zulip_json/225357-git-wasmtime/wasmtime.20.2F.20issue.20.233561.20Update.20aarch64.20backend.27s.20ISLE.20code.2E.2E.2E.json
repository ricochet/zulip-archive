[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3561#issuecomment-978144364\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3561\">issue #3561</a>:</p>\n<blockquote>\n<p>Thanks for pointing this out! I didn't realize this was one of the goals but makes sense to me. I can also audit the other existing aarch64 rules soon as well to make sure they follow this principle.</p>\n<p>For this particular function though I think it may be best to match <code>$I64</code> perhaps instead of anything bigger than 32-bits since I think that's what the basic intention was, one thing for 64-bit and something else for smaller. Otherwise though r=me</p>\n</blockquote>",
        "id": 262628515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637780357
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3561#issuecomment-978152851\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3561\">issue #3561</a>:</p>\n<blockquote>\n<p>Thanks! Yeah I think this is just a natural \"bump into the corners of the language semantics as we settle into it\" thing, to be expected to some degree.</p>\n<p>I scanned over the rest of the aarch64 ISLE code and it looks good to me; and in any case the worst that happens if we miss a rule-ordering-dependent thing is that it pops up when we actually do testing that depends on it. Since the ordering is locked down/deterministic <em>right now</em> and we're testing the result of that, I'm pretty satisfied that's enough for now :-)</p>\n<p>Updated as suggested, <code>$I64</code>-specific now.</p>\n</blockquote>",
        "id": 262629921,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1637781191
    }
]