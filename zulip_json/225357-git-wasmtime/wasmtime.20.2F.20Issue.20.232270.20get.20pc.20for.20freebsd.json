[
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270#issuecomment-704430765\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270\">Issue #2270</a>:</p>\n<blockquote>\n<p>Thanks for the PR! I think there's a rustfmt issue though?</p>\n</blockquote>",
        "id": 212459177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602005240
    },
    {
        "content": "<p>subtly <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270#issuecomment-704753257\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270\">Issue #2270</a>:</p>\n<blockquote>\n<p>Tests for other hosts pass, but 6 tests fail on freebsd. However, it seems this is backtrace-rs, as all failing tests rely on trace(), and 3 of the backtrace-rs tests fail.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">    </span><span class=\"n\">traps</span>::<span class=\"n\">present_after_module_drop</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">traps</span>::<span class=\"n\">start_trap_pretty</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">traps</span>::<span class=\"n\">test_trap_stack_overflow</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">traps</span>::<span class=\"n\">test_trap_trace</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">traps</span>::<span class=\"n\">trap_display_multi_module</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">traps</span>::<span class=\"n\">trap_display_pretty</span><span class=\"w\"></span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Example</span><span class=\"w\"> </span><span class=\"n\">failure</span>:\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">traps</span>::<span class=\"n\">start_trap_pretty</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">traps</span>::<span class=\"n\">start_trap_pretty</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"s\">\"wasm trap: unreachable\"</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"s\">\"wasm trap: unreachable</span><span class=\"se\">\\n</span><span class=\"s\">wasm backtrace:</span><span class=\"se\">\\n</span><span class=\"s\">  0:   0x1d - m!die</span><span class=\"se\">\\n</span><span class=\"s\">  1:   0x21 - m!&lt;wasm function 1&gt;</span><span class=\"se\">\\n</span><span class=\"s\">  2:   0x26 - m!foo</span><span class=\"se\">\\n</span><span class=\"s\">  3:   0x2b - m!start</span><span class=\"se\">\\n</span><span class=\"s\">\"</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">all</span><span class=\"o\">/</span><span class=\"n\">traps</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">409</span>:<span class=\"mi\">5</span><span class=\"w\"></span>\n</code></pre></div>\n\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">backtrace</span><span class=\"o\">-</span><span class=\"n\">rs</span><span class=\"w\"> </span><span class=\"n\">test</span>:\n<span class=\"nc\">running</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"></span>\n<span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">doit</span><span class=\"w\"> </span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">FAILED</span><span class=\"w\"></span>\n\n<span class=\"n\">failures</span>:\n\n<span class=\"o\">----</span><span class=\"w\"> </span><span class=\"n\">doit</span><span class=\"w\"> </span><span class=\"n\">stdout</span><span class=\"w\"> </span><span class=\"o\">----</span><span class=\"w\"></span>\n<span class=\"o\">-----------------------------------</span><span class=\"w\"></span>\n<span class=\"n\">looking</span><span class=\"w\"> </span><span class=\"k\">for</span>:\n    <span class=\"nc\">tests</span><span class=\"o\">/</span><span class=\"n\">accuracy</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">40</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">dylib</span><span class=\"o\">-</span><span class=\"n\">dep</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">11</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">accuracy</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">39</span><span class=\"w\"></span>\n<span class=\"n\">found</span>:\n   <span class=\"mi\">0</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">2</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">3</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">5</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">8</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">9</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">10</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">11</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"mi\">12</span>: <span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;</span><span class=\"w\"></span>\n\n<span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">doit</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">find</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">accuracy</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">40</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">accuracy</span><span class=\"o\">/</span><span class=\"n\">main</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">104</span>:<span class=\"mi\">25</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n</code></pre></div>\n\n</blockquote>",
        "id": 212523309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602056039
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270#issuecomment-704873342\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270\">Issue #2270</a>:</p>\n<blockquote>\n<p>Ok changes look good to me, thanks for this!</p>\n<p>It's true yeah that trap stack traces won't work well if the <code>backtrace</code> crate doesn't work well, but unfortunately I don't have a FreeBSD machine to test changes on :(</p>\n</blockquote>",
        "id": 212544717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602070212
    },
    {
        "content": "<p>subtly <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270#issuecomment-705084215\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270\">Issue #2270</a>:</p>\n<blockquote>\n<blockquote>\n<p>Ok changes look good to me, thanks for this!</p>\n<p>It's true yeah that trap stack traces won't work well if the <code>backtrace</code> crate doesn't work well, but unfortunately I don't have a FreeBSD machine to test changes on :(</p>\n</blockquote>\n<p>I just set this up in arch linux with gcc and it fails the same 6 tests.</p>\n<p>Want a machine to test on?  Do you have macOS?  I used xhyve and I think it can also be installed under qemu.</p>\n</blockquote>",
        "id": 212592019,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602091703
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270#issuecomment-705827124\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270\">Issue #2270</a>:</p>\n<blockquote>\n<p>Ah sorry I don't have time to dig in and investigate this either, but if you can try running <code>cargo test</code> on the <code>backtrace</code> crate you can see if it <em>might</em> succeed or not.</p>\n</blockquote>",
        "id": 212750191,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602191652
    },
    {
        "content": "<p>subtly <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270#issuecomment-706093096\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2270\">Issue #2270</a>:</p>\n<blockquote>\n<p>Ah sorry, I found the same wasmtime tests fail on Alpine Linux, not arch linux. All tests pass on Ubuntu 20.04. I just wanted to share the observation in case anyone runs into it later.</p>\n<ul>\n<li>all backtrace tests pass on Alpine Linux</li>\n<li>except 1 test on freebsd, backtrace tests pass on all (tested main and 0.3.50)</li>\n<li>notably, the test that fails on freebsd (doit) is disabled on Alpine Linux</li>\n<li>wasmtime tests fail on Alpine Linux, FreeBSD (same errors with traces)</li>\n</ul>\n<p>I used LLVM linker for both Alpine and FreeBSD, although, I think the linker is actually supplied by rust? I think maybe the issue in wasmtime has to do with the program counter when getting frames, whereas with backtrace doit I suspect something quirky with libc::dlopen on that platform. I also read clang/llvm has its own unwind and looks like it can be compiled without it, and that could be it too. Guess I'll try and setup both OS with GCC now and see how it goes.</p>\n</blockquote>",
        "id": 212805304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602238012
    }
]