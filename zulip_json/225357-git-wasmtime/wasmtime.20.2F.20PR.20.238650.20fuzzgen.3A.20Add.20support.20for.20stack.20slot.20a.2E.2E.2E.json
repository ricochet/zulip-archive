[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650\">PR #8650</a> from <code>afonso360:fuzz-stackslot-alignment</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR is a follow up to #8635. It adds the bare minimum possible for the Cranelift Fuzzgen to start fuzzing with different stack slot alignments.</p>\n<p>Now that we can specify alignments, we should be able to start fuzzing load sinking with stack addresses <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span> . That isn't done yet, but this is the first step.</p>\n</blockquote>",
        "id": 439289323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715978629
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650\">PR #8650</a>.</p>",
        "id": 439289326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715978630
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650\">PR #8650</a>.</p>",
        "id": 439289327,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1715978630
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#discussion_r1605724573\">PR review comment</a>:</p>\n<blockquote>\n<p>Currently the max working alignment is 2^4 (16 bytes): <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603954465\">https://github.com/bytecodealliance/wasmtime/pull/8635#discussion_r1603954465</a></p>\n</blockquote>",
        "id": 439340333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716023363
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#pullrequestreview-2064660418\">PR review</a>.</p>",
        "id": 439340334,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716023363
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#pullrequestreview-2064669776\">PR review</a>.</p>",
        "id": 439340975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716024045
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#discussion_r1605731507\">PR review comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> I've been following that thread. We currently don't depend on any alignment larger than 8 bytes. And at most we'll need 16bytes (for sinking SIMD loads).</p>\n<p>But I think it's still a good idea to test with larger values, even if we end up not having any guarantee past 16 bytes.</p>\n</blockquote>",
        "id": 439340976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716024045
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#discussion_r1605731507\">PR review comment</a>.</p>",
        "id": 439341102,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716024185
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#pullrequestreview-2064670503\">PR review</a>.</p>",
        "id": 439341178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716024244
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#discussion_r1605732158\">PR review comment</a>:</p>\n<blockquote>\n<p>I missed that you are not actually checking that the stack slot is correctly aligned at runtime.</p>\n</blockquote>",
        "id": 439341181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716024244
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#pullrequestreview-2071701935\">PR review</a>:</p>\n<blockquote>\n<p>This looks good to me! Do you have a plan for verifying alignment in the future?</p>\n</blockquote>",
        "id": 440126965,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716393570
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650#issuecomment-2125842918\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650\">PR #8650</a>:</p>\n<blockquote>\n<p>Yes, but hopefully we shouldn't need to.</p>\n<p>The plan is to rely on the ABI alignment and generate loads/stores with the aligned flag if both the slot and the ABI support that alignment. That should allow us to start testing load sinking.</p>\n<p>Now, I do plan on validating if these memory accesses are actually aligned with the interpreter. The interpreter already checks if stack accesses are aligned, when they contain the <code>aligned</code> memflag, but it currently doesn't support aligning the stack slots. Or align the stack at the <code>call</code> boundary. So those are the two missing items.</p>\n<p>This hopefully shouldn't be needed since, if we're failing fuzz runs in the interpreter its not great for fuzzing efficiency. </p>\n</blockquote>",
        "id": 440191443,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716415156
    },
    {
        "content": "<p>afonso360 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8650\">PR #8650</a>.</p>",
        "id": 440205300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1716421107
    }
]