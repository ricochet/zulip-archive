[
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>This test case, produced by <code>wasm-opt -ttf</code>, produces different results for function 5 when compiled with speed-and-size optimizations vs without any optimizations:</p>\n<p>&lt;details&gt;&lt;summary&gt;WAT test case&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>(module\n      (type (;0;) (func))\n      (type (;1;) (func (param i32)))\n      (type (;2;) (func (param i64)))\n      (type (;3;) (func (param f32)))\n      (type (;4;) (func (param f64)))\n      (type (;5;) (func (result i32)))\n      (type (;6;) (func (param f64 i64 i32 i64 f32) (result f64)))\n      (import &quot;fuzzing-support&quot; &quot;log-i32&quot; (func (;0;) (type 1)))\n      (import &quot;fuzzing-support&quot; &quot;log-i64&quot; (func (;1;) (type 2)))\n      (import &quot;fuzzing-support&quot; &quot;log-f32&quot; (func (;2;) (type 3)))\n      (import &quot;fuzzing-support&quot; &quot;log-f64&quot; (func (;3;) (type 4)))\n      (func (;4;) (type 5) (result i32)\n        (local i32)\n        i32.const 5381\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=1\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=2\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=3\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=4\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=5\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=6\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=7\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=8\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=9\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=10\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=11\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=12\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=13\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=14\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=15\n        i32.xor\n        local.set 0\n        local.get 0)\n      (func (;5;) (type 6) (param f64 i64 i32 i64 f32) (result f64)\n        (local i32 i64 i64 f32 f64 f64)\n        block  ;; label = @1\n          global.get 4\n          i32.eqz\n          if  ;; label = @2\n            f64.const 0x1.00000002p+31 (;=2147483649;)\n            return\n          end\n          global.get 4\n          i32.const 1\n          i32.sub\n          global.set 4\n        end\n        block  ;; label = @1\n          loop  ;; label = @2\n            block  ;; label = @3\n              global.get 4\n              i32.eqz\n              if  ;; label = @4\n                f64.const 0x1.dcp+6 (;=119;)\n                return\n              end\n              global.get 4\n              i32.const 1\n              i32.sub\n              global.set 4\n            end\n            block  ;; label = @3\n              block  ;; label = @4\n                loop  ;; label = @5\n                  block  ;; label = @6\n                    global.get 4\n                    i32.eqz\n                    if  ;; label = @7\n                      local.get 9\n                      return\n                    end\n                    global.get 4\n                    i32.const 1\n                    i32.sub\n                    global.set 4\n                  end\n                  block  ;; label = @6\n                    block  ;; label = @7\n                      local.get 5\n                      local.tee 2\n                      local.tee 2\n                      local.tee 5\n                      local.tee 2\n                      local.tee 5\n                      local.tee 5\n                      local.tee 2\n                      local.tee 2\n                      local.set 5\n                      loop (result f32)  ;; label = @8\n                        block  ;; label = @9\n                          global.get 4\n                          i32.eqz\n                          if  ;; label = @10\n                            f64.const -nan:0xfffffffffcf41 (;=NaN;)\n                            return\n                          end\n                          global.get 4\n                          i32.const 1\n                          i32.sub\n                          global.set 4\n                        end\n                        block (result f32)  ;; label = @9\n                          block  ;; label = @10\n                            loop (result f32)  ;; label = @11\n                              block  ;; label = @12\n                                global.get 4\n                                i32.eqz\n                                if  ;; label = @13\n                                  local.get 0\n                                  return\n                                end\n                                global.get 4\n                                i32.const 1\n                                i32.sub\n                                global.set 4\n                              end\n                              block (result f32)  ;; label = @12\n                                block  ;; label = @13\n                                  local.get 2\n                                  i32.const 15\n                                  i32.and\n                                  local.get 7\n                                  i64.store offset=22 align=2\n                                  i64.const -2\n                                  local.set 6\n                                end\n                                loop (result i32)  ;; label = @13\n                                  block  ;; label = @14\n                                    global.get 4\n                                    i32.eqz\n                                    if  ;; label = @15\n                                      f64.const 0x1.060606060606p+519 (;=1756580577739303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)\n                                      return\n                                    end\n                                    global.get 4\n                                    i32.const 1\n                                    i32.sub\n                                    global.set 4\n                                  end\n                                  block (result i32)  ;; label = @14\n                                    local.get 5\n                                    i32.const 141\n                                    local.tee 5\n                                    br_if 0 (;@14;)\n                                    if (result i32)  ;; label = @15\n                                      local.get 5\n                                    else\n                                      i32.const 2097152\n                                    end\n                                    if  ;; label = @15\n                                      i32.const 2048\n                                      i32.eqz\n                                      if  ;; label = @16\n                                        local.get 0\n                                        local.set 0\n                                      else\n                                        f64.const 0x1p+41 (;=2199023255552;)\n                                        local.set 10\n                                      end\n                                      local.get 8\n                                      local.set 4\n                                    else\n                                      i32.const 1381126738\n                                      local.set 2\n                                      local.get 1\n                                      local.set 6\n                                    end\n                                    loop (result i32)  ;; label = @15\n                                      block  ;; label = @16\n                                        global.get 4\n                                        i32\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190795243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584403574
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>&lt;details&gt;&lt;summary&gt;&lt;code&gt;test-case.wat&lt;/code&gt;&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>(module\n      (type (;0;) (func))\n      (type (;1;) (func (param i32)))\n      (type (;2;) (func (param i64)))\n      (type (;3;) (func (param f32)))\n      (type (;4;) (func (param f64)))\n      (type (;5;) (func (result i32)))\n      (type (;6;) (func (param f64 i64 i32 i64 f32) (result f64)))\n      (import &quot;fuzzing-support&quot; &quot;log-i32&quot; (func (;0;) (type 1)))\n      (import &quot;fuzzing-support&quot; &quot;log-i64&quot; (func (;1;) (type 2)))\n      (import &quot;fuzzing-support&quot; &quot;log-f32&quot; (func (;2;) (type 3)))\n      (import &quot;fuzzing-support&quot; &quot;log-f64&quot; (func (;3;) (type 4)))\n      (func (;4;) (type 5) (result i32)\n        (local i32)\n        i32.const 5381\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=1\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=2\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=3\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=4\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=5\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=6\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=7\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=8\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=9\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=10\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=11\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=12\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=13\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=14\n        i32.xor\n        local.set 0\n        local.get 0\n        i32.const 5\n        i32.shl\n        local.get 0\n        i32.add\n        i32.const 0\n        i32.load8_u offset=15\n        i32.xor\n        local.set 0\n        local.get 0)\n      (func (;5;) (type 6) (param f64 i64 i32 i64 f32) (result f64)\n        (local i32 i64 i64 f32 f64 f64)\n        block  ;; label = @1\n          global.get 4\n          i32.eqz\n          if  ;; label = @2\n            f64.const 0x1.00000002p+31 (;=2147483649;)\n            return\n          end\n          global.get 4\n          i32.const 1\n          i32.sub\n          global.set 4\n        end\n        block  ;; label = @1\n          loop  ;; label = @2\n            block  ;; label = @3\n              global.get 4\n              i32.eqz\n              if  ;; label = @4\n                f64.const 0x1.dcp+6 (;=119;)\n                return\n              end\n              global.get 4\n              i32.const 1\n              i32.sub\n              global.set 4\n            end\n            block  ;; label = @3\n              block  ;; label = @4\n                loop  ;; label = @5\n                  block  ;; label = @6\n                    global.get 4\n                    i32.eqz\n                    if  ;; label = @7\n                      local.get 9\n                      return\n                    end\n                    global.get 4\n                    i32.const 1\n                    i32.sub\n                    global.set 4\n                  end\n                  block  ;; label = @6\n                    block  ;; label = @7\n                      local.get 5\n                      local.tee 2\n                      local.tee 2\n                      local.tee 5\n                      local.tee 2\n                      local.tee 5\n                      local.tee 5\n                      local.tee 2\n                      local.tee 2\n                      local.set 5\n                      loop (result f32)  ;; label = @8\n                        block  ;; label = @9\n                          global.get 4\n                          i32.eqz\n                          if  ;; label = @10\n                            f64.const -nan:0xfffffffffcf41 (;=NaN;)\n                            return\n                          end\n                          global.get 4\n                          i32.const 1\n                          i32.sub\n                          global.set 4\n                        end\n                        block (result f32)  ;; label = @9\n                          block  ;; label = @10\n                            loop (result f32)  ;; label = @11\n                              block  ;; label = @12\n                                global.get 4\n                                i32.eqz\n                                if  ;; label = @13\n                                  local.get 0\n                                  return\n                                end\n                                global.get 4\n                                i32.const 1\n                                i32.sub\n                                global.set 4\n                              end\n                              block (result f32)  ;; label = @12\n                                block  ;; label = @13\n                                  local.get 2\n                                  i32.const 15\n                                  i32.and\n                                  local.get 7\n                                  i64.store offset=22 align=2\n                                  i64.const -2\n                                  local.set 6\n                                end\n                                loop (result i32)  ;; label = @13\n                                  block  ;; label = @14\n                                    global.get 4\n                                    i32.eqz\n                                    if  ;; label = @15\n                                      f64.const 0x1.060606060606p+519 (;=1756580577739303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;)\n                                      return\n                                    end\n                                    global.get 4\n                                    i32.const 1\n                                    i32.sub\n                                    global.set 4\n                                  end\n                                  block (result i32)  ;; label = @14\n                                    local.get 5\n                                    i32.const 141\n                                    local.tee 5\n                                    br_if 0 (;@14;)\n                                    if (result i32)  ;; label = @15\n                                      local.get 5\n                                    else\n                                      i32.const 2097152\n                                    end\n                                    if  ;; label = @15\n                                      i32.const 2048\n                                      i32.eqz\n                                      if  ;; label = @16\n                                        local.get 0\n                                        local.set 0\n                                      else\n                                        f64.const 0x1p+41 (;=2199023255552;)\n                                        local.set 10\n                                      end\n                                      local.get 8\n                                      local.set 4\n                                    else\n                                      i32.const 1381126738\n                                      local.set 2\n                                      local.get 1\n                                      local.set 6\n                                    end\n                                    loop (result i32)  ;; label = @15\n                                      block  ;; label = @16\n                                        global.get 4\n                                        i32.eqz\n                                        if  ;; label = @17\n                                          f64.const -nan:0xfffffffffffab (;=NaN;)\n\n[message truncated]\n</pre></div>\n\n\n</blockquote>",
        "id": 190795351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584403678
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599859400\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-599859400\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>This is as small as <code>creduce</code> could get it:</p>\n<p>&lt;details&gt;&lt;summary&gt;&lt;code&gt;test-case.wat&lt;/code&gt;&lt;/summary&gt;</p>\n<div class=\"codehilite\"><pre><span></span>(module\n  (type (;0;) (func (param f64 i64 i32 i64 f32)))\n  (func (;0;) (type 0) (param f64 i64 i32 i64 f32)\n    (local i32 i64 i64 f32 f64 f64)\n    block  ;; label = @1\n      loop  ;; label = @2\n        block  ;; label = @3\n          global.get 4\n          if  ;; label = @4\n            loop  ;; label = @5\n              block  ;; label = @6\n                global.get 4\n                if  ;; label = @7\n                  local.get 9\n                  return\n                end\n                block  ;; label = @7\n                  loop (result f32)  ;; label = @8\n                    block (result f32)  ;; label = @9\n                      block  ;; label = @10\n                        loop (result f32)  ;; label = @11\n                          block (result f32)  ;; label = @12\n                            block (result i32)  ;; label = @13\n                              block (result i32)  ;; label = @14\n                                local.get 5\n                                if  ;; label = @15\n                                  i32.const 8\n                                  if  ;; label = @16\n                                    f64.const 0x1p+0 (;=1;)\n                                    local.set 0\n                                  end\n                                end\n                                loop (result i32)  ;; label = @15\n                                  local.get 2\n                                end\n                              end\n                            end\n                            br_if 1 (;@11;)\n                            local.get 4\n                          end\n                        end\n                        local.set 4\n                      end\n                      local.get 8\n                    end\n                  end\n                  global.set 0\n                end\n                i32.const 6\n                if (result i32)  ;; label = @7\n                  local.get 2\n                else\n                  loop (result i32)  ;; label = @8\n                    block (result i32)  ;; label = @9\n                      block  ;; label = @10\n                        f64.const 0x1.8p+2 (;=6;)\n                        local.set 0\n                      end\n                      i32.const 6\n                    end\n                  end\n                end\n                if (result i32)  ;; label = @7\n                  block (result i32)  ;; label = @8\n                    block  ;; label = @9\n                      loop (result i32)  ;; label = @10\n                        block (result i32)  ;; label = @11\n                          block  ;; label = @12\n                            f32.const 0x1p+0 (;=1;)\n                            local.set 8\n                          end\n                          local.get 5\n                        end\n                      end\n                      local.set 5\n                      loop  ;; label = @10\n                        block  ;; label = @11\n                          global.get 4\n                          if  ;; label = @12\n                            i32.const 4\n                            if  ;; label = @13\n                              f64.const 0x0p+0 (;=0;)\n                              local.set 0\n                            end\n                          end\n                        end\n                      end\n                    end\n                    i32.const 7\n                    if (result i32)  ;; label = @9\n                      return\n                    else\n                      block (result i32)  ;; label = @10\n                        local.get 5\n                      end\n                    end\n                  end\n                else\n                  block (result i32)  ;; label = @8\n                    loop (result i32)  ;; label = @9\n                      block (result i32)  ;; label = @10\n                        i32.const 2\n                        if (result i32)  ;; label = @11\n                          br 9 (;@2;)\n                        else\n                          loop (result i32)  ;; label = @12\n                            local.get 5\n                          end\n                        end\n                        if (result i32)  ;; label = @11\n                          block (result i32)  ;; label = @12\n                            loop (result i64)  ;; label = @13\n                              block (result i64)  ;; label = @14\n                                local.get 7\n                              end\n                            end\n                            local.set 3\n                            local.get 2\n                          end\n                        else\n                          i32.const 1\n                        end\n                        loop (result i32)  ;; label = @11\n                          block (result i32)  ;; label = @12\n                            i32.const 4\n                          end\n                        end\n                        i64.load\n                        local.set 6\n                      end\n                      block (result i32)  ;; label = @10\n                        loop (result i32)  ;; label = @11\n                          i32.const 4\n                        end\n                      end\n                      br_if 1 (;@8;)\n                      block  ;; label = @10\n                        f32.const 0x1.8p+2 (;=6;)\n                        local.set 4\n                      end\n                    end\n                  end\n                end\n                if (result i32)  ;; label = @7\n                  local.get 2\n                else\n                  loop (result i32)  ;; label = @8\n                    block (result i32)  ;; label = @9\n                      block  ;; label = @10\n                        local.get 0\n                        local.set 9\n                        i32.const 4\n                        if (result f64)  ;; label = @11\n                          loop (result i32)  ;; label = @12\n                            block (result i32)  ;; label = @13\n                              block  ;; label = @14\n                                i32.const 2\n                                if  ;; label = @15\n                                  f64.const 0x1.ap+4 (;=26;)\n                                  local.set 0\n                                end\n                              end\n                              i32.const 4\n                            end\n                          end\n                          f64.load\n                        else\n                          local.get 10\n                          local.tee 0\n                        end\n                        local.set 10\n                      end\n                      loop (result i32)  ;; label = @10\n                        block (result i32)  ;; label = @11\n                          block  ;; label = @12\n                            loop  ;; label = @13\n                              block  ;; label = @14\n                                i32.const 6\n                                if (result f64)  ;; label = @15\n                                  local.get 9\n                                else\n                                  f64.const 0x1p+2 (;=4;)\n                                end\n                                local.set 10\n                                f32.const 0x0p+0 (;=0;)\n                                local.set 8\n                              end\n                            end\n                            br 7 (;@5;)\n                          end\n                          unreachable\n                        end\n                      end\n                    end\n                  end\n                end\n                if  ;; label = @7\n                  f64.const 0x1p+6 (;=64;)\n                  local.set 0\n                end\n              end\n            end\n          end\n          local.get 5\n          br_if 1 (;@2;)\n        end\n      end\n    end)\n  (memory (;0;) 1)\n  (global (;0;) (mut f32) (f32.const 0x1p+0 (;=1;)))\n  (global (;1;) f32 (f32.const 0x1p+0 (;=1;)))\n  (global (;2;) f64 (f64.const 0x1p+0 (;=1;)))\n  (global (;3;) f64 (f64.const 0x1p+0 (;=1;)))\n  (global (;4;) i32 (i32.const 0)))\n</pre></div>\n\n\n<p>&lt;/details&gt;</p>\n</blockquote>",
        "id": 190805020,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584415692
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-772809213\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>The new backend framework uses a different register allocator.</p>\n</blockquote>",
        "id": 225078298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612384949
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-772813870\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>@fitzgen was this ever actually resolved? If it's still an open bug, we can leave this open until we switch over the wasmtime default to the new backend, I think.</p>\n</blockquote>",
        "id": 225079360,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612385425
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-772820786\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<blockquote>\n<p>@fitzgen was this ever actually resolved?</p>\n</blockquote>\n<p>Not as far as I know</p>\n</blockquote>",
        "id": 225081241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612386153
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331#issuecomment-772821226\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1331\">Issue #1331</a>:</p>\n<blockquote>\n<p>I believe we just stopped running the IR verifier in the fuzzers because it was too slow, so we don't see these kinds of bugs anymore</p>\n</blockquote>",
        "id": 225081367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612386196
    }
]