[
    {
        "content": "<p>jeffcharles opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7682\">PR #7682</a> from <code>jeffcharles:winch-fix-incorrect-type-for-some-operators</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;<br>\nThere is a small bug where some instructions are putting values containing <code>TypedReg</code>s with the incorrect type on the stack. Specifically <code>i64.eqz</code> and the i64 comparison instructions. This change has the <code>emit</code> functions in the <code>unop</code> and <code>binop</code> helpers return the the typed registers to put on the stack instead of assigning a type that is the same as the input type.</p>\n<p>The filetests for the comparison operators should now be moving the <code>e</code> variant of registers instead of the <code>r</code> variant of registers. I also needed to add an additional test for <code>i64.eqz</code> since the existing tests did not change as a result of fixing this issue.</p>\n</blockquote>",
        "id": 407786055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702491706
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7682\">PR #7682</a>.</p>",
        "id": 407786057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702491706
    },
    {
        "content": "<p><strong>jeffcharles</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7682\">PR #7682</a>.</p>",
        "id": 407786058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702491707
    },
    {
        "content": "<p>saulecabrera submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7682#pullrequestreview-1780259490\">PR review</a>:</p>\n<blockquote>\n<p>Looks reasonable to me, thanks!</p>\n</blockquote>",
        "id": 407788053,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702492467
    },
    {
        "content": "<p>saulecabrera has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7682\">PR #7682</a>.</p>",
        "id": 407788067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702492474
    },
    {
        "content": "<p>saulecabrera merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7682\">PR #7682</a>.</p>",
        "id": 407793632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1702494681
    }
]