[
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the pulley label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9995\">Issue #9995</a>.</p>",
        "id": 493411291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736790628
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9995\">issue #9995</a>:</p>\n<blockquote>\n<p>Pulley currently has <a href=\"https://github.com/bytecodealliance/wasmtime/blob/54385f8694e9ea736106050c69fc2822e6bd5fb6/pulley/src/interp.rs#L17-L20\">two methods of dispatch</a> in the interpreter loop, namely one morally using a giant <code>match</code> statement and the other using tail-calls between opcodes. The latter is currently only evaluatable on some architectures (e.g. x64) when optimizations are turned on and LLVM optimizes things right. Rust's <code>become</code> keyword does not currently work in Nightly.</p>\n<p>I just did a Sightglass run of these two methods of dispatch in the interpreter and I got:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">execution</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">cycles</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">pulldown</span><span class=\"o\">-</span><span class=\"n\">cmark</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">14835771.96</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">525589.74</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"k\">match</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.17</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.19</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">81442196</span><span class=\"w\"> </span><span class=\"mf\">82553273.83</span><span class=\"w\"> </span><span class=\"mi\">87049480</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">96420118</span><span class=\"w\"> </span><span class=\"mf\">97389045.79</span><span class=\"w\"> </span><span class=\"mi\">102479551</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">cycles</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">bz2</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">104438181.93</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">1644379.63</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"k\">match</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.13</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.13</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">782662505</span><span class=\"w\"> </span><span class=\"mf\">787350365.15</span><span class=\"w\"> </span><span class=\"mi\">795150499</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">888116768</span><span class=\"w\"> </span><span class=\"mf\">891788547.08</span><span class=\"w\"> </span><span class=\"mi\">916663514</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">so</span>\n\n<span class=\"n\">execution</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">cycles</span><span class=\"w\"> </span><span class=\"p\">::</span><span class=\"w\"> </span><span class=\"nc\">benchmarks</span><span class=\"o\">/</span><span class=\"n\">spidermonkey</span><span class=\"o\">/</span><span class=\"n\">benchmark</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n\n<span class=\"w\">  </span><span class=\"err\">Δ</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">674804802.30</span><span class=\"w\"> </span><span class=\"err\">±</span><span class=\"w\"> </span><span class=\"mf\">21521230.61</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">confidence</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">99</span><span class=\"o\">%</span><span class=\"p\">)</span>\n\n<span class=\"w\">  </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"mf\">1.03</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"mf\">1.04</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"n\">faster</span><span class=\"w\"> </span><span class=\"n\">than</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"p\">.</span><span class=\"n\">so</span><span class=\"o\">!</span>\n\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">19395106358</span><span class=\"w\"> </span><span class=\"mf\">19464509629.23</span><span class=\"w\"> </span><span class=\"mi\">19638165876</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"p\">.</span><span class=\"n\">so</span>\n<span class=\"w\">  </span><span class=\"p\">[</span><span class=\"mi\">18716347537</span><span class=\"w\"> </span><span class=\"mf\">18789704826.93</span><span class=\"w\"> </span><span class=\"mi\">18999413981</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"n\">tail</span><span class=\"p\">.</span><span class=\"n\">so</span>\n</code></pre></div>\n<p>which I found surprising. The \"match\" loop was 10-20% faster for bz2/pulldown-cmark where the \"tail\" loop was only 3-4% faster for spidermonkey. This goes against what I've been measuring on a \"fib\" micro-benchmark where the \"tail\" loop is about 20% faster.</p>\n<p>This leads me to the conclusion of \"I don't know what's going on here\" and I wanted to open an issue on this. It's not a maintenance burden at this time to have both implementations, but ideally we wouldn't have two indefinitely.</p>\n</blockquote>",
        "id": 493411298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736790630
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9995#issuecomment-2587788348\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9995\">issue #9995</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"pulley\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: pulley</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 493411422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736790670
    }
]