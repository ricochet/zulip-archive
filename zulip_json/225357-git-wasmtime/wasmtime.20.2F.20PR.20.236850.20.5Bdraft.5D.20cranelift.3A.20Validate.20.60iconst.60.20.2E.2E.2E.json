[
    {
        "content": "<p>timjrd opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6850\">PR #6850</a> from <code>timjrd:cranelift_validate_iconst_ranges</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Implements the following checks:</p>\n<p><code>iconst.i8</code>  immediate must be within 0 .. 0xFF<br>\n<code>iconst.i16</code> immediate must be within 0 .. 0xFFFF<br>\n<code>iconst.i32</code> immediate must be within 0 .. 0xFFFFFFFF</p>\n<p>fix #3059</p>\n<h3>Explain why this change is needed:</h3>\n<p>As mentioned in #3059, <code>iconst</code> currently allows any immediate within the range of an <code>i64</code>, even for <code>iconst.i8</code>, <code>iconst.i16</code> or <code>iconst.i32</code>.</p>\n<h3>This breaks some tests!</h3>\n<p>Running <code>cargo test</code> in <code>/cranelift/codegen</code> returns successfully. I also added a few tests concerning the new checks.</p>\n<p>Running <code>cargo test</code> in <code>/cranelift</code> returns some failures. For example:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">1</span>: <span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">inst1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">iconst</span><span class=\"p\">.</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span>: <span class=\"nc\">constant</span><span class=\"w\"> </span><span class=\"n\">immediate</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">bounds</span>\n<span class=\"p\">[</span><span class=\"o\">..</span><span class=\"p\">.]</span>\n<span class=\"n\">failures</span>:\n    <span class=\"nc\">bugpoint</span>::<span class=\"n\">tests</span>::<span class=\"n\">test_reduce</span>\n<span class=\"w\">    </span><span class=\"n\">run</span>::<span class=\"n\">test</span>::<span class=\"n\">nop</span>\n</code></pre></div>\n<p>Which is expected if we forbid negative immediates, @jameysharp could you please confirm?</p>\n<p>Running <code>cargo test</code> at the root of this repo returns a lot of failures, possibly related to negative immediates.</p>\n<h4>This is my first contribution so this patch is probably broken.</h4>\n</blockquote>",
        "id": 385303508,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1692144254
    }
]