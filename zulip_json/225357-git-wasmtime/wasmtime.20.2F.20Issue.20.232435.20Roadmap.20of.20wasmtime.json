[
    {
        "content": "<p>daubaris opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435\">Issue #2435</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Adding a roadmap of wasmtime.</p>\n<h4>Benefit</h4>\n<p>I think most of the users and yet-to-be users would be interested in seeing what is the future of the project. Similarly, a roadmap could potentially reveal if the project is focused on achieving some specific major goals, such as specific platform support. Moreover, a clear list, for example, for a release could attract more contributors as it would be clear what needs to be done.</p>\n<p>At the present moment, it is certainly vague what needs to be improved (besides checking issues) and what new features could be developed (besides new proposals).</p>\n<h4>Implementation</h4>\n<p>It could be added as a new document to the existing <code>docs</code> folder.</p>\n</blockquote>",
        "id": 217385186,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605868908
    },
    {
        "content": "<p>daubaris edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435\">Issue #2435</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Adding a roadmap of wasmtime.</p>\n<h4>Benefit</h4>\n<p>I think most of the users and yet-to-be users would be interested in seeing what is the future of the project. Similarly, a roadmap could potentially reveal if the project is focused on achieving some specific major goals, such as specific platform support. Moreover, a clear list, for example, for a release could attract more contributors as it would be clear what needs to be done.</p>\n<p>At the present moment, it is certainly vague what needs to be improved (besides checking issues) and what new features could be developed (besides new proposals) and what are the overall goals.</p>\n<h4>Implementation</h4>\n<p>It could be added as a new document to the existing <code>docs</code> folder.</p>\n</blockquote>",
        "id": 217385374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605869032
    },
    {
        "content": "<p>daubaris edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435\">Issue #2435</a>:</p>\n<blockquote>\n<h4>Feature</h4>\n<p>Adding a roadmap of wasmtime.</p>\n<h4>Benefit</h4>\n<p>I think most of the users and yet-to-be users would be interested in seeing what is the future of the project. Similarly, a roadmap could potentially reveal if the project is focused on achieving some specific major goals, such as specific platform support. Moreover, a clear list, for example, for a release could attract more contributors as it would be clear what needs to be done.</p>\n<p>At the present moment, it is certainly vague what needs to be improved (besides checking issues), what new features could be developed (besides new proposals) and what are the overall goals.</p>\n<h4>Implementation</h4>\n<p>It could be added as a new document to the existing <code>docs</code> folder.</p>\n</blockquote>",
        "id": 217385444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605869051
    },
    {
        "content": "<p>michaelvoronov <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435#issuecomment-738287246\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435\">Issue #2435</a>:</p>\n<blockquote>\n<p>Heavily +1, we are especially interested in interface types MVP implementation in Wasmtime. There are some proposals (like module linking and let from function reference) that should be supported first, and module linking has the nice tracking issue with all neccessary information, but absence of global roadmap doesn't allow us to make a long-term plans. </p>\n</blockquote>",
        "id": 218749572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607027151
    },
    {
        "content": "<p>michaelvoronov edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435#issuecomment-738287246\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435\">Issue #2435</a>:</p>\n<blockquote>\n<p>Heavily +1, we are especially interested in interface types MVP implementation in Wasmtime. There are some proposals (such as module linking and let from function reference) that should be supported first, and module linking has the nice tracking issue with all neccessary information, but absence of global roadmap doesn't allow us to make a long-term plans. </p>\n</blockquote>",
        "id": 218749708,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1607027225
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435#issuecomment-747801772\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435\">Issue #2435</a>:</p>\n<blockquote>\n<p>Hi all: it doesn't directly address the <em>wasmtime</em> planning (w.r.t. Wasm feature support and other runtime efforts), but I've put up an RFC just now with a proposed roadmap for Cranelift in 2021 (<a href=\"https://github.com/bytecodealliance/rfcs/issues/8\">bytecodealliance/rfcs#8</a>), which may be relevant for planning purposes as wasmtime relies on and benefits from Cranelift improvements (and Cranelift lives in this repo) :-)</p>\n</blockquote>",
        "id": 220325285,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608253423
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435#issuecomment-748620158\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2435\">Issue #2435</a>:</p>\n<blockquote>\n<p><a href=\"https://bytecodealliance.org/articles/1-year-update\">The recent 1-year-update blog post</a> lays out a roadmap for a lot of the things that we'll be focusing on in Wasmtime.</p>\n</blockquote>",
        "id": 220523803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1608477114
    }
]