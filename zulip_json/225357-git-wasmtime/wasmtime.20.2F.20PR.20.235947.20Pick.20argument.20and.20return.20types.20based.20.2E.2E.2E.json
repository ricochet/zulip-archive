[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>:</p>\n<blockquote>\n<p>When generating instructions during fuzzing, use the opcode's constraints to guide the generation of argument and return value types. This gets us slightly closer to not needing <code>OPCODE_SIGNATURES</code>, but also surfaces some problems with how we encode constraints for some instructions. For example, some instructions require that the type of their output has fewer bits than the type of their input, but we do not currently mechanize this constraint. As a result, the changes in this PR will frequently generate unexpected combinations of types for an instruction's inputs and outputs that trigger panics in a backend.</p>\n<p>Co-authored-by: Jamey Sharp &lt;<a href=\"mailto:jsharp@fastly.com\">jsharp@fastly.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 340000772,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678152213
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>:</p>\n<blockquote>\n<p><strong>This PR is not ready for review, there are some problems to work out that are outlined below.</strong></p>\n<p>When generating instructions during fuzzing, use the opcode's constraints to guide the generation of argument and return value types. This gets us slightly closer to not needing <code>OPCODE_SIGNATURES</code>, but also surfaces some problems with how we encode constraints for some instructions. For example, some instructions require that the type of their output has fewer bits than the type of their input, but we do not currently mechanize this constraint. As a result, the changes in this PR will frequently generate unexpected combinations of types for an instruction's inputs and outputs that trigger panics in a backend.</p>\n<p>Co-authored-by: Jamey Sharp &lt;<a href=\"mailto:jsharp@fastly.com\">jsharp@fastly.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 340000876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678152272
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 340181689,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678213536
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 340681208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678386024
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 340695099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678390196
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 341859797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678814277
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 341860380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678814409
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 341879009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678819701
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 341927877,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678837185
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 342108141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1678897688
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343178357,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679332108
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>:</p>\n<blockquote>\n<p><strong>This PR is not ready for review, there are some problems to work out that are outlined below.</strong></p>\n<p>Remove the <code>OPCODE_SIGNATURES</code> constant in the function generator, using instead an explicit deny list for avoiding instruction instatiations that we know are problematic. This gives us two things:</p>\n<ol>\n<li>An explicit list of the instruction instantiations that need fuzzing</li>\n<li>All new opcodes will automatically be fuzzed</li>\n</ol>\n<p>Burning down the list from 1 should be fairly mechanical as we can remove instantiations from the list and see if it fails for a given backend.</p>\n<p>Co-authored-by: Jamey Sharp &lt;<a href=\"mailto:jsharp@fastly.com\">jsharp@fastly.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 343181028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679332809
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR is rebased on top of #6070, and shouldn't be merged without it.</p>\n<p>Remove the <code>OPCODE_SIGNATURES</code> constant in the function generator, using instead an explicit deny list for avoiding instruction instatiations that we know are problematic. This gives us two things:</p>\n<ol>\n<li>An explicit list of the instruction instantiations that need fuzzing</li>\n<li>All new opcodes will automatically be fuzzed</li>\n</ol>\n<p>Burning down the list from 1 should be fairly mechanical as we can remove instantiations from the list and see if it fails for a given backend.</p>\n<p>Co-authored-by: Jamey Sharp &lt;<a href=\"mailto:jsharp@fastly.com\">jsharp@fastly.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 343181130,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679332833
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343182889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679333270
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343186055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679334066
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343190116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679335155
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343208639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679340272
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343228011,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679347156
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343238390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679351482
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR is rebased on top of #6070, and shouldn't be merged without it.</p>\n<p>Lazily populate the <code>OPCODE_SIGNATURES</code> constant in the function generator, using an explicit deny list for avoiding instruction instatiations that we know are problematic. This gives us two things:</p>\n<ol>\n<li>An explicit list of the instruction instantiations that need fuzzing</li>\n<li>All new opcodes will automatically be fuzzed</li>\n</ol>\n<p>Burning down the list from 1 should be fairly mechanical as we can remove instantiations from the list and see if it fails for a given backend.</p>\n<p>Co-authored-by: Jamey Sharp &lt;<a href=\"mailto:jsharp@fastly.com\">jsharp@fastly.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 343238609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679351568
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR is rebased on top of #6070, and shouldn't be merged without it.</p>\n<p>Lazily populate the <code>OPCODE_SIGNATURES</code> constant in the function generator, using an explicit deny list for avoiding instruction instantiations that we know are problematic. This gives us two things:</p>\n<ol>\n<li>An explicit list of the instruction instantiations that need fuzzing</li>\n<li>All new opcodes will automatically be fuzzed</li>\n</ol>\n<p>Burning down the list from 1 should be fairly mechanical as we can remove instantiations from the list and see if it fails for a given backend.</p>\n<p>Co-authored-by: Jamey Sharp &lt;<a href=\"mailto:jsharp@fastly.com\">jsharp@fastly.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 343238656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679351586
    },
    {
        "content": "<p><strong>elliottt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> as ready for review.</p>",
        "id": 343243155,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679353500
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/afonso360\">afonso360</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a>.</p>",
        "id": 343243166,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679353503
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343244839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679354298
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343251348,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679358245
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343261787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679365233
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>:</p>\n<blockquote>\n<p>Lazily populate the <code>OPCODE_SIGNATURES</code> constant in the function generator, using an explicit deny list for avoiding instruction instantiations that we know are problematic. This gives us two things:</p>\n<ol>\n<li>An explicit list of the instruction instantiations that need fuzzing</li>\n<li>All new opcodes will automatically be fuzzed</li>\n</ol>\n<p>Burning down the list from 1 should be fairly mechanical as we can remove instantiations from the list and see if it fails for a given backend.</p>\n<p>Co-authored-by: Jamey Sharp &lt;<a href=\"mailto:jsharp@fastly.com\">jsharp@fastly.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 343261804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679365250
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#pullrequestreview-1350217776\">PR review</a>.</p>",
        "id": 343344737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679398694
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#pullrequestreview-1350217776\">PR review</a>.</p>",
        "id": 343344738,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679398694
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#discussion_r1143232276\">PR review comment</a>:</p>\n<blockquote>\n<p>What do you think about using the <code>exceptions!</code> macro here? I think it could improve readability</p>\n</blockquote>",
        "id": 343344739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679398694
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#discussion_r1143238986\">PR review comment</a>:</p>\n<blockquote>\n<p>If we use <code>exceptions!</code> below, it probably would be fairly easy to move this block into that list, that way Its one less place to look at. (The special opcodes should probably still be rejected here)</p>\n</blockquote>",
        "id": 343344741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679398694
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#pullrequestreview-1350892608\">PR review</a>.</p>",
        "id": 343458914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679415301
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#discussion_r1143659825\">PR review comment</a>:</p>\n<blockquote>\n<p>I'll move the ones that haven't been vetted into there, and leave the others with comments about why they're there <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 343458917,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679415301
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#pullrequestreview-1350892780\">PR review</a>.</p>",
        "id": 343458936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679415305
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947#discussion_r1143659962\">PR review comment</a>:</p>\n<blockquote>\n<p>I like it!</p>\n</blockquote>",
        "id": 343458940,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679415305
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343459737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679415514
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a> from <code>trevor/generate-instruction-table-fuzzgen</code> to <code>main</code>.</p>",
        "id": 343460223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679415620
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5947\">PR #5947</a>.</p>",
        "id": 343532438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679437461
    }
]