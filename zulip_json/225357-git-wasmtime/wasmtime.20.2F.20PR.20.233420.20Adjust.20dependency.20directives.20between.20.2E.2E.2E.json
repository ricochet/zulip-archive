[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420\">PR #3420</a> from <code>exact-version-requirements</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a preparation for the release process for Wasmtime. The<br>\nspecific changes here are to delineate which crates are \"public\", and<br>\nall version requirements on non-public crates will now be done with<br>\n<code>=A.B.C</code> version requirements instead of today's <code>A.B.C</code> version<br>\nrequirements.</p>\n<p>The purpose for doing this is to assist with patch releases that might<br>\nhappen in the future. Patch releases of wasmtime are already required to<br>\nnot break the APIs of \"public\" crates, but no such guarantee is given<br>\nabout \"internal\" crates. This means that a patch release runs the risk,<br>\nfor example, of breaking an internal API. In doing so though we would<br>\nalso need to release a new major version of the internal crate, but we<br>\nwouldn't have a great hole in the number scheme of major versions to do<br>\nso. By using <code>=A.B.C</code> requirements for internal crates it means we can<br>\nsafely ignore strict semver-compatibility between releases of internal<br>\ncrates for patch releases, since the only consumers of the crate will be<br>\nthe corresponding patch release of the <code>wasmtime</code> crate itself (or other<br>\npublic crates).</p>\n<p>The <code>publish.rs</code> script has been updated with a check to verify that<br>\ndependencies on internal crates are all specified with an <code>=</code><br>\ndependency, and dependnecies on all public crates are without a <code>=</code><br>\ndependency. This will hopefully make it so we don't have to worry about<br>\nwhat to use where, we just let CI tell us what to do. Using this<br>\nmodification all version dependency declarations have been updated.</p>\n<p>Note that some crates were adjusted to simply remove their <code>version</code><br>\nrequirement in cases such as the crate wasn't published anyway (<code>publish\n= false</code> was specified) or it's in the <code>dev-dependencies</code> section which<br>\ndoesn't need version specifiers for path dependencies.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 256461883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633545373
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-773098112\">PR review</a>.</p>",
        "id": 256462358,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633545559
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#discussion_r723579295\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this will break testing of cranelift-object with crater.</p>\n</blockquote>",
        "id": 256462359,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633545559
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420\">PR #3420</a>.</p>",
        "id": 258068665,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634578679
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-782410104\">PR review</a>.</p>",
        "id": 258073018,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634580409
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420\">PR #3420</a> from <code>exact-version-requirements</code> to <code>main</code>.</p>",
        "id": 258075167,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634581191
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-782439237\">PR review</a>.</p>",
        "id": 258077241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634582009
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-782463724\">PR review</a>.</p>",
        "id": 258081163,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634583536
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#discussion_r731227093\">PR review comment</a>:</p>\n<blockquote>\n<p>As per <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#issuecomment-936886434\">https://github.com/bytecodealliance/wasmtime/pull/3420#issuecomment-936886434</a> can you please unpin all cranelift crates except cranelift-codegen-meta, cranelift-codegen-shared for cranelift-codegen?</p>\n</blockquote>",
        "id": 258081165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634583536
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-783448676\">PR review</a>.</p>",
        "id": 258215084,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634657264
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#discussion_r731990717\">PR review comment</a>:</p>\n<blockquote>\n<p>Doing so defeats the purpose for this change and I don't believe reflects how cranelift is developed right now. In the future when cranelift-codegen has a stability story and is designed to be stable that seems like a reasonable change to make, but I'm led to believe that that's not how it works today. This means that a vulnerability may involve a breaking change in cranelift-codegen or one of these crates so to uphold Wasmtime's stability story we would need to have a patch release of all the crates here and not use different versions.</p>\n</blockquote>",
        "id": 258215086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634657265
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#discussion_r732002022\">PR review comment</a>:</p>\n<blockquote>\n<p>The dependencies of cranelift-codegen are already re-exported by cranelift-codegen. Removing or changing any api from them would be a breaking change of cranelift-codegen and thus possibly break existing users of cranelift, which isn't allowed for patch releases. Adding new api's would continue to work as the version specifier would then simply specify the new patch release as minimum version.</p>\n</blockquote>",
        "id": 258217212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634657968
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-783463688\">PR review</a>.</p>",
        "id": 258217240,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634657975
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-783521206\">PR review</a>.</p>",
        "id": 258226444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634660869
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#discussion_r732045475\">PR review comment</a>:</p>\n<blockquote>\n<p>@bjorn3 The intent of @alexcrichton's change is to give us a bit more control when we possibly have to make security-related patches in the future. While the \"letter of the law\" might indicate that all exported symbols must strictly obey semver for patch releases, in practice we don't guarantee stability of Cranelift interfaces beyond perhaps the instruction-builder interface. The project admittedly has not reached the point where we have a written-down stability policy and/or where we have carefully trimmed our exports just to the things we actually guarantee, but that should be the direction that we aim toward. I can say that it seems unlikely to me we would break <code>InstBuilder</code> for a security patch.</p>\n<p>All of this is indicating to me that we need an API stability policy for Cranelift, which would need to be an RFC in its own right, so maybe I will work on that at some point in the near-to-medium-term.</p>\n</blockquote>",
        "id": 258226445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634660869
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-783602649\">PR review</a>.</p>",
        "id": 258241507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634665694
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#discussion_r732108269\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>All of this is indicating to me that we need an API stability policy for Cranelift, which would need to be an RFC in its own right, so maybe I will work on that at some point in the near-to-medium-term.</p>\n</blockquote>\n<p>That is something different from semver compatibility. I am talking about how semver compatible releases need to be api compatible. An api stability policy however is how the api changes between <strong>non</strong>-semver compatible versions. In addition security fixes in cranelift are very likely to be in the implementation of a function and not in the interface or if in the interface, in the interface of a private function. I don't think there is any way that cranelift-entity and cranelift-bforest could cause a security issue that needs a change in the api. cranelift-bforest hasn't had any meaningful changes for &gt;2 years and especially not any api breaking changes in that time.</p>\n</blockquote>",
        "id": 258241509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634665694
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#discussion_r732108269\">PR review comment</a>.</p>",
        "id": 258241709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1634665769
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420\">PR #3420</a> from <code>exact-version-requirements</code> to <code>main</code>.</p>",
        "id": 259015556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1635193472
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-788596140\">PR review</a>.</p>",
        "id": 259017366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1635194343
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420#pullrequestreview-788633312\">PR review</a>.</p>",
        "id": 259022537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1635196954
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3420\">PR #3420</a>.</p>",
        "id": 259101009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1635257165
    }
]