[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101\">PR #3101</a> from <code>interpreter-more-branches</code> to <code>main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> </p>\n<p>This PR Implements branches that use jump tables in the interpreter. Some additional questions inline.<br>\n</p>\n</blockquote>",
        "id": 246621065,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626801174
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-710878730\">PR review</a>.</p>",
        "id": 246621623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626801432
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#discussion_r673323802\">PR review comment</a>:</p>\n<blockquote>\n<p>Both of these tests don't work in the actual compiler, but I'm not sure if its a bug.</p>\n<p>It looks like we convert from <code>br_tables</code> into <code>indirect_jump_table_br</code> at some point during compilation. But do we support these instructions directly?</p>\n<p>The crash that i'm seeing is the following:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">f</span><span class=\"p\">.</span><span class=\"n\">dfg</span><span class=\"p\">[</span><span class=\"n\">inst</span><span class=\"p\">].</span><span class=\"n\">opcode</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">Opcode</span>::<span class=\"n\">BrTable</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"err\">\\</span><span class=\"n\">codegen</span><span class=\"err\">\\</span><span class=\"n\">src</span><span class=\"err\">\\</span><span class=\"n\">machinst</span><span class=\"err\">\\</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">901</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"w\"></span>\n<span class=\"n\">FAIL</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"err\">\\</span><span class=\"n\">filetests</span><span class=\"err\">\\</span><span class=\"n\">filetests</span><span class=\"err\">\\</span><span class=\"n\">runtests</span><span class=\"err\">\\</span><span class=\"n\">br_jumptable</span><span class=\"p\">.</span><span class=\"n\">clif</span>: <span class=\"nc\">panicked</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">0</span>: <span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">self</span><span class=\"p\">.</span><span class=\"n\">f</span><span class=\"p\">.</span><span class=\"n\">dfg</span><span class=\"p\">[</span><span class=\"n\">inst</span><span class=\"p\">].</span><span class=\"n\">opcode</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">Opcode</span>::<span class=\"n\">BrTable</span><span class=\"w\"></span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"n\">Error</span>: <span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">failure</span><span class=\"w\"></span>\n</code></pre></div>\n</blockquote>",
        "id": 246621625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626801432
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-710881331\">PR review</a>.</p>",
        "id": 246622034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626801619
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#discussion_r673326447\">PR review comment</a>:</p>\n<blockquote>\n<p>There are more arguments to this instruction, namely <code>size</code> and the jump table.</p>\n<ul>\n<li>\n<p>Should we perform any sort of assertion on <code>size</code>?</p>\n</li>\n<li>\n<p>If the user tries to request an entry out of bounds, do we allow them to do that and then trap in <code>IndirectJumpTableBr </code>? Or do we prevent that entry from being generated here?</p>\n</li>\n</ul>\n</blockquote>",
        "id": 246622035,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626801619
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#discussion_r673327922\">PR review comment</a>:</p>\n<blockquote>\n<p>I just noticed that this is probably not the most applicable trap code (call instead of jump?), should I create a new one?</p>\n</blockquote>",
        "id": 246622248,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626801716
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-710882771\">PR review</a>.</p>",
        "id": 246622249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626801716
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-710891872\">PR review</a>.</p>",
        "id": 246623629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626802328
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#discussion_r673338569\">PR review comment</a>:</p>\n<blockquote>\n<p>These instructions are only used by the old x86 backend as part of a lowering from <code>br_table</code>. The new x64 backend uses <code>br_table</code> directly.</p>\n</blockquote>",
        "id": 246623630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626802328
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-710905378\">PR review</a>.</p>",
        "id": 246625547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626803228
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#discussion_r673352564\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh, I didn't realize that, I thought that they were still valid because this <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/licm/rewrite-jump-table.clif\">test</a> which targets aarch64 still uses them.</p>\n<p>I'll remove the implementation for this from the PR</p>\n</blockquote>",
        "id": 246625548,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626803228
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101\">PR #3101</a> from <code>interpreter-more-branches</code> to <code>main</code>.</p>",
        "id": 246627219,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626804048
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-710923021\">PR review</a>.</p>",
        "id": 246627942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626804430
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#discussion_r673365845\">PR review comment</a>:</p>\n<blockquote>\n<p>By the way, are <code>brif</code> and <code>brff</code> also replaced by <code>br_icmp</code>/<code>fcmp</code>?</p>\n</blockquote>",
        "id": 246627943,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626804430
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101\">PR #3101</a> from <code>interpreter-more-branches</code> to <code>main</code>.</p>",
        "id": 246631008,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626805985
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-710945454\">PR review</a>.</p>",
        "id": 246631057,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626806012
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#discussion_r673383169\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think that is decided yet.</p>\n</blockquote>",
        "id": 246631058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626806012
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101#pullrequestreview-711117359\">PR review</a>.</p>",
        "id": 246659003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626820275
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3101\">PR #3101</a>.</p>",
        "id": 246659017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1626820289
    }
]