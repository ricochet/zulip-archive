[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741\">PR #1741</a> from <code>filetest-vcode-compile</code> to <code>master</code>:</p>\n<blockquote>\n<p>I hadn't realized before that the filetest backend for <code>test vcode</code> is<br>\ndoing essentially what <code>compile</code> is doing, but for new (<code>MachInst</code>)<br>\nbackends: it is just getting a disassembly and running it through<br>\nfilecheck. There's no reason not to reuse <code>test compile</code> for the AArch64<br>\ntests as well.</p>\n<p>This was motivated by the desire to have \"this IR compiles successfully\"<br>\ntests work on both x86 and AArch64. It seems this should work fine by<br>\nadding multiple <code>target</code> directives when a test case should be<br>\ncompile-tested on multiple architectures.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 198363655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590088515
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/sunfishcode\">sunfishcode</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741\">PR #1741</a>.</p>",
        "id": 198363656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590088515
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#pullrequestreview-416636322\">PR Review</a>.</p>",
        "id": 198404671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590120708
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#discussion_r429033111\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Should this be guarded by <code>if isa.get_mach_backend().is_some() ...</code> like below then?</p>\n</blockquote>",
        "id": 198404672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590120708
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#pullrequestreview-416638369\">PR Review</a>.</p>",
        "id": 198404951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590121198
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#discussion_r429034798\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I hadn't noticed this <code>mach_compile_result</code> before and this comment is irrelevant to this PR, but it does feel like there is probably a re-factoring out there somewhere where the new backend and the old co-exist a little more cleanly (e.g. have the Mach logic in <code>DisplayFunction</code> and <code>TargetIsa</code> instead of a separate top-level field or something along those lines).</p>\n</blockquote>",
        "id": 198404952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590121198
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#pullrequestreview-416638401\">PR Review</a>.</p>",
        "id": 198404991,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590121205
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741\">PR #1741</a> from <code>filetest-vcode-compile</code> to <code>master</code>:</p>\n<blockquote>\n<p>I hadn't realized before that the filetest backend for <code>test vcode</code> is<br>\ndoing essentially what <code>compile</code> is doing, but for new (<code>MachInst</code>)<br>\nbackends: it is just getting a disassembly and running it through<br>\nfilecheck. There's no reason not to reuse <code>test compile</code> for the AArch64<br>\ntests as well.</p>\n<p>This was motivated by the desire to have \"this IR compiles successfully\"<br>\ntests work on both x86 and AArch64. It seems this should work fine by<br>\nadding multiple <code>target</code> directives when a test case should be<br>\ncompile-tested on multiple architectures.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 198509090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590193758
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#pullrequestreview-417233074\">PR Review</a>.</p>",
        "id": 198509093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590193768
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#discussion_r429496551\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Fixed, thanks!</p>\n</blockquote>",
        "id": 198509094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590193769
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#pullrequestreview-417233275\">PR Review</a>.</p>",
        "id": 198509170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590193870
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741#discussion_r429496746\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah, in general I agree; it's a little tricky because the interfaces don't provide quite the same functionality, but I'll think about this a bit more to see if there isn't some way to clean it up.</p>\n</blockquote>",
        "id": 198509171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590193870
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1741\">PR #1741</a>.</p>",
        "id": 198512410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1590199042
    }
]