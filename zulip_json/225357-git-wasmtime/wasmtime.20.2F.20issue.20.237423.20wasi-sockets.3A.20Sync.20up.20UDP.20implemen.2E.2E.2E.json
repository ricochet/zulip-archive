[
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423#issuecomment-1787945114\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423\">issue #7423</a>:</p>\n<blockquote>\n<blockquote>\n<p>where's all this error-handling code coming from? (...) I'm curious if you're porting from another library for example or something like that.</p>\n</blockquote>\n<p>Not any single place but a combination of: \"official\" documentations, stack overflow, OS source code, trial-and-error, ..</p>\n<blockquote>\n<p>This seems extensive enough that the tests probably aren't exercising all the various cases</p>\n</blockquote>\n<p>Are you referring to the error mappings in <code>network.rs -&gt; tcp/udp_bind</code> and <code>network.rs -&gt; tcp_accept</code>? Those are indeed not being tested, because I don't know how to without hogging up system resources or them being unreliable.</p>\n</blockquote>",
        "id": 399592814,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698782214
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423#issuecomment-1787953584\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423\">issue #7423</a>:</p>\n<blockquote>\n<p>Ah ok makes sense. It's not really anything in particular I'm worried about or looking at, but it's lots of little things like:</p>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L49\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L49</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L203\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L203</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L254-L268\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L254-L268</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L517-L525\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L517-L525</a></li>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L699-L702\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L699-L702</a></li>\n</ul>\n<p>I'm not worried about any of these, mostly curious instead how they all came into existence and if you hit issues locally or if you're copying. Either way is fine, and what you say makes sense, so sounds good to me!</p>\n</blockquote>",
        "id": 399593928,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1698782618
    },
    {
        "content": "<p>badeend <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423#issuecomment-1793536504\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423\">issue #7423</a>:</p>\n<blockquote>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L49\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L49</a></li>\n</ul>\n</blockquote>\n<p>This is a standard POSIX error code for the bind syscall:<br>\n<code>EAFNOSUPPORT: The specified address is not a valid address for the address family of the specified socket.</code><br>\nand complements our own validation slightly higher up in the function. The mapping is there just in case there is an edge case our validation logic didn't catch.</p>\n<hr>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L203\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L203</a></li>\n</ul>\n</blockquote>\n<p>From the <a href=\"https://learn.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-listen#:~:text=is%20already%20connected.-,WSAEMFILE,-No%20more%20socket\">docs</a></p>\n<hr>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L254-L268\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L254-L268</a></li>\n</ul>\n</blockquote>\n<p>From the <a href=\"https://man7.org/linux/man-pages/man2/accept.2.html#:~:text=Linux%20accept()%20(and%20accept4())%20passes%20already%2Dpending%20network%0A%20%20%20%20%20%20%20errors%20on%20the%20new%20socket%20as%20an%20error%20code%20from%20accept().%20%20This%0A%20%20%20%20%20%20%20behavior%20differs%20from%20other%20BSD%20socket%20implementations.\">docs</a></p>\n<hr>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L517-L525\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L517-L525</a></li>\n</ul>\n</blockquote>\n<p>CI discovered that for me. This is actively tested by:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/test-programs/src/bin/preview2_tcp_sockopts.rs#L46-L49\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/test-programs/src/bin/preview2_tcp_sockopts.rs#L46-L49</a></p>\n<hr>\n<blockquote>\n<ul>\n<li><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L699-L702\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/wasi/src/preview2/host/tcp.rs#L699-L702</a></li>\n</ul>\n</blockquote>\n<p>From the <a href=\"https://man7.org/linux/man-pages/man7/socket.7.html#:~:text=The%20kernel%20doubles%20this%20value%20(to%20allow%20space%20for%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20bookkeeping%20overhead)%20when%20it%20is%20set%20using%20setsockopt(2)%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20and%20this%20doubled%20value%20is%20returned%20by%20getsockopt(2).\">docs</a>. This is actively tested by:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/test-programs/src/bin/preview2_tcp_sockopts.rs#L75-L79\">https://github.com/bytecodealliance/wasmtime/blob/f63350e06bf032e4c60bc460e4acbbfa6ce5bf48/crates/test-programs/src/bin/preview2_tcp_sockopts.rs#L75-L79</a></p>\n</blockquote>",
        "id": 400322195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699126399
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423#issuecomment-1793852540\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7423\">issue #7423</a>:</p>\n<blockquote>\n<p>Thanks for the explanations! When you get a chance it might be goood to have some of that commentary in the code as well.</p>\n</blockquote>",
        "id": 400424068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699220066
    }
]