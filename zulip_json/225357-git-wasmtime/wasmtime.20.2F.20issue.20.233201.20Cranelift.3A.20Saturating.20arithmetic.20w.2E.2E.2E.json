[
    {
        "content": "<p>dheaton-arm opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3201\">issue #3201</a>:</p>\n<blockquote>\n<p>Opening an issue based on discussion in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3188#discussion_r690657131\">https://github.com/bytecodealliance/wasmtime/pull/3188#discussion_r690657131</a>.</p>\n<p><code>uadd_sat</code> and <code>usub_sat</code> are not implemented in the <code>x86_64</code> Cranelift backend (but are implemented for <code>AArch64</code>) for <code>i32x4</code> or <code>i64x2</code> SIMD vectors.</p>\n<p>CLIF bugpoint (<code>uadd_sat</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i32x4</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">uaddsat_i32x4</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i64x2</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">uaddsat_i64x2</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>CLIF bugpoint (<code>usub_sat</code>):</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i32x4</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">usubsat_i32x4</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i64x2</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">usubsat_i64x2</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 249830870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1629282573
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3201\">issue #3201</a>:</p>\n<blockquote>\n<p>Opening an issue based on discussion in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3188#discussion_r690657131\">https://github.com/bytecodealliance/wasmtime/pull/3188#discussion_r690657131</a>.</p>\n<p><code>uadd_sat</code> and <code>usub_sat</code> are not implemented in the <code>x86_64</code> Cranelift backend (but are implemented for <code>AArch64</code>) for <code>i32x4</code> or <code>i64x2</code> SIMD vectors.</p>\n<p>CLIF bugpoint (<code>uadd_sat</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i32x4</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">uaddsat_i32x4</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i64x2</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">uaddsat_i64x2</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>CLIF bugpoint (<code>usub_sat</code>):</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i32x4</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">usubsat_i32x4</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i64x2</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">usubsat_i64x2</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 255807768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633122424
    },
    {
        "content": "<p>akirilov-arm labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3201\">issue #3201</a>:</p>\n<blockquote>\n<p>Opening an issue based on discussion in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3188#discussion_r690657131\">https://github.com/bytecodealliance/wasmtime/pull/3188#discussion_r690657131</a>.</p>\n<p><code>uadd_sat</code> and <code>usub_sat</code> are not implemented in the <code>x86_64</code> Cranelift backend (but are implemented for <code>AArch64</code>) for <code>i32x4</code> or <code>i64x2</code> SIMD vectors.</p>\n<p>CLIF bugpoint (<code>uadd_sat</code>):</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i32x4</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">uaddsat_i32x4</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i64x2</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">uaddsat_i64x2</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">uadd_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>CLIF bugpoint (<code>usub_sat</code>):</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i32x4</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">usubsat_i32x4</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i32x4</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i32x4</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"n\">Crash</span><span class=\"w\"> </span><span class=\"n\">message</span>: <span class=\"nc\">Unsupported</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">for</span><span class=\"w\"> </span><span class=\"n\">packed</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">instruction</span>: <span class=\"nc\">i64x2</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">usubsat_i64x2</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">i64x2</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">const0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x00000000000000000000000000000000</span><span class=\"w\"></span>\n\n<span class=\"n\">block0</span>:\n    <span class=\"nc\">v0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">vconst</span><span class=\"p\">.</span><span class=\"n\">i64x2</span><span class=\"w\"> </span><span class=\"n\">const0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">usub_sat</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 255807769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633122424
    }
]