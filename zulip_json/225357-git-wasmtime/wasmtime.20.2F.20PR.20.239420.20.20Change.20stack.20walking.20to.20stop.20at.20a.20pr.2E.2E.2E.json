[
    {
        "content": "<p>alexcrichton assigned fitzgen to <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420\">PR #9420</a>.</p>",
        "id": 475914396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728491955
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420\">PR #9420</a>.</p>",
        "id": 475914400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728491955
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420\">PR #9420</a> from <code>alexcrichton:stop-backtrace-with-fp</code> to <code>bytecodealliance:main</code> (assigned to fitzgen):</p>\n<blockquote>\n<p>Prior to this commit entry trampolines into wasm would record their<br>\nstack pointer at the time of the function call to wasm and then this<br>\nstack pointer was used to halt the stack walking process. The problem<br>\nwith this though is that due to the <code>tail</code> ABI it's possible that the<br>\ncallee will update the caller's stack pointer temporarily. This means<br>\nthat the recorded stack pointer at the time the trampoline called wasm<br>\nmay differ from the callee's idea of what the stack pointer is when a<br>\nbacktrace happens.</p>\n<p>To handle this condition when stack walking the frame pointer instead of<br>\nthe stack pointer is now recorded when wasm is invoked. This frame<br>\npointer is a trusted value as it's managed by Cranelift itself. This<br>\nadditionally enables the stop condition for frame walking to be a<br>\nprecise \"it must be this value\" condition.</p>\n<p>Put together this commit fixes an issue where when <code>return_call</code> is used<br>\nit's possible for the initial few frames of the stack to get lost in<br>\nstack traces. After this the frame pointer chain should always be<br>\nprecisely walked in its entirety, even in the face of different numbers<br>\nof arguments and parameters as <code>return_call</code> instructions are executed.</p>\n</blockquote>",
        "id": 475914402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728491955
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420\">PR #9420</a>.</p>",
        "id": 475914404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728491956
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420\">PR #9420</a>.</p>",
        "id": 475914405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728491956
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420#issuecomment-2403071469\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420\">PR #9420</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\", \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 475933397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728499593
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420#pullrequestreview-2357994528\">PR review</a>:</p>\n<blockquote>\n<p>Very nice clean up</p>\n</blockquote>",
        "id": 475934346,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728499982
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9420\">PR #9420</a>.</p>",
        "id": 475937302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728501159
    }
]