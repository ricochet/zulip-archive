[
    {
        "content": "<p>Ekleog opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1672\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1672\">Issue #1672</a>:</p>\n<blockquote>\n<p>Hello,</p>\n<p>I've just finished polishing <a href=\"https://crates.io/crates/wasmtime-async\" title=\"https://crates.io/crates/wasmtime-async\">wasmtime-async</a>, a crate designed to make it easy to run wasm code interleaved with rust async code.</p>\n<p>So I wanted to mention it here, so you know that I've done that :) And I also wondered whether you might be interested in upstreaming its contents, and/or mentioning it somewhere in wasmtime's docs, to make it more discoverable.</p>\n<p>Anyway, I mostly wanted to submit that to show you some thanks for having done wasmtime!</p>\n<p>Have a nice day,<br>\n  Leo</p>\n</blockquote>",
        "id": 196901298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1588947784
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1672#issuecomment-628309044\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1672\">Issue #1672</a>:</p>\n<blockquote>\n<p>Thanks for submitting this! While I read in the docs that this is aimed at calling wasm code which does little but call async host code, for Wasmtime itself I expect we also want to consider use cases that let the runtime and WASI implementations integrate with the async mechanism, which looks like it would be hard to do with this approach. That said, this is an interesting point in the design space that I expect works well for the kinds of use cases described in the docs :-).</p>\n</blockquote>",
        "id": 197493115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589414707
    },
    {
        "content": "<p>Ekleog <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1672#issuecomment-628859417\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1672\">Issue #1672</a>:</p>\n<blockquote>\n<p>The world you describe would be even greater indeed! Though it looks to me as though WASI is currently not designed in a way that permits async code to existâ€¦ but maybe there are plans to change that? :)</p>\n</blockquote>",
        "id": 197610482,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589486761
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1672#issuecomment-725630210\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1672\">Issue #1672</a>:</p>\n<blockquote>\n<p>I've opened <a href=\"https://github.com/bytecodealliance/rfcs/pull/2\">https://github.com/bytecodealliance/rfcs/pull/2</a> for what it might look like supporting this in wasmtime itself, curious to hear what others think!</p>\n</blockquote>",
        "id": 216391543,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1605124666
    }
]