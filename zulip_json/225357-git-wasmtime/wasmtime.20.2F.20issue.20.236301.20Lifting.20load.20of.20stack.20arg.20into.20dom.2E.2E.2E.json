[
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6301\">issue #6301</a>:</p>\n<blockquote>\n<p>I would not expect <code>movq 16(%rbp), %rax</code> to be lifted up into <code>block0</code>, as it is only used in <code>block1</code> and not <code>block2</code>. This results in a load that is not necessary for all possible executions.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">precise</span><span class=\"o\">-</span><span class=\"n\">output</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brif</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v6</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">VCode</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"mi\">16</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label2</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label1</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span>\n<span class=\"p\">;</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">Disassembled</span>:\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x0</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x4</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"mh\">0x10</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jne</span><span class=\"w\"> </span><span class=\"mh\">0x18</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x13</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block3</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x18</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 353511435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682633043
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6301\">issue #6301</a>:</p>\n<blockquote>\n<p>I would not expect <code>movq 16(%rbp), %rax</code> to be lifted up into <code>block0</code>, as it is only used in <code>block1</code> and not <code>block2</code>. This results in a load that is not necessary for all possible executions.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">precise</span><span class=\"o\">-</span><span class=\"n\">output</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brif</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v6</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">VCode</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"mi\">16</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label2</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label1</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span>\n<span class=\"p\">;</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">Disassembled</span>:\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x0</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x4</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"mh\">0x10</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jne</span><span class=\"w\"> </span><span class=\"mh\">0x18</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x13</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block3</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x18</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 353511437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682633044
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6301\">issue #6301</a>:</p>\n<blockquote>\n<p>I would not expect <code>movq 16(%rbp), %rax</code> to be lifted up into <code>block0</code>, as it is only used in <code>block1</code> and not <code>block2</code>. This results in a load that is not necessary for all possible executions.</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">compile</span><span class=\"w\"> </span><span class=\"n\">precise</span><span class=\"o\">-</span><span class=\"n\">output</span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">foo</span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">i32</span> <span class=\"p\">{</span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v2</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v3</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v4</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v5</span>: <span class=\"kt\">i32</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v6</span>: <span class=\"kt\">i32</span><span class=\"p\">)</span>:\n    <span class=\"nc\">brif</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">return</span><span class=\"w\"> </span><span class=\"n\">v6</span>\n<span class=\"p\">}</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">VCode</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"mi\">16</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\">   </span><span class=\"o\">%</span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jnz</span><span class=\"w\">     </span><span class=\"n\">label2</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">j</span><span class=\"w\"> </span><span class=\"n\">label1</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>:\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\">    </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">ret</span>\n<span class=\"p\">;</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">Disassembled</span>:\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block0</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x0</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">pushq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block1</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x4</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"mh\">0x10</span><span class=\"p\">(</span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">testl</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">edi</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">jne</span><span class=\"w\"> </span><span class=\"mh\">0x18</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block2</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x13</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">block3</span>: <span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"w\"> </span><span class=\"mh\">0x18</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r11</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rax</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">movq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rsp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">popq</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rbp</span>\n<span class=\"p\">;</span><span class=\"w\">   </span><span class=\"n\">retq</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 353511438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682633044
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6301#issuecomment-1526614327\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/6301\">issue #6301</a>:</p>\n<blockquote>\n<p>To add more context why this happens: this is actually not a \"lifting\" (the load was never down in block1 or block2), but rather all args on the stack are loaded into vregs at the start of the function. That happens in this function in the ABI code: <a href=\"https://github.com/bytecodealliance/wasmtime/blob/5cce054a9f67e710a5c3f59345fad30df559f463/cranelift/codegen/src/machinst/abi.rs#L1409\"><code>Callee::gen_copy_arg_to_regs</code></a>.</p>\n<p>In order to do better, we <em>could</em> constrain the vreg to the location on the stack (FP + offset). That would require some additional plumbing in the constraint machinery: we'd need a way to specify \"this offset from FP\" as a constraint (rather than \"any stack slot\") and a third kind of alloc (not indexed stackslot or physical reg, but FP + offset). It would complicate the spillslot allocation code a bit too. But it could be done!</p>\n</blockquote>",
        "id": 353515857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682633860
    }
]