[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5153\">PR #5153</a> from <code>refactor-compilation-metadata</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit is a reorganization of how metadata is stored in Wasmtime's compiled artifacts. Currently Wasmtime's ELF artifacts have data appended after them to contain metadata about the <code>Engine</code> as well as type information for the module itself. This extra data at the end of the file is ignored by ELF-related utilities generally and is assembled during the module serialization process.</p>\n<p>In working on AOT-compiling components, though, I've discovered a number of issues with this:</p>\n<ul>\n<li>\n<p>Primarily it's possible to mistakenly change an artifact if it's deserialized and then serialized again. This issue is probably theoretical but the deserialized artifact records the <code>Engine</code> configuration at time of creation but when re-serializing that it serializes the current <code>Engine</code> state, not the original <code>Engine</code> state.</p>\n</li>\n<li>\n<p>Additionally the serialization strategy here is tightly coupled to <code>Module</code> and its serialization format. While this makes sense it is not conducive for future refactorings to use a similar serialization format for components. The engine metadata, for example, does not necessarily need to be tied up with type information.</p>\n</li>\n<li>\n<p>The storage for this extra metadata is a bit wonky by shoving it at the end of the ELF file. The original reason for this was to have a compiled artifact be multiple objects concatenated with each other to support serializing module-linking-using modules. Module linking is no longer a thing and I have since decided that for the component model all compilation artifacts will go into one object file to assist debugability. This means that the extra stick-it-at-the-end is no longer necessary.</p>\n</li>\n</ul>\n<p>To solve these issues this commit splits up the<br>\n<code>module/serialization.rs</code> file in two, mostly moving the logic to <code>engine/serialization.rs</code>. The engine serialization logic now handles everything related to <code>Engine</code> compatibility such as targets, compiler flags, wasm features, etc. The module serialization logic is now exclusively interested in type information.</p>\n<p>The engine metadata and serialized type information additionally live in sections of the final file now instead of at the end. This means that there are three primary <code>bincode</code>-encoded sections that are parsed on deserializing a file:</p>\n<ol>\n<li>The <code>Engine</code>-specific metadata. This will be the same for both modules and components.</li>\n<li>The <code>CompiledModuleInfo</code> structure. For core wasm there's just one of these but for the component model there will be multiple, one per core wasm module.</li>\n<li>The type information. For core wasm this is a <code>ModuleTypes</code> but for a component this will be a <code>ComponentTypes</code>.</li>\n</ol>\n<p>No true functional change is expected from this commit. Binary artifacts might get inflated by a small handful of bytes due to using ELF sections to represent this now.</p>\n<p>A related change I made during this commit as well was the plumbing of the <code>is_branch_protection_enabled</code> flag. This is technically <code>Engine</code>-level metadata but I didn't want to plumb it all over the place as was done now, so instead a new section was added to the final binary just for this bti information. This means that it no longer needs to be a parameter to <code>CodeMemory::publish</code> and additionally is more amenable to a <code>Component</code>-is-just-one-object world where no single module owns this piece of metadata.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 306750253,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666991509
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5153\">PR #5153</a>.</p>",
        "id": 306750255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666991509
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5153#pullrequestreview-1160840819\">PR review</a>.</p>",
        "id": 306765034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666998919
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5153\">PR #5153</a> from <code>refactor-compilation-metadata</code> to <code>main</code>.</p>",
        "id": 306863043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667061337
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5153\">PR #5153</a>.</p>",
        "id": 306866017,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667062864
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5153\">PR #5153</a>.</p>",
        "id": 306867594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1667063614
    }
]