[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514#issuecomment-1192955831\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514\">issue #4514</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:aarch64\", \"cranelift:area:machinst\", \"cranelift:area:x64\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 290570898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658526415
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514#issuecomment-1192962939\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514\">issue #4514</a>:</p>\n<blockquote>\n<p>I can't find where <code>targets_for_term</code> is actually used. It seems strange to me that the combination of <code>default_target</code> plus <code>targets</code> is always identical to <code>targets_for_term</code>. I would think you could save 24 bytes by just removing that field.</p>\n<p>That said... I'd be tempted instead to remove <code>default_target</code> and <code>targets</code>, which I think should save 28 bytes, at the cost of needing an indirection to dig <code>default_target</code> out of the heap allocation instead of having it right there in the <code>Inst</code>. But when <code>default_target</code> is used, so is the rest of the <code>targets</code> array, so I think that shouldn't impact performance.</p>\n<p>I also don't see that these vectors are modified after they're constructed. <code>Box&lt;[MachLabel]&gt;</code> is 16 bytes versus 24 bytes for <code>Vec&lt;MachLabel&gt;</code>, so I think you can shave a total of 36 bytes off by doing the above and then switching the targets array to a boxed slice.</p>\n<p>This could be a terrible plan for reasons I don't know, obviously. :grin:</p>\n</blockquote>",
        "id": 290572255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658527322
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514#issuecomment-1192965141\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514\">issue #4514</a>:</p>\n<blockquote>\n<p>They originally existed to satisfy queries from <code>regalloc.rs</code>; although, thank you @jameysharp for persisting here, it seems indeed that <code>targets_for_term</code> is entirely dead now, and I believe <code>targets</code> as well. (<code>MachTerminator</code> used to carry a slice which was built from one of these and <a href=\"http://regalloc.rs\">regalloc.rs</a> used to query successors directly from branch <code>Inst</code>s built from the other; I don't remember why they were separate but there was a reason...).</p>\n<p>So perhaps they can just be removed entirely!</p>\n</blockquote>",
        "id": 290572832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658527618
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514#issuecomment-1192973227\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514\">issue #4514</a>:</p>\n<blockquote>\n<p><code>targets</code> is used along with <code>default_target</code> in <code>inst/emit.rs</code> to emit the target addresses, so I think we still need one copy, just not two; and I'd still advocate for using the single boxed slice for all targets. Unless there's someplace else to get the targets from that's still around at that point? But I assume cutting the size of this case in half already makes it not the largest variant in this enum any more.</p>\n</blockquote>",
        "id": 290573437,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658527993
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514#issuecomment-1192974140\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514\">issue #4514</a>:</p>\n<blockquote>\n<p>I'm happy to try out the single boxed slice approach, thanks for chasing the uses of these vectors down @jameysharp!</p>\n</blockquote>",
        "id": 290573655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658528125
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514#issuecomment-1193011346\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514\">issue #4514</a>:</p>\n<blockquote>\n<p>Removing the <code>targets_for_tree</code> field got some additional memory back:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"mi\">104372</span><span class=\"w\"></span>\n<span class=\"mi\">104192</span><span class=\"w\"></span>\n<span class=\"mi\">104312</span><span class=\"w\"></span>\n<span class=\"mi\">104372</span><span class=\"w\"></span>\n<span class=\"mi\">104404</span><span class=\"w\"></span>\n<span class=\"mi\">104304</span><span class=\"w\"></span>\n<span class=\"mi\">104412</span><span class=\"w\"></span>\n<span class=\"mi\">104368</span><span class=\"w\"></span>\n<span class=\"mi\">104904</span><span class=\"w\"></span>\n<span class=\"mi\">104400</span><span class=\"w\"></span>\n</code></pre></div>\n<p>Experimenting with a boxed slice and an non-boxed <code>SmallVec</code> both yielded more memory consumed pretty consistently, so for now a boxed <code>SmallVec</code> seems like the winner. I'm happy to experiment a bit more with this, but that'll need to wait until next week.</p>\n</blockquote>",
        "id": 290580233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658534176
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514#issuecomment-1193021287\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4514\">issue #4514</a>:</p>\n<blockquote>\n<p>@cfallin, I made a few more changes since you reviewed: the <code>targets_for_term</code> field is gone, and I moved some aliases around a bit that were re-defined in other backends.</p>\n</blockquote>",
        "id": 290582113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658536327
    }
]