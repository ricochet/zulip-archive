[
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 190032241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583709636
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 190034698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583714828
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191663042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585079317
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191663108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585079363
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191667125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585081460
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191682790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585090249
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191684398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585091607
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191688467,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585094655
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381188002\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381188002\">PR Review</a>.</p>",
        "id": 191751951,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146166
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381188002\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381188002\">PR Review</a>.</p>",
        "id": 191751952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146166
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397887160\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397887160\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW <code>jitdump</code> didn't actually require any extra C libraries or anything, so the ease of building it was why I went ahead and placed it in the default features. For the ittapi crate, however, it requires a native non-Rust toolchain, so we may want to leave this out of the default features for now while we sort out the build requirements there?</p>\n</blockquote>",
        "id": 191751953,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146166
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397888157\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397888157\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is this perhaps stuck around from an old merge conflict?</p>\n</blockquote>",
        "id": 191751954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146166
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397888772\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397888772\">PR Review Comment</a>:</p>\n<blockquote>\n<p>FWIW idiomatically <code>use</code> statements all appear at the top of the module</p>\n</blockquote>",
        "id": 191751955,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146166
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397890023\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397890023\">PR Review Comment</a>:</p>\n<blockquote>\n<p>How come this is cached internally? I don't think we publish code for the same module twice, so wouldn't we want to always create a new method id?</p>\n</blockquote>",
        "id": 191751956,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146166
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397889444\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397889444\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This <code>.unwrap()</code> is likely to panic since I don't think that all wasm modules have names associated with them</p>\n</blockquote>",
        "id": 191751957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146166
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397890648\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397890648\">PR Review Comment</a>:</p>\n<blockquote>\n<p>If this needs to be hooked up to get vtune working, I'd recommend implementing <code>Drop for VTuneAgent</code> which would call this method</p>\n</blockquote>",
        "id": 191751958,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146167
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397891441\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397891441\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is the <code>Box</code> here necessary in that <code>ijIT_NotifyEvent</code> is freeing the memory it's given? If the free isn't happening this may be a memory leak, but the <code>Box</code> isn't necessary here either if all that's needed is a pointer. For that you can just do <code>&amp;mut jmethod as *mut _ as *mut _</code></p>\n</blockquote>",
        "id": 191751961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146167
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397889054\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397889054\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This may be stray now at this point?</p>\n</blockquote>",
        "id": 191751962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146167
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397891939\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397891939\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Should this be an argument to <code>module_load</code> perhaps? To try to get the source filename if possible?</p>\n</blockquote>",
        "id": 191751963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146167
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397892067\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r397892067\">PR Review Comment</a>:</p>\n<blockquote>\n<p>er that is, an argument on the trait</p>\n</blockquote>",
        "id": 191751964,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585146167
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381440243\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381440243\">PR Review</a>.</p>",
        "id": 191794004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585162092
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398090736\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398090736\">PR Review Comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>@jlb6740 it looks like the new crate here is pulling in bindgen at build time I think, right? That's a pretty hefty dependency and one we'd ideally rather avoid. Would it be possible to check in the generated bindings from bindgen via a scheme like <a href=\"https://github.com/pepyakin/binaryen-rs/pull/52\" title=\"https://github.com/pepyakin/binaryen-rs/pull/52\">pepyakin/binaryen-rs#52</a> perhaps?</p>\n</blockquote>\n<p>Hi @alexcrichton, thanks for the comments. The profiling facilitated by a C library (<a href=\"https://github.com/intel/ittapi\" title=\"https://github.com/intel/ittapi\">https://github.com/intel/ittapi</a>) for instrumentation and tracing and so there is a sys crate that uses bindgen to create the rust interface.  Right now I think that crate isn't properly guarded on a windows build so that needs to be corrected, but it works well on linux. Yes .. we can make any update ... I am trying to digest the change here: <a href=\"https://github.com/pepyakin/binaryen-rs/pull/52/files\" title=\"https://github.com/pepyakin/binaryen-rs/pull/52/files\">https://github.com/pepyakin/binaryen-rs/pull/52/files</a>. Did you remove the build time dependence on bindgen .. do it ahead of time and put the resulting file in <a href=\"http://bindings.rs\" title=\"http://bindings.rs\">bindings.rs</a>? Is that what I am looking at there?</p>\n</blockquote>",
        "id": 191794005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585162092
    },
    {
        "content": "<p>jlb6740 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398090736\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398090736\">PR Review Comment</a>.</p>",
        "id": 191794041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585162101
    },
    {
        "content": "<p>jlb6740 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398090736\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398090736\">PR Review Comment</a>.</p>",
        "id": 191794139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585162150
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381490197\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381490197\">PR Review</a>.</p>",
        "id": 191803250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585166339
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398131617\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398131617\">PR Review Comment</a>:</p>\n<blockquote>\n<p>@jlb6740 right yeah, I moved it to a <code>dev-dependencies</code> section so it's still verified that the bindings are correct on <code>cargo test</code>, but otherwise the generated bindings are checked into the tree so <code>bindgen</code> isn't needed at build time, only when testing the ittapi-rs crate</p>\n</blockquote>",
        "id": 191803251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585166339
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398184719\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398184719\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This is a good question. I saved this for supporting other calls that would rely on the same methodID. Right now this pr only calls method_load for a function and then moves on, but there are other events that can be recorded that aren't included with this particular patch (<a href=\"https://software.intel.com/en-us/vtune-help-ijit-notifyevent\" title=\"https://software.intel.com/en-us/vtune-help-ijit-notifyevent\">https://software.intel.com/en-us/vtune-help-ijit-notifyevent</a>). Also .. I wasn't sure what the invoke flag was allowing now. In the past I ran an example wondering why my codes were running twice, only to realize I was using invoke when I did not need to. This was some <a href=\"http://action.rs\" title=\"http://action.rs\">action.rs</a> file where I had extra hooks, which looks like it is gone now but I was calling profiling hooks twice when maybe it wasn't needed. I wanted to cache methodID to prepare for this possibility as well.</p>\n<p>Also note, this instrumentation is targeting jitted code but future updates should include APIs for help in instrumenting wasmtime itself: <a href=\"https://software.intel.com/en-us/vtune-help-instrumenting-your-application#2CCDFEFA-30CD-4899-A86B-54C9F873C823\" title=\"https://software.intel.com/en-us/vtune-help-instrumenting-your-application#2CCDFEFA-30CD-4899-A86B-54C9F873C823\">https://software.intel.com/en-us/vtune-help-instrumenting-your-application#2CCDFEFA-30CD-4899-A86B-54C9F873C823</a>. This is different from recording the methodID, but the same VTune agent interface here I expected would be used to cash domain ids and other handles that help with marking regions. </p>\n</blockquote>",
        "id": 191814043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585172127
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381554353\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381554353\">PR Review</a>.</p>",
        "id": 191814044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585172127
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381615181\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-381615181\">PR Review</a>.</p>",
        "id": 191825150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585179976
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It doesn't at all ...  it seems to only have purpose if you want to stop profiling and any point while code is still executing. Having drop for VTuneAgent call this would probably be a good idea nonetheless though.  +1</p>\n</blockquote>",
        "id": 191825151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585179976
    },
    {
        "content": "<p>jlb6740 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\">PR Review Comment</a>.</p>",
        "id": 191825158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585179988
    },
    {
        "content": "<p>jlb6740 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\">PR Review Comment</a>.</p>",
        "id": 191825165,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585179997
    },
    {
        "content": "<p>jlb6740 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398237658\">PR Review Comment</a>.</p>",
        "id": 191825183,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585180017
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382134439\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382134439\">PR Review</a>.</p>",
        "id": 191902666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585237042
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398671136\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r398671136\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah ok caching makes sense, but I think that here it may make more sense to insert it into the map and assert that it was the first time we saw it? Modules should only be reigstered once and this would allow other VTune methods to get called as well.</p>\n</blockquote>",
        "id": 191902667,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585237042
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191967587,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585270846
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382600828\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382600828\">PR Review</a>.</p>",
        "id": 191979918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585289584
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399054093\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399054093\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Sorry .. missed this comment earlier. Yeah, that would be great. I looked at instantiate_module and I don't see anywhere the path to the file is being preserved. Is this something possible now?</p>\n</blockquote>",
        "id": 191979919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585289585
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 191981775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585292064
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382615167\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382615167\">PR Review</a>.</p>",
        "id": 191981800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585292150
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399066726\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399066726\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Great! Thanks. It shouldn't be freed. I think was some legacy when I didn't quite now how to represent this. Converts to pointer to jmethod and then coerces to the c_void type expected.</p>\n</blockquote>",
        "id": 191981801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585292150
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382925058\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-382925058\">PR Review</a>.</p>",
        "id": 192027590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585320435
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399318239\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399318239\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Yeah we don't actually really ever have a filename right now, but it seems like it'd be best if the caller of the profiler would be inventing a filename like this rather than relying on each profiler to invent its own filename. We could eventually thread through a filename from something like <code>Module::from_file</code> to here when we get around to binding it.</p>\n</blockquote>",
        "id": 192027592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585320435
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-383032288\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-383032288\">PR Review</a>.</p>",
        "id": 192046870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585327770
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399403376\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399403376\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ok, make sense. I'll add the argument and make up the name at the call site. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 192046871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585327770
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-383244462\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-383244462\">PR Review</a>.</p>",
        "id": 192090461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585350159
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399575638\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399575638\">PR Review Comment</a>:</p>\n<blockquote>\n<p>You know, I was thinking if filename should eventually come from the module, well the module is already passed in. We already pull the module_name (if exists) and method_name from the module and the only reason we don't pull the filename too is because it isn't there. I think ultimately we actually may not want this added to the interface. In the next push I've only added it to event load to see what you think, but if you still think it should be a part of the interface and passed in from the jit call site, then I can add it there too.  </p>\n</blockquote>",
        "id": 192090462,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585350159
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-383267995\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-383267995\">PR Review</a>.</p>",
        "id": 192097434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585357625
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399599136\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r399599136\">PR Review Comment</a>:</p>\n<blockquote>\n<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 192097435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585357625
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192158458,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585461708
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192211781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585544816
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-384177001\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-384177001\">PR Review</a>.</p>",
        "id": 192308946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585598000
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-384177001\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-384177001\">PR Review</a>.</p>",
        "id": 192308947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585598000
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r400451397\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r400451397\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this may still need to be removed?</p>\n</blockquote>",
        "id": 192308949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585598000
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r400452649\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r400452649\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this may not exist in the C API yet? (should just be a few extra lines here and there for this PR)</p>\n</blockquote>",
        "id": 192308950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585598000
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-384365448\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-384365448\">PR Review</a>.</p>",
        "id": 192340512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585622540
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r400609309\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r400609309\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Lol .. Yes sorry. <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>  I was following your lead and didn't go back and add. I see support here should be added in crates/c-api and will do that next push. </p>\n</blockquote>",
        "id": 192340513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585622541
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192585932,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585771762
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192588243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585772856
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192588627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585773016
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192588715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585773054
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-385962251\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-385962251\">PR Review</a>.</p>",
        "id": 192595227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585776523
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-385962251\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-385962251\">PR Review</a>.</p>",
        "id": 192595228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585776524
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r401920497\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r401920497\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think this may be missing from the commit by accident?</p>\n</blockquote>",
        "id": 192595229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585776524
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r401920619\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r401920619\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Oh dear I see what you mean, it looks like some mangling has definitely gone awry here by accident :(</p>\n</blockquote>",
        "id": 192595230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585776524
    },
    {
        "content": "<p>jlb6740 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-386004521\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#pullrequestreview-386004521\">PR Review</a>.</p>",
        "id": 192602401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585781673
    },
    {
        "content": "<p>jlb6740 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r401956891\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819#discussion_r401956891\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Let me just remove this.</p>\n</blockquote>",
        "id": 192602402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585781673
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192607244,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585785572
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192607258,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585785589
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192607314,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585785610
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192607617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585785911
    },
    {
        "content": "<p>jlb6740 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a> from <code>add-vtune-ittapi-support</code> to <code>master</code>:</p>\n<blockquote>\n<p>This patch adds initial support for ittapi which is an open<br>\nsource profiling api for instrumentation and tracing and profiling<br>\nof jitted code.</p>\n<p>Build:<br>\n    cargo build --features=profiling<br>\nProfile: // Using amplxe-cl from VTune<br>\n    amplxe-cl -v -collect hostpost target/debug/wasmtime --jitprofile test.wasm</p>\n<p>Note, Vtune is a free open source profiling tool for identifying performance bottlenecks. This patch which brings in ittapi-rs when the profiling feature is enabled, currently only supports the profiling of jitted code but I am investigating using ittapi for profiling of wasmtime itself with a future patch that builds on this one.</p>\n</blockquote>",
        "id": 192612868,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585792105
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/819\" title=\"https://github.com/bytecodealliance/wasmtime/pull/819\">PR #819</a>.</p>",
        "id": 192669417,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1585836250
    }
]