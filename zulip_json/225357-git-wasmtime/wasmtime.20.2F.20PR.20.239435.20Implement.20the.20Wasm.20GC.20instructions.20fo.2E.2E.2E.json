[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a> from <code>fitzgen:any-extern-conversions</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit implements two instructions:</p>\n<ol>\n<li><code>any.convert_extern</code></li>\n<li><code>extern.convert_any</code></li>\n</ol>\n<p>These instructions are used to convert between <code>anyref</code> and <code>externref</code> values. The <code>any.convert_extern</code> instruction takes an <code>anyref</code> value and converts it to an <code>externref</code> value. The <code>extern.convert_any</code> instruction takes an <code>externref</code> value and converts it to an <code>anyref</code> value.</p>\n<p>Rather than implementing wrapper objects -- for example an <code>struct AnyOfExtern(ExternRef)</code> type that is a subtype of <code>AnyRef</code> -- we instead reuse the same representation converted references as their unconverted reference. For example, <code>(any.convert_extern my_externref)</code> is identical to the original <code>my_externref</code> value. This means that we don't actually emit any clif instructions to implement these Wasm instructions; they are no-ops!</p>\n<p>Wasm code remains none-the-wiser because it cannot directly test for the difference between, for example, a <code>my_anyref</code> and the result of <code>(extern.convert_any my_anyref)</code> because they are in two different type hierarchies, so any direct <code>ref.test</code> would be invalid. The Wasm code would have to convert one into the other's type hierarchy, at which point it doesn't know whether wrapping/unwrapping took place.</p>\n<p>We did need some changes at the host API and host API implementation levels, however:</p>\n<ul>\n<li>\n<p>We needed to relax the requirement that a <code>wasmtime::AnyRef</code> only wraps a <code>VMGcRef</code> that points to an object that is a subtype of <code>anyref</code> and similar for <code>wasmtime::ExternRef</code>.</p>\n</li>\n<li>\n<p>We needed to make the <code>wasmtime::ExternRef::data[_mut]</code> methods return an option of their associated host data, since any <code>externref</code> resulting from <code>(extern.convert_any ...)</code> does not have any associated host data. (This change would have been required either way, even if we used wrapper objects.)</p>\n</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 475977431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728517382
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>.</p>",
        "id": 475977432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728517382
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>.</p>",
        "id": 475977433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728517383
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>:</p>\n<blockquote>\n<p>This commit implements two instructions:</p>\n<ol>\n<li><code>any.convert_extern</code></li>\n<li><code>extern.convert_any</code></li>\n</ol>\n<p>These instructions are used to convert between <code>anyref</code> and <code>externref</code> values. The <code>any.convert_extern</code> instruction takes an <code>externref</code> value and converts it to an <code>anyref</code> value. The <code>extern.convert_any</code> instruction takes an <code>anyref</code> value and converts it to an <code>externref</code> value.</p>\n<p>Rather than implementing wrapper objects -- for example an <code>struct AnyOfExtern(ExternRef)</code> type that is a subtype of <code>AnyRef</code> -- we instead reuse the same representation converted references as their unconverted reference. For example, <code>(any.convert_extern my_externref)</code> is identical to the original <code>my_externref</code> value. This means that we don't actually emit any clif instructions to implement these Wasm instructions; they are no-ops!</p>\n<p>Wasm code remains none-the-wiser because it cannot directly test for the difference between, for example, a <code>my_anyref</code> and the result of <code>(extern.convert_any my_anyref)</code> because they are in two different type hierarchies, so any direct <code>ref.test</code> would be invalid. The Wasm code would have to convert one into the other's type hierarchy, at which point it doesn't know whether wrapping/unwrapping took place.</p>\n<p>We did need some changes at the host API and host API implementation levels, however:</p>\n<ul>\n<li>\n<p>We needed to relax the requirement that a <code>wasmtime::AnyRef</code> only wraps a <code>VMGcRef</code> that points to an object that is a subtype of <code>anyref</code> and similar for <code>wasmtime::ExternRef</code>.</p>\n</li>\n<li>\n<p>We needed to make the <code>wasmtime::ExternRef::data[_mut]</code> methods return an option of their associated host data, since any <code>externref</code> resulting from <code>(extern.convert_any ...)</code> does not have any associated host data. (This change would have been required either way, even if we used wrapper objects.)</p>\n</li>\n</ul>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 475977493,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728517431
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>.</p>",
        "id": 475984430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728520353
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>.</p>",
        "id": 475984431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728520353
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435#issuecomment-2403755336\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\", \"wasmtime:api\", \"wasmtime:c-api\", \"wasmtime:ref-types\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing, wasmtime:ref-types</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 475998119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728526133
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>.</p>",
        "id": 476010264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728529034
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435#discussion_r1795581344\">PR review comment</a>:</p>\n<blockquote>\n<p>Given the footgun of using <code>as_externref_unchecked</code> would it make sense to remove that method entirely?</p>\n</blockquote>",
        "id": 476149702,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728570843
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435#pullrequestreview-2360579196\">PR review</a>.</p>",
        "id": 476149703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728570843
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435#pullrequestreview-2360603557\">PR review</a>.</p>",
        "id": 476151215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728571278
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435#discussion_r1795597235\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, I can make a follow up PR to do that, don't think it will be hard at this point.</p>\n</blockquote>",
        "id": 476151216,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728571278
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9435\">PR #9435</a>.</p>",
        "id": 476156128,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728572629
    }
]