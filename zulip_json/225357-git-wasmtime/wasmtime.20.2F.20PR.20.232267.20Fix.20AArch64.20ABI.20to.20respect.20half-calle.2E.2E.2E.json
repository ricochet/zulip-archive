[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267\">PR #2267</a> from <code>fix-aarch64-abi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR updates the AArch64 ABI implementation so that it (i) properly<br>\nrespects that v8-v15 inclusive have callee-save lower halves, and<br>\ncaller-save upper halves, by conservatively approximating (to full<br>\nregisters) in the appropriate directions when generating prologue<br>\ncaller-saves and when informing the regalloc of clobbered regs across<br>\ncallsites.</p>\n<p>In order to prevent saving all of these vector registers in the prologue<br>\nof every non-leaf function due to the above approximation, this also<br>\nmakes use of a new <a href=\"http://regalloc.rs\">regalloc.rs</a> feature to exclude call instructions'<br>\nwrites from the clobber set returned by register allocation. This is<br>\nsafe whenever the caller and callee have the same ABI (because anything<br>\nthe callee could clobber, the caller is allowed to clobber as well<br>\nwithout saving it in the prologue).</p>\n<p>Requires bytecodealliance/regalloc.rs#100; this PR refers to my fork of<br>\n<a href=\"http://regalloc.rs\">regalloc.rs</a> until that PR is reviewed, merged and included in a new<br>\nrelease.</p>\n<p>Fixes #2254.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 212376567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601948867
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267\">PR #2267</a>.</p>",
        "id": 212376568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601948867
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-502777551\">PR Review</a>.</p>",
        "id": 212406750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601978690
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-502777551\">PR Review</a>.</p>",
        "id": 212406751,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601978690
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500154544\">PR Review Comment</a>:</p>\n<blockquote>\n<p>uber-nit: can you join the two cases, please? <code>&amp;Inst::Call { ref info } | &amp;Inst::CallInd { ref info }</code></p>\n</blockquote>",
        "id": 212406752,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601978690
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500156239\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This rule about caller- vs callee- saved is actually generic over the targets, so we could also apply it for x64, right?</p>\n</blockquote>",
        "id": 212406753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601978691
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500154838\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Maybe worth adding a back reference to the other comment (that references this one) around callee-saved in call sites?</p>\n</blockquote>",
        "id": 212406754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601978691
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-502797553\">PR Review</a>.</p>",
        "id": 212408853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601980263
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-502797553\">PR Review</a>.</p>",
        "id": 212408855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601980264
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500169998\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Similar naming concern here.  Also, for good performance, this needs to be inlined, no?</p>\n</blockquote>",
        "id": 212408856,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601980264
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500169333\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This all is reasonable (and as we discussed and agreed), but it has the side effect that I am not entirely happy with the fact that the name of this function doesn't make clear that it now only pertains to call sites.  Would you be prepared to consider the following changes (or something modulo them, so as to increase clarity for the reader) ?</p>\n<ul>\n<li>\n<p>change name of function to <code>is_reg_clobbered_by_a_call_instruction</code></p>\n</li>\n<li>\n<p>change name of formal param from <code>call_conv</code> to <code>call_conv_of_callee</code>  (since it's kinda ambiguous at least from the name)</p>\n</li>\n</ul>\n</blockquote>",
        "id": 212408857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601980264
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503238168\">PR Review</a>.</p>",
        "id": 212465095,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602008261
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500502938\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Unfortunately they're different types (<code>CallInfo</code> vs. <code>CallIndInfo</code>) so we can't unify the patterns here :-/</p>\n</blockquote>",
        "id": 212465096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602008261
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503298347\">PR Review</a>.</p>",
        "id": 212475005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602013171
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500549969\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done!</p>\n</blockquote>",
        "id": 212475007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602013171
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503300835\">PR Review</a>.</p>",
        "id": 212475394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602013381
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500551826\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Indeed it is, although we get less benefit (only the compile-time improvement, no generated-code change) because x64 doesn't have half-caller/half-callee saves. Since it adds overhead to <code>Inst::CallKnown</code>/<code>Inst::CallUnknown</code> (we don't out-of-line the fields yet) and there are issues with the size of <code>Inst</code>, I'm inclined not to go down this path, at least at first. Can certainly look at this in a subsequent PR though!</p>\n</blockquote>",
        "id": 212475395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602013381
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503302879\">PR Review</a>.</p>",
        "id": 212475678,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602013560
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500553363\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Verified that inlining occurs; rustc seems to be doing the right thing here. (It's statically monomorphized so I expect it always would as long as someone does not inflate the body to some huge size...).</p>\n</blockquote>",
        "id": 212475679,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602013560
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503308371\">PR Review</a>.</p>",
        "id": 212476509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602014033
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500557447\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Re: naming: were you thinking something more specific to calls, as above, or something else?</p>\n<p>I put a bit of thought into this and I'm not sure that I like including \"call instruction\", as the concept is more general. (In principle the <code>MachInst</code> layer doesn't even know about the concept of a call instruction.) The concept really is just \"should we aggregate this instruction's effects into the summary of clobbered registers\". Any other suggestions?</p>\n<p>Or if we do decide that this is specific to calls, I think I'd prefer <code>is_call_instruction_with_ignored_clobbers()</code>. I could go with this; it just seems a bit non-orthogonal, is all.</p>\n</blockquote>",
        "id": 212476511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602014034
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267\">PR #2267</a> from <code>fix-aarch64-abi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR updates the AArch64 ABI implementation so that it (i) properly<br>\nrespects that v8-v15 inclusive have callee-save lower halves, and<br>\ncaller-save upper halves, by conservatively approximating (to full<br>\nregisters) in the appropriate directions when generating prologue<br>\ncaller-saves and when informing the regalloc of clobbered regs across<br>\ncallsites.</p>\n<p>In order to prevent saving all of these vector registers in the prologue<br>\nof every non-leaf function due to the above approximation, this also<br>\nmakes use of a new <a href=\"http://regalloc.rs\">regalloc.rs</a> feature to exclude call instructions'<br>\nwrites from the clobber set returned by register allocation. This is<br>\nsafe whenever the caller and callee have the same ABI (because anything<br>\nthe callee could clobber, the caller is allowed to clobber as well<br>\nwithout saving it in the prologue).</p>\n<p>Requires bytecodealliance/regalloc.rs#100; this PR refers to my fork of<br>\n<a href=\"http://regalloc.rs\">regalloc.rs</a> until that PR is reviewed, merged and included in a new<br>\nrelease.</p>\n<p>Fixes #2254.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 212480456,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602015698
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503329633\">PR Review</a>.</p>",
        "id": 212480692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602015827
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500573530\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, I like this much better! The <code>ABIMachineSpec</code> now has <code>get_regs_clobbered_by_call()</code>, and aarch64 has <code>is_reg_saved_in_prologue()</code>, <code>get_regs_saved_in_prologue()</code>, and <code>is_reg_clobbered_by_call()</code>.</p>\n</blockquote>",
        "id": 212480694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602015827
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503365146\">PR Review</a>.</p>",
        "id": 212486999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602018994
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#discussion_r500600843\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, leave it as it is then.  That the other names have been improved is good enough for me.  Thanks for doing that.</p>\n</blockquote>",
        "id": 212487000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602018994
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267#pullrequestreview-503366541\">PR Review</a>.</p>",
        "id": 212487243,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602019131
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267\">PR #2267</a> from <code>fix-aarch64-abi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR updates the AArch64 ABI implementation so that it (i) properly<br>\nrespects that v8-v15 inclusive have callee-save lower halves, and<br>\ncaller-save upper halves, by conservatively approximating (to full<br>\nregisters) in the appropriate directions when generating prologue<br>\ncaller-saves and when informing the regalloc of clobbered regs across<br>\ncallsites.</p>\n<p>In order to prevent saving all of these vector registers in the prologue<br>\nof every non-leaf function due to the above approximation, this also<br>\nmakes use of a new <a href=\"http://regalloc.rs\">regalloc.rs</a> feature to exclude call instructions'<br>\nwrites from the clobber set returned by register allocation. This is<br>\nsafe whenever the caller and callee have the same ABI (because anything<br>\nthe callee could clobber, the caller is allowed to clobber as well<br>\nwithout saving it in the prologue).</p>\n<p>Requires bytecodealliance/regalloc.rs#100; this PR refers to my fork of<br>\n<a href=\"http://regalloc.rs\">regalloc.rs</a> until that PR is reviewed, merged and included in a new<br>\nrelease.</p>\n<p>Fixes #2254.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 212489950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602020657
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267\">PR #2267</a> from <code>fix-aarch64-abi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This PR updates the AArch64 ABI implementation so that it (i) properly<br>\nrespects that v8-v15 inclusive have callee-save lower halves, and<br>\ncaller-save upper halves, by conservatively approximating (to full<br>\nregisters) in the appropriate directions when generating prologue<br>\ncaller-saves and when informing the regalloc of clobbered regs across<br>\ncallsites.</p>\n<p>In order to prevent saving all of these vector registers in the prologue<br>\nof every non-leaf function due to the above approximation, this also<br>\nmakes use of a new <a href=\"http://regalloc.rs\">regalloc.rs</a> feature to exclude call instructions'<br>\nwrites from the clobber set returned by register allocation. This is<br>\nsafe whenever the caller and callee have the same ABI (because anything<br>\nthe callee could clobber, the caller is allowed to clobber as well<br>\nwithout saving it in the prologue).</p>\n<p>Fixes #2254.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 212494675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602023834
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2267\">PR #2267</a>.</p>",
        "id": 212495156,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1602024173
    }
]