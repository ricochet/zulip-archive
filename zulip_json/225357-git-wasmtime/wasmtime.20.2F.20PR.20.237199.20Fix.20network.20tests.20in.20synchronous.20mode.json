[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7199\">PR #7199</a> from <code>alexcrichton:yield-fixes-everything-right</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is an attempt to fix some networking tests in synchronous mode in our test suite. Currently networking tests don't actually run in synchronous mode on CI which is why no failures have been surfaced yet, but the refactoring in #7182 is going to start doing this.</p>\n<p>Currently the <code>udp_sample_application.rs</code> test blocks infinitely in synchronous mode for me locally, most of the time. This appears to be an interaction between how Tokio handles readiness and how we're entering the event loop. We're effectively entering the Tokio event loop with a future that's always ready which ends up starving Tokio of otherwise performing its background work such as updating flags for readiness of reading/writing.</p>\n<p>The fix here is to add a yield at the start of an <code>in_tokio</code> block which is used in synchronous mode. This is a kludge fix but the intention is to enable Tokio to have a chance to update readiness flags and process events from epoll/kqueue/etc.</p>\n<p>An additional fix to this issue is <a href=\"https://github.com/WebAssembly/wasi-sockets/issues/64\">WebAssembly/wasi-sockets#64</a> where the test is waiting on <code>READABLE</code> or <code>WRITABLE</code>, but in this specific case it should only wait on <code>READABLE</code>. If it waited on just this then that would also fix this issue. Nevertheless having a <code>yield_now</code> is expected to have little-to-no overhead and otherwise fix this edge case of an always-ready future.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 395731109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696868055
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7199\">PR #7199</a>.</p>",
        "id": 395731111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696868057
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7199\">PR #7199</a>.</p>",
        "id": 395731112,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696868057
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7199\">PR #7199</a>.</p>",
        "id": 395757654,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696882314
    }
]