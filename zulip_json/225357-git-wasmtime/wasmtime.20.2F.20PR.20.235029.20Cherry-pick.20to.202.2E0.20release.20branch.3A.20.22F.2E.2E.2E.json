[
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5029\">PR #5029</a>.</p>",
        "id": 302762748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665101875
    },
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5029\">PR #5029</a> from <code>cherrypick-2.0.0-pr5023</code> to <code>release-2.0.0</code>:</p>\n<blockquote>\n<ul>\n<li>Fix StructReturn handling: properly mark the clobber, and offset actual rets.</li>\n</ul>\n<p>The legalization of <code>StructReturn</code> was causing issues in the new call-handling code: the <code>StructReturn</code> ret was included in the <code>SigData</code> as if it were an actual CLIF-level return value, but it is not.</p>\n<p>Prior to using regalloc constraints for return values, we unconditionally included rax (or the architecture's usual return register) as a def, so it would be properly handled as \"clobbered\" by the regalloc. With the new scheme, we include defs on the call only for CLIF-level outputs. Callees with <code>StructReturn</code> args were thus not known to clobber the return-value register, and values might be corrupted.</p>\n<p>This PR updates the code to include a <code>StructReturn</code> ret as a clobber rather than a returned value in the relevant spots. I observed it causing saves/restores of rax in some CLIF that @bjorn3 provided me, but I was having difficulty minimizing this into a test-case that I would be comfortable including as a precise-output case (including the whole thing verbatim would lock down a bunch of other irrelevant details and cause test-update noise later). If we can find a more minimized example I'm happy to include it as a filetest.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 302762749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665101875
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5029\">PR #5029</a> from <code>cherrypick-2.0.0-pr5023</code> to <code>release-2.0.0</code>:</p>\n<blockquote>\n<p>The legalization of <code>StructReturn</code> was causing issues in the new call-handling code: the <code>StructReturn</code> ret was included in the <code>SigData</code> as if it were an actual CLIF-level return value, but it is not.</p>\n<p>Prior to using regalloc constraints for return values, we unconditionally included rax (or the architecture's usual return register) as a def, so it would be properly handled as \"clobbered\" by the regalloc. With the new scheme, we include defs on the call only for CLIF-level outputs. Callees with <code>StructReturn</code> args were thus not known to clobber the return-value register, and values might be corrupted.</p>\n<p>This PR updates the code to include a <code>StructReturn</code> ret as a clobber rather than a returned value in the relevant spots. I observed it causing saves/restores of rax in some CLIF that @bjorn3 provided me, but I was having difficulty minimizing this into a test-case that I would be comfortable including as a precise-output case (including the whole thing verbatim would lock down a bunch of other irrelevant details and cause test-update noise later). If we can find a more minimized example I'm happy to include it as a filetest.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 302762795,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665101888
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5029#pullrequestreview-1133763800\">PR review</a>.</p>",
        "id": 302763080,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665102115
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5029\">PR #5029</a> from <code>cherrypick-2.0.0-pr5023</code> to <code>release-2.0.0</code>.</p>",
        "id": 302773090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665110511
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5029\">PR #5029</a>.</p>",
        "id": 302779460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1665117422
    }
]