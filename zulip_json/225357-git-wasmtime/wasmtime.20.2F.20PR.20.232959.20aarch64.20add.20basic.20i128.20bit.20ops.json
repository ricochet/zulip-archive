[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>:</p>\n<blockquote>\n<p>Hey, some more ops implemented for i128 support.</p>\n<p>I think the shifts can be reduced by a few instructions (especially the last csel), but I'm not seeing how right now.</p>\n<p>I also didn't implement support for immlogic, changing it to support multiple registers didn't seem like a simple change.</p>\n<p>This adds support for:</p>\n<ul>\n<li>bnot</li>\n<li>band</li>\n<li>bor</li>\n<li>bxor</li>\n<li>band_not</li>\n<li>bor_not</li>\n<li>bxor_not</li>\n<li>ishl</li>\n<li>ushr</li>\n<li>sshr<br>\n</li>\n</ul>\n</blockquote>",
        "id": 241133692,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622631841
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-674057737\">PR review</a>.</p>",
        "id": 241134134,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622632115
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r643855385\">PR review comment</a>:</p>\n<blockquote>\n<p>@cfallin I pretty much copied the testing code from <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/filetests/filetests/isa/x64/shift-i128-run.clif\">x64/shift-i128-run.clif</a>. And added a few more test cases where my implementation had issues.</p>\n<p>Do you think it would be a good idea to merge run tests so that they could be multi arch? I've been thinking about something along the lines of:</p>\n<p><code>testfiles/runtests/i128-bitops.clif</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">rest_of_the_tests</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>This way we could reuse all of these test cases for all arches.</p>\n<p>The down side of this is that we may have to be more granular with the testfiles. For example this file right here fails for x86_64 because some of the bit ops fail. So we would have to split this into shift_run and bitops_run or something along those lines.</p>\n<p>What do you think?</p>\n</blockquote>",
        "id": 241134136,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622632115
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r643855385\">PR review comment</a>.</p>",
        "id": 241134176,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622632146
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>.</p>",
        "id": 241134224,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622632192
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-674064757\">PR review</a>.</p>",
        "id": 241134775,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622632590
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r643860587\">PR review comment</a>:</p>\n<blockquote>\n<p>nit: missing trailing newline</p>\n</blockquote>",
        "id": 241134776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622632590
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>.</p>",
        "id": 241136498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622633764
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-674606755\">PR review</a>.</p>",
        "id": 241308131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622662275
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r644262771\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, sharing run-tests makes a lot of sense! In general I actually want to try to shift tests from golden-code (compile tests) to golden-output (run tests) as this makes our suite more robust against cross-cutting backend changes, such as regalloc optimizations; so there are additional benefits, aside from sharing across architectures.</p>\n<p>Could you be more specific about the failures you're seeing on x86_64, though? That's somewhat concerning -- unimplemented opcode, incorrect result, or something else?</p>\n</blockquote>",
        "id": 241308132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622662275
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-674622003\">PR review</a>.</p>",
        "id": 241310470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622663465
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r644274581\">PR review comment</a>:</p>\n<blockquote>\n<p>Sure, band_not is failling on this <a href=\"https://github.com/bytecodealliance/wasmtime/blob/7d36fd9a1e070e2d83f8b63e44faae587a138686/cranelift/codegen/src/isa/x64/lower.rs#L1888\">assert</a>.</p>\n<p>BorNot / BxorNot / Cls (not on this PR yet) are not implemented at all.</p>\n</blockquote>",
        "id": 241310471,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622663466
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r644274581\">PR review comment</a>.</p>",
        "id": 241310512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622663491
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r644274581\">PR review comment</a>.</p>",
        "id": 241310566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622663510
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-674656884\">PR review</a>.</p>",
        "id": 241315933,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622666070
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r644301479\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, OK, for tests like those for <code>BandNot</code> where we don't have an implementation on x86_64, we can just omit the <code>target</code> line in the test file, perhaps with a comment saying \"not yet implemented on $PLATFORM\".</p>\n</blockquote>",
        "id": 241315936,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1622666071
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-677400729\">PR review</a>.</p>",
        "id": 241774704,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623071964
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r646579762\">PR review comment</a>:</p>\n<blockquote>\n<p>You are right that this instruction sequence can be improved - see what Clang is generating in the same situation <a href=\"https://godbolt.org/z/edKP1c6K6\">here</a>.</p>\n<p>A similar improvement is possible for the right shifts.</p>\n</blockquote>",
        "id": 241774705,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623071964
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>.</p>",
        "id": 241903643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623152185
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#discussion_r647355708\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops, i should have checked that.</p>\n<p>I've fixed the code so that it now emits a similar sequence to what clang is doing.</p>\n</blockquote>",
        "id": 241903843,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623152314
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-678403882\">PR review</a>.</p>",
        "id": 241903844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623152314
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/akirilov-arm\">akirilov-arm</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a>.</p>",
        "id": 241986816,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623186623
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959#pullrequestreview-680025112\">PR review</a>.</p>",
        "id": 242111528,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623264309
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>.</p>",
        "id": 242134793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623274945
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>.</p>",
        "id": 242135106,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623275104
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>.</p>",
        "id": 242135369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623275241
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a> from <code>aarch64-i128-bit-ops</code> to <code>main</code>.</p>",
        "id": 242135523,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623275315
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2959\">PR #2959</a>.</p>",
        "id": 242138589,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1623277315
    }
]