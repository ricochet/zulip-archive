[
    {
        "content": "<p><a href=\"https://github.com/fitzgen\">fitzgen</a> added the isle label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7500\">Issue #7500</a>.</p>",
        "id": 400972796,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699458817
    },
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7500\">issue #7500</a>:</p>\n<blockquote>\n<ul>\n<li>\n<p>[ ] Instead of having the generated code construct and return an iterator on every call, callers should pass in a reusable vec that gets pushed onto. We use smallvecs right now, which is better than nothing, but once we exceed the inline capacity, we start making lots of temporary allocations.</p>\n</li>\n<li>\n<p>[ ] We limit the number of rewritten values added to the egraph, and only consider the first 5 values returned by ISLE code:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/b9f2a3060b95a479a5e52ad410f77d43bf1a2a59/cranelift/codegen/src/egraph.rs#L249-L260\">https://github.com/bytecodealliance/wasmtime/blob/b9f2a3060b95a479a5e52ad410f77d43bf1a2a59/cranelift/codegen/src/egraph.rs#L249-L260</a></p>\n<p>But the ISLE code still builds up an unbounded number of rewritten values to return. Ideally our rule set would never exhibit this behavior, but it does happen. Since we only take the first N anyways, the generated ISLE code should check if we've reached our max limit (configured at ISLE compile time? or maybe via the context?) and early return instead of spend time matching rewrites whose results will be ignored.</p>\n</li>\n</ul>\n</blockquote>",
        "id": 400972801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699458818
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7500#issuecomment-1802177807\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7500\">issue #7500</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 400972977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699458871
    },
    {
        "content": "<p>fitzgen closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7500\">issue #7500</a>:</p>\n<blockquote>\n<ul>\n<li>\n<p>[ ] Instead of having the generated code construct and return an iterator on every call, callers should pass in a reusable vec that gets pushed onto. We use smallvecs right now, which is better than nothing, but once we exceed the inline capacity, we start making lots of temporary allocations.</p>\n</li>\n<li>\n<p>[ ] We limit the number of rewritten values added to the egraph, and only consider the first 5 values returned by ISLE code:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/b9f2a3060b95a479a5e52ad410f77d43bf1a2a59/cranelift/codegen/src/egraph.rs#L249-L260\">https://github.com/bytecodealliance/wasmtime/blob/b9f2a3060b95a479a5e52ad410f77d43bf1a2a59/cranelift/codegen/src/egraph.rs#L249-L260</a></p>\n<p>But the ISLE code still builds up an unbounded number of rewritten values to return. Ideally our rule set would never exhibit this behavior, but it does happen. Since we only take the first N anyways, the generated ISLE code should check if we've reached our max limit (configured at ISLE compile time? or maybe via the context?) and early return instead of spend time matching rewrites whose results will be ignored.</p>\n</li>\n</ul>\n</blockquote>",
        "id": 401835160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699905382
    }
]