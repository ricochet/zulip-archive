[
    {
        "content": "<p>jameysharp opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063\">PR #8063</a> from <code>jameysharp:stop-using-tables</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR fixes #5532, removing a bunch of code from Cranelift and adding only a little bit of code to the wasmtime-cranelift crate.</p>\n<p>I want to implement something like the wasm heap filetests for tables and land that before this, so I'm opening this as a draft. This PR should have no effect on generated code and it'd be nice to verify that.</p>\n<p>Merging all the table-related code into one place should eventually let us experiment more with bounds-check elimination tricks, like we've been doing with heaps.</p>\n</blockquote>",
        "id": 425413036,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709853286
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063#issuecomment-1984787727\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063\">PR #8063</a>:</p>\n<blockquote>\n<p>I'm quite excited for this <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>, thanks for taking this on!</p>\n</blockquote>",
        "id": 425416350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709854895
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063#pullrequestreview-1925207685\">PR review</a>:</p>\n<blockquote>\n<p>Also excited for this!</p>\n</blockquote>",
        "id": 425547116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709913899
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063#discussion_r1517916515\">PR review comment</a>:</p>\n<blockquote>\n<p>When removing memories from CLIF, we pushed them into <code>cranelift-wasm</code> and not <code>wasmtime-cranelift</code>.</p>\n<p>At a high level, this decision makes sense to me because memories are a general Wasm concept and not a Wasmtime-specific concept.</p>\n<p>In this PR, you're pushing tables all the way out to <code>wasmtime-cranelift</code>, rather than just to <code>cranelift-wasm</code>. I'm wondering what the motivation for this was? Because tables are a general Wasm concept, not a Wasmtime-specific concept, so I would expect them to be in <code>cranelift-wasm</code>.</p>\n<p>More concretely, we would ideally share all the various bounds-checking logic that is in <code>cranelift/wasm/src/code_translator/bounds_checks.rs</code> between Wasm tables and memories, and that seems like it will be easier if tables are moved to the same location as memories.</p>\n</blockquote>",
        "id": 425547117,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709913899
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063#pullrequestreview-1925207685\">PR review</a>:</p>\n<blockquote>\n<p>Also excited for this!</p>\n</blockquote>",
        "id": 425547118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709913899
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063#pullrequestreview-1925467013\">PR review</a>.</p>",
        "id": 425565518,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709920351
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063#discussion_r1518063962\">PR review comment</a>:</p>\n<blockquote>\n<p>The motivation was that this was what I could do in one day of hacking to learn about the problem space. :grin: I started by copying the implementation of the <code>table_addr</code> legalization pass to the only module which used <code>table_addr</code>, and that happened to be in <code>wasmtime-cranelift</code>.</p>\n<p>In the process, I figured out that if I want to use the filetests infrastructure to test table instructions like you did for memory instructions, then I'm pretty much forced to push this code into <code>cranelift-wasm</code> instead.</p>\n<p>That's going to require some more thought about exactly what API is needed, but I totally agree that it's worth doing.</p>\n</blockquote>",
        "id": 425565519,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709920351
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063\">PR #8063</a>.</p>",
        "id": 426402643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710354387
    },
    {
        "content": "<p>jameysharp updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063\">PR #8063</a>.</p>",
        "id": 426411203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710357657
    },
    {
        "content": "<p>jameysharp edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8063\">PR #8063</a>:</p>\n<blockquote>\n<p>This CLIF instruction is specific to WebAssembly, and doesn't expose any optimization opportunities or have any other reason to be treated specially by Cranelift. So this commit makes Wasmtime emit a series of simpler Cranelift instructions instead.</p>\n<p>I copied the implementation from Cranelift's legalization pass, which already was rewriting these instructions to simpler ones, and then simplified the result to not generate the intermediate form at all.</p>\n<p>Merging all the table-related code into one place should eventually let us experiment more with bounds-check elimination tricks, like we've been doing with heaps.</p>\n<p>The filetest changes demonstrate that the new cranelift-wasm implementation generates the exact same sequence of instructions that the legalization pass did, except with different value numbers and fewer aliases.</p>\n<p>Several features of Cranelift's table support were unused, so while copying parts of Cranelift into this crate I removed those features. Specifically:</p>\n<ul>\n<li>TableData's min_size and index_type fields</li>\n<li>table_addr's immediate byte-offset operand</li>\n</ul>\n<p>This is a step toward #5532.</p>\n</blockquote>",
        "id": 426411506,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710357783
    }
]