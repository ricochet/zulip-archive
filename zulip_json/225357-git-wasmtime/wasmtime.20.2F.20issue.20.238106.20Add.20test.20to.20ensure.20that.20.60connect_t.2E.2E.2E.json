[
    {
        "content": "<p><a href=\"https://github.com/rikhuijzer\">rikhuijzer</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8106\">Issue #8106</a>.</p>",
        "id": 426207023,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710275366
    },
    {
        "content": "<p>rikhuijzer opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8106\">issue #8106</a>:</p>\n<blockquote>\n<p>The following diff should be applied to ensure that the <code>connect_timeout</code> variable is correctly passed into the <code>handle</code> function.</p>\n<p>This code was removed in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8085#discussion_r1521942861\">https://github.com/bytecodealliance/wasmtime/pull/8085#discussion_r1521942861</a> due to a failure on Windows MinGW x86_64.</p>\n<p><div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gh\">diff --git a/crates/test-programs/src/bin/http_outbound_request_timeout.rs b/crates/test-programs/src/bin/http_outbound_request_timeout.rs</span>\n<span class=\"gh\">index 8bd7601..198288e 100644</span>\n<span class=\"gd\">--- a/crates/test-programs/src/bin/http_outbound_request_timeout.rs</span>\n<span class=\"gi\">+++ b/crates/test-programs/src/bin/http_outbound_request_timeout.rs</span>\n<span class=\"gu\">@@ -1,13 +1,12 @@</span>\n<span class=\"w\"> </span>use anyhow::Context;\n<span class=\"w\"> </span>use std::net::SocketAddr;\n<span class=\"gd\">-use std::time::Duration;</span>\n<span class=\"gi\">+use std::time::{Duration, Instant};</span>\n<span class=\"w\"> </span>use test_programs::wasi::http::types::{ErrorCode, Method, Scheme};\n\n<span class=\"w\"> </span>fn main() {\n<span class=\"w\"> </span>    // This address inside the TEST-NET-3 address block is expected to time out.\n<span class=\"w\"> </span>    let addr = SocketAddr::from(([203, 0, 113, 12], 80)).to_string();\n<span class=\"w\"> </span>    let timeout = Duration::from_millis(200);\n<span class=\"gi\">+    let start = Instant::now();</span>\n<span class=\"w\"> </span>    let connect_timeout: Option&lt;u64&gt; = Some(timeout.as_nanos() as u64);\n<span class=\"w\"> </span>    let res = test_programs::http::request(\n<span class=\"w\"> </span>        Method::Get,\n<span class=\"gu\">@@ -30,9 +29,4 @@ fn main() {</span>\n<span class=\"w\"> </span>        ),\n<span class=\"w\"> </span>        \"expected connection timeout\"\n<span class=\"w\"> </span>    );\n<span class=\"gi\">+</span>\n<span class=\"gi\">+    let actual = start.elapsed();</span>\n<span class=\"gi\">+    let tolerance = Duration::from_millis(100);</span>\n<span class=\"gi\">+    let upper_bound = timeout + tolerance;</span>\n<span class=\"gi\">+    assert!(actual &lt; upper_bound);</span>\n<span class=\"w\"> </span>}\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 426207026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710275367
    }
]