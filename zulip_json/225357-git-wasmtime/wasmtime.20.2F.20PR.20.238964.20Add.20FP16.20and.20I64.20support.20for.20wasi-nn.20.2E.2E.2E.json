[
    {
        "content": "<p>jianjunz opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a> from <code>jianjunz:f16-i64</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Some devices may not support FP32.</p>\n</blockquote>",
        "id": 451763227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721137694
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 451915927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721182956
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 451918402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721184493
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 451925151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721188560
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 451968291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721200915
    },
    {
        "content": "<p><strong>jianjunz</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a> as ready for review.</p>",
        "id": 451985935,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721204941
    },
    {
        "content": "<p><strong>jianjunz</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 451985942,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721204942
    },
    {
        "content": "<p><strong>jianjunz</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 451985945,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721204942
    },
    {
        "content": "<p><strong>jianjunz</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 451985948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721204942
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 452091765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721226635
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187025186\">PR review</a>.</p>",
        "id": 452456369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683580278\">PR review comment</a>:</p>\n<blockquote>\n<p>When is this needed?</p>\n</blockquote>",
        "id": 452456370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683594469\">PR review comment</a>:</p>\n<blockquote>\n<p>Are we sure <code>cast</code> is right here? Poking around in <code>windows-rs</code>, I see that it has a <code>CanInto</code> implementation for <code>TensorFeatureDescriptor</code> <a href=\"https://microsoft.github.io/windows-docs-rs/doc/windows/AI/MachineLearning/struct.ILearningModelFeatureDescriptor.html#impl-CanInto%3CILearningModelFeatureDescriptor%3E-for-TensorFeatureDescriptor\">here</a> &mdash; doesn't that mean we should be using <code>into()</code> instead?</p>\n</blockquote>",
        "id": 452456371,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683580761\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        let inspectable =\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 452456372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683580043\">PR review comment</a>:</p>\n<blockquote>\n<p>You probably only need <code>implement</code> for this PR, right?</p>\n</blockquote>",
        "id": 452456373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683581846\">PR review comment</a>:</p>\n<blockquote>\n<p>Is this correct? ONNX is going to represent this type with 4 bytes instead of 2 bytes? If so, maybe we should add a comment describing why this is the case and linking to some documentation; otherwise, it's a bit surprising.</p>\n</blockquote>",
        "id": 452456374,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683579488\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't think this makes sense. The <code>cargo test</code> above runs both the unit tests within the library as well as the integration tests in the <code>tests</code> directory.</p>\n</blockquote>",
        "id": 452456375,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683599370\">PR review comment</a>:</p>\n<blockquote>\n<p>Not sure if it's any faster, but this would avoid the size calculation:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">data</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">view</span><span class=\"p\">.</span><span class=\"n\">into_iter</span><span class=\"p\">().</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">::</span><span class=\"n\">to_le_bytes</span><span class=\"p\">).</span><span class=\"n\">collect</span><span class=\"p\">();</span>\n</code></pre></div>\n<p>We might want to note somewhere that the LE ordering is here to match WebAssembly's ordering, not the platform we're running on (in which case always doing LE could be incorrect).</p>\n</blockquote>",
        "id": 452456376,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683596555\">PR review comment</a>:</p>\n<blockquote>\n<p>We can do this once at the top of the function.</p>\n</blockquote>",
        "id": 452456377,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683603918\">PR review comment</a>:</p>\n<blockquote>\n<p>When doing this <code>unsafe</code> \"cast\" to a slice, we also need to make sure that the <code>u8</code> pointer to <code>tensor.data</code> is aligned in such a way that the <code>f32</code>s in <code>data</code> will also be aligned to their 4-byte alignment. Here's an <a href=\"https://github.com/intel/openvino-rs/blob/main/crates/openvino/src/tensor.rs#L124-L151\">example</a> of how to do the check from <code>openvino-rs</code>. And the <a href=\"https://doc.rust-lang.org/std/slice/fn.from_raw_parts.html\">docs for <code>std::slice::from_raw_parts</code></a> have all the details. I think it would be fine here to fail if things aren't aligned correctly (instead of trying to shift everything!), at least for the time being.</p>\n</blockquote>",
        "id": 452456378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683593805\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                _ =&gt; unimplemented!(\"the winml backend only supports tensors, found: {}\", kind),\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 452456379,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683588027\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>                tensor.data.as_ptr().cast&lt;i64&gt;,\n</code></pre></div>\n<p>These days clippy tells me this is the preferred way to do this.</p>\n</blockquote>",
        "id": 452456380,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683595054\">PR review comment</a>:</p>\n<blockquote>\n<p>This kind of comment can be moved from here to the <code>unimplemented!()</code> at the end of <code>to_tensor</code> so that both users and code readers can take advantage of this information.</p>\n</blockquote>",
        "id": 452456381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683595950\">PR review comment</a>:</p>\n<blockquote>\n<p>E.g., <a href=\"https://microsoft.github.io/windows-docs-rs/doc/windows/AI/MachineLearning/struct.TensorFloat16Bit.html#method.CreateFromArray\">https://microsoft.github.io/windows-docs-rs/doc/windows/AI/MachineLearning/struct.TensorFloat16Bit.html#method.CreateFromArray</a>.</p>\n</blockquote>",
        "id": 452456382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683586704\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        TensorType::Fp32 =&gt; unsafe {\n</code></pre></div>\n<p>Isn't <code>TensorType</code> already imported?</p>\n</blockquote>",
        "id": 452456383,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683605409\">PR review comment</a>:</p>\n<blockquote>\n<p>It took me a second to understand that what we're trying to do is \"roundtrip\" a tensor through <code>to_inspectable</code> and back through <code>to_tensor</code>. To make this more clear, can you look at factoring out some of the duplication here?</p>\n</blockquote>",
        "id": 452456384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721345877
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 452468668,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721353255
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187139282\">PR review</a>.</p>",
        "id": 452468909,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721353497
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683663453\">PR review comment</a>:</p>\n<blockquote>\n<p>You're right. The <code>cargo test</code> above also runs unit tests. <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/9969920948/job/27547820669#step:8:409\">https://github.com/bytecodealliance/wasmtime/actions/runs/9969920948/job/27547820669#step:8:409</a></p>\n</blockquote>",
        "id": 452468910,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721353498
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187140182\">PR review</a>.</p>",
        "id": 452468949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721353528
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683664333\">PR review comment</a>:</p>\n<blockquote>\n<p>Removed. They're not needed for this one.</p>\n</blockquote>",
        "id": 452468950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721353528
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187166401\">PR review</a>.</p>",
        "id": 452472888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721356416
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683693053\">PR review comment</a>:</p>\n<blockquote>\n<p><code>output_tensor</code>'s type is unknown at the top of the function.</p>\n</blockquote>",
        "id": 452472889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721356416
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683684552\">PR review comment</a>:</p>\n<blockquote>\n<p>WinML may report an error</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">binding</span><span class=\"p\">.</span><span class=\"n\">Bind</span><span class=\"p\">(</span><span class=\"s\">\"input\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tensor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">shape</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]);</span>\n<span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">binding</span><span class=\"p\">.</span><span class=\"n\">Bind</span><span class=\"p\">(</span><span class=\"s\">\"input\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tensor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">shape</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]);</span><span class=\"w\">  </span><span class=\"o\">&lt;--</span><span class=\"w\"> </span><span class=\"n\">error</span>\n</code></pre></div>\n<p>But it works</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">binding</span><span class=\"p\">.</span><span class=\"n\">Bind</span><span class=\"p\">(</span><span class=\"s\">\"input\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tensor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">shape</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]);</span>\n<span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">binding</span><span class=\"p\">.</span><span class=\"n\">Clear</span><span class=\"p\">();</span>\n<span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">binding</span><span class=\"p\">.</span><span class=\"n\">Bind</span><span class=\"p\">(</span><span class=\"s\">\"input\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">tensor</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">shape</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]);</span>\n</code></pre></div>\n</blockquote>",
        "id": 452472890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721356416
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683689938\">PR review comment</a>:</p>\n<blockquote>\n<p>WinML may use 2 bytes internally because it's fp16, but f16 is not officially supported by Rust stable, so we use f32 here.</p>\n</blockquote>",
        "id": 452472891,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721356416
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187187727\">PR review</a>.</p>",
        "id": 452486315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721364768
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683702229\">PR review comment</a>:</p>\n<blockquote>\n<p>Removed <code>crate::wit::types::</code>.</p>\n</blockquote>",
        "id": 452486318,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721364768
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683700252\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 452486319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721364768
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683700900\">PR review comment</a>:</p>\n<blockquote>\n<p>Removed.</p>\n</blockquote>",
        "id": 452486320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721364769
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683700731\">PR review comment</a>:</p>\n<blockquote>\n<p>Done.</p>\n</blockquote>",
        "id": 452486321,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721364769
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683785231\">PR review comment</a>:</p>\n<blockquote>\n<p><code>view</code>'s type is <code>IVectorView</code>, not a rust collection, so the short version doesn't work here.</p>\n</blockquote>",
        "id": 452486322,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721364769
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187427836\">PR review</a>.</p>",
        "id": 452497774,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721370462
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683872294\">PR review comment</a>:</p>\n<blockquote>\n<p>My understanding is <code>cast</code> here is for COM interfaces, similar as <a href=\"https://learn.microsoft.com/en-us/cpp/atl/queryinterface\">QueryInterface</a>, while <code>into</code> is for converting derived class into base class?</p>\n</blockquote>",
        "id": 452497776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721370463
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 452497922,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721370532
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187437959\">PR review</a>.</p>",
        "id": 452498441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721370819
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683879869\">PR review comment</a>:</p>\n<blockquote>\n<p>Replaced with <code>cast</code>.</p>\n</blockquote>",
        "id": 452498443,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721370819
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 452514572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721376607
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187609333\">PR review</a>.</p>",
        "id": 452514832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721376710
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683989592\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for the info. Added assertion when getting length.</p>\n</blockquote>",
        "id": 452514834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721376710
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2187612344\">PR review</a>.</p>",
        "id": 452514983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721376752
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1683991834\">PR review comment</a>:</p>\n<blockquote>\n<p>Implemented <code>PartialEq</code> for <code>Tensor</code>, so we don't need a lot of <code>assert_eq!</code> here.</p>\n</blockquote>",
        "id": 452514986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721376752
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2195431250\">PR review</a>.</p>",
        "id": 453575832,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721788882
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1688990550\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok, so this needs to be fixed then in this PR?</p>\n</blockquote>",
        "id": 453575835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721788882
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1689005796\">PR review comment</a>:</p>\n<blockquote>\n<p>No, I don't think that is not correct. I checked out the code and <code>let data = view.into_iter().flat_map(f32::to_le_bytes).collect();</code> (changing <code>map</code> to <code>flat_map</code>) seems to compile ok.</p>\n</blockquote>",
        "id": 453575836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721788882
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1689009482\">PR review comment</a>:</p>\n<blockquote>\n<p>We should probably be using <code>shape</code> here to verify that <code>tensor.dimensions</code> matches.</p>\n</blockquote>",
        "id": 453575837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721788883
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1688991490\">PR review comment</a>:</p>\n<blockquote>\n<p>Not sure that answers the question...</p>\n</blockquote>",
        "id": 453575838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721788883
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1688992428\">PR review comment</a>:</p>\n<blockquote>\n<p>If you'd like to do this in a more standard way, I just learned of <code>align_to</code> which <a href=\"https://github.com/intel/openvino-rs/pull/135/files\">can be used</a> to do the same thing.</p>\n</blockquote>",
        "id": 453575839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721788883
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 453604003,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721801584
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2195651268\">PR review</a>.</p>",
        "id": 453604039,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721801607
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1689160383\">PR review comment</a>:</p>\n<blockquote>\n<p>I mean <code>cast</code> here queries if the COM object can be convert into a derived class, while <code>into</code> is used to convert into a base class. That's my understanding.</p>\n</blockquote>",
        "id": 453604040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721801607
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1689139129\">PR review comment</a>:</p>\n<blockquote>\n<p>No, not in this one. It cannot be easily fixed by adding a <code>self.binding.Clear()</code> here because a model may have multiple input features. In this case, application calls <code>set_input</code> more than once. </p>\n</blockquote>",
        "id": 453604041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721801607
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1689185258\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for pointing out the duplication here. I think we don't need to verify shape here, WinML will check it later, so <code>shape</code> is removed.</p>\n</blockquote>",
        "id": 453604042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721801607
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2195727451\">PR review</a>.</p>",
        "id": 453604069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721801630
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1689193831\">PR review comment</a>:</p>\n<blockquote>\n<p><code>flat_map</code> works. Thanks.</p>\n</blockquote>",
        "id": 453604070,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721801630
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 453626975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1721809364
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2220042244\">PR review</a>.</p>",
        "id": 456734509,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722904461
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1704750163\">PR review comment</a>:</p>\n<blockquote>\n<p>I think I understand what you're saying about <code>Clear</code>: it erases _all_ the bindings, even for other model inputs. We can't have that. But what happens in this conceivable sequence?</p>\n<ul>\n<li>Wasm guest calls <code>set_input</code> on input N with shape A</li>\n<li>Wasm guest again calls <code>set_input</code> on input N with shape B</li>\n</ul>\n<p>This is valid, though silly. The user should not have to face an error from wasi-nn in this case, right? But, if WinML is going to raise an error, then should we protect this some other way, e.g., by checking that the tensor shape is what the model expects (either A or B)?</p>\n</blockquote>",
        "id": 456734512,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722904462
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1704755399\">PR review comment</a>:</p>\n<blockquote>\n<p>How about</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">itensor</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">inspectable</span><span class=\"p\">.</span><span class=\"n\">cast</span><span class=\"o\">&lt;</span><span class=\"n\">ITensor</span><span class=\"o\">&gt;</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">;</span>\n<span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">dimensions</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dimensions_as_u32</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">itensor</span><span class=\"p\">.</span><span class=\"n\">Shape</span><span class=\"p\">()</span><span class=\"o\">?</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>or something like that?</p>\n</blockquote>",
        "id": 456734513,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722904462
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1704753541\">PR review comment</a>:</p>\n<blockquote>\n<p>Ok, please add a comment explaining that and link to the docs I mentioned.</p>\n</blockquote>",
        "id": 456734514,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722904462
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1704752891\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not familiar enough with COM so I'll take your word for it that this is the right approach.</p>\n</blockquote>",
        "id": 456734515,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722904462
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2220051801\">PR review</a>.</p>",
        "id": 456734766,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722904625
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1704756896\">PR review comment</a>:</p>\n<blockquote>\n<p>Probably should just <code>#[derive(PartialEq)]</code> since it's equivalent to this I think.</p>\n</blockquote>",
        "id": 456734768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722904626
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 456747607,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722910616
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2220071307\">PR review</a>.</p>",
        "id": 456750632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722912212
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1704771196\">PR review comment</a>:</p>\n<blockquote>\n<p>That's a variable input, accepts both A and B (like a string with different length). I feel like this is a bug of WinML, or the calling flow is incorrect. <code>Clear</code> fixes the issue but I'm not sure if that's the only solution, so I'm not adding <code>Clear</code> at this time.</p>\n</blockquote>",
        "id": 456750633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722912212
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1704835789\">PR review comment</a>:</p>\n<blockquote>\n<p>It works, but <code>GetAsVectorView</code> is a method of <code>TensorFloat16Bit</code>. Then we'll need to cast <code>itensor</code> again to specific tensor type. The change above makes code clean but will it be a performance issue to cast twice?</p>\n</blockquote>",
        "id": 456750634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722912212
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 456821577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722941116
    },
    {
        "content": "<p>jianjunz submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2220946155\">PR review</a>.</p>",
        "id": 456821727,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722941173
    },
    {
        "content": "<p>jianjunz created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#discussion_r1705320722\">PR review comment</a>:</p>\n<blockquote>\n<p>It works. Thanks.</p>\n</blockquote>",
        "id": 456821728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1722941173
    },
    {
        "content": "<p>jianjunz updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 457226961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723074671
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 457228823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723075599
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964#pullrequestreview-2228380815\">PR review</a>.</p>",
        "id": 457417709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723135107
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8964\">PR #8964</a>.</p>",
        "id": 457420364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723136052
    }
]