[
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2538#issuecomment-753785592\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2538\">Issue #2538</a>:</p>\n<blockquote>\n<p>CI error seems unrelated (perhaps caused by recent Rust 1.49 release?):</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">rust</span><span class=\"o\">-</span><span class=\"n\">lld</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">loading</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">libraries</span>: <span class=\"nc\">libLLVM</span><span class=\"o\">-</span><span class=\"mi\">11</span><span class=\"o\">-</span><span class=\"n\">rust</span><span class=\"o\">-</span><span class=\"mf\">1.49.0</span><span class=\"o\">-</span><span class=\"n\">stable</span><span class=\"p\">.</span><span class=\"n\">so</span>: <span class=\"nc\">cannot</span><span class=\"w\"> </span><span class=\"n\">open</span><span class=\"w\"> </span><span class=\"n\">shared</span><span class=\"w\"> </span><span class=\"n\">object</span><span class=\"w\"> </span><span class=\"n\">file</span>: <span class=\"nc\">No</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 221493061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609741907
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2538#issuecomment-755021527\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2538\">Issue #2538</a>:</p>\n<blockquote>\n<p>Thanks for the detailed review!</p>\n<p>One top-level point about special-casing the one-reg case vs. generalizing with <code>ValueRegs</code> everywhere: I did a quick measurement of compilation instruction count before/after this PR (<code>clif-util wasm --target x86_64 bz2.wasm</code>) as measured by <code>perf stat</code>:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Before</span>:\n     <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">960</span><span class=\"p\">,</span><span class=\"mi\">194</span><span class=\"p\">,</span><span class=\"mi\">985</span><span class=\"w\">      </span><span class=\"n\">instructions</span><span class=\"w\">              </span><span class=\"err\">#</span><span class=\"w\">    </span><span class=\"mf\">1.99</span><span class=\"w\">  </span><span class=\"n\">insn</span><span class=\"w\"> </span><span class=\"n\">per</span><span class=\"w\"> </span><span class=\"n\">cycle</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">956</span><span class=\"p\">,</span><span class=\"mi\">941</span><span class=\"p\">,</span><span class=\"mi\">087</span><span class=\"w\">      </span><span class=\"n\">instructions</span><span class=\"w\">              </span><span class=\"err\">#</span><span class=\"w\">    </span><span class=\"mf\">1.98</span><span class=\"w\">  </span><span class=\"n\">insn</span><span class=\"w\"> </span><span class=\"n\">per</span><span class=\"w\"> </span><span class=\"n\">cycle</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">944</span><span class=\"p\">,</span><span class=\"mi\">661</span><span class=\"p\">,</span><span class=\"mi\">945</span><span class=\"w\">      </span><span class=\"n\">instructions</span><span class=\"w\">              </span><span class=\"err\">#</span><span class=\"w\">    </span><span class=\"mf\">1.95</span><span class=\"w\">  </span><span class=\"n\">insn</span><span class=\"w\"> </span><span class=\"n\">per</span><span class=\"w\"> </span><span class=\"n\">cycle</span><span class=\"w\"></span>\n\n<span class=\"n\">After</span>:\n     <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">951</span><span class=\"p\">,</span><span class=\"mi\">673</span><span class=\"p\">,</span><span class=\"mi\">951</span><span class=\"w\">      </span><span class=\"n\">instructions</span><span class=\"w\">              </span><span class=\"err\">#</span><span class=\"w\">    </span><span class=\"mf\">1.98</span><span class=\"w\">  </span><span class=\"n\">insn</span><span class=\"w\"> </span><span class=\"n\">per</span><span class=\"w\"> </span><span class=\"n\">cycle</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">951</span><span class=\"p\">,</span><span class=\"mi\">074</span><span class=\"p\">,</span><span class=\"mi\">339</span><span class=\"w\">      </span><span class=\"n\">instructions</span><span class=\"w\">              </span><span class=\"err\">#</span><span class=\"w\">    </span><span class=\"mf\">1.98</span><span class=\"w\">  </span><span class=\"n\">insn</span><span class=\"w\"> </span><span class=\"n\">per</span><span class=\"w\"> </span><span class=\"n\">cycle</span><span class=\"w\"></span>\n<span class=\"w\">     </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">945</span><span class=\"p\">,</span><span class=\"mi\">951</span><span class=\"p\">,</span><span class=\"mi\">877</span><span class=\"w\">      </span><span class=\"n\">instructions</span><span class=\"w\">              </span><span class=\"err\">#</span><span class=\"w\">    </span><span class=\"mf\">1.98</span><span class=\"w\">  </span><span class=\"n\">insn</span><span class=\"w\"> </span><span class=\"n\">per</span><span class=\"w\"> </span><span class=\"n\">cycle</span><span class=\"w\"></span>\n</code></pre></div>\n<p>In other words, it seems to be in the measurement noise. I sort-of expected this given that (on the 64-bit platform case) we turned a 32-bit <code>Reg</code> into a 64-bit <code>(Reg, Reg)</code> (basically) with a bunch of nonzero checks of the top half and almost-never-taken branches.</p>\n<p>Given that tiny/no overhead, I would strongly prefer to not special-case the one-register case, as it adds significant complexity; IMHO we're starting to get a slight case of \"too much nested-if disease\" in some places and I'd really prefer to keep just one code path where we can :-)</p>\n<p>Anyway, lots of updates here so PTAL again if you like!</p>\n</blockquote>",
        "id": 221725111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609897404
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2538#issuecomment-755460219\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2538\">Issue #2538</a>:</p>\n<blockquote>\n<p>Just spoke with @bnjbvr and will go ahead and merge this with existing approval (thanks!).</p>\n</blockquote>",
        "id": 221799808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1609955916
    }
]