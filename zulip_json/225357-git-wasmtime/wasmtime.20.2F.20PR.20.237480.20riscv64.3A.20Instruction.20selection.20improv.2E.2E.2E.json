[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7480\">PR #7480</a> from <code>afonso360:riscv-add-sub</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR does two small instruction selection and encoding optimizations.</p>\n<h4>Use <code>addi</code> for subs</h4>\n<p>This is one of the regressions that showed up in #7468. That PR changes <code>iadd_imm(x, -k)</code> to <code>isub(x, iconst(k))</code>. We can use the same <code>iadd</code> instruction for both, but we didn't have a rule to do it.</p>\n<p>So we now try to negate an Imm12 and if we are able to do that we emit an <code>addi</code> when subtracting.</p>\n<h4>Try to swap registers when encoding compressed instructions for commutative operations</h4>\n<p>This is pretty much the same as #7471 but for all of the remaining compressed commutative instructions.<br>\n</p>\n</blockquote>",
        "id": 400287058,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699095469
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7480\">PR #7480</a>.</p>",
        "id": 400287059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699095470
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7480\">PR #7480</a>.</p>",
        "id": 400287060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699095470
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7480\">PR #7480</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR does two small instruction selection and encoding optimizations.</p>\n<h4>Use <code>addi</code> for subs</h4>\n<p>This is one of the regressions that showed up in #7468. That PR changes <code>iadd_imm(x, -k)</code> to <code>isub(x, iconst(k))</code>. We can use the same <code>iadd</code> instruction for both, but we didn't have a rule to do it.</p>\n<p>So we now try to negate an Imm12 and if we are able to do that we emit an <code>addi</code> when subtracting.</p>\n<h4>Try to swap registers when encoding compressed instructions for commutative operations</h4>\n<p>This is pretty much the same as #7471 but for all of the remaining compressed commutative instructions.</p>\n<p>It allows us to emit these instructions as compressed more often.<br>\n</p>\n</blockquote>",
        "id": 400287139,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699095526
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7480#pullrequestreview-1713822057\">PR review</a>.</p>",
        "id": 400313195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699116627
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7480\">PR #7480</a>.</p>",
        "id": 400315499,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1699118944
    }
]