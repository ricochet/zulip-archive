[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a> (assigned to bnjbvr) from <code>fix-heap-bounds-check-x64</code> to <code>main</code>:</p>\n<blockquote>\n<p>A dynamic heap address computation may create up to two conditional<br>\nbranches: the usual bounds-check, but also (in some cases) an<br>\noffset-addition overflow check.</p>\n<p>The x64 backend had reversed the condition code for this check,<br>\nresulting in an always-trapping execution for a valid offset. I'm<br>\nsomewhat surprised this has existed so long, but I suppose the<br>\nparticular conditions (large offset, small offset guard, dynamic heap)<br>\nhave been somewhat rare in our testing so far.</p>\n<p>Found via fuzzing in #2453.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 218522655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606894556
    },
    {
        "content": "<p>cfallin assigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a> to bnjbvr.</p>",
        "id": 218522656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606894556
    },
    {
        "content": "<p>cfallin assigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a> to bnjbvr.</p>",
        "id": 218522657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606894556
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a>.</p>",
        "id": 218524655,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606896421
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a>.</p>",
        "id": 218524656,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606896421
    },
    {
        "content": "<p>cfallin unassigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a> to bnjbvr.</p>",
        "id": 218524662,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606896426
    },
    {
        "content": "<p>cfallin unassigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a>.</p>",
        "id": 218524663,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606896426
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#pullrequestreview-542930706\">PR Review</a>.</p>",
        "id": 218572800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606923156
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#pullrequestreview-542930706\">PR Review</a>.</p>",
        "id": 218572801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606923156
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#discussion_r534240671\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think the initial comment was correct since the intent of this function is to return the condition code used when there <em>is</em> an unsigned overflow, but what the function returned was not correct (my bad!).</p>\n<p>Confirming the reasoning:</p>\n<ul>\n<li>we codegen <code>if !unsigned_add_overflow_condition { jmp after trap }; trap</code>]</li>\n<li>unsigned add overflow means the carry flag is set to 1, so CF = 1</li>\n<li>hence we want to codegen a jump when CF is 0, so <code>JNB</code>, NB is not-below</li>\n<li>so the condition to return in this function is the inverse of NB, that is B \"below\", i.e. \"unsigned less\" in x86-speak \\o/</li>\n</ul>\n</blockquote>",
        "id": 218572802,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606923156
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#discussion_r534259619\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ditto re: comment was correct here too.</p>\n</blockquote>",
        "id": 218572803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606923156
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a> from <code>fix-heap-bounds-check-x64</code> to <code>main</code>:</p>\n<blockquote>\n<p>A dynamic heap address computation may create up to two conditional<br>\nbranches: the usual bounds-check, but also (in some cases) an<br>\noffset-addition overflow check.</p>\n<p>The x64 backend had reversed the condition code for this check,<br>\nresulting in an always-trapping execution for a valid offset. I'm<br>\nsomewhat surprised this has existed so long, but I suppose the<br>\nparticular conditions (large offset, small offset guard, dynamic heap)<br>\nhave been somewhat rare in our testing so far.</p>\n<p>Found via fuzzing in #2453.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 218592290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606930836
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#pullrequestreview-543085328\">PR Review</a>.</p>",
        "id": 218592599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606930969
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#discussion_r534359469\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It took me far too long staring at this (very thorough, thank you!) sequence of steps to internalize it; yes, you're right, and the key bit is that overflow -&gt; carry set -&gt; B / ult. Thanks, updated comment!</p>\n</blockquote>",
        "id": 218592600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606930969
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#pullrequestreview-543085440\">PR Review</a>.</p>",
        "id": 218592615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606930976
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463#discussion_r534359552\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Updated!</p>\n</blockquote>",
        "id": 218592616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606930977
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a> from <code>fix-heap-bounds-check-x64</code> to <code>main</code>:</p>\n<blockquote>\n<p>A dynamic heap address computation may create up to two conditional<br>\nbranches: the usual bounds-check, but also (in some cases) an<br>\noffset-addition overflow check.</p>\n<p>The x64 backend had reversed the condition code for this check,<br>\nresulting in an always-trapping execution for a valid offset. I'm<br>\nsomewhat surprised this has existed so long, but I suppose the<br>\nparticular conditions (large offset, small offset guard, dynamic heap)<br>\nhave been somewhat rare in our testing so far.</p>\n<p>Found via fuzzing in #2453.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 218600700,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606934463
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2463\">PR #2463</a>.</p>",
        "id": 218606281,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1606937096
    }
]