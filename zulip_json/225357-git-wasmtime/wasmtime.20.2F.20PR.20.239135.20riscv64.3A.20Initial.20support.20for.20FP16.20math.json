[
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>.</p>",
        "id": 462772394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723809754
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a> from <code>afonso360:riscv-zfh</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>This PR adds initial support for FP16 data types in the RISC-V backend. Most of the groundwork was done in #9084 and #9079 which allows us to support a lot of instructions without doing any work.</p>\n<p>This PR only really adds encodings for <code>flh</code>/<code>fsh</code> (Load and Store instructions), otherwise all normal floating point instructions support this new format using the existing width field present in all of them.</p>\n<p>I think we're only missing <code>fpromote</code>/<code>fdemote</code> and conversions instructions for complete support. This PR also does not add SIMD F16 support, which is supported but under a different ISA flag.</p>\n<p>cc: @beetrees since you've also been working on FP16 support in some other backends.</p>\n</blockquote>",
        "id": 462772395,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723809754
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>.</p>",
        "id": 462772396,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723809754
    },
    {
        "content": "<p><strong>afonso360</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>.</p>",
        "id": 462772398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723809755
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>.</p>",
        "id": 462773297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723810110
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#issuecomment-2293540379\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:area:riscv64\", \"cranelift:meta\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 462790835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723815871
    },
    {
        "content": "<p>beetrees submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#pullrequestreview-2242999796\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for working on this.</p>\n</blockquote>",
        "id": 462823717,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723826673
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720070710\">PR review comment</a>:</p>\n<blockquote>\n<p>Same as with <code>fli_constant_from_u64</code>.</p>\n</blockquote>",
        "id": 462823718,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723826673
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720013596\">PR review comment</a>:</p>\n<blockquote>\n<div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>    \"qemu\": \"qemu-riscv64 -cpu rv64,v=true,vlen=256,vext_spec=v1.0,zfa=true,zfh=true,zba=true,zbb=true,zbc=true,zbs=true,zbkb=true,zcb=true,x-zicond=true -L /usr/riscv64-linux-gnu\",\n</code></pre></div>\n<p>QEMU has <a href=\"https://www.qemu.org/docs/master/about/deprecated.html#risc-v-cpu-properties-which-start-with-capital-z-since-8-2\">deprecated</a> using capital 'Z' at the start of RISC-V CPU properties.</p>\n</blockquote>",
        "id": 462823719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723826673
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720069689\">PR review comment</a>:</p>\n<blockquote>\n<p><code>fli_constant_from_u64</code> will currently panic for <code>F16</code> as support hasn't been implemented in <code>FliConstant::maybe_from_u64</code>.</p>\n</blockquote>",
        "id": 462823720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723826673
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720047003\">PR review comment</a>:</p>\n<blockquote>\n<p>I think <code>vfmv.f.s</code> and <code>vfmv.s.f</code> for 16-bit floats requires the <code>zvfh</code> extension. The specification isn't 100% clear about this, but it's what QEMU requires for it and makes sense extrapolating from the <code>zve*</code> extensions.</p>\n<p>(As a side note that doesn't need to be fixed in this PR, similar issues exist for the other vector bitcasts, as support for the <code>zve*</code>/<code>v</code> extensions that define what EEWs are supported is never checked, just that the minimum vector register size is large enough to hold the type.)</p>\n</blockquote>",
        "id": 462823721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723826673
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#pullrequestreview-2243144252\">PR review</a>.</p>",
        "id": 462826929,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723827984
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720100105\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, we currently have 8.1.5 in CI and it doesn't recognize these lower case property names. </p>\n</blockquote>",
        "id": 462826931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723827984
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#pullrequestreview-2243154121\">PR review</a>.</p>",
        "id": 462827759,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723828366
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720106081\">PR review comment</a>:</p>\n<blockquote>\n<p>Right, I was hoping to avoid dealing with that in this initial version, so I'm going to restrict <code>fli</code> to 32/64 bits and come back to it in a future PR.</p>\n</blockquote>",
        "id": 462827760,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723828366
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#pullrequestreview-2243161297\">PR review</a>.</p>",
        "id": 462828309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723828630
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720110328\">PR review comment</a>:</p>\n<blockquote>\n<p>I found some discussion about this in <a href=\"https://github.com/riscv/riscv-v-spec/issues/429\">https://github.com/riscv/riscv-v-spec/issues/429</a> which <br>\nadded the following note to the spec:</p>\n<blockquote>\n<p>... Vector instructions where any floating-point vector operandâ€™s EEW is not a supported floating-point type width (which includes when FLEN &lt; SEW) are reserved.</p>\n</blockquote>\n<p>So we should probably also check the scalar flags for vectors.</p>\n<blockquote>\n<p>(As a side note that doesn't need to be fixed in this PR, similar issues exist for the other vector bitcasts, as support for the zve*/v extensions that define what EEWs are supported is never checked, just that the minimum vector register size is large enough to hold the type.)</p>\n</blockquote>\n<p>Yeah, I don't think we currently do any EEW checks, but with <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9079\">https://github.com/bytecodealliance/wasmtime/pull/9079</a> it should hopefully be easier now.</p>\n</blockquote>",
        "id": 462828310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723828630
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720110328\">PR review comment</a>.</p>",
        "id": 462828326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723828640
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720110328\">PR review comment</a>.</p>",
        "id": 462828388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723828668
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>.</p>",
        "id": 462831022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723829997
    },
    {
        "content": "<p>beetrees submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#pullrequestreview-2243342998\">PR review</a>.</p>",
        "id": 462838131,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723833334
    },
    {
        "content": "<p>beetrees created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720189912\">PR review comment</a>:</p>\n<blockquote>\n<p>This doesn't need to be done in this PR (and the change here is an improvement over the status quo) but vector support for <code>f32</code> and <code>f64</code> requires the <code>zve32f</code> and <code>zve64d</code> extensions respectively (these extensions then in turn depend on the scalar <code>F</code> and <code>D</code> extensions, and are depended on by the <code>V</code> extension), not just the scalar type being supported.</p>\n</blockquote>",
        "id": 462838132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723833334
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>.</p>",
        "id": 463127400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723970577
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720926380\">PR review comment</a>:</p>\n<blockquote>\n<p>Right, we don't have great support for all of the embedded extensions, I've been mostly thinking of this backend in requiring at least the V extension. Though it shouldn't be hard to add checks for those</p>\n</blockquote>",
        "id": 463127540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723970654
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#pullrequestreview-2244256667\">PR review</a>.</p>",
        "id": 463127541,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723970654
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#discussion_r1720926380\">PR review comment</a>.</p>",
        "id": 463127592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1723970690
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135#pullrequestreview-2245759254\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this!</p>\n</blockquote>",
        "id": 463424711,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724078877
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9135\">PR #9135</a>.</p>",
        "id": 463429631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1724079795
    }
]