[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252\">PR #5252</a> from <code>optimize-comparisons-with-immediates-on-aarch64</code> to <code>main</code>:</p>\n<blockquote>\n<p>We can encode more constants into 12-bit immediates if we do the following rewrite for comparisons with odd constants:</p>\n<div class=\"codehilite\"><pre><span></span><code>    A &gt;= B + 1\n==&gt; A - 1 &gt;= B\n==&gt; A &gt; B\n</code></pre></div>\n\n<p>(And similar for less-than-or-equals.)</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 309105317,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668124717
    },
    {
        "content": "<p><strong>fitzgen</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252\">PR #5252</a>.</p>",
        "id": 309105319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668124717
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1019715483\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not sure why these changed here, but also I think it is benign since <code>movz</code> is zero-extending the value?</p>\n</blockquote>",
        "id": 309105433,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668124784
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1176639034\">PR review</a>.</p>",
        "id": 309105434,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668124784
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1176666119\">PR review</a>.</p>",
        "id": 309110455,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668127612
    },
    {
        "content": "<p>fitzgen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252\">PR #5252</a> from <code>optimize-comparisons-with-immediates-on-aarch64</code> to <code>main</code>.</p>",
        "id": 310240441,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668530188
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1181270600\">PR review</a>.</p>",
        "id": 310249009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532631
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1023064942\">PR review comment</a>:</p>\n<blockquote>\n<p>Why is <code>make_imm12_from_u64</code> separate from <code>imm12_from_u64</code>? They look identical to me.</p>\n</blockquote>",
        "id": 310249010,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532631
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1023065830\">PR review comment</a>:</p>\n<blockquote>\n<p>One is a pure constructor and the other is a fallible extractor. They are identical but can't replace one another in ISLE's type system.</p>\n</blockquote>",
        "id": 310249221,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532685
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1181272723\">PR review</a>.</p>",
        "id": 310249223,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532685
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252\">PR #5252</a>.</p>",
        "id": 310249372,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532737
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1023067818\">PR review comment</a>:</p>\n<blockquote>\n<p>Couldn't it be an infallible extractor? Then there'd be no <code>Option</code> in the return type, and the same rust function could be reused for the extractor and constructor in isle.</p>\n</blockquote>",
        "id": 310249504,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532774
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1181274922\">PR review</a>.</p>",
        "id": 310249505,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532774
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1023068465\">PR review comment</a>:</p>\n<blockquote>\n<p>Scratch that -- I just realized that we're relying on the failure behavior in the extractor case :)</p>\n</blockquote>",
        "id": 310249658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532813
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1181275805\">PR review</a>.</p>",
        "id": 310249659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532814
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1181277069\">PR review</a>.</p>",
        "id": 310249825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532867
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1023069341\">PR review comment</a>:</p>\n<blockquote>\n<p>It can't be infallible because not all <code>u64</code>s can be represented with <code>Imm12</code>s</p>\n</blockquote>",
        "id": 310249826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532867
    },
    {
        "content": "<p>fitzgen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1023069341\">PR review comment</a>.</p>",
        "id": 310249975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668532917
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#pullrequestreview-1181289004\">PR review</a>.</p>",
        "id": 310251529,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668533362
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5252#discussion_r1023077685\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I see. But then you could have used the extractor instead of a constructor, right?</p>\n<p><div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">if-let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">imm12_from_u64</span><span class=\"w\"> </span><span class=\"nv\">imm</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">u64_sub</span><span class=\"w\"> </span><span class=\"nv\">b</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 310251530,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1668533363
    }
]