[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457\">PR #9457</a> from <code>alexcrichton:update-differential-fuzzer</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit updates the processing of the <code>ALLOWED_*</code> environment variables to work differently than before. Previously the list of engines and module-generation-strategies were filtered based on <code>ALLOWED_*</code> environment variables but this meant that the meaning of a fuzz input changed depending on environment variables. This commit instead replaces the handling of these environment variables to ensure that the meaning of the fuzz input doesn't change depending on their values. Instead fuzz test cases are early-thrown-out if they request an engine that's disabled or a module-generation-strategy that's disabled.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 476418527,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728662815
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457\">PR #9457</a>.</p>",
        "id": 476418544,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728662821
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457\">PR #9457</a>.</p>",
        "id": 476418545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728662821
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#issuecomment-2407954190\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457\">PR #9457</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 476441871,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672411
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#pullrequestreview-2363400007\">PR review</a>.</p>",
        "id": 476442616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672772
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797320214\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            log::debug!(\"test case uses a runtime-disabled engine\");\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 476442617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672772
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#pullrequestreview-2363397178\">PR review</a>:</p>\n<blockquote>\n<p>Looks good, just curious about how we ensure that the fuzzer is staying productive.</p>\n</blockquote>",
        "id": 476442621,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672776
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797318519\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            log::debug!(\"test case uses a runtime-disabled engine\");\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 476442622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672776
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797319883\">PR review comment</a>:</p>\n<blockquote>\n<p>Do we have a way to categorize the early return cases, or can we find out if the fuzzer is spending all its time in unproductive configurations?</p>\n</blockquote>",
        "id": 476442624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672776
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#pullrequestreview-2363405120\">PR review</a>.</p>",
        "id": 476443059,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672982
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797323355\">PR review comment</a>:</p>\n<blockquote>\n<p>In the <a href=\"http://regalloc.rs\">regalloc.rs</a> fuzzer we used atomics to count stats (iirc similar thing, rejected cases) and the fuzz case that got a value 0 mod 1000 from the fetch-and-add printed a progress message with all stats -- this at least gave us a general sense watching interactively. I don't think there's a way to get such output from oss-fuzz though. IIRC there is a way to return a status to libFuzzer that tells it specifically the case is uninteresting?</p>\n</blockquote>",
        "id": 476443060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728672982
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#pullrequestreview-2363412889\">PR review</a>.</p>",
        "id": 476443804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728673322
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797328084\">PR review comment</a>:</p>\n<blockquote>\n<p>It might not be clear in this diff but <code>RuntimeStats</code> is what does that here.</p>\n</blockquote>",
        "id": 476443808,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728673322
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#pullrequestreview-2363444843\">PR review</a>.</p>",
        "id": 476446447,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728674746
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797347637\">PR review comment</a>:</p>\n<blockquote>\n<p>Can confirm what @abrown mentioned should work and it's the same idea as regalloc's fuzzers @cfallin mentions. </p>\n<p>AFAIK though there's no way to tell libFuzzer something is uninteresting, but by not doing anything you're also saying \"this introduces no new coverage\" which means it should naturally get pruned and deduplicated from the corpus over time.</p>\n</blockquote>",
        "id": 476446449,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728674747
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457\">PR #9457</a>.</p>",
        "id": 476446464,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728674755
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457\">PR #9457</a>.</p>",
        "id": 476446481,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728674762
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457\">PR #9457</a>.</p>",
        "id": 476449803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728676292
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#pullrequestreview-2363644081\">PR review</a>.</p>",
        "id": 476468198,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728686058
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797474140\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>AFAIK though there's no way to tell libFuzzer something is uninteresting, but by not doing anything you're also saying \"this introduces no new coverage\" which means it should naturally get pruned and deduplicated from the corpus over time.</p>\n</blockquote>\n<p>There actually is: if you return this <a href=\"https://docs.rs/libfuzzer-sys/latest/libfuzzer_sys/enum.Corpus.html#variant.Reject\">https://docs.rs/libfuzzer-sys/latest/libfuzzer_sys/enum.Corpus.html#variant.Reject</a> from a fuzz target, then it tells libfuzzer not to add that testcase into the corpus or reuse it for future mutations or whatever.</p>\n</blockquote>",
        "id": 476468199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728686058
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#pullrequestreview-2363648375\">PR review</a>.</p>",
        "id": 476468735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728686479
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9457#discussion_r1797476867\">PR review comment</a>:</p>\n<blockquote>\n<p>Whoa fancy!</p>\n</blockquote>",
        "id": 476468737,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1728686479
    }
]