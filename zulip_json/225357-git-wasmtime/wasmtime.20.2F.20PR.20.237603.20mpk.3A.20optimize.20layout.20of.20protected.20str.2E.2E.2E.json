[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603\">PR #7603</a> from <code>abrown:pku-optimize</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>While experimenting with the limits of MPK-protected memory pools, @alexcrichton and I discovered that the current slab layout calculations were too conservative. This meant that the memory pool could not pack in as many memories as it should have been able: we were expecting, but not seeing, ~15x more memory slots over non-MPK memory pools.</p>\n<p>The fix ends up being simpler than the original: we must maintain the codegen constraints that expect a static memory to be inaccessible for OOB access within a <code>static_memory_maximum_size +\nstatic_memory_guard_size</code> region (called <code>expected_slot_bytes + guard_bytes</code> in <code>memory_pool.rs</code>). By dividing up that region between the stripes, we still guarantee that the region is inaccessible by packing in other MPK-protected stripes. And we still need to make sure that the <code>post_slab_guard_bytes</code> add up to that region. These changes fix the memory inefficiency issues we were seeing.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 404930204,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701283738
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603\">PR #7603</a>.</p>",
        "id": 404935254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701285890
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603\">PR #7603</a> as ready for review.</p>",
        "id": 404935300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701285917
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603\">PR #7603</a>.</p>",
        "id": 404935303,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701285918
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603\">PR #7603</a>.</p>",
        "id": 404935304,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701285918
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603#issuecomment-1832569372\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603\">PR #7603</a>:</p>\n<blockquote>\n<p>Looks good to me!</p>\n<p>I'd be happy to approve and land this as-is, but we talked about some other somewhat-unrelated things to this PR which I think you're going to include here as well.</p>\n<p>I'll also note that I have one point of note which I'll emphasize shouldn't be addressed in this PR because I think it's not worth it. That being said I think that this strategy is a tiny bit wasteful in terms of pages because the slot size is unlikely to be a multiple of the number of stripes meaning something will be rounded up to a page boundary. For example with a 4G memory, a 2G guard, and a 512M max memory size that'll support up to 12 stripes (6G/512M == 12). If however only 11 stripes were available then what should in theory happen is that one 6G slot would have 11 memories of max size 512M packed together with some leftover guard space at the end. That would mean 11 memories would be packed into a 6G region.</p>\n<p>With this PR, however, what would happen is that the 6G region would be divided into 11 chunks of size 0x22e8ba2e. That'd then be rounded up to 0x22e8c000 for a single slot, which if that's multiplied back by 11 yields 0x180004000 bytes. This means that with \"ideal logic\" a 6G region could hold 11 memories but this calculation instead requires a 6G+16K region to hold the 11 memories.</p>\n<p>This is a very minor loss, however (6G vs four pages) however and accounting for some guard regions interspersed with all the slots would require deeper refactoring. That's why I want to note this, but I don't think it's worth changing.</p>\n</blockquote>",
        "id": 404935790,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701286119
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603#pullrequestreview-1756056512\">PR review</a>.</p>",
        "id": 404935916,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701286168
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7603\">PR #7603</a>.</p>",
        "id": 404948747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701291518
    }
]