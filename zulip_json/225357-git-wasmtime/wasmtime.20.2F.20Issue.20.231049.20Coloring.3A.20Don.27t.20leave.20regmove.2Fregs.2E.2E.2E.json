[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1049#issuecomment-772664655\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1049\">Issue #1049</a>:</p>\n<blockquote>\n<p>These don't exist for the new backend framework anymore.</p>\n</blockquote>",
        "id": 225045540,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612371716
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1049#issuecomment-772683952\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1049\">Issue #1049</a>:</p>\n<blockquote>\n<p>Addressed with <a href=\"http://regalloc.rs\">regalloc.rs</a> in new backends.</p>\n</blockquote>",
        "id": 225049784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612373303
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1049\">Issue #1049</a>:</p>\n<blockquote>\n<p>The regmove/regspill/regfill instructions are special. They're emitted by the coloring pass to temporarily override the assigned registers (<code>func.locations</code>) for values. This is surprising, and it means that very late passes which run after register allocation can't just look at <code>func.locations</code> and have to use <code>RegDiversions</code> and walk the IR in order to know what registers are assigned to what values.</p>\n<p>They also currently require special casing to work around <a href=\"https://github.com/CraneStation/cranelift/issues/420\">this issue</a>.</p>\n<p>It would be nice to find a way to either avoid using regfill/regspill/regfill, or to rewrite them once coloring is done, so that <code>func.locations</code> is left up to date.</p>\n</blockquote>",
        "id": 225049786,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612373303
    }
]