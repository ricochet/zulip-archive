[
    {
        "content": "<p>hjfreyer opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627\">Issue #2627</a>:</p>\n<blockquote>\n<p>This may well just be me holding the crate wrong, but my application keeps using more and more memory every time I create and execute an instance.</p>\n<p>I have a <code>wasm32-wasi</code> Rust binary that I want to run in a wasmtime sandbox. The binary's <code>main()</code> reads some data from <code>stdin</code>, writes it to <code>stdout</code>, and exits. I want each execution of the binary to be in its own independent sandbox, and I want to minimize latency. As such, I keep an <code>Engine</code> and a <code>Module</code> around between executions but drop the <code>Instance</code>, <code>Store</code>, etc. Or at least, I drop the Rust _values_, but it seems that the memory doesn't actually get freed.</p>\n<p>Here's my code: <a href=\"https://github.com/hjfreyer/pictophone-be/blob/09bbe890c5fa8387d3e590209d7231ce48b130e4/server/src/runner.rs#L34\">https://github.com/hjfreyer/pictophone-be/blob/09bbe890c5fa8387d3e590209d7231ce48b130e4/server/src/runner.rs#L34</a></p>\n<p>Is this a bug? Am I doing it wrong? I'm using version <code>0.22.0</code> of the <code>wasmtime</code>, <code>wasmtime-wasi</code>, and <code>wasi-common</code> crates.</p>\n</blockquote>",
        "id": 224732714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612189665
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627#issuecomment-770925266\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627\">Issue #2627</a>:</p>\n<blockquote>\n<p>Thanks for the report! What you're doing looks correct, but I believe that this is a bug in Wasmtime. I believe <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2017\">https://github.com/bytecodealliance/wasmtime/pull/2017</a> addresses the problem, so I'll take another look at landing that.</p>\n</blockquote>",
        "id": 224738756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612192111
    },
    {
        "content": "<p>hjfreyer <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627#issuecomment-771638437\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627\">Issue #2627</a>:</p>\n<blockquote>\n<p>Confirmed that that fixed it! Yay!</p>\n<p>How can I track when the change lands and I can get off of <code>main</code>?</p>\n</blockquote>",
        "id": 224871109,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612272927
    },
    {
        "content": "<p>hjfreyer edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627#issuecomment-771638437\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627\">Issue #2627</a>:</p>\n<blockquote>\n<p>Confirmed that that fixed it! Yay! Thank you!</p>\n<p>How can I track when the change lands and I can get off of <code>main</code>?</p>\n</blockquote>",
        "id": 224871145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612272945
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627#issuecomment-771708259\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627\">Issue #2627</a>:</p>\n<blockquote>\n<p>Ok thanks for confirming! I'd recommend following the releases of this repository, so you'll get a notification when we publish the next release.</p>\n</blockquote>",
        "id": 224885027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612279102
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/2627\">Issue #2627</a>:</p>\n<blockquote>\n<p>This may well just be me holding the crate wrong, but my application keeps using more and more memory every time I create and execute an instance.</p>\n<p>I have a <code>wasm32-wasi</code> Rust binary that I want to run in a wasmtime sandbox. The binary's <code>main()</code> reads some data from <code>stdin</code>, writes it to <code>stdout</code>, and exits. I want each execution of the binary to be in its own independent sandbox, and I want to minimize latency. As such, I keep an <code>Engine</code> and a <code>Module</code> around between executions but drop the <code>Instance</code>, <code>Store</code>, etc. Or at least, I drop the Rust _values_, but it seems that the memory doesn't actually get freed.</p>\n<p>Here's my code: <a href=\"https://github.com/hjfreyer/pictophone-be/blob/09bbe890c5fa8387d3e590209d7231ce48b130e4/server/src/runner.rs#L34\">https://github.com/hjfreyer/pictophone-be/blob/09bbe890c5fa8387d3e590209d7231ce48b130e4/server/src/runner.rs#L34</a></p>\n<p>Is this a bug? Am I doing it wrong? I'm using version <code>0.22.0</code> of the <code>wasmtime</code>, <code>wasmtime-wasi</code>, and <code>wasi-common</code> crates.</p>\n</blockquote>",
        "id": 224885029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1612279102
    }
]