[
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8075\">Issue #8075</a>.</p>",
        "id": 425708566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710008475
    },
    {
        "content": "<p><a href=\"https://github.com/bjorn3\">bjorn3</a> added the cranelift label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8075\">Issue #8075</a>.</p>",
        "id": 425708567,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710008475
    },
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8075\">issue #8075</a>:</p>\n<blockquote>\n<p>Thanks for filing an issue! Please fill out the TODOs below.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">0</span><span class=\"p\">(</span><span class=\"n\">f32x2</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">f32x2</span><span class=\"w\"> </span><span class=\"n\">system_v</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">ss0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">ss1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">explicit_slot</span><span class=\"w\"> </span><span class=\"mi\">16</span>\n<span class=\"w\">    </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">f32</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">f32</span> <span class=\"nc\">system_v</span>\n<span class=\"w\">    </span><span class=\"n\">fn0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">u0</span>:<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">sig0</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"s\">\"cosf\"</span>\n\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"nc\">f32x2</span><span class=\"p\">)</span>:\n    <span class=\"nc\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">_0</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">simd_fcos</span>::<span class=\"o\">&lt;</span><span class=\"n\">f32x2</span><span class=\"o\">&gt;</span><span class=\"p\">(</span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"n\">_1</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_load</span><span class=\"p\">.</span><span class=\"kt\">f32</span><span class=\"w\"> </span><span class=\"n\">ss1</span>\n<span class=\"w\">    </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">lib_call</span><span class=\"w\"> </span><span class=\"n\">cosf</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"n\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_load</span><span class=\"p\">.</span><span class=\"kt\">f32</span><span class=\"w\"> </span><span class=\"n\">ss1</span><span class=\"o\">+</span><span class=\"mi\">4</span>\n<span class=\"w\">    </span><span class=\"n\">v4</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">call</span><span class=\"w\"> </span><span class=\"n\">fn0</span><span class=\"p\">(</span><span class=\"n\">v3</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">lib_call</span><span class=\"w\"> </span><span class=\"n\">cosf</span>\n<span class=\"w\">    </span><span class=\"n\">stack_store</span><span class=\"w\"> </span><span class=\"n\">v4</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">ss0</span><span class=\"o\">+</span><span class=\"mi\">4</span>\n\n<span class=\"w\">    </span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stack_load</span><span class=\"p\">.</span><span class=\"n\">f32x2</span><span class=\"w\"> </span><span class=\"n\">ss0</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v5</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>Compile on x86_64</li>\n</ul>\n<h3>Expected Results</h3>\n<p>Compiles</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'&lt;</span><span class=\"n\">unnamed</span><span class=\"o\">&gt;'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">bjorn</span><span class=\"o\">/</span><span class=\"p\">.</span><span class=\"n\">cargo</span><span class=\"o\">/</span><span class=\"n\">registry</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">index</span><span class=\"p\">.</span><span class=\"n\">crates</span><span class=\"p\">.</span><span class=\"n\">io</span><span class=\"o\">-</span><span class=\"mi\">6</span><span class=\"n\">f17d22bba15001f</span><span class=\"o\">/</span><span class=\"n\">cranelift</span><span class=\"o\">-</span><span class=\"n\">codegen</span><span class=\"o\">-</span><span class=\"mf\">0.105.2</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">machinst</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">766</span>:<span class=\"mi\">21</span>:\n<span class=\"nc\">should</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">implemented</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">ISLE</span>: <span class=\"nc\">inst</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">v5</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">load</span><span class=\"p\">.</span><span class=\"n\">f32x2</span><span class=\"w\"> </span><span class=\"n\">notrap</span><span class=\"w\"> </span><span class=\"n\">v11</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"o\">=</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"nb\">Some</span><span class=\"p\">(</span><span class=\"n\">types</span>::<span class=\"n\">F32X2</span><span class=\"p\">)</span><span class=\"err\">`</span>\n<span class=\"n\">stack</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n   <span class=\"mi\">0</span>: <span class=\"nc\">rust_begin_unwind</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mi\">46</span><span class=\"n\">b180ec2452d388c5d9c14009442e2e0beb01d7</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">std</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">645</span>:<span class=\"mi\">5</span>\n<span class=\"w\">   </span><span class=\"mi\">1</span>: <span class=\"nc\">core</span>::<span class=\"n\">panicking</span>::<span class=\"n\">panic_fmt</span>\n<span class=\"w\">             </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">rustc</span><span class=\"o\">/</span><span class=\"mi\">46</span><span class=\"n\">b180ec2452d388c5d9c14009442e2e0beb01d7</span><span class=\"o\">/</span><span class=\"n\">library</span><span class=\"o\">/</span><span class=\"n\">core</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">panicking</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">72</span>:<span class=\"mi\">14</span>\n<span class=\"w\">   </span><span class=\"mi\">2</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">machinst</span>::<span class=\"n\">compile</span>::<span class=\"n\">compile</span>\n<span class=\"w\">   </span><span class=\"mi\">3</span>: <span class=\"o\">&lt;</span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">x64</span>::<span class=\"n\">X64Backend</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">cranelift_codegen</span>::<span class=\"n\">isa</span>::<span class=\"n\">TargetIsa</span><span class=\"o\">&gt;</span>::<span class=\"n\">compile_function</span>\n<span class=\"w\">   </span><span class=\"mi\">4</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">context</span>::<span class=\"n\">Context</span>::<span class=\"n\">compile_stencil</span>\n<span class=\"w\">   </span><span class=\"mi\">5</span>: <span class=\"nc\">cranelift_codegen</span>::<span class=\"n\">context</span>::<span class=\"n\">Context</span>::<span class=\"n\">compile_and_emit</span>\n<span class=\"w\">   </span><span class=\"mi\">6</span>: <span class=\"o\">&lt;</span><span class=\"n\">cranelift_object</span>::<span class=\"n\">backend</span>::<span class=\"n\">ObjectModule</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">cranelift_module</span>::<span class=\"n\">module</span>::<span class=\"n\">Module</span><span class=\"o\">&gt;</span>::<span class=\"n\">define_function_with_control_plane</span>\n<span class=\"w\">   </span><span class=\"mi\">7</span>: <span class=\"nc\">cranelift_module</span>::<span class=\"n\">module</span>::<span class=\"n\">Module</span>::<span class=\"n\">define_function</span>\n<span class=\"w\">   </span><span class=\"mi\">8</span>: <span class=\"nc\">rustc_codegen_cranelift</span>::<span class=\"n\">base</span>::<span class=\"n\">compile_fn</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: Cranelift 1.105.2</p>\n<p>Operating system: N/A</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 425708568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710008476
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8075#issuecomment-1986940663\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8075\">issue #8075</a>:</p>\n<blockquote>\n<p>I haven't checked if <code>store.f32x2</code> works. <code>load.f32x2</code> does work on AArch64.</p>\n</blockquote>",
        "id": 425708658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710008551
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8075#issuecomment-1987031256\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8075\">issue #8075</a>:</p>\n<blockquote>\n<p>Thanks for reporting! I suspect you'll find a bunch more holes with \"narrow SIMD\" (64-bit vectors) on x86 -- this mostly exists only on aarch64 for now. As with other missing implementations, we'd be happy to take a PR from anyone and this could make a decent starter issue.</p>\n</blockquote>",
        "id": 425732561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710033148
    }
]