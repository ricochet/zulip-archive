[
    {
        "content": "<p>bjorn3 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3583\">issue #3583</a>:</p>\n<blockquote>\n<p><code>cranelift_frontend::FunctionBuilder::emit_small_memory_copy</code>(<a href=\"https://docs.rs/cranelift-frontend/0.78.0/cranelift_frontend/struct.FunctionBuilder.html#method.emit_small_memory_copy\">documentation</a>) takes the arguments <code>dest_align</code> and <code>src_align</code>, which it uses only for an assertion and then ignores. It chooses an access size which may be larger than the alignment and calls <code>flags.set_aligned();</code> and proceeds to doing unaligned memory access. This seems to be a mistake.</p>\n<p>Reported by Veverak at <a href=\"#narrow/stream/217117-cranelift/topic/emit_small_memory_copy.20ignores.20alignment/near/263576215\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/emit_small_memory_copy.20ignores.20alignment/near/263576215</a></p>\n</blockquote>",
        "id": 263582301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638539645
    },
    {
        "content": "<p>bjorn3 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3583\">issue #3583</a>:</p>\n<blockquote>\n<p><code>cranelift_frontend::FunctionBuilder::emit_small_memory_copy</code>(<a href=\"https://docs.rs/cranelift-frontend/0.78.0/cranelift_frontend/struct.FunctionBuilder.html#method.emit_small_memory_copy\">documentation</a>) takes the arguments <code>dest_align</code> and <code>src_align</code>, which it uses only for an assertion and then ignores. It chooses an access size which may be larger than the alignment and calls <code>flags.set_aligned();</code> and proceeds to doing unaligned memory access. This seems to be a mistake.</p>\n<p>Reported by Veverak at <a href=\"#narrow/stream/217117-cranelift/topic/emit_small_memory_copy.20ignores.20alignment/near/263576215\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/emit_small_memory_copy.20ignores.20alignment/near/263576215</a></p>\n</blockquote>",
        "id": 263582302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638539645
    },
    {
        "content": "<p>bjorn3 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3583\">issue #3583</a>:</p>\n<blockquote>\n<p><code>cranelift_frontend::FunctionBuilder::emit_small_memory_copy</code>(<a href=\"https://docs.rs/cranelift-frontend/0.78.0/cranelift_frontend/struct.FunctionBuilder.html#method.emit_small_memory_copy\">documentation</a>) takes the arguments <code>dest_align</code> and <code>src_align</code>, which it uses only for an assertion and then ignores. It chooses an access size which may be larger than the alignment and calls <code>flags.set_aligned();</code> and proceeds to doing unaligned memory access. This seems to be a mistake.</p>\n<p>Reported by Veverak at <a href=\"#narrow/stream/217117-cranelift/topic/emit_small_memory_copy.20ignores.20alignment/near/263576215\">https://bytecodealliance.zulipchat.com/#narrow/stream/217117-cranelift/topic/emit_small_memory_copy.20ignores.20alignment/near/263576215</a></p>\n</blockquote>",
        "id": 263582306,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638539645
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3583#issuecomment-985741431\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3583\">issue #3583</a>:</p>\n<blockquote>\n<p>Hmm, yes, this seems to be the case. Fortunately codegen doesn't actually do anything with the alignment flag on x86-64 or aarch64; both architectures support misaligned accesses natively for the integer types that this small-memcpy will use; but for fully correct IR we should fix this.</p>\n</blockquote>",
        "id": 263620250,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638556541
    }
]