[
    {
        "content": "<p>marmistrz <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594543527\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594543527\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226\">Issue #1226</a>:</p>\n<blockquote>\n<p>We move to <code>std::io::Error</code> so as to keep the number of error types as small as possible?</p>\n</blockquote>",
        "id": 189693274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583330858
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594544433\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594544433\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226\">Issue #1226</a>:</p>\n<blockquote>\n<blockquote>\n<p>We move to <code>std::io::Error</code> so as to keep the number of error types as small as possible?</p>\n</blockquote>\n<p>Correct. Dan and I agreed to decouple concept of WASI errno (it's ABI representation in fact) from the functional code in <code>wasi-common</code>, and this cleanup is the first step. This will make transition to <code>wiggle</code> much easier in the coming days.</p>\n</blockquote>",
        "id": 189693450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583330956
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594753021\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594753021\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226\">Issue #1226</a>:</p>\n<blockquote>\n<blockquote>\n<p>This generally seems fine to me, I started to try to take a look at what was specifically going on but I'm pretty lost in how all these errors are handled.</p>\n<p>In general there's a lot of rightward-drift and a lot of tests. I feel like a lot of this code could greatly benefit from not using methods-with-closures and instead have match statements with early-returns. That's sort of out of scope for this PR it looks like though.</p>\n</blockquote>\n<p>That's fair! I agree with you that this PR isn't about this refactoring per se, but given that the proposed changes are not in that many places, I can easily refactor them here and now.</p>\n</blockquote>",
        "id": 189723075,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583348323
    },
    {
        "content": "<p>kubkon <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594830028\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226#issuecomment-594830028\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1226\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1226\">Issue #1226</a>:</p>\n<blockquote>\n<blockquote>\n<p>This generally seems fine to me, I started to try to take a look at what was specifically going on but I'm pretty lost in how all these errors are handled.</p>\n<p>In general there's a lot of rightward-drift and a lot of tests. I feel like a lot of this code could greatly benefit from not using methods-with-closures and instead have match statements with early-returns. That's sort of out of scope for this PR it looks like though.</p>\n</blockquote>\n<p>@alexcrichton done in 686fd9d.</p>\n</blockquote>",
        "id": 189733439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583354998
    }
]