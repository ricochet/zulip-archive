[
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#issuecomment-670676687\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064\">Issue #2064</a>:</p>\n<blockquote>\n<blockquote>\n<p>I can see the entire ELF image being copied into the code memory, but I'm having trouble figuring out the end goal ofthis PR. Is the intention that the Object isn't kept around which duplicates resident memory by having code twice? This isn't related to minimizing the number of copies, right?</p>\n</blockquote>\n<p>The end goal not only remove copy operations but also reduce amount of data copies as well. Currently, we are keeping pristine ELF image copy along with code_memory, which only needed for <code>Module::serialize</code> (so almost never). This PR tries to remove this data from memory.</p>\n<p>It is low priority for this optimization. Though it will probably be needed when we will emit ELF image directly into the code_memory.</p>\n</blockquote>",
        "id": 206299854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596828491
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#issuecomment-670701217\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064\">Issue #2064</a>:</p>\n<blockquote>\n<p>Ah ok I see, so it's removing some duplicates we store next to each other. Ok that makes sense to me! I'd be happy landing this since it at least improves along those lines and will be needed for future refactorings anyway.</p>\n</blockquote>",
        "id": 206305800,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596832319
    }
]