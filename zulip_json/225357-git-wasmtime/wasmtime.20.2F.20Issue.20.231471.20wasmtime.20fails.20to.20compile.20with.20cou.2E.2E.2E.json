[
    {
        "content": "<p>stefson opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>there's a recent regression in the code: </p>\n<div class=\"codehilite\"><pre><span></span>     Running `rustc --crate-name wasmtime_environ --edition=2018 crates/environ/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=3f3bb9806de25bbc -C extra-filename=-3f3bb9806de25bbc --out-dir /tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps --target armv7-unknown-linux-gnueabihf -C linker=armv7a-unknown-linux-gnueabihf-gcc -C incremental=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/incremental -L dependency=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps -L dependency=/tmp/wasmtime/target/debug/deps --extern anyhow=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libanyhow-a7d5a95d013f511f.rmeta --extern base64=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libbase64-1fc3337a027c3d46.rmeta --extern bincode=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libbincode-0cfacf3864ed393b.rmeta --extern cranelift_codegen=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_codegen-fe4d1e7b8c528231.rmeta --extern cranelift_entity=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_entity-6f3c3d46881e39ec.rmeta --extern cranelift_wasm=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_wasm-c3fa487d86de75b7.rmeta --extern directories=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libdirectories-32547e134205d970.rmeta --extern errno=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liberrno-aa6b44df9b99329e.rmeta --extern file_per_thread_logger=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libfile_per_thread_logger-c9cdc123d34b0b2e.rmeta --extern indexmap=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libindexmap-062ef480b02be0ea.rmeta --extern libc=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liblibc-45ed8421ceb1d133.rmeta --extern log=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liblog-4ab7a3e889d23791.rmeta --extern more_asserts=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libmore_asserts-4602433f0d9089cb.rmeta --extern rayon=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/librayon-8631c1a88fa6e275.rmeta --extern serde=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libserde-198981066e594298.rmeta --extern sha2=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libsha2-39588d910b40a085.rmeta --extern thiserror=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libthiserror-8289a6a6c6a57ad6.rmeta --extern toml=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libtoml-6acf23745dbe4062.rmeta --extern wasmparser=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libwasmparser-6bba5d41f47f7b65.rmeta --extern zstd=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libzstd-4a14a693b151a604.rmeta -L native=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/build/zstd-sys-8fe68259522e1833/out`\nerror[E0432]: unresolved import `cranelift_codegen::isa::fde`\n  --&gt; crates/environ/src/data_structures.rs:18:41\n   |\n18 |         pub use cranelift_codegen::isa::fde::map_reg;\n   |                                         ^^^ could not find `fde` in `isa`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `wasmtime-environ`.\n</pre></div>\n\n\n<p>caused by: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0\" title=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0\">https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0</a></p>\n<p>reverting the commit locally fixes the issue for me. </p>\n</blockquote>",
        "id": 192906619,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586005348
    },
    {
        "content": "<p>stefson labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>there's a recent regression in the code: </p>\n<div class=\"codehilite\"><pre><span></span>     Running `rustc --crate-name wasmtime_environ --edition=2018 crates/environ/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=3f3bb9806de25bbc -C extra-filename=-3f3bb9806de25bbc --out-dir /tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps --target armv7-unknown-linux-gnueabihf -C linker=armv7a-unknown-linux-gnueabihf-gcc -C incremental=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/incremental -L dependency=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps -L dependency=/tmp/wasmtime/target/debug/deps --extern anyhow=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libanyhow-a7d5a95d013f511f.rmeta --extern base64=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libbase64-1fc3337a027c3d46.rmeta --extern bincode=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libbincode-0cfacf3864ed393b.rmeta --extern cranelift_codegen=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_codegen-fe4d1e7b8c528231.rmeta --extern cranelift_entity=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_entity-6f3c3d46881e39ec.rmeta --extern cranelift_wasm=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_wasm-c3fa487d86de75b7.rmeta --extern directories=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libdirectories-32547e134205d970.rmeta --extern errno=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liberrno-aa6b44df9b99329e.rmeta --extern file_per_thread_logger=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libfile_per_thread_logger-c9cdc123d34b0b2e.rmeta --extern indexmap=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libindexmap-062ef480b02be0ea.rmeta --extern libc=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liblibc-45ed8421ceb1d133.rmeta --extern log=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liblog-4ab7a3e889d23791.rmeta --extern more_asserts=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libmore_asserts-4602433f0d9089cb.rmeta --extern rayon=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/librayon-8631c1a88fa6e275.rmeta --extern serde=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libserde-198981066e594298.rmeta --extern sha2=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libsha2-39588d910b40a085.rmeta --extern thiserror=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libthiserror-8289a6a6c6a57ad6.rmeta --extern toml=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libtoml-6acf23745dbe4062.rmeta --extern wasmparser=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libwasmparser-6bba5d41f47f7b65.rmeta --extern zstd=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libzstd-4a14a693b151a604.rmeta -L native=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/build/zstd-sys-8fe68259522e1833/out`\nerror[E0432]: unresolved import `cranelift_codegen::isa::fde`\n  --&gt; crates/environ/src/data_structures.rs:18:41\n   |\n18 |         pub use cranelift_codegen::isa::fde::map_reg;\n   |                                         ^^^ could not find `fde` in `isa`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `wasmtime-environ`.\n</pre></div>\n\n\n<p>caused by: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0\" title=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0\">https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0</a></p>\n<p>reverting the commit locally fixes the issue for me. </p>\n</blockquote>",
        "id": 192906620,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586005348
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609037105\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609037105\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>The <code>fde</code> module is gated on x86. Maybe it should just always be compiled?</p>\n</blockquote>",
        "id": 192910234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586010637
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609835221\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609835221\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>Yeah, sorry about this one; in #1245 I removed a duplicate instance of <code>map_reg</code> and had to add this new path. Since <code>map_reg</code> is <a href=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0#diff-5bc13dea078acce17350d0de0ddac5c2R83-R85\" title=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0#diff-5bc13dea078acce17350d0de0ddac5c2R83-R85\">really only implemented for x86</a>, will you still get an error on ARM (but a runtime error instead)?</p>\n</blockquote>",
        "id": 193051319,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586183935
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609852326\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609852326\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<blockquote>\n<p>Since map_reg is really only implemented for x86, will you still get an error on ARM (but a runtime error instead)?</p>\n</blockquote>\n<p>Yes it checks for <code>x86</code> being the target isa at the beginning.</p>\n</blockquote>",
        "id": 193055577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586185619
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609866339\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609866339\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>That's what I linked to in my comment above but not what I mean: is <code>map_reg</code> a function that is going to be called in whatever way @stefson is using wasmtime?</p>\n</blockquote>",
        "id": 193059077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586187073
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609866339\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-609866339\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>That's what I linked to in my comment above but not what I mean: is <code>map_reg</code> a function that is going to be called in whatever way @stefson is using wasmtime? I.e., I think it has something to do with debug so he may or may not be using it.</p>\n</blockquote>",
        "id": 193059242,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586187132
    },
    {
        "content": "<p>stefson <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-610824010\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-610824010\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>I'm actually trying regularly to compile wasmtime, and cranelift, with armv7 to prevent it from breaking further and further. I know that wasmtime most likely hasn't been ported yet to arm, just can't be sure since it never actually built for me ;-) but that approach finds more unrelated bugs such as in <code>yanix</code> </p>\n<p>All of my testing and reporting is done with the intention to help you, sadly I don't know much about rust to fix the error myself. </p>\n</blockquote>",
        "id": 193288069,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586334341
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-610836592\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-610836592\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<blockquote>\n<p>I know that wasmtime most likely hasn't been ported yet to arm</p>\n</blockquote>\n<p>The arm backend of Cranelift is little more than a stub. There is currently work being done to completely replace it with a fully functional backend:</p>\n<p><a href=\"#narrow/stream/225524-cranelift-new-backend\" title=\"#narrow/stream/225524-cranelift-new-backend\">https://bytecodealliance.zulipchat.com/#narrow/stream/225524-cranelift-new-backend</a></p>\n</blockquote>",
        "id": 193290657,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586335905
    },
    {
        "content": "<p>bjorn3 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-610836592\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-610836592\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<blockquote>\n<p>I know that wasmtime most likely hasn't been ported yet to arm</p>\n</blockquote>\n<p>The arm backend of Cranelift is little more than a stub. There is currently work being done to completely replace it with a fully functional backend:</p>\n<p><a href=\"#narrow/stream/225524-cranelift-new-backend\" title=\"#narrow/stream/225524-cranelift-new-backend\">https://bytecodealliance.zulipchat.com/#narrow/stream/225524-cranelift-new-backend</a><br>\n<a href=\"https://github.com/cfallin/wasmtime/\" title=\"https://github.com/cfallin/wasmtime/\">https://github.com/cfallin/wasmtime/</a></p>\n</blockquote>",
        "id": 193290666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586335915
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611040287\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611040287\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>Ok, that information helps. I think there are two ways of fixing this:</p>\n<ol>\n<li>to just get the ARM building, I could remove the feature flag on x86; then users encounter a runtime error if they try to use this FDE functionality</li>\n<li>to make <code>map_reg</code> functional on other platforms, we could either move <code>map_reg</code> out of the x86 module or create separate <code>map_reg</code> functions in all of the ISA modules.</li>\n</ol>\n<p>I'm leaning towards option 1 (with some added comments linking to this issue) until @cfallin's branch is upstreamed, at which point a lot of this type of stuff needs to be looked at again. What do you all think?</p>\n</blockquote>",
        "id": 193340078,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586361239
    },
    {
        "content": "<p>abrown edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611040287\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611040287\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>Ok, that information helps. I think there are two ways of fixing this:</p>\n<ol>\n<li>to just get the ARM building, I could remove the feature flag on x86; then users encounter a runtime error if they try to use this FDE functionality but at least it compiles</li>\n<li>to make <code>map_reg</code> functional on other platforms, we could either move <code>map_reg</code> out of the x86 module or create separate <code>map_reg</code> functions in all of the ISA modules.</li>\n</ol>\n<p>I'm leaning towards option 1 (with some added comments linking to this issue) until @cfallin's branch is upstreamed, at which point a lot of this type of stuff needs to be looked at again. What do you all think?</p>\n</blockquote>",
        "id": 193340177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586361267
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611123313\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611123313\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>Note that some of this is hopefully changing in #1466 too.  I haven't yet checked the build for arm though.</p>\n</blockquote>",
        "id": 193361211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586371100
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611123313\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611123313\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>Note that some of this is hopefully changing (fixed?) in #1466 too.  I haven't yet checked the build for arm though (it builds for arm64).</p>\n<p>The big change in #1466 is that unwind information representation isn't gated on a particular ISA, only the <code>unwind</code> feature.  The unwind information would now be an enumeration of all supported ABIs for unwind, which currently is Windows x64 (i.e. a runtime function table) and System V (an .eh_frame).</p>\n<p>Currently only the x86-64 ISA supports creating unwind information.</p>\n</blockquote>",
        "id": 193362316,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586371616
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611184232\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611184232\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>@abrown pointed out that #1466 doesn't solve the issue, just shuffles <code>reg_map</code> around so it's still a problem.</p>\n<p>I lean towards perhaps a <code>TargetIsa</code> method used to translate a ISA-specific Cranelift register to a Gimli <code>Register</code> with a default implementation that errors unsupported?</p>\n</blockquote>",
        "id": 193376061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586378603
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611184232\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611184232\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>@abrown pointed out that #1466 doesn't solve the issue, just shuffles <code>map_reg</code> around so it's still a problem.</p>\n<p>I lean towards perhaps a <code>TargetIsa</code> method used to translate a ISA-specific Cranelift register to a Gimli <code>Register</code> with a default implementation that errors unsupported?</p>\n</blockquote>",
        "id": 193376085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586378615
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611186622\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611186622\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>That sounds good; should we figure out some way to avoid depending on Gimli in the public API? I mean, we currently depend on a Gimli type in <code>map_reg</code>, but that was a short-term solution.</p>\n</blockquote>",
        "id": 193376563,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586378905
    },
    {
        "content": "<p>peterhuene <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611190886\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611190886\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>That would make sense not to expose.  Perhaps just a <code>map_dwarf_register</code> method and have it return a <code>u16</code>, which is what gimli's <code>Register</code> wraps anyway?</p>\n</blockquote>",
        "id": 193377634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586379478
    },
    {
        "content": "<p>peterhuene edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611123313\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471#issuecomment-611123313\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>Note that some of this is hopefully changing (fixed?) in #1466 too.  I haven't yet checked the build for arm though.</p>\n<p>The big change in #1466 is that unwind information representation isn't gated on a particular ISA, only the <code>unwind</code> feature.  The unwind information would now be an enumeration of all supported ABIs for unwind, which currently is Windows x64 (i.e. a runtime function table) and System V (an .eh_frame).</p>\n<p>Currently only the x86-64 ISA supports creating unwind information.</p>\n</blockquote>",
        "id": 193378030,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586379668
    },
    {
        "content": "<p>abrown closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1471\" title=\"https://github.com/bytecodealliance/wasmtime/issues/1471\">Issue #1471</a>:</p>\n<blockquote>\n<p>there's a recent regression in the code: </p>\n<div class=\"codehilite\"><pre><span></span>     Running `rustc --crate-name wasmtime_environ --edition=2018 crates/environ/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts --crate-type lib --emit=dep-info,metadata,link -C debuginfo=2 -C metadata=3f3bb9806de25bbc -C extra-filename=-3f3bb9806de25bbc --out-dir /tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps --target armv7-unknown-linux-gnueabihf -C linker=armv7a-unknown-linux-gnueabihf-gcc -C incremental=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/incremental -L dependency=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps -L dependency=/tmp/wasmtime/target/debug/deps --extern anyhow=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libanyhow-a7d5a95d013f511f.rmeta --extern base64=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libbase64-1fc3337a027c3d46.rmeta --extern bincode=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libbincode-0cfacf3864ed393b.rmeta --extern cranelift_codegen=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_codegen-fe4d1e7b8c528231.rmeta --extern cranelift_entity=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_entity-6f3c3d46881e39ec.rmeta --extern cranelift_wasm=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libcranelift_wasm-c3fa487d86de75b7.rmeta --extern directories=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libdirectories-32547e134205d970.rmeta --extern errno=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liberrno-aa6b44df9b99329e.rmeta --extern file_per_thread_logger=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libfile_per_thread_logger-c9cdc123d34b0b2e.rmeta --extern indexmap=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libindexmap-062ef480b02be0ea.rmeta --extern libc=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liblibc-45ed8421ceb1d133.rmeta --extern log=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/liblog-4ab7a3e889d23791.rmeta --extern more_asserts=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libmore_asserts-4602433f0d9089cb.rmeta --extern rayon=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/librayon-8631c1a88fa6e275.rmeta --extern serde=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libserde-198981066e594298.rmeta --extern sha2=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libsha2-39588d910b40a085.rmeta --extern thiserror=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libthiserror-8289a6a6c6a57ad6.rmeta --extern toml=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libtoml-6acf23745dbe4062.rmeta --extern wasmparser=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libwasmparser-6bba5d41f47f7b65.rmeta --extern zstd=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/deps/libzstd-4a14a693b151a604.rmeta -L native=/tmp/wasmtime/target/armv7-unknown-linux-gnueabihf/debug/build/zstd-sys-8fe68259522e1833/out`\nerror[E0432]: unresolved import `cranelift_codegen::isa::fde`\n  --&gt; crates/environ/src/data_structures.rs:18:41\n   |\n18 |         pub use cranelift_codegen::isa::fde::map_reg;\n   |                                         ^^^ could not find `fde` in `isa`\n\nerror: aborting due to previous error\n\nFor more information about this error, try `rustc --explain E0432`.\nerror: could not compile `wasmtime-environ`.\n</pre></div>\n\n\n<p>caused by: <a href=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0\" title=\"https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0\">https://github.com/bytecodealliance/wasmtime/commit/d3df27500334625f463ea0f8134ea28395a5e6a0</a></p>\n<p>reverting the commit locally fixes the issue for me. </p>\n</blockquote>",
        "id": 193477041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1586450724
    }
]