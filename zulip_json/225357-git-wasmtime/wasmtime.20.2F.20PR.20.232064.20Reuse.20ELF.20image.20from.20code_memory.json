[
    {
        "content": "<p>yurydelendik opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064\">PR #2064</a> from <code>code-memory-reuse</code> to <code>main</code>:</p>\n<blockquote>\n<p>Optimization for #2020 </p>\n<p>Changes:</p>\n<ul>\n<li>Places entire ELF image into code_memory</li>\n<li>Use code_memory data as a source for <code>wasm_module_serialize</code> instead keeping pristine copy in memory</li>\n<li>Use code_memory data as GDB JIT image</li>\n<li>Sanitizes serialized image from current address information</li>\n<li>Moves ELF patching logic into the wasmtime-obj crate, also refactored for adding other platforms.</li>\n</ul>\n</blockquote>",
        "id": 204706784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595443756
    },
    {
        "content": "<p>yurydelendik updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064\">PR #2064</a> from <code>code-memory-reuse</code> to <code>main</code>:</p>\n<blockquote>\n<p>Optimization for #2020 </p>\n<p>Changes:</p>\n<ul>\n<li>Places entire ELF image into code_memory</li>\n<li>Use code_memory data as a source for <code>wasm_module_serialize</code> instead keeping pristine copy in memory</li>\n<li>Use code_memory data as GDB JIT image</li>\n<li>Sanitizes serialized image from current address information</li>\n<li>Moves ELF patching logic into the wasmtime-obj crate, also refactored for adding other platforms.</li>\n</ul>\n</blockquote>",
        "id": 204829125,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595526230
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#pullrequestreview-460350156\">PR Review</a>.</p>",
        "id": 205849977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#pullrequestreview-460350156\">PR Review</a>.</p>",
        "id": 205849978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464670652\">PR Review Comment</a>:</p>\n<blockquote>\n<p>While you're here, mind going ahead and changing this to an <code>anyhow::Result</code> to avoid using <code>String</code> as an error?</p>\n</blockquote>",
        "id": 205849979,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464672849\">PR Review Comment</a>:</p>\n<blockquote>\n<p>(similar comment about unsafety as above)</p>\n<p>Additionally this look looks basically the same as the one above, so could that be factored out? Something like a function that applies all relocations and uses a closure to calculate the reloc value.</p>\n</blockquote>",
        "id": 205849980,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464670954\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I think we'll probably want to resolve this before landing</p>\n</blockquote>",
        "id": 205849981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464669400\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It looks like some of these reader methods are <a href=\"https://docs.rs/object/0.20.0/object/read/elf/trait.FileHeader.html#tymethod.e_ident\">already on a predefined trait</a>, could that be used instead?</p>\n<p>(it looks like setters aren't found there though)</p>\n</blockquote>",
        "id": 205849982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464672478\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the <code>unsafe</code> be avoided here by reading the second data directly from the <code>section</code> from the iterator?</p>\n</blockquote>",
        "id": 205849983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464673178\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This seems like it's a bit of a scary error to omit, could we return an error here instead and use error messages to guide fixing this later?</p>\n</blockquote>",
        "id": 205849984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464673482\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Would it be possible to not add <code>unsafe</code> here? Could the code bytes be read from a safe method?</p>\n</blockquote>",
        "id": 205849985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464673697\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Could the unsafety here be encapsulated in a safe method?</p>\n</blockquote>",
        "id": 205849986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r464673538\">PR Review Comment</a>:</p>\n<blockquote>\n<p>How come these errors are ignored?</p>\n</blockquote>",
        "id": 205849987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596490525
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#pullrequestreview-463562216\">PR Review</a>.</p>",
        "id": 206300104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596828617
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#discussion_r467230486\">PR Review Comment</a>:</p>\n<blockquote>\n<p>That is the main reason for code duplication -- I can add a comment about setters.</p>\n</blockquote>",
        "id": 206300105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596828617
    },
    {
        "content": "<p>alexcrichton closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064\">PR #2064</a>.</p>",
        "id": 424309882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709320071
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064#issuecomment-1973765655\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2064\">PR #2064</a>:</p>\n<blockquote>\n<p>I'm going through some old PRs and this one's pretty old at this point. Enough points have changed that I don't think this is quite as applicable any more and I think much of this ended up getting landed in <code>main</code> anyway over time. </p>\n</blockquote>",
        "id": 424309883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1709320071
    }
]