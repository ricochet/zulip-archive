[
    {
        "content": "<p>saulecabrera assigned elliottt to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8087\">issue #8087</a>.</p>",
        "id": 426121209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710248966
    },
    {
        "content": "<p>saulecabrera opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8087\">issue #8087</a>:</p>\n<blockquote>\n<p>In order for Winch to reach feature parity with Cranelift, we want to ensure that it can compile WebAssembly Components.</p>\n<p>One approach is to implement the component trampolines from scratch, however, this will likely be a considerable amount of work and a lot of very similar work will be duplicated across both compilers. An alternative is to using Cranelift to compile all the trampolines, including the component ones. This approach will require making Winch match Cranelift's ABI. At that time of writing, this mostly involves adding callee-saved registers to Winch's ABI.</p>\n<p>Switching to using Cranelift's trampolines has the added benefit that Winch will receive support for all trampolines types for \"free\". </p>\n</blockquote>",
        "id": 426121213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710248967
    },
    {
        "content": "<p><a href=\"https://github.com/saulecabrera\">saulecabrera</a> added the winch label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8087\">Issue #8087</a>.</p>",
        "id": 426121226,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710248973
    },
    {
        "content": "<p>elliottt closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8087\">issue #8087</a>:</p>\n<blockquote>\n<p>In order for Winch to reach feature parity with Cranelift, we want to ensure that it can compile WebAssembly Components.</p>\n<p>One approach is to implement the component trampolines from scratch, however, this will likely be a considerable amount of work and a lot of very similar work will be duplicated across both compilers. An alternative is to using Cranelift to compile all the trampolines, including the component ones. This approach will require making Winch match Cranelift's ABI. At that time of writing, this mostly involves adding callee-saved registers to Winch's ABI.</p>\n<p>Switching to using Cranelift's trampolines has the added benefit that Winch will receive support for all trampolines types for \"free\". </p>\n</blockquote>",
        "id": 426446291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710374782
    },
    {
        "content": "<p>elliottt <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8087#issuecomment-1996161268\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8087\">issue #8087</a>:</p>\n<blockquote>\n<p>Fixed in #8082 </p>\n</blockquote>",
        "id": 426446292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1710374782
    }
]