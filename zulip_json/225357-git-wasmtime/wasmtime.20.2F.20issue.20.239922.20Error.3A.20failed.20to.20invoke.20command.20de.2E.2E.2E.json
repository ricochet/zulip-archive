[
    {
        "content": "<p><a href=\"https://github.com/guest271314\">guest271314</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">Issue #9922</a>.</p>",
        "id": 491990054,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736103633
    },
    {
        "content": "<p>guest271314 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/user-attachments/files/18311338/hermes-builds-fopen.tar.gz\">hermes-builds-fopen.tar.gz</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Follow instructions <a href=\"https://github.com/tmikov/hermes/blob/9d887a72ad0340f129f976d7e058941f9066dd35/doc/WASI.md\">here</a> to build Facebook's Static Hermes.</p>\n<p>Create <code>fopen.wasm</code> from <code>fopen.ts</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#!/bin/bash</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Copyright</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Meta</span><span class=\"w\"> </span><span class=\"n\">Platforms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Inc</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">affiliates</span><span class=\"p\">.</span>\n<span class=\"p\">#</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">source</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">licensed</span><span class=\"w\"> </span><span class=\"n\">under</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">MIT</span><span class=\"w\"> </span><span class=\"n\">license</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">LICENSE</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">source</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span>\n\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\">  </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Exit</span><span class=\"w\"> </span><span class=\"n\">immediately</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">exits</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">zero</span><span class=\"w\"> </span><span class=\"n\">status</span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">u</span><span class=\"w\">  </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Treat</span><span class=\"w\"> </span><span class=\"n\">unset</span><span class=\"w\"> </span><span class=\"n\">variables</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">immediately</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Extract</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"w\"> </span><span class=\"n\">without</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">extension</span>\n<span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"cp\">$(</span><span class=\"n\">basename</span><span class=\"w\"> </span><span class=\"s\">\"$1\"</span><span class=\"p\">)</span><span class=\"w\">   </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"n\">path</span>\n<span class=\"n\">file_name_with_ext</span><span class=\"o\">=</span><span class=\"s\">\"${file_name}\"</span>\n<span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"s\">\"${file_name%.*}\"</span><span class=\"w\">      </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"n\">extension</span>\n\n<span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">rf</span><span class=\"w\"> </span><span class=\"n\">out</span>\n\n<span class=\"n\">mkdir</span><span class=\"w\"> </span><span class=\"n\">out</span>\n\n<span class=\"n\">out</span><span class=\"o\">=</span><span class=\"s\">\"$PWD/out\"</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">rf</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">hbc</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">host</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">hermes</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">emit</span><span class=\"o\">-</span><span class=\"n\">binary</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.hbc\"</span>\n\n<span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">host</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">shermes</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Os</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">typed</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fstatic</span><span class=\"o\">-</span><span class=\"n\">builtins</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Xenable</span><span class=\"o\">-</span><span class=\"n\">tdz</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">emit</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"s\">\"${file_name_with_ext}\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.c\"</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">host</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">shermes</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Os</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Xenable</span><span class=\"o\">-</span><span class=\"n\">tdz</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fstatic</span><span class=\"o\">-</span><span class=\"n\">builtins</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fstd</span><span class=\"o\">-</span><span class=\"n\">globals</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}\"</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">cp</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span>\n\n<span class=\"o\">../</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.c\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">DNDEBUG</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">fno</span><span class=\"o\">-</span><span class=\"n\">strict</span><span class=\"o\">-</span><span class=\"n\">aliasing</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fno</span><span class=\"o\">-</span><span class=\"n\">strict</span><span class=\"o\">-</span><span class=\"n\">overflow</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">I</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">I</span><span class=\"o\">../</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">mllvm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">sjlj</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">c23</span><span class=\"o\">-</span><span class=\"n\">extensions</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.o\"</span>\n\n<span class=\"o\">../</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"o\">++</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.o\"</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">tools</span><span class=\"o\">/</span><span class=\"n\">sh</span><span class=\"o\">-</span><span class=\"n\">demo</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">sh</span><span class=\"o\">-</span><span class=\"n\">demo</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">cxa</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.wasm\"</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">jsi</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">tools</span><span class=\"o\">/</span><span class=\"n\">shermes</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">lshermes_console_a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lhermesvmlean_a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">ljsi</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lwasi</span><span class=\"o\">-</span><span class=\"n\">emulated</span><span class=\"o\">-</span><span class=\"n\">mman</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lsetjmp</span>\n\n<span class=\"o\">../</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">strip</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.wasm\"</span>\n\n<span class=\"n\">ls</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lh</span><span class=\"w\"> </span><span class=\"s\">\"${out}\"</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">standalone</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">sh</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">ts</span>\n<span class=\"n\">In</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">included</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">media</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"mi\">1234</span><span class=\"o\">/</span><span class=\"n\">hermes</span><span class=\"o\">-</span><span class=\"n\">builds</span><span class=\"o\">/</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">:</span>\n<span class=\"o\">../</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">VM</span><span class=\"o\">/</span><span class=\"n\">static_h</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"p\">:</span><span class=\"mi\">334</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"JS exceptions are currenly broken with WASI\"</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"p\">#</span><span class=\"n\">warnings</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"mi\">334</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"n\">warning</span><span class=\"w\"> </span><span class=\"s\">\"JS exceptions are currenly broken with WASI\"</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">^</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"w\"> </span><span class=\"n\">generated</span><span class=\"p\">.</span>\n<span class=\"n\">total</span><span class=\"w\"> </span><span class=\"mf\">1.7</span><span class=\"n\">M</span>\n<span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\">  </span><span class=\"mi\">96</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">Jan</span><span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"p\">:</span><span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\">  </span><span class=\"mi\">25</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">Jan</span><span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"p\">:</span><span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">o</span>\n<span class=\"o\">-</span><span class=\"n\">rwxrwxr</span><span class=\"o\">-</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">1.5</span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">Jan</span><span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"p\">:</span><span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>wasmer</code> version wasmer 5.0.4 produces the expected result </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">362879</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">indexed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"mi\">362880</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">3628799</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">indexed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"mi\">3628800</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130e14</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">4066</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5995</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2511</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5e29</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2520</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x5884</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">33</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2be4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x25bd</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9a8c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2934</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9984</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2933</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb96a2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2932</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb95c6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2931</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x35ac</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130be0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">4044</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2393</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<p>Without using <code>wasi-sdk/bin/strip</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">WASM_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\">  </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130e14</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">abort</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5995</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_throw_current</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5e29</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_throw</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x5884</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_7_fopen</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2be4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_1__1_</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x25bd</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_0_global</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9a8c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">sh_unit_run</span><span class=\"p\">(</span><span class=\"n\">SHRuntime</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SHUnit</span><span class=\"o\">*</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9984</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_unit_init</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb96a2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_unit_init_guarded</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb95c6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_initialize_units</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x35ac</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">main</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130be0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">          </span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2393</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_start</span>\n<span class=\"w\">       </span><span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime 28.0.0 (2e584e841 2024-12-20)</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64 x86_64 x86_64 GNU/Linux</p>\n<h3>Extra Info</h3>\n<p>I initially thought this was an issue with Static Hermes source code, specifically related to reading STDIN. Then I tested the same WASM file with <code>wasmer</code>.</p>\n</blockquote>",
        "id": 491990055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736103634
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571729114\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>WASI doesn't have <code>/dev</code> nor <code>/dev/stdin</code>. Looks like Wasmer adds <code>/dev/stdin</code> as non-standard extension: <a href=\"https://github.com/wasmerio/wasmer/blob/1d03406174b204ac403f61e2deb0a41601c8e41b/lib/virtual-fs/src/builder.rs#L106-L110\">https://github.com/wasmerio/wasmer/blob/1d03406174b204ac403f61e2deb0a41601c8e41b/lib/virtual-fs/src/builder.rs#L106-L110</a> Instead of using <code>fopen(\"/dev/stdin\")</code> you can use the <code>stdin</code> global variable instead. This is of type <code>FILE *</code> just like the return value of <code>fopen</code>. You just have to make sure not to <code>fclose</code> it.</p>\n</blockquote>",
        "id": 491992315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736105700
    },
    {
        "content": "<p>guest271314 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571744289\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p><code>stdin</code> is not globally defined in the source JavaScript. </p>\n<p>That's the only way I know of to read STDIN in Static Hermes. Modified from this <a href=\"https://github.com/facebook/hermes/blob/static_h/examples/ffi/fopen.js\">https://github.com/facebook/hermes/blob/static_h/examples/ffi/fopen.js</a>.</p>\n<p><code>fopen.ts</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"sd\">/**</span>\n\n<span class=\"sd\"> * Copyright (c) Meta Platforms, Inc. and affiliates.</span>\n<span class=\"sd\"> *</span>\n\n<span class=\"sd\"> * This source code is licensed under the MIT license found in the</span>\n<span class=\"sd\"> * LICENSE file in the root directory of this source tree.</span>\n<span class=\"sd\"> */</span>\n\n<span class=\"c1\">// https://github.com/facebook/hermes/tree/static_h/examples/ffi</span>\n<span class=\"s\">\"use strict\"</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// Emulate a module scope, since global scope is unsound.</span>\n<span class=\"p\">(</span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">exports</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">c_null</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">c_null</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// stdio.h</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_fopen</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"stdio.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mode</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_fclose</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"stdio.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_fread</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"stdio.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fread</span><span class=\"p\">(</span>\n<span class=\"w\">      </span><span class=\"n\">ptr</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_size_t</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"n\">nitems</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_size_t</span><span class=\"p\">,</span>\n<span class=\"w\">      </span><span class=\"n\">stream</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span>\n<span class=\"w\">    </span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">c_size_t</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// stdlib.h</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_malloc</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"stdlib.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">malloc</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_size_t</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_free</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"stdlib.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">free</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// string.h</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_strerror_r</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"string.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">strerror_r</span><span class=\"p\">(</span><span class=\"n\">errnum</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">errbuf</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">buflen</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_size_t</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">c_int</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Builtin provided by SH to wrap errno.</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_sh_errno</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">declared</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">_sh_errno</span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"nc\">c_int</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Pointer access builtins.</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_ptr_write_char</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">declared</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">_sh_ptr_write_char</span><span class=\"p\">(</span><span class=\"n\">ptr</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_int</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_char</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_ptr_read_uchar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">declared</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">true</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">_sh_ptr_read_uchar</span><span class=\"p\">(</span><span class=\"n\">ptr</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">offset</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_int</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">c_uchar</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"sd\">/// Allocate native memory using malloc() or throw an exception.</span>\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">malloc</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"s\">\"inline\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"s\">\"use unsafe\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_malloc</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">===</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"OOM\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"sd\">/// Convert a JS string to ASCIIZ.</span>\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">stringToAsciiz</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">any</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"s\">\"use unsafe\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kr\">typeof</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">!==</span><span class=\"w\"> </span><span class=\"s\">\"string\"</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">malloc</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">.</span><span class=\"n\">charCodeAt</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">127</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"String is not ASCII\"</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"n\">_ptr_write_char</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"n\">_ptr_write_char</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">catch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">_free</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">e</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"sd\">/// Convert an ASCII string of certain size to a JS string.</span>\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">asciiToString_unsafe</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ch</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ptr_read_uchar</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"c1\">// if (ch &gt; 127) throw Error(\"String is not ASCII\");</span>\n<span class=\"w\">      </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">.</span><span class=\"n\">fromCharCode</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"sd\">/// Convert an ASCIIZ string up to a maximum size to a JS string.</span>\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">asciizToString_unsafe</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">maxsize</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">maxsize</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">ch</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_ptr_read_uchar</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"c1\">//if (ch &gt; 127) throw Error(\"String is not ASCII\");</span>\n<span class=\"w\">      </span><span class=\"c1\">//if (ch === 0) break;</span>\n<span class=\"w\">      </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">.</span><span class=\"n\">fromCharCode</span><span class=\"p\">(</span><span class=\"n\">ch</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">strerror</span><span class=\"p\">(</span><span class=\"n\">errnum</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"s\">\"use unsafe\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">errbuf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">malloc</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">_strerror_r</span><span class=\"p\">(</span><span class=\"n\">errnum</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">errbuf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1024</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">asciizToString_unsafe</span><span class=\"p\">(</span><span class=\"n\">errbuf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1024</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">finally</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">_free</span><span class=\"p\">(</span><span class=\"n\">errbuf</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"sd\">/// Very simple hack to ensure safety.</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">handles</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"p\">[]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">[];</span>\n<span class=\"w\">  </span><span class=\"c1\">// FIXME: fast array doesn't support .pop() yet.</span>\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">closedHandles</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"p\">();</span>\n\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mode</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"s\">\"use unsafe\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">pathz</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">c_null</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">modez</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">c_null</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">pathz</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stringToAsciiz</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"n\">modez</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">stringToAsciiz</span><span class=\"p\">(</span><span class=\"n\">mode</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">filePtr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_fopen</span><span class=\"p\">(</span><span class=\"n\">pathz</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">modez</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">filePtr</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">errnum</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_sh_errno</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"s\">\": \"</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"n\">strerror</span><span class=\"p\">(</span><span class=\"n\">errnum</span><span class=\"p\">));</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"c1\">// Allocate a handle.</span>\n<span class=\"w\">      </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">closedHandles</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">closedHandles</span><span class=\"p\">.</span><span class=\"n\">pop</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">handles</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">filePtr</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"n\">handles</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">filePtr</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">handles</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">finally</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">_free</span><span class=\"p\">(</span><span class=\"n\">pathz</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"n\">_free</span><span class=\"p\">(</span><span class=\"n\">modez</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">void</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"s\">\"use unsafe\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"n\">handles</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"invalid file handle\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">handles</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">_fclose</span><span class=\"p\">(</span><span class=\"n\">handles</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"p\">]);</span>\n<span class=\"w\">      </span><span class=\"n\">handles</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">c_null</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"n\">closedHandles</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">fread</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"s\">\"use unsafe\"</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"n\">handles</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"invalid file handle\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">handles</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"p\">])</span><span class=\"w\"> </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"file is closed\"</span><span class=\"p\">);</span>\n\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"n\">Error</span><span class=\"p\">(</span><span class=\"s\">\"invalid size\"</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">buf</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">malloc</span><span class=\"p\">(</span><span class=\"n\">size</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">nr</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_fread</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">size</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">handles</span><span class=\"p\">[</span><span class=\"n\">f</span><span class=\"p\">]);</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">asciiToString_unsafe</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">nr</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">finally</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">_free</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">freadAll</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"p\">):</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(;;)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fread</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">s</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">;</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// https://stackoverflow.com/a/34238979</span>\n\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">array_nth_permutation</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">lex</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// copy of the set a.slice()</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">x</span><span class=\"p\">];</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">length</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// length of the set</span>\n<span class=\"w\">    </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Array</span><span class=\"p\">();</span><span class=\"w\"> </span><span class=\"c1\">// return value, undefined</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n\n<span class=\"w\">    </span><span class=\"c1\">// compute f = factorial(len)</span>\n<span class=\"w\">    </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;=</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">*=</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">fac</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"c1\">// if the permutation number is within range</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"c1\">// start with the empty set, loop for len elements</span>\n<span class=\"w\">      </span><span class=\"c1\">// let result_len = 0;</span>\n<span class=\"w\">      </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(;</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"o\">--</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"c1\">// determine the next element:</span>\n<span class=\"w\">        </span><span class=\"c1\">// there are f/len subsets for each possible element,</span>\n<span class=\"w\">        </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">/=</span><span class=\"w\"> </span><span class=\"n\">len</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"c1\">// a simple division gives the leading element index</span>\n<span class=\"w\">        </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"c1\">// Math.floor(n / f);</span>\n<span class=\"w\">        </span><span class=\"c1\">// alternately: i = (n - n % f) / f;</span>\n<span class=\"w\">        </span><span class=\"c1\">// res[(result_len)++] = b[i];</span>\n<span class=\"w\">        </span><span class=\"c1\">// for (let j = i; j &lt; len; j++) {</span>\n<span class=\"w\">        </span><span class=\"c1\">//   b[j] = b[j + 1]; // shift elements left</span>\n<span class=\"w\">        </span><span class=\"c1\">// }</span>\n<span class=\"w\">        </span><span class=\"n\">res</span><span class=\"p\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">.</span><span class=\"n\">splice</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]);</span>\n<span class=\"w\">        </span><span class=\"c1\">// reduce n for the remaining subset:</span>\n<span class=\"w\">        </span><span class=\"c1\">// compute the remainder of the above division</span>\n<span class=\"w\">        </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">%=</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"c1\">// extract the i-th element from b and push it at the end of res</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">lex</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">fac</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">indexed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">fac</span><span class=\"p\">})</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">JSON</span><span class=\"p\">.</span><span class=\"n\">stringify</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"p\">}</span><span class=\"err\">`</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">===</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">JSON</span><span class=\"p\">.</span><span class=\"n\">stringify</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"p\">)}</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"err\">`</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">f</span><span class=\"p\">}:</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"p\">}</span><span class=\"err\">`</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">f</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">(</span><span class=\"s\">\"/dev/stdin\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">\"r\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"n\">input</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">lex</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"n\">freadAll</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)).</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s\">\" \"</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">Number</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">lex</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"err\">`</span><span class=\"n\">Expected</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"w\"> </span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"w\"> </span><span class=\"o\">&gt;=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">got</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">input</span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">lex</span><span class=\"p\">}</span><span class=\"err\">\\</span><span class=\"n\">n</span><span class=\"err\">`</span><span class=\"p\">);</span><span class=\"w\"> </span><span class=\"c1\">// eval(input)</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">print</span><span class=\"p\">(</span>\n<span class=\"w\">        </span><span class=\"n\">array_nth_permutation</span><span class=\"p\">(</span><span class=\"n\">Array</span><span class=\"p\">.</span><span class=\"n\">from</span><span class=\"p\">({</span><span class=\"w\"> </span><span class=\"n\">length</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">input</span><span class=\"w\"> </span><span class=\"p\">},</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"p\">),</span><span class=\"w\"> </span><span class=\"n\">lex</span><span class=\"p\">),</span>\n<span class=\"w\">      </span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">finally</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"n\">fclose</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"c1\">// Optionally force some methods to be emitted for debugging.</span>\n<span class=\"w\">  </span><span class=\"c1\">// exports.foo = foo;</span>\n<span class=\"p\">})({});</span>\n</code></pre></div>\n<p>Substituting <code>\"stdin\"</code> for <code>\"/dev/stdin\"</code> produces the same result.</p>\n<p>Trying to maunally change the contents of the compiled C file produces other errors</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">ts</span><span class=\"p\">:</span><span class=\"mi\">158</span><span class=\"p\">:</span><span class=\"mi\">39</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">incompatible</span><span class=\"w\"> </span><span class=\"n\">pointer</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">integer</span><span class=\"w\"> </span><span class=\"n\">conversion</span><span class=\"w\"> </span><span class=\"n\">passing</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">FILE</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">aka</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">struct</span><span class=\"w\"> </span><span class=\"n\">_IO_FILE</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"k\">const</span><span class=\"o\">'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"k\">type</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">SHSymbolID</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">aka</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">unsigned</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"o\">'</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">Wint</span><span class=\"o\">-</span><span class=\"n\">conversion</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"mi\">158</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">   </span><span class=\"n\">locals</span><span class=\"p\">.</span><span class=\"n\">t9</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_sh_ljs_get_string</span><span class=\"p\">(</span><span class=\"n\">shr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stdin</span><span class=\"w\"> </span><span class=\"cm\">/*/dev/stdin*/</span><span class=\"p\">);</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/../</span><span class=\"n\">share</span><span class=\"o\">/</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sysroot</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">/</span><span class=\"n\">stdio</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"p\">:</span><span class=\"mi\">79</span><span class=\"p\">:</span><span class=\"mi\">16</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">expanded</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">stdin</span><span class=\"o\">'</span>\n<span class=\"w\">   </span><span class=\"mi\">79</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"n\">define</span><span class=\"w\"> </span><span class=\"n\">stdin</span><span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">stdin</span><span class=\"p\">)</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">                </span><span class=\"o\">^~~~~~~</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"o\">../</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">VM</span><span class=\"o\">/</span><span class=\"n\">static_h</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"p\">:</span><span class=\"mi\">653</span><span class=\"p\">:</span><span class=\"mi\">47</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">passing</span><span class=\"w\"> </span><span class=\"n\">argument</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">parameter</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">symID</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">here</span>\n<span class=\"w\">  </span><span class=\"mi\">653</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">_sh_ljs_get_string</span><span class=\"p\">(</span><span class=\"n\">SHRuntime</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">shr</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SHSymbolID</span><span class=\"w\"> </span><span class=\"n\">symID</span><span class=\"p\">);</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">                                               </span><span class=\"o\">^</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">generated</span><span class=\"p\">.</span>\n<span class=\"n\">clang</span><span class=\"o\">++</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">no</span><span class=\"w\"> </span><span class=\"n\">such</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">or</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">fopen</span><span class=\"p\">.</span><span class=\"n\">o</span><span class=\"o\">'</span>\n</code></pre></div>\n<p>Would using a similar mapping as <code>wasmer</code> does work in `wasmtime?</p>\n</blockquote>",
        "id": 491996507,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736109454
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571755687\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<blockquote>\n<p>Would using a similar mapping as wasmer does work in <code>wasmtime</code>?</p>\n</blockquote>\n<p>In general, no, we try not to make non-standard extensions to WASI. This has negative downstream consequences on the ecosystem -- it creates expectations of other engines and a back-and-forth of bug reports (exactly as we see here!) that ends up forcing a de-facto standard, without the usual discussion and care, which we want to avoid.</p>\n<p>If Static Hermes can only access stdin by opening a file named <code>/dev/stdin</code>, that seems like an issue with their standard library on WASI -- perhaps you could report an issue upstream?</p>\n</blockquote>",
        "id": 491999801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736112346
    },
    {
        "content": "<p>guest271314 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571758457\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>@cfallin  I think I wore out my welcome there to get this far <a href=\"https://github.com/facebook/hermes/discussions/1588#discussioncomment-11731049\">How to translate gcc CLI arguments to correponding clang arguments? #1588</a>. A Collaborator over there has taken the time to implement compiling JavaScript to WASM using Emscripten and JavaScript to WASM with WASI support over a couple weeks. With patience until the last comment.</p>\n<p>Technically Static Hermes doesn't provide a way at all to read STDIN, officially. </p>\n<p>I'm basically trying to reproduce what is possible with Bytecode Alliance's Javy, with the bonus of the capability to compile to native executable, too, with the same C source code output by <code>-emit-c</code>. So far WABT's <code>wasm2c</code> has not yet implemented outputting a <code>main.c</code> for <code>wasm2c nm_javy_permutations.wasm</code>. With <code>shermes</code> we get C first, then we can branch to WASM standalone and WASM with WASI support, and nativ executable; and if we want, back to JavaScript with <code>wasm2js</code>.</p>\n<p>I had no idea <code>wasmer</code> was doing something different that is not standardized. I know from my experiments in WebAssembly world that the Wasmer folks to their own thing.</p>\n</blockquote>",
        "id": 492000573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736113022
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571758812\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<blockquote>\n<p>stdin is not globally defined in the source JavaScript.</p>\n</blockquote>\n<p>I meant importing libc's stdin global variable.</p>\n</blockquote>",
        "id": 492000677,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736113109
    },
    {
        "content": "<p>guest271314 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571760077\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>Havn't tried that, but thought about it. I'm not sure how to do that given the base <code>examples/fopen.js</code>. I don't think Facebook' Hermes is interested in implementing reading STDIN.</p>\n</blockquote>",
        "id": 492000957,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736113418
    },
    {
        "content": "<p>guest271314 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571766362\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>@bjorn3 </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_stdin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"stdio.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"nc\">c_ptr</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"cm\">/* ? */</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n</code></pre></div>\n<p>?</p>\n</blockquote>",
        "id": 492002553,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736114871
    },
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571772449\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>I have no clue how to import C global variables from js code with static hermes. I hadn't heard of static hermes before today.</p>\n</blockquote>",
        "id": 492004199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736116297
    },
    {
        "content": "<p>guest271314 closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p><a href=\"https://github.com/user-attachments/files/18311338/hermes-builds-fopen.tar.gz\">hermes-builds-fopen.tar.gz</a></p>\n<h3>Steps to Reproduce</h3>\n<p>Follow instructions <a href=\"https://github.com/tmikov/hermes/blob/9d887a72ad0340f129f976d7e058941f9066dd35/doc/WASI.md\">here</a> to build Facebook's Static Hermes.</p>\n<p>Create <code>fopen.wasm</code> from <code>fopen.ts</code>.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"cp\">#!/bin/bash</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Copyright</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Meta</span><span class=\"w\"> </span><span class=\"n\">Platforms</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Inc</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">affiliates</span><span class=\"p\">.</span>\n<span class=\"p\">#</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">This</span><span class=\"w\"> </span><span class=\"n\">source</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">licensed</span><span class=\"w\"> </span><span class=\"n\">under</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">MIT</span><span class=\"w\"> </span><span class=\"n\">license</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">LICENSE</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">root</span><span class=\"w\"> </span><span class=\"n\">directory</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">this</span><span class=\"w\"> </span><span class=\"n\">source</span><span class=\"w\"> </span><span class=\"n\">tree</span><span class=\"p\">.</span>\n\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">e</span><span class=\"w\">  </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Exit</span><span class=\"w\"> </span><span class=\"n\">immediately</span><span class=\"w\"> </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">exits</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">non</span><span class=\"o\">-</span><span class=\"n\">zero</span><span class=\"w\"> </span><span class=\"n\">status</span>\n<span class=\"n\">set</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">u</span><span class=\"w\">  </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Treat</span><span class=\"w\"> </span><span class=\"n\">unset</span><span class=\"w\"> </span><span class=\"n\">variables</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">an</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">exit</span><span class=\"w\"> </span><span class=\"n\">immediately</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Extract</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">filename</span><span class=\"w\"> </span><span class=\"n\">without</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">extension</span>\n<span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"cp\">$(</span><span class=\"n\">basename</span><span class=\"w\"> </span><span class=\"s\">\"$1\"</span><span class=\"p\">)</span><span class=\"w\">   </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"n\">path</span>\n<span class=\"n\">file_name_with_ext</span><span class=\"o\">=</span><span class=\"s\">\"${file_name}\"</span>\n<span class=\"n\">file_name</span><span class=\"o\">=</span><span class=\"s\">\"${file_name%.*}\"</span><span class=\"w\">      </span><span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"n\">extension</span>\n\n<span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">rf</span><span class=\"w\"> </span><span class=\"n\">out</span>\n\n<span class=\"n\">mkdir</span><span class=\"w\"> </span><span class=\"n\">out</span>\n\n<span class=\"n\">out</span><span class=\"o\">=</span><span class=\"s\">\"$PWD/out\"</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">rm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">rf</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">hbc</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">host</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">hermes</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">emit</span><span class=\"o\">-</span><span class=\"n\">binary</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">out</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.hbc\"</span>\n\n<span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">host</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">shermes</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Os</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"k\">static</span><span class=\"o\">-</span><span class=\"n\">link</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">typed</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fstatic</span><span class=\"o\">-</span><span class=\"n\">builtins</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Xenable</span><span class=\"o\">-</span><span class=\"n\">tdz</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">emit</span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"s\">\"${file_name_with_ext}\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.c\"</span>\n\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">host</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">shermes</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Os</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">g</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Xenable</span><span class=\"o\">-</span><span class=\"n\">tdz</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fstatic</span><span class=\"o\">-</span><span class=\"n\">builtins</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fstd</span><span class=\"o\">-</span><span class=\"n\">globals</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"p\">{</span><span class=\"n\">file_name</span><span class=\"p\">}.</span><span class=\"n\">js</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}\"</span>\n<span class=\"p\">#</span><span class=\"w\"> </span><span class=\"n\">cp</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span>\n\n<span class=\"o\">../</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">wasm32</span><span class=\"o\">-</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">clang</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.c\"</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">DNDEBUG</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">fno</span><span class=\"o\">-</span><span class=\"n\">strict</span><span class=\"o\">-</span><span class=\"n\">aliasing</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">fno</span><span class=\"o\">-</span><span class=\"n\">strict</span><span class=\"o\">-</span><span class=\"n\">overflow</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">I</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"o\">/</span><span class=\"n\">config</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">I</span><span class=\"o\">../</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">mllvm</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">enable</span><span class=\"o\">-</span><span class=\"n\">sjlj</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">Wno</span><span class=\"o\">-</span><span class=\"n\">c23</span><span class=\"o\">-</span><span class=\"n\">extensions</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.o\"</span>\n\n<span class=\"o\">../</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">clang</span><span class=\"o\">++</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">O3</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.o\"</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">tools</span><span class=\"o\">/</span><span class=\"n\">sh</span><span class=\"o\">-</span><span class=\"n\">demo</span><span class=\"o\">/</span><span class=\"n\">CMakeFiles</span><span class=\"o\">/</span><span class=\"n\">sh</span><span class=\"o\">-</span><span class=\"n\">demo</span><span class=\"p\">.</span><span class=\"n\">dir</span><span class=\"o\">/</span><span class=\"n\">cxa</span><span class=\"p\">.</span><span class=\"n\">cpp</span><span class=\"p\">.</span><span class=\"n\">obj</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">o</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.wasm\"</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">lib</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">jsi</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">L</span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">build</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">tools</span><span class=\"o\">/</span><span class=\"n\">shermes</span><span class=\"w\"> </span><span class=\"err\">\\</span>\n<span class=\"w\">  </span><span class=\"o\">-</span><span class=\"n\">lshermes_console_a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lhermesvmlean_a</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">ljsi</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lwasi</span><span class=\"o\">-</span><span class=\"n\">emulated</span><span class=\"o\">-</span><span class=\"n\">mman</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lsetjmp</span>\n\n<span class=\"o\">../</span><span class=\"n\">wasi</span><span class=\"o\">-</span><span class=\"n\">sdk</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">strip</span><span class=\"w\"> </span><span class=\"s\">\"${out}/${file_name}.wasm\"</span>\n\n<span class=\"n\">ls</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">lh</span><span class=\"w\"> </span><span class=\"s\">\"${out}\"</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">wasm</span><span class=\"o\">-</span><span class=\"n\">standalone</span><span class=\"o\">-</span><span class=\"n\">test</span><span class=\"p\">.</span><span class=\"n\">sh</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">ts</span>\n<span class=\"n\">In</span><span class=\"w\"> </span><span class=\"n\">file</span><span class=\"w\"> </span><span class=\"n\">included</span><span class=\"w\"> </span><span class=\"n\">from</span><span class=\"w\"> </span><span class=\"o\">/</span><span class=\"n\">media</span><span class=\"o\">/</span><span class=\"n\">user</span><span class=\"o\">/</span><span class=\"mi\">1234</span><span class=\"o\">/</span><span class=\"n\">hermes</span><span class=\"o\">-</span><span class=\"n\">builds</span><span class=\"o\">/</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">:</span>\n<span class=\"o\">../</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">include</span><span class=\"o\">/</span><span class=\"n\">hermes</span><span class=\"o\">/</span><span class=\"n\">VM</span><span class=\"o\">/</span><span class=\"n\">static_h</span><span class=\"p\">.</span><span class=\"n\">h</span><span class=\"p\">:</span><span class=\"mi\">334</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">warning</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"JS exceptions are currenly broken with WASI\"</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"n\">W</span><span class=\"p\">#</span><span class=\"n\">warnings</span><span class=\"p\">]</span>\n<span class=\"w\">  </span><span class=\"mi\">334</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">#</span><span class=\"n\">warning</span><span class=\"w\"> </span><span class=\"s\">\"JS exceptions are currenly broken with WASI\"</span>\n<span class=\"w\">      </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"o\">^</span>\n<span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">warning</span><span class=\"w\"> </span><span class=\"n\">generated</span><span class=\"p\">.</span>\n<span class=\"n\">total</span><span class=\"w\"> </span><span class=\"mf\">1.7</span><span class=\"n\">M</span>\n<span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\">  </span><span class=\"mi\">96</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">Jan</span><span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"p\">:</span><span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">c</span>\n<span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">rw</span><span class=\"o\">-</span><span class=\"n\">r</span><span class=\"o\">--</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\">  </span><span class=\"mi\">25</span><span class=\"n\">K</span><span class=\"w\"> </span><span class=\"n\">Jan</span><span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"p\">:</span><span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">o</span>\n<span class=\"o\">-</span><span class=\"n\">rwxrwxr</span><span class=\"o\">-</span><span class=\"n\">x</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"n\">user</span><span class=\"w\"> </span><span class=\"mf\">1.5</span><span class=\"n\">M</span><span class=\"w\"> </span><span class=\"n\">Jan</span><span class=\"w\">  </span><span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"mi\">09</span><span class=\"p\">:</span><span class=\"mi\">46</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p><code>wasmer</code> version wasmer 5.0.4 produces the expected result </p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">9</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"mi\">5</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">362879</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">indexed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"mi\">362880</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">10</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">3628799</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">indexed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"mi\">3628800</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">]</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130e14</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">4066</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5995</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2511</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5e29</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2520</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x5884</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">33</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2be4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">24</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x25bd</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">23</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9a8c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2934</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9984</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2933</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb96a2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2932</span><span class=\"o\">&gt;</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb95c6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">2931</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x35ac</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">25</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130be0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">4044</span><span class=\"o\">&gt;</span>\n<span class=\"w\">          </span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2393</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!&lt;</span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"mi\">21</span><span class=\"o\">&gt;</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<p>Without using <code>wasi-sdk/bin/strip</code></p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"mi\">5</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">  </span><span class=\"n\">WASM_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\">  </span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"n\">Error</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span><span class=\"p\">:</span>\n<span class=\"w\">    </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span><span class=\"p\">:</span>\n<span class=\"w\">           </span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130e14</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">abort</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5995</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_throw_current</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xa5e29</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_throw</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x5884</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_7_fopen</span>\n<span class=\"w\">           </span><span class=\"mi\">4</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2be4</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_1__1_</span>\n<span class=\"w\">           </span><span class=\"mi\">5</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x25bd</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_0_global</span>\n<span class=\"w\">           </span><span class=\"mi\">6</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9a8c</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">sh_unit_run</span><span class=\"p\">(</span><span class=\"n\">SHRuntime</span><span class=\"o\">*</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">SHUnit</span><span class=\"o\">*</span><span class=\"p\">)</span>\n<span class=\"w\">           </span><span class=\"mi\">7</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb9984</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_unit_init</span>\n<span class=\"w\">           </span><span class=\"mi\">8</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb96a2</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_unit_init_guarded</span>\n<span class=\"w\">           </span><span class=\"mi\">9</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0xb95c6</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_sh_initialize_units</span>\n<span class=\"w\">          </span><span class=\"mi\">10</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x35ac</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">main</span>\n<span class=\"w\">          </span><span class=\"mi\">11</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x130be0</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">__main_void</span>\n<span class=\"w\">          </span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mh\">0x2393</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">!</span><span class=\"n\">_start</span>\n<span class=\"w\">       </span><span class=\"n\">note</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">using</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">WASMTIME_BACKTRACE_DETAILS</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">may</span><span class=\"w\"> </span><span class=\"n\">show</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">debugging</span><span class=\"w\"> </span><span class=\"n\">information</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: wasmtime 28.0.0 (2e584e841 2024-12-20)</p>\n<p>Operating system: Linux</p>\n<p>Architecture: x86_64 x86_64 x86_64 GNU/Linux</p>\n<h3>Extra Info</h3>\n<p>I initially thought this was an issue with Static Hermes source code, specifically related to reading STDIN. Then I tested the same WASM file with <code>wasmer</code>.</p>\n</blockquote>",
        "id": 492005658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736117685
    },
    {
        "content": "<p>guest271314 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571778535\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>Fair enough. Some background <a href=\"https://github.com/facebook/hermes/discussions/1469\">Does hermes expose the capability to read standard input and write standard output? #1469</a>.</p>\n<p>In pertinent part <a href=\"https://github.com/facebook/hermes/discussions/1469#discussioncomment-10237485\">https://github.com/facebook/hermes/discussions/1469#discussioncomment-10237485</a></p>\n<blockquote>\n<p>Unfortunately an I/O library is currently out of scope for Hermes, and is technically orthogonal to our work.</p>\n<p>Such a library can be implemented, but it would likely be mostly engine-agnostic.</p>\n</blockquote>\n<p>and <a href=\"https://github.com/facebook/hermes/discussions/1469#discussioncomment-10452501\">https://github.com/facebook/hermes/discussions/1469#discussioncomment-10452501</a></p>\n<blockquote>\n<p>Static Hermes allows calling of <strong>any C API</strong> and generates <strong>native code</strong>.</p>\n</blockquote>\n<p>I'm basically trying to use JavaScript as the source code that can be cross-compiled to various targets.</p>\n<p>I can do this to an appreciable degree with Bytecode Alliance's Javy. Minus the compiling to native executable with C output part.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"c1\">// ./javy emit-plugin -o plugin.wasm</span>\n<span class=\"c1\">// ./javy build -C dynamic -C plugin=plugin.wasm -o nm_javy_permutations.wasm nm_javy_test.js</span>\n<span class=\"c1\">// wasmtime run --preload javy_quickjs_provider_v3=plugin.wasm javy-permutations.wasm</span>\n<span class=\"c1\">// ./binaryen/bin/wasm2js javy-permutations.wasm --enable-bulk-memory -o javy-permutations.js</span>\n<span class=\"c1\">// node --no-warnings node-javy-test.js '4 5'</span>\n<span class=\"c1\">// 5 of 23 (0-indexed, factorial 24) =&gt; [0,3,2,1]</span>\n<span class=\"c1\">// echo '4 5' | wasmtime run --dir=. --preload javy_quickjs_provider_v3=plugin.wasm nm_javy_permutations.wasm -</span>\n<span class=\"c1\">// 5 of 23 (0-indexed, factorial 24) =&gt; [0,3,2,1]</span>\n<span class=\"c1\">// echo \"4 5\" | node --no-warnings node-javy-test.js -</span>\n<span class=\"c1\">// 5 of 23 (0-indexed, factorial 24) =&gt; [0,3,2,1]</span>\n</code></pre></div>\n<p>I guess this is not a bug in <code>wasmtime</code>. </p>\n</blockquote>",
        "id": 492005659,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736117685
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571778677\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<blockquote>\n<p>@cfallin I think I wore out my welcome there to get this far <a href=\"https://github.com/facebook/hermes/discussions/1588#discussioncomment-11731049\">https://github.com/facebook/hermes/discussions/1588#discussioncomment-11731049</a>.</p>\n</blockquote>\n<p>For what it's worth, I agree with tmikov (intentionally not tagging) in that thread. In particular posting long (100+ line) snippets without attempting to reduce or debug the issue at all is not a super-great use of maintainers' time.</p>\n<blockquote>\n<p>Technically Static Hermes doesn't provide a way at all to read STDIN, officially.</p>\n</blockquote>\n<p>Regardless, it seems that your issue is with Static Hermes: you want a piece of functionality, they do not provide it; I would recommend either working with them or working with your own fork. For what it's worth, maintainers tend to respond more positively to \"I have debugged the issue and here is a PR that fixes it\" sorts of contributions.</p>\n</blockquote>",
        "id": 492005686,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736117723
    },
    {
        "content": "<p>guest271314 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2571781739\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<p>@cfallin </p>\n<blockquote>\n<p>For what it's worth, I agree with tmikov (intentionally not tagging) in that thread. In particular posting long (100+ line) snippets without attempting to reduce or debug the issue at all is not a super-great use of maintainers' time.</p>\n</blockquote>\n<p>Um, I've generally tested and tried to break code a few thousand times before I file issues.</p>\n<p>I'm on an island. There's not a whole bunch of developers hacking <code>node</code>, <code>deno</code>, <code>bun</code>, <code>qjs</code> canary versions <code>tjs</code>, <code>llrt</code>, <code>hermes</code>, <code>shermes</code>, Google's <code>d8</code>, SerenityOS's LibJS <code>js</code>, Mozilla's SpiderMonkey <code>js</code> shell, <code>wasmtime</code>, <code>wasmer</code>, running Chromium Dev Channel, and Firefox Nightly, at the same time, trying to write runtime agnostic code that works in each JavaScript/WebAssembly engine and runtime.</p>\n<p>I'm testing your gear in the field. At least until something breaks. I don't expect appreciation. I would at least expect a maintainer to ask what I've tried, before assuming I havn't tried anything. But alas, that rarely happens. Folkds are pigeoonholed in their own domains. I at least try to bridge gaps. Oh, well. The best I can do is test, and try to ask questions, until people ban me.  I begin my experiments and tests on edges with these mottos in mind, understanding that not all maintainers, hackers, developers, engineers have the same interests. That's fine, different interests make the world go round!</p>\n<blockquote>\n<p>So we need people to have weird new<br>\nideas ... we need more ideas to break it<br>\nand make it better ...</p>\n<p>Use it. Break it. File bugs. Request features.</p>\n</blockquote>\n<ul>\n<li>Soledad Penadés, Real time front-end alchemy, or: capturing, playing,<br>\n  altering and encoding video and audio streams, without<br>\n  servers or plugins!</li>\n</ul>\n<blockquote>\n<p>von Braun believed in testing. I cannot<br>\nemphasize that term enough – test, test,<br>\ntest. Test to the point it breaks.</p>\n</blockquote>\n<ul>\n<li>Ed Buckbee, NASA Public Affairs Officer, Chasing the Moon</li>\n</ul>\n<p>Thanks for your time and effort in this matter. Have a great day. Without rancor. </p>\n</blockquote>",
        "id": 492006272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736118355
    },
    {
        "content": "<p>guest271314 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922#issuecomment-2574539953\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9922\">issue #9922</a>:</p>\n<blockquote>\n<blockquote>\n<p>WASI doesn't have <code>/dev</code> nor <code>/dev/stdin</code>. Looks like Wasmer adds <code>/dev/stdin</code> as non-standard extension: <a href=\"https://github.com/wasmerio/wasmer/blob/1d03406174b204ac403f61e2deb0a41601c8e41b/lib/virtual-fs/src/builder.rs#L106-L110\">https://github.com/wasmerio/wasmer/blob/1d03406174b204ac403f61e2deb0a41601c8e41b/lib/virtual-fs/src/builder.rs#L106-L110</a> Instead of using <code>fopen(\"/dev/stdin\")</code> you can use the <code>stdin</code> global variable instead. This is of type <code>FILE *</code> just like the return value of <code>fopen</code>. You just have to make sure not to <code>fclose</code> it.</p>\n</blockquote>\n<p>@bjorn3 Helpful hint. Thanks.</p>\n<p>Using <code>int getchar(void);</code> to avoid trying to define <code>stdin</code> from WASI-SDK <code>stdio.h</code> in Static Hermes context.</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_getchar</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"cp\">$SHBuiltin</span><span class=\"p\">.</span><span class=\"n\">extern_c</span><span class=\"p\">(</span>\n<span class=\"w\">    </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">include</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s\">\"stdio.h\"</span><span class=\"w\"> </span><span class=\"p\">},</span>\n<span class=\"w\">    </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">getchar</span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"nc\">c_int</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"n\">throw</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"p\">},</span>\n<span class=\"w\">  </span><span class=\"p\">);</span>\n\n<span class=\"w\">  </span><span class=\"n\">function</span><span class=\"w\"> </span><span class=\"n\">getchars</span><span class=\"p\">():</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"s\">\"use unsafe\"</span><span class=\"p\">;</span>\n<span class=\"w\">    </span><span class=\"kr\">try</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">50</span><span class=\"p\">;</span>\n<span class=\"w\">      </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">string</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">();</span>\n<span class=\"w\">      </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">--</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">int</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"nc\">number</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">_getchar</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"o\">===</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">          </span><span class=\"k\">break</span><span class=\"p\">;</span>\n<span class=\"w\">        </span><span class=\"p\">}</span>\n<span class=\"w\">        </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">.</span><span class=\"n\">fromCodePoint</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"p\">);</span>\n<span class=\"w\">        </span><span class=\"c1\">// print(\"int:\", int);</span>\n<span class=\"w\">        </span><span class=\"c1\">// print(\"string:\", c);</span>\n<span class=\"w\">      </span><span class=\"p\">}</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">).</span><span class=\"n\">trim</span><span class=\"p\">();</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"n\">catch</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">      </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">.</span><span class=\"n\">message</span><span class=\"p\">);</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"p\">}</span>\n\n<span class=\"w\">  </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">stdin</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">getchars</span><span class=\"p\">();</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">wasmer</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">1307674367999</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">indexed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"mi\">1307674368000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">14</span><span class=\"p\">]</span>\n</code></pre></div>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">echo</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"mi\">15</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"p\">.</span><span class=\"o\">/</span><span class=\"n\">out</span><span class=\"o\">/</span><span class=\"n\">fopen</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n<span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"mi\">1307674367999</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"o\">-</span><span class=\"n\">indexed</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">factorial</span><span class=\"w\"> </span><span class=\"mi\">1307674368000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">11</span><span class=\"p\">,</span><span class=\"mi\">13</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">14</span><span class=\"p\">]</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 492254153,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736233806
    }
]