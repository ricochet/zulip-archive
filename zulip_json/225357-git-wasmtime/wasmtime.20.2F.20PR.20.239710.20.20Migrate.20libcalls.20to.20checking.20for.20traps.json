[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485721709,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179692
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a> from <code>alexcrichton:libcall-manual-trap</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR is the equivalent of <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">https://github.com/bytecodealliance/wasmtime/pull/9675</a> for libcalls used in core wasm and components.<br>\nAll libcalls now communicate whether or not they trapped through their<br>\nreturn value instead of implicitly calling <code>longjmp</code> to exit from the<br>\nlibcall. This is to make integration with Pulley easier to avoid the<br>\nneed to <code>longjmp</code> over Pulley execution.</p>\n<p>Libcall definitions have changed where appropriate and the<br>\n<code>catch_unwind_and_record_trap</code> function introduced in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9675\">https://github.com/bytecodealliance/wasmtime/pull/9675</a> was<br>\nrefactored to better support multiple types of values being returned<br>\nfrom libcalls (instead of just <code>Result&lt;()&gt;</code>).</p>\n<p>Note that changes have been made to both the Cranelift translation layer<br>\nand the Winch translation layer for this as the ABI of various libcalls<br>\nare all changing.</p>\n</blockquote>",
        "id": 485721710,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179692
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485721712,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179693
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485721714,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179693
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485721715,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179693
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#pullrequestreview-2474107342\">PR review</a>.</p>",
        "id": 485721866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179788
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#discussion_r1866733524\">PR review comment</a>:</p>\n<blockquote>\n<p>@saulecabrera I'm particularly curious to get your eyes on this file and the changes I made here. I had to make this change to keep things working because fuel checks now involve calling 2 libcalls instead of 1 and the second one tried to reload the <code>VMContext</code> before it was saved, so I pushed this below the <code>spill_register_arguments</code> below.</p>\n</blockquote>",
        "id": 485721869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179789
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#pullrequestreview-2474107839\">PR review</a>.</p>",
        "id": 485721949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179814
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#discussion_r1866733873\">PR review comment</a>:</p>\n<blockquote>\n<p>Similarly @saulecabrera I had to move this up since <code>fuel_var</code> was assigned rax but rax was needed as the return value of the hostcall, so this was needed to fix some panics during compilation.</p>\n</blockquote>",
        "id": 485721950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179814
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485722269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733179990
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485723914,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733180918
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#issuecomment-2513316247\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\", \"wasmtime:ref-types\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: wasmtime:ref-types</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 485734721,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733187923
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485989174,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733275424
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 485989416,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733275554
    },
    {
        "content": "<p>sunfishcode <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#issuecomment-2515969265\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>:</p>\n<blockquote>\n<p>Does this significantly change overall code size of Cranelift-generated code, due to needing inline trap check code at each libcall callsite?</p>\n</blockquote>",
        "id": 485990259,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733275983
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#issuecomment-2517822494\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>:</p>\n<blockquote>\n<p>Yes as-is all libcalls that can trap have a check after them, so it's inflating code by at least that much.</p>\n<p>In thinking though this can be pretty easily optimized. We already generate a trampoline-per-libcall so I'll move the check-for-trap logic to the trampoline instead of the callsite of the trampoline.</p>\n</blockquote>",
        "id": 486122857,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733327043
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 486137849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733331134
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#issuecomment-2518014941\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>:</p>\n<blockquote>\n<p>Ok I've updated this where the trampoline itself now checks for a trap, so the code size impact on wasm itself should be minimal.</p>\n</blockquote>",
        "id": 486138004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733331191
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 486138192,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733331247
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 486148063,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733334563
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#pullrequestreview-2482315986\">PR review</a>:</p>\n<blockquote>\n<p>LGTM modulo one comment below</p>\n</blockquote>",
        "id": 486352138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733417790
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#discussion_r1871744538\">PR review comment</a>:</p>\n<blockquote>\n<p>Wait, we should only ever have <code>i32</code> values in stack maps, but this will make it include an <code>i64</code> that represents a <code>Result&lt;u32&gt;</code> IIUC, so this change looks pretty suspect to me. Is this intentional?</p>\n</blockquote>",
        "id": 486352140,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733417791
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#pullrequestreview-2482344028\">PR review</a>.</p>",
        "id": 486352740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733417923
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#discussion_r1871761552\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh I thought that the <code>ireduce</code> preceding this would take care of that, but is that not the case?</p>\n</blockquote>",
        "id": 486352742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733417923
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#pullrequestreview-2482547708\">PR review</a>.</p>",
        "id": 486368120,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733422773
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710#discussion_r1871888153\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah whoops I misread this as moving the <code>ireduce</code> <em>after</em> the needs-stack-map declaration. Carry on!</p>\n</blockquote>",
        "id": 486368122,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733422773
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 486369099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733423137
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 486369108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733423143
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9710\">PR #9710</a>.</p>",
        "id": 486372838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1733424679
    }
]