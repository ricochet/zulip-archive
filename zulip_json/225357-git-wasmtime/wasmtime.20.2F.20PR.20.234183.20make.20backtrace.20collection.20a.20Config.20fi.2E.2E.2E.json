[
    {
        "content": "<p>pchickey opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> from <code>pch/trap_backtrace_config</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 283682903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653352461
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-983305241\">PR review</a>.</p>",
        "id": 283751885,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653401911
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-983305241\">PR review</a>.</p>",
        "id": 283751886,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653401911
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r880567681\">PR review comment</a>:</p>\n<blockquote>\n<p>If you'd like the <code>ref mut</code> here can all be dropped actually</p>\n</blockquote>",
        "id": 283751887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653401911
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r880567036\">PR review comment</a>:</p>\n<blockquote>\n<p>It's ok to omit this line now that the one above is unconditionally executed.</p>\n</blockquote>",
        "id": 283751888,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653401911
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r880573088\">PR review comment</a>:</p>\n<blockquote>\n<p>If you're feeling ambitious one possibility here is to do something like:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">struct</span> <span class=\"nc\">Trap</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">reason</span>: <span class=\"nc\">TrapReason</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>: <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">Backtrace</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">enum</span> <span class=\"nc\">TrapReason</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">User</span><span class=\"p\">(</span><span class=\"n\">Error</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Jit</span><span class=\"p\">(</span><span class=\"kt\">usize</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Code</span><span class=\"p\">(</span><span class=\"n\">TrapCode</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Oom</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">enum</span> <span class=\"nc\">UnwindReason</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Panic</span><span class=\"p\">(</span><span class=\"nb\">Box</span><span class=\"o\">&lt;</span><span class=\"k\">dyn</span><span class=\"w\"> </span><span class=\"n\">Any</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Trap</span><span class=\"p\">(</span><span class=\"n\">TrapReason</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>... hm I'm thinking about this and I'd ideally like to use this to prevent the double capture problem I described below. In any case this is fine to defer to a future PR. My rough thinking is that we would replace <code>raise_{lib,user}_trap</code> with simply <code>raise_trap</code> which takes a <code>Trap</code> and conversion from <code>Error</code> or <code>wasmtime::Trap</code> would appropriately create a <code>wasmtime_runtime::Trap</code> which is configured to not capture a backtrace if one is already contained (or something like that). It still involves a lot of converting back and forth between the <code>wasmtime</code> crate and the <code>wasmtime_runtime</code> crate though which is also something I'd like to avoid so this is an underbaked idea.</p>\n</blockquote>",
        "id": 283751889,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653401911
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r880566550\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it's ok to omit this because because backtraces are necessary on reference types only for gc purposes, but that's unconditionally enabled at runtime. </p>\n<p>One thing this'll need to do though is that when enabling unwind information in cranelift it should be done either when reference types are enabled or when wasm backtraces are requested.</p>\n</blockquote>",
        "id": 283751890,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653401911
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r880564385\">PR review comment</a>:</p>\n<blockquote>\n<p>I think this could probably use <code>try_insert</code> instead to avoid checking the flag twice?</p>\n<p>Otherwise we talked a bit about this yesterday and the main reason I wanted this to be an assert originally is that this otherwise means we're spending the time to capture a backtrace which otherwise gets discarded so we ideally wouldn't capture the backtrace in the first place. The use case for this though is pretty niche (and it definitely makes sense given the docs here why this is necessary), so I think it's best to leave something like that to a future refactoring.</p>\n<p>Could this add a FIXME though with an issue to avoid capturing the second backtrace here if we already have one?</p>\n</blockquote>",
        "id": 283751892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653401912
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-983827651\">PR review</a>.</p>",
        "id": 283802431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653424823
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r880931943\">PR review comment</a>:</p>\n<blockquote>\n<p>thanks I can't figure out why I had to put them there at all, I am rusty on my rust!</p>\n</blockquote>",
        "id": 283802432,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653424823
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> from <code>pch/trap_backtrace_config</code> to <code>main</code>.</p>",
        "id": 283802733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653424994
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> from <code>pch/trap_backtrace_config</code> to <code>main</code>.</p>",
        "id": 283806044,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653426811
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> from <code>pch/trap_backtrace_config</code> to <code>main</code>.</p>",
        "id": 283807624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653427721
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> from <code>pch/trap_backtrace_config</code> to <code>main</code>.</p>",
        "id": 283811292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653429910
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-984875733\">PR review</a>.</p>",
        "id": 283887193,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653487601
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r881696326\">PR review comment</a>:</p>\n<blockquote>\n<p>I think technically this isn't quite right because capturing a backtrace on trap is still independently controlled from this setting, but this does enable unwinding information to get compiled within a module.</p>\n<p>You know as I type this out if wasm backtraces are disabled we should probably conditionally define unwinding information in a module depending on whether it actually uses reference types or not.</p>\n</blockquote>",
        "id": 283887194,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653487602
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-984875733\">PR review</a>.</p>",
        "id": 283887195,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653487602
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r881696811\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this link to <code>Trap::trace</code> perhaps?</p>\n</blockquote>",
        "id": 283887196,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653487602
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-985228445\">PR review</a>.</p>",
        "id": 283915860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653499993
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r881939551\">PR review comment</a>:</p>\n<blockquote>\n<p>The comment is out of date, so I deleted it. The implementation should now behave as you describe.</p>\n</blockquote>",
        "id": 283915862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653499993
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> from <code>pch/trap_backtrace_config</code> to <code>main</code>.</p>",
        "id": 283916555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653500323
    },
    {
        "content": "<p><strong>pchickey</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> as ready for review.</p>",
        "id": 283916565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653500326
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-985235494\">PR review</a>.</p>",
        "id": 283916651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653500373
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#discussion_r881944452\">PR review comment</a>:</p>\n<blockquote>\n<p>I started down this path and it made a lot of code motion but I didn't get it to pay off. I could put more thought into it another time but for now I'm going to leave it be</p>\n</blockquote>",
        "id": 283916652,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653500373
    },
    {
        "content": "<p>pchickey updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a> from <code>pch/trap_backtrace_config</code> to <code>main</code>.</p>",
        "id": 283918730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653501465
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183#pullrequestreview-985278207\">PR review</a>.</p>",
        "id": 283921200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653502638
    },
    {
        "content": "<p>pchickey merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4183\">PR #4183</a>.</p>",
        "id": 283929693,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1653506751
    }
]