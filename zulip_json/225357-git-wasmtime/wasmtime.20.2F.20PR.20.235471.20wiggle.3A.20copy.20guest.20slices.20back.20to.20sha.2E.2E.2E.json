[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a> from <code>wiggle-copied-reads</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change upgrades <code>UnsafeGuestSlice</code> in Wiggle to expose more functionality to be able to use <code>std::ptr::copy</code> for writing bytes into Wasm shared memory. Additionally, it adds a new <code>GuestCow</code> type for delineating between Wasm memory regions that can be borrowed (non-shared memory) or must be copied (shared memory) in order to maintain Rust guarantees.</p>\n<p>With these in place, it is now possible to implement the <code>preview1</code> \"read\" functions for shared memory. Previously, these would panic if attempting to copy to a shared memory. This change removes the panic and introduces some (rather complex) logic for handling both the shared and non-shared cases:</p>\n<ul>\n<li>if reading into a Wasm non-shared memory, Wiggle guarantees that no other guest pointers will touch the memory region and, in the absence of concurrency, <code>preview1</code> can write directly to this memory</li>\n<li>if reading into a Wasm shared memory, the memory region can be concurrently modified. At @alexcrichton's request re: Rust safety, this change copies all of the bytes into an intermediate buffer before using <code>std::ptr::copy</code> to move them into Wasm memory.</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 316818341,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671479247
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a> as ready for review.</p>",
        "id": 316839121,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671487391
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a>.</p>",
        "id": 316843341,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671489123
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a> from <code>wiggle-copied-reads</code> to <code>main</code>.</p>",
        "id": 316851571,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671492997
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a> from <code>wiggle-copied-reads</code> to <code>main</code>.</p>",
        "id": 317029694,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671566437
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a> from <code>wiggle-copied-reads</code> to <code>main</code>:</p>\n<blockquote>\n<p>This change upgrades <code>UnsafeGuestSlice</code> in Wiggle to expose more<br>\nfunctionality to be able to use <code>std::ptr::copy</code> for writing bytes into<br>\nWasm shared memory. Additionally, it adds a new <code>GuestCow</code> type for<br>\ndelineating between Wasm memory regions that can be borrowed (non-shared<br>\nmemory) or must be copied (shared memory) in order to maintain Rust<br>\nguarantees.</p>\n<p>With these in place, it is now possible to implement the <code>preview1</code><br>\n\"read\" functions for shared memory. Previously, these would panic if<br>\nattempting to copy to a shared memory. This change removes the panic and<br>\nintroduces some (rather complex) logic for handling both the shared and<br>\nnon-shared cases:</p>\n<ul>\n<li>\n<p>if reading into a Wasm non-shared memory, Wiggle guarantees that no<br>\n  other guest pointers will touch the memory region and, in the absence<br>\n  of concurrency, a WASI function can write directly to this memory</p>\n</li>\n<li>\n<p>if reading into a Wasm shared memory, the memory region can be<br>\n  concurrently modified. At @alexcrichton's request re: Rust safety,<br>\n  this change copies all of the bytes into an intermediate buffer before<br>\n  using <code>std::ptr::copy</code> to move them into Wasm memory.</p>\n</li>\n</ul>\n<p>This change only applies to the <code>preview0</code> and <code>preview1</code><br>\nimplementations of <code>wasi-common</code>. Fixing up other WASI implementations<br>\n(esp. wasi-crypto) is left for later.</p>\n</blockquote>",
        "id": 317029830,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671566494
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#discussion_r1060729220\">PR review comment</a>:</p>\n<blockquote>\n<p>Since <code>random_get</code> fills the entire buffer I think this will need to <code>loop</code> or otherwise this will return an error since <code>tmp</code> may be shorter than <code>buf</code></p>\n</blockquote>",
        "id": 319227835,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672762142
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#pullrequestreview-1234766413\">PR review</a>.</p>",
        "id": 319227836,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672762142
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#discussion_r1060730723\">PR review comment</a>:</p>\n<blockquote>\n<p>Could you leave some comments that this is for the <code>UnsafeCell</code> inside?</p>\n</blockquote>",
        "id": 319227837,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672762142
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#pullrequestreview-1234766413\">PR review</a>.</p>",
        "id": 319227838,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672762142
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#discussion_r1060726684\">PR review comment</a>:</p>\n<blockquote>\n<p>This <code>vec!</code> I think can get removed (just use a <code>[..]</code> on the stack)</p>\n</blockquote>",
        "id": 319227839,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672762142
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a> from <code>wiggle-copied-reads</code> to <code>main</code>.</p>",
        "id": 319255954,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672770785
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#pullrequestreview-1234956973\">PR review</a>.</p>",
        "id": 319256066,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672770826
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#discussion_r1060851877\">PR review comment</a>:</p>\n<blockquote>\n<p>You might want to take a look at 652988f since I changed the <code>GuestPtr</code> API slightly.</p>\n</blockquote>",
        "id": 319256067,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672770826
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471#pullrequestreview-1234963584\">PR review</a>.</p>",
        "id": 319257381,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672771232
    },
    {
        "content": "<p>abrown has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a>.</p>",
        "id": 319259209,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672771867
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5471\">PR #5471</a>.</p>",
        "id": 319268883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1672775496
    }
]