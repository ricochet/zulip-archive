[
    {
        "content": "<p>langston-barrett opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>I found a program that crashes islec. Details:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ git rev-parse HEAD <span class=\"p\">|</span> xsel -ib\n\n43022c862a1d497f4b8c7c2fce47148775503add\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cat test.isle\n\n<span class=\"o\">(</span><span class=\"nb\">type</span> bool <span class=\"o\">(</span>primitive bool<span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"nb\">type</span> i8 <span class=\"o\">(</span>primitive i8<span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"nb\">type</span> Map extern <span class=\"o\">(</span>enum<span class=\"o\">))</span>\n\n<span class=\"o\">(</span>decl simplify <span class=\"o\">(</span>Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl pure ne <span class=\"o\">(</span>i8 i8<span class=\"o\">)</span> bool<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor ne ne<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Empty <span class=\"o\">()</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Empty extr_empty<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern constructor Empty constr_empty<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Insert <span class=\"o\">(</span>i8 i8 Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Insert extr_insert<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern constructor Insert constr_insert<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Remove <span class=\"o\">(</span>i8 Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Remove extr_remove<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">0</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Empty<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Empty<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">1</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Remove k m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v m<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">2</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v1 <span class=\"o\">(</span>Insert k v2 m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v1 m<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">3</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k1 v1 <span class=\"o\">(</span>Insert k2 v2 m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"o\">(</span>ne k1 k2<span class=\"o\">))</span>\n  <span class=\"o\">(</span>Insert k1 v1 <span class=\"o\">(</span>Insert k2 v2 <span class=\"o\">(</span>simplify m<span class=\"o\">))))</span>\n\n<span class=\"o\">(</span>rule\n  <span class=\"o\">(</span>Remove k <span class=\"o\">(</span>Empty<span class=\"o\">))</span>\n  <span class=\"o\">(</span>Empty<span class=\"o\">))</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"m\">0</span>.09s\n     Running <span class=\"sb\">`</span>/home/langston/code/wasmtime/target/debug/islec test.isle<span class=\"sb\">`</span>\nthread <span class=\"s1\">'main'</span> panicked at <span class=\"s1\">'Should have been caught by typechecking'</span>, cranelift/isle/isle/src/sema.rs:783:26\nstack backtrace:\n   <span class=\"m\">0</span>:     0x5588d0fc0850 - std::backtrace_rs::backtrace::libunwind::trace::h32eb3e08e874dd27\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\n   <span class=\"m\">1</span>:     0x5588d0fc0850 - std::backtrace_rs::backtrace::trace_unsynchronized::haa3f451d27bc11a5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x5588d0fc0850 - std::sys_common::backtrace::_print_fmt::h5b94a01bb4289bb5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:     0x5588d0fc0850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::hb070b7fa7e3175df\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:     0x5588d0fdda7e - core::fmt::write::hd5207aebbb9a86e9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/fmt/mod.rs:1202:17\n   <span class=\"m\">5</span>:     0x5588d0fbdcd5 - std::io::Write::write_fmt::h3bd699bbd129ab8a\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/io/mod.rs:1679:15\n   <span class=\"m\">6</span>:     0x5588d0fc1ed3 - std::sys_common::backtrace::_print::h7a21be552fdf58da\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:     0x5588d0fc1ed3 - std::sys_common::backtrace::print::ha85c41fe4dd80b13\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:     0x5588d0fc1ed3 - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h04cca40023d0eeca\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:     0x5588d0fc1bbf - std::panicking::default_hook::haa3ca8c310ed5402\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:     0x5588d0fc257a - std::panicking::rust_panic_with_hook::h7b190ce1a948faac\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:     0x5588d0fc2431 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hbafbfdc3e1b97f68\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:     0x5588d0fc0cfc - std::sys_common::backtrace::__rust_end_short_backtrace::hda93e5fef243b4c0\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:     0x5588d0fc2192 - rust_begin_unwind\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:     0x5588d0b0b113 - core::panicking::panic_fmt::h8d17ca1073d9a733\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:     0x5588d0d282a6 - cranelift_isle::sema::Expr::visit::h78e17866d60d927d\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:783:26\n  <span class=\"m\">16</span>:     0x5588d0d284ec - cranelift_isle::sema::Expr::visit_in_rule::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hde0977027dc130f4\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:801:20\n  <span class=\"m\">17</span>:     0x5588d0d421f7 - &lt;cranelift_isle::trie_again::RuleSetBuilder as cranelift_isle::sema::RuleVisitor&gt;::add_expr::hed65b425a5a91bad\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:665:9\n  <span class=\"m\">18</span>:     0x5588d0d283d6 - cranelift_isle::sema::Expr::visit_in_rule::h5e39eb43e84c3c96\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:799:9\n  <span class=\"m\">19</span>:     0x5588d0d28932 - cranelift_isle::sema::Rule::visit::h893bc3c075cbe6d9\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:876:27\n  <span class=\"m\">20</span>:     0x5588d0dc40f7 - cranelift_isle::trie_again::RuleSetBuilder::add_rule::hce133ad78b5f9338\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:385:36\n  <span class=\"m\">21</span>:     0x5588d0dc3407 - cranelift_isle::trie_again::build::h2d99db94c20d37b4\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:216:9\n  <span class=\"m\">22</span>:     0x5588d0dcacae - cranelift_isle::overlap::check::h3c7602f0aefa0221\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/overlap.rs:16:31\n  <span class=\"m\">23</span>:     0x5588d0d3da54 - cranelift_isle::compile::compile::h80ee996e2ab2b494\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/compile.rs:12:17\n  <span class=\"m\">24</span>:     0x5588d0b133ef - cranelift_isle::compile::from_files::h531abe844c59cf17\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/compile.rs:23:5\n  <span class=\"m\">25</span>:     0x5588d0b0eb35 - islec::main::h204180e4f764a747\n                               at /home/langston/code/wasmtime/cranelift/isle/islec/src/main.rs:27:16\n  <span class=\"m\">26</span>:     0x5588d0b10122 - core::ops::function::FnOnce::call_once::haeba8a3e3015b018\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/ops/function.rs:248:5\n  <span class=\"m\">27</span>:     0x5588d0b0c795 - std::sys_common::backtrace::__rust_begin_short_backtrace::he495da2ee4c5c6c7\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:122:18\n  <span class=\"m\">28</span>:     0x5588d0b150e6 - std::rt::lang_start::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h62a6b89bd67457e9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:166:18\n  <span class=\"m\">29</span>:     0x5588d0fb927f - core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; <span class=\"k\">for</span> <span class=\"p\">&amp;</span>F&gt;::call_once::hb69be6e0857c6cfb\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/ops/function.rs:283:13\n  <span class=\"m\">30</span>:     0x5588d0fb927f - std::panicking::try::do_call::h39<span class=\"p\">|</span>6dfc441ee9c786\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:492:40\n  <span class=\"m\">31</span>:     0x5588d0fb927f - std::panicking::try::h6cdda972d28b3a4f\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:456:19\n  <span class=\"m\">32</span>:     0x5588d0fb927f - std::panic::catch_unwind::h376039ec264e8ef9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panic.rs:137:14\n  <span class=\"m\">33</span>:     0x5588d0fb927f - std::rt::lang_start_internal::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hc94720ca3d4cb727\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:148:48\n  <span class=\"m\">34</span>:     0x5588d0fb927f - std::panicking::try::do_call::h2422fb95933fa2d5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:492:40\n  <span class=\"m\">35</span>:     0x5588d0fb927f - std::panicking::try::h488286b5ec8333ff\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:456:19\n  <span class=\"m\">36</span>:     0x5588d0fb927f - std::panic::catch_unwind::h81636549836d2a25\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panic.rs:137:14\n  <span class=\"m\">37</span>:     0x5588d0fb927f - std::rt::lang_start_internal::h6ba1bb743c1e9df9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:148:20\n  <span class=\"m\">38</span>:     0x5588d0b150ba - std::rt::lang_start::h858f0a28ab63a77d\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:165:17\n  <span class=\"m\">39</span>:     0x5588d0b0fe61 - main\n  <span class=\"m\">40</span>:     0x7fc5de7f3237 - __libc_start_call_main\n  <span class=\"m\">41</span>:     0x7fc5de7f32f5 - __libc_start_main_impl\n  <span class=\"m\">42</span>:     0x5588d0b0b3e1 - _start\n                               at /build/glibc-2.34/csu/../sysdeps/x86_64/start.S:116\n  <span class=\"m\">43</span>:                0x0 - &lt;unknown&gt;\n</code></pre></div>\n</blockquote>",
        "id": 325978602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675612296
    },
    {
        "content": "<p>langston-barrett <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713#issuecomment-1418075728\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>Not sure if this is related or separate, but this slight variation gives an assertion failure:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">bool</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">u8</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"kt\">i8</span> <span class=\"p\">(</span><span class=\"n\">primitive</span><span class=\"w\"> </span><span class=\"kt\">i8</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">type</span> <span class=\"nc\">Map</span><span class=\"w\"> </span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">enum</span><span class=\"p\">))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Map</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">pure</span><span class=\"w\"> </span><span class=\"n\">ne</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"kt\">i8</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"kt\">bool</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"w\"> </span><span class=\"n\">ne</span><span class=\"w\"> </span><span class=\"n\">ne</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">Empty</span><span class=\"w\"> </span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">Empty</span><span class=\"w\"> </span><span class=\"n\">extr_empty</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"w\"> </span><span class=\"n\">Empty</span><span class=\"w\"> </span><span class=\"n\">constr_empty</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">extr_insert</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">constructor</span><span class=\"w\"> </span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">constr_insert</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"kt\">i8</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"n\">extractor</span><span class=\"w\"> </span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"n\">extr_remove</span><span class=\"p\">)</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Empty</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Empty</span><span class=\"p\">)))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k1</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k2</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">ne</span><span class=\"w\"> </span><span class=\"n\">k1</span><span class=\"w\"> </span><span class=\"n\">k2</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k1</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Insert</span><span class=\"w\"> </span><span class=\"n\">k2</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">simplify</span><span class=\"w\"> </span><span class=\"n\">m</span><span class=\"p\">))))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">Remove</span><span class=\"w\"> </span><span class=\"n\">k</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Empty</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">Empty</span><span class=\"p\">))</span><span class=\"w\"></span>\n</code></pre></div>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"err\">`</span><span class=\"p\">(</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"p\">)</span><span class=\"err\">`</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"err\">`</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"err\">`</span><span class=\"mi\">0</span><span class=\"err\">`</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">isle</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">433</span>:<span class=\"mi\">17</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 325978952,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675612461
    },
    {
        "content": "<p>langston-barrett edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>I found a program that crashes islec. Details:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ git rev-parse HEAD <span class=\"p\">|</span> xsel -ib\n\n43022c862a1d497f4b8c7c2fce47148775503add\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cat test.isle\n\n<span class=\"o\">(</span><span class=\"nb\">type</span> bool <span class=\"o\">(</span>primitive bool<span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"nb\">type</span> i8 <span class=\"o\">(</span>primitive i8<span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"nb\">type</span> Map extern <span class=\"o\">(</span>enum<span class=\"o\">))</span>\n\n<span class=\"o\">(</span>decl simplify <span class=\"o\">(</span>Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl pure ne <span class=\"o\">(</span>i8 i8<span class=\"o\">)</span> bool<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor ne ne<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Empty <span class=\"o\">()</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Empty extr_empty<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern constructor Empty constr_empty<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Insert <span class=\"o\">(</span>i8 i8 Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Insert extr_insert<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern constructor Insert constr_insert<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Remove <span class=\"o\">(</span>i8 Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Remove extr_remove<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">0</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Empty<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Empty<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">1</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Remove k m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v m<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">2</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v1 <span class=\"o\">(</span>Insert k v2 m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v1 m<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">3</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k1 v1 <span class=\"o\">(</span>Insert k2 v2 m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"o\">(</span>ne k1 k2<span class=\"o\">))</span>\n  <span class=\"o\">(</span>Insert k1 v1 <span class=\"o\">(</span>Insert k2 v2 <span class=\"o\">(</span>simplify m<span class=\"o\">))))</span>\n\n<span class=\"o\">(</span>rule\n  <span class=\"o\">(</span>Remove k <span class=\"o\">(</span>Empty<span class=\"o\">))</span>\n  <span class=\"o\">(</span>Empty<span class=\"o\">))</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cargo run -- test.isle\n\n    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"m\">0</span>.09s\n     Running <span class=\"sb\">`</span>/home/langston/code/wasmtime/target/debug/islec test.isle<span class=\"sb\">`</span>\nthread <span class=\"s1\">'main'</span> panicked at <span class=\"s1\">'Should have been caught by typechecking'</span>, cranelift/isle/isle/src/sema.rs:783:26\nstack backtrace:\n   <span class=\"m\">0</span>:     0x5588d0fc0850 - std::backtrace_rs::backtrace::libunwind::trace::h32eb3e08e874dd27\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\n   <span class=\"m\">1</span>:     0x5588d0fc0850 - std::backtrace_rs::backtrace::trace_unsynchronized::haa3f451d27bc11a5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x5588d0fc0850 - std::sys_common::backtrace::_print_fmt::h5b94a01bb4289bb5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:     0x5588d0fc0850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::hb070b7fa7e3175df\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:     0x5588d0fdda7e - core::fmt::write::hd5207aebbb9a86e9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/fmt/mod.rs:1202:17\n   <span class=\"m\">5</span>:     0x5588d0fbdcd5 - std::io::Write::write_fmt::h3bd699bbd129ab8a\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/io/mod.rs:1679:15\n   <span class=\"m\">6</span>:     0x5588d0fc1ed3 - std::sys_common::backtrace::_print::h7a21be552fdf58da\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:     0x5588d0fc1ed3 - std::sys_common::backtrace::print::ha85c41fe4dd80b13\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:     0x5588d0fc1ed3 - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h04cca40023d0eeca\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:     0x5588d0fc1bbf - std::panicking::default_hook::haa3ca8c310ed5402\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:     0x5588d0fc257a - std::panicking::rust_panic_with_hook::h7b190ce1a948faac\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:     0x5588d0fc2431 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hbafbfdc3e1b97f68\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:     0x5588d0fc0cfc - std::sys_common::backtrace::__rust_end_short_backtrace::hda93e5fef243b4c0\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:     0x5588d0fc2192 - rust_begin_unwind\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:     0x5588d0b0b113 - core::panicking::panic_fmt::h8d17ca1073d9a733\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:     0x5588d0d282a6 - cranelift_isle::sema::Expr::visit::h78e17866d60d927d\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:783:26\n  <span class=\"m\">16</span>:     0x5588d0d284ec - cranelift_isle::sema::Expr::visit_in_rule::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hde0977027dc130f4\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:801:20\n  <span class=\"m\">17</span>:     0x5588d0d421f7 - &lt;cranelift_isle::trie_again::RuleSetBuilder as cranelift_isle::sema::RuleVisitor&gt;::add_expr::hed65b425a5a91bad\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:665:9\n  <span class=\"m\">18</span>:     0x5588d0d283d6 - cranelift_isle::sema::Expr::visit_in_rule::h5e39eb43e84c3c96\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:799:9\n  <span class=\"m\">19</span>:     0x5588d0d28932 - cranelift_isle::sema::Rule::visit::h893bc3c075cbe6d9\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:876:27\n  <span class=\"m\">20</span>:     0x5588d0dc40f7 - cranelift_isle::trie_again::RuleSetBuilder::add_rule::hce133ad78b5f9338\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:385:36\n  <span class=\"m\">21</span>:     0x5588d0dc3407 - cranelift_isle::trie_again::build::h2d99db94c20d37b4\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:216:9\n  <span class=\"m\">22</span>:     0x5588d0dcacae - cranelift_isle::overlap::check::h3c7602f0aefa0221\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/overlap.rs:16:31\n  <span class=\"m\">23</span>:     0x5588d0d3da54 - cranelift_isle::compile::compile::h80ee996e2ab2b494\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/compile.rs:12:17\n  <span class=\"m\">24</span>:     0x5588d0b133ef - cranelift_isle::compile::from_files::h531abe844c59cf17\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/compile.rs:23:5\n  <span class=\"m\">25</span>:     0x5588d0b0eb35 - islec::main::h204180e4f764a747\n                               at /home/langston/code/wasmtime/cranelift/isle/islec/src/main.rs:27:16\n  <span class=\"m\">26</span>:     0x5588d0b10122 - core::ops::function::FnOnce::call_once::haeba8a3e3015b018\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/ops/function.rs:248:5\n  <span class=\"m\">27</span>:     0x5588d0b0c795 - std::sys_common::backtrace::__rust_begin_short_backtrace::he495da2ee4c5c6c7\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:122:18\n  <span class=\"m\">28</span>:     0x5588d0b150e6 - std::rt::lang_start::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h62a6b89bd67457e9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:166:18\n  <span class=\"m\">29</span>:     0x5588d0fb927f - core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; <span class=\"k\">for</span> <span class=\"p\">&amp;</span>F&gt;::call_once::hb69be6e0857c6cfb\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/ops/function.rs:283:13\n  <span class=\"m\">30</span>:     0x5588d0fb927f - std::panicking::try::do_call::h39<span class=\"p\">|</span>6dfc441ee9c786\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:492:40\n  <span class=\"m\">31</span>:     0x5588d0fb927f - std::panicking::try::h6cdda972d28b3a4f\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:456:19\n  <span class=\"m\">32</span>:     0x5588d0fb927f - std::panic::catch_unwind::h376039ec264e8ef9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panic.rs:137:14\n  <span class=\"m\">33</span>:     0x5588d0fb927f - std::rt::lang_start_internal::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hc94720ca3d4cb727\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:148:48\n  <span class=\"m\">34</span>:     0x5588d0fb927f - std::panicking::try::do_call::h2422fb95933fa2d5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:492:40\n  <span class=\"m\">35</span>:     0x5588d0fb927f - std::panicking::try::h488286b5ec8333ff\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:456:19\n  <span class=\"m\">36</span>:     0x5588d0fb927f - std::panic::catch_unwind::h81636549836d2a25\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panic.rs:137:14\n  <span class=\"m\">37</span>:     0x5588d0fb927f - std::rt::lang_start_internal::h6ba1bb743c1e9df9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:148:20\n  <span class=\"m\">38</span>:     0x5588d0b150ba - std::rt::lang_start::h858f0a28ab63a77d\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:165:17\n  <span class=\"m\">39</span>:     0x5588d0b0fe61 - main\n  <span class=\"m\">40</span>:     0x7fc5de7f3237 - __libc_start_call_main\n  <span class=\"m\">41</span>:     0x7fc5de7f32f5 - __libc_start_main_impl\n  <span class=\"m\">42</span>:     0x5588d0b0b3e1 - _start\n                               at /build/glibc-2.34/csu/../sysdeps/x86_64/start.S:116\n  <span class=\"m\">43</span>:                0x0 - &lt;unknown&gt;\n</code></pre></div>\n</blockquote>",
        "id": 325979026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675612497
    },
    {
        "content": "<p>langston-barrett edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>I found a program that crashes islec. Details:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ git rev-parse HEAD\n\n43022c862a1d497f4b8c7c2fce47148775503add\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cat test.isle\n\n<span class=\"o\">(</span><span class=\"nb\">type</span> bool <span class=\"o\">(</span>primitive bool<span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"nb\">type</span> i8 <span class=\"o\">(</span>primitive i8<span class=\"o\">))</span>\n<span class=\"o\">(</span><span class=\"nb\">type</span> Map extern <span class=\"o\">(</span>enum<span class=\"o\">))</span>\n\n<span class=\"o\">(</span>decl simplify <span class=\"o\">(</span>Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl pure ne <span class=\"o\">(</span>i8 i8<span class=\"o\">)</span> bool<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor ne ne<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Empty <span class=\"o\">()</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Empty extr_empty<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern constructor Empty constr_empty<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Insert <span class=\"o\">(</span>i8 i8 Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Insert extr_insert<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern constructor Insert constr_insert<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>decl Remove <span class=\"o\">(</span>i8 Map<span class=\"o\">)</span> Map<span class=\"o\">)</span>\n<span class=\"o\">(</span>extern extractor Remove extr_remove<span class=\"o\">)</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">0</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Empty<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Empty<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">1</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v <span class=\"o\">(</span>Remove k m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v m<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">2</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v1 <span class=\"o\">(</span>Insert k v2 m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k v1 m<span class=\"o\">)))</span>\n\n<span class=\"o\">(</span>rule <span class=\"m\">3</span>\n  <span class=\"o\">(</span>simplify <span class=\"o\">(</span>Insert k1 v1 <span class=\"o\">(</span>Insert k2 v2 m<span class=\"o\">)))</span>\n  <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"o\">(</span>ne k1 k2<span class=\"o\">))</span>\n  <span class=\"o\">(</span>Insert k1 v1 <span class=\"o\">(</span>Insert k2 v2 <span class=\"o\">(</span>simplify m<span class=\"o\">))))</span>\n\n<span class=\"o\">(</span>rule\n  <span class=\"o\">(</span>Remove k <span class=\"o\">(</span>Empty<span class=\"o\">))</span>\n  <span class=\"o\">(</span>Empty<span class=\"o\">))</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>$ cargo run -- test.isle\n\n    Finished dev <span class=\"o\">[</span>unoptimized + debuginfo<span class=\"o\">]</span> target<span class=\"o\">(</span>s<span class=\"o\">)</span> <span class=\"k\">in</span> <span class=\"m\">0</span>.09s\n     Running <span class=\"sb\">`</span>/home/langston/code/wasmtime/target/debug/islec test.isle<span class=\"sb\">`</span>\nthread <span class=\"s1\">'main'</span> panicked at <span class=\"s1\">'Should have been caught by typechecking'</span>, cranelift/isle/isle/src/sema.rs:783:26\nstack backtrace:\n   <span class=\"m\">0</span>:     0x5588d0fc0850 - std::backtrace_rs::backtrace::libunwind::trace::h32eb3e08e874dd27\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/../../backtrace/src/backtrace/libunwind.rs:93:5\n   <span class=\"m\">1</span>:     0x5588d0fc0850 - std::backtrace_rs::backtrace::trace_unsynchronized::haa3f451d27bc11a5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n   <span class=\"m\">2</span>:     0x5588d0fc0850 - std::sys_common::backtrace::_print_fmt::h5b94a01bb4289bb5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:66:5\n   <span class=\"m\">3</span>:     0x5588d0fc0850 - &lt;std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display&gt;::fmt::hb070b7fa7e3175df\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:45:22\n   <span class=\"m\">4</span>:     0x5588d0fdda7e - core::fmt::write::hd5207aebbb9a86e9ISLE\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/fmt/mod.rs:1202:17\n   <span class=\"m\">5</span>:     0x5588d0fbdcd5 - std::io::Write::write_fmt::h3bd699bbd129ab8a\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/io/mod.rs:1679:15\n   <span class=\"m\">6</span>:     0x5588d0fc1ed3 - std::sys_common::backtrace::_print::h7a21be552fdf58da\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:48:5\n   <span class=\"m\">7</span>:     0x5588d0fc1ed3 - std::sys_common::backtrace::print::ha85c41fe4dd80b13\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:35:9\n   <span class=\"m\">8</span>:     0x5588d0fc1ed3 - std::panicking::default_hook::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h04cca40023d0eeca\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:295:22\n   <span class=\"m\">9</span>:     0x5588d0fc1bbf - std::panicking::default_hook::haa3ca8c310ed5402\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:314:9\n  <span class=\"m\">10</span>:     0x5588d0fc257a - std::panicking::rust_panic_with_hook::h7b190ce1a948faac\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:698:17\n  <span class=\"m\">11</span>:     0x5588d0fc2431 - std::panicking::begin_panic_handler::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hbafbfdc3e1b97f68\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:586:13\n  <span class=\"m\">12</span>:     0x5588d0fc0cfc - std::sys_common::backtrace::__rust_end_short_backtrace::hda93e5fef243b4c0\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:138:18\n  <span class=\"m\">13</span>:     0x5588d0fc2192 - rust_begin_unwind\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:584:5\n  <span class=\"m\">14</span>:     0x5588d0b0b113 - core::panicking::panic_fmt::h8d17ca1073d9a733\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/panicking.rs:142:14\n  <span class=\"m\">15</span>:     0x5588d0d282a6 - cranelift_isle::sema::Expr::visit::h78e17866d60d927d\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:783:26\n  <span class=\"m\">16</span>:     0x5588d0d284ec - cranelift_isle::sema::Expr::visit_in_rule::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hde0977027dc130f4\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:801:20\n  <span class=\"m\">17</span>:     0x5588d0d421f7 - &lt;cranelift_isle::trie_again::RuleSetBuilder as cranelift_isle::sema::RuleVisitor&gt;::add_expr::hed65b425a5a91bad\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:665:9\n  <span class=\"m\">18</span>:     0x5588d0d283d6 - cranelift_isle::sema::Expr::visit_in_rule::h5e39eb43e84c3c96\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:799:9\n  <span class=\"m\">19</span>:     0x5588d0d28932 - cranelift_isle::sema::Rule::visit::h893bc3c075cbe6d9\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/sema.rs:876:27\n  <span class=\"m\">20</span>:     0x5588d0dc40f7 - cranelift_isle::trie_again::RuleSetBuilder::add_rule::hce133ad78b5f9338\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:385:36\n  <span class=\"m\">21</span>:     0x5588d0dc3407 - cranelift_isle::trie_again::build::h2d99db94c20d37b4\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/trie_again.rs:216:9\n  <span class=\"m\">22</span>:     0x5588d0dcacae - cranelift_isle::overlap::check::h3c7602f0aefa0221\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/overlap.rs:16:31\n  <span class=\"m\">23</span>:     0x5588d0d3da54 - cranelift_isle::compile::compile::h80ee996e2ab2b494\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/compile.rs:12:17\n  <span class=\"m\">24</span>:     0x5588d0b133ef - cranelift_isle::compile::from_files::h531abe844c59cf17\n                               at /home/langston/code/wasmtime/cranelift/isle/isle/src/compile.rs:23:5\n  <span class=\"m\">25</span>:     0x5588d0b0eb35 - islec::main::h204180e4f764a747\n                               at /home/langston/code/wasmtime/cranelift/isle/islec/src/main.rs:27:16\n  <span class=\"m\">26</span>:     0x5588d0b10122 - core::ops::function::FnOnce::call_once::haeba8a3e3015b018\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/ops/function.rs:248:5\n  <span class=\"m\">27</span>:     0x5588d0b0c795 - std::sys_common::backtrace::__rust_begin_short_backtrace::he495da2ee4c5c6c7\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/sys_common/backtrace.rs:122:18\n  <span class=\"m\">28</span>:     0x5588d0b150e6 - std::rt::lang_start::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::h62a6b89bd67457e9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:166:18\n  <span class=\"m\">29</span>:     0x5588d0fb927f - core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; <span class=\"k\">for</span> <span class=\"p\">&amp;</span>F&gt;::call_once::hb69be6e0857c6cfb\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/core/src/ops/function.rs:283:13\n  <span class=\"m\">30</span>:     0x5588d0fb927f - std::panicking::try::do_call::h39<span class=\"p\">|</span>6dfc441ee9c786\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:492:40\n  <span class=\"m\">31</span>:     0x5588d0fb927f - std::panicking::try::h6cdda972d28b3a4f\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:456:19\n  <span class=\"m\">32</span>:     0x5588d0fb927f - std::panic::catch_unwind::h376039ec264e8ef9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panic.rs:137:14\n  <span class=\"m\">33</span>:     0x5588d0fb927f - std::rt::lang_start_internal::<span class=\"o\">{{</span>closure<span class=\"o\">}}</span>::hc94720ca3d4cb727\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:148:48\n  <span class=\"m\">34</span>:     0x5588d0fb927f - std::panicking::try::do_call::h2422fb95933fa2d5\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:492:40\n  <span class=\"m\">35</span>:     0x5588d0fb927f - std::panicking::try::h488286b5ec8333ff\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panicking.rs:456:19\n  <span class=\"m\">36</span>:     0x5588d0fb927f - std::panic::catch_unwind::h81636549836d2a25\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/panic.rs:137:14\n  <span class=\"m\">37</span>:     0x5588d0fb927f - std::rt::lang_start_internal::h6ba1bb743c1e9df9\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:148:20\n  <span class=\"m\">38</span>:     0x5588d0b150ba - std::rt::lang_start::h858f0a28ab63a77d\n                               at /rustc/897e37553bba8b42751c67658967889d11ecd120/library/std/src/rt.rs:165:17\n  <span class=\"m\">39</span>:     0x5588d0b0fe61 - main\n  <span class=\"m\">40</span>:     0x7fc5de7f3237 - __libc_start_call_main\n  <span class=\"m\">41</span>:     0x7fc5de7f32f5 - __libc_start_main_impl\n  <span class=\"m\">42</span>:     0x5588d0b0b3e1 - _start\n                               at /build/glibc-2.34/csu/../sysdeps/x86_64/start.S:116\n  <span class=\"m\">43</span>:                0x0 - &lt;unknown&gt;\n</code></pre></div>\n</blockquote>",
        "id": 325979076,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675612514
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713#issuecomment-1418245090\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>cc @jameysharp for the codegen assert, and we can take a look at the typechecking hole as well (probably on Monday), but one quick note as I see something:</p>\n<blockquote>\n<p><code>(decl pure ne (i8 i8) bool)</code><br>\n<code>(if (ne k1 k2))</code></p>\n</blockquote>\n<p>We actually ran into this footgun elsewhere recently, and it is subtle: the <code>(if (ne ...))</code> form is testing whether the <code>ne</code> constructor <em>matches</em>, not whether it <em>returns true</em>. We'll probably rename <code>if</code> (to <code>if-matches</code> or similar?) to make this clearer -- see <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5676#discussion_r1093555479\">this thread</a> on #5676.</p>\n<p>So you'll probably want something like <code>(if-let $true (ne k1 k2))</code>. We could potentially add some sugar for that form too if it becomes annoying enough.</p>\n</blockquote>",
        "id": 326003993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675625308
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713#issuecomment-1419998581\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>Chris' suggestion to change the <code>(if (ne ...))</code> to <code>(if-let $true ...)</code> fixes the codegen assertion failure. The proximate cause of the assertion failure was that of the two rules matching <code>(Insert ... (Insert ...))</code>, the higher-priority one matched first in all the cases where the lower-priority one could possibly match. If the assert were removed, ISLE would have emitted Rust with a <code>return</code> statement for the higher-priority rule, immediately followed by an unreachable <code>if</code> statement to check the equality constraint on the lower-priority rule. Then the Rust compiler would have refused to compile the generated code.</p>\n<p>Ideally, overlap/subset checking would have noticed that the rule with priority 2 could never match because the rule with priority 3 would always match first. However, there's an equality constraint in the former rule, and currently that check gives up and decides everything's fine if a rule has any equality constraints, because they're harder to reason about.</p>\n<p>I thought this assert was impossible if overlap checking passed, so I didn't think hard about good error messages. But I didn't think about the impact of this hole in overlap checking's completeness.</p>\n<p>By the way, a better way to write this pair of rules is to swap their priority and remove the <code>(if ...)</code> entirely. Because the rule which requires equality will match first, we'll only check the other rule when the map keys are not equal.</p>\n<p><div class=\"codehilite\" data-code-language=\"Common Lisp\"><pre><span></span><code><span class=\"p\">(</span><span class=\"nv\">rule</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nv\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">Insert</span><span class=\"w\"> </span><span class=\"nv\">k</span><span class=\"w\"> </span><span class=\"nv\">v1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">Insert</span><span class=\"w\"> </span><span class=\"nv\">k</span><span class=\"w\"> </span><span class=\"nv\">v2</span><span class=\"w\"> </span><span class=\"nv\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nv\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">Insert</span><span class=\"w\"> </span><span class=\"nv\">k</span><span class=\"w\"> </span><span class=\"nv\">v1</span><span class=\"w\"> </span><span class=\"nv\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n\n<span class=\"p\">(</span><span class=\"nv\">rule</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nv\">simplify</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">Insert</span><span class=\"w\"> </span><span class=\"nv\">k1</span><span class=\"w\"> </span><span class=\"nv\">v1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">Insert</span><span class=\"w\"> </span><span class=\"nv\">k2</span><span class=\"w\"> </span><span class=\"nv\">v2</span><span class=\"w\"> </span><span class=\"nv\">m</span><span class=\"p\">)))</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"nv\">Insert</span><span class=\"w\"> </span><span class=\"nv\">k1</span><span class=\"w\"> </span><span class=\"nv\">v1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">Insert</span><span class=\"w\"> </span><span class=\"nv\">k2</span><span class=\"w\"> </span><span class=\"nv\">v2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"nv\">simplify</span><span class=\"w\"> </span><span class=\"nv\">m</span><span class=\"p\">))))</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 326265411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675730749
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713#issuecomment-1420016342\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>And I'm not sure why the error that \"should have been caught by typechecking\", er, wasn't. But I can tell you the problem is that in the first version, the <code>ne</code> term was declared without a constructor, but used in expression context (in an <code>if</code>). You fixed that in the second version by changing it from an extractor to a constructor.</p>\n</blockquote>",
        "id": 326266569,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675731531
    },
    {
        "content": "<p>langston-barrett <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713#issuecomment-1420906547\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<blockquote>\n<p>The proximate cause of the assertion failure was that of the two rules matching (Insert ... (Insert ...)), the higher-priority one matched first in all the cases where the lower-priority one could possibly match.</p>\n</blockquote>\n<p>I see, thanks! Changing the rules to not cover one another did indeed fix this.</p>\n<p>Thanks to both of you for the ISLE programming tips! I'm excited to use this tool - it's very neat!</p>\n</blockquote>",
        "id": 326380572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675781625
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713#issuecomment-1420993190\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/5713\">issue #5713</a>:</p>\n<blockquote>\n<p>Glad we could help! I'd love to hear what you're using ISLE for.</p>\n<p>Let's leave this issue open even though your immediate issues are resolved, because we really should make sure typechecking actually catches this case instead of hitting a later panic.</p>\n</blockquote>",
        "id": 326392962,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675784796
    }
]