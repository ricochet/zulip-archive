[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923#issuecomment-649760878\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923\">Issue #1923</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @bnjbvr, @kubkon</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"cranelift:meta\", \"cranelift:wasm\", \"wasi\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>bnjbvr: cranelift</li>\n<li>kubkon: wasi</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 202010671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593111631
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923#issuecomment-649798477\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923\">Issue #1923</a>:</p>\n<blockquote>\n<blockquote>\n<p>Could this add some more tests too? Some things like:</p>\n</blockquote>\n<p>All of these cases are in the spec tests (except explicitly targeting replacing a <code>ref_count == 1</code> element), and enabled in this PR. I don't think it makes sense to duplicate them (again, excpet for <code>ref_count == 1</code>).</p>\n</blockquote>",
        "id": 202020028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593116619
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923#issuecomment-649806815\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923\">Issue #1923</a>:</p>\n<blockquote>\n<p>Hm so I do think that it's worthwhile to add some more tests here. I'm a bit hesitant to rely on pure wast tests since all the interesting bits are about how host code interacts with this. </p>\n<p>For example <a href=\"https://gist.github.com/alexcrichton/582b2ef8136bc20a0033903c94c4149a\">this program</a> will hit \"attempt to subtract with overflow\" because the reference count is decremented in wasm but then <code>drop_in_place</code> tries to decrement it again. If that's fixed then the program segfaults since it tries to drop <code>A</code> twice. The problem is that we're in the process of dropping a slot in the table when at the same time we still have access to read that slot. What needs to happen is we need to move out of the table, move the new entry into the table, then drop the previous entry. That way if in the destructor of the previous value we read the table slot we get the new value.</p>\n<p>I do realize that the spec tests try to be somewhat exhaustive, but given that this was pretty easy to segfault I think it's worthwhile trying to be at least somewhat flavorful with tests that exercise the embedding where we have more control over GC and such.</p>\n</blockquote>",
        "id": 202022073,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593117708
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923#issuecomment-649808947\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923\">Issue #1923</a>:</p>\n<blockquote>\n<blockquote>\n<p>I do realize that the spec tests try to be somewhat exhaustive, but given that this was pretty easy to segfault I think it's worthwhile trying to be at least somewhat flavorful with tests that exercise the embedding where we have more control over GC and such.</p>\n</blockquote>\n<p>Yeah I aleady had a fix for the <code>drop_in_place</code> bit, but the destructor-touching-the-table bit needs some tests for sure. I have a half written one already.</p>\n<p>I don't think we need to duplicate anything that's already in the spec tests, just the <code>ref_count == 1</code> paths, and dtors that touch the table.</p>\n</blockquote>",
        "id": 202022744,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593117998
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923#issuecomment-650368860\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923\">Issue #1923</a>:</p>\n<blockquote>\n<p>Okay, I've added a bunch of tests for pathological gc-in-externref-destructor-while-sweeping behaviors and other various re-entry into GC.</p>\n<p>Working on a fuzz target specifically for exercising <code>table.get</code>, <code>table.set</code>, and GC now, but it will probably be a follow up PR.</p>\n</blockquote>",
        "id": 202134781,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593201184
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923#issuecomment-650448348\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923\">Issue #1923</a>:</p>\n<blockquote>\n<p>Alright, I got the fuzz target written and passing as well!</p>\n</blockquote>",
        "id": 202154981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593213995
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923#issuecomment-650451616\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1923\">Issue #1923</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen, @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"fuzzing\", \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: fuzzing</li>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 202155865,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1593214768
    }
]