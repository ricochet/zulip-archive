[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>:</p>\n<blockquote>\n<p>Remove uses of <code>reg_mod</code> from the s390x backend. This required moving away from using <code>r0</code>/<code>r1</code> as the result registers from a few different pseudo instructions, standardizing instead on <code>r2/r3</code>. That change was necessary as regalloc2 will not correctly allocate registers that aren't listed in the allocatable set, which <code>r0</code>/<code>r1</code> are not.<br>\n&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 304860206,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666137641
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 304863611,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666140508
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>:</p>\n<blockquote>\n<p>Remove uses of <code>reg_mod</code> from the s390x backend. This required moving away from using <code>r0</code>/<code>r1</code> as the result registers from a few different pseudo instructions, standardizing instead on <code>r2/r3</code>. That change was necessary as regalloc2 will not correctly allocate registers that aren't listed in the allocatable set, which <code>r0</code>/<code>r1</code> are not.</p>\n<p>cc @uweigand, this is the same set of changes you and @cfallin iterated on in #4856.<br>\n&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 304863687,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666140593
    },
    {
        "content": "<p><strong>elliottt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> as ready for review.</p>",
        "id": 304875324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666150633
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1147383803\">PR review</a>.</p>",
        "id": 304938981,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181627
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1147383803\">PR review</a>.</p>",
        "id": 304938982,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181627
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999337433\">PR review comment</a>:</p>\n<blockquote>\n<p>Doesn't this swap the two inputs now?  The original logic results in <code>src1</code> if the condition is true and <code>src2</code> if it is false.  The new logic appears to result in <code>src1</code> if the condition is false ...</p>\n</blockquote>",
        "id": 304938983,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181627
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999334830\">PR review comment</a>:</p>\n<blockquote>\n<p>Similarly, these helpers shouldn't be needed anymore.</p>\n</blockquote>",
        "id": 304938984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181627
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999342081\">PR review comment</a>:</p>\n<blockquote>\n<p>The whole reason for using an <code>emit_producer</code> / <code>emit_consumer</code> pair here, instead of just doing <code>(with_flags_reg producer consumer)</code>, is that we needed to place the <code>emit_mov</code> <em>in between</em>.  If this is no longer necessary, I guess we could just use <code>with_flags_reg</code>.   (But that can also be a standalone follow-up cleanup.)</p>\n</blockquote>",
        "id": 304938985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181627
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999351207\">PR review comment</a>:</p>\n<blockquote>\n<p>Why the <code>extern</code> when it is already fully defined here?</p>\n</blockquote>",
        "id": 304938987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181627
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999352219\">PR review comment</a>:</p>\n<blockquote>\n<p>Again the question, why have another definition here when it is already defined in ISLE?  I think it should be one place or the other, not both.</p>\n</blockquote>",
        "id": 304938988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181628
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999359194\">PR review comment</a>:</p>\n<blockquote>\n<p>So these changes I really do not like, for the same reason originally discussed here: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4856#discussion_r962932362\">https://github.com/bytecodealliance/wasmtime/pull/4856#discussion_r962932362</a></p>\n<p>I really think the final assembly output needs to remain <em>valid</em> s390x assembler text, that could be run through the system assembler.  We fixed that problem originally by using a <code>pretty_print_reg_mod</code> helper that prints both virtual regs before regalloc, and just the single physreg after regalloc.</p>\n<p>Similarly, I think we should define <code>pretty_print_regpair</code> and/or <code>pretty_print_regpair_mod</code> helpers that print all participating virtual regs before regalloc, and just the single physreg  that ends up in the assembler text after regalloc.</p>\n<p>That should also remove many of the changes to the filetests.</p>\n</blockquote>",
        "id": 304938990,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181628
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999334193\">PR review comment</a>:</p>\n<blockquote>\n<p>I believe this shouldn't be needed at all anymore, see my patch attached here: <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4856#issuecomment-1237240252\">https://github.com/bytecodealliance/wasmtime/pull/4856#issuecomment-1237240252</a></p>\n</blockquote>",
        "id": 304938992,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181628
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999325787\">PR review comment</a>:</p>\n<blockquote>\n<p>I think there should still be a FIXME somewhere that these aren't actually allocated but hard-coded.  But maybe that FIXME should now go into <code>s390x_get_operands</code> instead?</p>\n</blockquote>",
        "id": 304938993,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181628
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999344606\">PR review comment</a>:</p>\n<blockquote>\n<p>Might as well use <code>rd1</code> for clarity then.</p>\n</blockquote>",
        "id": 304938994,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181628
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999328406\">PR review comment</a>:</p>\n<blockquote>\n<p>Chris' original patch always uses <code>ri</code> for the input side of tied operands.  I think it would be preferable to be consistent with that everywhere.</p>\n</blockquote>",
        "id": 304938995,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666181628
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1147957808\">PR review</a>.</p>",
        "id": 304998362,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198172
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999714639\">PR review comment</a>:</p>\n<blockquote>\n<p>How about adding this FIXME where the allocatable registers are defined?</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/blob/0667a412d70c6b4d9f97502a351db54373c18c91/cranelift/codegen/src/isa/s390x/inst/regs.rs#L94-L95\">https://github.com/bytecodealliance/wasmtime/blob/0667a412d70c6b4d9f97502a351db54373c18c91/cranelift/codegen/src/isa/s390x/inst/regs.rs#L94-L95</a></p>\n</blockquote>",
        "id": 304998364,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198173
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1147964251\">PR review</a>.</p>",
        "id": 304999350,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198457
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999719168\">PR review comment</a>:</p>\n<blockquote>\n<p>This is so that we have the constructors available in the ISLE source, but don't emit the actual declaration.</p>\n</blockquote>",
        "id": 304999353,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198458
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1147965802\">PR review</a>.</p>",
        "id": 304999555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198522
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999720193\">PR review comment</a>:</p>\n<blockquote>\n<p>It's a little unfortunate to have the redundancy here, but this is currently the best way to have the constructors from an enum available when the declaration is in rust.</p>\n</blockquote>",
        "id": 304999556,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198522
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1147967717\">PR review</a>.</p>",
        "id": 304999820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198602
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999721533\">PR review comment</a>:</p>\n<blockquote>\n<p>The other backends had drifted from being valid assembly, and I had assumed that the same was true of the s390x backend; I'll remove the changes to the pretty-printer <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 304999821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198602
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999721965\">PR review comment</a>:</p>\n<blockquote>\n<p>Great point, that will be more resilient long-term as well.</p>\n</blockquote>",
        "id": 304999904,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198629
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1147968384\">PR review</a>.</p>",
        "id": 304999905,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666198629
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999761002\">PR review comment</a>:</p>\n<blockquote>\n<p>Fine with me, thanks!</p>\n</blockquote>",
        "id": 305007323,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666201067
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148024403\">PR review</a>.</p>",
        "id": 305007324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666201067
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148025636\">PR review</a>.</p>",
        "id": 305007547,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666201124
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999761858\">PR review comment</a>:</p>\n<blockquote>\n<p>I guess my question is, why <em>does</em> the declaration have to be in rust?  Why not just have it in ISLE, and use the auto-generated definition from Rust code, just like with the other enums defined in ISLE?</p>\n</blockquote>",
        "id": 305007548,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666201124
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 305015603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666203635
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148084665\">PR review</a>.</p>",
        "id": 305016290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666203870
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999803468\">PR review comment</a>:</p>\n<blockquote>\n<p>The precise-output test changes should be mostly register changes now.</p>\n</blockquote>",
        "id": 305016292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666203870
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148139069\">PR review</a>.</p>",
        "id": 305023672,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666206536
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999842211\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately the reason in this case is that it allows us to derive <code>Copy</code> for <code>RegPair</code> and <code>WritableRegPair</code>. Without deriving <code>Copy</code> the register pair values get moved into the instructions that use them, and borrow errors are generated for any subsequent use of those values. This might be a pattern that we should enable in ISLE, but for now it's easiest to define those types in rust instead.</p>\n</blockquote>",
        "id": 305023673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666206536
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 305024801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666206934
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148147367\">PR review</a>.</p>",
        "id": 305024948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666206975
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999847970\">PR review comment</a>:</p>\n<blockquote>\n<p>I've moved this comment to the first fixed allocation of <code>%r2</code>/<code>%r3</code> instead, as that made it easier to provide some context.</p>\n</blockquote>",
        "id": 305024949,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666206975
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148152259\">PR review</a>.</p>",
        "id": 305025597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666207234
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999851410\">PR review comment</a>:</p>\n<blockquote>\n<p>Now that I've reverted everything back to how it was before, I'll have a look at adding the helper that you mentioned to print  the additional regs when they don't have a physical allocation.</p>\n</blockquote>",
        "id": 305025598,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666207234
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148205559\">PR review</a>.</p>",
        "id": 305032812,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666209961
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999886994\">PR review comment</a>:</p>\n<blockquote>\n<p>You're right, it absolutely does. However, it's not used anywhere, so I'll remove it.</p>\n</blockquote>",
        "id": 305032813,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666209961
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 305033794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666210258
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999886994\">PR review comment</a>.</p>",
        "id": 305034961,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666210628
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 305037521,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666211570
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148237302\">PR review</a>.</p>",
        "id": 305037650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666211623
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999908702\">PR review comment</a>:</p>\n<blockquote>\n<p>I migrated <code>select_bool_reg</code> and <code>select_bool_imm</code>, which removed the need for <code>emit_consumer</code>.</p>\n</blockquote>",
        "id": 305037651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666211623
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 305050985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666217883
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1148343151\">PR review</a>.</p>",
        "id": 305051783,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666218273
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r999984496\">PR review comment</a>:</p>\n<blockquote>\n<p>I made the changes to introduce <code>pretty_print_regpair</code>, <code>pretty_print_regpair_mod</code>, and <code>pretty_print_regpair_mod_lo</code>. This definitely cleaned up the pretty-printing code quite a bit, so thank you for the suggestion!</p>\n<p>I also opted to make <code>RegPair</code> and <code>WritableRegPair</code> structs instead of enums, and marking them as <code>primitive</code> types in ISLE. This required moving some functions to rust like <code>regpair</code>, <code>regpair_lo</code>, etc, but made working with their values in rust much nicer.</p>\n</blockquote>",
        "id": 305051784,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666218273
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1149034909\">PR review</a>.</p>",
        "id": 305131227,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1149034909\">PR review</a>.</p>",
        "id": 305131228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000495899\">PR review comment</a>:</p>\n<blockquote>\n<p>Not sure if there can be a phase where only one of <code>hi</code> and <code>lo</code> are real regs?   Also, it would be good to assert in the real reg case that we have a valid even/odd pair.</p>\n</blockquote>",
        "id": 305131229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000483001\">PR review comment</a>:</p>\n<blockquote>\n<p>Should be <code>ri</code> in the comment now.</p>\n</blockquote>",
        "id": 305131230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000508633\">PR review comment</a>:</p>\n<blockquote>\n<p>This also now seems to generate an extra <code>lgr</code> (see the <code>ctz_64</code> test case).</p>\n</blockquote>",
        "id": 305131231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000492999\">PR review comment</a>:</p>\n<blockquote>\n<p>There's actually no need now to assert we get the specific r2/r3 pair here.  The emit code might as well accept any valid register pair, i.e. only assert that we have an even/odd GPR pair, and that the tied input (if any) matches the output.</p>\n<p>Then the only place where r2/r3 are still hardcoded is in <code>s390x_get_operands</code>.</p>\n</blockquote>",
        "id": 305131232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000508375\">PR review comment</a>:</p>\n<blockquote>\n<p>So the old <code>select_bool_imm/reg</code> were written the way they were specifically to avoid unnecessary register moves.  It appears this new way brings those unnecessary moves back (see e.g. the many tests with an extra <code>lgr</code> in <code>icmp.clif</code>.  This is not a show-stopper for this PR, we can look into it afterwards -- just wondering if there's something we can to do improve on this again ...</p>\n</blockquote>",
        "id": 305131233,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000482470\">PR review comment</a>:</p>\n<blockquote>\n<p>Perfect!</p>\n</blockquote>",
        "id": 305131234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000493612\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I see.  Thanks for the explanation.</p>\n</blockquote>",
        "id": 305131235,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000487965\">PR review comment</a>:</p>\n<blockquote>\n<p><code>cmov_imm_regpair_lo/hi</code> were only used by the old division code, so they're really not needed anymore</p>\n</blockquote>",
        "id": 305131236,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265814
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1149078781\">PR review</a>.</p>",
        "id": 305131366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265875
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000512302\">PR review comment</a>:</p>\n<blockquote>\n<p>Yes, this is looking really nice now, thanks!</p>\n</blockquote>",
        "id": 305131367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666265875
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1149601082\">PR review</a>.</p>",
        "id": 305189284,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666283571
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000866960\">PR review comment</a>:</p>\n<blockquote>\n<p>That's much cleaner, thanks!</p>\n</blockquote>",
        "id": 305189286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666283571
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 305199083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666286230
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1149668910\">PR review</a>.</p>",
        "id": 305199384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666286316
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000913144\">PR review comment</a>:</p>\n<blockquote>\n<p>I changed this to require that both <code>hi</code> and <code>lo</code> are real registers, and to assert that they are valid.</p>\n</blockquote>",
        "id": 305199385,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666286316
    },
    {
        "content": "<p>elliottt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a> from <code>trevor/ssa-s390x</code> to <code>main</code>.</p>",
        "id": 305206419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666288605
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1149732636\">PR review</a>.</p>",
        "id": 305206570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666288653
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1000952802\">PR review comment</a>:</p>\n<blockquote>\n<p>I went ahead and reverted this commit, as it's not strictly necessary for removing uses of <code>reg_mod</code>.</p>\n</blockquote>",
        "id": 305206572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666288653
    },
    {
        "content": "<p>elliottt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1150144579\">PR review</a>.</p>",
        "id": 305257228,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666310424
    },
    {
        "content": "<p>elliottt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1001229732\">PR review comment</a>:</p>\n<blockquote>\n<p>I dug into this a bit, and have an explanation. Here's the program before register allocation:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">0</span>: <span class=\"nc\">args</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"o\">=%</span><span class=\"n\">r2</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">1</span>: <span class=\"nc\">lcgr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v131</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">2</span>: <span class=\"nc\">ngrk</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v132</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v128</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v131</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">3</span>: <span class=\"nc\">flogr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v133</span><span class=\"o\">/%</span><span class=\"n\">v134</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v132</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">4</span>: <span class=\"nc\">locghie</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v135</span><span class=\"o\">&lt;-%</span><span class=\"n\">v133</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">5</span>: <span class=\"nc\">lghi</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v136</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">63</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">6</span>: <span class=\"nc\">sgrk</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v137</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v136</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v135</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">7</span>: <span class=\"nc\">lgr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v130</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v129</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">8</span>: <span class=\"nc\">lgr</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r2</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">v130</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"n\">Inst</span><span class=\"w\"> </span><span class=\"mi\">9</span>: <span class=\"nc\">br</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">r14</span><span class=\"w\"></span>\n</code></pre></div>\n<p>There are two live-ranges that contribute to the move: one that covers the output of instruction 3 to where it's consumed in instruction 4 (<code>a</code>), and one that covers the output of instruction 4  to where it's consumed in instruction 6 (<code>b</code>). As the second live-range <code>b</code> is longer than <code>a</code>, it will be allocated first. As it has no fixed register constraints, the allocator is free to choose anything, and in the test output it chooses <code>%r4</code>. As the <code>flogr</code> instruction has a constraint that says it must use <code>%r2</code>/<code>%r3</code> for its output register, allocating a register for <code>%v133</code> produces a move from <code>%r2</code> to <code>%r4</code> once the live-range <code>a</code> is processed.</p>\n<p>It would be great to fix this problem by merging those two live-ranges into a single bundle, but regalloc2 is currently unable to merge live ranges when one contains a fixed register constraint, like <code>a</code>. It's not all bad news though, getting cranelift producing lowered output that's in SSA will enable some simplifications in regalloc2 that will enable merging these two live-ranges, so these sort of unnecessary moves should be less common in the future.</p>\n</blockquote>",
        "id": 305257229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666310424
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a>.</p>",
        "id": 305257254,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666310439
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1150145750\">PR review</a>.</p>",
        "id": 305257388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666310537
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#discussion_r1001408313\">PR review comment</a>:</p>\n<blockquote>\n<p>I see, thanks for having a look.  This looks all good to me now.</p>\n</blockquote>",
        "id": 305286767,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666333140
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1150397217\">PR review</a>.</p>",
        "id": 305286768,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666333140
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073#pullrequestreview-1150397400\">PR review</a>.</p>",
        "id": 305286787,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666333152
    },
    {
        "content": "<p>elliottt merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5073\">PR #5073</a>.</p>",
        "id": 305395292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1666369338
    }
]