[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211074804,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600904187
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a>.</p>",
        "id": 211074805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600904187
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223#pullrequestreview-495521607\">PR Review</a>.</p>",
        "id": 211124203,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600950823
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211157429,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600965488
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211159042,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600966267
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211161495,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600967464
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211166881,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1600969917
    },
    {
        "content": "<p><strong>bnjbvr</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a>.</p>",
        "id": 211230673,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601022386
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223#pullrequestreview-496272622\">PR Review</a>.</p>",
        "id": 211237231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601027208
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211681277,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601412089
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223#pullrequestreview-499204919\">PR Review</a>.</p>",
        "id": 211729825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601455060
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223#pullrequestreview-499204919\">PR Review</a>.</p>",
        "id": 211729826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601455060
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223#discussion_r497338357\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Here (and in the aarch64 code), can you use a const value to represent the offset to the TLS? (Maybe precise in the comment \"caller\" TLS, too?)</p>\n<p>A few questions for my own understanding of this solution compared to others:</p>\n<ul>\n<li>would it make sense to put this responsibility on the caller's side, just after the call site, in the baldrdash glue? It's already done for calls to imports, as far as i can tell: <a href=\"https://searchfox.org/mozilla-central/source/js/src/wasm/cranelift/src/wasm2clif.rs#1012\">https://searchfox.org/mozilla-central/source/js/src/wasm/cranelift/src/wasm2clif.rs#1012</a></li>\n<li>could we mark the TLS reg as part of the callee-saved registers in the Baldrdash calling convention, and not do anything particular here for this register?</li>\n</ul>\n</blockquote>",
        "id": 211729827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601455060
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211837646,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601502205
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a> from <code>baldrdash-2020</code> to <code>main</code>:</p>\n<blockquote>\n<p>As part of a Wasm JIT update, SpiderMonkey is changing its internal<br>\nWebAssembly function ABI. The new ABI's frame format includes \"caller<br>\nTLS\" and \"callee TLS\" slots. The details of where these come from are<br>\nnot important; from Cranelift's point of view, the only relevant<br>\nrequirement is that we have two on-stack args that are always present<br>\n(offsetting other on-stack args), and that we define special argument<br>\npurposes so that we can supply values for these slots.</p>\n<p>Note that this adds a <em>new</em> ABI (a variant of the Baldrdash ABI) because<br>\nwe do not want to tightly couple the landing of this PR to the landing<br>\nof the changes in SpiderMonkey; it's better if both the old and new<br>\nbehavior remain available in Cranelift, so SpiderMonkey can continue to<br>\nvendor Cranelift even if it does not land (or backs out) the ABI change.</p>\n<p>Furthermore, note that this needs to be a Cranelift-level change (i.e.<br>\ncannot be done purely from the translator environment implementation)<br>\nbecause the special TLS arguments must always go on the stack, which<br>\nwould not otherwise happen with the usual argument-placement logic; and<br>\nthere is no primitive to push a value directly in CLIF code (the notion<br>\nof a stack frame is a lower-level concept).</p>\n<p>Corresponds to patch on SpiderMonkey <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1657802\">bug 1657802</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 211838882,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601502965
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223#pullrequestreview-499842749\">PR Review</a>.</p>",
        "id": 211839261,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601503202
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223#discussion_r497825396\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Done, thanks! A small point, but it's actually the <em>callee</em> TLS that we restore; my reading of the ABI document is that we're supposed to leave the TLS register value unchanged, i.e., it must be the same at exit as it is at entry, so that would be the callee value.</p>\n<blockquote>\n<p>would it make sense to put this responsibility on the caller's side</p>\n</blockquote>\n<p>I thought about this too, but I don't think this follows the ABI strictly, as (given the above) we must do the restoration before the return.</p>\n<blockquote>\n<p>could we mark the TLS reg as part of the callee-saved registers</p>\n</blockquote>\n<p>I considered this too, but tweaking the <code>RealRegUniverse</code> construction to work properly with <em>two</em> optionally-allocatable registers (the pinned register and the TLS register) proved a bit too complex; the indices for registers would have to be dependent on the flags/calling convention. If we refactor this as we discussed a few days ago, then we might want to reconsider, but for now, it seems simpler just to restore the register.</p>\n</blockquote>",
        "id": 211839263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601503202
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2223\">PR #2223</a>.</p>",
        "id": 211848564,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601505187
    }
]