[
    {
        "content": "<p>julian-seward1 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312\">PR #2312</a> from <code>arm64-simd-pminmax-round</code> to <code>main</code>:</p>\n<blockquote>\n<p>…structions</p>\n<p>This patch implements, for aarch64, the following wasm SIMD extensions</p>\n<p>Floating-point rounding instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/232\">https://github.com/WebAssembly/simd/pull/232</a></p>\n<p>Pseudo-Minimum and Pseudo-Maximum instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/122\">https://github.com/WebAssembly/simd/pull/122</a></p>\n<p>The changes are straightforward:</p>\n<ul>\n<li>\n<p><code>build.rs</code>: the relevant tests have been enabled</p>\n</li>\n<li>\n<p><code>cranelift/codegen/meta/src/shared/instructions.rs</code>: new CLIF instructions<br>\n<code>fmin_pseudo</code> and <code>fmax_pseudo</code>.  The wasm rounding instructions do not need<br>\n  any new CLIF instructions.</p>\n</li>\n<li>\n<p><code>cranelift/wasm/src/code_translator.rs</code>: translation into CLIF; this is<br>\n  pretty much the same as any other unary or binary vector instruction (for<br>\n  the rounding and the pmin/max respectively)</p>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/lower_inst.rs</code>:</p>\n<ul>\n<li>\n<p><code>fmin_pseudo</code> and <code>fmax_pseudo</code> are converted into a two instruction<br>\n  sequence, <code>fcmpgt</code> followed by <code>bsl</code></p>\n</li>\n<li>\n<p>the CLIF rounding instructions are converted to a suitable vector<br>\n<code>frint{n,z,p,m}</code> instruction.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/inst/mod.rs</code>: minor extension of <code>pub\n  enum VecMisc2</code> to handle the rounding operations.  And corresponding <code>emit</code><br>\n  cases.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 214292397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603446198
    },
    {
        "content": "<p><strong>julian-seward1</strong> requested <a href=\"https://github.com/yurydelendik\">yurydelendik</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312\">PR #2312</a>.</p>",
        "id": 214314805,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603460695
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312#pullrequestreview-515795549\">PR Review</a>.</p>",
        "id": 214330264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603468153
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312#discussion_r510978340\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Based on the referred PR and tests cases at simd_XX_pmin_pmax.wast's , the NaN behavior is different. I recommend to copy <code>pmin(a, b) := b &lt; a ? b : a</code> definition language here is extract NaN propagation from it.</p>\n</blockquote>",
        "id": 214330265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603468153
    },
    {
        "content": "<p>yurydelendik edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312#discussion_r510978340\">PR Review Comment</a>.</p>",
        "id": 214330382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603468204
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312#pullrequestreview-515814678\">PR Review</a>.</p>",
        "id": 214333032,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603469599
    },
    {
        "content": "<p>julian-seward1 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312\">PR #2312</a> from <code>arm64-simd-pminmax-round</code> to <code>main</code>:</p>\n<blockquote>\n<p>…structions</p>\n<p>This patch implements, for aarch64, the following wasm SIMD extensions</p>\n<p>Floating-point rounding instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/232\">https://github.com/WebAssembly/simd/pull/232</a></p>\n<p>Pseudo-Minimum and Pseudo-Maximum instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/122\">https://github.com/WebAssembly/simd/pull/122</a></p>\n<p>The changes are straightforward:</p>\n<ul>\n<li>\n<p><code>build.rs</code>: the relevant tests have been enabled</p>\n</li>\n<li>\n<p><code>cranelift/codegen/meta/src/shared/instructions.rs</code>: new CLIF instructions<br>\n<code>fmin_pseudo</code> and <code>fmax_pseudo</code>.  The wasm rounding instructions do not need<br>\n  any new CLIF instructions.</p>\n</li>\n<li>\n<p><code>cranelift/wasm/src/code_translator.rs</code>: translation into CLIF; this is<br>\n  pretty much the same as any other unary or binary vector instruction (for<br>\n  the rounding and the pmin/max respectively)</p>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/lower_inst.rs</code>:</p>\n<ul>\n<li>\n<p><code>fmin_pseudo</code> and <code>fmax_pseudo</code> are converted into a two instruction<br>\n  sequence, <code>fcmpgt</code> followed by <code>bsl</code></p>\n</li>\n<li>\n<p>the CLIF rounding instructions are converted to a suitable vector<br>\n<code>frint{n,z,p,m}</code> instruction.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/inst/mod.rs</code>: minor extension of <code>pub\n  enum VecMisc2</code> to handle the rounding operations.  And corresponding <code>emit</code><br>\n  cases.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 214340624,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603473449
    },
    {
        "content": "<p>julian-seward1 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312\">PR #2312</a> from <code>arm64-simd-pminmax-round</code> to <code>main</code>:</p>\n<blockquote>\n<p>…structions</p>\n<p>This patch implements, for aarch64, the following wasm SIMD extensions</p>\n<p>Floating-point rounding instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/232\">https://github.com/WebAssembly/simd/pull/232</a></p>\n<p>Pseudo-Minimum and Pseudo-Maximum instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/122\">https://github.com/WebAssembly/simd/pull/122</a></p>\n<p>The changes are straightforward:</p>\n<ul>\n<li>\n<p><code>build.rs</code>: the relevant tests have been enabled</p>\n</li>\n<li>\n<p><code>cranelift/codegen/meta/src/shared/instructions.rs</code>: new CLIF instructions<br>\n<code>fmin_pseudo</code> and <code>fmax_pseudo</code>.  The wasm rounding instructions do not need<br>\n  any new CLIF instructions.</p>\n</li>\n<li>\n<p><code>cranelift/wasm/src/code_translator.rs</code>: translation into CLIF; this is<br>\n  pretty much the same as any other unary or binary vector instruction (for<br>\n  the rounding and the pmin/max respectively)</p>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/lower_inst.rs</code>:</p>\n<ul>\n<li>\n<p><code>fmin_pseudo</code> and <code>fmax_pseudo</code> are converted into a two instruction<br>\n  sequence, <code>fcmpgt</code> followed by <code>bsl</code></p>\n</li>\n<li>\n<p>the CLIF rounding instructions are converted to a suitable vector<br>\n<code>frint{n,z,p,m}</code> instruction.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/inst/mod.rs</code>: minor extension of <code>pub\n  enum VecMisc2</code> to handle the rounding operations.  And corresponding <code>emit</code><br>\n  cases.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 214343445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603474848
    },
    {
        "content": "<p>julian-seward1 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312\">PR #2312</a> from <code>arm64-simd-pminmax-round</code> to <code>main</code>:</p>\n<blockquote>\n<p>…structions</p>\n<p>This patch implements, for aarch64, the following wasm SIMD extensions</p>\n<p>Floating-point rounding instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/232\">https://github.com/WebAssembly/simd/pull/232</a></p>\n<p>Pseudo-Minimum and Pseudo-Maximum instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/122\">https://github.com/WebAssembly/simd/pull/122</a></p>\n<p>The changes are straightforward:</p>\n<ul>\n<li>\n<p><code>build.rs</code>: the relevant tests have been enabled</p>\n</li>\n<li>\n<p><code>cranelift/codegen/meta/src/shared/instructions.rs</code>: new CLIF instructions<br>\n<code>fmin_pseudo</code> and <code>fmax_pseudo</code>.  The wasm rounding instructions do not need<br>\n  any new CLIF instructions.</p>\n</li>\n<li>\n<p><code>cranelift/wasm/src/code_translator.rs</code>: translation into CLIF; this is<br>\n  pretty much the same as any other unary or binary vector instruction (for<br>\n  the rounding and the pmin/max respectively)</p>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/lower_inst.rs</code>:</p>\n<ul>\n<li>\n<p><code>fmin_pseudo</code> and <code>fmax_pseudo</code> are converted into a two instruction<br>\n  sequence, <code>fcmpgt</code> followed by <code>bsl</code></p>\n</li>\n<li>\n<p>the CLIF rounding instructions are converted to a suitable vector<br>\n<code>frint{n,z,p,m}</code> instruction.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/inst/mod.rs</code>: minor extension of <code>pub\n  enum VecMisc2</code> to handle the rounding operations.  And corresponding <code>emit</code><br>\n  cases.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 214416470,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603529854
    },
    {
        "content": "<p>julian-seward1 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312\">PR #2312</a> from <code>arm64-simd-pminmax-round</code> to <code>main</code>:</p>\n<blockquote>\n<p>…structions</p>\n<p>This patch implements, for aarch64, the following wasm SIMD extensions</p>\n<p>Floating-point rounding instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/232\">https://github.com/WebAssembly/simd/pull/232</a></p>\n<p>Pseudo-Minimum and Pseudo-Maximum instructions<br>\n<a href=\"https://github.com/WebAssembly/simd/pull/122\">https://github.com/WebAssembly/simd/pull/122</a></p>\n<p>The changes are straightforward:</p>\n<ul>\n<li>\n<p><code>build.rs</code>: the relevant tests have been enabled</p>\n</li>\n<li>\n<p><code>cranelift/codegen/meta/src/shared/instructions.rs</code>: new CLIF instructions<br>\n<code>fmin_pseudo</code> and <code>fmax_pseudo</code>.  The wasm rounding instructions do not need<br>\n  any new CLIF instructions.</p>\n</li>\n<li>\n<p><code>cranelift/wasm/src/code_translator.rs</code>: translation into CLIF; this is<br>\n  pretty much the same as any other unary or binary vector instruction (for<br>\n  the rounding and the pmin/max respectively)</p>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/lower_inst.rs</code>:</p>\n<ul>\n<li>\n<p><code>fmin_pseudo</code> and <code>fmax_pseudo</code> are converted into a two instruction<br>\n  sequence, <code>fcmpgt</code> followed by <code>bsl</code></p>\n</li>\n<li>\n<p>the CLIF rounding instructions are converted to a suitable vector<br>\n<code>frint{n,z,p,m}</code> instruction.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>cranelift/codegen/src/isa/aarch64/inst/mod.rs</code>: minor extension of <code>pub\n  enum VecMisc2</code> to handle the rounding operations.  And corresponding <code>emit</code><br>\n  cases.</p>\n</li>\n</ul>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 214547664,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603702649
    },
    {
        "content": "<p>julian-seward1 merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2312\">PR #2312</a>.</p>",
        "id": 214551584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1603705029
    }
]