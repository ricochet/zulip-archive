[
    {
        "content": "<p><strong>ajalt</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477\">PR #9477</a>.</p>",
        "id": 477302200,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729113535
    },
    {
        "content": "<p><strong>ajalt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477\">PR #9477</a>.</p>",
        "id": 477302201,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729113535
    },
    {
        "content": "<p>ajalt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477\">PR #9477</a> from <code>ajalt:wasi-preopen-dir-perms</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>The current <code>wasi_config_preopen_dir</code> function does not expose the <code>dir_perms</code> and <code>file_perms</code> parameters that were added to <code>preopened_dir</code>. This commit adds them and updates the docs for those functions to reflect the current signature.</p>\n<p>This is a prerequisite for <a href=\"https://github.com/bytecodealliance/wasmtime-py/issues/251\">https://github.com/bytecodealliance/wasmtime-py/issues/251</a></p>\n<p>This change isn't backwards compatible, so please let me know if there's anything I need to do differently. </p>\n</blockquote>",
        "id": 477302202,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729113535
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2373817487\">PR review</a>:</p>\n<blockquote>\n<p>Thanks for this! Could you also add some <code>#define</code> entries for the various flags here? Perhaps a flag-per-bit and a <code>*_ALL</code> define which has everything OR'd together?</p>\n<p>Also I think it might be best to check for unknown bits in the method itself. For example using <code>from_bits</code> and translating the optional return value into an error being returned. </p>\n</blockquote>",
        "id": 477315007,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729119055
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#issuecomment-2418100488\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477\">PR #9477</a>:</p>\n<blockquote>\n<p>Oh sorry, forgot to mention, but:</p>\n<blockquote>\n<p>This change isn't backwards compatible, so please let me know if there's anything I need to do differently.</p>\n</blockquote>\n<p>That's ok, so no worries! We don't provide an ironclad guarantee of stability in the C API at this time, so it's ok to change it.</p>\n</blockquote>",
        "id": 477315104,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729119097
    },
    {
        "content": "<p>ajalt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477\">PR #9477</a>.</p>",
        "id": 477318592,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729121269
    },
    {
        "content": "<p>ajalt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#discussion_r1803908313\">PR review comment</a>:</p>\n<blockquote>\n<p>I didn't see any other <code>#defines</code> for enums that I could use for a naming convention, so let me know if these should be moved or renamed.</p>\n</blockquote>",
        "id": 477318820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729121408
    },
    {
        "content": "<p>ajalt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2373850350\">PR review</a>.</p>",
        "id": 477318821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729121408
    },
    {
        "content": "<p>ajalt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2373852005\">PR review</a>.</p>",
        "id": 477319111,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729121541
    },
    {
        "content": "<p>ajalt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#discussion_r1803909561\">PR review comment</a>:</p>\n<blockquote>\n<p>This feels clunky, but I'm not a rust expert so if you know of a more idiomatic way of handling the error cases, I'd be happy to clean this up.</p>\n</blockquote>",
        "id": 477319113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729121541
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2373861931\">PR review</a>.</p>",
        "id": 477320328,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729122370
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#discussion_r1803917254\">PR review comment</a>:</p>\n<blockquote>\n<p>Looks good to me!</p>\n</blockquote>",
        "id": 477320329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729122370
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#discussion_r1803917181\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh for this I might recommend:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">dir_perms</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">wasmtime_wasi</span><span class=\"p\">::</span><span class=\"n\">DirPerms</span><span class=\"p\">::</span><span class=\"n\">from_bits</span><span class=\"p\">(</span><span class=\"n\">dir_perms</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">.</span><span class=\"n\">ok_or_else</span><span class=\"p\">(</span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">anyhow</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"s\">\"invalid directory permissions\"</span><span class=\"p\">))</span><span class=\"o\">?</span><span class=\"p\">;</span>\n</code></pre></div>\n<p>That way you can avoid the nested closures</p>\n</blockquote>",
        "id": 477320330,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729122370
    },
    {
        "content": "<p>ajalt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2375692627\">PR review</a>.</p>",
        "id": 477478699,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729181314
    },
    {
        "content": "<p>ajalt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#discussion_r1805056566\">PR review comment</a>:</p>\n<blockquote>\n<p>That's certainly cleaner! But <code>wasi_config_preopen_dir</code> returns <code>bool</code> rather than a <code>Result</code>, so it doesn't appear that you can use the <code>?</code> operator. Is there a way to do an unwrap / early return like that in a function that returns <code>bool</code>?<br>\n Or would it be better to change the function signature? Returning strings from a C API would require callers to <code>free</code> the returned result, but we could potentially use a numerical error code instead.</p>\n</blockquote>",
        "id": 477478703,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729181315
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2381474464\">PR review</a>.</p>",
        "id": 478006040,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729503366
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#discussion_r1808428557\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah excellent point! I forgot this returns <code>bool</code>, so sorry about that.</p>\n<p>For that I'd recommend a <code>match</code>-per-translation-of-config to return <code>false</code> early and that way it doesn't have to nest.</p>\n<p>I do like the idea of changing the function signature too. It's overdue for the WASI APIs here. In doing so though it might be best to rename and shuffle things around. For example the original intention of <code>wasi.h</code> was to become a standard API like the wasm-c-api proposal (which hasn't finished being standardized yet). In lieu of that nowadays it's probably best to rename things to <code>wasmtime_wasi_*</code>, move the header to <code>wasmtime/wasi.h</code>, and update idioms to match the rest of the C API (e.g. <code>wasmtime_error_t*</code> instead of <code>bool</code>). That's a bit of a larger project though so how about we keep the <code>bool</code> for now and defer this refactoring for later?</p>\n</blockquote>",
        "id": 478006041,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729503366
    },
    {
        "content": "<p>ajalt updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477\">PR #9477</a>.</p>",
        "id": 478098685,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729526909
    },
    {
        "content": "<p>ajalt submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2382588315\">PR review</a>.</p>",
        "id": 478099267,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729527058
    },
    {
        "content": "<p>ajalt created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#discussion_r1809108556\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks, that's much cleaner. That's also the pattern already being used for the other parameters of the function, which I somehow didn't recognize <span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>. Sorry for the churn.</p>\n</blockquote>",
        "id": 478099269,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729527059
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477#pullrequestreview-2385460297\">PR review</a>:</p>\n<blockquote>\n<p>No worries!</p>\n</blockquote>",
        "id": 478303545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729608624
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9477\">PR #9477</a>.</p>",
        "id": 478308901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729609602
    }
]