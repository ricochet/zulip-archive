[
    {
        "content": "<p>bnjbvr edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540\">PR #4540</a> from <code>move-emit-to-memory-to-mach-compile-result</code> to <code>main</code>:</p>\n<blockquote>\n<p>This small refactoring makes it clearer to me that emitting to memory<br>\ndoesn't require anything else from the compilation <code>Context</code>. While it's<br>\na trivial change, it's a small public API change that shouldn't cause<br>\ntoo much trouble, and doesn't seem RFC-worthy. Happy to hear different<br>\nopinions about this, though!<br>\n</p>\n</blockquote>",
        "id": 291559138,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659351868
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1057642503\">PR review</a>.</p>",
        "id": 291608745,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659375491
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1057642503\">PR review</a>.</p>",
        "id": 291608746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659375491
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#discussion_r934765786\">PR review comment</a>:</p>\n<blockquote>\n<p>This is the last bit of the refactor I had in mind I think: could we turn this <code>emit_to_memory</code> into just an accessor on <code>self.buffer.data()</code>, and let the embedder do the unsafe dump-the-data-into-a-raw-pointer if they desire?</p>\n<p>The major thing we get out of that is to remove the one remaining <code>unsafe</code> API from <code>cranelift-codegen</code>; and it feels more idiomatic to me now that we have a type <code>CompiledCode</code> that wraps up the result to have an accessor providing access to a part of it, rather than a method that splats that content somewhere (noun rather than verb basically). Does that make sense?</p>\n</blockquote>",
        "id": 291608747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659375491
    },
    {
        "content": "<p>bnjbvr updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540\">PR #4540</a> from <code>move-emit-to-memory-to-mach-compile-result</code> to <code>main</code>.</p>",
        "id": 291702022,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659443595
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1058684957\">PR review</a>.</p>",
        "id": 291702170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659443684
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#discussion_r935530619\">PR review comment</a>:</p>\n<blockquote>\n<p>Nice, it even leads to more beautiful call sites which sometimes don't even have to use <code>unsafe</code> <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> </p>\n</blockquote>",
        "id": 291702171,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659443684
    },
    {
        "content": "<p><strong>bnjbvr</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540\">PR #4540</a>.</p>",
        "id": 291705460,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659445333
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#discussion_r935579453\">PR review comment</a>:</p>\n<blockquote>\n<p>Why is this made private?</p>\n</blockquote>",
        "id": 291706753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446037
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1058749154\">PR review</a>.</p>",
        "id": 291706754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446037
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#discussion_r935579453\">PR review comment</a>.</p>",
        "id": 291706853,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446075
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#discussion_r935582070\">PR review comment</a>:</p>\n<blockquote>\n<p>Is there such an instance of an out-of-tree backend? Thought a getter would be sufficient, as suggested previously.</p>\n</blockquote>",
        "id": 291707090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446178
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1058752992\">PR review</a>.</p>",
        "id": 291707091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446178
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1058753449\">PR review</a>.</p>",
        "id": 291707116,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446191
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1058755649\">PR review</a>.</p>",
        "id": 291707245,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446269
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#discussion_r935583873\">PR review comment</a>:</p>\n<blockquote>\n<p>Not that I know of. It might exist in the future. Also there may be benefits to moving all existing backends to a separate crate to make compilation of cranelift itself faster by allowing more parallism.</p>\n</blockquote>",
        "id": 291707246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659446269
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#discussion_r935625641\">PR review comment</a>:</p>\n<blockquote>\n<p>Then it makes sense to add some kind of setter whenever it is required. (Good point about moving Cranelift backends to other crates, though; that would certainly help compiling it faster.)</p>\n</blockquote>",
        "id": 291711558,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659448403
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1058816463\">PR review</a>.</p>",
        "id": 291711562,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659448404
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540#pullrequestreview-1059285027\">PR review</a>.</p>",
        "id": 291754329,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659467132
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4540\">PR #4540</a>.</p>",
        "id": 291754347,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1659467141
    }
]