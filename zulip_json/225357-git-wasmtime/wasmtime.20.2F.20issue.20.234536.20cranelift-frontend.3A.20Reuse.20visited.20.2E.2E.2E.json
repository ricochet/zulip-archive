[
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#issuecomment-1196071645\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">issue #4536</a>:</p>\n<blockquote>\n<p>Very cool!</p>\n<p>If I'm not mis-reading things, <code>Block</code> does not need to be dropped (it's just a newtype for u32 and it doesn't implement <code>Drop</code>), so <code>HashSet::clear</code> is constant-time. In that case, how about just clearing the set before using it, where you're currently <code>debug_assert</code>ing that it's empty, and removing all the magic drop-guard machinery?</p>\n</blockquote>",
        "id": 290967549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658877103
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#issuecomment-1196083606\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">issue #4536</a>:</p>\n<blockquote>\n<p>Also, <code>can_optimize_var_lookup</code> is only called from <code>use_var_nonlocal</code>, which has a <code>&amp;mut self</code>. So you could change <code>can_optimize_var_lookup</code> to also take <code>&amp;mut self</code> and then get rid of the <code>RefCell</code>.</p>\n</blockquote>",
        "id": 290968501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658877864
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#issuecomment-1196084651\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">issue #4536</a>:</p>\n<blockquote>\n<blockquote>\n<p>Also, <code>can_optimize_var_lookup</code> is only called from <code>use_var_nonlocal</code>, which has a <code>&amp;mut self</code>. So you could change <code>can_optimize_var_lookup</code> to also take <code>&amp;mut self</code> and then get rid of the <code>RefCell</code>.</p>\n</blockquote>\n<p>Nice, I didn't notice that!</p>\n</blockquote>",
        "id": 290968536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658877893
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#issuecomment-1196087080\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">issue #4536</a>:</p>\n<blockquote>\n<blockquote>\n<p>If I'm not mis-reading things, <code>Block</code> does not need to be dropped (it's just a newtype for u32 and it doesn't implement <code>Drop</code>), so <code>HashSet::clear</code> is constant-time. In that case, how about just clearing the set before using it, where you're currently <code>debug_assert</code>ing that it's empty, and removing all the magic drop-guard machinery?</p>\n</blockquote>\n<p>The idea was to empty the set as soon as it isn't used anymore, rather than at the last minute before use, but I guess there isn't really a good reason for that since it doesn't cut down on peak memory usage (which is kind of the whole point of this PR!)</p>\n</blockquote>",
        "id": 290968617,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658877957
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536#issuecomment-1196092780\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4536\">issue #4536</a>:</p>\n<blockquote>\n<p>Yeah, rather than saying \"clear is constant-time\", I should have said that it doesn't do anything except mark the table as empty. So it doesn't matter when you do it, as long as nobody else looks at it.</p>\n</blockquote>",
        "id": 290968844,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1658878109
    }
]