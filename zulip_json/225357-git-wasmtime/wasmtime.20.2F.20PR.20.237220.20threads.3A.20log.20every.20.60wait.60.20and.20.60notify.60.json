[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220\">PR #7220</a> from <code>abrown:log-wait-notify</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>When troubleshooting deadlocks in WebAssembly modules, it is important to understand which <code>wait</code> instructions are still pending a <code>notify</code>. It would be nice to have some kind of <code>--warn-deadlock-after=1s</code> flag available that would poll the parking lot for <code>wait</code>s hanging past the time limit, but I realized the real value would be to tie the <code>wait</code> instruction (through CLIF) to the original source code, if debug information were available. This did not seem to be entirely feasible, since CLIF loses the original Wasm source context (is this true?) and I was not confident that we would be able to use <code>addr2line</code> to map from Wasm instructions to source (e.g., see @cfallin's<br>\n<a href=\"https://github.com/gimli-rs/addr2line/issues/265\">issue</a>).</p>\n<p>Instead, this change simply logs each valid <code>wait</code> and <code>notify</code> execution, leaving it to the user to figure out which one is hanging (should not be too difficult) and how to map this back to their source code (more difficult).</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 396147290,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050004
    },
    {
        "content": "<p>abrown edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220\">PR #7220</a>:</p>\n<blockquote>\n<p>When troubleshooting deadlocks in WebAssembly modules, it is important to understand which <code>wait</code> instructions are still pending a <code>notify</code>. It would be nice to have some kind of <code>--warn-deadlock-after=1s</code> flag available that would poll the parking lot for <code>wait</code>s hanging past the time limit, but I realized the real value would be to tie the <code>wait</code> instruction (through CLIF) to the original source code, if debug information were available. This did not seem to be entirely feasible, since CLIF loses the original Wasm source context (is this true?) and I was not confident that we would be able to use <code>addr2line</code> to map from Wasm instructions to source (e.g., see @cfallin's <a href=\"https://github.com/gimli-rs/addr2line/issues/265\">issue</a>).</p>\n<p>Instead, this change simply logs each valid <code>wait</code> and <code>notify</code> execution, leaving it to the user to figure out which one is hanging (should not be too difficult) and how to map this back to their source code (more difficult).</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 396147352,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050035
    },
    {
        "content": "<p><strong>abrown</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220\">PR #7220</a> as ready for review.</p>",
        "id": 396147390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050055
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220\">PR #7220</a>.</p>",
        "id": 396147394,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050056
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220\">PR #7220</a>.</p>",
        "id": 396147397,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050057
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#pullrequestreview-1672294075\">PR review</a>:</p>\n<blockquote>\n<p>lgtm, modulo a style change across all of these traces</p>\n</blockquote>",
        "id": 396149027,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050689
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#pullrequestreview-1672294075\">PR review</a>:</p>\n<blockquote>\n<p>lgtm, modulo a style change across all of these traces</p>\n</blockquote>",
        "id": 396149028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050689
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#discussion_r1355614875\">PR review comment</a>:</p>\n<blockquote>\n<p>instead of using the format string, use <code>log::trace!(\"memory.atomic.notify\", addr=addr_index, count=count);</code> to provide structured values.</p>\n</blockquote>",
        "id": 396149029,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697050689
    },
    {
        "content": "<p>abrown submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#pullrequestreview-1672663490\">PR review</a>.</p>",
        "id": 396170588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697061558
    },
    {
        "content": "<p>abrown created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#discussion_r1355825934\">PR review comment</a>:</p>\n<blockquote>\n<p>I tried that but it complains: I think to use the key-value syntax we need to set <code>target: ...,</code> up front and still provide a string at the end (see <a href=\"https://docs.rs/log/latest/log/macro.log.html\"><code>log::log!</code></a>)?</p>\n</blockquote>",
        "id": 396170590,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697061558
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#pullrequestreview-1672689744\">PR review</a>.</p>",
        "id": 396173849,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697063305
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#discussion_r1355844192\">PR review comment</a>:</p>\n<blockquote>\n<p>oh, my bad. I just realized this is <code>log</code> and the key value syntax only works with the <code>tracing</code> crate, and I forgot we use <code>log</code> in wasmtime-runtime in order to keep the dependencies as small as possible, but <code>tracing</code> in wasmtime-wit-bindgen, wasi, etc.</p>\n<p>So, your PR is good to go as is. I don't think we need should using <code>log</code> vs <code>tracing</code> down in the runtime now, unless someone really wants to.</p>\n</blockquote>",
        "id": 396173850,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697063305
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220#pullrequestreview-1672689951\">PR review</a>.</p>",
        "id": 396173875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697063319
    },
    {
        "content": "<p>abrown merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7220\">PR #7220</a>.</p>",
        "id": 396178568,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1697066666
    }
]