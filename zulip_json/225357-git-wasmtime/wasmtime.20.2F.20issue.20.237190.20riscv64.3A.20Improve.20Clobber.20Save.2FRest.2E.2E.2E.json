[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7190\">issue #7190</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>In the RISC-V backend the clobber save and restore implementations use a negative SP offset. We should switch these to always use a positive SP offset.</p>\n<p>When the Compressed instruction extension is enabled we have access to <code>c.l*sp</code> and <code>c.s*sp</code> which allow us to store and load any register into the stack using a positive SP offset.</p>\n<p>Implementing this as a positive offset has no downsides even when the C extension is disabled. So there isn't very much of a downside to this.</p>\n</blockquote>",
        "id": 395544264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696772960
    },
    {
        "content": "<p><a href=\"https://github.com/afonso360\">afonso360</a> added the cranelift:area:riscv64 label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7190\">Issue #7190</a>.</p>",
        "id": 395544265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696772960
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7190\">issue #7190</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>In the RISC-V backend the clobber save and restore implementations use a negative SP offset. We should switch these to always use a positive SP offset.</p>\n<p>When the Compressed instruction extension is enabled we have access to <code>c.l*sp</code> and <code>c.s*sp</code> which allow us to store and load any register into the stack using a positive SP offset.</p>\n<p>Implementing this as a positive offset has no downsides when the C extension is disabled. So there isn't very much of a downside to this.</p>\n</blockquote>",
        "id": 395544274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696772969
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7190\">issue #7190</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>In the RISC-V backend the clobber save and restore implementations use a negative SP offset. We should switch these to always use a positive SP offset.</p>\n<p>When the Compressed instruction extension is enabled we have access to <code>c.l*sp</code> and <code>c.s*sp</code> which allow us to store and load any register into the stack using a positive SP offset.</p>\n<p>Using these instruction in the prologue and epilogue would be nice due to lower instruction footprints.</p>\n<p>Implementing this as a positive offset has no downsides when the C extension is disabled. So there isn't very much of a downside to this.</p>\n</blockquote>",
        "id": 395544373,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696773031
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7190\">issue #7190</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>In the RISC-V backend the clobber save and restore implementations use a negative SP offset. We should switch these to always use a positive SP offset.</p>\n<p>When the Compressed instruction extension is enabled we have access to <code>c.ldsp</code> and <code>c.sdsp</code> which allow us to store and load any register into the stack using a positive SP offset.</p>\n<p>Using these instruction in the prologue and epilogue would be nice due to lower instruction footprints.</p>\n<p>Implementing this as a positive offset has no downsides when the C extension is disabled. So there isn't very much of a downside to this.</p>\n</blockquote>",
        "id": 395544535,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696773157
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7190\">issue #7190</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>In the RISC-V backend the clobber save and restore implementation uses a negative SP offset. We should switch it to always use a positive SP offset.</p>\n<p>When the Compressed instruction extension is enabled we have access to <code>c.ldsp</code> and <code>c.sdsp</code> which allow us to store and load any register into the stack using a positive SP offset.</p>\n<p>Using these instruction in the prologue and epilogue would be nice due to lower instruction footprints.</p>\n<p>Implementing this as a positive offset has no downsides when the C extension is disabled. So there isn't very much of a downside to this.</p>\n</blockquote>",
        "id": 395572706,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696795583
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7190\">issue #7190</a>:</p>\n<blockquote>\n<p><span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> Hey,</p>\n<p>In the RISC-V backend the clobber save and restore implementation uses a negative SP offset. We should switch it to always use a positive SP offset.</p>\n<p>When the Compressed instruction extension is enabled we have access to <code>c.ldsp</code> and <code>c.sdsp</code> which allow us to store and load any register into the stack using a positive SP offset.</p>\n<p>Using these instruction in the prologue and epilogue would be nice due to the lower instruction footprint.</p>\n<p>Implementing this as a positive offset has no downsides when the C extension is disabled. So there isn't very much of a downside to this.</p>\n</blockquote>",
        "id": 395572724,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1696795609
    }
]