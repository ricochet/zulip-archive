[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198#issuecomment-1504198443\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198\">issue #6198</a>:</p>\n<blockquote>\n<p>Can unsigned_add_overflow_condition now be removed from TargetIsa?</p>\n</blockquote>",
        "id": 348570826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681251407
    },
    {
        "content": "<p>T0b1-iOS <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198#issuecomment-1504202904\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198\">issue #6198</a>:</p>\n<blockquote>\n<blockquote>\n<p>Can unsigned_add_overflow_condition now be removed from TargetIsa?</p>\n</blockquote>\n<p>I would think that there is no reasonable use-case anymore since I don't see a way to get access to any flag for an add directly and with compares it does not make a lot of sense.<br>\nI don't know if there is anyone who uses this, though.<br>\n</p>\n</blockquote>",
        "id": 348571633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681251742
    },
    {
        "content": "<p>jameysharp <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198#issuecomment-1504226225\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198\">issue #6198</a>:</p>\n<blockquote>\n<p>Good catch! It looks like the only real callers of <code>unsigned_add_overflow_condition</code> were deleted last year, in #5123 and #5162.</p>\n<p>So yeah, I'd say let's delete that from both <code>TargetIsa</code> and cranelift-wasm's <code>FuncEnvironment</code>.</p>\n<p>But I'd prefer to do that deletion in a separate PR. It shouldn't overlap with this one I think, so we can merge them in any order.</p>\n<p>Meanwhile, this PR looks like exactly the deletions I'd expect for removing these two instructions, so it's probably in good shape. I just want to ask, are the deleted tests and lowering rules all covered by equivalents for the new instructions? I didn't look closely at #5784.</p>\n<p>Also I want to double-check with @cfallin that there are no concerns about dropping <code>iadd_cout</code> and <code>isub_bout</code> now that we have equivalents with defined signed/unsigned behavior. Should we maybe keep both versions around for one release, for easier migration?</p>\n</blockquote>",
        "id": 348575491,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681253447
    },
    {
        "content": "<p>T0b1-iOS <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198#issuecomment-1504246985\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198\">issue #6198</a>:</p>\n<blockquote>\n<blockquote>\n<p>Meanwhile, this PR looks like exactly the deletions I'd expect for removing these two instructions, so it's probably in good shape. I just want to ask, are the deleted tests and lowering rules all covered by equivalents for the new instructions? I didn't look closely at #5784.</p>\n</blockquote>\n<p>The lowering rules are covered, <code>isub_bout</code> didn't have any and <code>iadd_cout</code> was only implemented on arm and x64 which the new instructions are, too.<br>\nThe tests seem to cover the case where the overflow happens (so <code>0x7E + 1</code> and <code>0x7E + 2</code> essentially) which the new instructions also test.<br>\n</p>\n</blockquote>",
        "id": 348578622,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681254926
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198#issuecomment-1504251541\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6198\">issue #6198</a>:</p>\n<blockquote>\n<blockquote>\n<p>Also I want to double-check with @cfallin that there are no concerns about dropping <code>iadd_cout</code> and <code>isub_bout</code> now that we have equivalents with defined signed/unsigned behavior. Should we maybe keep both versions around for one release, for easier migration?</p>\n</blockquote>\n<p>I think it's fine to remove them now, given that we aren't losing any functionality, and the migration for any users we don't know about should be simple. The only other major user I'd be concerned about w.r.t. compatibility is cg_clif, and @bjorn3 is here aware of this PR already, so it seems we're fine!</p>\n</blockquote>",
        "id": 348579089,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681255173
    }
]