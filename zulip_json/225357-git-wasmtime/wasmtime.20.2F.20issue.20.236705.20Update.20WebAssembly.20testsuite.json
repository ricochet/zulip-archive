[
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705#issuecomment-1626079161\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705\">issue #6705</a>:</p>\n<blockquote>\n<p>Here's where the errors start: <a href=\"https://github.com/bytecodealliance/wasmtime/actions/runs/5490314463/jobs/10005600074#step:16:3205\">https://github.com/bytecodealliance/wasmtime/actions/runs/5490314463/jobs/10005600074#step:16:3205</a>.</p>\n</blockquote>",
        "id": 373325782,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1688762870
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705#issuecomment-1629652177\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705\">issue #6705</a>:</p>\n<blockquote>\n<p>I think these failures are related to <code>wasmparser</code> and its validation, so the test suite submodule probably will need to get updated in the wasm-tools repository before it's updated here.</p>\n</blockquote>",
        "id": 374072824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689019359
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705#issuecomment-1636663032\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705\">issue #6705</a>:</p>\n<blockquote>\n<p>With <a href=\"https://github.com/WebAssembly/testsuite/pull/68\">https://github.com/WebAssembly/testsuite/pull/68</a>, <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1126\">https://github.com/bytecodealliance/wasm-tools/pull/1126</a>, and publishing wasm-tools this should be good to go.</p>\n</blockquote>",
        "id": 375446671,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689397072
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705#issuecomment-1640524577\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705\">issue #6705</a>:</p>\n<blockquote>\n<p>Ok, rebased on top of #6739.</p>\n</blockquote>",
        "id": 376403486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689696496
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705#issuecomment-1640554530\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705\">issue #6705</a>:</p>\n<blockquote>\n<p>Oh can you also try re-updating the submodule its latest? I think that will surface a single error in <code>tests/spec_testsuite/elem.wast:690</code> which I think is something we need to implement, but otherwise the other failures I think are fixed by updating the test suite</p>\n</blockquote>",
        "id": 376409594,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689697780
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705#issuecomment-1640951456\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705\">issue #6705</a>:</p>\n<blockquote>\n<p>Ok I think those are legitimate failures where we accidentally don't support <code>global.get</code> in table element segment offset initializers.</p>\n</blockquote>",
        "id": 376467278,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1689712196
    },
    {
        "content": "<p>TethysSvensson <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705#issuecomment-1709483297\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6705\">issue #6705</a>:</p>\n<blockquote>\n<p>It seems like <code>global.get</code> has been a constant expression at least since 2017 (<a href=\"https://github.com/WebAssembly/spec/issues/445\">WebAssembly/spec#445</a>). However it was not usable inside element segments until the reference types proposal landed in 2021 (<a href=\"https://github.com/WebAssembly/spec/issues/1287\">WebAssembly/spec#1287</a>). This made funcrefs/externrefs available as globals, and thus <code>global.get</code> became usable in element segments.</p>\n<p>Unfortunately the interaction between this proposal and element segments was initially missed and a test was not added for it until earlier this year in <a href=\"https://github.com/WebAssembly/spec/issues/1640\">WebAssembly/spec#1640</a>. I think most wasm parsers missed this detail. For instance wabt only added support for this today in <a href=\"https://github.com/WebAssembly/wabt/issues/2288\">WebAssembly/wabt#2288</a>.</p>\n</blockquote>",
        "id": 389571051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694063317
    }
]