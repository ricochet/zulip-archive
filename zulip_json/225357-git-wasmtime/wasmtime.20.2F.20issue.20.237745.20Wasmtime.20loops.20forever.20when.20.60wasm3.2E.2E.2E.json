[
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7745\">issue #7745</a>:</p>\n<blockquote>\n<p>Per <a href=\"https://github.com/WebAssembly/wasi-libc/issues/456#issuecomment-1866412804\">https://github.com/WebAssembly/wasi-libc/issues/456#issuecomment-1866412804</a>, a number of <code>wasi-sdk</code> and <code>wasi-libc</code> tests are currently failing when run using Wasmtime but run successfully on other runtimes.  They seem to be related to thread-local storage (e.g. tests involving <code>errno</code>, which is a thread-local variable).</p>\n<h3>Test Case</h3>\n<p>This file was built from <a href=\"https://github.com/WebAssembly/wasi-sdk/blob/main/tests/general/signals.c\">https://github.com/WebAssembly/wasi-sdk/blob/main/tests/general/signals.c</a> for <code>wasm32-wasi-threads</code> using <code>wasi-sdk</code>:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/13823659/signals.c.-O0.wasm.tar.gz\">signals.c.-O0.wasm.tar.gz</a></p>\n<h3>Steps to Reproduce</h3>\n<p>First, install any recent version of Wasmtime (e.g. v16.0.0).  Then:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">tar</span><span class=\"w\"> </span><span class=\"n\">xf</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The expected output is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">psignal</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">SIGINT</span>: <span class=\"nc\">Interrupt</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>The actual output is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">raise</span><span class=\"p\">(</span><span class=\"n\">_NSIG</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">errno</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">EINVAL</span><span class=\"w\"> </span><span class=\"p\">(</span>: <span class=\"nc\">main</span>: <span class=\"mi\">31</span><span class=\"p\">)</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x1072</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">abort</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x1179</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__assert_fail</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>:  <span class=\"mh\">0x716</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__original_main</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>:  <span class=\"mh\">0x1da</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v16.0.0</p>\n<p>Operating system: MacOS (but should repro on any OS)</p>\n<p>Architecture: ARM64 (but should repro on any architecture)</p>\n<h3>Extra Info</h3>\n<p>See also <a href=\"https://github.com/WebAssembly/wasi-threads/pull/49\">https://github.com/WebAssembly/wasi-threads/pull/49</a>, which may be related.</p>\n</blockquote>",
        "id": 411237422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704391893
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7745\">issue #7745</a>:</p>\n<blockquote>\n<p>UPDATE: The original issue was due to not specifying <code>-pthread</code> when building.  Now the problem is that Wasmtime loops indefinitely when a <code>wasm32-wasi-threads</code> guest writes to stdout.  See <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7745#issuecomment-1877546864\">https://github.com/bytecodealliance/wasmtime/issues/7745#issuecomment-1877546864</a> for steps to reproduce.</p>\n<p>Original report follows:</p>\n<p>Per <a href=\"https://github.com/WebAssembly/wasi-libc/issues/456#issuecomment-1866412804\">https://github.com/WebAssembly/wasi-libc/issues/456#issuecomment-1866412804</a>, a number of <code>wasi-sdk</code> and <code>wasi-libc</code> tests are currently failing when run using Wasmtime but run successfully on other runtimes.  They seem to be related to thread-local storage (e.g. tests involving <code>errno</code>, which is a thread-local variable).</p>\n<h3>Test Case</h3>\n<p>This file was built from <a href=\"https://github.com/WebAssembly/wasi-sdk/blob/main/tests/general/signals.c\">https://github.com/WebAssembly/wasi-sdk/blob/main/tests/general/signals.c</a> for <code>wasm32-wasi-threads</code> using <code>wasi-sdk</code>:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/13823659/signals.c.-O0.wasm.tar.gz\">signals.c.-O0.wasm.tar.gz</a></p>\n<h3>Steps to Reproduce</h3>\n<p>First, install any recent version of Wasmtime (e.g. v16.0.0).  Then:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">tar</span><span class=\"w\"> </span><span class=\"n\">xf</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The expected output is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">psignal</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">SIGINT</span>: <span class=\"nc\">Interrupt</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>The actual output is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">raise</span><span class=\"p\">(</span><span class=\"n\">_NSIG</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">errno</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">EINVAL</span><span class=\"w\"> </span><span class=\"p\">(</span>: <span class=\"nc\">main</span>: <span class=\"mi\">31</span><span class=\"p\">)</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x1072</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">abort</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x1179</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__assert_fail</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>:  <span class=\"mh\">0x716</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__original_main</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>:  <span class=\"mh\">0x1da</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v16.0.0</p>\n<p>Operating system: MacOS (but should repro on any OS)</p>\n<p>Architecture: ARM64 (but should repro on any architecture)</p>\n<h3>Extra Info</h3>\n<p>See also <a href=\"https://github.com/WebAssembly/wasi-threads/pull/49\">https://github.com/WebAssembly/wasi-threads/pull/49</a>, which may be related.</p>\n</blockquote>",
        "id": 411237777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704392050
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7745\">issue #7745</a>:</p>\n<blockquote>\n<p>UPDATE: The original issue was due to not specifying <code>-pthread</code> when building.  Now the problem is that Wasmtime loops indefinitely when a <code>wasm32-wasi-threads</code> guest writes to stdout.  See <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7745#issuecomment-1877546864\">https://github.com/bytecodealliance/wasmtime/issues/7745#issuecomment-1877546864</a> for steps to reproduce.</p>\n<p>Original report follows:</p>\n<p>Per <a href=\"https://github.com/WebAssembly/wasi-libc/issues/456#issuecomment-1866412804\">https://github.com/WebAssembly/wasi-libc/issues/456#issuecomment-1866412804</a>, a number of <code>wasi-sdk</code> and <code>wasi-libc</code> tests are currently failing when run using Wasmtime but run successfully on other runtimes.  They seem to be related to thread-local storage (e.g. tests involving <code>errno</code>, which is a thread-local variable).</p>\n<h3>Test Case</h3>\n<p>This file was built from <a href=\"https://github.com/WebAssembly/wasi-sdk/blob/main/tests/general/signals.c\">https://github.com/WebAssembly/wasi-sdk/blob/main/tests/general/signals.c</a> for <code>wasm32-wasi-threads</code> using <code>wasi-sdk</code>:</p>\n<p><a href=\"https://github.com/bytecodealliance/wasmtime/files/13823659/signals.c.-O0.wasm.tar.gz\">signals.c.-O0.wasm.tar.gz</a></p>\n<h3>Steps to Reproduce</h3>\n<p>First, install any recent version of Wasmtime (e.g. v16.0.0).  Then:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">tar</span><span class=\"w\"> </span><span class=\"n\">xf</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">tar</span><span class=\"p\">.</span><span class=\"n\">gz</span>\n<span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>The expected output is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">psignal</span><span class=\"w\"> </span><span class=\"n\">message</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">SIGINT</span>: <span class=\"nc\">Interrupt</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>The actual output is:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Assertion</span><span class=\"w\"> </span><span class=\"n\">failed</span>: <span class=\"nc\">raise</span><span class=\"p\">(</span><span class=\"n\">_NSIG</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">&amp;&amp;</span><span class=\"w\"> </span><span class=\"n\">errno</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">EINVAL</span><span class=\"w\"> </span><span class=\"p\">(</span>: <span class=\"nc\">main</span>: <span class=\"mi\">31</span><span class=\"p\">)</span>\n<span class=\"n\">Error</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">main</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">signals</span><span class=\"p\">.</span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"o\">-</span><span class=\"n\">O0</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"err\">`</span>\n\n<span class=\"n\">Caused</span><span class=\"w\"> </span><span class=\"n\">by</span>:\n    <span class=\"mi\">0</span>: <span class=\"nc\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">command</span><span class=\"w\"> </span><span class=\"n\">default</span>\n<span class=\"w\">    </span><span class=\"mi\">1</span>: <span class=\"nc\">error</span><span class=\"w\"> </span><span class=\"k\">while</span><span class=\"w\"> </span><span class=\"n\">executing</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>:\n           <span class=\"mi\">0</span>: <span class=\"mh\">0x1072</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">abort</span>\n<span class=\"w\">           </span><span class=\"mi\">1</span>: <span class=\"mh\">0x1179</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__assert_fail</span>\n<span class=\"w\">           </span><span class=\"mi\">2</span>:  <span class=\"mh\">0x716</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">__original_main</span>\n<span class=\"w\">           </span><span class=\"mi\">3</span>:  <span class=\"mh\">0x1da</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"n\">unknown</span><span class=\"o\">&gt;!</span><span class=\"n\">_start</span>\n<span class=\"w\">    </span><span class=\"mi\">2</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"n\">trap</span>: <span class=\"nc\">wasm</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">unreachable</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">instruction</span><span class=\"w\"> </span><span class=\"n\">executed</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: v16.0.0</p>\n<p>Operating system: MacOS (but should repro on any OS)</p>\n<p>Architecture: ARM64 (but should repro on any architecture)</p>\n<h3>Extra Info</h3>\n<p>See also <a href=\"https://github.com/WebAssembly/wasi-threads/pull/49\">https://github.com/WebAssembly/wasi-threads/pull/49</a>, which may be related.</p>\n</blockquote>",
        "id": 411290707,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1704417232
    }
]