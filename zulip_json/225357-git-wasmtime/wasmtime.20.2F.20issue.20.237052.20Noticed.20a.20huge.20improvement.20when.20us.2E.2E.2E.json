[
    {
        "content": "<p>cylewitruk opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>Not really sure what to write, but in benchmarking and randomly trying mimalloc as a global allocator, I noticed a rather huge performance boost in bench cases using  <code>externref</code>s.</p>\n<p>You can simulate the same using my test project at <a href=\"https://github.com/cylewitruk/wasm-test\">https://github.com/cylewitruk/wasm-test</a> and running <code>cargo bench --bench wasmtime</code> to get results from the normal allocator.</p>\n<p>In <code>src/lib.rs</code> you can uncomment the <code>MiMalloc</code>stuff and run the benches again, and you'll (hopefully?) see a pretty impressive performance increase.</p>\n<p>I tried the same with Wasmer (which was slower to begin with) and Wasmer remained consistent with non-mimalloc timings.  </p>\n<p>But the fact that Wasmer remains the same while Wasmtime gains impressively in timings makes me think that there might be some relatively simple yet substantial performance improvements that could be made within Wasmtime itself?</p>\n</blockquote>",
        "id": 391273145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694816557
    },
    {
        "content": "<p>cylewitruk edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>Not really sure what to write, but in benchmarking and randomly trying mimalloc as a global allocator, I noticed a rather huge performance boost in bench cases using  <code>externref</code>s.</p>\n<p>You can simulate the same using my test project at <a href=\"https://github.com/cylewitruk/wasm-test\">https://github.com/cylewitruk/wasm-test</a> and running <code>cargo bench --bench wasmtime</code> to get results from the normal allocator.</p>\n<p>In <code>src/lib.rs</code> you can uncomment the <code>MiMalloc</code>stuff and run the benches again, and you'll (hopefully?) see a pretty impressive performance increase.</p>\n<p>I tried the same with Wasmer (which was slower to begin with) and Wasmer remained consistent with non-mimalloc timings.  </p>\n<p>But the fact that Wasmer remains the same while Wasmtime gains impressively in timings makes me think that there might be some relatively simple yet substantial performance improvements that could be made within Wasmtime itself?</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Linux</span><span class=\"w\"> </span><span class=\"n\">cylwit</span><span class=\"o\">-</span><span class=\"n\">XPS</span><span class=\"o\">-</span><span class=\"mi\">9320</span><span class=\"w\"> </span><span class=\"mf\">6.2.0</span><span class=\"o\">-</span><span class=\"mi\">31</span><span class=\"o\">-</span><span class=\"n\">generic</span><span class=\"w\"> </span>#<span class=\"mi\">31</span><span class=\"o\">~</span><span class=\"mf\">22.04.1</span><span class=\"o\">-</span><span class=\"n\">Ubuntu</span><span class=\"w\"> </span><span class=\"n\">SMP</span><span class=\"w\"> </span><span class=\"n\">PREEMPT_DYNAMIC</span><span class=\"w\"> </span><span class=\"n\">Wed</span><span class=\"w\"> </span><span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"mi\">13</span>:<span class=\"mi\">45</span>:<span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"n\">UTC</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">GNU</span><span class=\"o\">/</span><span class=\"n\">Linux</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 391273601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694816780
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052#issuecomment-1721976871\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>Thanks for the report! I tested this out locally and got:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">fold</span><span class=\"o\">-</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">square</span><span class=\"w\">         </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">3.2824</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">3.2828</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">3.2832</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">28.987</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">28.919</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">28.852</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_externref</span><span class=\"w\">       </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">275.53</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">275.58</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">275.63</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">36.699</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">36.682</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">36.665</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_native</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">129.08</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">129.09</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">129.10</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">4.0775</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">4.0595</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">4.0412</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_memory</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">229.41</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">229.51</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">229.60</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">1.7513</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">1.6910</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">1.6373</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n</code></pre></div>\n<p>after switching to mimalloc. I'm on aarch64, however, instead of x86_64, so the performance results may differ. By huge improvement are you seeing the same 40% decrease in time? Or are you seeing more?</p>\n<p>One way to help confirm what's going on is to use <code>perf</code>. When I <code>perf record</code> beforehand the top functions for the <code>add_externref</code> benchmark are:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"mf\">15.89</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">before</span><span class=\"w\">             </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">__aarch64_ldadd8_rel</span>\n<span class=\"w\">  </span><span class=\"mf\">13.01</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">libc</span><span class=\"o\">-</span><span class=\"mf\">2.31.</span><span class=\"n\">so</span><span class=\"w\">       </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">__aarch64_swp4_rel</span>\n<span class=\"w\">   </span><span class=\"mf\">9.40</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">before</span><span class=\"w\">             </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">__aarch64_ldadd8_relax</span>\n<span class=\"w\">   </span><span class=\"mf\">7.79</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">libc</span><span class=\"o\">-</span><span class=\"mf\">2.31.</span><span class=\"n\">so</span><span class=\"w\">       </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">__aarch64_cas4_acq</span>\n<span class=\"w\">   </span><span class=\"mf\">6.96</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">libc</span><span class=\"o\">-</span><span class=\"mf\">2.31.</span><span class=\"n\">so</span><span class=\"w\">       </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">_int_malloc</span>\n<span class=\"w\">   </span><span class=\"mf\">6.76</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">before</span><span class=\"w\">             </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">func</span>::<span class=\"n\">Func</span>::<span class=\"n\">call_impl</span>\n<span class=\"w\">   </span><span class=\"mf\">6.64</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">libc</span><span class=\"o\">-</span><span class=\"mf\">2.31.</span><span class=\"n\">so</span><span class=\"w\">       </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">_int_free</span>\n<span class=\"w\">   </span><span class=\"mf\">3.96</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">before</span><span class=\"w\">   </span><span class=\"n\">libc</span><span class=\"o\">-</span><span class=\"mf\">2.31.</span><span class=\"n\">so</span><span class=\"w\">       </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">malloc</span>\n</code></pre></div>\n<p>whereas afterwards they are:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"mf\">23.95</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2000a2cd35b</span><span class=\"w\">  </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">__aarch64_ldadd8_rel</span>\n<span class=\"w\">  </span><span class=\"mf\">13.53</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2000a2cd35b</span><span class=\"w\">  </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">__aarch64_ldadd8_relax</span>\n<span class=\"w\">   </span><span class=\"mf\">8.82</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2000a2cd35b</span><span class=\"w\">  </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">func</span>::<span class=\"n\">Func</span>::<span class=\"n\">call_impl</span>\n<span class=\"w\">   </span><span class=\"mf\">5.18</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2000a2cd35b</span><span class=\"w\">  </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">mi_heap_malloc_zero_aligned_at_fallback</span>\n<span class=\"w\">   </span><span class=\"mf\">5.14</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2000a2cd35b</span><span class=\"w\">  </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">externref</span>::<span class=\"n\">gc</span>\n<span class=\"w\">   </span><span class=\"mf\">4.19</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2000a2cd35b</span><span class=\"w\">  </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">wasmtime_runtime</span>::<span class=\"n\">externref</span>::<span class=\"n\">VMExternRef</span>::<span class=\"n\">new_with</span>\n<span class=\"w\">   </span><span class=\"mf\">4.01</span><span class=\"o\">%</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2</span><span class=\"w\">  </span><span class=\"n\">wasmtime</span><span class=\"o\">-</span><span class=\"n\">af70e2000a2cd35b</span><span class=\"w\">  </span><span class=\"p\">[.]</span><span class=\"w\"> </span><span class=\"n\">wasmtime</span>::<span class=\"n\">func</span>::<span class=\"n\">Func</span>::<span class=\"n\">ty_ref</span>\n</code></pre></div>\n<p>where this sort of makes sense to me. <code>_int_{malloc,free}</code> are the default system allocator and they're pretty high in the profile beforehand and basically gone in the latter. AFAIK glibc's default allocator is not known for its speed, so it's expected that swapping to mimalloc (or others) would improve allocation time.</p>\n<p>For aarch64 specifically there's atomic stuff high up in the profile but that's less relevant for x86_64.</p>\n<p>I'd recommend giving <code>perf</code> a try locally as it may show similar results as well, but otherwise this looks all expected to me so far.</p>\n</blockquote>",
        "id": 391278584,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694818510
    },
    {
        "content": "<p>cylewitruk <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052#issuecomment-1722162457\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>You got better timing improvements than me anyway :)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">fold</span><span class=\"o\">-</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">square</span><span class=\"w\">         </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">1.7552</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.7588</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.7635</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">20.970</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">20.669</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">20.361</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">13.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_externref</span><span class=\"w\">       </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">147.88</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">148.13</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">148.40</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">30.137</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">29.752</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">29.397</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_native</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">63.155</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">63.253</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">63.359</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">4.4835</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">3.8322</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">3.2604</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_memory</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">98.934</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">99.111</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">99.297</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"mf\">1.7055</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mf\">2.7377</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mf\">3.6384</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">regressed</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"w\">  </span><span class=\"err\">```</span>\n<span class=\"n\">But</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">mention</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"o\">'</span><span class=\"na\">re</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">computer</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">vary</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">If</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"n\">looks</span><span class=\"w\"> </span><span class=\"n\">normal</span><span class=\"o\">/</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">then</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">don</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">dig</span><span class=\"w\"> </span><span class=\"n\">further</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">mostly</span><span class=\"w\"> </span><span class=\"n\">thought</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">quite</span><span class=\"w\"> </span><span class=\"n\">interesting</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">particularly</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ExternRef</span><span class=\"err\">`</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">saw</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"w\"> </span><span class=\"n\">increase</span><span class=\"w\"> </span><span class=\"n\">whereas</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">add_memory</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">bench</span><span class=\"w\"> </span><span class=\"n\">regresses</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">thought</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">benefit</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">most</span><span class=\"w\"> </span><span class=\"n\">since</span><span class=\"w\"> </span><span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">serializing</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">reading</span><span class=\"o\">/</span><span class=\"n\">writing</span><span class=\"p\">).</span>\n\n<span class=\"n\">Here</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">record</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">before</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">after</span>:\n</code></pre></div>\n<p>11,38%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime::func::Func::call_impl<br>\n   6,51%  wasmtime-f0d59a  libm.so.6                                         [.] __ieee754_exp_fma<br>\n   5,27%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n   3,63%  wasmtime-f0d59a  libm.so.6                                         [.] exp@@GLIBC_2.29<br>\n   2,26%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime_runtime::externref::gc</p>\n<hr>\n<p>15,08%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime::func::Func::call_impl                                            <br>\n   6,85%  wasmtime-f0d59a  libm.so.6                                         [.] __ieee754_exp_fma                                                          <br>\n   5,66%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n   3,76%  wasmtime-f0d59a  libm.so.6                                         [.] exp@@GLIBC_2.29<br>\n   3,48%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime_runtime::externref::gc</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">There</span><span class=\"w\"> </span><span class=\"n\">might</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">something</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ExternRef</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">could</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"n\">Do</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">anything</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"n\">examples</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">Wasmtime</span><span class=\"w\"> </span><span class=\"n\">incorrectly</span><span class=\"o\">/</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">less</span><span class=\"o\">-</span><span class=\"n\">than</span><span class=\"o\">-</span><span class=\"n\">optimal</span><span class=\"w\"> </span><span class=\"n\">way</span><span class=\"o\">?</span>\n<span class=\"o\">~~~</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 391342824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694849035
    },
    {
        "content": "<p>cylewitruk edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052#issuecomment-1722162457\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>You got better timing improvements than me anyway :)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">fold</span><span class=\"o\">-</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">square</span><span class=\"w\">         </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">1.7552</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.7588</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.7635</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">20.970</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">20.669</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">20.361</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">13.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_externref</span><span class=\"w\">       </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">147.88</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">148.13</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">148.40</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">30.137</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">29.752</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">29.397</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_native</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">63.155</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">63.253</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">63.359</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">4.4835</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">3.8322</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">3.2604</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_memory</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">98.934</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">99.111</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">99.297</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"mf\">1.7055</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mf\">2.7377</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mf\">3.6384</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">regressed</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"w\">  </span><span class=\"err\">```</span>\n<span class=\"n\">But</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">mention</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"o\">'</span><span class=\"na\">re</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">computer</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">vary</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">If</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"n\">looks</span><span class=\"w\"> </span><span class=\"n\">normal</span><span class=\"o\">/</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">then</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">don</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">dig</span><span class=\"w\"> </span><span class=\"n\">further</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">mostly</span><span class=\"w\"> </span><span class=\"n\">thought</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">quite</span><span class=\"w\"> </span><span class=\"n\">interesting</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">particularly</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ExternRef</span><span class=\"err\">`</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">saw</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"w\"> </span><span class=\"n\">increase</span><span class=\"w\"> </span><span class=\"n\">whereas</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">add_memory</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">bench</span><span class=\"w\"> </span><span class=\"n\">regresses</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">thought</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">benefit</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">most</span><span class=\"w\"> </span><span class=\"n\">since</span><span class=\"w\"> </span><span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">serializing</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">reading</span><span class=\"o\">/</span><span class=\"n\">writing</span><span class=\"p\">).</span>\n\n<span class=\"n\">Here</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">record</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">before</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">after</span>:\n</code></pre></div>\n<p>11,38%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime::func::Func::call_impl<br>\n   6,51%  wasmtime-f0d59a  libm.so.6                                         [.] __ieee754_exp_fma<br>\n   5,27%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n   3,63%  wasmtime-f0d59a  libm.so.6                                         [.] exp@@GLIBC_2.29<br>\n   2,26%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime_runtime::externref::gc</p>\n<hr>\n<p>15,08%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime::func::Func::call_impl                                            <br>\n   6,85%  wasmtime-f0d59a  libm.so.6                                         [.] __ieee754_exp_fma                                                          <br>\n   5,66%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n   3,76%  wasmtime-f0d59a  libm.so.6                                         [.] exp@@GLIBC_2.29<br>\n   3,48%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime_runtime::externref::gc</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">There</span><span class=\"w\"> </span><span class=\"n\">might</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">something</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ExternRef</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">could</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"n\">Do</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">anything</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"n\">examples</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">Wasmtime</span><span class=\"w\"> </span><span class=\"n\">incorrectly</span><span class=\"o\">/</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">less</span><span class=\"o\">-</span><span class=\"n\">than</span><span class=\"o\">-</span><span class=\"n\">optimal</span><span class=\"w\"> </span><span class=\"n\">way</span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"n\">It</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">bit</span><span class=\"w\"> </span><span class=\"n\">hard</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">piece</span><span class=\"w\"> </span><span class=\"n\">together</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">there</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">much</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">way</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">examples</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">area</span><span class=\"w\"> </span>:<span class=\"p\">)</span>\n<span class=\"o\">~~~</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 391343582,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694849500
    },
    {
        "content": "<p>cylewitruk edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052#issuecomment-1722162457\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>You got better timing improvements than me anyway :)</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">fold</span><span class=\"o\">-</span><span class=\"n\">add</span><span class=\"o\">-</span><span class=\"n\">square</span><span class=\"w\">         </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">1.7552</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.7588</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"w\"> </span><span class=\"mf\">1.7635</span><span class=\"w\"> </span><span class=\"n\">ms</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">20.970</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">20.669</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">20.361</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">13</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">13.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">low</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_externref</span><span class=\"w\">       </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">147.88</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">148.13</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">148.40</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">30.137</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">29.752</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">29.397</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_native</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">63.155</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">63.253</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">63.359</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">4.4835</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">3.8322</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mf\">3.2604</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">improved</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">3</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">3.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">1.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"n\">Add</span><span class=\"o\">/</span><span class=\"n\">add_memory</span><span class=\"w\">          </span><span class=\"n\">time</span>:   <span class=\"p\">[</span><span class=\"mf\">98.934</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">99.111</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"w\"> </span><span class=\"mf\">99.297</span><span class=\"w\"> </span><span class=\"n\">ns</span><span class=\"p\">]</span>\n<span class=\"w\">                        </span><span class=\"n\">change</span>: <span class=\"p\">[</span><span class=\"o\">+</span><span class=\"mf\">1.7055</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mf\">2.7377</span><span class=\"o\">%</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"mf\">3.6384</span><span class=\"o\">%</span><span class=\"p\">]</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mf\">0.00</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"mf\">0.05</span><span class=\"p\">)</span>\n<span class=\"w\">                        </span><span class=\"n\">Performance</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">regressed</span><span class=\"p\">.</span>\n<span class=\"n\">Found</span><span class=\"w\"> </span><span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"n\">outliers</span><span class=\"w\"> </span><span class=\"n\">among</span><span class=\"w\"> </span><span class=\"mi\">100</span><span class=\"w\"> </span><span class=\"n\">measurements</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">6.00</span><span class=\"o\">%</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">2.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">mild</span>\n<span class=\"w\">  </span><span class=\"mi\">4</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"mf\">4.00</span><span class=\"o\">%</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">high</span><span class=\"w\"> </span><span class=\"n\">severe</span>\n<span class=\"w\">  </span><span class=\"err\">```</span>\n<span class=\"n\">But</span><span class=\"w\"> </span><span class=\"n\">like</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">mention</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"o\">'</span><span class=\"na\">re</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">arch</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">different</span><span class=\"w\"> </span><span class=\"n\">computer</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">results</span><span class=\"w\"> </span><span class=\"n\">will</span><span class=\"w\"> </span><span class=\"n\">vary</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">If</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"n\">looks</span><span class=\"w\"> </span><span class=\"n\">normal</span><span class=\"o\">/</span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">then</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">don</span><span class=\"o\">'</span><span class=\"na\">t</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">dig</span><span class=\"w\"> </span><span class=\"n\">further</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">mostly</span><span class=\"w\"> </span><span class=\"n\">thought</span><span class=\"w\"> </span><span class=\"n\">it</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">quite</span><span class=\"w\"> </span><span class=\"n\">interesting</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">particularly</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ExternRef</span><span class=\"err\">`</span><span class=\"n\">s</span><span class=\"w\"> </span><span class=\"n\">saw</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">performance</span><span class=\"w\"> </span><span class=\"n\">increase</span><span class=\"w\"> </span><span class=\"n\">whereas</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">add_memory</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">bench</span><span class=\"w\"> </span><span class=\"n\">regresses</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">which</span><span class=\"w\"> </span><span class=\"n\">is</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">case</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">thought</span><span class=\"w\"> </span><span class=\"n\">would</span><span class=\"w\"> </span><span class=\"n\">have</span><span class=\"w\"> </span><span class=\"n\">benefit</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">most</span><span class=\"w\"> </span><span class=\"n\">since</span><span class=\"w\"> </span><span class=\"n\">there</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">serializing</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"n\">memory</span><span class=\"w\"> </span><span class=\"n\">and</span><span class=\"w\"> </span><span class=\"n\">reading</span><span class=\"o\">/</span><span class=\"n\">writing</span><span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"> </span><span class=\"n\">but</span><span class=\"w\"> </span><span class=\"n\">otoh</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"w\"> </span><span class=\"n\">guess</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">Wasm</span><span class=\"w\"> </span><span class=\"n\">page</span><span class=\"w\"> </span><span class=\"n\">has</span><span class=\"w\"> </span><span class=\"n\">already</span><span class=\"w\"> </span><span class=\"n\">been</span><span class=\"w\"> </span><span class=\"n\">allocated</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"p\">).</span>\n\n<span class=\"n\">Here</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">perf</span><span class=\"w\"> </span><span class=\"n\">record</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">before</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">after</span>:\n</code></pre></div>\n<p>11,38%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime::func::Func::call_impl<br>\n   6,51%  wasmtime-f0d59a  libm.so.6                                         [.] __ieee754_exp_fma<br>\n   5,27%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n   3,63%  wasmtime-f0d59a  libm.so.6                                         [.] exp@@GLIBC_2.29<br>\n   2,26%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime_runtime::externref::gc</p>\n<hr>\n<p>15,08%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime::func::Func::call_impl                                            <br>\n   6,85%  wasmtime-f0d59a  libm.so.6                                         [.] __ieee754_exp_fma                                                          <br>\n   5,66%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] rayon::iter::plumbing::bridge_producer_consumer::helper<br>\n   3,76%  wasmtime-f0d59a  libm.so.6                                         [.] exp@@GLIBC_2.29<br>\n   3,48%  wasmtime-f0d59a  wasmtime-f0d59a15b0ad0b71                         [.] wasmtime_runtime::externref::gc</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">There</span><span class=\"w\"> </span><span class=\"n\">might</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">something</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">ExternRef</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">code</span><span class=\"w\"> </span><span class=\"n\">that</span><span class=\"w\"> </span><span class=\"n\">could</span><span class=\"w\"> </span><span class=\"n\">be</span><span class=\"w\"> </span><span class=\"n\">optimized</span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"n\">Do</span><span class=\"w\"> </span><span class=\"n\">you</span><span class=\"w\"> </span><span class=\"n\">see</span><span class=\"w\"> </span><span class=\"n\">anything</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">my</span><span class=\"w\"> </span><span class=\"n\">examples</span><span class=\"w\"> </span><span class=\"k\">where</span><span class=\"w\"> </span><span class=\"n\">I</span><span class=\"o\">'</span><span class=\"na\">m</span><span class=\"w\"> </span><span class=\"n\">using</span><span class=\"w\"> </span><span class=\"n\">Wasmtime</span><span class=\"w\"> </span><span class=\"n\">incorrectly</span><span class=\"o\">/</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">less</span><span class=\"o\">-</span><span class=\"n\">than</span><span class=\"o\">-</span><span class=\"n\">optimal</span><span class=\"w\"> </span><span class=\"n\">way</span><span class=\"o\">?</span><span class=\"w\"> </span><span class=\"n\">It</span><span class=\"w\"> </span><span class=\"n\">was</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">bit</span><span class=\"w\"> </span><span class=\"n\">hard</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">piece</span><span class=\"w\"> </span><span class=\"n\">together</span><span class=\"w\"> </span><span class=\"n\">everything</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">there</span><span class=\"o\">'</span><span class=\"na\">s</span><span class=\"w\"> </span><span class=\"n\">not</span><span class=\"w\"> </span><span class=\"n\">so</span><span class=\"w\"> </span><span class=\"n\">much</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">way</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">examples</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">area</span><span class=\"w\"> </span>:<span class=\"p\">)</span>\n<span class=\"o\">~~~</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 391459025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1694928523
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052#issuecomment-1723494254\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>The perf before/after looks a little suspicious there because it's just the percentages that are different, but <code>ExternRef</code>s are all heap-allocated by default which is probably why changing the allocator helps in a benchmark. They're not particularly optimized in Wasmtime but there's not a ton of low hanging fruit either AFAIK.</p>\n<p>For the regression you're looking at the tens-of-nanoseconds so small changes like 2/3% are typically noise so my guess is that the allocator didn't have all that much of an effect in that benchmark.</p>\n<p>For idioms sorry but I didn't read it too closely, I was just building it to get it to run! If you have a specific question though I can try to help out.</p>\n</blockquote>",
        "id": 391707388,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695045822
    },
    {
        "content": "<p>fitzgen <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052#issuecomment-1723815663\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>As you've discovered, <code>ExternRef</code>s are allocated with <code>malloc</code>. There isn't much we can do to improve performance within this design, other than suggest alternative allocators for <code>ExternRef</code>-allocation heavy use cases.</p>\n<p>Looking forward to <a href=\"https://github.com/bytecodealliance/rfcs/blob/main/accepted/wasm-gc.md\">our plans for the GC proposal</a>, as part of that work we will implement bump allocation for all objects, including <code>ExternRef</code>.</p>\n</blockquote>",
        "id": 391732691,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695053195
    },
    {
        "content": "<p>cylewitruk <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052#issuecomment-1724272586\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>Well cool! I'll go over there and have a read :)  I'll close this ticket now since there's nothing to do, but good info if anyone else stumbles along</p>\n</blockquote>",
        "id": 391765110,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695066661
    },
    {
        "content": "<p>cylewitruk closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7052\">issue #7052</a>:</p>\n<blockquote>\n<p>Not really sure what to write, but in benchmarking and randomly trying mimalloc as a global allocator, I noticed a rather huge performance boost in bench cases using  <code>externref</code>s.</p>\n<p>You can simulate the same using my test project at <a href=\"https://github.com/cylewitruk/wasm-test\">https://github.com/cylewitruk/wasm-test</a> and running <code>cargo bench --bench wasmtime</code> to get results from the normal allocator.</p>\n<p>In <code>src/lib.rs</code> you can uncomment the <code>MiMalloc</code>stuff and run the benches again, and you'll (hopefully?) see a pretty impressive performance increase.</p>\n<p>I tried the same with Wasmer (which was slower to begin with) and Wasmer remained consistent with non-mimalloc timings.  </p>\n<p>But the fact that Wasmer remains the same while Wasmtime gains impressively in timings makes me think that there might be some relatively simple yet substantial performance improvements that could be made within Wasmtime itself?</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">Linux</span><span class=\"w\"> </span><span class=\"n\">cylwit</span><span class=\"o\">-</span><span class=\"n\">XPS</span><span class=\"o\">-</span><span class=\"mi\">9320</span><span class=\"w\"> </span><span class=\"mf\">6.2.0</span><span class=\"o\">-</span><span class=\"mi\">31</span><span class=\"o\">-</span><span class=\"n\">generic</span><span class=\"w\"> </span>#<span class=\"mi\">31</span><span class=\"o\">~</span><span class=\"mf\">22.04.1</span><span class=\"o\">-</span><span class=\"n\">Ubuntu</span><span class=\"w\"> </span><span class=\"n\">SMP</span><span class=\"w\"> </span><span class=\"n\">PREEMPT_DYNAMIC</span><span class=\"w\"> </span><span class=\"n\">Wed</span><span class=\"w\"> </span><span class=\"n\">Aug</span><span class=\"w\"> </span><span class=\"mi\">16</span><span class=\"w\"> </span><span class=\"mi\">13</span>:<span class=\"mi\">45</span>:<span class=\"mi\">26</span><span class=\"w\"> </span><span class=\"n\">UTC</span><span class=\"w\"> </span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">GNU</span><span class=\"o\">/</span><span class=\"n\">Linux</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 391765114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1695066662
    }
]