[
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6087#issuecomment-1481706179\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6087\">issue #6087</a>:</p>\n<blockquote>\n<p>Thanks for reviewing this! I've also added a bunch more rules to the <code>sextend+arithmetic</code> pattern, those are all in the last commit. Let me know if you'd prefer that split into it's own PR.</p>\n<p>Even with all those rules, I think they can still be generalized further. Especially the shifts with const imm, but I noticed that I could also cleanup the regular shift rules in the same way, so I've left those improvements for a future PR.</p>\n</blockquote>",
        "id": 344069072,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679596395
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6087#issuecomment-1481732952\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6087\">issue #6087</a>:</p>\n<blockquote>\n<p>I found another issue with the new shift rules, since they can have a i128 RHS we need to explicitly access the value regs. I've updated that commit, but I'm going to run the <code>icache</code> fuzzer to doublecheck that I haven't missed any other cases.</p>\n<blockquote>\n<p>A note for future work: the riscv64 implementation of Imm12::maybe_from_u64 has issues similar to the aarch64 version with assuming that the high bits of an iconst are sign-extended, when we want them to be zero-extended instead. I don't think this is a correctness issue, just the immediate-operand rules may not always match when you expect them to.</p>\n</blockquote>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> Yeah, I should look into that. </p>\n</blockquote>",
        "id": 344074430,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679597713
    },
    {
        "content": "<p>afonso360 edited a <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6087#issuecomment-1481732952\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6087\">issue #6087</a>:</p>\n<blockquote>\n<p>I found another issue with the new shift rules, since they can have a i128 RHS we need to explicitly access the value regs. I've updated that commit, but I'm going to run the <code>icache</code> fuzzer for a bit to doublecheck that I haven't missed any other cases.</p>\n<blockquote>\n<p>A note for future work: the riscv64 implementation of Imm12::maybe_from_u64 has issues similar to the aarch64 version with assuming that the high bits of an iconst are sign-extended, when we want them to be zero-extended instead. I don't think this is a correctness issue, just the immediate-operand rules may not always match when you expect them to.</p>\n</blockquote>\n<p><span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span> Yeah, I should look into that. </p>\n</blockquote>",
        "id": 344074869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679597812
    }
]