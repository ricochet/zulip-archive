[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134\">PR #3134</a> from <code>current-length-usize</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit changes the definition of<br>\n<code>VMMemoryDefinition::current_length</code> to <code>usize</code> from its previous<br>\ndefinition of <code>u32</code>. This is a pretty impactful change because it also<br>\nchanges the cranelift semantics of \"dynamic\" heaps where the bound<br>\nglobal value specifier must now match the pointer type for the platform<br>\nrather than the index type for the heap.</p>\n<p>The motivation for this change is that the <code>current_length</code> field (or<br>\nbound for the heap) is intended to reflect the current size of the heap.<br>\nThis is bound by <code>usize</code> on the host platform rather than <code>u32</code> or<code>\nu64</code>. The previous choice of <code>u32</code> couldn't represent a 4GB memory<br>\nbecause we couldn't put a number representing 4GB into the<br>\n<code>current_length</code> field. By using <code>usize</code>, which reflects the host's<br>\nmemory allocation, this should better reflect the size of the heap and<br>\nallows Wasmtime to support a full 4GB heap for a wasm program (instead<br>\nof 4GB minus one page).</p>\n<p>This commit also updates the legalization of the <code>heap_addr</code> clif<br>\ninstruction to appropriately cast the address to the platform's pointer<br>\ntype, handling bounds checks along the way. The practical impact for<br>\ntoday's targets is that a <code>uextend</code> is happening sooner than it happened<br>\nbefore, but otherwise there is no intended impact of this change. In the<br>\nfuture when 64-bit memories are supported there will likely need to be<br>\nfancier logic which handles offsets a bit differently (especially in the<br>\ncase of a 64-bit memory on a 32-bit host).</p>\n<p>The clif <code>filetest</code> changes should show the differences in codegen, and<br>\nthe Wasmtime changes are largely removing casts here and there.</p>\n<p>Closes #3022</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 247743280,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627668695
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134\">PR #3134</a> from <code>current-length-usize</code> to <code>main</code>.</p>",
        "id": 247753452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627674480
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#pullrequestreview-720371831\">PR review</a>.</p>",
        "id": 247937085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627920519
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134\">PR #3134</a>.</p>",
        "id": 247937950,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627921148
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#pullrequestreview-720398248\">PR review</a>.</p>",
        "id": 247941229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923092
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#pullrequestreview-720398248\">PR review</a>.</p>",
        "id": 247941230,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923092
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#discussion_r681118431\">PR review comment</a>:</p>\n<blockquote>\n<p>We should note that this also asserts on 32/32 and 64/64 cases; I don't think we need to do anything here in either case. I think this is fine for now -- better to assert out if we haven't thought carefully about it and if it's a theoretical need, especially in address computation logic -- but perhaps add a comment to this effect?</p>\n</blockquote>",
        "id": 247941231,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923092
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#discussion_r681123951\">PR review comment</a>:</p>\n<blockquote>\n<p>Not strictly in-scope (sorry!) and I see you've just moved this code from below, but since we're looking at it now: we should have a method on the DFG for this -- maybe something like <code>add_value_label_alias()</code>? If not, at least a comment to the effect of \"Add debug value-label alias so that debuginfo can name the extended value as the address\".</p>\n</blockquote>",
        "id": 247941232,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923092
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#pullrequestreview-720414578\">PR review</a>.</p>",
        "id": 247942093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923564
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#discussion_r681130923\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh hm wouldn't that be covered by the <code>offset_ty == addr_ty</code> check above?</p>\n<p>I do want to make sure that unhandled cases are documented here for future readers, but I also figured that the matching pointer/offset cases were handled above.</p>\n</blockquote>",
        "id": 247942094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923564
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#pullrequestreview-720417397\">PR review</a>.</p>",
        "id": 247942625,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923785
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134#discussion_r681133176\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh goodness -- I should, as a rule, discard any code review I do on Monday morning before the coffee is complete. Yes, I missed that, sorry!</p>\n</blockquote>",
        "id": 247942627,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627923785
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134\">PR #3134</a> from <code>current-length-usize</code> to <code>main</code>.</p>",
        "id": 247945511,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627925088
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3134\">PR #3134</a>.</p>",
        "id": 247950803,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1627927781
    }
]