[
    {
        "content": "<p>arkpar opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227\">PR #1227</a> from <code>a-thread-safe-api</code> to <code>master</code>:</p>\n<blockquote>\n<p>This makes <code>Module</code> implement <code>Send</code> and <code>Sync</code>, allowing instances to be created and executed in different threads.</p>\n<p>Closes #777</p>\n</blockquote>",
        "id": 189693268,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583330851
    },
    {
        "content": "<p>arkpar updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227\">PR #1227</a> from <code>a-thread-safe-api</code> to <code>master</code>:</p>\n<blockquote>\n<p>This makes <code>Module</code> implement <code>Send</code> and <code>Sync</code>, allowing instances to be created and executed in different threads.</p>\n<p>Closes #777</p>\n</blockquote>",
        "id": 189694926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583331725
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-368850024\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-368850024\">PR Review</a>.</p>",
        "id": 189699387,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583334236
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r387721890\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r387721890\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I personally think that this probably isn't the way we want to parallelize <code>Module</code> and <code>Store</code> and such. This means that compilation is still entirely serialized and you can't compile multiple modules in parallel, one of the main usages of enabling parallelism. I think we need to work to continue to refactor and reimplement the guts of <code>Compiler</code> to make them <code>Send</code> and <code>Sync</code> and use <code>&amp;self</code>.</p>\n<p>For example the <code>trampoline_park</code> field is going away in <a href=\"https://github.com/bytecodealliance/wasmtime/pull/957\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/957\">https://github.com/bytecodealliance/wasmtime/pull/957</a>, and I don't think that the switch to <code>AtomicPtr&lt;T&gt;</code> here is correct in that it's not ever modified, it's just a pointer.</p>\n<p>The main next change is to move <code>CodeMemory</code> to per-module instances, and then mutability shouldn't be needed on most of the fields here.</p>\n</blockquote>",
        "id": 189699389,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583334236
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r387722752\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r387722752\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Instead of unsafely asserting send/sync for <code>FinishedFunctions</code>, could a newtype wrapper around <code>*const [VMFunctionBody]</code> be made to narrow-the scope of send/sync? That way we're not unsafely asserting thread safety about <code>DefinedFuncIndex</code> or <code>BoxedSlice</code></p>\n</blockquote>",
        "id": 189699390,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583334236
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-368850024\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-368850024\">PR Review</a>.</p>",
        "id": 189699391,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583334236
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r387723393\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r387723393\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I've worked pretty hard to remove <code>lazy_static</code> from most crates because it often behaves in susprising ways. I don't understand much about the GDB integration here, but I think it would be better to have an instanced lock and/or atomics to manage this.</p>\n</blockquote>",
        "id": 189699392,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583334236
    },
    {
        "content": "<p>yurydelendik submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-369701070\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-369701070\">PR Review</a>.</p>",
        "id": 189806809,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583424349
    },
    {
        "content": "<p>yurydelendik created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r388394328\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r388394328\">PR Review Comment</a>:</p>\n<blockquote>\n<p>gdb will use <code>__jit_debug_descriptor</code> (see static below) on this module startup and during reactiving on <code>__jit_debug_register_code</code> breakpoint AFAIK. The <code>__jit_debug_descriptor</code> is a global symbol for entire module.</p>\n</blockquote>",
        "id": 189806811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583424349
    },
    {
        "content": "<p>arkpar submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-369762423\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#pullrequestreview-369762423\">PR Review</a>.</p>",
        "id": 189815004,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583428713
    },
    {
        "content": "<p>arkpar created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r388441896\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227#discussion_r388441896\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is it safe to assume there won't be any concurrent access here?</p>\n</blockquote>",
        "id": 189815005,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1583428713
    },
    {
        "content": "<p>pepyakin closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1227\" target=\"_blank\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1227\">PR #1227</a>.</p>",
        "id": 190734351,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1584371003
    }
]