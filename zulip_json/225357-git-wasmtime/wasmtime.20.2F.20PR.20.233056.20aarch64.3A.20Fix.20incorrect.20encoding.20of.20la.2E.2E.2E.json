[
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056\">PR #3056</a> from <code>aarch64-fix-overflow-imm</code> to <code>main</code>:</p>\n<blockquote>\n<p>When encoding constants as immediates into an RSE Imm12 instruction we need to take special care to check if the value that we are trying to input does not overflow its type when viewed as a signed value. (i.e. iconst.i8 200)</p>\n<p>We cannot both put an immediate and sign extend it, so we need to lower it into a separate reg, and emit the sign extend into the instruction.</p>\n<p>For more details see the <a href=\"https://github.com/bjorn3/rustc_codegen_cranelift/issues/1184#issuecomment-873214796\">cg_clif bug report</a>.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 244800384,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625313130
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698590124\">PR review</a>.</p>",
        "id": 244802051,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625314660
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663358765\">PR review comment</a>:</p>\n<blockquote>\n<p>On CI:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">worker</span><span class=\"w\"> </span>#<span class=\"mi\">1</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">attempt</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">subtract</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"n\">overflow</span><span class=\"o\">'</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">cranelift</span><span class=\"o\">/</span><span class=\"n\">codegen</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">isa</span><span class=\"o\">/</span><span class=\"n\">aarch64</span><span class=\"o\">/</span><span class=\"n\">lower</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">450</span>:<span class=\"mi\">42</span><span class=\"w\"></span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 244802052,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625314660
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056\">PR #3056</a> from <code>aarch64-fix-overflow-imm</code> to <code>main</code>.</p>",
        "id": 244803707,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625316494
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698591781\">PR review</a>.</p>",
        "id": 244803745,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625316595
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663361755\">PR review comment</a>:</p>\n<blockquote>\n<p>Oops, should be fixed.</p>\n</blockquote>",
        "id": 244803746,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625316595
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698610932\">PR review</a>.</p>",
        "id": 244817818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336375
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698610932\">PR review</a>.</p>",
        "id": 244817819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336375
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663393785\">PR review comment</a>:</p>\n<blockquote>\n<p>This feels somehow like the wrong place to be handling this. IMHO, <code>iconst.i8 200</code> should be rejected by the CLIF validator, because the given constant value is out-of-range for the <code>i8</code> type. Instead we're saying here that we should implement a wrapping behavior, but then we're only doing it in one backend (so then really we should address it in all backends instead).</p>\n<p>I'm curious what others think, but to me this seems like a weird corner of IR semantics that is safer to define as \"disallowed\"...</p>\n</blockquote>",
        "id": 244817820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336375
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663393573\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we just do this as: <code>let is_negative = i.bits &amp; (1 &lt;&lt; (out_ty_bits - 1)) != 0</code> (i.e., check the MSB / sign bit)?</p>\n</blockquote>",
        "id": 244817821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336375
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698611250\">PR review</a>.</p>",
        "id": 244817970,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336546
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663394158\">PR review comment</a>:</p>\n<blockquote>\n<p>(Nevermind this, resolving comment.)</p>\n</blockquote>",
        "id": 244817971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336546
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698611400\">PR review</a>.</p>",
        "id": 244818048,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336685
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698610932\">PR review</a>.</p>",
        "id": 244818060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625336710
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698612076\">PR review</a>.</p>",
        "id": 244818608,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625337534
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663395692\">PR review comment</a>:</p>\n<blockquote>\n<p><code>iconst.i8 0xff00</code> should result in the non-negative value 0. There is no guarantee that the immediate is either zero or sign extended. Only the n least significant bits should be considered for an n bit big type. </p>\n</blockquote>",
        "id": 244818609,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625337534
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698613467\">PR review</a>.</p>",
        "id": 244819742,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625339229
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663398144\">PR review comment</a>:</p>\n<blockquote>\n<p>For clarity, @bjorn3, are you referring to the original or the suggested change? I think that checking the MSB only (<code>1 &lt;&lt; 7</code> in the <code>i8</code> case) will correctly indicate that <code>iconst.i8 0xff00</code> is non-negative when masked to the proper width; whereas the <code>bits &gt; ty_signed_max</code> logic will indicate it is negative.</p>\n</blockquote>",
        "id": 244819743,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625339229
    },
    {
        "content": "<p>bjorn3 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698613590\">PR review</a>.</p>",
        "id": 244819817,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625339362
    },
    {
        "content": "<p>bjorn3 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663398402\">PR review comment</a>:</p>\n<blockquote>\n<p>With your version it is ok, though I think you misplaced a paren. (<code>- 1))</code> instead kf <code>) -1)</code>)</p>\n</blockquote>",
        "id": 244819818,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625339362
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663398402\">PR review comment</a>.</p>",
        "id": 244819821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625339373
    },
    {
        "content": "<p>bjorn3 edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663398402\">PR review comment</a>.</p>",
        "id": 244819824,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625339380
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056\">PR #3056</a> from <code>aarch64-fix-overflow-imm</code> to <code>main</code>.</p>",
        "id": 244822651,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625343947
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698617252\">PR review</a>.</p>",
        "id": 244822763,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625344088
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663405627\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>Can we just do this as: let is_negative = i.bits &amp; (1 &lt;&lt; (out_ty_bits - 1)) != 0 (i.e., check the MSB / sign bit)?</p>\n</blockquote>\n<p>Had to change it slightly because it was underflowing in <code>out_ty_bits</code>.</p>\n<blockquote>\n<p><code>iconst.i8 0xff00</code> should result in the non-negative value 0</p>\n</blockquote>\n<p>This one I feel like we should forbid? It feels like malformed input.</p>\n</blockquote>",
        "id": 244822764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625344089
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698618496\">PR review</a>.</p>",
        "id": 244823819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625345736
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663408114\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>iconst.i8 0xff00 should result in the non-negative value 0</p>\n</blockquote>\n<p>This one I feel like we should forbid? It feels like malformed input.</p>\n</blockquote>\n<p>Hmm, this is actually interesting: in the absence of signedness (until use), there are two possible ranges (-128..127 or 0..255 in the <code>i8</code> case). If we allow the union of these, we have a 1.5*2^N-sized range, which is a little weird, but makes some sense. And, while it shouldn't be authoritative for our case, I was curious and just checked what <code>wat2wasm</code> does: it accepts exactly that range in the analogous case (I tested <code>i32.const</code> with -2^31..2^32-1), but roundtrips the values as signed unconditionally.</p>\n<p>So, this feels like a reasonable behavior to me: we should validate in the CLIF validator that const values are in either signed or unsigned range for the type.</p>\n<p>This can be a followup fix, though; no need to solve it here.</p>\n<blockquote>\n<p>With your version it is ok, though I think you misplaced a paren. (- 1)) instead of ) -1))</p>\n</blockquote>\n<p>It's actually inside the paren correctly, I think: we want the next-lower power of two (bit 7 for an i8), not an all-ones mask. I think @afonso360's latest commit got this right fwiw.</p>\n</blockquote>",
        "id": 244823820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625345737
    },
    {
        "content": "<p>afonso360 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056\">PR #3056</a> from <code>aarch64-fix-overflow-imm</code> to <code>main</code>.</p>",
        "id": 244825650,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625348548
    },
    {
        "content": "<p>afonso360 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663414158\">PR review comment</a>:</p>\n<blockquote>\n<blockquote>\n<p>This can be a followup fix, though; no need to solve it here.</p>\n</blockquote>\n<p>Let me create an issue for this</p>\n</blockquote>",
        "id": 244826421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625349800
    },
    {
        "content": "<p>afonso360 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698621691\">PR review</a>.</p>",
        "id": 244826422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625349800
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#discussion_r663419485\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 244828573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625353543
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056#pullrequestreview-698624402\">PR review</a>.</p>",
        "id": 244828574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625353543
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3056\">PR #3056</a>.</p>",
        "id": 244828578,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625353551
    }
]