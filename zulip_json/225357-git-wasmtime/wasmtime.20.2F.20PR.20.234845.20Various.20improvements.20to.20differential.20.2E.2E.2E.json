[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845\">PR #4845</a> from <code>improve-differential-fuzzing</code> to <code>main</code>:</p>\n<blockquote>\n<p>I separated out a few commits below to the differential fuzzer which I was working on recently. The main changes are:</p>\n<ul>\n<li>A <code>start</code> function is now allowed. Support was added to <code>wasmi</code> to run the <code>start</code> function.</li>\n<li>Fuzzing now can continue if no engines match the current test case. This is only applicable if <code>ALLOWED_ENGINES</code> is set.</li>\n<li>Unstable proposals like memory64 should be less likely to get generated, ideally improving the rate of usage of engines like v8 and wasmi.</li>\n<li>A bug related to stack overflow was fixed where if one engine stack overflows it may have inconsistent state with the other so the fuzz test case needs to be discarded from then on.</li>\n</ul>\n</blockquote>",
        "id": 296745150,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662088331
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845\">PR #4845</a>.</p>",
        "id": 296745151,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662088336
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845\">PR #4845</a> from <code>improve-differential-fuzzing</code> to <code>main</code>.</p>",
        "id": 296827126,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662127436
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#discussion_r961851052\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of bailing out when an engine doesn't support a config, can we have a pre-pass where the engine is given mutable access to the config to turn off anything that it doesn't support? This just seems like better use of fuzzing time than rejecting iterations and bailing out.</p>\n</blockquote>",
        "id": 296857081,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662137014
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#pullrequestreview-1095119616\">PR review</a>.</p>",
        "id": 296857083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662137015
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#discussion_r961852329\">PR review comment</a>:</p>\n<blockquote>\n<p>Slightly surprised we would ever have a case where we can't run the test case in Wasmtime. What is even the point at that time?</p>\n</blockquote>",
        "id": 296857085,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662137015
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#pullrequestreview-1095119616\">PR review</a>.</p>",
        "id": 296857086,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662137015
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#pullrequestreview-1095124613\">PR review</a>.</p>",
        "id": 296857108,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662137025
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#pullrequestreview-1095230268\">PR review</a>.</p>",
        "id": 296876819,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662144192
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#discussion_r961927674\">PR review comment</a>:</p>\n<blockquote>\n<p>I think the issue this is addressing is if testing Wasmtime against Wasmtime has been disabled using the <code>ALLOWED_ENGINES</code> environment variable.</p>\n</blockquote>",
        "id": 296876820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662144192
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#pullrequestreview-1095257357\">PR review</a>.</p>",
        "id": 296881483,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662146134
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#discussion_r961946484\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah I've come around to feeling this way as well, I'll work on refactoring to enable this</p>\n</blockquote>",
        "id": 296881484,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662146135
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#discussion_r961946784\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah yeah this is only applicable when you're doing something like <code>ALLOWED_ENGINES=wasmi</code> locally where I was trying to only differentially-execute against <code>wasmi</code></p>\n</blockquote>",
        "id": 296881544,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662146160
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845#pullrequestreview-1095257715\">PR review</a>.</p>",
        "id": 296881545,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662146161
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4845\">PR #4845</a>.</p>",
        "id": 296881566,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662146164
    }
]