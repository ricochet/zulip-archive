[
    {
        "content": "<p><a href=\"https://github.com/ShinWonho\">ShinWonho</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">Issue #8281</a>.</p>",
        "id": 430718218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712037907
    },
    {
        "content": "<p>ShinWonho opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"p\">(</span><span class=\"n\">module</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"s\">\"table\"</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"w\"> </span><span class=\"cp\">$</span><span class=\"mi\">2</span><span class=\"w\"> </span><span class=\"n\">declare</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>terminate normally</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">539</span>:<span class=\"mi\">9</span>:\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"nc\">Extern</span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"nc\">Func</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"n\">zsh</span>: <span class=\"nc\">abort</span><span class=\"w\">      </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.0</p>\n<p>Operating system: macOS Ventura 13.6.6</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 430718220,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712037907
    },
    {
        "content": "<p>ShinWonho edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"p\">(</span><span class=\"n\">module</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"s\">\"table\"</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"w\"> </span><span class=\"n\">declare</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>terminate normally</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">539</span>:<span class=\"mi\">9</span>:\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"nc\">Extern</span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"nc\">Func</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"n\">zsh</span>: <span class=\"nc\">abort</span><span class=\"w\">      </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.0</p>\n<p>Operating system: macOS Ventura 13.6.6</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 430718274,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712037944
    },
    {
        "content": "<p>ShinWonho edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"p\">(</span><span class=\"n\">module</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"s\">\"table-init\"</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"w\"> </span><span class=\"n\">declare</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>terminate normally</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">539</span>:<span class=\"mi\">9</span>:\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"nc\">Extern</span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"nc\">Func</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"n\">zsh</span>: <span class=\"nc\">abort</span><span class=\"w\">      </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.0</p>\n<p>Operating system: macOS Ventura 13.6.6</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 430757100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712053060
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281#issuecomment-2032270455\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<p>Thanks for the report! Do you perhaps have more detail on how this was discovered? For example is this a reduced module? Or perhaps a fuzz-generated test case?</p>\n<p>Also as per <a href=\"https://docs.wasmtime.dev/security-what-is-considered-a-security-vulnerability.html\">our documentation</a> this is a security issue so we'll be issuing a CVE and a 19.0.1 release for this. If you discover more issues like this we'd be grateful if you'd <a href=\"https://docs.wasmtime.dev/security.html\">contact us privately</a> so we can coordinate this, thanks!</p>\n</blockquote>",
        "id": 430808422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712069610
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<h3>Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">;;</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n<span class=\"p\">(</span><span class=\"n\">module</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">func</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">export</span><span class=\"w\"> </span><span class=\"s\">\"table-init\"</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"kt\">i32</span><span class=\"p\">.</span><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">    </span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">)</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"n\">elem</span><span class=\"w\"> </span><span class=\"n\">declare</span><span class=\"w\"> </span><span class=\"n\">externref</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>terminate normally</p>\n<h3>Actual Results</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"o\">'</span><span class=\"na\">main</span><span class=\"o\">'</span><span class=\"w\"> </span><span class=\"n\">panicked</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">crates</span><span class=\"o\">/</span><span class=\"n\">runtime</span><span class=\"o\">/</span><span class=\"n\">src</span><span class=\"o\">/</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">539</span>:<span class=\"mi\">9</span>:\n<span class=\"nc\">assertion</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">left</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">right</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">failed</span>\n<span class=\"w\">  </span><span class=\"n\">left</span>: <span class=\"nc\">Extern</span>\n<span class=\"w\"> </span><span class=\"n\">right</span>: <span class=\"nc\">Func</span>\n<span class=\"n\">note</span>: <span class=\"nc\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">RUST_BACKTRACE</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"n\">environment</span><span class=\"w\"> </span><span class=\"n\">variable</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">display</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"n\">backtrace</span>\n<span class=\"n\">zsh</span>: <span class=\"nc\">abort</span><span class=\"w\">      </span><span class=\"n\">wasmtime</span><span class=\"w\"> </span><span class=\"o\">--</span><span class=\"n\">invoke</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"w\"> </span><span class=\"n\">table</span><span class=\"o\">-</span><span class=\"n\">init</span><span class=\"p\">.</span><span class=\"n\">wat</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 19.0.0</p>\n<p>Operating system: macOS Ventura 13.6.6</p>\n<p>Architecture: x86_64<br>\n</p>\n</blockquote>",
        "id": 430828720,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712075195
    },
    {
        "content": "<p>alexcrichton edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281#issuecomment-2032270455\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<p>Thanks for the report! Do you perhaps have more detail on how this was discovered? For example is this a reduced module? Or perhaps a fuzz-generated test case?</p>\n<p>Also as per <a href=\"https://docs.wasmtime.dev/security-what-is-considered-a-security-vulnerability.html\">our documentation</a> this is a security issue so we'll be issuing a CVE and a 19.0.1 release for this. If you discover more issues like this we'd be grateful if you'd <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/SECURITY.md\">contact us privately</a> so we can coordinate this, thanks!</p>\n</blockquote>",
        "id": 430857060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712085341
    },
    {
        "content": "<p>ShinWonho <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281#issuecomment-2033440713\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<p>We are in progress of implementing a wasm fuzzer based on <a href=\"https://github.com/Wasm-DSL/spectec\">SpecTec</a>. Currently, it generates short wasm programs by a simple syntax-driven approach. We performed differential testing with the latest wasmtime and previous versions, and luckily found the bug. We reduced the buggy program manually as the generated program was simple.</p>\n</blockquote>",
        "id": 430909074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712113029
    },
    {
        "content": "<p>ShinWonho edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281#issuecomment-2033440713\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<p>We are in progress of implementing a wasm fuzzer based on <a href=\"https://github.com/Wasm-DSL/spectec/tree/main/spectec\">SpecTec</a>. Currently, it generates short wasm programs by a simple syntax-driven approach. We performed differential testing with the latest wasmtime and previous versions, and luckily found the bug. We reduced the buggy program manually as the generated program was simple.</p>\n</blockquote>",
        "id": 430960234,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712136750
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281#issuecomment-2034828562\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/8281\">issue #8281</a>:</p>\n<blockquote>\n<p>Nice! If y'all need any help with fuzzing or such we're happy to talk as well. And thank you for fuzzing, we very much appreciate it!</p>\n</blockquote>",
        "id": 431110552,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1712155595
    }
]