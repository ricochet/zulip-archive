[
    {
        "content": "<p>fitzgen opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1707\">Issue #1707</a>:</p>\n<blockquote>\n<p>Right now, if there are two subtrees of LHS match ops that are the same, except they check different paths (e.g. checking if a first operand is the result of an <code>iadd</code> and checking if a second operand is the result of an <code>iadd</code>) we create different states because each state is associated with a <code>MatchOp</code> and a <code>MatchOp</code> embeds the path of the thing it is operating on within itself.</p>\n<p>We should investigate ways to de-duplicate these states and match operations.</p>\n<p>One idea is to implicitly maintain a stack of what the current instruction we're operating against is, and expand our generated automata to be pushdown automata. It is unclear to me how to expand our existing algorithm for transducer automata construction to add pushdown support. I don't know whether there is anything in the literature describing how to do this or not.</p>\n<p>Another idea is to add <code>MatchOp</code> opcodes that don't actually do any matching, but just do traversal-through-the-data-flow-graph operations. Things like push and pop operations, or register-assignment operations. The downside here is that we have more operations to process, and it isn't clear that the size of the automata will actually get smaller, even if we can de-duplicate more than we did before, because there would be so many more extra operations.</p>\n</blockquote>",
        "id": 197591769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589478268
    },
    {
        "content": "<p>fitzgen labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1707\">Issue #1707</a>:</p>\n<blockquote>\n<p>Right now, if there are two subtrees of LHS match ops that are the same, except they check different paths (e.g. checking if a first operand is the result of an <code>iadd</code> and checking if a second operand is the result of an <code>iadd</code>) we create different states because each state is associated with a <code>MatchOp</code> and a <code>MatchOp</code> embeds the path of the thing it is operating on within itself.</p>\n<p>We should investigate ways to de-duplicate these states and match operations.</p>\n<p>One idea is to implicitly maintain a stack of what the current instruction we're operating against is, and expand our generated automata to be pushdown automata. It is unclear to me how to expand our existing algorithm for transducer automata construction to add pushdown support. I don't know whether there is anything in the literature describing how to do this or not.</p>\n<p>Another idea is to add <code>MatchOp</code> opcodes that don't actually do any matching, but just do traversal-through-the-data-flow-graph operations. Things like push and pop operations, or register-assignment operations. The downside here is that we have more operations to process, and it isn't clear that the size of the automata will actually get smaller, even if we can de-duplicate more than we did before, because there would be so many more extra operations.</p>\n</blockquote>",
        "id": 197591771,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589478268
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1707#issuecomment-628787904\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/1707\">Issue #1707</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift:area:peepmatic\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>fitzgen: cranelift:area:peepmatic</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 197591811,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589478291
    }
]