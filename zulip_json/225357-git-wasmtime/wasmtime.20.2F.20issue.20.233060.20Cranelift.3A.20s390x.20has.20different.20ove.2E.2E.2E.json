[
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I don't really understand the behaviour of the overflow flag very well, so I don't know which ones are correct.<br>\nTo me <code>0x7F + 1</code> should be an overflow, but all three backends disagree with me. </p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested aarch64  and s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 244858098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625402833
    },
    {
        "content": "<p>afonso360 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I don't really understand the behaviour of the overflow flag very well, so I don't know which ones are correct.<br>\nTo me <code>0x7F + 1</code> should be an overflow, but all three backends disagree with me. </p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested aarch64  and s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 244858099,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625402833
    },
    {
        "content": "<p>afonso360 labeled <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I don't really understand the behaviour of the overflow flag very well, so I don't know which ones are correct.<br>\nTo me <code>0x7F + 1</code> should be an overflow, but all three backends disagree with me. </p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested aarch64  and s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 244858100,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625402833
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I don't really understand the behaviour of the overflow flag very well, so I don't know which ones are correct.<br>\nTo me <code>0x7F + 1</code> should be an overflow, but all three backends disagree with me. </p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested aarch64  and s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 244858105,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625402844
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I don't really understand the behaviour of the overflow flag very well, so I don't know which ones are correct.<br>\nTo me <code>0x7F + 1</code> should be an overflow, but all three backends disagree with me. </p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 244859299,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625404803
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I don't really understand the behaviour of the overflow flag very well, so I don't know which ones are correct.<br>\nTo me <code>0x7F + 1</code> should be an overflow, but all three backends disagree with me. </p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 244862895,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625410410
    },
    {
        "content": "<p>afonso360 edited <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I think both x86 and aarch64 are correct here, and we are probably just missing the overflow implementation in the s390x backend.</p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 244907960,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1625473789
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060#issuecomment-932544377\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>cc @uweigand</p>\n</blockquote>",
        "id": 255806291,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633121677
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060#issuecomment-933414443\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>So my first question would be, what <em>is</em> the supposed behavior for a \"icmp of\", and is this really useful?</p>\n<p>From what I can see, the behavior on Intel is the \"icmp of A, B\" means - \"would a subtraction A - B cause a signed overflow\"?   We don't have an instruction to do that directly on s390x, other than actually performing a subtraction and ignoring the result (and even that only for i64 and i32 -- for i16 and i8 this would have to be emulated by a longer sequence).</p>\n<p>If necessary, I guess we could do that, but I'm wondering when this is ever actually useful for anything.   (Note that checking for overflow after an operation you've already performed does make sense - but the \"icmp of\" seems strange.)<br>\n</p>\n</blockquote>",
        "id": 256046431,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633348925
    },
    {
        "content": "<p>afonso360 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060#issuecomment-934197420\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<blockquote>\n<p>From what I can see, the behavior on Intel is the \"icmp of A, B\" means - \"would a subtraction A - B cause a signed overflow\"?</p>\n</blockquote>\n<p>As far as i understand, yes that is exactly what this operation does.</p>\n<blockquote>\n<p>is this really useful?</p>\n</blockquote>\n<p>Not too sure, I haven't seen this operation a lot. It was added in 43a891dfa23d1ed838a7eebef601a38120d53ac5</p>\n</blockquote>",
        "id": 256198286,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633423447
    },
    {
        "content": "<p>uweigand <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060#issuecomment-934228265\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>From what I can see, the behavior on Intel is the \"icmp of A, B\" means - \"would a subtraction A - B cause a signed overflow\"?</p>\n</blockquote>\n<p>As far as i understand, yes that is exactly what this operation does.</p>\n<blockquote>\n<p>is this really useful?</p>\n</blockquote>\n<p>Not too sure, I haven't seen this operation a lot. It was added in <a href=\"https://github.com/bytecodealliance/wasmtime/commit/43a891dfa23d1ed838a7eebef601a38120d53ac5\">43a891d</a></p>\n</blockquote>\n<p>That commit introduces uses of \"trapif of\", which I do agree is useful.  It's the \"icmp of\" that I'm sceptical about ...</p>\n</blockquote>",
        "id": 256202452,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1633425717
    },
    {
        "content": "<p>jameysharp closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/3060\">issue #3060</a>:</p>\n<blockquote>\n<p>Hey!</p>\n<p>While fixing <code>br_icmp</code> handling on the interpreter I developed the following test case, in which the s390x backend disagrees with both x86_64 and aarch64.</p>\n<h3><code>.clif</code> Test Case</h3>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"></span>\n<span class=\"n\">target</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">machinst</span><span class=\"w\"></span>\n\n<span class=\"n\">function</span><span class=\"w\"> </span><span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kt\">i64</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">b1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"n\">block0</span><span class=\"p\">(</span><span class=\"n\">v0</span>: <span class=\"kt\">i64</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span>: <span class=\"kt\">i64</span><span class=\"p\">)</span>:\n    <span class=\"nc\">br_icmp</span><span class=\"p\">.</span><span class=\"kt\">i64</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">v1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">block2</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">jump</span><span class=\"w\"> </span><span class=\"n\">block1</span><span class=\"w\"></span>\n\n<span class=\"n\">block1</span>:\n    <span class=\"nc\">v2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v2</span><span class=\"w\"></span>\n\n<span class=\"n\">block2</span>:\n    <span class=\"nc\">v3</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">bconst</span><span class=\"p\">.</span><span class=\"n\">b1</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">return</span><span class=\"w\"> </span><span class=\"n\">v3</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">All</span><span class=\"w\"> </span><span class=\"n\">three</span><span class=\"w\"> </span><span class=\"n\">agree</span><span class=\"w\"> </span><span class=\"n\">on</span><span class=\"w\"> </span><span class=\"n\">these</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">aarch64</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"w\"> </span><span class=\"n\">x86_64</span><span class=\"w\"> </span><span class=\"n\">report</span><span class=\"w\"> </span><span class=\"n\">all</span><span class=\"w\"> </span><span class=\"n\">of</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"n\">following</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">true</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">s390x</span><span class=\"w\"> </span><span class=\"n\">reports</span><span class=\"w\"> </span><span class=\"n\">them</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kc\">false</span><span class=\"w\"></span>\n\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x80000000_00000000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">run</span>: <span class=\"o\">%</span><span class=\"n\">bricmp_of_i64</span><span class=\"p\">(</span><span class=\"mh\">0x7FFFFFFF_FFFFFFFF</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mh\">0xFFFFFFFF_FFFFFFFF</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">?</span><span class=\"w\"></span>\n</code></pre></div>\n<h3>Steps to Reproduce</h3>\n<p>Run the above testcase with <code>clif-util test ./of.clif</code></p>\n<h3>Expected Results</h3>\n<p>All backends should agree on the same set of results.</p>\n<p>I think both x86 and aarch64 are correct here, and we are probably just missing the overflow implementation in the s390x backend.</p>\n<h3>Actual Results</h3>\n<p>s390x disagrees with both x86_64 and aarch64 for some results.</p>\n<h3>Versions and Environment</h3>\n<p>Cranelift version or commit: main as of writing<br>\nOperating system: Windows 10 / Linux<br>\nArchitecture: aarch64 / s390x / x86_64</p>\n<p>Note: I only tested s390x in qemu. So it is possible that that plays a part in this as well.</p>\n</blockquote>",
        "id": 297616098,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1662565124
    }
]