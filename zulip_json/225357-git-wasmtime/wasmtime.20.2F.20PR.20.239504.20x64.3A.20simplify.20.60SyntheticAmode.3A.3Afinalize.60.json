[
    {
        "content": "<p>abrown opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a> from <code>abrown:refactor-amode</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>There is no need for a <code>SyntheticAmode</code> to request mutable access to the entire <code>EmitState</code>; it only needs a read-only <code>FrameLayout</code>.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 478593024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722253
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>.</p>",
        "id": 478593025,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722254
    },
    {
        "content": "<p><strong>abrown</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>.</p>",
        "id": 478593026,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722254
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504#pullrequestreview-2390771568\">PR review</a>.</p>",
        "id": 478593363,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722472
    },
    {
        "content": "<p>cfallin has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>.</p>",
        "id": 478593367,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722479
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504#issuecomment-2433586559\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>:</p>\n<blockquote>\n<p>What I'm aiming at is allowing any new assembler code to be ignorant of as much of the internals of <code>cranelift-codegen</code> as possible. I think this will make it easier to test, etc. It really would be nice if the assembler didn't need to know about <code>SyntheticAmode</code> at all; if a <code>SyntheticAmode</code> could be finalized down into its equivalent <code>Amode</code> before the assembler ever sees it, that would be a good simplification. But all of the <code>GprMem</code> types and such point at <code>SyntheticAmodes</code>...</p>\n</blockquote>",
        "id": 478593435,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722508
    },
    {
        "content": "<p>abrown updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>.</p>",
        "id": 478593726,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722647
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504#issuecomment-2433590544\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>:</p>\n<blockquote>\n<p>Oh, sorry, had to fix some build issues so I force-pushed!</p>\n</blockquote>",
        "id": 478593776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722677
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504#issuecomment-2433592075\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>:</p>\n<blockquote>\n<p>Interesting; in an old version of the MachInst backend, there was actually a separate pass to rewrite <code>SyntheticAmode</code>s, but we try to avoid separate passes and I don't think we have info to lower them when generating the instructions because they depend on details only known after regalloc, like frame layout. Perhaps one could design a way with parameterization of the enum (e.g. <code>Inst&lt;A: Into&lt;Amode&gt;&gt;</code>) and then a method to \"lift\" the into to <code>Inst</code> (Haskell brain: I want <code>fmap</code>)?</p>\n</blockquote>",
        "id": 478593907,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729722749
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/9504\">PR #9504</a>.</p>",
        "id": 478596255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1729724244
    }
]