[
    {
        "content": "<p><a href=\"https://github.com/jcbhmr\">jcbhmr</a> added the bug label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">Issue #7784</a>.</p>",
        "id": 416100750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705518527
    },
    {
        "content": "<p>jcbhmr opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">issue #7784</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>TODO: upload Wasm file here</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>TODO: first, ...</li>\n<li>TODO: second, ...</li>\n<li>Etc...</li>\n<li>copy-paste the wit below into wit/world</li>\n<li>use the bindgen!() macro to create the bindings modules</li>\n<li>see error</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package typst-community:unicode-math-class;\n\n/// ROOT [Crate unicode_math_class](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/)\ninterface crate {\n    // [Enum unicode_math_class::MathClass](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/enum.MathClass.html)\n    enum math-class {\n        normal,\n        alphabetic,\n        binary,\n        closing,\n        diacritic,\n        fence,\n        glyph-part,\n        large,\n        opening,\n        punctuation,\n        relation,\n        space,\n        unary,\n        vary,\n        special,\n    }\n\n    /// [Constant unicode_math_class::REVISION](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/constant.REVISION.html)\n    revision: func() -&gt; u8;\n\n    /// [Function unicode_math_class::class](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/fn.class.html)\n    class: func(c: string) -&gt; option&lt;math-class&gt;;\n}\n\n/// [Crate unicode_math_class](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/)\nworld unicode-math-class {\n    export crate;\n}\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>TODO: What do you expect to happen?</p>\n<p>Similar to wit-bindgen, I expected the \"crate\" to become \"crate_\"</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo_component_bindings</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">();</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">bindings</span>::<span class=\"n\">exports</span>::<span class=\"n\">typst_community</span>::<span class=\"n\">unicode_math_class</span>::<span class=\"n\">crate_</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">unicode_math_class</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">rs</span><span class=\"p\">;</span>\n\n<span class=\"k\">mod</span> <span class=\"nn\">math_class</span><span class=\"p\">;</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Component</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">wit</span>::<span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">revision</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u8</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">rs</span>::<span class=\"n\">REVISION</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">class</span><span class=\"p\">(</span><span class=\"n\">c</span>: <span class=\"nb\">String</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">wit</span>::<span class=\"n\">MathClass</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">chars</span><span class=\"p\">().</span><span class=\"n\">next</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">rs</span>::<span class=\"n\">class</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>TODO: What actually happens? Panic? Segfault? Incorrect result?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">jcbhmr</span><span class=\"o\">@</span><span class=\"n\">PIG</span><span class=\"o\">-</span><span class=\"mi\">2016</span>:<span class=\"o\">~/</span><span class=\"n\">Documents</span><span class=\"o\">/</span><span class=\"n\">unicode</span><span class=\"o\">-</span><span class=\"n\">math</span><span class=\"o\">-</span><span class=\"n\">class</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">make</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">rs</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">-</span><span class=\"n\">rs</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">-</span><span class=\"n\">rs</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">jcbhmr</span><span class=\"o\">/</span><span class=\"n\">Documents</span><span class=\"o\">/</span><span class=\"n\">unicode</span><span class=\"o\">-</span><span class=\"n\">math</span><span class=\"o\">-</span><span class=\"n\">class</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">rs</span><span class=\"p\">)</span>\n<span class=\"n\">error</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">keyword</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">crate</span><span class=\"err\">`</span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">tests</span><span class=\"o\">/</span><span class=\"n\">rs</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">5</span>\n<span class=\"w\">  </span><span class=\"o\">|</span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"s\">\"../../wit\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">keyword</span>\n<span class=\"w\">  </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">originates</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">bindgen</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Nightly</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"o\">-</span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 16.0.0</p>\n<p>Operating system: Windows 10 using WSL</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 416100756,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705518529
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784#issuecomment-1897554813\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">issue #7784</a>:</p>\n<blockquote>\n<p>Thanks! This'd be a good first issue if anyone's willing to tackle it. We've already <a href=\"https://github.com/bytecodealliance/wasmtime/blob/3f52cffa630b1fd419766f0c206b7045dd902bb8/crates/wit-bindgen/src/rust.rs#L424\">got a function for handling Rust keywords</a> but we're probably forgetting to call it somewhere. This issue will involve hunting down where the forgotten location is, probably inserting a call to <code>to_rust_ident</code>, and then adding a test case in <code>crates/component-macro/tests/codegen</code>.</p>\n</blockquote>",
        "id": 416470474,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705537950
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the wasm-proposal:component-model label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">Issue #7784</a>.</p>",
        "id": 416470488,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705537956
    },
    {
        "content": "<p><a href=\"https://github.com/alexcrichton\">alexcrichton</a> added the good first issue label to <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">Issue #7784</a>.</p>",
        "id": 416470489,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705537956
    },
    {
        "content": "<p>Archisman-Mridha <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784#issuecomment-1897727944\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">issue #7784</a>:</p>\n<blockquote>\n<p>@alexcrichton You can assign this to me. I am working on it.</p>\n</blockquote>",
        "id": 416489320,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705548673
    },
    {
        "content": "<p>Archisman-Mridha edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784#issuecomment-1897727944\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">issue #7784</a>:</p>\n<blockquote>\n<p>@alexcrichton You can assign this to me. I am working on it.</p>\n<p>We need to <code>to_rust_ident</code> probably somewhere inside <code>Wasmtime::name_interface</code> in <code>crates/wit-bindgen/src/lib.rs</code>.</p>\n</blockquote>",
        "id": 416492118,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705550032
    },
    {
        "content": "<p>Archisman-Mridha edited a <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784#issuecomment-1897727944\">comment</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">issue #7784</a>:</p>\n<blockquote>\n<p>@alexcrichton You can assign this to me. I am working on it.</p>\n<p>We need to use <code>to_rust_ident</code> probably somewhere inside <code>Wasmtime::name_interface</code> in <code>crates/wit-bindgen/src/lib.rs</code>.</p>\n</blockquote>",
        "id": 416492173,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1705550044
    },
    {
        "content": "<p>alexcrichton closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/7784\">issue #7784</a>:</p>\n<blockquote>\n<p>Thanks for filing a bug report! Please fill out the TODOs below.</p>\n<p><strong>Note: if you want to report a security issue, please read our <a href=\"https://bytecodealliance.org/security\">security policy</a>!</strong></p>\n<h3>Test Case</h3>\n<p>TODO: upload Wasm file here</p>\n<h3>Steps to Reproduce</h3>\n<ul>\n<li>TODO: first, ...</li>\n<li>TODO: second, ...</li>\n<li>Etc...</li>\n<li>copy-paste the wit below into wit/world</li>\n<li>use the bindgen!() macro to create the bindings modules</li>\n<li>see error</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"wit\"><pre><span></span><code>package typst-community:unicode-math-class;\n\n/// ROOT [Crate unicode_math_class](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/)\ninterface crate {\n    // [Enum unicode_math_class::MathClass](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/enum.MathClass.html)\n    enum math-class {\n        normal,\n        alphabetic,\n        binary,\n        closing,\n        diacritic,\n        fence,\n        glyph-part,\n        large,\n        opening,\n        punctuation,\n        relation,\n        space,\n        unary,\n        vary,\n        special,\n    }\n\n    /// [Constant unicode_math_class::REVISION](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/constant.REVISION.html)\n    revision: func() -&gt; u8;\n\n    /// [Function unicode_math_class::class](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/fn.class.html)\n    class: func(c: string) -&gt; option&lt;math-class&gt;;\n}\n\n/// [Crate unicode_math_class](https://docs.rs/unicode-math-class/0.1.0/unicode_math_class/)\nworld unicode-math-class {\n    export crate;\n}\n</code></pre></div>\n<h3>Expected Results</h3>\n<p>TODO: What do you expect to happen?</p>\n<p>Similar to wit-bindgen, I expected the \"crate\" to become \"crate_\"</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">cargo_component_bindings</span>::<span class=\"n\">generate</span><span class=\"o\">!</span><span class=\"p\">();</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">bindings</span>::<span class=\"n\">exports</span>::<span class=\"n\">typst_community</span>::<span class=\"n\">unicode_math_class</span>::<span class=\"n\">crate_</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">wit</span><span class=\"p\">;</span>\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">unicode_math_class</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"n\">rs</span><span class=\"p\">;</span>\n\n<span class=\"k\">mod</span> <span class=\"nn\">math_class</span><span class=\"p\">;</span>\n\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Component</span><span class=\"p\">;</span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">wit</span>::<span class=\"n\">Guest</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">Component</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">revision</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"kt\">u8</span> <span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"n\">rs</span>::<span class=\"n\">REVISION</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">class</span><span class=\"p\">(</span><span class=\"n\">c</span>: <span class=\"nb\">String</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">wit</span>::<span class=\"n\">MathClass</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"p\">.</span><span class=\"n\">chars</span><span class=\"p\">().</span><span class=\"n\">next</span><span class=\"p\">().</span><span class=\"n\">unwrap</span><span class=\"p\">();</span>\n<span class=\"w\">        </span><span class=\"n\">rs</span>::<span class=\"n\">class</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">).</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">x</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">into</span><span class=\"p\">())</span>\n<span class=\"w\">    </span><span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<h3>Actual Results</h3>\n<p>TODO: What actually happens? Panic? Segfault? Incorrect result?</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">jcbhmr</span><span class=\"o\">@</span><span class=\"n\">PIG</span><span class=\"o\">-</span><span class=\"mi\">2016</span>:<span class=\"o\">~/</span><span class=\"n\">Documents</span><span class=\"o\">/</span><span class=\"n\">unicode</span><span class=\"o\">-</span><span class=\"n\">math</span><span class=\"o\">-</span><span class=\"n\">class</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"cp\">$</span><span class=\"w\"> </span><span class=\"n\">make</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">rs</span>\n<span class=\"n\">cargo</span><span class=\"w\"> </span><span class=\"n\">test</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">p</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">-</span><span class=\"n\">rs</span>\n<span class=\"w\">   </span><span class=\"n\">Compiling</span><span class=\"w\"> </span><span class=\"n\">tests</span><span class=\"o\">-</span><span class=\"n\">rs</span><span class=\"w\"> </span><span class=\"n\">v0</span><span class=\"p\">.</span><span class=\"mf\">0.0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">/</span><span class=\"n\">home</span><span class=\"o\">/</span><span class=\"n\">jcbhmr</span><span class=\"o\">/</span><span class=\"n\">Documents</span><span class=\"o\">/</span><span class=\"n\">unicode</span><span class=\"o\">-</span><span class=\"n\">math</span><span class=\"o\">-</span><span class=\"n\">class</span><span class=\"p\">.</span><span class=\"n\">wasm</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">rs</span><span class=\"p\">)</span>\n<span class=\"n\">error</span>: <span class=\"nc\">expected</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">keyword</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"k\">crate</span><span class=\"err\">`</span>\n<span class=\"w\"> </span><span class=\"o\">-</span>-&gt; <span class=\"nc\">tests</span><span class=\"o\">/</span><span class=\"n\">rs</span><span class=\"o\">/</span><span class=\"n\">tests</span><span class=\"o\">/</span><span class=\"n\">common</span><span class=\"o\">/</span><span class=\"k\">mod</span><span class=\"p\">.</span><span class=\"n\">rs</span>:<span class=\"mi\">6</span>:<span class=\"mi\">5</span>\n<span class=\"w\">  </span><span class=\"o\">|</span>\n<span class=\"mi\">6</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"n\">bindgen</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"s\">\"../../wit\"</span><span class=\"p\">);</span>\n<span class=\"w\">  </span><span class=\"o\">|</span><span class=\"w\">     </span><span class=\"o\">^^^^^^^^^^^^^^^^^^^^^^^^</span><span class=\"w\"> </span><span class=\"n\">expected</span><span class=\"w\"> </span><span class=\"n\">identifier</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">found</span><span class=\"w\"> </span><span class=\"n\">keyword</span>\n<span class=\"w\">  </span><span class=\"o\">|</span>\n<span class=\"w\">  </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">note</span>: <span class=\"nc\">this</span><span class=\"w\"> </span><span class=\"n\">error</span><span class=\"w\"> </span><span class=\"n\">originates</span><span class=\"w\"> </span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">the</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"w\"> </span><span class=\"err\">`</span><span class=\"n\">bindgen</span><span class=\"err\">`</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"k\">in</span><span class=\"w\"> </span><span class=\"n\">Nightly</span><span class=\"w\"> </span><span class=\"n\">builds</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">run</span><span class=\"w\"> </span><span class=\"n\">with</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"n\">Z</span><span class=\"w\"> </span><span class=\"kr\">macro</span><span class=\"o\">-</span><span class=\"n\">backtrace</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">more</span><span class=\"w\"> </span><span class=\"n\">info</span><span class=\"p\">)</span>\n</code></pre></div>\n<h3>Versions and Environment</h3>\n<p>Wasmtime version or commit: 16.0.0</p>\n<p>Operating system: Windows 10 using WSL</p>\n<p>Architecture: x86_64</p>\n<h3>Extra Info</h3>\n<p>Anything else you'd like to add?<br>\n</p>\n</blockquote>",
        "id": 421111875,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707766042
    }
]