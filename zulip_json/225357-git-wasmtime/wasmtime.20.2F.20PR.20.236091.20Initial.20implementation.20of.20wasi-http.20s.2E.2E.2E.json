[
    {
        "content": "<p>brendandburns opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a> from <code>http_serve</code> to <code>main</code>:</p>\n<blockquote>\n<p>This builds on top of #5929 to add an implementation of http serving.</p>\n<p>This is a rough draft, but is ready for review, I think.</p>\n<p>A <code>server.c</code> example is also added.</p>\n<p>cc @pchickey </p>\n</blockquote>",
        "id": 343823501,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679542552
    },
    {
        "content": "<p>brendandburns edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a> from <code>http_serve</code> to <code>main</code>:</p>\n<blockquote>\n<p>This builds on top of #5929 to add an implementation of http serving.</p>\n<p>This is a rough draft, but is ready for review, I think.</p>\n<p>A <code>server.c</code> example is also added.</p>\n<p>The only thing that really needs review is the final <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091/commits/3d82ea1b42d0ab84bd13fc8c0dd7cfb1046c5bbe\">commit</a> </p>\n<p>cc @pchickey </p>\n</blockquote>",
        "id": 343823883,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679542705
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a> from <code>http_serve</code> to <code>main</code>.</p>",
        "id": 344025271,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679587192
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a> from <code>http_serve</code> to <code>main</code>.</p>",
        "id": 344364135,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679690482
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345231864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680033844
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345231866,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680033844
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/jameysharp\">jameysharp</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345231867,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680033844
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345231869,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680033845
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/cfallin\">cfallin</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345231870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680033845
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345231872,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680033845
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a> from <code>http_serve</code> to <code>main</code>.</p>",
        "id": 345231873,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680033845
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a> from <code>http_serve</code> to <code>main</code>.</p>",
        "id": 345233486,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680034387
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345293337,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680066432
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-default-reviewers\">wasmtime-default-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345293338,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680066432
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a> from <code>http_serve</code> to <code>main</code>.</p>",
        "id": 345293339,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680066432
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345712442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680190210
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 345831068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680234061
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 347274580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680740060
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 347301013,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680755820
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 347301132,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680755905
    },
    {
        "content": "<p>brendandburns edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>:</p>\n<blockquote>\n<p>This builds on top of #5929 to add an implementation of http serving.</p>\n<p>This is a rough draft, but is ready for review, I think.</p>\n<p>~A <code>server.c</code> example is also added.~</p>\n<p>The only thing that really needs review is the final <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091/commits/9b2e2f5c0131ee510f7eaccebb0b900c2eacb1e8\">commit</a> </p>\n<p>cc @pchickey </p>\n</blockquote>",
        "id": 347301297,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680756031
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 347471963,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680799675
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 347472083,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680799707
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 347475577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680800695
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 347484074,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1680803266
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 348600892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681267370
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 348983177,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681353467
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 348985728,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681354837
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-fuzz-reviewers\">wasmtime-fuzz-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 348985730,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681354837
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 348985731,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681354837
    },
    {
        "content": "<p><strong>brendandburns</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 348985732,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681354837
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 348985733,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681354837
    },
    {
        "content": "<p>brendandburns edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>:</p>\n<blockquote>\n<p>This builds on top of #5929 to add an implementation of http serving.</p>\n<p>~A <code>server.c</code> example is also added.~</p>\n<p>This is a basic implementation, but ready for feedback/review.</p>\n<p>cc @pchickey </p>\n</blockquote>",
        "id": 348985793,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681354870
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 350179834,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681571848
    },
    {
        "content": "<p>brendandburns edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>:</p>\n<blockquote>\n<p>This builds on top of #5929 to add an implementation of http serving.</p>\n<p>~A <code>server.c</code> example is also added.~</p>\n<p>This is a basic implementation, but ready for feedback/review.</p>\n<p>Known limitations:</p>\n<ul>\n<li>Single-threaded for now. It can only handle one request at a time</li>\n<li>Server is only on <code>localhost:8080</code> and is not currently configurable</li>\n<li>Memory state is not preserved between calls to the server.</li>\n<li>The <code>main</code> method of your HTTP serving WASM must exit before the server starts (no infinite loops)</li>\n</ul>\n<p>There are some interesting questions about what we actually want <code>wasi-http</code> serving to mean revealed by this implementation. </p>\n<p>Specifically, three interesting questions come to mind.</p>\n<ul>\n<li>How do we want to configure the server that is started (listening host/port), currently there are no flags to <code>wasmtime</code> that are  specific to a module. I think using an <code>http_config.toml</code> file similar to what the cache settings does makes the most sense, but interested in other's thoughts.</li>\n<li>What is the relationship between serving and the <code>main</code>/<code>_start</code> method in the WASM module. If you request an HTTP server, should the main run? Should the server run in parallel to the main? Currently it does run the main, but it expects it to exit before the server starts up.</li>\n<li>Currently there's no memory persistence between calls to the request handler, static variables are re-initialized with each call. I _believe_ that this is because the <code>main</code> has exited and so the memory is recreated fresh each time. What do we expect the memory lifespan inside the module to be.</li>\n</ul>\n<p>It's quite possible that some of these questions are better asked in the wasi-http spec repo rather than this implementation, happy to take the discussion there. It's related to the discussion about requests here: <a href=\"https://github.com/WebAssembly/wasi-http/issues/24\">https://github.com/WebAssembly/wasi-http/issues/24</a></p>\n<p>cc @pchickey </p>\n</blockquote>",
        "id": 350181533,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1681572473
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 352589293,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682440762
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#pullrequestreview-1400862195\">PR review</a>:</p>\n<blockquote>\n<p>I left some idiom comments, which are pretty minor overall.</p>\n<p>There is, however, one much bigger ask I have from this PR: now that wasmtime is running inside a tokio executor, we need to change to running wasmtime with its async API: set <code>Config::async_support(true)</code>, and then swap out <code>instantiate</code>  for <code>instantiate_async</code>, <code>call</code> for <code>call_async</code>. Then, for all of wasi-http's calls into the host, change the bindgen to set <code>async = true</code> and then remove all the run-inside-tokio wrappers in the synchronous bodies of the import functions.</p>\n<p>Also, we need some tests to show this works. An echo server like <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/test-programs/tests/http_tests/runtime/wasi_http_tests.rs#L14-L22\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/test-programs/tests/http_tests/runtime/wasi_http_tests.rs#L14-L22</a> would be one good test program, and then a simple proxy that exercises the client http inside the server context as well.</p>\n</blockquote>",
        "id": 352653141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682463407
    },
    {
        "content": "<p>pchickey submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#pullrequestreview-1400862195\">PR review</a>:</p>\n<blockquote>\n<p>I left some idiom comments, which are pretty minor overall.</p>\n<p>There is, however, one much bigger ask I have from this PR: now that wasmtime is running inside a tokio executor, we need to change to running wasmtime with its async API: set <code>Config::async_support(true)</code>, and then swap out <code>instantiate</code>  for <code>instantiate_async</code>, <code>call</code> for <code>call_async</code>. Then, for all of wasi-http's calls into the host, change the bindgen to set <code>async = true</code> and then remove all the run-inside-tokio wrappers in the synchronous bodies of the import functions.</p>\n<p>Also, we need some tests to show this works. An echo server like <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/test-programs/tests/http_tests/runtime/wasi_http_tests.rs#L14-L22\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/test-programs/tests/http_tests/runtime/wasi_http_tests.rs#L14-L22</a> would be one good test program, and then a simple proxy that exercises the client http inside the server context as well.</p>\n</blockquote>",
        "id": 352653142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682463407
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#discussion_r1177133862\">PR review comment</a>:</p>\n<blockquote>\n<p>Idiom: this constructor is better phrased as an <code>impl From&lt;hyper::Method for crate::types::Method</code></p>\n</blockquote>",
        "id": 352653143,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682463407
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#discussion_r1177135277\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            _ =&gt; Method::Other(m.as_str().to_string()),\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 352653144,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682463408
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#discussion_r1177135615\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            s =&gt; crate::types::Scheme::Other(s.to_string()),\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 352653145,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682463408
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#discussion_r1177137670\">PR review comment</a>:</p>\n<blockquote>\n<p>I don't like when clones are hidden inside unassuming impls like From, and <code>From&lt;&amp;mut _&gt;</code> is unidiomatic as well. <code>impl Stream { fn as_bytes(&amp;self) -&gt; Self { Bytes::from(self.data.clone()) }}</code> would be a better way to write this one</p>\n</blockquote>",
        "id": 352653146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682463408
    },
    {
        "content": "<p>pchickey created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#discussion_r1177136347\">PR review comment</a>:</p>\n<blockquote>\n<p>Unfortunately this one is tedious to implement properly, and its probably OK to leave it out for a little bit until we switch over to using the component model runtime</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>            Method::Other(_) =&gt; unimplemented!(\"Method::Other\"),\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 352653147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682463408
    },
    {
        "content": "<p>pchickey edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091#discussion_r1177137670\">PR review comment</a>.</p>",
        "id": 352945934,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1682542733
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 357980476,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683923421
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 357982154,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683924055
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 358008719,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1683935588
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 362514119,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685551626
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 362917653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685672665
    },
    {
        "content": "<p>brendandburns updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 362917666,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1685672688
    },
    {
        "content": "<p>brendandburns closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6091\">PR #6091</a>.</p>",
        "id": 389300205,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1693956205
    }
]