[
    {
        "content": "<p>elliottt opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a> from <code>elliottt:trevor/fix-7874</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Add a test to expose issues with unbounded recursion through <code>iadd</code> during egraph rewrites, and bound the recursion of <code>will_simplify_with_ireduce</code>.</p>\n<p>Fixes #7874</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 420162295,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707267491
    },
    {
        "content": "<p><strong>elliottt</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a> as ready for review.</p>",
        "id": 420162300,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707267498
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a>.</p>",
        "id": 420162301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707267499
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a>.</p>",
        "id": 420162302,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707267499
    },
    {
        "content": "<p><strong>elliottt</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a>.</p>",
        "id": 420162310,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707267507
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a>:</p>\n<blockquote>\n<p>Expose the underlying issue of #7874 by adding a test with a long chain of additions, and then fix the bug by bounding the recursion of <code>will_simplify_with_ireduce</code>.</p>\n<p>Reading through the changes in #7719, it seemed like the recursive cases in <code>will_simplify_with_ireduce</code> were missing two things:</p>\n<ol>\n<li>an additional guard of <code>reducible_modular_op</code> before the recursion, which showed up in the entry-point in <code>simplify</code></li>\n<li>a depth bound to ensure that the recursion doesn't get out of control.</li>\n</ol>\n<p>This PR makes both of these changes, and resolves the compilation time issues reported in #7874.</p>\n<p>Fixes #7874</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 420162565,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707267690
    },
    {
        "content": "<p>elliottt edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a>:</p>\n<blockquote>\n<p>Expose the underlying issue of #7874 by adding a test with a long chain of additions, and then fix the bug by bounding the recursion of <code>will_simplify_with_ireduce</code>.</p>\n<p>Reading through the changes in #7719, it seemed like the recursive cases in <code>will_simplify_with_ireduce</code> were missing two things:</p>\n<ol>\n<li>an additional guard of <code>reducible_modular_op</code> before the recursion, which showed up in the entry-point in <code>simplify</code></li>\n<li>a depth bound to ensure that the recursion doesn't get out of control.</li>\n</ol>\n<p>This PR makes both of these changes, and resolves the compilation time issues reported in #7874. The depth bound was arbitrary, and it would be fine to increase it if necessary.</p>\n<p>Fixes #7874</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 420162736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707267811
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882#issuecomment-1931167816\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 420170976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707273870
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882#pullrequestreview-1866911130\">PR review</a>:</p>\n<blockquote>\n<p>Looks great!</p>\n</blockquote>",
        "id": 420182046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707282114
    },
    {
        "content": "<p>fitzgen merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7882\">PR #7882</a>.</p>",
        "id": 420185028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1707284512
    }
]