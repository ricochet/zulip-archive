[
    {
        "content": "<p>scottmcm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7654\">PR #7654</a> from <code>scottmcm:normalize-add-sub-const</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This PR came out of me seeing that the opt patterns were written out to handle both</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">ineg</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div>\n<p>and thus being sad that every pattern including <code>(iadd _ 1)</code> needed to be written again for <code>(isub _ -1)</code>.</p>\n<p>So this takes a look at more opt patterns around <code>iadd</code> and <code>isub</code>:</p>\n<ul>\n<li>Various combinations with <code>ineg</code>, like <code>x + -y == -y + x == -(y - x) == x - y</code></li>\n<li>Avoiding subtract-a-\"negative\"-constant, so <code>(isub x 255_u8)</code> becomes <code>(iadd x 1_u8)</code> (but <code>(isub x 1)</code> is left alone)</li>\n<li>And removing now-unnecessary patterns in arithmetic.isle and bitops.isle, like I did in #7599 </li>\n</ul>\n<p>I originally had <code>x + -1</code> â†’ <code>x - 1</code> as well, but that regressed codegen with addressing modes -- something that had been in one x64 LEA ended up being a LEA and a SUB.  So there's an interesting question about whether to turn <em>all</em> <code>(isub x CONST)</code> into <code>(iadd x CONST)</code>, but that felt like something that would need a zulip conversation, and thus it's not included in this hopefully-simpler PR.<br>\n</p>\n</blockquote>",
        "id": 406596613,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701972910
    },
    {
        "content": "<p><strong>scottmcm</strong> requested <a href=\"https://github.com/abrown\">abrown</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7654\">PR #7654</a>.</p>",
        "id": 406596615,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701972910
    },
    {
        "content": "<p><strong>scottmcm</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7654\">PR #7654</a>.</p>",
        "id": 406596616,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701972911
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7654#issuecomment-1845996140\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7654\">PR #7654</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 406609820,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701978285
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7654#pullrequestreview-1771253717\">PR review</a>:</p>\n<blockquote>\n<p>Thanks!</p>\n</blockquote>",
        "id": 406633272,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701989151
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7654\">PR #7654</a>.</p>",
        "id": 406637440,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701991228
    }
]