[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a> from <code>aarch64-baldrdash-fix</code> to <code>main</code>:</p>\n<blockquote>\n<p>In the Baldrdash (SpiderMonkey) embedding, we must take care to<br>\nzero-extend all function arguments to callees in integer registers when<br>\nthe types are narrower than 64 bits. This is because, unlike the native<br>\nSysV ABI, the Baldrdash ABI expects high bits to be cleared. Not doing<br>\nso leads to difficult-to-trace errors where high bits falsely tag an<br>\nint32 as e.g. an object pointer, leading to potential security issues.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 205416264,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596058263
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a>.</p>",
        "id": 205416265,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596058263
    },
    {
        "content": "<p><strong>cfallin</strong> requested <a href=\"https://github.com/bnjbvr\">bnjbvr</a> and <a href=\"https://github.com/julian-seward1\">julian-seward1</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a>.</p>",
        "id": 205416266,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596058263
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-458392195\">PR Review</a>.</p>",
        "id": 205477214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596115194
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a> from <code>aarch64-baldrdash-fix</code> to <code>main</code>:</p>\n<blockquote>\n<p>In the Baldrdash (SpiderMonkey) embedding, we must take care to<br>\nzero-extend all function arguments to callees in integer registers when<br>\nthe types are narrower than 64 bits. This is because, unlike the native<br>\nSysV ABI, the Baldrdash ABI expects high bits to be cleared. Not doing<br>\nso leads to difficult-to-trace errors where high bits falsely tag an<br>\nint32 as e.g. an object pointer, leading to potential security issues.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 205526653,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596139859
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459125607\">PR Review</a>.</p>",
        "id": 205583550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596197463
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#discussion_r463573498\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Presumably (correct me if I'm wrong) this is correct but a bit suboptimal, in that we're extending a value that we read from the stack in a previous insn; and in the ideal case we could have just done a suitable widening load?  Is that a correct understanding?  I'm not saying this should be fixed, but just checking I have this right.</p>\n</blockquote>",
        "id": 205583551,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596197463
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459126957\">PR Review</a>.</p>",
        "id": 205583697,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596197618
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#discussion_r463574562\">PR Review Comment</a>:</p>\n<blockquote>\n<p>I'm not 100% sure what I'm looking at here, but I was a bit mystified in that I can't see any signed widening insns in the expected outputs.  But it looks like the patch above handles both signed and unsigned widening.  If a signed-widening version of this test case does make sense, please can you add it?</p>\n</blockquote>",
        "id": 205583698,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596197618
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459127296\">PR Review</a>.</p>",
        "id": 205583769,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596197655
    },
    {
        "content": "<p>julian-seward1 created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#discussion_r463574829\">PR Review Comment</a>:</p>\n<blockquote>\n<p>And ditto observation for the x64 equivalent of this, AFAICS.</p>\n</blockquote>",
        "id": 205583770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596197655
    },
    {
        "content": "<p>julian-seward1 submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459127524\">PR Review</a>.</p>",
        "id": 205583794,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596197683
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459142923\">PR Review</a>.</p>",
        "id": 205585748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596199375
    },
    {
        "content": "<p>bnjbvr created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#discussion_r463587411\">PR Review Comment</a>:</p>\n<blockquote>\n<p>+1; this only tests uext, not sext, which would be nice to have tests for!</p>\n</blockquote>",
        "id": 205585749,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596199375
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459142923\">PR Review</a>.</p>",
        "id": 205585750,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596199375
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a> from <code>aarch64-baldrdash-fix</code> to <code>main</code>:</p>\n<blockquote>\n<p>In the Baldrdash (SpiderMonkey) embedding, we must take care to<br>\nzero-extend all function arguments to callees in integer registers when<br>\nthe types are narrower than 64 bits. This is because, unlike the native<br>\nSysV ABI, the Baldrdash ABI expects high bits to be cleared. Not doing<br>\nso leads to difficult-to-trace errors where high bits falsely tag an<br>\nint32 as e.g. an object pointer, leading to potential security issues.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 205614635,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596214665
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459322729\">PR Review</a>.</p>",
        "id": 205614747,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596214712
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#discussion_r463723829\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Added <code>sext</code> tests as well; thanks!</p>\n</blockquote>",
        "id": 205614748,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596214712
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a> from <code>aarch64-baldrdash-fix</code> to <code>main</code>:</p>\n<blockquote>\n<p>In the Baldrdash (SpiderMonkey) embedding, we must take care to<br>\nzero-extend all function arguments to callees in integer registers when<br>\nthe types are narrower than 64 bits. This is because, unlike the native<br>\nSysV ABI, the Baldrdash ABI expects high bits to be cleared. Not doing<br>\nso leads to difficult-to-trace errors where high bits falsely tag an<br>\nint32 as e.g. an object pointer, leading to potential security issues.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 205614975,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596214817
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#pullrequestreview-459325451\">PR Review</a>.</p>",
        "id": 205615262,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596214967
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081#discussion_r463725927\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Other way around -- we're storing a value in a register to the stack; sadly there's no store instruction (as far as I know) that can sign/zero-extend the bottom N bits of a GPR into 64 bits and then store that 64 bits, all in one go.</p>\n</blockquote>",
        "id": 205615263,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596214967
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a> from <code>aarch64-baldrdash-fix</code> to <code>main</code>:</p>\n<blockquote>\n<p>In the Baldrdash (SpiderMonkey) embedding, we must take care to<br>\nzero-extend all function arguments to callees in integer registers when<br>\nthe types are narrower than 64 bits. This is because, unlike the native<br>\nSysV ABI, the Baldrdash ABI expects high bits to be cleared. Not doing<br>\nso leads to difficult-to-trace errors where high bits falsely tag an<br>\nint32 as e.g. an object pointer, leading to potential security issues.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 205616959,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596215960
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2081\">PR #2081</a>.</p>",
        "id": 205630043,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596222820
    }
]