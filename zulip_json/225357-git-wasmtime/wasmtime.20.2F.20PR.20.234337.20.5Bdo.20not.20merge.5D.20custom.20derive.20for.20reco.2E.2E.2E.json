[
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a first draft of an implementation of<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/4308\">https://github.com/bytecodealliance/wasmtime/issues/4308</a>, i.e. derive macros for<br>\n<code>ComponentType</code>, <code>Lift</code>, and <code>Lower</code> for composite types in the component model.</p>\n<p>It borrows heavily from the work @jameysharp did in<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/4217\">https://github.com/bytecodealliance/wasmtime/pull/4217</a>.  Thanks, Jamey!</p>\n<p>Thanks also to @fibonacci1729 for pairing up on this.</p>\n<p>This draft only covers records; I expect the other composite types will follow a<br>\nsimilar pattern.  I'm looking to get feedback on the overall approach before I<br>\ncontinue.</p>\n<p>Known (potential) issues:</p>\n<ul>\n<li>\n<p>Currently, the implementations for <code>ComponentType</code>, <code>Lift</code>, and <code>Lower</code><br>\n  duplicate a fair amount of code, so I plan to address that.</p>\n</li>\n<li>\n<p>I've made <code>ComponentTypesBuilder::record_type</code> public for testing purposes.<br>\n  Let me know if that's a problem or if there's a better way.</p>\n</li>\n<li>\n<p>Also for testing: I've made <code>Memory::wasmtime_memory</code> and <code>Store::inner</code><br>\n  crate-public.</p>\n</li>\n<li>\n<p>I've added a <code>test</code> module to crates/wasmtime/src/component/func/typed.rs for<br>\n  testing the derives.  Let me know if there's a better place for it.</p>\n</li>\n</ul>\n<p>Signed-off-by: Joel Dice &lt;<a href=\"mailto:joel.dice@fermyon.com\">joel.dice@fermyon.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 287631292,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656360890
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287635189,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656363125
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1020770199\">PR review</a>.</p>",
        "id": 287637400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364230
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1020770199\">PR review</a>.</p>",
        "id": 287637401,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364230
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907789630\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this have a <code>.context(...)</code> with information about the field name that failed to type-check?</p>\n</blockquote>",
        "id": 287637402,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364230
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907789436\">PR review comment</a>:</p>\n<blockquote>\n<p>I think it's ok to skip the <code>#[inline]</code> here since this is pretty beefy internally.</p>\n</blockquote>",
        "id": 287637404,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364230
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907790185\">PR review comment</a>:</p>\n<blockquote>\n<p>Would you be ok switching this to the style of <code>use</code> elsewhere in the crate where it's one <code>use ..</code> per line?</p>\n</blockquote>",
        "id": 287637405,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907790832\">PR review comment</a>:</p>\n<blockquote>\n<p>If you're up for it, could this be moved externally to <code>tests/all/component_model/*.rs</code>? I personally prefer to test the public-facing interface wherever possible because the internal ones like the builder used here are often subject to more churn.</p>\n</blockquote>",
        "id": 287637406,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907791712\">PR review comment</a>:</p>\n<blockquote>\n<p>If possible I'd prefer to keep this hidden, but I think that will be enabled if the test above is moved to an external test.</p>\n</blockquote>",
        "id": 287637408,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907795980\">PR review comment</a>:</p>\n<blockquote>\n<p>Personally I think it's ok to inline all these at the use-site, otherwise I find myself tabbing back and forth to what exactly this error message is saying</p>\n</blockquote>",
        "id": 287637409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907791228\">PR review comment</a>:</p>\n<blockquote>\n<p>I think thes can be reexported outside the <code>derive</code> module? (ideally we wouldn't need a <code>derive</code> module I think)</p>\n</blockquote>",
        "id": 287637410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907794900\">PR review comment</a>:</p>\n<blockquote>\n<p>Personally for patterns like this I find it convenient to have \"early return\" to avoid nested indentation getting too unwieldy. For example:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">attribute</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">leading_colon</span><span class=\"p\">.</span><span class=\"n\">is_some</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">||</span><span class=\"w\"> </span><span class=\"n\">attribute</span><span class=\"p\">.</span><span class=\"n\">path</span><span class=\"p\">.</span><span class=\"n\">segments</span><span class=\"p\">.</span><span class=\"n\">len</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">!=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">continue</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"c1\">// ... everything else minus one indentation level</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 287637411,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907797987\">PR review comment</a>:</p>\n<blockquote>\n<p>Instead of cloning could this pass <code>&amp;T</code> since <code>&amp;T</code> is <code>Lower</code> if <code>T</code> is <code>Lower</code>?</p>\n</blockquote>",
        "id": 287637412,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907797587\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh this is clever! I hadn't actually thought of simply delegating to the tuple implementation. That definitely makes this easier since you don't have to do offset calculations here in the derive macro.</p>\n<p>That being said though the main limitation of this is that it won't work for structs with &gt; 16 fields. That doesn't seem too common though so otherwise seems like a good way to start?</p>\n</blockquote>",
        "id": 287637413,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907792087\">PR review comment</a>:</p>\n<blockquote>\n<p>Although note that in moving this test externally I mean doing a whole compile-a-component rigamarole and using <code>Func::typed::&lt;...&gt;</code> to run the tests that this is otherwise doing, so the test wouldn't use <code>ComponentTypesBuilder</code> or call <code>typecheck</code> at all.</p>\n</blockquote>",
        "id": 287637414,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907799232\">PR review comment</a>:</p>\n<blockquote>\n<p>One thing you may want to explore though is what the error messages look like if a field of the record doesn't implement the requisite trait. For example what's the compiler error message when you derive <code>Lift</code> for a record with a <code>String</code> in it?</p>\n</blockquote>",
        "id": 287637415,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364231
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907804891\">PR review comment</a>:</p>\n<blockquote>\n<p>I agree -- I only started doing that because rustfmt would refuse to format an expression that contained a long string literal.  Perhaps your suggestion to reduce the indentation level will help with that.</p>\n</blockquote>",
        "id": 287638211,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364646
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1020791986\">PR review</a>.</p>",
        "id": 287638212,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364647
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907806346\">PR review comment</a>:</p>\n<blockquote>\n<p>The cleverness is due to @jameysharp -- that's straight from <a href=\"https://github.com/bytecodealliance/wasmtime/compare/main...jameysharp:component-derive\">his patch</a>.</p>\n</blockquote>",
        "id": 287638420,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364750
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1020794156\">PR review</a>.</p>",
        "id": 287638421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656364750
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287651870,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656372457
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287652229,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656372693
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r907912910\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm certainly enjoying being called clever! But before I got sidetracked, I had intended to drop this trick. <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n<p>In #4217 I factored out <code>next_field</code> to make both tuple and record macro expansions relatively straightforward. While <code>lower</code> and <code>lift</code> were already pretty easy, <code>next_field</code> wraps up the common math for <code>size</code>, <code>store</code>, and <code>load</code>. So I hope it should be simple now to almost just copy <code>impl_component_ty_for_tuples</code>, except as a proc-macro instead of <code>macro_rules</code>, and with field names instead of indexes.</p>\n<p>As I recall, this bit of cleverness is also what forced me to call <code>.clone()</code> in <code>lower</code>: I couldn't build a tuple of borrows, because the implementation I delegated to expected the borrow to be on the outside of the tuple instead. Skipping the indirection should let you remove those clones.</p>\n</blockquote>",
        "id": 287656603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656375979
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1020939818\">PR review</a>.</p>",
        "id": 287656604,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656375979
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1021859137\">PR review</a>.</p>",
        "id": 287724575,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656426906
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908562287\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks for pointing that out, @jameysharp.  I was able to change the <code>.clone()</code> to a borrow with no apparent ill effects -- the compiler and the test are both happy.  I'll admit I haven't thought deeply about _why_ it worked, though :)</p>\n<p>I do agree that the limit of 16 fields for structs is annoying, so I like your plan.  Just to be clear: the plan is to have the proc-macro generate a custom struct for use as the <code>ComponentType::Lower</code> associated type for each <code>#[derive(ComponentType)]</code> <code>#[component(record)]</code> struct alongside the generated <code>ComponentType</code> impl, analogous to what <code>impl_component_ty_for_tuples</code> does for tuples -- correct?</p>\n</blockquote>",
        "id": 287724577,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656426906
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a first draft of an implementation of<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/4308\">https://github.com/bytecodealliance/wasmtime/issues/4308</a>, i.e. derive macros for<br>\n<code>ComponentType</code>, <code>Lift</code>, and <code>Lower</code> for composite types in the component model.</p>\n<p>It borrows heavily from the work @jameysharp did in<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/4217\">https://github.com/bytecodealliance/wasmtime/pull/4217</a>.  Thanks, Jamey!</p>\n<p>Thanks also to @fibonacci1729 for pairing up on this.</p>\n<p>This draft only covers records; I expect the other composite types will follow a<br>\nsimilar pattern.  I'm looking to get feedback on the overall approach before I<br>\ncontinue.</p>\n<p>Known (potential) issues:</p>\n<ul>\n<li>\n<p>Currently, the implementations for <code>ComponentType</code>, <code>Lift</code>, and <code>Lower</code><br>\n  duplicate a fair amount of code, so I plan to address that.</p>\n</li>\n<li>\n<p>~~I've made <code>ComponentTypesBuilder::record_type</code> public for testing purposes.<br>\n  Let me know if that's a problem or if there's a better way.~~</p>\n</li>\n<li>\n<p>~~Also for testing: I've made <code>Memory::wasmtime_memory</code> and <code>Store::inner</code><br>\n  crate-public.~~</p>\n</li>\n<li>\n<p>~~I've added a <code>test</code> module to crates/wasmtime/src/component/func/typed.rs for<br>\n  testing the derives.  Let me know if there's a better place for it.~~</p>\n</li>\n</ul>\n<p>Signed-off-by: Joel Dice &lt;<a href=\"mailto:joel.dice@fermyon.com\">joel.dice@fermyon.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 287727874,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656428307
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908630181\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah that sounds right to me, generating a new type, and it could even be an \"anonymous\" type along the lines of:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">const</span><span class=\"w\"> </span><span class=\"n\">_</span>: <span class=\"p\">()</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">struct</span> <span class=\"nc\">Foo</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"c1\">// doesn't have access to `Foo` here</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 287733207,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656430374
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1021956460\">PR review</a>.</p>",
        "id": 287733213,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656430377
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287761658,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656443122
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908844620\">PR review comment</a>:</p>\n<blockquote>\n<p>@alexcrichton and @jameysharp please see the commit I just pushed and let me know what you think.</p>\n<p>Alex, I wasn't sure how to apply your \"anonymous\" type trick at the item level that the derive macro operates.  Can you elaborate on what that would look like, i.e. how I might use it in <code>emit_record_type</code>?</p>\n</blockquote>",
        "id": 287762246,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656443379
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022262318\">PR review</a>.</p>",
        "id": 287762247,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656443379
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908852094\">PR review comment</a>:</p>\n<blockquote>\n<p>I'm not actually sure if this is possible, but if we can I think it'd be best to reuse the <code>map_maybe_uninit!</code> macro used internally here as well. If that doesn't work out though can you fill in the two type parameters to <code>transmute</code> here to clarify what's happening?</p>\n</blockquote>",
        "id": 287763976,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444226
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022272979\">PR review</a>.</p>",
        "id": 287763977,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444226
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022272979\">PR review</a>.</p>",
        "id": 287763978,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444226
    },
    {
        "content": "<p>dicej submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022294256\">PR review</a>.</p>",
        "id": 287764642,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444593
    },
    {
        "content": "<p>dicej created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908867535\">PR review comment</a>:</p>\n<blockquote>\n<p>Yeah, I started out reusing <code>map_maybe_uninit!</code>, but that required adding a <code>#[macro_export]</code> and making <code>MaybeUninitExt</code> public.  If that sounds okay to you, I'll do that.</p>\n</blockquote>",
        "id": 287764643,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444593
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908868399\">PR review comment</a>:</p>\n<blockquote>\n<p>Could this also get prefixed with <code>dep:</code> to indicate to Cargo we shouldn't have a feature called <code>wasmtime-component-macro</code>?</p>\n</blockquote>",
        "id": 287764797,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444657
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022295453\">PR review</a>.</p>",
        "id": 287764798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444657
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908869717\">PR review comment</a>:</p>\n<blockquote>\n<p>That should be fine as long as they're all marked <code>#[doc(hidden)]</code> to not actually show up in the public documentation</p>\n</blockquote>",
        "id": 287764984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444757
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022297327\">PR review</a>.</p>",
        "id": 287764985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656444758
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287766313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656445395
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287766588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656445529
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r908892788\">PR review comment</a>:</p>\n<blockquote>\n<p>Random thought: for alignment, you could de-duplicate the field types, e.g. a struct with a bunch of <code>u32</code>s has the same alignment as one <code>u32</code>. I think it might marginally improve compile times overall. It's certainly not necessary to do though.</p>\n<p>Overall, this looks good to me! It's up to Alex on final review though.</p>\n</blockquote>",
        "id": 287768776,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656446638
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022332646\">PR review</a>.</p>",
        "id": 287768777,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656446638
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287769614,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656447030
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287774181,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656449500
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287781024,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656453244
    },
    {
        "content": "<p>dicej edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a first draft of an implementation of<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/issues/4308\">https://github.com/bytecodealliance/wasmtime/issues/4308</a>, i.e. derive macros for<br>\n<code>ComponentType</code>, <code>Lift</code>, and <code>Lower</code> for composite types in the component model.</p>\n<p>It borrows heavily from the work @jameysharp did in<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/pull/4217\">https://github.com/bytecodealliance/wasmtime/pull/4217</a>.  Thanks, Jamey!</p>\n<p>Thanks also to @fibonacci1729 for pairing up on this.</p>\n<p>This draft only covers records; I expect the other composite types will follow a<br>\nsimilar pattern.  I'm looking to get feedback on the overall approach before I<br>\ncontinue.</p>\n<p>Known (potential) issues:</p>\n<ul>\n<li>\n<p>~~Currently, the implementations for <code>ComponentType</code>, <code>Lift</code>, and <code>Lower</code><br>\n  duplicate a fair amount of code, so I plan to address that.~~</p>\n</li>\n<li>\n<p>~~I've made <code>ComponentTypesBuilder::record_type</code> public for testing purposes.<br>\n  Let me know if that's a problem or if there's a better way.~~</p>\n</li>\n<li>\n<p>~~Also for testing: I've made <code>Memory::wasmtime_memory</code> and <code>Store::inner</code><br>\n  crate-public.~~</p>\n</li>\n<li>\n<p>~~I've added a <code>test</code> module to crates/wasmtime/src/component/func/typed.rs for<br>\n  testing the derives.  Let me know if there's a better place for it.~~</p>\n</li>\n</ul>\n<p>Signed-off-by: Joel Dice &lt;<a href=\"mailto:joel.dice@fermyon.com\">joel.dice@fermyon.com</a>&gt;</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 287781103,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656453292
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287781984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656453788
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#discussion_r909055559\">PR review comment</a>:</p>\n<blockquote>\n<p>Maybe one more field-count test, with too many fields? Looks like you have everything you need to do that easily.</p>\n</blockquote>",
        "id": 287788536,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656457812
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022550970\">PR review</a>.</p>",
        "id": 287788537,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656457812
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337#pullrequestreview-1022550970\">PR review</a>.</p>",
        "id": 287788538,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656457812
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287798055,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656467156
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> from <code>component-type-derive</code> to <code>main</code>.</p>",
        "id": 287799684,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656468957
    },
    {
        "content": "<p><strong>dicej</strong> has marked <a href=\"https://github.com/bytecodealliance/wasmtime/pull/4337\">PR #4337</a> as ready for review.</p>",
        "id": 287799779,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1656469058
    }
]