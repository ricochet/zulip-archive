[
    {
        "content": "<p>dicej opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10044\">PR #10044</a> from <code>dicej:wasmtime-wit-bindgen-async</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>I've split this out of #9582 to make review easier.</p>\n<p>This patch adds async/stream/future/error-context support to the host binding generator, along with placeholder type and function definitions in the <code>wasmtime</code> crate which the generated bindings can refer to.  See <a href=\"https://github.com/dicej/rfcs/blob/component-async/accepted/component-model-async.md#componentbindgen-updates\">https://github.com/dicej/rfcs/blob/component-async/accepted/component-model-async.md#componentbindgen-updates</a> for the design and rationale.</p>\n<p>Note that I've added temporary <code>[patch.crates-io]</code> overrides in Cargo.toml until <a href=\"https://github.com/bytecodealliance/wit-bindgen/pull/1130\">https://github.com/bytecodealliance/wit-bindgen/pull/1130</a> and <a href=\"https://github.com/bytecodealliance/wasm-tools/pull/1978\">https://github.com/bytecodealliance/wasm-tools/pull/1978</a> have been released.</p>\n<p>Also note that we emit a <code>T: 'static</code> bound for <code>AsContextMut&lt;Data = T&gt;</code> when generating bindings with <code>concurrent_imports: true</code>.  This is only because <code>rustc</code> insists that the closure we're passing to<br>\n<code>LinkerInstance::func_wrap_concurrent</code> captures the lifetime of <code>T</code> despite my best efforts to convince it otherwise.  Alex and I suspect this is a limitation in the compiler, and I asked about it on the rust-lang Zulip, but we haven't been able to determine a workaround so far.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 494453298,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737154178
    },
    {
        "content": "<p><strong>dicej</strong> requested <a href=\"https://github.com/alexcrichton\">alexcrichton</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10044\">PR #10044</a>.</p>",
        "id": 494453409,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737154227
    },
    {
        "content": "<p>dicej updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10044\">PR #10044</a>.</p>",
        "id": 494454366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1737154810
    }
]