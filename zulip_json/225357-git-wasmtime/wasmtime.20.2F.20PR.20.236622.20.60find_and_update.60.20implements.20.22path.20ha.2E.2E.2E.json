[
    {
        "content": "<p>sofia-snow opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6622\">PR #6622</a> from <code>sofia-snow:patch-1</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>Corrected the comment from \"path splitting\" to \"path halving\" to align with the implementation.</p>\n<p>Path halving only updates every second node, whereas path splitting updates every node along the path. Regardless, their average performance tends to be negligible. Don't need to change the code to implement splitting instead.</p>\n</blockquote>",
        "id": 368396825,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687398906
    },
    {
        "content": "<p><strong>sofia-snow</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6622\">PR #6622</a>.</p>",
        "id": 368396826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687398907
    },
    {
        "content": "<p><strong>sofia-snow</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6622\">PR #6622</a>.</p>",
        "id": 368396827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687398907
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6622#pullrequestreview-1492412956\">PR review</a>:</p>\n<blockquote>\n<p>The distinction between the splitting and halving approaches is subtle so I had to think about the implementation carefully to check this PR. And I think you're right! Thanks for noticing this.</p>\n<p>If you're looking at this union-find implementation, you may be interested to note that the definition of <code>union</code> below is non-standard, neither by-size nor by-rank, so the usual asymptotic complexity analysis doesn't apply. Issue #6126 is related: we kind of rely on this non-standard definition to support efficient hash-consing, but even this definition doesn't quite guarantee that we'll find all duplicate values reliably. You might find that issue interesting to look into. We're currently ignoring it because the results right now seem to be good enough, but I'd be happier if we had a more standard approach here.</p>\n</blockquote>",
        "id": 368428892,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687413693
    },
    {
        "content": "<p>jameysharp merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/6622\">PR #6622</a>.</p>",
        "id": 368437574,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1687416094
    }
]