[
    {
        "content": "<p>nathanwhit opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434\">PR #5434</a> from <code>aarch64-macho-support-tls</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\nFixes #5433.</p>\n<p>This PR implements support for TLS on aarch64 Mach-O (i.e. Apple silicon). This also includes an update to <code>object</code> as this PR depends on a fix released in <code>object 0.30</code>.</p>\n<p>For testing, I've added a filetest similar to the existing test for aarch64 ELF. I wasn't sure if I should add an emit test as well, since there doesn't seem to be one for TLS on aarch64 ELF. I've also tested these changes on a local branch of cg_clif, and it passes the TLS tests there.</p>\n</blockquote>",
        "id": 315726366,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670985852
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#pullrequestreview-1216705645\">PR review</a>.</p>",
        "id": 315727599,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670986889
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#pullrequestreview-1216705645\">PR review</a>.</p>",
        "id": 315727600,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670986889
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#discussion_r1047962436\">PR review comment</a>:</p>\n<blockquote>\n<p>The <code>has_type</code> clause shouldn't be necessary here if <code>(if (tls_model_is_elf_gd))</code> below is present, or vice-versa. I'm guessing you were running into rule-overlap issues (the checker doesn't know that <code>tls_model_is_elf_gd</code> and <code>tls_model_is_macho</code> are mutually exclusive, but it can distinguish the <code>TlsModel</code> enum arms)? Either adding rule priorities (<code>(rule 1 ...)</code> and <code>(rule 0 ...)</code>) with the <code>if</code> clauses, or keeping the <code>(has_type (tls_model ...))</code> only, would work. It looks like in x64 we did the latter so let's do that here too for consistency :-)</p>\n</blockquote>",
        "id": 315727601,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670986889
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#discussion_r1047960205\">PR review comment</a>:</p>\n<blockquote>\n<p><code>uses</code> and <code>defs</code> and <code>clobbers</code> can all be empty here, as this emission happens after regalloc runs so we don't need any of this metadata.</p>\n</blockquote>",
        "id": 315727602,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670986889
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#discussion_r1047958142\">PR review comment</a>:</p>\n<blockquote>\n<p>s/AAarch64/Aarch64/ (and in comment below too)</p>\n</blockquote>",
        "id": 315727603,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670986889
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434\">PR #5434</a> from <code>aarch64-macho-support-tls</code> to <code>main</code>.</p>",
        "id": 315729241,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670988212
    },
    {
        "content": "<p>nathanwhit updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434\">PR #5434</a> from <code>aarch64-macho-support-tls</code> to <code>main</code>.</p>",
        "id": 315943382,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671066050
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#pullrequestreview-1218462652\">PR review</a>.</p>",
        "id": 315944739,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671067169
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#pullrequestreview-1218462652\">PR review</a>.</p>",
        "id": 315944740,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671067169
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#discussion_r1049122033\">PR review comment</a>:</p>\n<blockquote>\n<p>We probably don't want to increase the size of <code>Inst</code> if we can help it at all -- the point of this test is to guard against perf regressions. Can we find a way to remove a field or, failing that, box the contents of the inst? Two options come to mind:</p>\n<ul>\n<li>(Maybe preferred) eliminate <code>rtmp</code>, and use <code>x1</code> explicitly instead. This is part of the clobber-set of the call already, so it should be legal to use it to hold the address of the called function.</li>\n<li>(Alternately) create a struct and hold a <code>Box</code> in the inst, taking only 8 bytes</li>\n</ul>\n</blockquote>",
        "id": 315944741,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671067170
    },
    {
        "content": "<p>nathanwhit updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434\">PR #5434</a> from <code>aarch64-macho-support-tls</code> to <code>main</code>.</p>",
        "id": 315948632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671070848
    },
    {
        "content": "<p>nathanwhit submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#pullrequestreview-1218498011\">PR review</a>.</p>",
        "id": 315948633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671070850
    },
    {
        "content": "<p>nathanwhit created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434#discussion_r1049150083\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, I wasn't sure that it was okay to use <code>x1</code>, but your explanation makes sense (and helped clear up my confusion) - thanks!</p>\n<p>Just pushed a commit to make that change (and reverted the change to the size test as well)</p>\n</blockquote>",
        "id": 315948634,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1671070850
    },
    {
        "content": "<p>nathanwhit updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434\">PR #5434</a> from <code>aarch64-macho-support-tls</code> to <code>main</code>.</p>",
        "id": 326717162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1675906935
    },
    {
        "content": "<p>nathanwhit updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434\">PR #5434</a> from <code>aarch64-macho-support-tls</code> to <code>main</code>.</p>",
        "id": 344327324,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679678344
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5434\">PR #5434</a>.</p>",
        "id": 344341555,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1679682474
    }
]