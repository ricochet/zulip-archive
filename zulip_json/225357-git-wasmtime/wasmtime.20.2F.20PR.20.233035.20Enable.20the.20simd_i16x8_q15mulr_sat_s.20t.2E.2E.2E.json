[
    {
        "content": "<p>akirilov-arm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035\">PR #3035</a> from <code>simd_i16x8_q15mulr_sat_s</code> to <code>main</code>.</p>",
        "id": 243931370,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624634991
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693019984\">PR review</a>.</p>",
        "id": 243941798,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624639911
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693019984\">PR review</a>.</p>",
        "id": 243941799,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624639911
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658905664\">PR review comment</a>:</p>\n<blockquote>\n<p>The consolidation of all of the <code>unimplemented!()</code> cases into the wildcard match below, here and in the other <code>match</code>es (s390x, x64, interpreter), is definitely valid, but IMHO at least, listing the unimplemented opcodes explicitly serves a useful purpose: it ensures that we don't miss an opcode when we go to eventually implement functionality. Tests also ensure this in a way, but that's more indirect (relies on 100% test coverage); and it is also useful sometimes to actually see what is missing.</p>\n<p>Open to other views on this, though; especially interested in what @abrown @jlb6740 @uweigand think, as other backend-focused folks.</p>\n</blockquote>",
        "id": 243941801,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624639911
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693021817\">PR review</a>.</p>",
        "id": 243941969,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624640000
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658906992\">PR review comment</a>:</p>\n<blockquote>\n<p>(And <code>ConstAddr</code> where I placed this line-comment maybe isn't the best example, but e.g. all the SIMD loads were listed out in s390x, whereas an implementer would now likely go through a run-tests, fix-one-panic, retry loop to find all that's needed.)</p>\n</blockquote>",
        "id": 243941971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624640000
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693022959\">PR review</a>.</p>",
        "id": 243942158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624640089
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658907867\">PR review comment</a>:</p>\n<blockquote>\n<p>Agreed, I'd also prefer unimplemented opcodes to be listed explicitly, for the very reason you give.</p>\n</blockquote>",
        "id": 243942159,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624640089
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693079427\">PR review</a>.</p>",
        "id": 243950918,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624644597
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658950243\">PR review comment</a>:</p>\n<blockquote>\n<p>@cfallin I based this approach on <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/cranelift/codegen/src/isa/x64/lower.rs#L6002\">the x64 backend</a>, but I don't mind reverting to the previous one.</p>\n</blockquote>",
        "id": 243950919,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624644597
    },
    {
        "content": "<p>akirilov-arm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658950243\">PR review comment</a>.</p>",
        "id": 243951124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624644713
    },
    {
        "content": "<p>akirilov-arm edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658950243\">PR review comment</a>.</p>",
        "id": 243951178,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624644726
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693090843\">PR review</a>.</p>",
        "id": 243952761,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624645572
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658958890\">PR review comment</a>:</p>\n<blockquote>\n<p>Also, with Rust there is a quick hack to check what is missing - just comment out the wildcard case and try to rebuild :-).</p>\n</blockquote>",
        "id": 243952762,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624645572
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693096197\">PR review</a>.</p>",
        "id": 243953549,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646010
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658962905\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yes, we are not consistent with the above in <code>x64</code>; thanks for pointing that out! I just created #3037 (and this was a good exercise as I learned about a few opcodes we hadn't filled in yet).</p>\n</blockquote>",
        "id": 243953550,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646011
    },
    {
        "content": "<p>akirilov-arm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693102080\">PR review</a>.</p>",
        "id": 243954570,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646528
    },
    {
        "content": "<p>akirilov-arm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658967196\">PR review comment</a>:</p>\n<blockquote>\n<p>Speaking of consistency - notice that both in the AArch64 and the s390x backends some matches use <code>panic!()</code> for unimplemented operations, while others - <code>unimplemented!()</code>. While it doesn't change program behaviour much, IMHO all should use the latter, so I can clean that up instead - open to opinions (from @uweigand as well).</p>\n</blockquote>",
        "id": 243954572,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646528
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693103814\">PR review</a>.</p>",
        "id": 243954863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646688
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658968558\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, yes, that would be a welcome cleanup as well; thanks!</p>\n</blockquote>",
        "id": 243954864,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646688
    },
    {
        "content": "<p>uweigand submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-693106133\">PR review</a>.</p>",
        "id": 243955180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646882
    },
    {
        "content": "<p>uweigand created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#discussion_r658970296\">PR review comment</a>:</p>\n<blockquote>\n<p>Agreed!</p>\n</blockquote>",
        "id": 243955182,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624646883
    },
    {
        "content": "<p>akirilov-arm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035\">PR #3035</a> from <code>simd_i16x8_q15mulr_sat_s</code> to <code>main</code>.</p>",
        "id": 244168764,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624896840
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035#pullrequestreview-694158915\">PR review</a>.</p>",
        "id": 244170621,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624897699
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3035\">PR #3035</a>.</p>",
        "id": 244173146,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1624898993
    }
]