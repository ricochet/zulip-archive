[
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723#issuecomment-630399365\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723\">Issue #1723</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @peterhuene</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"wasmtime:api\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>peterhuene: wasmtime:api</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 197986660,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1589831293
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723#issuecomment-675680171\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723\">Issue #1723</a>:</p>\n<blockquote>\n<p>Run example/server as <code>RUST_LOG=\"gdb_remote_protocol=trace,wasmtime_cli=trace\" cargo run -- tests/all/debug/testsuite/fib-wasm.wasm --gdb-server --opt-level 0 --invoke fib 5</code></p>\n<p>Connect using LLDB (version as in <a href=\"https://reviews.llvm.org/D78801\">https://reviews.llvm.org/D78801</a>):</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">wasm</span><span class=\"w\"> </span><span class=\"mi\">22334</span><span class=\"w\"></span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">stopped</span><span class=\"w\"></span>\n<span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"err\">#</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stop</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">signal</span><span class=\"w\"> </span><span class=\"n\">SIGTRAP</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"err\">#</span><span class=\"mi\">0</span>: <span class=\"mh\">0x200000022</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">-</span><span class=\"mf\">2.</span><span class=\"n\">wasm</span><span class=\"w\"></span>\n-&gt;  <span class=\"mh\">0x200000022</span>: <span class=\"nc\">call</span><span class=\"w\">   </span><span class=\"mi\">0</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"mh\">0x200000024</span>: <span class=\"nc\">end</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"mh\">0x1000000af</span><span class=\"w\"></span>\n<span class=\"n\">Breakpoint</span><span class=\"w\"> </span><span class=\"mi\">1</span>: <span class=\"nc\">where</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"n\">fib</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"mi\">109</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">11</span>:<span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">address</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mh\">0x1000000af</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">c</span><span class=\"w\"></span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">resuming</span><span class=\"w\"></span>\n<span class=\"n\">Process</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"n\">stopped</span><span class=\"w\"></span>\n<span class=\"o\">*</span><span class=\"w\"> </span><span class=\"n\">thread</span><span class=\"w\"> </span><span class=\"err\">#</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">stop</span><span class=\"w\"> </span><span class=\"n\">reason</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">break</span><span class=\"n\">point</span><span class=\"w\"> </span><span class=\"mf\">1.1</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">frame</span><span class=\"w\"> </span><span class=\"err\">#</span><span class=\"mi\">0</span>: <span class=\"mh\">0x1000000af</span><span class=\"w\"> </span><span class=\"n\">module</span><span class=\"o\">-</span><span class=\"mf\">1.</span><span class=\"n\">wasm</span><span class=\"err\">`</span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">at</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"o\">-</span><span class=\"n\">wasm</span><span class=\"p\">.</span><span class=\"n\">c</span>:<span class=\"mi\">11</span>:<span class=\"mi\">9</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">8</span><span class=\"w\">    </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">9</span><span class=\"w\">      </span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">10</span><span class=\"w\">     </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">int</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"w\"> </span><span class=\"n\">n</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">i</span><span class=\"o\">++</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n-&gt; <span class=\"mi\">11</span><span class=\"w\">       </span><span class=\"n\">t</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">a</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">12</span><span class=\"w\">       </span><span class=\"n\">a</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">b</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">13</span><span class=\"w\">       </span><span class=\"n\">b</span><span class=\"w\"> </span><span class=\"o\">+=</span><span class=\"w\"> </span><span class=\"n\">t</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">   </span><span class=\"mi\">14</span><span class=\"w\">     </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">(</span><span class=\"n\">lldb</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">s</span><span class=\"w\"></span>\n<span class=\"o\">..</span><span class=\"p\">.</span><span class=\"w\"></span>\n</code></pre></div>\n\n\n</blockquote>",
        "id": 207307315,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597780360
    },
    {
        "content": "<p>abrown <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723#issuecomment-675711585\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723\">Issue #1723</a>:</p>\n<blockquote>\n<p>cc: @jlb6740 </p>\n</blockquote>",
        "id": 207314060,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597783570
    },
    {
        "content": "<p>jlb6740 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723#issuecomment-675752515\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723\">Issue #1723</a>:</p>\n<blockquote>\n<p>@abrown Thanks. I've actually used debugging support before based on a gist from @yurydelendik  (<a href=\"https://gist.github.com/yurydelendik/4103d782dfc62634bc9f4de98de20835\">https://gist.github.com/yurydelendik/4103d782dfc62634bc9f4de98de20835</a>). How does this PR relate to that existing support which allowed breaking and stepping in jitted code with lldb? </p>\n</blockquote>",
        "id": 207350009,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597789981
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723#issuecomment-675757420\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723\">Issue #1723</a>:</p>\n<blockquote>\n<blockquote>\n<p>How does this PR relate to that existing support which allowed breaking and stepping in jitted code with lldb?</p>\n</blockquote>\n<p>@jlb6740 that is different in terms of now you don't need to transform the DWARF since debuggers have to understand WebAssembly target (see referred above LLVM's patch). In this case, the VM has to provide direct access to wasm-level locals, memory, stack.</p>\n</blockquote>",
        "id": 207351561,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597790999
    },
    {
        "content": "<p>yurydelendik <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723#issuecomment-691169662\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1723\">Issue #1723</a>:</p>\n<blockquote>\n<p>rebased <a href=\"https://reviews.llvm.org/D78801\">LLVM D78801</a> at <a href=\"https://github.com/yurydelendik/llvm-project/tree/D78801\">https://github.com/yurydelendik/llvm-project/tree/D78801</a></p>\n</blockquote>",
        "id": 209797180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1599838861
    }
]