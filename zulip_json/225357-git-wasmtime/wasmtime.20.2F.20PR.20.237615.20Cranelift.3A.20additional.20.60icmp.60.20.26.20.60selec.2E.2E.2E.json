[
    {
        "content": "<p>scottmcm opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615\">PR #7615</a> from <code>scottmcm:spaceship</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>I was writing a pattern for Rust's <code>Ord::cmp</code> (<a href=\"#narrow/stream/217117-cranelift/topic/3-way.20compare.20.28Rust.20.60cmp.60.2C.20C.2B.2B20.20.60.3C.3D.3E.60.29/near/404501312\">context zulip thread</a>)</p>\n<p><a href=\"https://github.com/rust-lang/rust/blob/e55544c8043ec2074c1ef2499afc78ee6b5108b7/library/core/src/cmp.rs#L1518-L1520\">https://github.com/rust-lang/rust/blob/e55544c8043ec2074c1ef2499afc78ee6b5108b7/library/core/src/cmp.rs#L1518-L1520</a></p>\n<p>And noticed that the <code>if *self == *other { Equal } else { Greater }</code> part is <code>if c { false } else { true }</code>.</p>\n<p>So here's a smaller PR with some simpler sub-patterns first.<br>\n</p>\n</blockquote>",
        "id": 405060442,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701331182
    },
    {
        "content": "<p><strong>scottmcm</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615\">PR #7615</a>.</p>",
        "id": 405060445,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701331182
    },
    {
        "content": "<p><strong>scottmcm</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-compiler-reviewers\">wasmtime-compiler-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615\">PR #7615</a>.</p>",
        "id": 405060446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701331182
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#pullrequestreview-1756916411\">PR review</a>.</p>",
        "id": 405067113,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701333786
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#discussion_r1410334491\">PR review comment</a>:</p>\n<blockquote>\n<p>Is the duplicated rules -- one for I8, one for wider -- the best way to do this?  Or is there a <code>uextend-if-needed</code> that one rule could produce?</p>\n</blockquote>",
        "id": 405067114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701333786
    },
    {
        "content": "<p>github-actions[bot] <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#issuecomment-1833330628\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615\">PR #7615</a>:</p>\n<blockquote>\n<h4>Subscribe to Label Action</h4>\n<p>cc @cfallin, @fitzgen</p>\n<p>&lt;details&gt;<br>\nThis issue or pull request has been labeled: \"cranelift\", \"isle\"</p>\n<p>Thus the following users have been cc'd because of the following labels:</p>\n<ul>\n<li>cfallin: isle</li>\n<li>fitzgen: isle</li>\n</ul>\n<p>To subscribe or unsubscribe from this label, edit the &lt;code&gt;.github/subscribe-to-label.json&lt;/code&gt; configuration file.</p>\n<p><a href=\"https://github.com/bytecodealliance/subscribe-to-label-action\">Learn more.</a><br>\n&lt;/details&gt;</p>\n</blockquote>",
        "id": 405067618,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701333916
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#pullrequestreview-1757891692\">PR review</a>.</p>",
        "id": 405154249,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701361822
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#discussion_r1410932124\">PR review comment</a>:</p>\n<blockquote>\n<p>There's various little helpers around and I'm not super familiar with these ISLE files, but it's fine to add a helper for this. I'd also recommend doing that because this rule you've commented on will produce invalid CLIF if <code>sty</code> is <code>$I8</code> because <code>uextend</code> is only valid of the output type is larger than the input type.</p>\n<p>A small helper along the lines of this though would fix it:</p>\n<p><div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"p\">(</span><span class=\"n\">decl</span><span class=\"w\"> </span><span class=\"n\">uextend_to_ty</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">Type</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">Value</span><span class=\"p\">)</span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">uextend_to_ty</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">uextend</span><span class=\"w\"> </span><span class=\"n\">ty</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">))</span>\n<span class=\"p\">(</span><span class=\"n\">rule</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">uextend_to_ty</span><span class=\"w\"> </span><span class=\"cp\">$I8</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"n\">val</span><span class=\"p\">)</span>\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 405154251,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701361822
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#pullrequestreview-1757895398\">PR review</a>.</p>",
        "id": 405154675,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701361935
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#discussion_r1410934379\">PR review comment</a>:</p>\n<blockquote>\n<p>To further expand on this a bit as well, what you've defined here  are effectively two overlapping rules, for example the rule on line 23 (this one) and the rule on line 13 (the i8 case above). For an i8-producing-select both rules match, and I believe ISLE allows that for the \"multi\" constructor that <code>simplify</code> is (since I believe it's generating all matches and yielding them to the egraph driver). While the above rule is \"lower cost\" and will get selected eventually I think it's probably still best to avoid the possibility of accidentally creating invalid CLIF</p>\n</blockquote>",
        "id": 405154678,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701361935
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#pullrequestreview-1758225173\">PR review</a>.</p>",
        "id": 405178421,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701369915
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#discussion_r1411126476\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah, got it.  When having the <code>$I8</code> pattern meant that the tests worked for both widths, I didn't know if that meant it was treated as \"more specific\" or something.</p>\n<p>I'll add (or find) a helper for this.  I agree having the useless-and-invalid <code>extend</code> option in the graph isn't good.</p>\n</blockquote>",
        "id": 405178422,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701369915
    },
    {
        "content": "<p>scottmcm updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615\">PR #7615</a>.</p>",
        "id": 405185378,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701372300
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#pullrequestreview-1758308072\">PR review</a>.</p>",
        "id": 405187446,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701373054
    },
    {
        "content": "<p>alexcrichton has enabled auto merge for <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615\">PR #7615</a>.</p>",
        "id": 405187461,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701373060
    },
    {
        "content": "<p>scottmcm submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#pullrequestreview-1758327587\">PR review</a>.</p>",
        "id": 405189579,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701373817
    },
    {
        "content": "<p>scottmcm created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615#discussion_r1411189805\">PR review comment</a>:</p>\n<blockquote>\n<p>Thanks!  I couldn't find any similar existing rule, but the one you provided worked great.</p>\n</blockquote>",
        "id": 405189580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701373817
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/7615\">PR #7615</a>.</p>",
        "id": 405192444,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1701374703
    }
]