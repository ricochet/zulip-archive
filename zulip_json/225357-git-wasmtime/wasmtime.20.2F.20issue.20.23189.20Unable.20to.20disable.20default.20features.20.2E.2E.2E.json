[
    {
        "content": "<p>bjorn3 <a href=\"https://github.com/bytecodealliance/wasmtime/issues/189#issuecomment-2184163362\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/189\">issue #189</a>:</p>\n<blockquote>\n<p>This has been fixed by <a href=\"https://github.com/bytecodealliance/cranelift/pull/853\">https://github.com/bytecodealliance/cranelift/pull/853</a>, right?</p>\n</blockquote>",
        "id": 446313821,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719084467
    },
    {
        "content": "<p>cfallin closed <a href=\"https://github.com/bytecodealliance/wasmtime/issues/189\">issue #189</a>:</p>\n<blockquote>\n<p>I am interested in building Wasmtime against a Cranelift with all architectures disabled except for the target architecture.</p>\n<p>From my research, it seems that the way to accomplish this would be to <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\">re-export</a> the desired architecture feature in Wasmtime's <code>cargo.toml</code>:</p>\n<p><code>riscv = [\"cranelift-codegen/riscv\"]</code></p>\n<p>(For reference, the feature belongs to <code>cranelift-codegen</code>, whose features can be found in <a href=\"https://github.com/CraneStation/cranelift/blob/master/cranelift-codegen/Cargo.toml\">its <code>cargo.toml</code> file</a>.)</p>\n<p>However, <code>cranelift-codegen</code>'s <a href=\"https://github.com/CraneStation/cranelift/blob/0a5961c9fe2d74621807924768882a7485d1c80b/cranelift-codegen/Cargo.toml#L32\">default configuration</a> enables all architectures to begin with, so in order to re-apply only the desired one, I would need to disable the default features in Cranelift and then enable only the desired one by re-exporting the feature, as outlined above.</p>\n<p>The Rust-official method to accomplish this is to use the <code>--no-default-features</code> flag, as outlined <a href=\"https://doc.rust-lang.org/cargo/reference/manifest.html#usage-in-end-products\">here</a>. However, as I discovered today, <a href=\"https://github.com/CraneStation/wasmtime/blob/6b7ebfdddc28bfd1664a81038a84a3669efca200/Cargo.toml#L47\">the Wasmtime repository is set up as a workspace</a> (rather than a package), and <a href=\"https://github.com/rust-lang/cargo/issues/4753\">the flag is non-functional on workspaces</a> -- it only works on packages.</p>\n<p><code>cranelift-codegen</code> is not a workspace by itself, so I also tried using the inline <code>default-features = false</code> option (example of that <a href=\"https://github.com/camallo/dkregistry-rs/pull/96/files\">here</a>); however, that didn't seem to work either.</p>\n<p>Given this seems to be an upstream issue, I was wondering if there would be any guidance around this at all.</p>\n</blockquote>",
        "id": 446341450,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719097996
    },
    {
        "content": "<p>cfallin <a href=\"https://github.com/bytecodealliance/wasmtime/issues/189#issuecomment-2184240179\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/189\">issue #189</a>:</p>\n<blockquote>\n<p>I believe so; and the crate and feature structure has changed so much in the past five years anyway that any current problems can have new issues filed.</p>\n</blockquote>",
        "id": 446341451,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719097996
    }
]