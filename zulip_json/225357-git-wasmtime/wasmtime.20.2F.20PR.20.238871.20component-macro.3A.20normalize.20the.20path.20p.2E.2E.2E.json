[
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/elliottt\">elliottt</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871\">PR #8871</a>.</p>",
        "id": 446822045,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719307087
    },
    {
        "content": "<p><strong>iawia002</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871\">PR #8871</a>.</p>",
        "id": 446822046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719307087
    },
    {
        "content": "<p>iawia002 opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871\">PR #8871</a> from <code>iawia002:normalize-path</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>I encountered a file path issue while using the <code>wasmtime::component::bindgen!</code> macro, I used a relative file path (e.g., <code>../wit</code>) in the <code>path</code> parameter, and then I received an error message:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/../</span><span class=\"n\">wit</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>The file path in the error message was quite confusing, in reality, the path that was not found should be <code>/Users/code/test-component/wit</code>. The relative file path in the error message made it hard for me to immediately understand which directory <code>wasmtime::component::bindgen!</code> was using to look for WIT files. Therefore, this patch normalizes the <code>path</code> before resolving WIT files.</p>\n<p>Error message before:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"o\">/</span><span class=\"n\">examples</span><span class=\"o\">/../</span><span class=\"n\">wit</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>after:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"n\">failed</span><span class=\"w\"> </span><span class=\"n\">to</span><span class=\"w\"> </span><span class=\"n\">read</span><span class=\"w\"> </span><span class=\"n\">path</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WIT</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"o\">/</span><span class=\"n\">Users</span><span class=\"o\">/</span><span class=\"n\">code</span><span class=\"o\">/</span><span class=\"n\">test</span><span class=\"o\">-</span><span class=\"n\">component</span><span class=\"o\">/</span><span class=\"n\">wit</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>The <code>wit_bindgen::generate!</code> macro has the same issue. If this patch is reasonable, I will make the same changes to <code>wit_bindgen::generate!</code> afterward.</p>\n</blockquote>",
        "id": 446822047,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719307087
    },
    {
        "content": "<p>alexcrichton <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871#issuecomment-2189700364\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871\">PR #8871</a>:</p>\n<blockquote>\n<p>Thanks for the PR! Personally though I find path manipulation very tricky/subtle. For example in the presence of symlinks I'm not sure that this implementation is correct. In lieu of that perhaps <a href=\"https://doc.rust-lang.org/stable/std/fs/fn.canonicalize.html\"><code>std::fs::canonicalize</code></a> could be used instead? If that returns <code>Ok</code> then the resulting path can be used and if it returns <code>Err</code> then the original path can be used as-is to probably return an error somewhere else.</p>\n</blockquote>",
        "id": 446964972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719340471
    },
    {
        "content": "<p>iawia002 <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871#issuecomment-2190394744\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871\">PR #8871</a>:</p>\n<blockquote>\n<p>Thanks for the review, I agree that path manipulation is tricky, <code>std::fs::canonicalize</code> is more of a compromise solution. It can handle some scenarios (such as when the path itself exists but the <code>wit</code> file does not). However, if the path itself does not exist, the error message will still be the same as it is now. But I believe this is acceptable because we would rather not incorrectly normalize the path in some corner cases.</p>\n</blockquote>",
        "id": 447043079,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719367623
    },
    {
        "content": "<p>iawia002 updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871\">PR #8871</a>.</p>",
        "id": 447043091,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719367630
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871#pullrequestreview-2142521044\">PR review</a>:</p>\n<blockquote>\n<p>Oh that's a good point yeah, I had forgotten about that. Seems like a reasonable compromise though!</p>\n</blockquote>",
        "id": 447278419,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719422198
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/8871\">PR #8871</a>.</p>",
        "id": 447282301,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1719423055
    }
]