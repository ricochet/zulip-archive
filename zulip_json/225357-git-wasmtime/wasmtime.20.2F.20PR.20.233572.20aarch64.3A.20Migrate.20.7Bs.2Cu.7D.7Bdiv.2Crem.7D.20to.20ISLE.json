[
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572\">PR #3572</a> from <code>isle-4-sdiv-udiv-srem-urem</code> to <code>main</code>:</p>\n<blockquote>\n<p>This commit migrates four different instructions at once to ISLE:</p>\n<ul>\n<li><code>sdiv</code></li>\n<li><code>udiv</code></li>\n<li><code>srem</code></li>\n<li><code>urem</code></li>\n</ul>\n<p>These all share similar codegen and center around the <code>div</code> instruction<br>\nto use internally. The main feature of these was to model the manual<br>\ntraps since the <code>div</code> instruction doesn't trap on overflow, instead<br>\nrequiring manual checks to adhere to the semantics of the instruction<br>\nitself.</p>\n<p>While I was here I went ahead and implemented an optimization for these<br>\ninstructions when the right-hand-side is a constant with a known value.<br>\nFor <code>udiv</code>, <code>srem</code>, and <code>urem</code> if the right-hand-side is a nonzero<br>\nconstant then the checks for traps can be skipped entirely. For <code>sdiv</code><br>\nif the constant is not 0 and not -1 then additionally all checks can be<br>\nelided. Finally if the right-hand-side of <code>sdiv</code> is -1 the zero-check is<br>\nelided, but it still needs a check for <code>i64::MIN</code> on the left-hand-side<br>\nand currently there's a TODO where <code>-1</code> is still checked too.</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 263189255,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638297652
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#pullrequestreview-819426164\">PR review</a>.</p>",
        "id": 263189823,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638297929
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#discussion_r759565101\">PR review comment</a>:</p>\n<blockquote>\n<p>Just a drive-by comment (I'm happy to review the whole thing too but wanted to note this first): eek, a language wart appears! I had included <code>#t</code> and <code>#f</code> bool constants (Scheme-style) but they lower to <code>1</code> / <code>0</code> (i.e., integers); this is largely because the DSL compiler's IR has <code>ConstInt</code> but not <code>ConstBool</code> because... no good reason. I see here you've used the <code>$</code> syntax to just pass through <code>false</code> as an opaque constant name; that works but we should really fix this.</p>\n<p>(Outside the scope of this PR obviously, just noting -- I'll file an issue for it. Sorry about this!)</p>\n</blockquote>",
        "id": 263189827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638297929
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#pullrequestreview-819428433\">PR review</a>.</p>",
        "id": 263190114,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638298072
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#discussion_r759566764\">PR review comment</a>:</p>\n<blockquote>\n<p>Ah ok! I'm happy to switch to whatever is the right way to do this, I think there's other places that stem from <a href=\"https://github.com/bytecodealliance/wasmtime/blob/0580c84405cb5808518b187d1851dc17e7538108/cranelift/codegen/src/prelude.isle#L13-L14\">https://github.com/bytecodealliance/wasmtime/blob/0580c84405cb5808518b187d1851dc17e7538108/cranelift/codegen/src/prelude.isle#L13-L14</a> which would need an update as well.</p>\n</blockquote>",
        "id": 263190115,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638298072
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#pullrequestreview-819431673\">PR review</a>.</p>",
        "id": 263190573,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638298276
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#discussion_r759569231\">PR review comment</a>:</p>\n<blockquote>\n<p>Filed #3573 for this, happy to do the cleanup later; this bit can land as-is for now :-)</p>\n</blockquote>",
        "id": 263190580,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1638298279
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/fitzgen\">fitzgen</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572\">PR #3572</a>.</p>",
        "id": 264730931,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639412585
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#pullrequestreview-830522073\">PR review</a>.</p>",
        "id": 264739984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639416230
    },
    {
        "content": "<p>fitzgen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#pullrequestreview-830522073\">PR review</a>.</p>",
        "id": 264739985,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639416231
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#discussion_r767962140\">PR review comment</a>:</p>\n<blockquote>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>;; Note that aarch64's `udiv` doesn't trap so to respect the semantics of CLIF's `udiv` the check\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 264739986,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639416231
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#discussion_r767955754\">PR review comment</a>:</p>\n<blockquote>\n<p>It is a little strange that <code>trap_if_zero</code> unconditionally uses the <code>trap_code_division_by_zero</code> trap code. <code>trap_if_zero</code>'s name doesn't suggest anything about division. Could we either workshop the name into something like <code>trap_if_zero_divisor</code> or make it take a trap code parameter?</p>\n</blockquote>",
        "id": 264739987,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639416231
    },
    {
        "content": "<p>fitzgen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#discussion_r767966830\">PR review comment</a>:</p>\n<blockquote>\n<p>Should <code>CondBrKind</code> be moved into ISLE? This seems like a lot of code to write to glue the non-ISLE definition in with the ISLE code. Doesn't need to happen in this PR (or at all) unless you want, but just something I though of when looking at this code.</p>\n</blockquote>",
        "id": 264739988,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639416231
    },
    {
        "content": "<p>alexcrichton updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572\">PR #3572</a> from <code>isle-4-sdiv-udiv-srem-urem</code> to <code>main</code>.</p>",
        "id": 264781141,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639435107
    },
    {
        "content": "<p>alexcrichton submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#pullrequestreview-830832530\">PR review</a>.</p>",
        "id": 264781214,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639435150
    },
    {
        "content": "<p>alexcrichton created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572#discussion_r768177136\">PR review comment</a>:</p>\n<blockquote>\n<p>Currently <code>CondBrKind</code> is pretty heavily used it looks like in the backend and since ISLE can only generate named-field enums instead of tuple-enums like <code>CondBrKind</code> is today I think I'll leave it defined externally, but I agree this'd be a good future cleanup!</p>\n</blockquote>",
        "id": 264781215,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639435150
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/3572\">PR #3572</a>.</p>",
        "id": 264785770,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1639438033
    }
]