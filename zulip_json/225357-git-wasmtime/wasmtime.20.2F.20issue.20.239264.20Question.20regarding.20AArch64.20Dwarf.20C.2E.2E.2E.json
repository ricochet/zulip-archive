[
    {
        "content": "<p>matlo607 opened <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9264\">issue #9264</a>:</p>\n<blockquote>\n<h4>Question goal</h4>\n<p>Clarification about the current usage of the DWARF CFI directive <code>DW_CFA_val_expression</code> by the project for the purpose of unwinding on AArch64 with Pointer Authentication enabled (i.e. <code>-march=&lt;arch&gt; -mbranch-protection=pac-ret</code>).</p>\n<h4>References</h4>\n<ul>\n<li>#3183 at the origin of the GCC ticket.</li>\n<li><a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=104689\">Bug 104689</a> opened by @akirilov-arm - aarch64: libgcc: <code>DW_CFA_val_expression</code> is not supported for RA_SIGN_SATE register</li>\n<li>#4195 implemented by @akirilov-arm using <code>.cfi_window_save</code> (a.k.a. <code>.cfi_negate_ra_state</code>) instead of <code>DW_CFA_val_expression</code> to set the RA state.</li>\n</ul>\n<h4>Details</h4>\n<p>Today, <code>DW_CFA_val_expression</code> is supposedly only used for backtracing in the Cranelift project.<br>\nAt the end in #4195, @akirilov-arm didn't use <code>DW_CFA_val_expression</code> to set the RA state register.<br>\nThe code seems to have evolved since then and moved to <a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/crates/fiber/src/unix/aarch64.rs\">https://github.com/bytecodealliance/wasmtime/blob/main/crates/fiber/src/unix/aarch64.rs</a>.<br>\nThis code uses  <code>.cfi_window_save</code>, so no <code>DW_CFA_val_expression</code> are emitted.</p>\n<h4>Question</h4>\n<p>As a conclusion, the project doesn't seem to use the exotic setting of the RA state register that was requested in <a href=\"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=104689\">Bug 104689</a>.<br>\nIs my understanding correct ?<br>\nIs it an issue for you if GCC's AArch64 backend removes the support for setting the RA state register with <code>DW_CFA_val_expression</code> ?<br>\n</p>\n</blockquote>",
        "id": 470973077,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726578353
    },
    {
        "content": "<p>akirilov-arm <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9264#issuecomment-2359146862\">commented</a> on <a href=\"https://github.com/bytecodealliance/wasmtime/issues/9264\">issue #9264</a>:</p>\n<blockquote>\n<p>It has been a while since I have worked on Cranelift, but as far as I can tell, the compiler still <a href=\"https://github.com/bytecodealliance/wasmtime/blob/37ed724c9da2ee5a516923cf221ade19b78f63eb/cranelift/codegen/src/isa/aarch64/abi.rs#L572\">uses</a> the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/37ed724c9da2ee5a516923cf221ade19b78f63eb/cranelift/codegen/src/isa/unwind/systemv.rs#L115\">same DWARF CFI directive</a> when generating function prologues.</p>\n<p>The fiber implementation that you have looked at is something completely separate.</p>\n</blockquote>",
        "id": 471322826,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1726684193
    }
]