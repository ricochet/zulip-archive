[
    {
        "content": "<p>tnachen opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>:</p>\n<blockquote>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 311771984,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669190955
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1191965000\">PR review</a>.</p>",
        "id": 311873629,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669225032
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1191965000\">PR review</a>.</p>",
        "id": 311873630,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669225032
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1030714531\">PR review comment</a>:</p>\n<blockquote>\n<p>This isn't important, but I personally prefer to not use a closure if it's just passing its argument to a function or a tuple constructor. Like this:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        self.0.checked_sub(1).map(Sig)\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 311873631,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669225032
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1030720061\">PR review comment</a>:</p>\n<blockquote>\n<p>This version of <code>num_args</code> would be slightly simpler if it looked more like the old definition of <code>Caller::num_args</code>:</p>\n<p><div class=\"codehilite\" data-code-language=\"suggestion\"><pre><span></span><code>        let len = self.args(sig).len();\n        if self.sigs[sig].stack_ret_arg.is_some() {\n            len - 1\n        } else {\n            len\n        }\n</code></pre></div><br>\n</p>\n</blockquote>",
        "id": 311873632,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669225032
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1030721333\">PR review comment</a>:</p>\n<blockquote>\n<p>The result of calling <code>slice::len</code> is a <code>usize</code>, so this call to <code>usize::from</code> isn't necessary in this version.</p>\n</blockquote>",
        "id": 311873633,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669225033
    },
    {
        "content": "<p>tnachen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>.</p>",
        "id": 311874557,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669225420
    },
    {
        "content": "<p>tnachen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>.</p>",
        "id": 311874597,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669225438
    },
    {
        "content": "<p>tnachen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>.</p>",
        "id": 311877034,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669226336
    },
    {
        "content": "<p>tnachen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>.</p>",
        "id": 312125626,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669359365
    },
    {
        "content": "<p>tnachen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>.</p>",
        "id": 312127148,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669360367
    },
    {
        "content": "<p>tnachen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>.</p>",
        "id": 312127469,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669360578
    },
    {
        "content": "<p>tnachen edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>:</p>\n<blockquote>\n<p>Addressing #5183<br>\n&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;<br>\n</p>\n</blockquote>",
        "id": 312234309,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669398623
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1196415272\">PR review</a>.</p>",
        "id": 312704158,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663338
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1196415272\">PR review</a>.</p>",
        "id": 312704159,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663338
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1033957049\">PR review comment</a>:</p>\n<blockquote>\n<p>Pre-existing, but since <code>Sig</code> is now a newtype wrapper around <code>u32</code> and is <code>Copy</code>, we should probably just take an arg <code>abi: Sig</code> and avoid this dereference.</p>\n</blockquote>",
        "id": 312704160,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663338
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1033959090\">PR review comment</a>:</p>\n<blockquote>\n<p>Can we add a note here on the indexing scheme? Something like \"Arguments for a given <code>sig</code> are in the args array at indicies <code>args_end[sig - 1]..args_end[sig]</code>, or <code>0..args_end[sig]</code> if <code>sig</code> is <code>0</code>.</p>\n<p>(And the <code>args_end</code> value is an exclusive endpoint, i.e. not included, so <code>..</code> above is correct, right?)</p>\n</blockquote>",
        "id": 312704161,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663338
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1033960569\">PR review comment</a>:</p>\n<blockquote>\n<p>Or, reading more below, I guess it's a little more complex because args and rets are contiguous for a given <code>Sig</code>, but we should give the appropriate ranges here and describe the scheme regardless.</p>\n</blockquote>",
        "id": 312704162,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663339
    },
    {
        "content": "<p>cfallin edited <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1033959090\">PR review comment</a>.</p>",
        "id": 312704273,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663383
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1196435749\">PR review</a>.</p>",
        "id": 312705859,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663933
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1033970518\">PR review comment</a>:</p>\n<blockquote>\n<p>I had @tnachen make some changes along these lines in a previous PR, but I decided not to ask for that in function signatures that weren't otherwise changed in this PR.</p>\n<p>It would be a good follow-up PR to fix all the functions that currently take <code>&amp;Sig</code> to take <code>Sig</code> instead. I currently see examples in <code>cranelift/codegen/src/isa/s390x/lower/isle.rs</code>, <code>cranelift/codegen/src/machinst/abi.rs</code>, and <code>cranelift/codegen/src/machinst/isle.rs</code>.</p>\n</blockquote>",
        "id": 312705860,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669663933
    },
    {
        "content": "<p>tnachen updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a> from <code>tnachen/sigdata_size</code> to <code>main</code>.</p>",
        "id": 313000333,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669793145
    },
    {
        "content": "<p>tnachen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1035614212\">PR review comment</a>:</p>\n<blockquote>\n<p>@cfallin added more comments, let me know if this looks good?</p>\n</blockquote>",
        "id": 313000971,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669793427
    },
    {
        "content": "<p>tnachen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1198806343\">PR review</a>.</p>",
        "id": 313000972,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669793427
    },
    {
        "content": "<p>tnachen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1198806603\">PR review</a>.</p>",
        "id": 313000998,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669793441
    },
    {
        "content": "<p>tnachen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1035614388\">PR review comment</a>:</p>\n<blockquote>\n<p>Sg will make these changes after this one merged</p>\n</blockquote>",
        "id": 313001000,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669793441
    },
    {
        "content": "<p>cfallin created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1036104421\">PR review comment</a>:</p>\n<blockquote>\n<p>Looks great, thanks!</p>\n</blockquote>",
        "id": 313082854,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669821517
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1199524026\">PR review</a>.</p>",
        "id": 313082855,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669821517
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1199525811\">PR review</a>.</p>",
        "id": 313083028,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669821574
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319\">PR #5319</a>.</p>",
        "id": 313083061,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1669821584
    },
    {
        "content": "<p>tnachen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1203319750\">PR review</a>.</p>",
        "id": 313628862,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670039876
    },
    {
        "content": "<p>tnachen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1038688580\">PR review comment</a>:</p>\n<blockquote>\n<p>I try to make this change but looks like &amp;Sig is generated from isle as generated code, and all non-primitive types declared as arg funcs in isle seems to be all generated as references. Should we leave this or try to change how isle code gen works?</p>\n</blockquote>",
        "id": 313628863,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670039876
    },
    {
        "content": "<p>tnachen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1203320084\">PR review</a>.</p>",
        "id": 313629090,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670040029
    },
    {
        "content": "<p>tnachen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1038688916\">PR review comment</a>:</p>\n<blockquote>\n<p>Or change (type Sig extern (enum)) into (type Sig (primitive u32)) ?<br>\n</p>\n</blockquote>",
        "id": 313629092,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670040029
    },
    {
        "content": "<p>tnachen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1203323999\">PR review</a>.</p>",
        "id": 313629179,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670040095
    },
    {
        "content": "<p>tnachen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1038690468\">PR review comment</a>:</p>\n<blockquote>\n<p>Actually that doesn't work as it only generate args with u32 and not Sig anymore</p>\n</blockquote>",
        "id": 313629180,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670040095
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1041390342\">PR review comment</a>:</p>\n<blockquote>\n<p>Oh, I see! I just learned how ISLE decides when to borrow last week while I've been rewriting its code generation, so this hadn't occurred to me.</p>\n<p>It isn't important to get rid of the <code>&amp;Sig</code> borrows. But if you'd like to try working on the ISLE compiler, I think I can now guide you through fixing this. Let me know if you're interested; if so, I'll write up a plan.</p>\n</blockquote>",
        "id": 314313147,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670356077
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1207213463\">PR review</a>.</p>",
        "id": 314313149,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670356077
    },
    {
        "content": "<p>tnachen submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1207917147\">PR review</a>.</p>",
        "id": 314393637,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670398906
    },
    {
        "content": "<p>tnachen created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1041859757\">PR review comment</a>:</p>\n<blockquote>\n<p>@jameysharp I'm game! I think I kind of have a idea looking at a codebase, but I'm still new :) </p>\n</blockquote>",
        "id": 314393639,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670398907
    },
    {
        "content": "<p>jameysharp submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#pullrequestreview-1212778891\">PR review</a>.</p>",
        "id": 315268497,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670803137
    },
    {
        "content": "<p>jameysharp created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/5319#discussion_r1045320964\">PR review comment</a>:</p>\n<blockquote>\n<p>So I looked into this more, and I think this doesn't need ISLE compiler changes. I think it should work to change <code>(type Sig extern (enum))</code> to <code>(type Sig (primitive Sig))</code> and then fix the hand-written parts to match. Do you want to give that a try?</p>\n</blockquote>",
        "id": 315268498,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1670803137
    }
]