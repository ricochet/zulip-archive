[
    {
        "content": "<p>cfallin opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582\">PR #1582</a> (assigned to bnjbvr) from <code>aarch64-fcopysign</code> to <code>master</code>:</p>\n<blockquote>\n<p>Previously, <code>fcopysign</code> was mysteriously failing to pass the<br>\n<code>float_misc</code> spec test. This was tracked down to bad logical-immediate<br>\nmasks used to separate the sign and not-sign bits. In particular, the<br>\nmasks for the and-not operations were wrong. The <code>invert()</code> function on<br>\nan <code>ImmLogic</code> immediate, it turns out, assumed every immediate would be<br>\nused by a 64-bit instruction; <code>ImmLogic</code> immediates are subtly different<br>\nfor 32-bit instructions. This change tracks the instruction size (32 or<br>\n64 bits) intended for use with each such immediate, and passes it back<br>\ninto <code>maybe_from_u64</code> when computing the inverted immediate.</p>\n<p>Addresses one of the failures (<code>float_misc</code>) for #1521 (test failures)<br>\nand presumably helps #1519 (SpiderMonkey integration).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 195010946,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587605715
    },
    {
        "content": "<p>cfallin assigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582\">PR #1582</a> to bnjbvr.</p>",
        "id": 195010947,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587605715
    },
    {
        "content": "<p>cfallin assigned <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582\">PR #1582</a> to bnjbvr.</p>",
        "id": 195010948,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587605715
    },
    {
        "content": "<p>jgouly submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398901635\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398901635\">PR Review</a>.</p>",
        "id": 195034398,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587632738
    },
    {
        "content": "<p>jgouly submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398901635\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398901635\">PR Review</a>.</p>",
        "id": 195034399,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587632738
    },
    {
        "content": "<p>jgouly created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582#discussion_r413642728\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582#discussion_r413642728\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Can we just get rid of from_raw() and use maybe_from_u64().unwrap()?</p>\n</blockquote>",
        "id": 195034400,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587632738
    },
    {
        "content": "<p>jgouly submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398911816\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398911816\">PR Review</a>.</p>",
        "id": 195035438,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587633374
    },
    {
        "content": "<p>jgouly created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582#discussion_r413651770\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582#discussion_r413651770\">PR Review Comment</a>:</p>\n<blockquote>\n<p>This fixes f32 and f64 _bitwise.</p>\n</blockquote>",
        "id": 195035439,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587633374
    },
    {
        "content": "<p>bnjbvr submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398930287\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582#pullrequestreview-398930287\">PR Review</a>.</p>",
        "id": 195037588,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587634784
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582\">PR #1582</a> (assigned to bnjbvr) from <code>aarch64-fcopysign</code> to <code>master</code>:</p>\n<blockquote>\n<p>Previously, <code>fcopysign</code> was mysteriously failing to pass the<br>\n<code>float_misc</code> spec test. This was tracked down to bad logical-immediate<br>\nmasks used to separate the sign and not-sign bits. In particular, the<br>\nmasks for the and-not operations were wrong. The <code>invert()</code> function on<br>\nan <code>ImmLogic</code> immediate, it turns out, assumed every immediate would be<br>\nused by a 64-bit instruction; <code>ImmLogic</code> immediates are subtly different<br>\nfor 32-bit instructions. This change tracks the instruction size (32 or<br>\n64 bits) intended for use with each such immediate, and passes it back<br>\ninto <code>maybe_from_u64</code> when computing the inverted immediate.</p>\n<p>Addresses one of the failures (<code>float_misc</code>) for #1521 (test failures)<br>\nand presumably helps #1519 (SpiderMonkey integration).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 195111345,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587671613
    },
    {
        "content": "<p>cfallin updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582\">PR #1582</a> (assigned to bnjbvr) from <code>aarch64-fcopysign</code> to <code>master</code>:</p>\n<blockquote>\n<p>Previously, <code>fcopysign</code> was mysteriously failing to pass the<br>\n<code>float_misc</code> spec test. This was tracked down to bad logical-immediate<br>\nmasks used to separate the sign and not-sign bits. In particular, the<br>\nmasks for the and-not operations were wrong. The <code>invert()</code> function on<br>\nan <code>ImmLogic</code> immediate, it turns out, assumed every immediate would be<br>\nused by a 64-bit instruction; <code>ImmLogic</code> immediates are subtly different<br>\nfor 32-bit instructions. This change tracks the instruction size (32 or<br>\n64 bits) intended for use with each such immediate, and passes it back<br>\ninto <code>maybe_from_u64</code> when computing the inverted immediate.</p>\n<p>Addresses one of the failures (<code>float_misc</code>) for #1521 (test failures)<br>\nand presumably helps #1519 (SpiderMonkey integration).</p>\n<p>&lt;!--</p>\n<p>Please ensure that the following steps are all taken care of before submitting<br>\nthe PR.</p>\n<ul>\n<li>\n<p>[ ] This has been discussed in issue #..., or if not, please tell us why<br>\n  here.</p>\n</li>\n<li>\n<p>[ ] A short description of what this does, why it is needed; if the<br>\n  description becomes long, the matter should probably be discussed in an issue<br>\n  first.</p>\n</li>\n<li>\n<p>[ ] This PR contains test cases, if meaningful.</p>\n</li>\n<li>[ ] A reviewer from the core maintainer team has been assigned for this PR.<br>\n  If you don't know who could review this, please indicate so. The list of<br>\n  suggested reviewers on the right can help you.</li>\n</ul>\n<p>Please ensure all communication adheres to the <a href=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\" title=\"https://github.com/bytecodealliance/wasmtime/blob/master/CODE_OF_CONDUCT.md\">code of\nconduct</a>.<br>\n--&gt;</p>\n</blockquote>",
        "id": 195112827,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587672381
    },
    {
        "content": "<p>cfallin merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/1582\" title=\"https://github.com/bytecodealliance/wasmtime/pull/1582\">PR #1582</a>.</p>",
        "id": 195116887,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1587674569
    }
]