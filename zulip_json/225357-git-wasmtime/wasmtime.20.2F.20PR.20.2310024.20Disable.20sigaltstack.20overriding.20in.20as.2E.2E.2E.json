[
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/pchickey\">pchickey</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10024\">PR #10024</a>.</p>",
        "id": 494013093,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736973934
    },
    {
        "content": "<p><strong>alexcrichton</strong> requested <a href=\"https://github.com/orgs/bytecodealliance/teams/wasmtime-core-reviewers\">wasmtime-core-reviewers</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10024\">PR #10024</a>.</p>",
        "id": 494013094,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736973934
    },
    {
        "content": "<p>alexcrichton opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10024\">PR #10024</a> from <code>alexcrichton:fix-fuzz-issue</code> to <code>bytecodealliance:main</code>:</p>\n<blockquote>\n<p>This commit is an attempt to fix a number of flaky crashes that we've been seeing on OSS-Fuzz for some time now. These crashes only reproduce under ASAN and even then have been spotty to reproduce. The current thinking is that a test with threads (e.g. only <code>wast_tests</code> using some of the threads spec tests) is required to run some wasm which will register a <code>sigaltstack</code>. Destruction of this <code>sigaltstack</code> happens with TLS destructors which seems to have a bad interaction with ASAN state additionally being destroyed around that time.</p>\n<p>This whole interaction means that no one test case is enough to reproduce the corruption. Many crashes on OSS-Fuzz are likely due to \"some historical test case spawned a thread\" which corrupted something to crash later. The test case that I can reproduce with locally requires rerunning it in the same process a few thousand times to get a reproduction.</p>\n<p>The purpose of the <code>sigaltstack</code> is to ensure that we have a big enough stack, primarily in debug mode, for testing if a trap is wasm. The hope is that this extra size of the Rust-standard-library-default's stack size is not necessary in release mode with ASAN. In the end time will tell with OSS-Fuzz to see if we can keep this or if we need to both install a bigger sigaltstack in addition to managing them differently in ASAN builds.</p>\n<p>&lt;!--<br>\nPlease make sure you include the following information:</p>\n<ul>\n<li>\n<p>If this work has been discussed elsewhere, please include a link to that<br>\n  conversation. If it was discussed in an issue, just mention \"issue #...\".</p>\n</li>\n<li>\n<p>Explain why this change is needed. If the details are in an issue already,<br>\n  this can be brief.</p>\n</li>\n</ul>\n<p>Our development process is documented in the Wasmtime book:<br>\n<a href=\"https://docs.wasmtime.dev/contributing-development-process.html\">https://docs.wasmtime.dev/contributing-development-process.html</a></p>\n<p>Please ensure all communication follows the code of conduct:<br>\n<a href=\"https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md\">https://github.com/bytecodealliance/wasmtime/blob/main/CODE_OF_CONDUCT.md</a><br>\n--&gt;</p>\n</blockquote>",
        "id": 494013096,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736973934
    },
    {
        "content": "<p>cfallin submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10024#pullrequestreview-2554105966\">PR review</a>:</p>\n<blockquote>\n<p>LGTM -- Alex, Nick and I talked about this offline for a bit today. Thanks a bunch for root-causing this -- was very mysterious!</p>\n</blockquote>",
        "id": 494025068,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736978589
    },
    {
        "content": "<p>alexcrichton merged <a href=\"https://github.com/bytecodealliance/wasmtime/pull/10024\">PR #10024</a>.</p>",
        "id": 494029239,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1736980413
    }
]