[
    {
        "content": "<p>sunfishcode opened <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204431876,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595256674
    },
    {
        "content": "<p><strong>sunfishcode</strong> requested <a href=\"https://github.com/kubkon\">kubkon</a> for a review on <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a>.</p>",
        "id": 204431878,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595256674
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204436170,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595258552
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204446046,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595263545
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204449218,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595265239
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204449479,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595265355
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204965313,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595623879
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204966999,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595624838
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204967765,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595625341
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204969326,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595626429
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204971369,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595628201
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204972199,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595628869
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 204973410,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595630066
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 205284524,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1595967087
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 205974208,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1596584629
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#pullrequestreview-464487310\">PR Review</a>.</p>",
        "id": 206499896,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468108651\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Hmm, why is this cast suddenly needed here?</p>\n</blockquote>",
        "id": 206499897,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>kubkon submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#pullrequestreview-464487310\">PR Review</a>.</p>",
        "id": 206499898,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468108772\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ditto.</p>\n</blockquote>",
        "id": 206499899,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468109651\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Out of curiosity, what is <code>l4re</code>?</p>\n</blockquote>",
        "id": 206499900,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468109187\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Do we need to <code>as</code> cast here at all?</p>\n</blockquote>",
        "id": 206499901,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468111568\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Have you verified this is the case on different BSD flavours perhaps?</p>\n</blockquote>",
        "id": 206499902,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>kubkon created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468113060\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Is this loop necessary for actual OSes? I thought that <code>libc::PATH_MAX</code> existed for a reason and the OS would never return a path that is actually longer, or am I missing something here?</p>\n<p>On WASI, it makes sense to loop since we AFAIK we don't have the concept of a <code>PATH_MAX</code> since it's so platform-dependent and could actually leak what host we're running on, but I'm not sure this loop is at all necessary on actual OSes. Plus, doesn't it lead to unnecessary allocs which could have been easily handled using static buffers instead like it was prior to this change?</p>\n</blockquote>",
        "id": 206499903,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597086212
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#pullrequestreview-464611600\">PR Review</a>.</p>",
        "id": 206517753,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096131
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468205121\">PR Review Comment</a>:</p>\n<blockquote>\n<p>WASI's <code>RawFd</code> is <code>u32</code>. <code>libc::fdopendir</code> takes a <code>c_int</code>, which is signed <code>i32</code>.</p>\n</blockquote>",
        "id": 206517754,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096131
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468206047\">PR Review Comment</a>:</p>\n<blockquote>\n<p>As above, <code>RawFd</code> is a <code>u32</code> on WASI.</p>\n</blockquote>",
        "id": 206517926,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096248
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#pullrequestreview-464612629\">PR Review</a>.</p>",
        "id": 206517927,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096248
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#pullrequestreview-464613961\">PR Review</a>.</p>",
        "id": 206518123,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096400
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468207178\">PR Review Comment</a>:</p>\n<blockquote>\n<p>It's a microkernel with L4 ancestry. It's just here because I looked that Rust's <code>libc</code> crate to see which platforms needed this, and it was one of them.</p>\n</blockquote>",
        "id": 206518124,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096400
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#pullrequestreview-464616993\">PR Review</a>.</p>",
        "id": 206518585,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096748
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468209678\">PR Review Comment</a>:</p>\n<blockquote>\n<p>Ah, yes. FreeBSD's <code>readdir</code> says:</p>\n<blockquote>\n<p>The function returns NULL upon<br>\n     reaching the end of the directory or on error.  In the event of an error,<br>\n     errno may be set to any of the values documented for the getdirentries(2)<br>\n     system call.</p>\n</blockquote>\n<p>The Unix convention for situatuations like this is to set errno to 0 before the call, and check if it's non-zero after the call. POSIX's description of <code>readdir</code> makes this explicit:</p>\n<blockquote>\n<p>Applications wishing to check for error situations should set errno to 0 before calling readdir(). If errno is set to non-zero on return, an error occurred.</p>\n</blockquote>\n</blockquote>",
        "id": 206518586,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597096748
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 206523670,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597100763
    },
    {
        "content": "<p>sunfishcode submitted <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#pullrequestreview-464645627\">PR Review</a>.</p>",
        "id": 206523735,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597100843
    },
    {
        "content": "<p>sunfishcode created <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046#discussion_r468233824\">PR Review Comment</a>:</p>\n<blockquote>\n<p>For WASI, I want to avoid PATH_MAX because the actual value of PATH_MAX depends on the underlying host OS, so it's better for WASI code to avoid making size assumptions. But you're right that other platforms don't need this. I've now made this code conditional to restore stack allocation.</p>\n</blockquote>",
        "id": 206523736,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597100843
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 206524142,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597101157
    },
    {
        "content": "<p>sunfishcode updated <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a> from <code>yanix-wasi</code> to <code>main</code>:</p>\n<blockquote>\n<p>This is a series of patches which begin porting yanix to WASI, and which contain various other fixes needed for using yanix outside of Wasmtime in general.</p>\n</blockquote>",
        "id": 207148623,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1597673615
    },
    {
        "content": "<p>sunfishcode closed without merge <a href=\"https://github.com/bytecodealliance/wasmtime/pull/2046\">PR #2046</a>.</p>",
        "id": 211759021,
        "sender_full_name": "Wasmtime GitHub notifications bot",
        "timestamp": 1601472628
    }
]